
=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
1 (*) : ----11--
1     : ['message(node1,node0)', 'message(node1,node1)']
2     : --11----
2     : ['message(node0,node0)', 'message(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~message(NODE0,NODE0) | ~message(NODE0,NODE1) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
3 (*) : -1--1---
3     : ['has_lock(node1)', 'message(node1,node0)']
4     : 1--1----
4     : ['has_lock(node0)', 'message(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~has_lock(NODE0) | ~message(NODE0,NODE1) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 3 =====================
size : 2
num_suborbits: 1
5 (*) : 1---1---
5     : ['has_lock(node0)', 'message(node1,node0)']
6     : -1-1----
6     : ['has_lock(node1)', 'message(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~has_lock(NODE0) | ~message(NODE1,NODE0) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 4 =====================
size : 2
num_suborbits: 1
7 (*) : --1-1---
7     : ['message(node0,node0)', 'message(node1,node0)']
8     : ---1-1--
8     : ['message(node0,node1)', 'message(node1,node1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~message(NODE0,NODE0) | ~message(NODE1,NODE0) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 5 =====================
size : 1
num_suborbits: 1
9 (*) : ---11---
9     : ['message(node0,node1)', 'message(node1,node0)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~message(NODE1,NODE0) | ~message(NODE0,NODE1) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 7 =====================
size : 1
num_suborbits: 1
11 (*) : 11------
11     : ['has_lock(node0)', 'has_lock(node1)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists NODE0. ~has_lock(NODE0)
qcost : 2


=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
12 (*) : 1-1-----
12     : ['has_lock(node0)', 'message(node0,node0)']
13     : -1---1--
13     : ['has_lock(node1)', 'message(node1,node1)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~has_lock(NODE0) | ~message(NODE0,NODE0)
qcost : 3


=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
14 (*) : -11-----
14     : ['has_lock(node1)', 'message(node0,node0)']
15     : 1----1--
15     : ['has_lock(node0)', 'message(node1,node1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~has_lock(NODE0) | ~message(NODE1,NODE1) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 10 =====================
size : 1
num_suborbits: 1
16 (*) : --1--1--
16     : ['message(node0,node0)', 'message(node1,node1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~message(NODE0,NODE0) | ~message(NODE1,NODE1) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 11 =====================
size : 1
num_suborbits: 1
17 (*) : 000000--
17     : ['~has_lock(node0)', '~has_lock(node1)', '~message(node0,node0)', '~message(node0,node1)', '~message(node1,node0)', '~message(node1,node1)']
num_forall :   0
num_exists :   2
num_literals : 2
quantified form : exists NODE1,NODE0. has_lock(NODE0) | message(NODE0,NODE1)
qcost : 4

