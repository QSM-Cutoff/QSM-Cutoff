
*********************************************************

	[QRM]: ivybench/sym/ivy/Consensus.ivy

*********************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


======================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/Consensus.ivy: value=3]

======================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 3

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 6

[FW NOTE]: number of branching actions: 3

ivy_to_cpp target=qrm Consensus.value_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o Consensus.value_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 Consensus.value_3.finite.cpp Consensus.value_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared Consensus.value_3.finite.o Consensus.value_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 11.914 seconds

[QRM NOTE]: Time elapsed since last: 11.914 seconds

[QRM NOTE]: Peak memory: 1174727 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 1

[FW NOTE]: number of total reachable states:        4

[FW NOTE]: number of dfs representative states:     2

[FW NOTE]: number of dfs non-representative states: 2


=============================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/Consensus.ivy: value=3]

=============================================================================================

sort: value=['value0', 'value1', 'value2']
predicate: chosen('value',)
interpreted atoms: {}
state atoms: ['chosen(value0)', 'chosen(value1)', 'chosen(value2)']
representative states : 0, 1


=== State Orbit 0 =====================
size : 1
repr state: 000
lex min decimal: 0
states:
000




=== State Orbit 1 =====================
size : 3
repr state: 100
lex min decimal: 1
states:
001
010
100



[QRM NOTE]: Time elapsed since start: 11.989 seconds

[QRM NOTE]: Time elapsed since last: 0.075 seconds

[QRM NOTE]: Peak memory: 1199436 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 11.989 seconds

[QRM NOTE]: Time elapsed since last: 0.000 seconds

[QRM NOTE]: Peak memory: 149836 bytes


=============================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/Consensus.ivy: value=3]

=============================================================================================


========================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/Consensus.ivy: value=3]

========================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : 11-
0     : ['chosen(value0)', 'chosen(value1)']
1     : 1-1
1     : ['chosen(value0)', 'chosen(value2)']
2     : -11
2     : ['chosen(value1)', 'chosen(value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 1

[PRIME NOTE]: number of orbits before merging: 1

[PRIME NOTE]: number of primes: 3

[QRM NOTE]: Time elapsed since start: 11.996 seconds

[QRM NOTE]: Time elapsed since last: 0.007 seconds

[QRM NOTE]: Peak memory: 1205567 bytes


==================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/Consensus.ivy: value=3]

==================================================================================

definition primes: set()


New level: 0
 pending : [0]
 solution : []


Before reduction : 
 pending  : [0]
 solution : []

Essensial at level 0 : {0}

Before removed
 coverage : [(0, -1)]

After removed
 coverage : [(0, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : []
 solution : [0]


Before reduction : 
 pending  : []
 solution : [0]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1)]

After removed
 coverage : [(0, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : []
 solution : [0]

[QRM NOTE]: Time elapsed since start: 11.998 seconds

[QRM NOTE]: Time elapsed since last: 0.001 seconds

[QRM NOTE]: Peak memory: 158034 bytes


======================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/Consensus.ivy: value=3]

======================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : 11-
0     : ['chosen(value0)', 'chosen(value1)']
1     : 1-1
1     : ['chosen(value0)', 'chosen(value2)']
2     : -11
2     : ['chosen(value1)', 'chosen(value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosen(value0)', 'chosen(value1)']

sign_func_name2args: {'0$chosen': [(Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))),), (Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)]}

const2sigs: {Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$chosen$0$0], Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$chosen$0$1]}

sig2const: {'value$0$chosen$0$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'value$0$chosen$0$1': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$chosen$0$0, value$0$chosen$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$chosen$0$0 | value$0$chosen$0$1}

part_sig: ('value$0$chosen$0$0 | value$0$chosen$0$1',)


---------- SigGenerator ----------

terms:  ['chosen(value0)', 'chosen(value1)']

func_name2symbol:  {'chosen': Const('chosen', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'chosen': (EnumeratedSort('value', ('value0', 'value1', 'value2')),)}

sign_func_name2count:  {'0$chosen': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$chosen$0$0, value$0$chosen$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$chosen$0$0 | value$0$chosen$0$1}

	sort: value

	identical_classes: {'value$0$chosen$0': [value$0$chosen$0$0, value$0$chosen$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'value$0$chosen$0': [value$0$chosen$0$0, value$0$chosen$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosen': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosen(VALUE1)', 'chosen(VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall VALUE0,VALUE1. ~chosen(VALUE1) | ~chosen(VALUE0) | VALUE0 = VALUE1


================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/Consensus.ivy: value=3]

================================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : 11-
0     : ['chosen(value0)', 'chosen(value1)']
1     : 1-1
1     : ['chosen(value0)', 'chosen(value2)']
2     : -11
2     : ['chosen(value1)', 'chosen(value2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall VALUE0,VALUE1. ~chosen(VALUE1) | ~chosen(VALUE0) | VALUE0 = VALUE1
qcost : 5



[QRM NOTE]: Time elapsed since start: 12.495 seconds

[QRM NOTE]: Time elapsed since last: 0.497 seconds

[QRM NOTE]: Peak memory: 1921041 bytes


===============================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/Consensus.ivy: value=3]

===============================================================================


New level: 1
 pending : []
 solution : [0]


Before reduction : 
 pending  : []
 solution : [0]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1)]

After removed
 coverage : [(0, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : []
 solution : [0]


Solution : [0] has cost 5.


Before backtrack at level 1
 pending : []
 solution : [0]

After backtrack at level 1
 pending : []
 solution : [0]


==============================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/Consensus.ivy: value=3]

==============================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 5

[MIN NOTE]: maximum branch and bound depth: 1

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0]

[MIN NOTE]: solution length: 1

invariant [invar_0] forall VALUE0,VALUE1. ~chosen(VALUE1) | ~chosen(VALUE0) | VALUE0 = VALUE1 # qcost: 5

[MIN NOTE]: number of total invariants: 1

[MIN NOTE]: total qCost: 5




[QRM NOTE]: Time elapsed since start: 12.535 seconds

[QRM NOTE]: Time elapsed since last: 0.040 seconds

[QRM NOTE]: Peak memory: 1910087 bytes


=============================================

	[IVY_CHECK] Ivy Check for Rmin

=============================================


===================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym/ivy/Consensus.value_3.0.ivy]

===================================================================================

ivy_check complete=fo ivybench/sym/ivy/Consensus.value_3.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/Consensus.value_3.0.ivy: line 20: invar_0

    The following action implementations are present:
        ivybench/sym/ivy/Consensus.value_3.0.ivy: line 11: implementation of choose

    The following initializers are present:
        ivybench/sym/ivy/Consensus.value_3.0.ivy: line 8: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/Consensus.value_3.0.ivy: line 20: invar_0 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:choose
            ivybench/sym/ivy/Consensus.value_3.0.ivy: line 20: invar_0 ... PASS

    The following program assertions are treated as assumptions:
        in action choose when called from the environment:
            ivybench/sym/ivy/Consensus.value_3.0.ivy: line 12: assumption

OK
[IVY_CHECK RESULT]: PASS


====================================================================================================

	[MUS]: Extract strengthening assertion for [ivybench/sym/ivy/Consensus.value_3.0.ivy]

====================================================================================================

[MUS NOTE]: number of strengthening assertions: 0

[MUS NOTE]: min mus: set()


==========================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym/ivy/Consensus.value_3.0.assert.ivy]

==========================================================================================

ivy_check complete=fo ivybench/sym/ivy/Consensus.value_3.0.assert.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/Consensus.value_3.0.assert.ivy: line 18: safety

    The following action implementations are present:
        ivybench/sym/ivy/Consensus.value_3.0.assert.ivy: line 11: implementation of choose

    The following initializers are present:
        ivybench/sym/ivy/Consensus.value_3.0.assert.ivy: line 8: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/Consensus.value_3.0.assert.ivy: line 18: safety ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:choose
            ivybench/sym/ivy/Consensus.value_3.0.assert.ivy: line 18: safety ... PASS

    The following program assertions are treated as assumptions:
        in action choose when called from the environment:
            ivybench/sym/ivy/Consensus.value_3.0.assert.ivy: line 12: assumption

OK
[IVY_CHECK RESULT]: PASS

[ASSERT_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 16.545 seconds

[QRM NOTE]: Time elapsed since last: 4.011 seconds

[QRM NOTE]: Peak memory: 1940845 bytes


*********************************************************

	[QRM]: ivybench/sym/ivy/Consensus.ivy

*********************************************************

[QRM RESULT]: PASS

