
**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


=================================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=================================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 27

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 36

[FW NOTE]: number of branching actions: 21

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_3.finite.cpp simple-election.acceptor_3_proposer_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_3.finite.o simple-election.acceptor_3_proposer_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 6.824 seconds

[QRM NOTE]: Time elapsed since last: 6.824 seconds

[QRM NOTE]: Peak memory: 1197193 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 7

[FW NOTE]: number of total reachable states:        254

[FW NOTE]: number of dfs representative states:     26

[FW NOTE]: number of dfs non-representative states: 228


========================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

========================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: leader('proposer',)
predicate: member('acceptor', 'quorum')
predicate: start('proposer',)
predicate: promise('acceptor', 'proposer')
predicate: chosenAt('quorum', 'proposer')
predicate: didNotPromise('acceptor',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']
representative states : 117440939, 117441451, 117442475, 117444523, 50597803, 201367467, 9798197163, 9800294315, 134782891, 136880043, 203464619, 17108907, 348075, 50595755, 201365419, 9798195115, 9800292267, 134780843, 136877995, 203462571, 17106859, 50594731, 201364395, 9798194091, 9800291243, 203461547


=== State Orbit 0 =====================
size : 1
repr state: 000000000111000000000000000
lex min decimal: 117440939
states:
000000000111000000000000000




=== State Orbit 1 =====================
size : 3
repr state: 000000000111000000000000100
lex min decimal: 117441451
states:
000000000111000000000000001
000000000111000000000000100
000000000111000000000000010




=== State Orbit 2 =====================
size : 3
repr state: 000000000111000000000000110
lex min decimal: 117442475
states:
000000000111000000000000011
000000000111000000000000101
000000000111000000000000110




=== State Orbit 3 =====================
size : 1
repr state: 000000000111000000000000111
lex min decimal: 117444523
states:
000000000111000000000000111




=== State Orbit 4 =====================
size : 9
repr state: 000000000011000100000000111
lex min decimal: 50597803
states:
000000000011000001000000111
000000000110000000000001111
000000000011000010000000111
000000000011000100000000111
000000000101000000100000111
000000000101000000010000111
000000000110000000000100111
000000000101000000001000111
000000000110000000000010111




=== State Orbit 5 =====================
size : 9
repr state: 100000000001000100100000111
lex min decimal: 201367467
states:
000000100100000000100100111
001000000001000001001000111
000000001100000000001001111
000000010100000000010010111
000100000010000100000100111
000010000010000010000010111
010000000001000010010000111
000001000010000001000001111
100000000001000100100000111




=== State Orbit 6 =====================
size : 3
repr state: 100100100000000100100100111
lex min decimal: 9798197163
states:
001001001000000001001001111
010010010000000010010010111
100100100000000100100100111




=== State Orbit 7 =====================
size : 3
repr state: 100100100000100100100100111
lex min decimal: 9800294315
states:
001001001000001001001001111
010010010000010010010010111
100100100000100100100100111




=== State Orbit 8 =====================
size : 18
repr state: 100000000000000100100010111
lex min decimal: 134782891
states:
001000000000000001001010111
000010000000000010100010111
000010000000000010001010111
000100000000000100001100111
000000001000000100001001111
000000100000000010100100111
100000000000000100100001111
001000000000000001001100111
000100000000000100010100111
000000010000000100010010111
000000001000000010001001111
000001000000000001010001111
100000000000000100100010111
000000010000000001010010111
010000000000000010010100111
000000100000000001100100111
010000000000000010010001111
000001000000000001100001111




=== State Orbit 9 =====================
size : 18
repr state: 100000000000100100100010111
lex min decimal: 136880043
states:
001000000000001001001100111
010000000000010010010001111
000001000000001001100001111
000000100000100001100100111
000010000000010010100010111
000100000000100100010100111
010000000000010010010100111
000001000000001001010001111
000000010000010001010010111
000100000000100100001100111
001000000000001001001010111
000000010000010100010010111
100000000000100100100010111
000000001000001100001001111
100000000000100100100001111
000010000000010010001010111
000000100000100010100100111
000000001000001010001001111




=== State Orbit 10 =====================
size : 9
repr state: 100000000001100100100000111
lex min decimal: 203464619
states:
000000001100001000001001111
000001000010001001000001111
000100000010100100000100111
000000100100100000100100111
000010000010010010000010111
000000010100010000010010111
100000000001100100100000111
001000000001001001001000111
010000000001010010010000111




=== State Orbit 11 =====================
size : 18
repr state: 000000000001000100010000111
lex min decimal: 17108907
states:
000000000100000000100010111
000000000100000000100001111
000000000010000010000100111
000000000010000100000010111
000000000001000001010000111
000000000010000010000001111
000000000010000100000001111
000000000001000100010000111
000000000001000010100000111
000000000001000010001000111
000000000010000001000100111
000000000100000000001100111
000000000100000000001010111
000000000001000100001000111
000000000010000001000010111
000000000100000000010100111
000000000100000000010001111
000000000001000001100000111




=== State Orbit 12 =====================
size : 6
repr state: 000000000000000100010001111
lex min decimal: 348075
states:
000000000000000010001100111
000000000000000001100010111
000000000000000001010100111
000000000000000100001010111
000000000000000100010001111
000000000000000010100001111




=== State Orbit 13 =====================
size : 18
repr state: 000000000011000100000000110
lex min decimal: 50595755
states:
000000000101000000010000110
000000000101000000010000011
000000000101000000001000011
000000000110000000000100110
000000000011000100000000101
000000000011000010000000011
000000000011000001000000101
000000000110000000000010110
000000000011000100000000110
000000000101000000100000110
000000000110000000000100101
000000000110000000000001011
000000000011000001000000011
000000000110000000000010011
000000000101000000100000101
000000000110000000000001101
000000000101000000001000101
000000000011000010000000110




=== State Orbit 14 =====================
size : 18
repr state: 100000000001000100100000110
lex min decimal: 201365419
states:
000100000010000100000100110
000010000010000010000010110
001000000001000001001000011
010000000001000010010000011
000001000010000001000001101
100000000001000100100000110
000000010100000000010010110
000000010100000000010010011
100000000001000100100000101
000100000010000100000100101
000000100100000000100100101
000000001100000000001001101
000000100100000000100100110
000010000010000010000010011
010000000001000010010000110
000001000010000001000001011
001000000001000001001000101
000000001100000000001001011




=== State Orbit 15 =====================
size : 6
repr state: 100100100000000100100100110
lex min decimal: 9798195115
states:
010010010000000010010010011
010010010000000010010010110
001001001000000001001001011
001001001000000001001001101
100100100000000100100100101
100100100000000100100100110




=== State Orbit 16 =====================
size : 6
repr state: 100100100000100100100100110
lex min decimal: 9800292267
states:
010010010000010010010010110
001001001000001001001001101
010010010000010010010010011
100100100000100100100100110
001001001000001001001001011
100100100000100100100100101




=== State Orbit 17 =====================
size : 18
repr state: 100000000000000100100010110
lex min decimal: 134780843
states:
000010000000000010100010110
000001000000000001010001011
000100000000000100010100110
100000000000000100100010110
001000000000000001001010011
000000001000000010001001011
000000001000000100001001101
000010000000000010001010011
000000100000000001100100101
010000000000000010010100110
000000100000000010100100110
000000010000000100010010110
001000000000000001001100101
000001000000000001100001101
000000010000000001010010011
000100000000000100001100101
100000000000000100100001101
010000000000000010010001011




=== State Orbit 18 =====================
size : 18
repr state: 100000000000100100100010110
lex min decimal: 136877995
states:
000010000000010010100010110
000000001000001100001001101
000000100000100010100100110
001000000000001001001010011
000100000000100100001100101
000010000000010010001010011
001000000000001001001100101
010000000000010010010100110
000001000000001001100001101
000100000000100100010100110
010000000000010010010001011
000000100000100001100100101
100000000000100100100001101
100000000000100100100010110
000000010000010100010010110
000001000000001001010001011
000000010000010001010010011
000000001000001010001001011




=== State Orbit 19 =====================
size : 18
repr state: 100000000001100100100000110
lex min decimal: 203462571
states:
000000001100001000001001101
000010000010010010000010011
001000000001001001001000011
000001000010001001000001011
000000100100100000100100101
000001000010001001000001101
001000000001001001001000101
000000100100100000100100110
000000010100010000010010110
000000001100001000001001011
000100000010100100000100101
000000010100010000010010011
100000000001100100100000101
100000000001100100100000110
010000000001010010010000011
000010000010010010000010110
000100000010100100000100110
010000000001010010010000110




=== State Orbit 20 =====================
size : 18
repr state: 000000000001000100010000110
lex min decimal: 17106859
states:
000000000100000000001010011
000000000100000000010001011
000000000010000010000001011
000000000100000000001100101
000000000001000010100000110
000000000100000000100001101
000000000001000001100000101
000000000100000000010100110
000000000010000001000010011
000000000001000001010000011
000000000010000010000100110
000000000001000100010000110
000000000010000001000100101
000000000001000010001000011
000000000010000100000010110
000000000001000100001000101
000000000010000100000001101
000000000100000000100010110




=== State Orbit 21 =====================
size : 9
repr state: 000000000011000100000000100
lex min decimal: 50594731
states:
000000000101000000001000001
000000000110000000000010010
000000000110000000000001001
000000000011000010000000010
000000000110000000000100100
000000000011000001000000001
000000000101000000100000100
000000000011000100000000100
000000000101000000010000010




=== State Orbit 22 =====================
size : 9
repr state: 100000000001000100100000100
lex min decimal: 201364395
states:
001000000001000001001000001
100000000001000100100000100
000000100100000000100100100
000001000010000001000001001
000010000010000010000010010
000000001100000000001001001
000000010100000000010010010
010000000001000010010000010
000100000010000100000100100




=== State Orbit 23 =====================
size : 3
repr state: 100100100000000100100100100
lex min decimal: 9798194091
states:
100100100000000100100100100
001001001000000001001001001
010010010000000010010010010




=== State Orbit 24 =====================
size : 3
repr state: 100100100000100100100100100
lex min decimal: 9800291243
states:
100100100000100100100100100
001001001000001001001001001
010010010000010010010010010




=== State Orbit 25 =====================
size : 9
repr state: 100000000001100100100000100
lex min decimal: 203461547
states:
010000000001010010010000010
000001000010001001000001001
000000100100100000100100100
000000001100001000001001001
000010000010010010000010010
000000010100010000010010010
001000000001001001001000001
000100000010100100000100100
100000000001100100100000100



[QRM NOTE]: Time elapsed since start: 7.438 seconds

[QRM NOTE]: Time elapsed since last: 0.614 seconds

[QRM NOTE]: Peak memory: 1303881 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 7.451 seconds

[QRM NOTE]: Time elapsed since last: 0.013 seconds

[QRM NOTE]: Peak memory: 335857 bytes


========================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

========================================================================================================================


===================================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

===================================================================================================================


=== Prime Orbit 0 =====================
size : 18
num_suborbits: 1
0 (*) : -1----------1--------------
0     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
1     : --1---------1--------------
1     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
2     : 1------------1-------------
2     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
3     : --1----------1-------------
3     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
4     : 1-------------1------------
4     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
5     : -1------------1------------
5     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
6     : ----1-------1--------------
6     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
7     : -----1------1--------------
7     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
8     : ---1---------1-------------
8     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
9     : -----1-------1-------------
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
10     : ---1----------1------------
10     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
11     : ----1---------1------------
11     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
12     : -------1----1--------------
12     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
13     : --------1---1--------------
13     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
14     : ------1------1-------------
14     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
15     : --------1----1-------------
15     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
16     : ------1-------1------------
16     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
17     : -------1------1------------
17     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
18 (*) : ------------1-1------------
18     : ['leader(proposer0)', 'leader(proposer2)']
19     : ------------11-------------
19     : ['leader(proposer0)', 'leader(proposer1)']
20     : -------------11------------
20     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
21 (*) : ------------1-----------0--
21     : ['leader(proposer0)', '~start(proposer0)']
22     : -------------1-----------0-
22     : ['leader(proposer1)', '~start(proposer1)']
23     : --------------1-----------0
23     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 9
num_suborbits: 1
24 (*) : -----------1---------1-----
24     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
25     : -----------1----------1----
25     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
26     : -----------1-----------1---
26     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer2)']
27     : ----------1-------1--------
27     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
28     : ----------1--------1-------
28     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
29     : ----------1---------1------
29     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer2)']
30     : ---------1-----1-----------
30     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
31     : ---------1------1----------
31     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
32     : ---------1-------1---------
32     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 18
num_suborbits: 1
33 (*) : ------1----1---------------
33     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
34     : -------1---1---------------
34     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
35     : --------1--1---------------
35     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
36     : ------1---1----------------
36     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
37     : -------1--1----------------
37     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
38     : --------1-1----------------
38     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor1)']
39     : ---1-------1---------------
39     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
40     : ----1------1---------------
40     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
41     : -----1-----1---------------
41     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
42     : ---1-----1-----------------
42     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
43     : ----1----1-----------------
43     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
44     : -----1---1-----------------
44     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor0)']
45     : 1---------1----------------
45     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
46     : -1--------1----------------
46     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
47     : --1-------1----------------
47     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor1)']
48     : 1--------1-----------------
48     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
49     : -1-------1-----------------
49     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
50     : --1------1-----------------
50     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 27
num_suborbits: 2
51 (*) : -------11------------------
51     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
52     : ------1-1------------------
52     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
53     : ------11-------------------
53     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
54     : ----11---------------------
54     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
55     : ---1-1---------------------
55     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
56     : ---11----------------------
56     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
57     : -11------------------------
57     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
58     : 1-1------------------------
58     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
59     : 11-------------------------
59     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
123 (*) : -1------1------------------
123     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
124     : --1----1-------------------
124     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
125     : 1-------1------------------
125     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
126     : --1---1--------------------
126     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
127     : 1------1-------------------
127     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
128     : -1----1--------------------
128     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
129     : ----1---1------------------
129     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
130     : -----1-1-------------------
130     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
131     : ---1----1------------------
131     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
132     : -----11--------------------
132     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
133     : ---1---1-------------------
133     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
134     : ----1-1--------------------
134     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
135     : -1---1---------------------
135     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
136     : --1-1----------------------
136     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
137     : 1----1---------------------
137     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
138     : --11-----------------------
138     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
139     : 1---1----------------------
139     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
140     : -1-1-----------------------
140     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 36
num_suborbits: 1
60 (*) : --------1------------1-----
60     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
61     : -------1-------------1-----
61     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
62     : --------1-------------1----
62     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
63     : ------1---------------1----
63     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
64     : -------1---------------1---
64     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
65     : ------1----------------1---
65     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
66     : --------1---------1--------
66     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer0)']
67     : -------1----------1--------
67     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
68     : --------1----------1-------
68     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer1)']
69     : ------1------------1-------
69     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
70     : -------1------------1------
70     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer2)']
71     : ------1-------------1------
71     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer2)']
72     : -----1---------------1-----
72     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
73     : ----1----------------1-----
73     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
74     : -----1----------------1----
74     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
75     : ---1------------------1----
75     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
76     : ----1------------------1---
76     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
77     : ---1-------------------1---
77     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
78     : -----1---------1-----------
78     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer0)']
79     : ----1----------1-----------
79     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
80     : -----1----------1----------
80     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer1)']
81     : ---1------------1----------
81     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
82     : ----1------------1---------
82     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer2)']
83     : ---1-------------1---------
83     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer2)']
84     : --1---------------1--------
84     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer0)']
85     : -1----------------1--------
85     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
86     : --1----------------1-------
86     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer1)']
87     : 1------------------1-------
87     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
88     : -1------------------1------
88     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
89     : 1-------------------1------
89     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
90     : --1------------1-----------
90     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer0)']
91     : -1-------------1-----------
91     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
92     : --1-------------1----------
92     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer1)']
93     : 1---------------1----------
93     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
94     : -1---------------1---------
94     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer2)']
95     : 1----------------1---------
95     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 18
num_suborbits: 1
96 (*) : --------1--------------0---
96     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
97     : -------1--------------0----
97     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
98     : ------1--------------0-----
98     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
99     : --------1-----------0------
99     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
100     : -------1-----------0-------
100     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
101     : ------1-----------0--------
101     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
102     : -----1-----------------0---
102     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
103     : ----1-----------------0----
103     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
104     : ---1-----------------0-----
104     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
105     : -----1-----------0---------
105     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
106     : ----1-----------0----------
106     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
107     : ---1-----------0-----------
107     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
108     : --1-----------------0------
108     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor1,proposer2)']
109     : -1-----------------0-------
109     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
110     : 1-----------------0--------
110     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
111     : --1--------------0---------
111     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor0,proposer2)']
112     : -1--------------0----------
112     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
113     : 1--------------0-----------
113     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
114 (*) : --------1-----------------0
114     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
115     : -------1-----------------0-
115     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
116     : ------1-----------------0--
116     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
117     : -----1--------------------0
117     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
118     : ----1--------------------0-
118     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
119     : ---1--------------------0--
119     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
120     : --1-----------------------0
120     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
121     : -1-----------------------0-
121     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
122     : 1-----------------------0--
122     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
141 (*) : ----------------11---------
141     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
142     : ---------------1-1---------
142     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
143     : ---------------11----------
143     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
144     : -------------------11------
144     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
145     : ------------------1-1------
145     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
146     : ------------------11-------
146     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
147     : ----------------------11---
147     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
148     : ---------------------1-1---
148     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
149     : ---------------------11----
149     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 9
num_suborbits: 1
150 (*) : ----------------1--------0-
150     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
151     : -----------------1--------0
151     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
152     : ---------------1--------0--
152     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
153     : -------------------1-----0-
153     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
154     : --------------------1-----0
154     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
155     : ------------------1-----0--
155     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
156     : ----------------------1--0-
156     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
157     : -----------------------1--0
157     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
158     : ---------------------1--0--
158     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 9
num_suborbits: 1
159 (*) : -1--0--1-------------------
159     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
160     : --1--0--1------------------
160     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
161     : 1--0--1--------------------
161     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
162     : -0--1--1-------------------
162     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
163     : --0--1--1------------------
163     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
164     : 0--1--1--------------------
164     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
165     : -1--1--0-------------------
165     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
166     : --1--1--0------------------
166     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
167     : 1--1--0--------------------
167     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 18
num_suborbits: 1
168 (*) : -1-----0--------------1----
168     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
169     : --1-----0--------------1---
169     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
170     : 1-----0--------------1-----
170     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
171     : ----1--0-----------1-------
171     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
172     : -----1--0-----------1------
172     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
173     : ---1--0-----------1--------
173     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
174     : -1--0-----------------1----
174     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
175     : --1--0-----------------1---
175     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
176     : 1--0-----------------1-----
176     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
177     : ----0--1--------1----------
177     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
178     : -----0--1--------1---------
178     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
179     : ---0--1--------1-----------
179     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
180     : -0--1--------------1-------
180     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
181     : --0--1--------------1------
181     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
182     : 0--1--------------1--------
182     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
183     : -0-----1--------1----------
183     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
184     : --0-----1--------1---------
184     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
185     : 0-----1--------1-----------
185     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : 0----------11--------------
186     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
187     : -0---------1-1-------------
187     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
188     : --0--------1--1------------
188     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
189     : ---0------1-1--------------
189     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
190     : ----0-----1--1-------------
190     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
191     : -----0----1---1------------
191     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
192     : ------0--1--1--------------
192     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
193     : -------0-1---1-------------
193     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
194     : --------01----1------------
194     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 18
num_suborbits: 1
195 (*) : -----------11--0-----------
195     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
196     : -----------1-1--0----------
196     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
197     : -----------1--1--0---------
197     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
198     : ----------1-1--0-----------
198     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
199     : ----------1--1--0----------
199     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
200     : ----------1---1--0---------
200     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
201     : -----------11-----0--------
201     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
202     : -----------1-1-----0-------
202     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
203     : -----------1--1-----0------
203     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
204     : ---------1--1-----0--------
204     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
205     : ---------1---1-----0-------
205     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
206     : ---------1----1-----0------
206     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
207     : ----------1-1--------0-----
207     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
208     : ----------1--1--------0----
208     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
209     : ----------1---1--------0---
209     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
210     : ---------1--1--------0-----
210     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
211     : ---------1---1--------0----
211     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
212     : ---------1----1--------0---
212     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 36
num_suborbits: 1
213 (*) : -----------11----1---------
213     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
214     : -----------11---1----------
214     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
215     : -----------1-1---1---------
215     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
216     : -----------1-1-1-----------
216     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
217     : -----------1--1-1----------
217     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
218     : -----------1--11-----------
218     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
219     : ----------1-1----1---------
219     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
220     : ----------1-1---1----------
220     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
221     : ----------1--1---1---------
221     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
222     : ----------1--1-1-----------
222     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
223     : ----------1---1-1----------
223     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
224     : ----------1---11-----------
224     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
225     : -----------11-------1------
225     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
226     : -----------11------1-------
226     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
227     : -----------1-1------1------
227     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
228     : -----------1-1----1--------
228     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
229     : -----------1--1----1-------
229     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
230     : -----------1--1---1--------
230     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
231     : ---------1--1-------1------
231     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
232     : ---------1--1------1-------
232     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
233     : ---------1---1------1------
233     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
234     : ---------1---1----1--------
234     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
235     : ---------1----1----1-------
235     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
236     : ---------1----1---1--------
236     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
237     : ----------1-1----------1---
237     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
238     : ----------1-1---------1----
238     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
239     : ----------1--1---------1---
239     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
240     : ----------1--1-------1-----
240     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
241     : ----------1---1-------1----
241     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
242     : ----------1---1------1-----
242     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
243     : ---------1--1----------1---
243     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
244     : ---------1--1---------1----
244     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
245     : ---------1---1---------1---
245     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
246     : ---------1---1-------1-----
246     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
247     : ---------1----1-------1----
247     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
248     : ---------1----1------1-----
248     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 9
num_suborbits: 1
249 (*) : ----------111--------------
249     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
250     : ----------11-1-------------
250     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
251     : ----------11--1------------
251     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
252     : ---------1-11--------------
252     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
253     : ---------1-1-1-------------
253     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
254     : ---------1-1--1------------
254     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
255     : ---------11-1--------------
255     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
256     : ---------11--1-------------
256     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
257     : ---------11---1------------
257     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 18
num_suborbits: 1
258 (*) : --0-----------1------1-----
258     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
259     : -0-----------1-------1-----
259     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
260     : --0-----------1-------1----
260     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
261     : 0-----------1---------1----
261     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
262     : -0-----------1---------1---
262     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
263     : 0-----------1----------1---
263     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
264     : -----0--------1---1--------
264     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
265     : ----0--------1----1--------
265     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
266     : -----0--------1----1-------
266     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
267     : ---0--------1------1-------
267     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
268     : ----0--------1------1------
268     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
269     : ---0--------1-------1------
269     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
270     : --------0-----11-----------
270     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
271     : -------0-----1-1-----------
271     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
272     : --------0-----1-1----------
272     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
273     : ------0-----1---1----------
273     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
274     : -------0-----1---1---------
274     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
275     : ------0-----1----1---------
275     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 36
num_suborbits: 1
276 (*) : --------------1--0---1-----
276     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
277     : -------------1--0----1-----
277     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
278     : --------------1--0----1----
278     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
279     : ------------1--0------1----
279     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
280     : -------------1--0------1---
280     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
281     : ------------1--0-------1---
281     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
282     : --------------1--01--------
282     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
283     : -------------1--0-1--------
283     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
284     : --------------1--0-1-------
284     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
285     : ------------1--0---1-------
285     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
286     : -------------1--0---1------
286     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
287     : ------------1--0----1------
287     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
288     : --------------1-----01-----
288     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
289     : -------------1-----0-1-----
289     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
290     : --------------1-----0-1----
290     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
291     : ------------1-----0---1----
291     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
292     : -------------1-----0---1---
292     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
293     : ------------1-----0----1---
293     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
294     : --------------11----0------
294     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
295     : -------------1-1---0-------
295     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
296     : --------------1-1---0------
296     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
297     : ------------1---1-0--------
297     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
298     : -------------1---1-0-------
298     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
299     : ------------1----10--------
299     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
300     : --------------1---1----0---
300     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
301     : -------------1----1---0----
301     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
302     : --------------1----1---0---
302     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
303     : ------------1------1-0-----
303     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
304     : -------------1------1-0----
304     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
305     : ------------1-------10-----
305     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
306     : --------------11-------0---
306     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
307     : -------------1-1------0----
307     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
308     : --------------1-1------0---
308     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
309     : ------------1---1----0-----
309     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
310     : -------------1---1----0----
310     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
311     : ------------1----1---0-----
311     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 36
num_suborbits: 2
312 (*) : --------------1-1----1-----
312     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
313     : -------------1---1---1-----
313     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
314     : --------------11------1----
314     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
315     : ------------1----1----1----
315     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
316     : -------------1-1-------1---
316     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
317     : ------------1---1------1---
317     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
318     : --------------1-1-1--------
318     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
319     : -------------1---11--------
319     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
320     : --------------11---1-------
320     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
321     : ------------1----1-1-------
321     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
322     : -------------1-1----1------
322     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
323     : ------------1---1---1------
323     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
324     : --------------1----1-1-----
324     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
325     : -------------1------11-----
325     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
326     : --------------1---1---1----
326     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
327     : ------------1-------1-1----
327     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
328     : -------------1----1----1---
328     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
329     : ------------1------1---1---
329     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
339 (*) : --------------11-----1-----
339     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
340     : -------------1-1-----1-----
340     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
341     : --------------1-1-----1----
341     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
342     : ------------1---1-----1----
342     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
343     : -------------1---1-----1---
343     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
344     : ------------1----1-----1---
344     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
345     : --------------11--1--------
345     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
346     : -------------1-1--1--------
346     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
347     : --------------1-1--1-------
347     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
348     : ------------1---1--1-------
348     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
349     : -------------1---1--1------
349     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
350     : ------------1----1--1------
350     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
351     : --------------1---1--1-----
351     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
352     : -------------1----1--1-----
352     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
353     : --------------1----1--1----
353     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
354     : ------------1------1--1----
354     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
355     : -------------1------1--1---
355     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
356     : ------------1-------1--1---
356     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 9
num_suborbits: 1
330 (*) : ---0-----------1-----1-----
330     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
331     : ----0-----------1-----1----
331     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
332     : -----0-----------1-----1---
332     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
333     : 0--------------1--1--------
333     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
334     : -0--------------1--1-------
334     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
335     : --0--------------1--1------
335     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
336     : ------0-----------1--1-----
336     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
337     : -------0-----------1--1----
337     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
338     : --------0-----------1--1---
338     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
357 (*) : ------0-----1--0-----------
357     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
358     : -------0-----1--0----------
358     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
359     : --------0-----1--0---------
359     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
360     : ---0--------1-----0--------
360     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
361     : ----0--------1-----0-------
361     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
362     : -----0--------1-----0------
362     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
363     : 0-----------1--------0-----
363     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
364     : -0-----------1--------0----
364     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
365     : --0-----------1--------0---
365     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ------------1--0--0--------
366     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
367     : -------------1--0--0-------
367     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
368     : --------------1--0--0------
368     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
369     : ------------1--0-----0-----
369     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
370     : -------------1--0-----0----
370     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
371     : --------------1--0-----0---
371     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
372     : ------------1-----0--0-----
372     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
373     : -------------1-----0--0----
373     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
374     : --------------1-----0--0---
374     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ----------0-------0-0----0-
375     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
376     : ----------0-------00------0
376     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
377     : ----------0--------00---0--
377     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
378     : -----------0---------0-0-0-
378     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
379     : -----------0---------00---0
379     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
380     : -----------0----------000--
380     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
381     : ---------0-----0-0-------0-
381     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
382     : ---------0-----00---------0
382     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
383     : ---------0------00------0--
383     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 3
num_suborbits: 1
384 (*) : ----------0-------000------
384     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
385     : -----------0---------000---
385     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
386     : ---------0-----000---------
386     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
387 (*) : ---------0-----0---------00
387     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
388     : ---------0------0-------0-0
388     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
389     : ---------0-------0------00-
389     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
390     : ----------0-------0------00
390     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
391     : ----------0--------0----0-0
391     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
392     : ----------0---------0---00-
392     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
393     : -----------0---------0---00
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
394     : -----------0----------0-0-0
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
395     : -----------0-----------000-
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
396 (*) : ---------0--------------000
396     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
397     : ----------0-------------000
397     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
398     : -----------0------------000
398     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : -----0--0-----1--------1---
399     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
400     : ----0--0-----1--------1----
400     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
401     : ---0--0-----1--------1-----
401     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
402     : --0-----0-----1-----1------
402     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
403     : -0-----0-----1-----1-------
403     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
404     : 0-----0-----1-----1--------
404     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
405     : --0--0--------1--1---------
405     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
406     : -0--0--------1--1----------
406     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
407     : 0--0--------1--1-----------
407     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : --0--0--0-----1------------
408     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
409     : -0--0--0-----1-------------
409     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
410     : 0--0--0-----1--------------
410     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 18
num_suborbits: 1
411 (*) : ----0------0----1----0-0---
411     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
412     : -----0-----0-----1---00----
412     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
413     : ---0-------0---1------00---
413     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
414     : -0--------0-----1-0-0------
414     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
415     : --0-------0------100-------
415     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
416     : 0---------0----1---00------
416     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
417     : -------0---0-------1-0-0---
417     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
418     : --------0--0--------100----
418     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
419     : ------0----0------1---00---
419     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
420     : -0-------0-----0-0-1-------
420     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
421     : --0------0-----00---1------
421     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
422     : 0--------0------001--------
422     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
423     : -------0--0-------0-0-1----
423     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
424     : --------0-0-------00---1---
424     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
425     : ------0---0--------001-----
425     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
426     : ----0----0-----0-0----1----
426     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
427     : -----0---0-----00------1---
427     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
428     : ---0-----0------00---1-----
428     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 36
num_suborbits: 1
429 (*) : ----0------0----1----0----0
429     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
430     : -----0-----0-----1---0---0-
430     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
431     : ---0-------0---1------0---0
431     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
432     : -----0-----0-----1----0-0--
432     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
433     : ---0-------0---1-------0-0-
433     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
434     : ----0------0----1------00--
434     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
435     : -0--------0-----1-0-------0
435     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
436     : --0-------0------10------0-
436     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
437     : 0---------0----1---0------0
437     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
438     : --0-------0------1-0----0--
438     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
439     : 0---------0----1----0----0-
439     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
440     : -0--------0-----1---0---0--
440     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
441     : -------0---0-------1-0----0
441     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
442     : --------0--0--------10---0-
442     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
443     : ------0----0------1---0---0
443     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
444     : --------0--0--------1-0-0--
444     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
445     : ------0----0------1----0-0-
445     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
446     : -------0---0-------1---00--
446     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
447     : -0-------0-----0---1------0
447     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
448     : --0------0-----0----1----0-
448     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
449     : 0--------0------0-1-------0
449     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
450     : --0------0------0---1---0--
450     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
451     : 0--------0-------01------0-
451     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
452     : -0-------0-------0-1----0--
452     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
453     : -------0--0-------0---1---0
453     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
454     : --------0-0-------0----1-0-
454     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
455     : ------0---0--------0-1----0
455     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
456     : --------0-0--------0---10--
456     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
457     : ------0---0---------01---0-
457     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
458     : -------0--0---------0-1-0--
458     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
459     : ----0----0-----0------1---0
459     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
460     : -----0---0-----0-------1-0-
460     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
461     : ---0-----0------0----1----0
461     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
462     : -----0---0------0------10--
462     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
463     : ---0-----0-------0---1---0-
463     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
464     : ----0----0-------0----1-0--
464     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
465 (*) : -0--------0-----1-------0-0
465     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
466     : --0-------0------1------00-
466     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
467     : 0---------0----1---------00
467     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
468     : ----0------0----1-------0-0
468     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
469     : -----0-----0-----1------00-
469     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
470     : ---0-------0---1---------00
470     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
471     : -0-------0---------1----0-0
471     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
472     : --0------0----------1---00-
472     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
473     : 0--------0--------1------00
473     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
474     : -------0---0-------1----0-0
474     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
475     : --------0--0--------1---00-
475     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
476     : ------0----0------1------00
476     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
477     : ----0----0------------1-0-0
477     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
478     : -----0---0-------------100-
478     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
479     : ---0-----0-----------1---00
479     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
480     : -------0--0-----------1-0-0
480     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
481     : --------0-0------------100-
481     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
482     : ------0---0----------1---00
482     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 9
num_suborbits: 1
483 (*) : -0-------00-------------0-0
483     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
484     : --0------00-------------00-
484     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
485     : 0--------00--------------00
485     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
486     : ----0----0-0------------0-0
486     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
487     : -----0---0-0------------00-
487     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
488     : ---0-----0-0-------------00
488     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
489     : -------0--00------------0-0
489     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
490     : --------0-00------------00-
490     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
491     : ------0---00-------------00
491     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 36
num_suborbits: 1
492 (*) : -0-----1-0-----0----------0
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
493     : --0-----10-----0---------0-
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
494     : 0-----1--0------0---------0
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
495     : --0-----10------0-------0--
495     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
496     : 0-----1--0-------0-------0-
496     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
497     : -0-----1-0-------0------0--
497     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
498     : ----0--1-0-----0----------0
498     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
499     : -----0--10-----0---------0-
499     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
500     : ---0--1--0------0---------0
500     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
501     : -----0--10------0-------0--
501     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
502     : ---0--1--0-------0-------0-
502     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
503     : ----0--1-0-------0------0--
503     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
504     : -0--1-----0-------0-------0
504     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
505     : --0--1----0-------0------0-
505     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
506     : 0--1------0--------0------0
506     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
507     : --0--1----0--------0----0--
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
508     : 0--1------0---------0----0-
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
509     : -0--1-----0---------0---0--
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
510     : ----1--0--0-------0-------0
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
511     : -----1--0-0-------0------0-
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
512     : ---1--0---0--------0------0
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
513     : -----1--0-0--------0----0--
513     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
514     : ---1--0---0---------0----0-
514     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
515     : ----1--0--0---------0---0--
515     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
516     : -1--0------0---------0----0
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
517     : --1--0-----0---------0---0-
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
518     : 1--0-------0----------0---0
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
519     : --1--0-----0----------0-0--
519     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
520     : 1--0-------0-----------0-0-
520     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
521     : -1--0------0-----------00--
521     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
522     : -1-----0---0---------0----0
522     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
523     : --1-----0--0---------0---0-
523     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
524     : 1-----0----0----------0---0
524     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
525     : --1-----0--0----------0-0--
525     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
526     : 1-----0----0-----------0-0-
526     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
527     : -1-----0---0-----------00--
527     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
528 (*) : ----0--1-0--------------0-0
528     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
529     : -----0--10--------------00-
529     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
530     : ---0--1--0---------------00
530     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
531     : -0-----1-0--------------0-0
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
532     : --0-----10--------------00-
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
533     : 0-----1--0---------------00
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
534     : ----1--0--0-------------0-0
534     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
535     : -----1--0-0-------------00-
535     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
536     : ---1--0---0--------------00
536     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
537     : -0--1-----0-------------0-0
537     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
538     : --0--1----0-------------00-
538     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
539     : 0--1------0--------------00
539     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
540     : -1-----0---0------------0-0
540     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
541     : --1-----0--0------------00-
541     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
542     : 1-----0----0-------------00
542     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
543     : -1--0------0------------0-0
543     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
544     : --1--0-----0------------00-
544     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
545     : 1--0-------0-------------00
545     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
546 (*) : --0--1----0-------00-------
546     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
547     : -0--1-----0-------0-0------
547     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
548     : 0--1------0--------00------
548     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
549     : --1--0-----0---------00----
549     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
550     : -1--0------0---------0-0---
550     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
551     : 1--0-------0----------00---
551     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
552     : --0-----10-----00----------
552     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
553     : -0-----1-0-----0-0---------
553     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
554     : 0-----1--0------00---------
554     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
555     : --1-----0--0---------00----
555     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
556     : -1-----0---0---------0-0---
556     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
557     : 1-----0----0----------00---
557     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
558     : -----0--10-----00----------
558     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
559     : ----0--1-0-----0-0---------
559     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
560     : ---0--1--0------00---------
560     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
561     : -----1--0-0-------00-------
561     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
562     : ----1--0--0-------0-0------
562     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
563     : ---1--0---0--------00------
563     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : --0-0----0----------1-1-0--
564     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
565     : -0---0---0---------1---10--
565     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
566     : --00-----0----------11---0-
566     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
567     : 0----0---0--------1----1-0-
567     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
568     : -0-0-----0---------1-1----0
568     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
569     : 0---0----0--------1---1---0
569     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
570     : --0----0--0------1----1-0--
570     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
571     : -0------0-0-----1------10--
571     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
572     : --0---0---0------1---1---0-
572     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
573     : 0-------0-0----1-------1-0-
573     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
574     : -0----0---0-----1----1----0
574     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
575     : 0------0--0----1------1---0
575     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
576     : -----0-0---0-----1-1----0--
576     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
577     : ----0---0--0----1---1---0--
577     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
578     : -----00----0-----11------0-
578     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
579     : ---0----0--0---1----1----0-
579     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
580     : ----0-0----0----1-1-------0
580     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
581     : ---0---0---0---1---1------0
581     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
582 (*) : ----0---0--0----1---10-----
582     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
583     : -----0-0---0-----1-1-0-----
583     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
584     : ---0----0--0---1----1-0----
584     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
585     : -----00----0-----11---0----
585     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
586     : ---0---0---0---1---1---0---
586     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
587     : ----0-0----0----1-1----0---
587     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
588     : -0------0-0-----1-0----1---
588     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
589     : --0----0--0------10---1----
589     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
590     : 0-------0-0----1---0---1---
590     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
591     : --0---0---0------1-0-1-----
591     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
592     : 0------0--0----1----0-1----
592     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
593     : -0----0---0-----1---01-----
593     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
594     : -0---0---0-----0---1---1---
594     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
595     : --0-0----0-----0----1-1----
595     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
596     : 0----0---0------0-1----1---
596     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
597     : --00-----0------0---11-----
597     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
598     : 0---0----0-------01---1----
598     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
599     : -0-0-----0-------0-1-1-----
599     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : 0-----0---0-1-------0----0-
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
601     : 0-----0---0-1------0------0
601     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
602     : -0-----0--0--1------0---0--
602     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
603     : -0-----0--0--1----0-------0
603     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
604     : --0-----0-0---1----0----0--
604     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
605     : --0-----0-0---1---0------0-
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
606     : ---0--0----01----------0-0-
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
607     : ---0--0----01---------0---0
607     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
608     : ----0--0---0-1---------00--
608     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
609     : ----0--0---0-1-------0----0
609     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
610     : -----0--0--0--1-------0-0--
610     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
611     : -----0--0--0--1------0---0-
611     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
612     : 0--0-----0--1----0-------0-
612     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
613     : 0--0-----0--1---0---------0
613     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
614     : -0--0----0---1---0------0--
614     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
615     : -0--0----0---1-0----------0
615     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
616     : --0--0---0----1-0-------0--
616     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
617     : --0--0---0----10---------0-
617     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : 0-----0---0-1------------00
618     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
619     : -0-----0--0--1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
620     : --0-----0-0---1---------00-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
621     : ---0--0----01------------00
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
622     : ----0--0---0-1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
623     : -----0--0--0--1---------00-
623     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
624     : 0--0-----0--1------------00
624     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
625     : -0--0----0---1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
626     : --0--0---0----1---------00-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : ---0--0----01---------00---
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
628     : ----0--0---0-1-------0-0---
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
629     : -----0--0--0--1------00----
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
630     : 0-----0---0-1------00------
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
631     : -0-----0--0--1----0-0------
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
632     : --0-----0-0---1---00-------
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
633     : 0--0-----0--1---00---------
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
634     : -0--0----0---1-0-0---------
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
635     : --0--0---0----100----------
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : --0------00----0--0------0-
636     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
637     : -0-------00----0--0-------0
637     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
638     : --0------00-----0--0----0--
638     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
639     : 0--------00-----0--0------0
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
640     : -0-------00------0--0---0--
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
641     : 0--------00------0--0----0-
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
642     : -----0---0-0---0-----0---0-
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
643     : ----0----0-0---0-----0----0
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
644     : -----0---0-0----0-----0-0--
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
645     : ---0-----0-0----0-----0---0
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
646     : ----0----0-0-----0-----00--
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
647     : ---0-----0-0-----0-----0-0-
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
648     : --------0-00------0--0---0-
648     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
649     : -------0--00------0--0----0
649     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
650     : --------0-00-------0--0-0--
650     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
651     : ------0---00-------0--0---0
651     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
652     : -------0--00--------0--00--
652     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
653     : ------0---00--------0--0-0-
653     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : --0--00---00-----1-------0-
654     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
655     : -0--0-0---00----1---------0
655     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
656     : --0--0-0--00-----1------0--
656     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
657     : 0--0---0--00---1----------0
657     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
658     : -0--0---0-00----1-------0--
658     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
659     : 0--0----0-00---1---------0-
659     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
660     : --00----00-0--------1----0-
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
661     : -0-0---0-0-0-------1------0
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
662     : --0-0---00-0--------1---0--
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
663     : 0---0-0--0-0------1-------0
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
664     : -0---0-0-0-0-------1----0--
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
665     : 0----00--0-0------1------0-
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
666     : 0----0--000------------1-0-
666     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
667     : 0---0--0-00-----------1---0
667     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
668     : -0---0--000------------10--
668     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
669     : -0-0--0--00----------1----0
669     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
670     : --0-0--0-00-----------1-0--
670     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
671     : --00--0--00----------1---0-
671     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : --0---0---00-----1-----0-0-
672     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
673     : -0----0---00----1-----0---0
673     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
674     : --0----0--00-----1-----00--
674     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
675     : 0------0--00---1-----0----0
675     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
676     : -0------0-00----1-----0-0--
676     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
677     : 0-------0-00---1-----0---0-
677     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
678     : -----00---00-----1--0----0-
678     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
679     : ----0-0---00----1--0------0
679     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
680     : -----0-0--00-----1--0---0--
680     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
681     : ---0---0--00---1--0-------0
681     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
682     : ----0---0-00----1--0----0--
682     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
683     : ---0----0-00---1--0------0-
683     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
684     : --00-----0-0--------1--0-0-
684     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
685     : -0-0-----0-0-------1--0---0
685     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
686     : --0-0----0-0--------1--00--
686     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
687     : 0---0----0-0------1--0----0
687     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
688     : -0---0---0-0-------1--0-0--
688     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
689     : 0----0---0-0------1--0---0-
689     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
690     : ---0----00-0-----0--1----0-
690     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
691     : ---0---0-0-0----0--1------0
691     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
692     : ----0---00-0-----0--1---0--
692     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
693     : ----0-0--0-0---0--1-------0
693     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
694     : -----0-0-0-0----0--1----0--
694     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
695     : -----00--0-0---0--1------0-
695     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
696     : 0----0---00---------0--1-0-
696     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
697     : 0---0----00--------0--1---0
697     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
698     : -0---0---00---------0--10--
698     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
699     : -0-0-----00-------0--1----0
699     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
700     : --0-0----00--------0--1-0--
700     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
701     : --00-----00-------0--1---0-
701     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
702     : 0-------000------0-----1-0-
702     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
703     : 0------0-00-----0-----1---0
703     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
704     : -0------000------0-----10--
704     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
705     : -0----0--00----0-----1----0
705     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
706     : --0----0-00-----0-----1-0--
706     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
707     : --0---0--00----0-----1---0-
707     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 9
num_suborbits: 1
708 (*) : 0--------00-----00-00------
708     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
709     : -0-------00----0-00-0------
709     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
710     : --0------00----00-00-------
710     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
711     : ---0-----0-0----00----00---
711     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
712     : ----0----0-0---0-0---0-0---
712     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
713     : -----0---0-0---00----00----
713     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
714     : ------0---00-------00-00---
714     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
715     : -------0--00------0-00-0---
715     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
716     : --------0-00------00-00----
716     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : -0---0--0000----------0-0--
717     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
718     : --0-0--0-000-----------00--
718     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
719     : 0----0--0000---------0---0-
719     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
720     : --00--0--000-----------0-0-
720     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
721     : 0---0--0-000---------0----0
721     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
722     : -0-0--0--000----------0---0
722     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
723     : --0-0---0000-------0----0--
723     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
724     : -0---0-0-000--------0---0--
724     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
725     : --00----0000------0------0-
725     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
726     : 0----00--000--------0----0-
726     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
727     : -0-0---0-000------0-------0
727     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
728     : 0---0-0--000-------0------0
728     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
729     : --0--0-0-000----0-------0--
729     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
730     : -0--0---0000-----0------0--
730     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
731     : --0--00--000---0---------0-
731     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
732     : 0--0----0000-----0-------0-
732     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
733     : -0--0-0--000---0----------0
733     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
734     : 0--0---0-000----0---------0
734     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
735 (*) : -0------0000-----0----0-0--
735     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
736     : --0----0-000----0------00--
736     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
737     : 0-------0000-----0---0---0-
737     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
738     : --0---0--000---0-------0-0-
738     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
739     : 0------0-000----0----0----0
739     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
740     : -0----0--000---0------0---0
740     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
741     : ----0---0000-----0-0----0--
741     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
742     : -----0-0-000----0---0---0--
742     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
743     : ---0----0000-----00------0-
743     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
744     : -----00--000---0----0----0-
744     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
745     : ---0---0-000----0-0-------0
745     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
746     : ----0-0--000---0---0------0
746     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
747     : -0---0---000--------0-0-0--
747     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
748     : --0-0----000-------0---00--
748     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
749     : 0----0---000--------00---0-
749     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
750     : --00-----000------0----0-0-
750     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
751     : 0---0----000-------0-0----0
751     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
752     : -0-0-----000------0---0---0
752     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
753 (*) : -0--0---0-00----1-0--0-----
753     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
754     : --0--0-0--00-----10--0-----
754     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
755     : 0--0----0-00---1---0--0----
755     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
756     : --0--00---00-----1-0--0----
756     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
757     : 0--0---0--00---1----0--0---
757     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
758     : -0--0-0---00----1---0--0---
758     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
759     : -0---0-0-0-0---0---1-0-----
759     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
760     : --0-0---00-0---0----10-----
760     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
761     : 0----00--0-0----0-1---0----
761     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
762     : --00----00-0----0---1-0----
762     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
763     : 0---0-0--0-0-----01----0---
763     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
764     : -0-0---0-0-0-----0-1---0---
764     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
765     : --0-0--0-00----0--0---1----
765     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
766     : -0---0--000----0--0----1---
766     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
767     : --00--0--00-----0--0-1-----
767     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
768     : 0----0--000-----0--0---1---
768     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
769     : -0-0--0--00------0--01-----
769     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
770     : 0---0--0-00------0--0-1----
770     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 36
num_suborbits: 1
771 (*) : -0----0---00----1---0-00---
771     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
772     : --0---0---00-----1-0--00---
772     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
773     : 0------0--00---1----00-0---
773     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
774     : --0----0--00-----10--0-0---
774     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
775     : 0-------0-00---1---0-00----
775     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
776     : -0------0-00----1-0--00----
776     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
777     : ----0-0---00----1--00--0---
777     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
778     : -----00---00-----1-00-0----
778     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
779     : ---0---0--00---1--0-0--0---
779     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
780     : -----0-0--00-----10-00-----
780     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
781     : ---0----0-00---1--00--0----
781     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
782     : ----0---0-00----1-00-0-----
782     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
783     : -0-0-----0-0-----0-1--00---
783     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
784     : --00-----0-0----0---1-00---
784     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
785     : 0---0----0-0-----01--0-0---
785     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
786     : --0-0----0-0---0----10-0---
786     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
787     : 0----0---0-0----0-1--00----
787     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
788     : -0---0---0-0---0---1-00----
788     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
789     : ---0---0-0-0----00-1---0---
789     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
790     : ---0----00-0----00--1-0----
790     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
791     : ----0-0--0-0---0-01----0---
791     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
792     : ----0---00-0---0-0--10-----
792     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
793     : -----00--0-0---00-1---0----
793     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
794     : -----0-0-0-0---00--1-0-----
794     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
795     : 0---0----00------0-00-1----
795     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
796     : 0----0---00-----0--00--1---
796     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
797     : -0-0-----00------00-01-----
797     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
798     : -0---0---00----0--0-0--1---
798     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
799     : --00-----00-----0-00-1-----
799     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
800     : --0-0----00----0--00--1----
800     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
801     : 0------0-00-----00--0-1----
801     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
802     : 0-------000-----00-0---1---
802     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
803     : -0----0--00----0-0--01-----
803     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
804     : -0------000----0-00----1---
804     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
805     : --0---0--00----00--0-1-----
805     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
806     : --0----0-00----00-0---1----
806     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
810 (*) : 0----0--0000----0--0-00----
810     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
811     : 0---0--0-000-----0--00-0---
811     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
812     : -0---0--0000---0--0--00----
812     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
813     : -0-0--0--000-----0--0-00---
813     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
814     : --0-0--0-000---0--0--0-0---
814     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
815     : --00--0--000----0--0--00---
815     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
816     : --00----0000----0-00--0----
816     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
817     : -0-0---0-000-----00-0--0---
817     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
818     : --0-0---0000---0--00-0-----
818     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
819     : 0---0-0--000-----0-00--0---
819     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
820     : -0---0-0-000---0--0-00-----
820     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
821     : 0----00--000----0--00-0----
821     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
822     : --0--00--000---00--0--0----
822     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
823     : -0--0-0--000---0-0--0--0---
823     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
824     : --0--0-0-000---00-0--0-----
824     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
825     : 0--0---0-000----00--0--0---
825     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
826     : -0--0---0000---0-00--0-----
826     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
827     : 0--0----0000----00-0--0----
827     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 18
num_suborbits: 1
828 (*) : 0----0---000----0--0000----
828     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
829     : 0---0----000-----0-000-0---
829     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
830     : -0---0---000---0--0-000----
830     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
831     : -0-0-----000-----00-0-00---
831     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
832     : --0-0----000---0--00-0-0---
832     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
833     : --00-----000----0-00--00---
833     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
834     : 0-------0000----00-0-00----
834     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
835     : 0------0-000----00--00-0---
835     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
836     : -0------0000---0-00--00----
836     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
837     : -0----0--000---0-0--0-00---
837     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
838     : --0----0-000---00-0--0-0---
838     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
839     : --0---0--000---00--0--00---
839     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
840     : ---0----0000----0000--0----
840     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
841     : ---0---0-000----000-0--0---
841     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
842     : ----0---0000---0-000-0-----
842     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
843     : ----0-0--000---0-0-00--0---
843     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
844     : -----0-0-000---00-0-00-----
844     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
845     : -----00--000---00--00-0----
845     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 3
num_suborbits: 1
846 (*) : -00-00-00000---0--0--0-----
846     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
847     : 0-00-00-0000----0--0--0----
847     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
848     : 00-00-00-000-----0--0--0---
848     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 53

[PRIME NOTE]: number of orbits before merging: 55

[PRIME NOTE]: number of primes: 849

[QRM NOTE]: Time elapsed since start: 7.939 seconds

[QRM NOTE]: Time elapsed since last: 0.488 seconds

[QRM NOTE]: Peak memory: 2516138 bytes


=============================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=============================================================================================================

definition primes: {3, 4, 35, 37, 7, 11, 12, 44, 47, 48, 50, 51, 20, 52, 24, 29}


New level: 0
 pending : [0, 1, 2, 5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : []

Essensial at level 0 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 0 : {5, 6}

After reduction : 
 pending  : [0, 1, 2, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9]


Before reduction : 
 pending  : [0, 1, 2, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9]

Essensial at level 0 : set()

Before removed
 coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [0, 1, 2, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9]

[QRM NOTE]: Time elapsed since start: 8.042 seconds

[QRM NOTE]: Time elapsed since last: 0.103 seconds

[QRM NOTE]: Peak memory: 1306421 bytes


=================================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=================================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
141 (*) : ----------------11---------
141     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
142     : ---------------1-1---------
142     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
143     : ---------------11----------
143     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
144     : -------------------11------
144     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
145     : ------------------1-1------
145     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
146     : ------------------11-------
146     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
147     : ----------------------11---
147     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
148     : ---------------------1-1---
148     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
149     : ---------------------11----
149     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']

sign_func_name2args: {'0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 0 =====================
size : 18
num_suborbits: 1
0 (*) : -1----------1--------------
0     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
1     : --1---------1--------------
1     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
2     : 1------------1-------------
2     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
3     : --1----------1-------------
3     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
4     : 1-------------1------------
4     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
5     : -1------------1------------
5     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
6     : ----1-------1--------------
6     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
7     : -----1------1--------------
7     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
8     : ---1---------1-------------
8     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
9     : -----1-------1-------------
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
10     : ---1----------1------------
10     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
11     : ----1---------1------------
11     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
12     : -------1----1--------------
12     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
13     : --------1---1--------------
13     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
14     : ------1------1-------------
14     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
15     : --------1----1-------------
15     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
16     : ------1-------1------------
16     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
17     : -------1------1------------
17     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0,PROPOSER1. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
18 (*) : ------------1-1------------
18     : ['leader(proposer0)', 'leader(proposer2)']
19     : ------------11-------------
19     : ['leader(proposer0)', 'leader(proposer1)']
20     : -------------11------------
20     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'leader(proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'leader(proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
21 (*) : ------------1-----------0--
21     : ['leader(proposer0)', '~start(proposer0)']
22     : -------------1-----------0-
22     : ['leader(proposer1)', '~start(proposer1)']
23     : --------------1-----------0
23     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~start(proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
114 (*) : --------1-----------------0
114     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
115     : -------1-----------------0-
115     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
116     : ------1-----------------0--
116     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
117     : -----1--------------------0
117     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
118     : ----1--------------------0-
118     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
119     : ---1--------------------0--
119     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
120     : --1-----------------------0
120     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
121     : -1-----------------------0-
121     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
122     : 1-----------------------0--
122     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 10 =====================
size : 9
num_suborbits: 1
150 (*) : ----------------1--------0-
150     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
151     : -----------------1--------0
151     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
152     : ---------------1--------0--
152     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
153     : -------------------1-----0-
153     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
154     : --------------------1-----0
154     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
155     : ------------------1-----0--
155     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
156     : ----------------------1--0-
156     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
157     : -----------------------1--0
157     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
158     : ---------------------1--0--
158     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor0,proposer1)', '~start(proposer1)']

sign_func_name2args: {'0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor0,proposer1)', '~start(proposer1)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : 0----------11--------------
186     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
187     : -0---------1-1-------------
187     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
188     : --0--------1--1------------
188     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
189     : ---0------1-1--------------
189     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
190     : ----0-----1--1-------------
190     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
191     : -----0----1---1------------
191     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
192     : ------0--1--1--------------
192     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
193     : -------0-1---1-------------
193     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
194     : --------01----1------------
194     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor2)', 'leader(proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor2)', 'leader(proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~didNotPromise(ACCEPTOR0)


=== Prime Orbit 14 =====================
size : 18
num_suborbits: 1
195 (*) : -----------11--0-----------
195     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
196     : -----------1-1--0----------
196     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
197     : -----------1--1--0---------
197     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
198     : ----------1-1--0-----------
198     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
199     : ----------1--1--0----------
199     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
200     : ----------1---1--0---------
200     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
201     : -----------11-----0--------
201     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
202     : -----------1-1-----0-------
202     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
203     : -----------1--1-----0------
203     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
204     : ---------1--1-----0--------
204     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
205     : ---------1---1-----0-------
205     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
206     : ---------1----1-----0------
206     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
207     : ----------1-1--------0-----
207     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
208     : ----------1--1--------0----
208     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
209     : ----------1---1--------0---
209     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
210     : ---------1--1--------0-----
210     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
211     : ---------1---1--------0----
211     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
212     : ---------1----1--------0---
212     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 15 =====================
size : 36
num_suborbits: 1
213 (*) : -----------11----1---------
213     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
214     : -----------11---1----------
214     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
215     : -----------1-1---1---------
215     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
216     : -----------1-1-1-----------
216     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
217     : -----------1--1-1----------
217     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
218     : -----------1--11-----------
218     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
219     : ----------1-1----1---------
219     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
220     : ----------1-1---1----------
220     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
221     : ----------1--1---1---------
221     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
222     : ----------1--1-1-----------
222     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
223     : ----------1---1-1----------
223     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
224     : ----------1---11-----------
224     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
225     : -----------11-------1------
225     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
226     : -----------11------1-------
226     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
227     : -----------1-1------1------
227     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
228     : -----------1-1----1--------
228     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
229     : -----------1--1----1-------
229     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
230     : -----------1--1---1--------
230     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
231     : ---------1--1-------1------
231     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
232     : ---------1--1------1-------
232     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
233     : ---------1---1------1------
233     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
234     : ---------1---1----1--------
234     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
235     : ---------1----1----1-------
235     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
236     : ---------1----1---1--------
236     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
237     : ----------1-1----------1---
237     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
238     : ----------1-1---------1----
238     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
239     : ----------1--1---------1---
239     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
240     : ----------1--1-------1-----
240     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
241     : ----------1---1-------1----
241     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
242     : ----------1---1------1-----
242     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
243     : ---------1--1----------1---
243     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
244     : ---------1--1---------1----
244     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
245     : ---------1---1---------1---
245     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
246     : ---------1---1-------1-----
246     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
247     : ---------1----1-------1----
247     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
248     : ---------1----1------1-----
248     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER1)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | ~didNotPromise(ACCEPTOR0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 16 =====================
size : 9
num_suborbits: 1
249 (*) : ----------111--------------
249     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
250     : ----------11-1-------------
250     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
251     : ----------11--1------------
251     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
252     : ---------1-11--------------
252     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
253     : ---------1-1-1-------------
253     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
254     : ---------1-1--1------------
254     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
255     : ---------11-1--------------
255     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
256     : ---------11--1-------------
256     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
257     : ---------11---1------------
257     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR1)', 'leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR1) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 17 =====================
size : 18
num_suborbits: 1
258 (*) : --0-----------1------1-----
258     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
259     : -0-----------1-------1-----
259     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
260     : --0-----------1-------1----
260     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
261     : 0-----------1---------1----
261     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
262     : -0-----------1---------1---
262     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
263     : 0-----------1----------1---
263     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
264     : -----0--------1---1--------
264     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
265     : ----0--------1----1--------
265     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
266     : -----0--------1----1-------
266     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
267     : ---0--------1------1-------
267     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
268     : ----0--------1------1------
268     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
269     : ---0--------1-------1------
269     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
270     : --------0-----11-----------
270     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
271     : -------0-----1-1-----------
271     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
272     : --------0-----1-1----------
272     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
273     : ------0-----1---1----------
273     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
274     : -------0-----1---1---------
274     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
275     : ------0-----1----1---------
275     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer2)', 'promise(acceptor2,proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer2)', 'promise(acceptor2,proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 18 =====================
size : 36
num_suborbits: 1
276 (*) : --------------1--0---1-----
276     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
277     : -------------1--0----1-----
277     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
278     : --------------1--0----1----
278     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
279     : ------------1--0------1----
279     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
280     : -------------1--0------1---
280     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
281     : ------------1--0-------1---
281     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
282     : --------------1--01--------
282     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
283     : -------------1--0-1--------
283     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
284     : --------------1--0-1-------
284     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
285     : ------------1--0---1-------
285     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
286     : -------------1--0---1------
286     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
287     : ------------1--0----1------
287     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
288     : --------------1-----01-----
288     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
289     : -------------1-----0-1-----
289     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
290     : --------------1-----0-1----
290     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
291     : ------------1-----0---1----
291     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
292     : -------------1-----0---1---
292     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
293     : ------------1-----0----1---
293     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
294     : --------------11----0------
294     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
295     : -------------1-1---0-------
295     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
296     : --------------1-1---0------
296     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
297     : ------------1---1-0--------
297     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
298     : -------------1---1-0-------
298     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
299     : ------------1----10--------
299     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
300     : --------------1---1----0---
300     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
301     : -------------1----1---0----
301     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
302     : --------------1----1---0---
302     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
303     : ------------1------1-0-----
303     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
304     : -------------1------1-0----
304     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
305     : ------------1-------10-----
305     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
306     : --------------11-------0---
306     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
307     : -------------1-1------0----
307     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
308     : --------------1-1------0---
308     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
309     : ------------1---1----0-----
309     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
310     : -------------1---1----0----
310     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
311     : ------------1----1---0-----
311     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', '~promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer2)', '~promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | promise(ACCEPTOR1,PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 19 =====================
size : 36
num_suborbits: 2
312 (*) : --------------1-1----1-----
312     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
313     : -------------1---1---1-----
313     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
314     : --------------11------1----
314     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
315     : ------------1----1----1----
315     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
316     : -------------1-1-------1---
316     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
317     : ------------1---1------1---
317     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
318     : --------------1-1-1--------
318     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
319     : -------------1---11--------
319     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
320     : --------------11---1-------
320     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
321     : ------------1----1-1-------
321     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
322     : -------------1-1----1------
322     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
323     : ------------1---1---1------
323     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
324     : --------------1----1-1-----
324     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
325     : -------------1------11-----
325     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
326     : --------------1---1---1----
326     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
327     : ------------1-------1-1----
327     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
328     : -------------1----1----1---
328     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
329     : ------------1------1---1---
329     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
339 (*) : --------------11-----1-----
339     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
340     : -------------1-1-----1-----
340     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
341     : --------------1-1-----1----
341     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
342     : ------------1---1-----1----
342     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
343     : -------------1---1-----1---
343     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
344     : ------------1----1-----1---
344     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
345     : --------------11--1--------
345     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
346     : -------------1-1--1--------
346     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
347     : --------------1-1--1-------
347     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
348     : ------------1---1--1-------
348     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
349     : -------------1---1--1------
349     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
350     : ------------1----1--1------
350     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
351     : --------------1---1--1-----
351     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
352     : -------------1----1--1-----
352     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
353     : --------------1----1--1----
353     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
354     : ------------1------1--1----
354     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
355     : -------------1------1--1---
355     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
356     : ------------1-------1--1---
356     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)', 'promise(ACCEPTOR1,PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,PROPOSER1,ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR1,PROPOSER2) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
357 (*) : ------0-----1--0-----------
357     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
358     : -------0-----1--0----------
358     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
359     : --------0-----1--0---------
359     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
360     : ---0--------1-----0--------
360     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
361     : ----0--------1-----0-------
361     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
362     : -----0--------1-----0------
362     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
363     : 0-----------1--------0-----
363     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
364     : -0-----------1--------0----
364     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
365     : --0-----------1--------0---
365     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)', '~promise(acceptor0,proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)', '~promise(acceptor0,proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0)


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ------------1--0--0--------
366     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
367     : -------------1--0--0-------
367     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
368     : --------------1--0--0------
368     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
369     : ------------1--0-----0-----
369     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
370     : -------------1--0-----0----
370     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
371     : --------------1--0-----0---
371     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
372     : ------------1-----0--0-----
372     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
373     : -------------1-----0--0----
373     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
374     : --------------1-----0--0---
374     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ----------0-------0-0----0-
375     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
376     : ----------0-------00------0
376     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
377     : ----------0--------00---0--
377     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
378     : -----------0---------0-0-0-
378     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
379     : -----------0---------00---0
379     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
380     : -----------0----------000--
380     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
381     : ---------0-----0-0-------0-
381     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
382     : ---------0-----00---------0
382     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
383     : ---------0------00------0--
383     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 2, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
387 (*) : ---------0-----0---------00
387     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
388     : ---------0------0-------0-0
388     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
389     : ---------0-------0------00-
389     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
390     : ----------0-------0------00
390     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
391     : ----------0--------0----0-0
391     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
392     : ----------0---------0---00-
392     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
393     : -----------0---------0---00
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
394     : -----------0----------0-0-0
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
395     : -----------0-----------000-
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
396 (*) : ---------0--------------000
396     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
397     : ----------0-------------000
397     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
398     : -----------0------------000
398     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$2]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))


=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : -----0--0-----1--------1---
399     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
400     : ----0--0-----1--------1----
400     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
401     : ---0--0-----1--------1-----
401     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
402     : --0-----0-----1-----1------
402     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
403     : -0-----0-----1-----1-------
403     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
404     : 0-----0-----1-----1--------
404     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
405     : --0--0--------1--1---------
405     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
406     : -0--0--------1--1----------
406     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
407     : 0--0--------1--1-----------
407     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor2,proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor2,proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,QUORUM0,PROPOSER0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | QUORUM0 = QUORUM1


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : --0--0--0-----1------------
408     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
409     : -0--0--0-----1-------------
409     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
410     : 0--0--0-----1--------------
410     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))


=== Prime Orbit 30 =====================
size : 36
num_suborbits: 1
429 (*) : ----0------0----1----0----0
429     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
430     : -----0-----0-----1---0---0-
430     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
431     : ---0-------0---1------0---0
431     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
432     : -----0-----0-----1----0-0--
432     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
433     : ---0-------0---1-------0-0-
433     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
434     : ----0------0----1------00--
434     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
435     : -0--------0-----1-0-------0
435     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
436     : --0-------0------10------0-
436     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
437     : 0---------0----1---0------0
437     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
438     : --0-------0------1-0----0--
438     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
439     : 0---------0----1----0----0-
439     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
440     : -0--------0-----1---0---0--
440     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
441     : -------0---0-------1-0----0
441     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
442     : --------0--0--------10---0-
442     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
443     : ------0----0------1---0---0
443     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
444     : --------0--0--------1-0-0--
444     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
445     : ------0----0------1----0-0-
445     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
446     : -------0---0-------1---00--
446     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
447     : -0-------0-----0---1------0
447     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
448     : --0------0-----0----1----0-
448     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
449     : 0--------0------0-1-------0
449     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
450     : --0------0------0---1---0--
450     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
451     : 0--------0-------01------0-
451     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
452     : -0-------0-------0-1----0--
452     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
453     : -------0--0-------0---1---0
453     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
454     : --------0-0-------0----1-0-
454     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
455     : ------0---0--------0-1----0
455     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
456     : --------0-0--------0---10--
456     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
457     : ------0---0---------01---0-
457     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
458     : -------0--0---------0-1-0--
458     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
459     : ----0----0-----0------1---0
459     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
460     : -----0---0-----0-------1-0-
460     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
461     : ---0-----0------0----1----0
461     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
462     : -----0---0------0------10--
462     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
463     : ---0-----0-------0---1---0-
463     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
464     : ----0----0-------0----1-0--
464     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$promise$0$0, 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER2)', '~didNotPromise(ACCEPTOR1)', '~promise(ACCEPTOR1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,PROPOSER0,ACCEPTOR0. start(PROPOSER2) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
465 (*) : -0--------0-----1-------0-0
465     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
466     : --0-------0------1------00-
466     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
467     : 0---------0----1---------00
467     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
468     : ----0------0----1-------0-0
468     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
469     : -----0-----0-----1------00-
469     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
470     : ---0-------0---1---------00
470     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
471     : -0-------0---------1----0-0
471     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
472     : --0------0----------1---00-
472     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
473     : 0--------0--------1------00
473     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
474     : -------0---0-------1----0-0
474     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
475     : --------0--0--------1---00-
475     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
476     : ------0----0------1------00
476     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
477     : ----0----0------------1-0-0
477     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
478     : -----0---0-------------100-
478     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
479     : ---0-----0-----------1---00
479     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
480     : -------0--0-----------1-0-0
480     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
481     : --------0-0------------100-
481     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
482     : ------0---0----------1---00
482     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$promise$0$0, 'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 32 =====================
size : 9
num_suborbits: 1
483 (*) : -0-------00-------------0-0
483     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
484     : --0------00-------------00-
484     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
485     : 0--------00--------------00
485     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
486     : ----0----0-0------------0-0
486     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
487     : -----0---0-0------------00-
487     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
488     : ---0-----0-0-------------00
488     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
489     : -------0--00------------0-0
489     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
490     : --------0-00------------00-
490     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
491     : ------0---00-------------00
491     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 33 =====================
size : 36
num_suborbits: 1
492 (*) : -0-----1-0-----0----------0
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
493     : --0-----10-----0---------0-
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
494     : 0-----1--0------0---------0
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
495     : --0-----10------0-------0--
495     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
496     : 0-----1--0-------0-------0-
496     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
497     : -0-----1-0-------0------0--
497     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
498     : ----0--1-0-----0----------0
498     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
499     : -----0--10-----0---------0-
499     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
500     : ---0--1--0------0---------0
500     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
501     : -----0--10------0-------0--
501     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
502     : ---0--1--0-------0-------0-
502     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
503     : ----0--1-0-------0------0--
503     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
504     : -0--1-----0-------0-------0
504     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
505     : --0--1----0-------0------0-
505     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
506     : 0--1------0--------0------0
506     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
507     : --0--1----0--------0----0--
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
508     : 0--1------0---------0----0-
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
509     : -0--1-----0---------0---0--
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
510     : ----1--0--0-------0-------0
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
511     : -----1--0-0-------0------0-
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
512     : ---1--0---0--------0------0
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
513     : -----1--0-0--------0----0--
513     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
514     : ---1--0---0---------0----0-
514     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
515     : ----1--0--0---------0---0--
515     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
516     : -1--0------0---------0----0
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
517     : --1--0-----0---------0---0-
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
518     : 1--0-------0----------0---0
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
519     : --1--0-----0----------0-0--
519     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
520     : 1--0-------0-----------0-0-
520     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
521     : -1--0------0-----------00--
521     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
522     : -1-----0---0---------0----0
522     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
523     : --1-----0--0---------0---0-
523     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
524     : 1-----0----0----------0---0
524     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
525     : --1-----0--0----------0-0--
525     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
526     : 1-----0----0-----------0-0-
526     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
527     : -1-----0---0-----------00--
527     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '1$start': 1, '0$member': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', '~promise(ACCEPTOR0,PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,QUORUM1,PROPOSER0,ACCEPTOR0. start(PROPOSER2) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
528 (*) : ----0--1-0--------------0-0
528     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
529     : -----0--10--------------00-
529     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
530     : ---0--1--0---------------00
530     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
531     : -0-----1-0--------------0-0
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
532     : --0-----10--------------00-
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
533     : 0-----1--0---------------00
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
534     : ----1--0--0-------------0-0
534     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
535     : -----1--0-0-------------00-
535     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
536     : ---1--0---0--------------00
536     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
537     : -0--1-----0-------------0-0
537     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
538     : --0--1----0-------------00-
538     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
539     : 0--1------0--------------00
539     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
540     : -1-----0---0------------0-0
540     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
541     : --1-----0--0------------00-
541     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
542     : 1-----0----0-------------00
542     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
543     : -1--0------0------------0-0
543     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
544     : --1--0-----0------------00-
544     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
545     : 1--0-------0-------------00
545     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$chosenAt': 1, '1$didNotPromise': 1, '1$start': 2, '0$member': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,QUORUM0,ACCEPTOR0,PROPOSER1. chosenAt(QUORUM1,PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : --0-0----0----------1-1-0--
564     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
565     : -0---0---0---------1---10--
565     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
566     : --00-----0----------11---0-
566     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
567     : 0----0---0--------1----1-0-
567     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
568     : -0-0-----0---------1-1----0
568     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
569     : 0---0----0--------1---1---0
569     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
570     : --0----0--0------1----1-0--
570     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
571     : -0------0-0-----1------10--
571     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
572     : --0---0---0------1---1---0-
572     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
573     : 0-------0-0----1-------1-0-
573     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
574     : -0----0---0-----1----1----0
574     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
575     : 0------0--0----1------1---0
575     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
576     : -----0-0---0-----1-1----0--
576     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
577     : ----0---0--0----1---1---0--
577     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
578     : -----00----0-----11------0-
578     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
579     : ---0----0--0---1----1----0-
579     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
580     : ----0-0----0----1-1-------0
580     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
581     : ---0---0---0---1---1------0
581     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$0$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0, proposer$1$chosenAt$1$0, proposer$0$promise$1$1, proposer$1$chosenAt$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1, acceptor$0$promise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$promise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR1,QUORUM1)', '~start(PROPOSER2)', '~chosenAt(QUORUM1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR0,QUORUM1)', 'promise(ACCEPTOR1,PROPOSER0)', 'promise(ACCEPTOR2,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR2,ACCEPTOR1,QUORUM1,PROPOSER0,ACCEPTOR0. member(ACCEPTOR1,QUORUM1) | start(PROPOSER2) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER0) | ~promise(ACCEPTOR2,PROPOSER1) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : 0-----0---0-1-------0----0-
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
601     : 0-----0---0-1------0------0
601     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
602     : -0-----0--0--1------0---0--
602     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
603     : -0-----0--0--1----0-------0
603     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
604     : --0-----0-0---1----0----0--
604     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
605     : --0-----0-0---1---0------0-
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
606     : ---0--0----01----------0-0-
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
607     : ---0--0----01---------0---0
607     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
608     : ----0--0---0-1---------00--
608     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
609     : ----0--0---0-1-------0----0
609     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
610     : -----0--0--0--1-------0-0--
610     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
611     : -----0--0--0--1------0---0-
611     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
612     : 0--0-----0--1----0-------0-
612     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
613     : 0--0-----0--1---0---------0
613     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
614     : -0--0----0---1---0------0--
614     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
615     : -0--0----0---1-0----------0
615     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
616     : --0--0---0----1-0-------0--
616     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
617     : --0--0---0----10---------0-
617     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~promise(ACCEPTOR0,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,QUORUM1,PROPOSER0,ACCEPTOR0. start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : 0-----0---0-1------------00
618     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
619     : -0-----0--0--1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
620     : --0-----0-0---1---------00-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
621     : ---0--0----01------------00
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
622     : ----0--0---0-1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
623     : -----0--0--0--1---------00-
623     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
624     : 0--0-----0--1------------00
624     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
625     : -0--0----0---1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
626     : --0--0---0----1---------00-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER1)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,QUORUM0,ACCEPTOR0,PROPOSER1. chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : ---0--0----01---------00---
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
628     : ----0--0---0-1-------0-0---
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
629     : -----0--0--0--1------00----
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
630     : 0-----0---0-1------00------
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
631     : -0-----0--0--1----0-0------
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
632     : --0-----0-0---1---00-------
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
633     : 0--0-----0--1---00---------
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
634     : -0--0----0---1-0-0---------
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
635     : --0--0---0----100----------
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER1)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR0,QUORUM1)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,QUORUM0,ACCEPTOR0,PROPOSER1. chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : --0------00----0--0------0-
636     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
637     : -0-------00----0--0-------0
637     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
638     : --0------00-----0--0----0--
638     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
639     : 0--------00-----0--0------0
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
640     : -0-------00------0--0---0--
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
641     : 0--------00------0--0----0-
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
642     : -----0---0-0---0-----0---0-
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
643     : ----0----0-0---0-----0----0
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
644     : -----0---0-0----0-----0-0--
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
645     : ---0-----0-0----0-----0---0
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
646     : ----0----0-0-----0-----00--
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
647     : ---0-----0-0-----0-----0-0-
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
648     : --------0-00------0--0---0-
648     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
649     : -------0--00------0--0----0
649     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
650     : --------0-00-------0--0-0--
650     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
651     : ------0---00-------0--0---0
651     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
652     : -------0--00--------0--00--
652     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
653     : ------0---00--------0--0-0-
653     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0, proposer$1$promise$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$promise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$promise$1; proposer$1$promise$1': [proposer$1$promise$1$0; proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$promise$1; proposer$1$promise$1': proposer$1$promise$1$0; proposer$1$promise$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', '~didNotPromise(ACCEPTOR1)', '~promise(ACCEPTOR1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~promise(ACCEPTOR0,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,PROPOSER0,ACCEPTOR0. start(PROPOSER2) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : --0--00---00-----1-------0-
654     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
655     : -0--0-0---00----1---------0
655     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
656     : --0--0-0--00-----1------0--
656     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
657     : 0--0---0--00---1----------0
657     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
658     : -0--0---0-00----1-------0--
658     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
659     : 0--0----0-00---1---------0-
659     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
660     : --00----00-0--------1----0-
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
661     : -0-0---0-0-0-------1------0
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
662     : --0-0---00-0--------1---0--
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
663     : 0---0-0--0-0------1-------0
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
664     : -0---0-0-0-0-------1----0--
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
665     : 0----00--0-0------1------0-
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
666     : 0----0--000------------1-0-
666     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
667     : 0---0--0-00-----------1---0
667     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
668     : -0---0--000------------10--
668     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
669     : -0-0--0--00----------1----0
669     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
670     : --0-0--0-00-----------1-0--
670     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
671     : --00--0--00----------1---0-
671     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 2, '0$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$2], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$2, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER1)', '~start(PROPOSER2)', '~member(ACCEPTOR0,QUORUM2)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR0,QUORUM1)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM2,QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR2,ACCEPTOR1,QUORUM1,PROPOSER0,ACCEPTOR0. ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM2,PROPOSER1) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | ~promise(ACCEPTOR0,PROPOSER0) | (QUORUM1 = QUORUM2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : --0---0---00-----1-----0-0-
672     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
673     : -0----0---00----1-----0---0
673     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
674     : --0----0--00-----1-----00--
674     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
675     : 0------0--00---1-----0----0
675     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
676     : -0------0-00----1-----0-0--
676     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
677     : 0-------0-00---1-----0---0-
677     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
678     : -----00---00-----1--0----0-
678     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
679     : ----0-0---00----1--0------0
679     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
680     : -----0-0--00-----1--0---0--
680     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
681     : ---0---0--00---1--0-------0
681     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
682     : ----0---0-00----1--0----0--
682     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
683     : ---0----0-00---1--0------0-
683     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
684     : --00-----0-0--------1--0-0-
684     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
685     : -0-0-----0-0-------1--0---0
685     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
686     : --0-0----0-0--------1--00--
686     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
687     : 0---0----0-0------1--0----0
687     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
688     : -0---0---0-0-------1--0-0--
688     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
689     : 0----0---0-0------1--0---0-
689     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
690     : ---0----00-0-----0--1----0-
690     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
691     : ---0---0-0-0----0--1------0
691     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
692     : ----0---00-0-----0--1---0--
692     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
693     : ----0-0--0-0---0--1-------0
693     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
694     : -----0-0-0-0----0--1----0--
694     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
695     : -----00--0-0---0--1------0-
695     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
696     : 0----0---00---------0--1-0-
696     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
697     : 0---0----00--------0--1---0
697     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
698     : -0---0---00---------0--10--
698     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
699     : -0-0-----00-------0--1----0
699     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
700     : --0-0----00--------0--1-0--
700     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
701     : --00-----00-------0--1---0-
701     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
702     : 0-------000------0-----1-0-
702     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
703     : 0------0-00-----0-----1---0
703     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
704     : -0------000------0-----10--
704     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
705     : -0----0--00----0-----1----0
705     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
706     : --0----0-00-----0-----1-0--
706     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
707     : --0---0--00----0-----1---0-
707     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0, proposer$1$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 2, '0$promise': 1, '1$promise': 1, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER2)', '~chosenAt(QUORUM1,PROPOSER1)', '~member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR1,QUORUM1)', '~promise(ACCEPTOR2,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR2,ACCEPTOR1,QUORUM1,PROPOSER0,ACCEPTOR0. start(PROPOSER2) | chosenAt(QUORUM1,PROPOSER1) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM1) | promise(ACCEPTOR2,PROPOSER0) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : -0---0--0000----------0-0--
717     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
718     : --0-0--0-000-----------00--
718     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
719     : 0----0--0000---------0---0-
719     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
720     : --00--0--000-----------0-0-
720     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
721     : 0---0--0-000---------0----0
721     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
722     : -0-0--0--000----------0---0
722     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
723     : --0-0---0000-------0----0--
723     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
724     : -0---0-0-000--------0---0--
724     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
725     : --00----0000------0------0-
725     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
726     : 0----00--000--------0----0-
726     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
727     : -0-0---0-000------0-------0
727     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
728     : 0---0-0--000-------0------0
728     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
729     : --0--0-0-000----0-------0--
729     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
730     : -0--0---0000-----0------0--
730     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
731     : --0--00--000---0---------0-
731     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
732     : 0--0----0000-----0-------0-
732     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
733     : -0--0-0--000---0----------0
733     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
734     : 0--0---0-000----0---------0
734     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 3, '1$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$0], 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': proposer$1$chosenAt$1$0; proposer$1$promise$1$0, 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER1)', '~start(PROPOSER2)', '~member(ACCEPTOR0,QUORUM2)', '~chosenAt(QUORUM1,PROPOSER1)', '~didNotPromise(ACCEPTOR2)', '~didNotPromise(ACCEPTOR0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR0,QUORUM1)', '~promise(ACCEPTOR2,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM2,QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR2,ACCEPTOR1,QUORUM1,PROPOSER0,ACCEPTOR0. ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM2,PROPOSER1) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | promise(ACCEPTOR2,PROPOSER0) | (QUORUM1 = QUORUM2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
735 (*) : -0------0000-----0----0-0--
735     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
736     : --0----0-000----0------00--
736     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
737     : 0-------0000-----0---0---0-
737     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
738     : --0---0--000---0-------0-0-
738     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
739     : 0------0-000----0----0----0
739     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
740     : -0----0--000---0------0---0
740     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
741     : ----0---0000-----0-0----0--
741     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
742     : -----0-0-000----0---0---0--
742     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
743     : ---0----0000-----00------0-
743     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
744     : -----00--000---0----0----0-
744     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
745     : ---0---0-000----0-0-------0
745     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
746     : ----0-0--000---0---0------0
746     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
747     : -0---0---000--------0-0-0--
747     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
748     : --0-0----000-------0---00--
748     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
749     : 0----0---000--------00---0-
749     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
750     : --00-----000------0----0-0-
750     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
751     : 0---0----000-------0-0----0
751     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
752     : -0-0-----000------0---0---0
752     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$1, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 3, '1$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0, proposer$1$promise$1$1, proposer$1$chosenAt$1$1, proposer$1$promise$1$0]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER2)', '~chosenAt(QUORUM1,PROPOSER1)', '~member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR2)', '~didNotPromise(ACCEPTOR0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR1,QUORUM1)', '~promise(ACCEPTOR2,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR2,ACCEPTOR1,QUORUM1,PROPOSER0,ACCEPTOR0. start(PROPOSER2) | chosenAt(QUORUM1,PROPOSER1) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR1,QUORUM1) | promise(ACCEPTOR2,PROPOSER0) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$3': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$4': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$5': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 6, '1$didNotPromise': 3, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER0)', '~member(ACCEPTOR0,QUORUM2)', '~didNotPromise(ACCEPTOR2)', '~didNotPromise(ACCEPTOR0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM2,QUORUM0,PROPOSER1,ACCEPTOR2,ACCEPTOR1,QUORUM1,ACCEPTOR0. ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER1) | (exists PROPOSER0. ((chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM1 = QUORUM2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1)


===========================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

===========================================================================================================================


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
141 (*) : ----------------11---------
141     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
142     : ---------------1-1---------
142     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
143     : ---------------11----------
143     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
144     : -------------------11------
144     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
145     : ------------------1-1------
145     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
146     : ------------------11-------
146     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
147     : ----------------------11---
147     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
148     : ---------------------1-1---
148     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
149     : ---------------------11----
149     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 0 =====================
size : 18
num_suborbits: 1
0 (*) : -1----------1--------------
0     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
1     : --1---------1--------------
1     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
2     : 1------------1-------------
2     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
3     : --1----------1-------------
3     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
4     : 1-------------1------------
4     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
5     : -1------------1------------
5     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
6     : ----1-------1--------------
6     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
7     : -----1------1--------------
7     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
8     : ---1---------1-------------
8     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
9     : -----1-------1-------------
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
10     : ---1----------1------------
10     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
11     : ----1---------1------------
11     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
12     : -------1----1--------------
12     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
13     : --------1---1--------------
13     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
14     : ------1------1-------------
14     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
15     : --------1----1-------------
15     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
16     : ------1-------1------------
16     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
17     : -------1------1------------
17     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall QUORUM0,PROPOSER0,PROPOSER1. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
18 (*) : ------------1-1------------
18     : ['leader(proposer0)', 'leader(proposer2)']
19     : ------------11-------------
19     : ['leader(proposer0)', 'leader(proposer1)']
20     : -------------11------------
20     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,PROPOSER1. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 5




=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
21 (*) : ------------1-----------0--
21     : ['leader(proposer0)', '~start(proposer0)']
22     : -------------1-----------0-
22     : ['leader(proposer1)', '~start(proposer1)']
23     : --------------1-----------0
23     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)
qcost : 3




=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
114 (*) : --------1-----------------0
114     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
115     : -------1-----------------0-
115     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
116     : ------1-----------------0--
116     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
117     : -----1--------------------0
117     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
118     : ----1--------------------0-
118     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
119     : ---1--------------------0--
119     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
120     : --1-----------------------0
120     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
121     : -1-----------------------0-
121     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
122     : 1-----------------------0--
122     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall QUORUM0,PROPOSER0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)
qcost : 4




=== Prime Orbit 10 =====================
size : 9
num_suborbits: 1
150 (*) : ----------------1--------0-
150     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
151     : -----------------1--------0
151     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
152     : ---------------1--------0--
152     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
153     : -------------------1-----0-
153     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
154     : --------------------1-----0
154     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
155     : ------------------1-----0--
155     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
156     : ----------------------1--0-
156     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
157     : -----------------------1--0
157     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
158     : ---------------------1--0--
158     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : 0----------11--------------
186     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
187     : -0---------1-1-------------
187     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
188     : --0--------1--1------------
188     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
189     : ---0------1-1--------------
189     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
190     : ----0-----1--1-------------
190     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
191     : -----0----1---1------------
191     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
192     : ------0--1--1--------------
192     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
193     : -------0-1---1-------------
193     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
194     : --------01----1------------
194     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall QUORUM0,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~didNotPromise(ACCEPTOR0)
qcost : 7




=== Prime Orbit 14 =====================
size : 18
num_suborbits: 1
195 (*) : -----------11--0-----------
195     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
196     : -----------1-1--0----------
196     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
197     : -----------1--1--0---------
197     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
198     : ----------1-1--0-----------
198     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
199     : ----------1--1--0----------
199     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
200     : ----------1---1--0---------
200     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
201     : -----------11-----0--------
201     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
202     : -----------1-1-----0-------
202     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
203     : -----------1--1-----0------
203     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
204     : ---------1--1-----0--------
204     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
205     : ---------1---1-----0-------
205     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
206     : ---------1----1-----0------
206     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
207     : ----------1-1--------0-----
207     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
208     : ----------1--1--------0----
208     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
209     : ----------1---1--------0---
209     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
210     : ---------1--1--------0-----
210     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
211     : ---------1---1--------0----
211     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
212     : ---------1----1--------0---
212     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 15 =====================
size : 36
num_suborbits: 1
213 (*) : -----------11----1---------
213     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
214     : -----------11---1----------
214     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
215     : -----------1-1---1---------
215     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
216     : -----------1-1-1-----------
216     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
217     : -----------1--1-1----------
217     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
218     : -----------1--11-----------
218     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
219     : ----------1-1----1---------
219     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
220     : ----------1-1---1----------
220     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
221     : ----------1--1---1---------
221     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
222     : ----------1--1-1-----------
222     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
223     : ----------1---1-1----------
223     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
224     : ----------1---11-----------
224     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
225     : -----------11-------1------
225     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
226     : -----------11------1-------
226     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
227     : -----------1-1------1------
227     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
228     : -----------1-1----1--------
228     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
229     : -----------1--1----1-------
229     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
230     : -----------1--1---1--------
230     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
231     : ---------1--1-------1------
231     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
232     : ---------1--1------1-------
232     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
233     : ---------1---1------1------
233     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
234     : ---------1---1----1--------
234     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
235     : ---------1----1----1-------
235     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
236     : ---------1----1---1--------
236     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
237     : ----------1-1----------1---
237     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
238     : ----------1-1---------1----
238     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
239     : ----------1--1---------1---
239     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
240     : ----------1--1-------1-----
240     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
241     : ----------1---1-------1----
241     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
242     : ----------1---1------1-----
242     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
243     : ---------1--1----------1---
243     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
244     : ---------1--1---------1----
244     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
245     : ---------1---1---------1---
245     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
246     : ---------1---1-------1-----
246     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
247     : ---------1----1-------1----
247     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
248     : ---------1----1------1-----
248     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | ~didNotPromise(ACCEPTOR0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 16 =====================
size : 9
num_suborbits: 1
249 (*) : ----------111--------------
249     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
250     : ----------11-1-------------
250     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
251     : ----------11--1------------
251     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
252     : ---------1-11--------------
252     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
253     : ---------1-1-1-------------
253     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
254     : ---------1-1--1------------
254     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
255     : ---------11-1--------------
255     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
256     : ---------11--1-------------
256     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
257     : ---------11---1------------
257     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR1) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 17 =====================
size : 18
num_suborbits: 1
258 (*) : --0-----------1------1-----
258     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
259     : -0-----------1-------1-----
259     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
260     : --0-----------1-------1----
260     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
261     : 0-----------1---------1----
261     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
262     : -0-----------1---------1---
262     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
263     : 0-----------1----------1---
263     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
264     : -----0--------1---1--------
264     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
265     : ----0--------1----1--------
265     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
266     : -----0--------1----1-------
266     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
267     : ---0--------1------1-------
267     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
268     : ----0--------1------1------
268     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
269     : ---0--------1-------1------
269     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
270     : --------0-----11-----------
270     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
271     : -------0-----1-1-----------
271     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
272     : --------0-----1-1----------
272     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
273     : ------0-----1---1----------
273     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
274     : -------0-----1---1---------
274     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
275     : ------0-----1----1---------
275     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall QUORUM0,PROPOSER0,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 18 =====================
size : 36
num_suborbits: 1
276 (*) : --------------1--0---1-----
276     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
277     : -------------1--0----1-----
277     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
278     : --------------1--0----1----
278     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
279     : ------------1--0------1----
279     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
280     : -------------1--0------1---
280     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
281     : ------------1--0-------1---
281     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
282     : --------------1--01--------
282     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
283     : -------------1--0-1--------
283     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
284     : --------------1--0-1-------
284     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
285     : ------------1--0---1-------
285     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
286     : -------------1--0---1------
286     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
287     : ------------1--0----1------
287     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
288     : --------------1-----01-----
288     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
289     : -------------1-----0-1-----
289     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
290     : --------------1-----0-1----
290     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
291     : ------------1-----0---1----
291     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
292     : -------------1-----0---1---
292     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
293     : ------------1-----0----1---
293     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
294     : --------------11----0------
294     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
295     : -------------1-1---0-------
295     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
296     : --------------1-1---0------
296     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
297     : ------------1---1-0--------
297     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
298     : -------------1---1-0-------
298     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
299     : ------------1----10--------
299     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
300     : --------------1---1----0---
300     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
301     : -------------1----1---0----
301     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
302     : --------------1----1---0---
302     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
303     : ------------1------1-0-----
303     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
304     : -------------1------1-0----
304     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
305     : ------------1-------10-----
305     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
306     : --------------11-------0---
306     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
307     : -------------1-1------0----
307     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
308     : --------------1-1------0---
308     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
309     : ------------1---1----0-----
309     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
310     : -------------1---1----0----
310     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
311     : ------------1----1---0-----
311     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | promise(ACCEPTOR1,PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 19 =====================
size : 36
num_suborbits: 2
312 (*) : --------------1-1----1-----
312     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
313     : -------------1---1---1-----
313     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
314     : --------------11------1----
314     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
315     : ------------1----1----1----
315     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
316     : -------------1-1-------1---
316     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
317     : ------------1---1------1---
317     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
318     : --------------1-1-1--------
318     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
319     : -------------1---11--------
319     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
320     : --------------11---1-------
320     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
321     : ------------1----1-1-------
321     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
322     : -------------1-1----1------
322     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
323     : ------------1---1---1------
323     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
324     : --------------1----1-1-----
324     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
325     : -------------1------11-----
325     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
326     : --------------1---1---1----
326     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
327     : ------------1-------1-1----
327     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
328     : -------------1----1----1---
328     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
329     : ------------1------1---1---
329     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
339 (*) : --------------11-----1-----
339     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
340     : -------------1-1-----1-----
340     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
341     : --------------1-1-----1----
341     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
342     : ------------1---1-----1----
342     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
343     : -------------1---1-----1---
343     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
344     : ------------1----1-----1---
344     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
345     : --------------11--1--------
345     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
346     : -------------1-1--1--------
346     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
347     : --------------1-1--1-------
347     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
348     : ------------1---1--1-------
348     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
349     : -------------1---1--1------
349     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
350     : ------------1----1--1------
350     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
351     : --------------1---1--1-----
351     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
352     : -------------1----1--1-----
352     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
353     : --------------1----1--1----
353     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
354     : ------------1------1--1----
354     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
355     : -------------1------1--1---
355     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
356     : ------------1-------1--1---
356     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
num_forall :   5
num_exists :   0
num_literals : 6
quantified form : forall PROPOSER2,PROPOSER1,ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR1,PROPOSER2) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 11




=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
357 (*) : ------0-----1--0-----------
357     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
358     : -------0-----1--0----------
358     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
359     : --------0-----1--0---------
359     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
360     : ---0--------1-----0--------
360     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
361     : ----0--------1-----0-------
361     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
362     : -----0--------1-----0------
362     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
363     : 0-----------1--------0-----
363     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
364     : -0-----------1--------0----
364     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
365     : --0-----------1--------0---
365     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall QUORUM0,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0)
qcost : 7




=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ------------1--0--0--------
366     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
367     : -------------1--0--0-------
367     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
368     : --------------1--0--0------
368     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
369     : ------------1--0-----0-----
369     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
370     : -------------1--0-----0----
370     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
371     : --------------1--0-----0---
371     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
372     : ------------1-----0--0-----
372     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
373     : -------------1-----0--0----
373     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
374     : --------------1-----0--0---
374     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ----------0-------0-0----0-
375     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
376     : ----------0-------00------0
376     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
377     : ----------0--------00---0--
377     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
378     : -----------0---------0-0-0-
378     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
379     : -----------0---------00---0
379     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
380     : -----------0----------000--
380     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
381     : ---------0-----0-0-------0-
381     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
382     : ---------0-----00---------0
382     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
383     : ---------0------00------0--
383     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
387 (*) : ---------0-----0---------00
387     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
388     : ---------0------0-------0-0
388     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
389     : ---------0-------0------00-
389     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
390     : ----------0-------0------00
390     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
391     : ----------0--------0----0-0
391     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
392     : ----------0---------0---00-
392     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
393     : -----------0---------0---00
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
394     : -----------0----------0-0-0
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
395     : -----------0-----------000-
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
396 (*) : ---------0--------------000
396     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
397     : ----------0-------------000
397     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
398     : -----------0------------000
398     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))
qcost : 4




=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : -----0--0-----1--------1---
399     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
400     : ----0--0-----1--------1----
400     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
401     : ---0--0-----1--------1-----
401     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
402     : --0-----0-----1-----1------
402     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
403     : -0-----0-----1-----1-------
403     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
404     : 0-----0-----1-----1--------
404     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
405     : --0--0--------1--1---------
405     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
406     : -0--0--------1--1----------
406     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
407     : 0--0--------1--1-----------
407     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall QUORUM1,QUORUM0,PROPOSER0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : --0--0--0-----1------------
408     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
409     : -0--0--0-----1-------------
409     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
410     : 0--0--0-----1--------------
410     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))
qcost : 4




=== Prime Orbit 30 =====================
size : 36
num_suborbits: 1
429 (*) : ----0------0----1----0----0
429     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
430     : -----0-----0-----1---0---0-
430     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
431     : ---0-------0---1------0---0
431     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
432     : -----0-----0-----1----0-0--
432     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
433     : ---0-------0---1-------0-0-
433     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
434     : ----0------0----1------00--
434     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
435     : -0--------0-----1-0-------0
435     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
436     : --0-------0------10------0-
436     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
437     : 0---------0----1---0------0
437     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
438     : --0-------0------1-0----0--
438     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
439     : 0---------0----1----0----0-
439     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
440     : -0--------0-----1---0---0--
440     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
441     : -------0---0-------1-0----0
441     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
442     : --------0--0--------10---0-
442     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
443     : ------0----0------1---0---0
443     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
444     : --------0--0--------1-0-0--
444     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
445     : ------0----0------1----0-0-
445     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
446     : -------0---0-------1---00--
446     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
447     : -0-------0-----0---1------0
447     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
448     : --0------0-----0----1----0-
448     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
449     : 0--------0------0-1-------0
449     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
450     : --0------0------0---1---0--
450     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
451     : 0--------0-------01------0-
451     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
452     : -0-------0-------0-1----0--
452     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
453     : -------0--0-------0---1---0
453     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
454     : --------0-0-------0----1-0-
454     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
455     : ------0---0--------0-1----0
455     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
456     : --------0-0--------0---10--
456     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
457     : ------0---0---------01---0-
457     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
458     : -------0--0---------0-1-0--
458     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
459     : ----0----0-----0------1---0
459     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
460     : -----0---0-----0-------1-0-
460     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
461     : ---0-----0------0----1----0
461     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
462     : -----0---0------0------10--
462     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
463     : ---0-----0-------0---1---0-
463     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
464     : ----0----0-------0----1-0--
464     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,PROPOSER0,ACCEPTOR0. start(PROPOSER2) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 17




=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
465 (*) : -0--------0-----1-------0-0
465     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
466     : --0-------0------1------00-
466     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
467     : 0---------0----1---------00
467     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
468     : ----0------0----1-------0-0
468     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
469     : -----0-----0-----1------00-
469     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
470     : ---0-------0---1---------00
470     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
471     : -0-------0---------1----0-0
471     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
472     : --0------0----------1---00-
472     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
473     : 0--------0--------1------00
473     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
474     : -------0---0-------1----0-0
474     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
475     : --------0--0--------1---00-
475     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
476     : ------0----0------1------00
476     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
477     : ----0----0------------1-0-0
477     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
478     : -----0---0-------------100-
478     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
479     : ---0-----0-----------1---00
479     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
480     : -------0--0-----------1-0-0
480     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
481     : --------0-0------------100-
481     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
482     : ------0---0----------1---00
482     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR1,QUORUM0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 32 =====================
size : 9
num_suborbits: 1
483 (*) : -0-------00-------------0-0
483     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
484     : --0------00-------------00-
484     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
485     : 0--------00--------------00
485     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
486     : ----0----0-0------------0-0
486     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
487     : -----0---0-0------------00-
487     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
488     : ---0-----0-0-------------00
488     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
489     : -------0--00------------0-0
489     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
490     : --------0-00------------00-
490     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
491     : ------0---00-------------00
491     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR1,QUORUM0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 33 =====================
size : 36
num_suborbits: 1
492 (*) : -0-----1-0-----0----------0
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
493     : --0-----10-----0---------0-
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
494     : 0-----1--0------0---------0
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
495     : --0-----10------0-------0--
495     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
496     : 0-----1--0-------0-------0-
496     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
497     : -0-----1-0-------0------0--
497     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
498     : ----0--1-0-----0----------0
498     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
499     : -----0--10-----0---------0-
499     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
500     : ---0--1--0------0---------0
500     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
501     : -----0--10------0-------0--
501     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
502     : ---0--1--0-------0-------0-
502     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
503     : ----0--1-0-------0------0--
503     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
504     : -0--1-----0-------0-------0
504     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
505     : --0--1----0-------0------0-
505     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
506     : 0--1------0--------0------0
506     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
507     : --0--1----0--------0----0--
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
508     : 0--1------0---------0----0-
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
509     : -0--1-----0---------0---0--
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
510     : ----1--0--0-------0-------0
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
511     : -----1--0-0-------0------0-
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
512     : ---1--0---0--------0------0
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
513     : -----1--0-0--------0----0--
513     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
514     : ---1--0---0---------0----0-
514     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
515     : ----1--0--0---------0---0--
515     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
516     : -1--0------0---------0----0
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
517     : --1--0-----0---------0---0-
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
518     : 1--0-------0----------0---0
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
519     : --1--0-----0----------0-0--
519     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
520     : 1--0-------0-----------0-0-
520     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
521     : -1--0------0-----------00--
521     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
522     : -1-----0---0---------0----0
522     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
523     : --1-----0--0---------0---0-
523     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
524     : 1-----0----0----------0---0
524     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
525     : --1-----0--0----------0-0--
525     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
526     : 1-----0----0-----------0-0-
526     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
527     : -1-----0---0-----------00--
527     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,QUORUM1,PROPOSER0,ACCEPTOR0. start(PROPOSER2) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1)
qcost : 17




=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
528 (*) : ----0--1-0--------------0-0
528     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
529     : -----0--10--------------00-
529     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
530     : ---0--1--0---------------00
530     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
531     : -0-----1-0--------------0-0
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
532     : --0-----10--------------00-
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
533     : 0-----1--0---------------00
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
534     : ----1--0--0-------------0-0
534     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
535     : -----1--0-0-------------00-
535     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
536     : ---1--0---0--------------00
536     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
537     : -0--1-----0-------------0-0
537     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
538     : --0--1----0-------------00-
538     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
539     : 0--1------0--------------00
539     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
540     : -1-----0---0------------0-0
540     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
541     : --1-----0--0------------00-
541     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
542     : 1-----0----0-------------00
542     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
543     : -1--0------0------------0-0
543     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
544     : --1--0-----0------------00-
544     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
545     : 1--0-------0-------------00
545     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall QUORUM1,QUORUM0,ACCEPTOR0,PROPOSER1. chosenAt(QUORUM1,PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 13




=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : --0-0----0----------1-1-0--
564     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
565     : -0---0---0---------1---10--
565     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
566     : --00-----0----------11---0-
566     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
567     : 0----0---0--------1----1-0-
567     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
568     : -0-0-----0---------1-1----0
568     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
569     : 0---0----0--------1---1---0
569     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
570     : --0----0--0------1----1-0--
570     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
571     : -0------0-0-----1------10--
571     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
572     : --0---0---0------1---1---0-
572     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
573     : 0-------0-0----1-------1-0-
573     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
574     : -0----0---0-----1----1----0
574     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
575     : 0------0--0----1------1---0
575     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
576     : -----0-0---0-----1-1----0--
576     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
577     : ----0---0--0----1---1---0--
577     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
578     : -----00----0-----11------0-
578     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
579     : ---0----0--0---1----1----0-
579     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
580     : ----0-0----0----1-1-------0
580     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
581     : ---0---0---0---1---1------0
581     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   8
num_exists :   0
num_literals : 19
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR2,ACCEPTOR1,QUORUM1,PROPOSER0,ACCEPTOR0. member(ACCEPTOR1,QUORUM1) | start(PROPOSER2) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER0) | ~promise(ACCEPTOR2,PROPOSER1) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 27




=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : 0-----0---0-1-------0----0-
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
601     : 0-----0---0-1------0------0
601     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
602     : -0-----0--0--1------0---0--
602     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
603     : -0-----0--0--1----0-------0
603     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
604     : --0-----0-0---1----0----0--
604     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
605     : --0-----0-0---1---0------0-
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
606     : ---0--0----01----------0-0-
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
607     : ---0--0----01---------0---0
607     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
608     : ----0--0---0-1---------00--
608     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
609     : ----0--0---0-1-------0----0
609     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
610     : -----0--0--0--1-------0-0--
610     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
611     : -----0--0--0--1------0---0-
611     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
612     : 0--0-----0--1----0-------0-
612     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
613     : 0--0-----0--1---0---------0
613     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
614     : -0--0----0---1---0------0--
614     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
615     : -0--0----0---1-0----------0
615     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
616     : --0--0---0----1-0-------0--
616     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
617     : --0--0---0----10---------0-
617     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,QUORUM1,PROPOSER0,ACCEPTOR0. start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1)
qcost : 18




=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : 0-----0---0-1------------00
618     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
619     : -0-----0--0--1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
620     : --0-----0-0---1---------00-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
621     : ---0--0----01------------00
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
622     : ----0--0---0-1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
623     : -----0--0--0--1---------00-
623     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
624     : 0--0-----0--1------------00
624     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
625     : -0--0----0---1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
626     : --0--0---0----1---------00-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall QUORUM1,QUORUM0,ACCEPTOR0,PROPOSER1. chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : ---0--0----01---------00---
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
628     : ----0--0---0-1-------0-0---
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
629     : -----0--0--0--1------00----
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
630     : 0-----0---0-1------00------
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
631     : -0-----0--0--1----0-0------
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
632     : --0-----0-0---1---00-------
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
633     : 0--0-----0--1---00---------
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
634     : -0--0----0---1-0-0---------
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
635     : --0--0---0----100----------
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall QUORUM1,QUORUM0,ACCEPTOR0,PROPOSER1. chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : --0------00----0--0------0-
636     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
637     : -0-------00----0--0-------0
637     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
638     : --0------00-----0--0----0--
638     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
639     : 0--------00-----0--0------0
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
640     : -0-------00------0--0---0--
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
641     : 0--------00------0--0----0-
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
642     : -----0---0-0---0-----0---0-
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
643     : ----0----0-0---0-----0----0
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
644     : -----0---0-0----0-----0-0--
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
645     : ---0-----0-0----0-----0---0
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
646     : ----0----0-0-----0-----00--
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
647     : ---0-----0-0-----0-----0-0-
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
648     : --------0-00------0--0---0-
648     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
649     : -------0--00------0--0----0
649     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
650     : --------0-00-------0--0-0--
650     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
651     : ------0---00-------0--0---0
651     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
652     : -------0--00--------0--00--
652     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
653     : ------0---00--------0--0-0-
653     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,PROPOSER0,ACCEPTOR0. start(PROPOSER2) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 18




=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : --0--00---00-----1-------0-
654     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
655     : -0--0-0---00----1---------0
655     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
656     : --0--0-0--00-----1------0--
656     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
657     : 0--0---0--00---1----------0
657     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
658     : -0--0---0-00----1-------0--
658     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
659     : 0--0----0-00---1---------0-
659     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
660     : --00----00-0--------1----0-
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
661     : -0-0---0-0-0-------1------0
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
662     : --0-0---00-0--------1---0--
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
663     : 0---0-0--0-0------1-------0
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
664     : -0---0-0-0-0-------1----0--
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
665     : 0----00--0-0------1------0-
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
666     : 0----0--000------------1-0-
666     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
667     : 0---0--0-00-----------1---0
667     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
668     : -0---0--000------------10--
668     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
669     : -0-0--0--00----------1----0
669     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
670     : --0-0--0-00-----------1-0--
670     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
671     : --00--0--00----------1---0-
671     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
num_forall :   9
num_exists :   0
num_literals : 25
quantified form : forall QUORUM2,QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR2,ACCEPTOR1,QUORUM1,PROPOSER0,ACCEPTOR0. ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM2,PROPOSER1) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | ~promise(ACCEPTOR0,PROPOSER0) | (QUORUM1 = QUORUM2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 34




=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : --0---0---00-----1-----0-0-
672     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
673     : -0----0---00----1-----0---0
673     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
674     : --0----0--00-----1-----00--
674     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
675     : 0------0--00---1-----0----0
675     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
676     : -0------0-00----1-----0-0--
676     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
677     : 0-------0-00---1-----0---0-
677     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
678     : -----00---00-----1--0----0-
678     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
679     : ----0-0---00----1--0------0
679     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
680     : -----0-0--00-----1--0---0--
680     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
681     : ---0---0--00---1--0-------0
681     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
682     : ----0---0-00----1--0----0--
682     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
683     : ---0----0-00---1--0------0-
683     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
684     : --00-----0-0--------1--0-0-
684     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
685     : -0-0-----0-0-------1--0---0
685     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
686     : --0-0----0-0--------1--00--
686     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
687     : 0---0----0-0------1--0----0
687     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
688     : -0---0---0-0-------1--0-0--
688     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
689     : 0----0---0-0------1--0---0-
689     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
690     : ---0----00-0-----0--1----0-
690     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
691     : ---0---0-0-0----0--1------0
691     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
692     : ----0---00-0-----0--1---0--
692     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
693     : ----0-0--0-0---0--1-------0
693     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
694     : -----0-0-0-0----0--1----0--
694     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
695     : -----00--0-0---0--1------0-
695     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
696     : 0----0---00---------0--1-0-
696     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
697     : 0---0----00--------0--1---0
697     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
698     : -0---0---00---------0--10--
698     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
699     : -0-0-----00-------0--1----0
699     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
700     : --0-0----00--------0--1-0--
700     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
701     : --00-----00-------0--1---0-
701     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
702     : 0-------000------0-----1-0-
702     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
703     : 0------0-00-----0-----1---0
703     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
704     : -0------000------0-----10--
704     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
705     : -0----0--00----0-----1----0
705     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
706     : --0----0-00-----0-----1-0--
706     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
707     : --0---0--00----0-----1---0-
707     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 20
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR2,ACCEPTOR1,QUORUM1,PROPOSER0,ACCEPTOR0. start(PROPOSER2) | chosenAt(QUORUM1,PROPOSER1) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM1) | promise(ACCEPTOR2,PROPOSER0) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 28




=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : -0---0--0000----------0-0--
717     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
718     : --0-0--0-000-----------00--
718     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
719     : 0----0--0000---------0---0-
719     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
720     : --00--0--000-----------0-0-
720     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
721     : 0---0--0-000---------0----0
721     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
722     : -0-0--0--000----------0---0
722     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
723     : --0-0---0000-------0----0--
723     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
724     : -0---0-0-000--------0---0--
724     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
725     : --00----0000------0------0-
725     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
726     : 0----00--000--------0----0-
726     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
727     : -0-0---0-000------0-------0
727     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
728     : 0---0-0--000-------0------0
728     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
729     : --0--0-0-000----0-------0--
729     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
730     : -0--0---0000-----0------0--
730     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
731     : --0--00--000---0---------0-
731     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
732     : 0--0----0000-----0-------0-
732     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
733     : -0--0-0--000---0----------0
733     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
734     : 0--0---0-000----0---------0
734     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
num_forall :   9
num_exists :   0
num_literals : 26
quantified form : forall QUORUM2,QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR2,ACCEPTOR1,QUORUM1,PROPOSER0,ACCEPTOR0. ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM2,PROPOSER1) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | promise(ACCEPTOR2,PROPOSER0) | (QUORUM1 = QUORUM2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 35




=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
735 (*) : -0------0000-----0----0-0--
735     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
736     : --0----0-000----0------00--
736     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
737     : 0-------0000-----0---0---0-
737     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
738     : --0---0--000---0-------0-0-
738     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
739     : 0------0-000----0----0----0
739     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
740     : -0----0--000---0------0---0
740     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
741     : ----0---0000-----0-0----0--
741     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
742     : -----0-0-000----0---0---0--
742     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
743     : ---0----0000-----00------0-
743     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
744     : -----00--000---0----0----0-
744     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
745     : ---0---0-000----0-0-------0
745     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
746     : ----0-0--000---0---0------0
746     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
747     : -0---0---000--------0-0-0--
747     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
748     : --0-0----000-------0---00--
748     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
749     : 0----0---000--------00---0-
749     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
750     : --00-----000------0----0-0-
750     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
751     : 0---0----000-------0-0----0
751     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
752     : -0-0-----000------0---0---0
752     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   8
num_exists :   0
num_literals : 21
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR2,ACCEPTOR1,QUORUM1,PROPOSER0,ACCEPTOR0. start(PROPOSER2) | chosenAt(QUORUM1,PROPOSER1) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR1,QUORUM1) | promise(ACCEPTOR2,PROPOSER0) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 29




=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   7
num_exists :   1
num_literals : 23
quantified form : forall QUORUM2,QUORUM0,PROPOSER1,ACCEPTOR2,ACCEPTOR1,QUORUM1,ACCEPTOR0. ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER1) | (exists PROPOSER0. ((chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM1 = QUORUM2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 31



[QRM NOTE]: Time elapsed since start: 10.709 seconds

[QRM NOTE]: Time elapsed since last: 2.667 seconds

[QRM NOTE]: Peak memory: 3326336 bytes


==========================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

==========================================================================================================


New level: 1
 pending : [0, 1, 2, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9]


Before reduction : 
 pending  : [0, 1, 2, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9]

Essensial at level 1 : set()

Before removed
 coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [0, 1, 2, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 1 among pending : [0, 1, 2, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]

Coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 1 with phase True at level 1

After decision at level 1
 pending : [0, 2, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1]


New level: 2
 pending : [0, 2, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1]


Before reduction : 
 pending  : [0, 2, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, 4294967296), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [0, 2, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1]


Solution : [9, 1] has cost 11.


Decide in level 2 among pending : [0, 2, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]

Coverage : [(0, 262144), (1, -1), (2, 4294967296), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 2 with phase True at level 2

After decision at level 2
 pending : [0, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2]


New level: 3
 pending : [0, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2]


Before reduction : 
 pending  : [0, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, 4294967296), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 524288), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [0, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2]


Solution : [9, 1, 2] has cost 14.


Decide in level 3 among pending : [0, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 524288), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [0, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26]


New level: 4
 pending : [0, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26]


Before reduction : 
 pending  : [0, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 524288), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, 536870912), (29, -1), (30, 524288), (31, 524288), (32, 268435456), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [0, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26]


Solution : [9, 1, 2, 26] has cost 18.


Decide in level 4 among pending : [0, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, 536870912), (29, -1), (30, 524288), (31, 524288), (32, 268435456), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [0, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28]


New level: 5
 pending : [0, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28]


Before reduction : 
 pending  : [0, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, 536870912), (29, -1), (30, 524288), (31, 524288), (32, 268435456), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 268435456), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [8, 10, 23, 25, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28]


Before reduction : 
 pending  : [8, 10, 23, 25, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 268435456), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 268435456), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [8, 10, 23, 25, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28]


Solution : [9, 1, 2, 26, 28] has cost 22.


Decide in level 5 among pending : [8, 10, 23, 25, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 45, 46, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 268435456), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [8, 10, 23, 25, 30, 31, 33, 34, 36, 38, 39, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32]


New level: 6
 pending : [8, 10, 23, 25, 30, 31, 33, 34, 36, 38, 39, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32]


Before reduction : 
 pending  : [8, 10, 23, 25, 30, 31, 33, 34, 36, 38, 39, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 268435456), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {34, 39, 31}

After reduction : 
 pending  : [8, 10, 23, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32]


Before reduction : 
 pending  : [8, 10, 23, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 10, 23, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32]


Solution : [9, 1, 2, 26, 28, 32] has cost 35.


Decide in level 6 among pending : [8, 10, 23, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 6

After decision at level 6
 pending : [8, 23, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32, 10]


New level: 7
 pending : [8, 23, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32, 10]


Before reduction : 
 pending  : [8, 23, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 36, 38, 8, 41, 42, 43, 45, 46, 49, 23, 25, 30}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 32, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 32, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 32, 10]


Solution : [9, 1, 2, 26, 28, 32, 10] has cost 39.


Before backtrack at level 7
 pending : []
 solution : [9, 1, 2, 26, 28, 32, 10]

After backtrack at level 7
 pending : [8, 23, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32, 10]


Invert decision for 10 at level 6


New level: 7
 pending : [8, 23, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32]


Before reduction : 
 pending  : [8, 23, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32]

Essensial at level 7 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 36, 38, 8, 41, 42, 43, 45, 46, 49, 25, 30}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 32, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 32, 23]


Solution : [9, 1, 2, 26, 28, 32, 23] has cost 42.


Before backtrack at level 7
 pending : []
 solution : [9, 1, 2, 26, 28, 32, 23]

After backtrack at level 7
 pending : [23, 8, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32]


Before backtrack at level 6
 pending : [23, 8, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 32]

After backtrack at level 6
 pending : [23, 8, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10]
 solution : [9, 1, 2, 26, 28, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [23, 8, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10]
 solution : [9, 1, 2, 26, 28]


Before reduction : 
 pending  : [23, 8, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10]
 solution : [9, 1, 2, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 8, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10]
 solution : [9, 1, 2, 26, 28]


Solution : [9, 1, 2, 26, 28] has cost 22.


Decide in level 6 among pending : [23, 8, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10]
 solution : [9, 1, 2, 26, 28, 25]


New level: 7
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10]
 solution : [9, 1, 2, 26, 28, 25]


Before reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10]
 solution : [9, 1, 2, 26, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 39, 31}

After reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]
 solution : [9, 1, 2, 26, 28, 25]


Before reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]
 solution : [9, 1, 2, 26, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]
 solution : [9, 1, 2, 26, 28, 25]


Solution : [9, 1, 2, 26, 28, 25] has cost 29.


Decide in level 7 among pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]
 solution : [9, 1, 2, 26, 28, 25, 23]


New level: 8
 pending : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]
 solution : [9, 1, 2, 26, 28, 25, 23]


Before reduction : 
 pending  : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]
 solution : [9, 1, 2, 26, 28, 25, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 38, 8, 41, 42, 43, 10, 45, 46, 49, 30}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 25, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 25, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 25, 23]


Solution : [9, 1, 2, 26, 28, 25, 23] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 2, 26, 28, 25, 23]

After backtrack at level 8
 pending : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]
 solution : [9, 1, 2, 26, 28, 25, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]
 solution : [9, 1, 2, 26, 28, 25]


Before reduction : 
 pending  : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]
 solution : [9, 1, 2, 26, 28, 25]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 38, 8, 41, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 25, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 25, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 25, 10]


Solution : [9, 1, 2, 26, 28, 25, 10] has cost 33.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 2, 26, 28, 25, 10]

After backtrack at level 8
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 25]


Before backtrack at level 7
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 28, 25]

After backtrack at level 7
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23]
 solution : [9, 1, 2, 26, 28, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23]
 solution : [9, 1, 2, 26, 28]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23]
 solution : [9, 1, 2, 26, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23]
 solution : [9, 1, 2, 26, 28]


Solution : [9, 1, 2, 26, 28] has cost 22.


Decide in level 7 among pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23]
 solution : [9, 1, 2, 26, 28, 10]


New level: 8
 pending : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23]
 solution : [9, 1, 2, 26, 28, 10]


Before reduction : 
 pending  : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23]
 solution : [9, 1, 2, 26, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 10]


Solution : [9, 1, 2, 26, 28, 10] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 2, 26, 28, 10]

After backtrack at level 8
 pending : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23]
 solution : [9, 1, 2, 26, 28, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23]
 solution : [9, 1, 2, 26, 28]


Before reduction : 
 pending  : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23]
 solution : [9, 1, 2, 26, 28]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 28, 23]


Solution : [9, 1, 2, 26, 28, 23] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 2, 26, 28, 23]

After backtrack at level 8
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39]
 solution : [9, 1, 2, 26, 28]


Before backtrack at level 7
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39]
 solution : [9, 1, 2, 26, 28]

After backtrack at level 7
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10]
 solution : [9, 1, 2, 26, 28]


Before backtrack at level 6
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10]
 solution : [9, 1, 2, 26, 28]

After backtrack at level 6
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25]
 solution : [9, 1, 2, 26, 28]


Before backtrack at level 5
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25]
 solution : [9, 1, 2, 26, 28]

After backtrack at level 5
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25, 0, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27, 40, 32]
 solution : [9, 1, 2, 26, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25, 0, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27, 40, 32]
 solution : [9, 1, 2, 26]


Before reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25, 0, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27, 40, 32]
 solution : [9, 1, 2, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 268435456), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25, 0, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27, 40, 32]
 solution : [9, 1, 2, 26]


Solution : [9, 1, 2, 26] has cost 18.


Decide in level 5 among pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25, 0, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27, 40, 32]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 268435456), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 5

After decision at level 5
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 32]
 solution : [9, 1, 2, 26, 21]


New level: 6
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 32]
 solution : [9, 1, 2, 26, 21]


Before reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 32]
 solution : [9, 1, 2, 26, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 268435456), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 268435456), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25, 32]
 solution : [9, 1, 2, 26, 21]


Before reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25, 32]
 solution : [9, 1, 2, 26, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 268435456), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 268435456), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25, 32]
 solution : [9, 1, 2, 26, 21]


Solution : [9, 1, 2, 26, 21] has cost 25.


Decide in level 6 among pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 268435456), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25]
 solution : [9, 1, 2, 26, 21, 32]


New level: 7
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25]
 solution : [9, 1, 2, 26, 21, 32]


Before reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 10, 25]
 solution : [9, 1, 2, 26, 21, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 268435456), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 39, 31}

After reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 25]
 solution : [9, 1, 2, 26, 21, 32]


Before reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 25]
 solution : [9, 1, 2, 26, 21, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 25]
 solution : [9, 1, 2, 26, 21, 32]


Solution : [9, 1, 2, 26, 21, 32] has cost 38.


Before backtrack at level 7
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 25]
 solution : [9, 1, 2, 26, 21, 32]

After backtrack at level 7
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 25, 31, 34, 39]
 solution : [9, 1, 2, 26, 21, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 25, 31, 34, 39]
 solution : [9, 1, 2, 26, 21]


Before reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 25, 31, 34, 39]
 solution : [9, 1, 2, 26, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 25, 31, 34, 39]
 solution : [9, 1, 2, 26, 21]


Solution : [9, 1, 2, 26, 21] has cost 25.


Decide in level 7 among pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 25, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 7

After decision at level 7
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]
 solution : [9, 1, 2, 26, 21, 25]


New level: 8
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]
 solution : [9, 1, 2, 26, 21, 25]


Before reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]
 solution : [9, 1, 2, 26, 21, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 39, 31}

After reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]
 solution : [9, 1, 2, 26, 21, 25]


Before reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]
 solution : [9, 1, 2, 26, 21, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]
 solution : [9, 1, 2, 26, 21, 25]


Solution : [9, 1, 2, 26, 21, 25] has cost 32.


Before backtrack at level 8
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10]
 solution : [9, 1, 2, 26, 21, 25]

After backtrack at level 8
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]
 solution : [9, 1, 2, 26, 21, 25]


Invert decision for 25 at level 7


New level: 8
 pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]
 solution : [9, 1, 2, 26, 21]


Before reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]
 solution : [9, 1, 2, 26, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]
 solution : [9, 1, 2, 26, 21]


Solution : [9, 1, 2, 26, 21] has cost 25.


Decide in level 8 among pending : [23, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]
 solution : [9, 1, 2, 26, 21, 23]


New level: 9
 pending : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]
 solution : [9, 1, 2, 26, 21, 23]


Before reduction : 
 pending  : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]
 solution : [9, 1, 2, 26, 21, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 21, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 21, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 21, 23]


Solution : [9, 1, 2, 26, 21, 23] has cost 32.


Before backtrack at level 9
 pending : []
 solution : [9, 1, 2, 26, 21, 23]

After backtrack at level 9
 pending : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]
 solution : [9, 1, 2, 26, 21, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]
 solution : [9, 1, 2, 26, 21]


Before reduction : 
 pending  : [8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 10, 31, 34, 39]
 solution : [9, 1, 2, 26, 21]

Essensial at level 9 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 21, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 21, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 21, 10]


Solution : [9, 1, 2, 26, 21, 10] has cost 29.


Before backtrack at level 9
 pending : []
 solution : [9, 1, 2, 26, 21, 10]

After backtrack at level 9
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39]
 solution : [9, 1, 2, 26, 21]


Before backtrack at level 8
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39]
 solution : [9, 1, 2, 26, 21]

After backtrack at level 8
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23]
 solution : [9, 1, 2, 26, 21]


Before backtrack at level 7
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23]
 solution : [9, 1, 2, 26, 21]

After backtrack at level 7
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23, 25]
 solution : [9, 1, 2, 26, 21]


Before backtrack at level 6
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23, 25]
 solution : [9, 1, 2, 26, 21]

After backtrack at level 6
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 32]
 solution : [9, 1, 2, 26, 21]


Invert decision for 21 at level 5


New level: 6
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 32]
 solution : [9, 1, 2, 26]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 32]
 solution : [9, 1, 2, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 268435456), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 32]
 solution : [9, 1, 2, 26]


Solution : [9, 1, 2, 26] has cost 18.


Decide in level 6 among pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 32]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 268435456), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40]
 solution : [9, 1, 2, 26, 32]


New level: 7
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40]
 solution : [9, 1, 2, 26, 32]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 31, 34, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40]
 solution : [9, 1, 2, 26, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 268435456), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 4096), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 31}

After reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40]
 solution : [9, 1, 2, 26, 32]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40]
 solution : [9, 1, 2, 26, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 4096), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 4096), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40]
 solution : [9, 1, 2, 26, 32]


Solution : [9, 1, 2, 26, 32] has cost 31.


Before backtrack at level 7
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40]
 solution : [9, 1, 2, 26, 32]

After backtrack at level 7
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 4096), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26]


Solution : [9, 1, 2, 26] has cost 18.


Decide in level 7 among pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 39, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 7

After decision at level 7
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26, 39]


New level: 8
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26, 39]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26, 39]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 67108864), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 262144), (32, -1), (33, 8192), (34, 2048), (35, -1), (36, 8192), (37, -1), (38, 16777216), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26, 39]


Solution : [9, 1, 2, 26, 39] has cost 32.


Before backtrack at level 8
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26, 39]

After backtrack at level 8
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26, 39]


Invert decision for 39 at level 7


New level: 8
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 67108864), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 262144), (32, -1), (33, 8192), (34, 2048), (35, -1), (36, 8192), (37, -1), (38, 16777216), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26]


Solution : [9, 1, 2, 26] has cost 18.


Decide in level 8 among pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 25, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 8

After decision at level 8
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26, 25]


New level: 9
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26, 25]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40, 31, 34]
 solution : [9, 1, 2, 26, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {34, 31}

After reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40]
 solution : [9, 1, 2, 26, 25]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40]
 solution : [9, 1, 2, 26, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40]
 solution : [9, 1, 2, 26, 25]


Solution : [9, 1, 2, 26, 25] has cost 25.


Decide in level 9 among pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 22, 27, 40]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 22]


New level: 10
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 22]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, -1), (40, 0), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 27}

After reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23]
 solution : [9, 1, 2, 26, 25, 22]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23]
 solution : [9, 1, 2, 26, 25, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, -1), (40, 0), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23]
 solution : [9, 1, 2, 26, 25, 22]


Solution : [9, 1, 2, 26, 25, 22] has cost 32.


Before backtrack at level 10
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23]
 solution : [9, 1, 2, 26, 25, 22]

After backtrack at level 10
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25]


Solution : [9, 1, 2, 26, 25] has cost 25.


Decide in level 10 among pending : [10, 8, 30, 33, 36, 38, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [10, 8, 30, 33, 36, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 38]


New level: 11
 pending : [10, 8, 30, 33, 36, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 38]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 36, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 38]


Solution : [9, 1, 2, 26, 25, 38] has cost 43.


Before backtrack at level 11
 pending : [10, 8, 30, 33, 36, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 38]

After backtrack at level 11
 pending : [10, 8, 30, 33, 36, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [10, 8, 30, 33, 36, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 36, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25]


Solution : [9, 1, 2, 26, 25] has cost 25.


Decide in level 11 among pending : [10, 8, 30, 33, 36, 41, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 11

After decision at level 11
 pending : [10, 8, 30, 33, 36, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 41]


New level: 12
 pending : [10, 8, 30, 33, 36, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 41]


Before reduction : 
 pending  : [10, 8, 30, 33, 36, 42, 43, 45, 46, 49, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 65536), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 36, 8, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 41]


Before reduction : 
 pending  : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 65536), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 65536), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 41]


Solution : [9, 1, 2, 26, 25, 41] has cost 43.


Before backtrack at level 12
 pending : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 41]

After backtrack at level 12
 pending : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 36, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 25, 41]


Invert decision for 41 at level 11


New level: 12
 pending : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 36, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 25]


Before reduction : 
 pending  : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 36, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 65536), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 36, 42, 43, 45, 46, 49]
 solution : [9, 1, 2, 26, 25]


Solution : [9, 1, 2, 26, 25] has cost 25.


Decide in level 12 among pending : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 36, 42, 43, 45, 46, 49]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 12

After decision at level 12
 pending : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 36, 42, 43, 45, 46]
 solution : [9, 1, 2, 26, 25, 49]


New level: 13
 pending : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 36, 42, 43, 45, 46]
 solution : [9, 1, 2, 26, 25, 49]


Before reduction : 
 pending  : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 36, 42, 43, 45, 46]
 solution : [9, 1, 2, 26, 25, 49]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 2048), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {42, 43, 36, 46}

After reduction : 
 pending  : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 45]
 solution : [9, 1, 2, 26, 25, 49]


Before reduction : 
 pending  : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 45]
 solution : [9, 1, 2, 26, 25, 49]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 2048), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, 2048), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 45]
 solution : [9, 1, 2, 26, 25, 49]


Solution : [9, 1, 2, 26, 25, 49] has cost 56.


Before backtrack at level 13
 pending : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 45]
 solution : [9, 1, 2, 26, 25, 49]

After backtrack at level 13
 pending : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 26, 25, 49]


Invert decision for 49 at level 12


New level: 13
 pending : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 26, 25]


Before reduction : 
 pending  : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 26, 25]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, 2048), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 26, 25]


Solution : [9, 1, 2, 26, 25] has cost 25.


Decide in level 13 among pending : [10, 23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 45, 36, 42, 43, 46]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 13

After decision at level 13
 pending : [23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 26, 25, 10]


New level: 14
 pending : [23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 26, 25, 10]


Before reduction : 
 pending  : [23, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 26, 25, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {33, 36, 8, 42, 43, 45, 46, 23, 30}

After reduction : 
 pending  : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 10]


Before reduction : 
 pending  : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 10]


Solution : [9, 1, 2, 26, 25, 10] has cost 29.


Before backtrack at level 14
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 10]

After backtrack at level 14
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 26, 25, 10]


Invert decision for 10 at level 13


New level: 14
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 26, 25]


Before reduction : 
 pending  : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 26, 25]

Essensial at level 14 : {23}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {33, 36, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 23]


Before reduction : 
 pending  : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 23]


Solution : [9, 1, 2, 26, 25, 23] has cost 32.


Before backtrack at level 14
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 25, 23]

After backtrack at level 14
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 26, 25]


Before backtrack at level 13
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 26, 25]

After backtrack at level 13
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10]
 solution : [9, 1, 2, 26, 25]


Before backtrack at level 12
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10]
 solution : [9, 1, 2, 26, 25]

After backtrack at level 12
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49]
 solution : [9, 1, 2, 26, 25]


Before backtrack at level 11
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49]
 solution : [9, 1, 2, 26, 25]

After backtrack at level 11
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41]
 solution : [9, 1, 2, 26, 25]


Before backtrack at level 10
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41]
 solution : [9, 1, 2, 26, 25]

After backtrack at level 10
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38]
 solution : [9, 1, 2, 26, 25]


Before backtrack at level 9
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38]
 solution : [9, 1, 2, 26, 25]

After backtrack at level 9
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34, 22]
 solution : [9, 1, 2, 26, 25]


Invert decision for 25 at level 8


New level: 9
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34, 22]
 solution : [9, 1, 2, 26]


Before reduction : 
 pending  : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34, 22]
 solution : [9, 1, 2, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34, 22]
 solution : [9, 1, 2, 26]


Solution : [9, 1, 2, 26] has cost 18.


Decide in level 9 among pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34, 22]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22]


New level: 10
 pending : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22]


Before reduction : 
 pending  : [0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 27}

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22]


Solution : [9, 1, 2, 26, 22] has cost 25.


Decide in level 10 among pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22, 23]


New level: 11
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22, 23]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 38, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 22, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 22, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 22, 23]


Solution : [9, 1, 2, 26, 22, 23] has cost 32.


Before backtrack at level 11
 pending : []
 solution : [9, 1, 2, 26, 22, 23]

After backtrack at level 11
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22]

Essensial at level 11 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 38, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 22, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 22, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 26, 22, 10]


Solution : [9, 1, 2, 26, 22, 10] has cost 29.


Before backtrack at level 11
 pending : []
 solution : [9, 1, 2, 26, 22, 10]

After backtrack at level 11
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22]


Before backtrack at level 10
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34]
 solution : [9, 1, 2, 26, 22]

After backtrack at level 10
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23]
 solution : [9, 1, 2, 26, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23]
 solution : [9, 1, 2, 26]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23]
 solution : [9, 1, 2, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23]
 solution : [9, 1, 2, 26]


Solution : [9, 1, 2, 26] has cost 18.


Decide in level 10 among pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23]
 solution : [9, 1, 2, 26, 10]


New level: 11
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23]
 solution : [9, 1, 2, 26, 10]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40, 23]
 solution : [9, 1, 2, 26, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : [38, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 10]


Before reduction : 
 pending  : [38, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 10]


Solution : [9, 1, 2, 26, 10] has cost 22.


Decide in level 11 among pending : [38, 0, 13, 14, 15, 16, 17, 18, 19, 27, 40]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [38, 0, 13, 14, 15, 16, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 10, 17]


New level: 12
 pending : [38, 0, 13, 14, 15, 16, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 10, 17]


Before reduction : 
 pending  : [38, 0, 13, 14, 15, 16, 18, 19, 27, 40]
 solution : [9, 1, 2, 26, 10, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 18, 19, 15}

After reduction : 
 pending  : [38, 13, 14, 16, 27, 40]
 solution : [9, 1, 2, 26, 10, 17]


Before reduction : 
 pending  : [38, 13, 14, 16, 27, 40]
 solution : [9, 1, 2, 26, 10, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 13, 14, 16, 27, 40]
 solution : [9, 1, 2, 26, 10, 17]


Solution : [9, 1, 2, 26, 10, 17] has cost 31.


Before backtrack at level 12
 pending : [38, 13, 14, 16, 27, 40]
 solution : [9, 1, 2, 26, 10, 17]

After backtrack at level 12
 pending : [38, 13, 14, 16, 27, 40, 0, 15, 18, 19]
 solution : [9, 1, 2, 26, 10, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [38, 13, 14, 16, 27, 40, 0, 15, 18, 19]
 solution : [9, 1, 2, 26, 10]


Before reduction : 
 pending  : [38, 13, 14, 16, 27, 40, 0, 15, 18, 19]
 solution : [9, 1, 2, 26, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 13, 14, 16, 27, 40, 0, 15, 18, 19]
 solution : [9, 1, 2, 26, 10]


Solution : [9, 1, 2, 26, 10] has cost 22.


Decide in level 12 among pending : [38, 13, 14, 16, 27, 40, 0, 15, 18, 19]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 14, 16, 27, 40, 0, 15, 18, 19]
 solution : [9, 1, 2, 26, 10, 13]


New level: 13
 pending : [38, 14, 16, 27, 40, 0, 15, 18, 19]
 solution : [9, 1, 2, 26, 10, 13]


Before reduction : 
 pending  : [38, 14, 16, 27, 40, 0, 15, 18, 19]
 solution : [9, 1, 2, 26, 10, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 18, 19]
 solution : [9, 1, 2, 26, 10, 13]


Before reduction : 
 pending  : [38, 27, 40, 0, 18, 19]
 solution : [9, 1, 2, 26, 10, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 18, 19]
 solution : [9, 1, 2, 26, 10, 13]


Solution : [9, 1, 2, 26, 10, 13] has cost 29.


Before backtrack at level 13
 pending : [38, 27, 40, 0, 18, 19]
 solution : [9, 1, 2, 26, 10, 13]

After backtrack at level 13
 pending : [38, 27, 40, 0, 18, 19, 14, 16, 15]
 solution : [9, 1, 2, 26, 10, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 27, 40, 0, 18, 19, 14, 16, 15]
 solution : [9, 1, 2, 26, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 18, 19, 14, 16, 15]
 solution : [9, 1, 2, 26, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 18, 19, 14, 16, 15]
 solution : [9, 1, 2, 26, 10]


Solution : [9, 1, 2, 26, 10] has cost 22.


Decide in level 13 among pending : [38, 27, 40, 0, 18, 19, 14, 16, 15]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [38, 27, 40, 0, 19, 14, 16, 15]
 solution : [9, 1, 2, 26, 10, 18]


New level: 14
 pending : [38, 27, 40, 0, 19, 14, 16, 15]
 solution : [9, 1, 2, 26, 10, 18]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 14, 16, 15]
 solution : [9, 1, 2, 26, 10, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 14, 16]
 solution : [9, 1, 2, 26, 10, 18]


Before reduction : 
 pending  : [38, 27, 40, 14, 16]
 solution : [9, 1, 2, 26, 10, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 14, 16]
 solution : [9, 1, 2, 26, 10, 18]


Solution : [9, 1, 2, 26, 10, 18] has cost 31.


Before backtrack at level 14
 pending : [38, 27, 40, 14, 16]
 solution : [9, 1, 2, 26, 10, 18]

After backtrack at level 14
 pending : [38, 27, 40, 14, 16, 0, 19, 15]
 solution : [9, 1, 2, 26, 10, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [38, 27, 40, 14, 16, 0, 19, 15]
 solution : [9, 1, 2, 26, 10]


Before reduction : 
 pending  : [38, 27, 40, 14, 16, 0, 19, 15]
 solution : [9, 1, 2, 26, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 14, 16, 0, 19, 15]
 solution : [9, 1, 2, 26, 10]


Solution : [9, 1, 2, 26, 10] has cost 22.


Decide in level 14 among pending : [38, 27, 40, 14, 16, 0, 19, 15]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 2, 26, 10, 14]


New level: 15
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 2, 26, 10, 14]


Before reduction : 
 pending  : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 2, 26, 10, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 26, 10, 14]


Before reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 26, 10, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 26, 10, 14]


Solution : [9, 1, 2, 26, 10, 14] has cost 29.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 26, 10, 14]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 2, 26, 10, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 2, 26, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 2, 26, 10]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 26, 10, 16]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 26, 10, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 26, 10, 16]


Solution : [9, 1, 2, 26, 10, 16] has cost 29.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 26, 10, 16]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 1, 2, 26, 10]


Before backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 1, 2, 26, 10]

After backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 1, 2, 26, 10]


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 1, 2, 26, 10]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 1, 2, 26, 10]


Before backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 1, 2, 26, 10]

After backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 26, 10]


Before backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 26, 10]

After backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 23, 17]
 solution : [9, 1, 2, 26, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 23, 17]
 solution : [9, 1, 2, 26]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 23, 17]
 solution : [9, 1, 2, 26]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 26, 23]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 26, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 26, 23]


Solution : [9, 1, 2, 26, 23] has cost 25.


Decide in level 11 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 26, 23, 17]


New level: 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 26, 23, 17]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 26, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 18, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 2, 26, 23, 17]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 2, 26, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 2, 26, 23, 17]


Solution : [9, 1, 2, 26, 23, 17] has cost 34.


Before backtrack at level 12
 pending : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 2, 26, 23, 17]

After backtrack at level 12
 pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 2, 26, 23, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 2, 26, 23]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 2, 26, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 2, 26, 23]


Solution : [9, 1, 2, 26, 23] has cost 25.


Decide in level 12 among pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 2, 26, 23, 13]


New level: 13
 pending : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 2, 26, 23, 13]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 2, 26, 23, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 2, 26, 23, 13]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 2, 26, 23, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 2, 26, 23, 13]


Solution : [9, 1, 2, 26, 23, 13] has cost 32.


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 2, 26, 23, 13]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 2, 26, 23, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 2, 26, 23]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 2, 26, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 2, 26, 23]


Solution : [9, 1, 2, 26, 23] has cost 25.


Decide in level 13 among pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 2, 26, 23, 18]


New level: 14
 pending : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 2, 26, 23, 18]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 2, 26, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 2, 26, 23, 18]


Before reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 2, 26, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 2, 26, 23, 18]


Solution : [9, 1, 2, 26, 23, 18] has cost 34.


Before backtrack at level 14
 pending : [38, 27, 40, 16, 14]
 solution : [9, 1, 2, 26, 23, 18]

After backtrack at level 14
 pending : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 2, 26, 23, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 2, 26, 23]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 2, 26, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 2, 26, 23]


Solution : [9, 1, 2, 26, 23] has cost 25.


Decide in level 14 among pending : [38, 27, 40, 16, 14, 0, 19, 15]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 2, 26, 23, 14]


New level: 15
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 2, 26, 23, 14]


Before reduction : 
 pending  : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 2, 26, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 26, 23, 14]


Before reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 26, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 26, 23, 14]


Solution : [9, 1, 2, 26, 23, 14] has cost 32.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 26, 23, 14]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 2, 26, 23, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 2, 26, 23]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 2, 26, 23]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 26, 23, 16]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 26, 23, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 26, 23, 16]


Solution : [9, 1, 2, 26, 23, 16] has cost 32.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 26, 23, 16]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 1, 2, 26, 23]


Before backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 1, 2, 26, 23]

After backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 1, 2, 26, 23]


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 1, 2, 26, 23]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 1, 2, 26, 23]


Before backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 1, 2, 26, 23]

After backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 26, 23]


Before backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 26, 23]

After backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17]
 solution : [9, 1, 2, 26]


Before backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17]
 solution : [9, 1, 2, 26]

After backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10]
 solution : [9, 1, 2, 26]


Before backtrack at level 9
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10]
 solution : [9, 1, 2, 26]

After backtrack at level 9
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22]
 solution : [9, 1, 2, 26]


Before backtrack at level 8
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22]
 solution : [9, 1, 2, 26]

After backtrack at level 8
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25]
 solution : [9, 1, 2, 26]


Before backtrack at level 7
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25]
 solution : [9, 1, 2, 26]

After backtrack at level 7
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39]
 solution : [9, 1, 2, 26]


Before backtrack at level 6
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39]
 solution : [9, 1, 2, 26]

After backtrack at level 6
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39, 32]
 solution : [9, 1, 2, 26]


Before backtrack at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39, 32]
 solution : [9, 1, 2, 26]

After backtrack at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39, 32, 21]
 solution : [9, 1, 2, 26]


Before backtrack at level 4
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39, 32, 21]
 solution : [9, 1, 2, 26]

After backtrack at level 4
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39, 32, 21, 28]
 solution : [9, 1, 2, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39, 32, 21, 28]
 solution : [9, 1, 2]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39, 32, 21, 28]
 solution : [9, 1, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 524288), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39, 32, 21, 28]
 solution : [9, 1, 2]


Solution : [9, 1, 2] has cost 14.


Decide in level 4 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39, 32, 21, 28]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 524288), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39, 21, 28]
 solution : [9, 1, 2, 32]


New level: 5
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39, 21, 28]
 solution : [9, 1, 2, 32]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 22, 25, 39, 21, 28]
 solution : [9, 1, 2, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 524288), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 8192), (26, -1), (27, 524288), (28, 536870912), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {34, 31}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 10, 22, 25, 39, 21, 28]
 solution : [9, 1, 2, 32]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 10, 22, 25, 39, 21, 28]
 solution : [9, 1, 2, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 8192), (26, -1), (27, 524288), (28, 536870912), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 8192), (26, -1), (27, 524288), (28, 536870912), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 10, 22, 25, 39, 21, 28]
 solution : [9, 1, 2, 32]


Solution : [9, 1, 2, 32] has cost 27.


Before backtrack at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 10, 22, 25, 39, 21, 28]
 solution : [9, 1, 2, 32]

After backtrack at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 10, 22, 25, 39, 21, 28, 31, 34]
 solution : [9, 1, 2, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 10, 22, 25, 39, 21, 28, 31, 34]
 solution : [9, 1, 2]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 10, 22, 25, 39, 21, 28, 31, 34]
 solution : [9, 1, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 8192), (26, -1), (27, 524288), (28, 536870912), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 524288), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 10, 22, 25, 39, 21, 28, 31, 34]
 solution : [9, 1, 2]


Solution : [9, 1, 2] has cost 14.


Decide in level 5 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 10, 22, 25, 39, 21, 28, 31, 34]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 524288), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 10, 22, 25, 39, 21, 31, 34]
 solution : [9, 1, 2, 28]


New level: 6
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 10, 22, 25, 39, 21, 31, 34]
 solution : [9, 1, 2, 28]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 10, 22, 25, 39, 21, 31, 34]
 solution : [9, 1, 2, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 524288), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 39, 31, 34]
 solution : [9, 1, 2, 28]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 39, 31, 34]
 solution : [9, 1, 2, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 39, 31, 34]
 solution : [9, 1, 2, 28]


Solution : [9, 1, 2, 28] has cost 18.


Decide in level 6 among pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 39, 31, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]
 solution : [9, 1, 2, 28, 25]


New level: 7
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]
 solution : [9, 1, 2, 28, 25]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]
 solution : [9, 1, 2, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 31, 39}

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 2, 28, 25]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 2, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 2, 28, 25]


Solution : [9, 1, 2, 28, 25] has cost 25.


Decide in level 7 among pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 2, 28, 25, 23]


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 2, 28, 25, 23]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 2, 28, 25, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 38, 8, 41, 42, 43, 10, 45, 46, 49, 30}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 28, 25, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 28, 25, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 28, 25, 23]


Solution : [9, 1, 2, 28, 25, 23] has cost 32.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 2, 28, 25, 23]

After backtrack at level 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 2, 28, 25, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 2, 28, 25]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 2, 28, 25]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 38, 8, 41, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 28, 25, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 28, 25, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 28, 25, 10]


Solution : [9, 1, 2, 28, 25, 10] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 2, 28, 25, 10]

After backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41]
 solution : [9, 1, 2, 28, 25]


Before backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41]
 solution : [9, 1, 2, 28, 25]

After backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23]
 solution : [9, 1, 2, 28, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23]
 solution : [9, 1, 2, 28]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23]
 solution : [9, 1, 2, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23]
 solution : [9, 1, 2, 28]


Solution : [9, 1, 2, 28] has cost 18.


Decide in level 7 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23]
 solution : [9, 1, 2, 28, 10]


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23]
 solution : [9, 1, 2, 28, 10]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23]
 solution : [9, 1, 2, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 28, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 28, 10]


Solution : [9, 1, 2, 28, 10] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 2, 28, 10]

After backtrack at level 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23]
 solution : [9, 1, 2, 28, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23]
 solution : [9, 1, 2, 28]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23]
 solution : [9, 1, 2, 28]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 28, 23]


Solution : [9, 1, 2, 28, 23] has cost 25.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 2, 28, 23]

After backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34]
 solution : [9, 1, 2, 28]


Before backtrack at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34]
 solution : [9, 1, 2, 28]

After backtrack at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10]
 solution : [9, 1, 2, 28]


Before backtrack at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10]
 solution : [9, 1, 2, 28]

After backtrack at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 25]
 solution : [9, 1, 2, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 25]
 solution : [9, 1, 2]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 25]
 solution : [9, 1, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 25]
 solution : [9, 1, 2]


Solution : [9, 1, 2] has cost 14.


Decide in level 6 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 25]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 6

After decision at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 25]
 solution : [9, 1, 2, 21]


New level: 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 25]
 solution : [9, 1, 2, 21]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 25]
 solution : [9, 1, 2, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, 268435456), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10, 25]
 solution : [9, 1, 2, 21]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10, 25]
 solution : [9, 1, 2, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10, 25]
 solution : [9, 1, 2, 21]


Solution : [9, 1, 2, 21] has cost 21.


Decide in level 7 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 7

After decision at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10]
 solution : [9, 1, 2, 21, 25]


New level: 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10]
 solution : [9, 1, 2, 21, 25]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 10]
 solution : [9, 1, 2, 21, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 31, 39}

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 2, 21, 25]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 2, 21, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 2, 21, 25]


Solution : [9, 1, 2, 21, 25] has cost 28.


Before backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 2, 21, 25]

After backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]
 solution : [9, 1, 2, 21, 25]


Invert decision for 25 at level 7


New level: 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]
 solution : [9, 1, 2, 21]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]
 solution : [9, 1, 2, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]
 solution : [9, 1, 2, 21]


Solution : [9, 1, 2, 21] has cost 21.


Decide in level 8 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]
 solution : [9, 1, 2, 21, 23]


New level: 9
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]
 solution : [9, 1, 2, 21, 23]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]
 solution : [9, 1, 2, 21, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 21, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 21, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 21, 23]


Solution : [9, 1, 2, 21, 23] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [9, 1, 2, 21, 23]

After backtrack at level 9
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]
 solution : [9, 1, 2, 21, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]
 solution : [9, 1, 2, 21]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 39, 31, 34]
 solution : [9, 1, 2, 21]

Essensial at level 9 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 21, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 21, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 21, 10]


Solution : [9, 1, 2, 21, 10] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [9, 1, 2, 21, 10]

After backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34]
 solution : [9, 1, 2, 21]


Before backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34]
 solution : [9, 1, 2, 21]

After backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23]
 solution : [9, 1, 2, 21]


Before backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23]
 solution : [9, 1, 2, 21]

After backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 25]
 solution : [9, 1, 2, 21]


Invert decision for 21 at level 6


New level: 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 25]
 solution : [9, 1, 2]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 25]
 solution : [9, 1, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 25]
 solution : [9, 1, 2]


Solution : [9, 1, 2] has cost 14.


Decide in level 7 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 25]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 7

After decision at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 1, 2, 25]


New level: 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 1, 2, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 31, 34, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 1, 2, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 31}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 1, 2, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 1, 2, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 1, 2, 25]


Solution : [9, 1, 2, 25] has cost 21.


Decide in level 8 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25, 22]


New level: 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25, 22]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {0, 39, 40, 13, 14, 15, 16, 17, 18, 19, 27}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 1, 2, 25, 22]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 1, 2, 25, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 1, 2, 25, 22]


Solution : [9, 1, 2, 25, 22] has cost 28.


Before backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 1, 2, 25, 22]

After backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25]


Solution : [9, 1, 2, 25] has cost 21.


Decide in level 9 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 9

After decision at level 9
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25, 38]


New level: 10
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25, 38]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 0), (40, 131072), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {39}

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25, 38]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 0), (40, 131072), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25, 38]


Solution : [9, 1, 2, 25, 38] has cost 39.


Before backtrack at level 10
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 25, 38]

After backtrack at level 10
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 38]


Invert decision for 38 at level 9


New level: 10
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25]


Solution : [9, 1, 2, 25] has cost 21.


Decide in level 10 among pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 10

After decision at level 10
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 49]


New level: 11
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 49]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 49]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, 33554432), (42, 0), (43, 0), (44, -1), (45, 2048), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {42, 43, 36, 46}

After reduction : 
 pending  : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 49]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 49]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, 33554432), (42, 0), (43, 0), (44, -1), (45, 2048), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, 33554432), (42, -1), (43, -1), (44, -1), (45, 2048), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 49]


Solution : [9, 1, 2, 25, 49] has cost 52.


Before backtrack at level 11
 pending : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 49]

After backtrack at level 11
 pending : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 36, 42, 43, 46]
 solution : [9, 1, 2, 25, 49]


Invert decision for 49 at level 10


New level: 11
 pending : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 36, 42, 43, 46]
 solution : [9, 1, 2, 25]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 36, 42, 43, 46]
 solution : [9, 1, 2, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, 33554432), (42, -1), (43, -1), (44, -1), (45, 2048), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 36, 42, 43, 46]
 solution : [9, 1, 2, 25]


Solution : [9, 1, 2, 25] has cost 21.


Decide in level 11 among pending : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 36, 42, 43, 46]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 11

After decision at level 11
 pending : [10, 8, 30, 33, 45, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 36, 42, 43, 46]
 solution : [9, 1, 2, 25, 41]


New level: 12
 pending : [10, 8, 30, 33, 45, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 36, 42, 43, 46]
 solution : [9, 1, 2, 25, 41]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 36, 42, 43, 46]
 solution : [9, 1, 2, 25, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 65536), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 36, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 41]


Before reduction : 
 pending  : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 65536), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 41]


Solution : [9, 1, 2, 25, 41] has cost 39.


Before backtrack at level 12
 pending : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 41]

After backtrack at level 12
 pending : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 25, 41]


Invert decision for 41 at level 11


New level: 12
 pending : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 25]


Before reduction : 
 pending  : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 25]


Solution : [9, 1, 2, 25] has cost 21.


Decide in level 12 among pending : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 8, 30, 33, 45, 36, 42, 43, 46]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 12

After decision at level 12
 pending : [23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 25, 10]


New level: 13
 pending : [23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 25, 10]


Before reduction : 
 pending  : [23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 25, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {33, 36, 8, 42, 43, 45, 46, 23, 30}

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 10]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 10]


Solution : [9, 1, 2, 25, 10] has cost 25.


Before backtrack at level 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 10]

After backtrack at level 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 25, 10]


Invert decision for 10 at level 12


New level: 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 25]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 25]

Essensial at level 13 : {23}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {33, 36, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 23]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 23]


Solution : [9, 1, 2, 25, 23] has cost 28.


Before backtrack at level 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39]
 solution : [9, 1, 2, 25, 23]

After backtrack at level 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 25]


Before backtrack at level 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 2, 25]

After backtrack at level 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10]
 solution : [9, 1, 2, 25]


Before backtrack at level 11
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10]
 solution : [9, 1, 2, 25]

After backtrack at level 11
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41]
 solution : [9, 1, 2, 25]


Before backtrack at level 10
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41]
 solution : [9, 1, 2, 25]

After backtrack at level 10
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49]
 solution : [9, 1, 2, 25]


Before backtrack at level 9
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49]
 solution : [9, 1, 2, 25]

After backtrack at level 9
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38]
 solution : [9, 1, 2, 25]


Before backtrack at level 8
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38]
 solution : [9, 1, 2, 25]

After backtrack at level 8
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]
 solution : [9, 1, 2, 25]


Invert decision for 25 at level 7


New level: 8
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]
 solution : [9, 1, 2]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]
 solution : [9, 1, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]
 solution : [9, 1, 2]


Solution : [9, 1, 2] has cost 14.


Decide in level 8 among pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]
 solution : [9, 1, 2, 39]


New level: 9
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]
 solution : [9, 1, 2, 39]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]
 solution : [9, 1, 2, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 16777216), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]
 solution : [9, 1, 2, 39]


Solution : [9, 1, 2, 39] has cost 28.


Before backtrack at level 9
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]
 solution : [9, 1, 2, 39]

After backtrack at level 9
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]
 solution : [9, 1, 2, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]
 solution : [9, 1, 2]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]
 solution : [9, 1, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 16777216), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]
 solution : [9, 1, 2]


Solution : [9, 1, 2] has cost 14.


Decide in level 9 among pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34, 22]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22]


New level: 10
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, 134217728), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 27}

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22]


Solution : [9, 1, 2, 22] has cost 21.


Decide in level 10 among pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22, 23]


New level: 11
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22, 23]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 38, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 22, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 22, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 22, 23]


Solution : [9, 1, 2, 22, 23] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [9, 1, 2, 22, 23]

After backtrack at level 11
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22]

Essensial at level 11 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 38, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 2, 22, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 2, 22, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 2, 22, 10]


Solution : [9, 1, 2, 22, 10] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [9, 1, 2, 22, 10]

After backtrack at level 11
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22]


Before backtrack at level 10
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34]
 solution : [9, 1, 2, 22]

After backtrack at level 10
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]
 solution : [9, 1, 2, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]
 solution : [9, 1, 2]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]
 solution : [9, 1, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]
 solution : [9, 1, 2]


Solution : [9, 1, 2] has cost 14.


Decide in level 10 among pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]
 solution : [9, 1, 2, 10]


New level: 11
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]
 solution : [9, 1, 2, 10]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]
 solution : [9, 1, 2, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 65536), (16, 32768), (17, 8388608), (18, 4194304), (19, 196608), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 10]


Solution : [9, 1, 2, 10] has cost 18.


Decide in level 11 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 10, 17]


New level: 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 10, 17]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 10, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 18, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 2, 10, 17]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 2, 10, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 2, 10, 17]


Solution : [9, 1, 2, 10, 17] has cost 27.


Before backtrack at level 12
 pending : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 2, 10, 17]

After backtrack at level 12
 pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 2, 10, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 2, 10]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 2, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 2, 10]


Solution : [9, 1, 2, 10] has cost 18.


Decide in level 12 among pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 2, 10, 13]


New level: 13
 pending : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 2, 10, 13]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 2, 10, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 2, 10, 13]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 2, 10, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 2, 10, 13]


Solution : [9, 1, 2, 10, 13] has cost 25.


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 2, 10, 13]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 2, 10, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 2, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 2, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 2, 10]


Solution : [9, 1, 2, 10] has cost 18.


Decide in level 13 among pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 2, 10, 18]


New level: 14
 pending : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 2, 10, 18]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 2, 10, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 2, 10, 18]


Before reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 2, 10, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 2, 10, 18]


Solution : [9, 1, 2, 10, 18] has cost 27.


Before backtrack at level 14
 pending : [38, 27, 40, 16, 14]
 solution : [9, 1, 2, 10, 18]

After backtrack at level 14
 pending : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 2, 10, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 2, 10]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 2, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 2, 10]


Solution : [9, 1, 2, 10] has cost 18.


Decide in level 14 among pending : [38, 27, 40, 16, 14, 0, 19, 15]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 2, 10, 14]


New level: 15
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 2, 10, 14]


Before reduction : 
 pending  : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 2, 10, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 10, 14]


Before reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 10, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 10, 14]


Solution : [9, 1, 2, 10, 14] has cost 25.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 10, 14]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 2, 10, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 2, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 2, 10]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 10, 16]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 10, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 10, 16]


Solution : [9, 1, 2, 10, 16] has cost 25.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 10, 16]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 1, 2, 10]


Before backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 1, 2, 10]

After backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 1, 2, 10]


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 1, 2, 10]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 1, 2, 10]


Before backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 1, 2, 10]

After backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 10]


Before backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 10]

After backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 17]
 solution : [9, 1, 2, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 17]
 solution : [9, 1, 2]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 17]
 solution : [9, 1, 2]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 23]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 2, 23]


Solution : [9, 1, 2, 23] has cost 21.


Decide in level 11 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 23, 17]


New level: 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 23, 17]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, 4194304), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 18, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 2, 23, 17]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 2, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 2, 23, 17]


Solution : [9, 1, 2, 23, 17] has cost 30.


Before backtrack at level 12
 pending : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 2, 23, 17]

After backtrack at level 12
 pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 2, 23, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 2, 23]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 2, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 2, 23]


Solution : [9, 1, 2, 23] has cost 21.


Decide in level 12 among pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 2, 23, 13]


New level: 13
 pending : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 2, 23, 13]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 2, 23, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 2, 23, 13]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 2, 23, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 2, 23, 13]


Solution : [9, 1, 2, 23, 13] has cost 28.


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 2, 23, 13]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 2, 23, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 2, 23]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 2, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 2, 23]


Solution : [9, 1, 2, 23] has cost 21.


Decide in level 13 among pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 2, 23, 18]


New level: 14
 pending : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 2, 23, 18]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 2, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, 2097152), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 2, 23, 18]


Before reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 2, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 0), (16, 8192), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 2, 23, 18]


Solution : [9, 1, 2, 23, 18] has cost 30.


Before backtrack at level 14
 pending : [38, 27, 40, 16, 14]
 solution : [9, 1, 2, 23, 18]

After backtrack at level 14
 pending : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 2, 23, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 2, 23]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 2, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 2, 23]


Solution : [9, 1, 2, 23] has cost 21.


Decide in level 14 among pending : [38, 27, 40, 16, 14, 0, 19, 15]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 2, 23, 14]


New level: 15
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 2, 23, 14]


Before reduction : 
 pending  : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 2, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 23, 14]


Before reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 23, 14]


Solution : [9, 1, 2, 23, 14] has cost 28.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19]
 solution : [9, 1, 2, 23, 14]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 2, 23, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 2, 23]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 2, 23]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 23, 16]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 23, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 23, 16]


Solution : [9, 1, 2, 23, 16] has cost 28.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 2, 23, 16]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 1, 2, 23]


Before backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 1, 2, 23]

After backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 1, 2, 23]


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 1, 2, 23]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 1, 2, 23]


Before backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 1, 2, 23]

After backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 23]


Before backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 2, 23]

After backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17]
 solution : [9, 1, 2]


Before backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17]
 solution : [9, 1, 2]

After backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10]
 solution : [9, 1, 2]


Before backtrack at level 9
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10]
 solution : [9, 1, 2]

After backtrack at level 9
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22]
 solution : [9, 1, 2]


Before backtrack at level 8
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22]
 solution : [9, 1, 2]

After backtrack at level 8
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39]
 solution : [9, 1, 2]


Before backtrack at level 7
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39]
 solution : [9, 1, 2]

After backtrack at level 7
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25]
 solution : [9, 1, 2]


Before backtrack at level 6
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25]
 solution : [9, 1, 2]

After backtrack at level 6
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21]
 solution : [9, 1, 2]


Before backtrack at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21]
 solution : [9, 1, 2]

After backtrack at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28]
 solution : [9, 1, 2]


Before backtrack at level 4
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28]
 solution : [9, 1, 2]

After backtrack at level 4
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28, 32]
 solution : [9, 1, 2]


Before backtrack at level 3
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28, 32]
 solution : [9, 1, 2]

After backtrack at level 3
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28, 32, 26]
 solution : [9, 1, 2]


Invert decision for 2 at level 2


New level: 3
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28, 32, 26]
 solution : [9, 1]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28, 32, 26]
 solution : [9, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28, 32, 26]
 solution : [9, 1]


Solution : [9, 1] has cost 11.


Decide in level 3 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28, 32, 26]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28, 32]
 solution : [9, 1, 26]


New level: 4
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28, 32]
 solution : [9, 1, 26]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28, 32]
 solution : [9, 1, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28, 32]
 solution : [9, 1, 26]


Solution : [9, 1, 26] has cost 15.


Decide in level 4 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 28, 32]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 32]
 solution : [9, 1, 26, 28]


New level: 5
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 32]
 solution : [9, 1, 26, 28]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 10, 22, 39, 25, 21, 32]
 solution : [9, 1, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 39, 25, 32]
 solution : [9, 1, 26, 28]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 39, 25, 32]
 solution : [9, 1, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 39, 25, 32]
 solution : [9, 1, 26, 28]


Solution : [9, 1, 26, 28] has cost 19.


Decide in level 5 among pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 39, 25, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 39, 25]
 solution : [9, 1, 26, 28, 32]


New level: 6
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 39, 25]
 solution : [9, 1, 26, 28, 32]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 39, 25]
 solution : [9, 1, 26, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {34, 39, 31}

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 25]
 solution : [9, 1, 26, 28, 32]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 25]
 solution : [9, 1, 26, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 25]
 solution : [9, 1, 26, 28, 32]


Solution : [9, 1, 26, 28, 32] has cost 32.


Before backtrack at level 6
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 25]
 solution : [9, 1, 26, 28, 32]

After backtrack at level 6
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 25, 31, 34, 39]
 solution : [9, 1, 26, 28, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 25, 31, 34, 39]
 solution : [9, 1, 26, 28]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 25, 31, 34, 39]
 solution : [9, 1, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 25, 31, 34, 39]
 solution : [9, 1, 26, 28]


Solution : [9, 1, 26, 28] has cost 19.


Decide in level 6 among pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 25, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 1, 26, 28, 25]


New level: 7
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 1, 26, 28, 25]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 1, 26, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 39, 31}

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 1, 26, 28, 25]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 1, 26, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 1, 26, 28, 25]


Solution : [9, 1, 26, 28, 25] has cost 26.


Before backtrack at level 7
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 1, 26, 28, 25]

After backtrack at level 7
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 1, 26, 28, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 1, 26, 28]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 1, 26, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 1, 26, 28]


Solution : [9, 1, 26, 28] has cost 19.


Decide in level 7 among pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 1, 26, 28, 23]


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 1, 26, 28, 23]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 1, 26, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 26, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 26, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 26, 28, 23]


Solution : [9, 1, 26, 28, 23] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 26, 28, 23]

After backtrack at level 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 1, 26, 28, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 1, 26, 28]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 1, 26, 28]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 26, 28, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 26, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 26, 28, 10]


Solution : [9, 1, 26, 28, 10] has cost 23.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 26, 28, 10]

After backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39]
 solution : [9, 1, 26, 28]


Before backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39]
 solution : [9, 1, 26, 28]

After backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23]
 solution : [9, 1, 26, 28]


Before backtrack at level 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23]
 solution : [9, 1, 26, 28]

After backtrack at level 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25]
 solution : [9, 1, 26, 28]


Before backtrack at level 5
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25]
 solution : [9, 1, 26, 28]

After backtrack at level 5
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9, 1, 26, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9, 1, 26]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9, 1, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9, 1, 26]


Solution : [9, 1, 26] has cost 15.


Decide in level 5 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21]
 solution : [9, 1, 26, 32]


New level: 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21]
 solution : [9, 1, 26, 32]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21]
 solution : [9, 1, 26, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 16384), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 4096), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {34, 31}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21]
 solution : [9, 1, 26, 32]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21]
 solution : [9, 1, 26, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 16384), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 4096), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 16384), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 4096), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21]
 solution : [9, 1, 26, 32]


Solution : [9, 1, 26, 32] has cost 28.


Before backtrack at level 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21]
 solution : [9, 1, 26, 32]

After backtrack at level 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 31, 34]
 solution : [9, 1, 26, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 31, 34]
 solution : [9, 1, 26]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 31, 34]
 solution : [9, 1, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 16384), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 4096), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 31, 34]
 solution : [9, 1, 26]


Solution : [9, 1, 26] has cost 15.


Decide in level 6 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 31, 34]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 31, 34]
 solution : [9, 1, 26, 25]


New level: 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 31, 34]
 solution : [9, 1, 26, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 31, 34]
 solution : [9, 1, 26, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 31}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21]
 solution : [9, 1, 26, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21]
 solution : [9, 1, 26, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21]
 solution : [9, 1, 26, 25]


Solution : [9, 1, 26, 25] has cost 22.


Decide in level 7 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 7

After decision at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 1, 26, 25, 21]


New level: 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 1, 26, 25, 21]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 1, 26, 25, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {0, 39, 40, 13, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 1, 26, 25, 21]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 1, 26, 25, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 1, 26, 25, 21]


Solution : [9, 1, 26, 25, 21] has cost 29.


Before backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 1, 26, 25, 21]

After backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 1, 26, 25, 21]


Invert decision for 21 at level 7


New level: 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 1, 26, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 1, 26, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 1, 26, 25]


Solution : [9, 1, 26, 25] has cost 22.


Decide in level 8 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 22]


New level: 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 22]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {0, 39, 40, 13, 14, 15, 16, 17, 18, 19, 27}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 1, 26, 25, 22]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 1, 26, 25, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 1, 26, 25, 22]


Solution : [9, 1, 26, 25, 22] has cost 29.


Before backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 1, 26, 25, 22]

After backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25]


Solution : [9, 1, 26, 25] has cost 22.


Decide in level 9 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 9

After decision at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 41]


New level: 10
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 41]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 131072), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 36, 8, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 41]


Before reduction : 
 pending  : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 131072), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 131072), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 41]


Solution : [9, 1, 26, 25, 41] has cost 40.


Before backtrack at level 10
 pending : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 41]

After backtrack at level 10
 pending : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 1, 26, 25, 41]


Invert decision for 41 at level 9


New level: 10
 pending : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 1, 26, 25]


Before reduction : 
 pending  : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 1, 26, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 131072), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 1, 26, 25]


Solution : [9, 1, 26, 25] has cost 22.


Decide in level 10 among pending : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46, 49]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 10

After decision at level 10
 pending : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25, 49]


New level: 11
 pending : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25, 49]


Before reduction : 
 pending  : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25, 49]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 0), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 0), (43, 0), (44, -1), (45, 4096), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {42, 43, 36, 46}

After reduction : 
 pending  : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45]
 solution : [9, 1, 26, 25, 49]


Before reduction : 
 pending  : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45]
 solution : [9, 1, 26, 25, 49]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 0), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 0), (43, 0), (44, -1), (45, 4096), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, -1), (43, -1), (44, -1), (45, 4096), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45]
 solution : [9, 1, 26, 25, 49]


Solution : [9, 1, 26, 25, 49] has cost 53.


Before backtrack at level 11
 pending : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45]
 solution : [9, 1, 26, 25, 49]

After backtrack at level 11
 pending : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25, 49]


Invert decision for 49 at level 10


New level: 11
 pending : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25]


Before reduction : 
 pending  : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, -1), (43, -1), (44, -1), (45, 4096), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25]


Solution : [9, 1, 26, 25] has cost 22.


Decide in level 11 among pending : [10, 38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25, 10]


New level: 12
 pending : [38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25, 10]


Before reduction : 
 pending  : [38, 23, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 36, 8, 42, 43, 45, 46, 23, 30}

After reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 10]


Before reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 10]


Solution : [9, 1, 26, 25, 10] has cost 26.


Before backtrack at level 12
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 10]

After backtrack at level 12
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25]


Before reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 36, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 23]


Before reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 23]


Solution : [9, 1, 26, 25, 23] has cost 29.


Before backtrack at level 12
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 25, 23]

After backtrack at level 12
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25]


Before backtrack at level 11
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 26, 25]

After backtrack at level 11
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10]
 solution : [9, 1, 26, 25]


Before backtrack at level 10
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10]
 solution : [9, 1, 26, 25]

After backtrack at level 10
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49]
 solution : [9, 1, 26, 25]


Before backtrack at level 9
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49]
 solution : [9, 1, 26, 25]

After backtrack at level 9
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41]
 solution : [9, 1, 26, 25]


Before backtrack at level 8
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41]
 solution : [9, 1, 26, 25]

After backtrack at level 8
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 22]
 solution : [9, 1, 26, 25]


Before backtrack at level 7
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 22]
 solution : [9, 1, 26, 25]

After backtrack at level 7
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 22, 31, 34, 21]
 solution : [9, 1, 26, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 22, 31, 34, 21]
 solution : [9, 1, 26]


Before reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 22, 31, 34, 21]
 solution : [9, 1, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 22, 31, 34, 21]
 solution : [9, 1, 26]


Solution : [9, 1, 26] has cost 15.


Decide in level 7 among pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 22, 31, 34, 21]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 7

After decision at level 7
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 22, 31, 34]
 solution : [9, 1, 26, 21]


New level: 8
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 22, 31, 34]
 solution : [9, 1, 26, 21]


Before reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 22, 31, 34]
 solution : [9, 1, 26, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [38, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 31, 34]
 solution : [9, 1, 26, 21]


Before reduction : 
 pending  : [38, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 31, 34]
 solution : [9, 1, 26, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 31, 34]
 solution : [9, 1, 26, 21]


Solution : [9, 1, 26, 21] has cost 22.


Decide in level 8 among pending : [38, 39, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 31, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 31, 34]
 solution : [9, 1, 26, 21, 23]


New level: 9
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 31, 34]
 solution : [9, 1, 26, 21, 23]


Before reduction : 
 pending  : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 31, 34]
 solution : [9, 1, 26, 21, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 26, 21, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 26, 21, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 26, 21, 23]


Solution : [9, 1, 26, 21, 23] has cost 29.


Before backtrack at level 9
 pending : []
 solution : [9, 1, 26, 21, 23]

After backtrack at level 9
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 31, 34]
 solution : [9, 1, 26, 21, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 31, 34]
 solution : [9, 1, 26, 21]


Before reduction : 
 pending  : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 10, 49, 41, 31, 34]
 solution : [9, 1, 26, 21]

Essensial at level 9 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 26, 21, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 26, 21, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 26, 21, 10]


Solution : [9, 1, 26, 21, 10] has cost 26.


Before backtrack at level 9
 pending : []
 solution : [9, 1, 26, 21, 10]

After backtrack at level 9
 pending : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34]
 solution : [9, 1, 26, 21]


Before backtrack at level 8
 pending : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34]
 solution : [9, 1, 26, 21]

After backtrack at level 8
 pending : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1, 26, 21]


Invert decision for 21 at level 7


New level: 8
 pending : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1, 26]


Before reduction : 
 pending  : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1, 26]


Solution : [9, 1, 26] has cost 15.


Decide in level 8 among pending : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]
 solution : [9, 1, 26, 22]


New level: 9
 pending : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]
 solution : [9, 1, 26, 22]


Before reduction : 
 pending  : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]
 solution : [9, 1, 26, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 27}

After reduction : 
 pending  : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 23]
 solution : [9, 1, 26, 22]


Before reduction : 
 pending  : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 23]
 solution : [9, 1, 26, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 23]
 solution : [9, 1, 26, 22]


Solution : [9, 1, 26, 22] has cost 22.


Decide in level 9 among pending : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 9

After decision at level 9
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 23]
 solution : [9, 1, 26, 22, 10]


New level: 10
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 23]
 solution : [9, 1, 26, 22, 10]


Before reduction : 
 pending  : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 23]
 solution : [9, 1, 26, 22, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 26, 22, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 26, 22, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 26, 22, 10]


Solution : [9, 1, 26, 22, 10] has cost 26.


Before backtrack at level 10
 pending : []
 solution : [9, 1, 26, 22, 10]

After backtrack at level 10
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 23]
 solution : [9, 1, 26, 22, 10]


Invert decision for 10 at level 9


New level: 10
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 23]
 solution : [9, 1, 26, 22]


Before reduction : 
 pending  : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 23]
 solution : [9, 1, 26, 22]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 26, 22, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 26, 22, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 26, 22, 23]


Solution : [9, 1, 26, 22, 23] has cost 29.


Before backtrack at level 10
 pending : []
 solution : [9, 1, 26, 22, 23]

After backtrack at level 10
 pending : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34]
 solution : [9, 1, 26, 22]


Before backtrack at level 9
 pending : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34]
 solution : [9, 1, 26, 22]

After backtrack at level 9
 pending : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1, 26, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1, 26]


Before reduction : 
 pending  : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1, 26]


Solution : [9, 1, 26] has cost 15.


Decide in level 9 among pending : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 9

After decision at level 9
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1, 26, 23]


New level: 10
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1, 26, 23]


Before reduction : 
 pending  : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1, 26, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 34, 36, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 23]


Before reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 26, 23]


Solution : [9, 1, 26, 23] has cost 22.


Decide in level 10 among pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 10

After decision at level 10
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 26, 23, 17]


New level: 11
 pending : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 26, 23, 17]


Before reduction : 
 pending  : [38, 39, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 26, 23, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {0, 18, 19, 15}

After reduction : 
 pending  : [38, 39, 27, 40, 16, 14, 13]
 solution : [9, 1, 26, 23, 17]


Before reduction : 
 pending  : [38, 39, 27, 40, 16, 14, 13]
 solution : [9, 1, 26, 23, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 39, 27, 40, 16, 14, 13]
 solution : [9, 1, 26, 23, 17]


Solution : [9, 1, 26, 23, 17] has cost 31.


Before backtrack at level 11
 pending : [38, 39, 27, 40, 16, 14, 13]
 solution : [9, 1, 26, 23, 17]

After backtrack at level 11
 pending : [38, 39, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 26, 23, 17]


Invert decision for 17 at level 10


New level: 11
 pending : [38, 39, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 26, 23]


Before reduction : 
 pending  : [38, 39, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 26, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 39, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 26, 23]


Solution : [9, 1, 26, 23] has cost 22.


Decide in level 11 among pending : [38, 39, 27, 40, 16, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [38, 39, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 26, 23, 13]


New level: 12
 pending : [38, 39, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 26, 23, 13]


Before reduction : 
 pending  : [38, 39, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 26, 23, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {16, 15, 14, 39}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 26, 23, 13]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 26, 23, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 26, 23, 13]


Solution : [9, 1, 26, 23, 13] has cost 29.


Before backtrack at level 12
 pending : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 26, 23, 13]

After backtrack at level 12
 pending : [38, 27, 40, 0, 19, 18, 39, 16, 14, 15]
 solution : [9, 1, 26, 23, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [38, 27, 40, 0, 19, 18, 39, 16, 14, 15]
 solution : [9, 1, 26, 23]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 39, 16, 14, 15]
 solution : [9, 1, 26, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 39, 16, 14, 15]
 solution : [9, 1, 26, 23]


Solution : [9, 1, 26, 23] has cost 22.


Decide in level 12 among pending : [38, 27, 40, 0, 19, 18, 39, 16, 14, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [38, 27, 40, 0, 19, 39, 16, 14, 15]
 solution : [9, 1, 26, 23, 18]


New level: 13
 pending : [38, 27, 40, 0, 19, 39, 16, 14, 15]
 solution : [9, 1, 26, 23, 18]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 39, 16, 14, 15]
 solution : [9, 1, 26, 23, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 39, 16, 14]
 solution : [9, 1, 26, 23, 18]


Before reduction : 
 pending  : [38, 27, 40, 39, 16, 14]
 solution : [9, 1, 26, 23, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 39, 16, 14]
 solution : [9, 1, 26, 23, 18]


Solution : [9, 1, 26, 23, 18] has cost 31.


Before backtrack at level 13
 pending : [38, 27, 40, 39, 16, 14]
 solution : [9, 1, 26, 23, 18]

After backtrack at level 13
 pending : [38, 27, 40, 39, 16, 14, 0, 19, 15]
 solution : [9, 1, 26, 23, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [38, 27, 40, 39, 16, 14, 0, 19, 15]
 solution : [9, 1, 26, 23]


Before reduction : 
 pending  : [38, 27, 40, 39, 16, 14, 0, 19, 15]
 solution : [9, 1, 26, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 39, 16, 14, 0, 19, 15]
 solution : [9, 1, 26, 23]


Solution : [9, 1, 26, 23] has cost 22.


Decide in level 13 among pending : [38, 27, 40, 39, 16, 14, 0, 19, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [38, 27, 40, 39, 16, 0, 19, 15]
 solution : [9, 1, 26, 23, 14]


New level: 14
 pending : [38, 27, 40, 39, 16, 0, 19, 15]
 solution : [9, 1, 26, 23, 14]


Before reduction : 
 pending  : [38, 27, 40, 39, 16, 0, 19, 15]
 solution : [9, 1, 26, 23, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 15, 39}

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 26, 23, 14]


Before reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 26, 23, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 26, 23, 14]


Solution : [9, 1, 26, 23, 14] has cost 29.


Before backtrack at level 14
 pending : [38, 27, 40, 0, 19]
 solution : [9, 1, 26, 23, 14]

After backtrack at level 14
 pending : [38, 27, 40, 0, 19, 39, 16, 15]
 solution : [9, 1, 26, 23, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [38, 27, 40, 0, 19, 39, 16, 15]
 solution : [9, 1, 26, 23]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 39, 16, 15]
 solution : [9, 1, 26, 23]

Essensial at level 14 : {16}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 0), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {39}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 26, 23, 16]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 26, 23, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 0), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 26, 23, 16]


Solution : [9, 1, 26, 23, 16] has cost 29.


Before backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 26, 23, 16]

After backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16, 39]
 solution : [9, 1, 26, 23]


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 39]
 solution : [9, 1, 26, 23]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14]
 solution : [9, 1, 26, 23]


Before backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14]
 solution : [9, 1, 26, 23]

After backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18]
 solution : [9, 1, 26, 23]


Before backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18]
 solution : [9, 1, 26, 23]

After backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13]
 solution : [9, 1, 26, 23]


Before backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13]
 solution : [9, 1, 26, 23]

After backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 10, 17]
 solution : [9, 1, 26, 23]


Invert decision for 23 at level 9


New level: 10
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 10, 17]
 solution : [9, 1, 26]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 10, 17]
 solution : [9, 1, 26]

Essensial at level 10 : {10}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 34, 36, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 26, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 26, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 26, 10]


Solution : [9, 1, 26, 10] has cost 19.


Decide in level 10 among pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 10

After decision at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13]
 solution : [9, 1, 26, 10, 17]


New level: 11
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13]
 solution : [9, 1, 26, 10, 17]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13]
 solution : [9, 1, 26, 10, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {0, 18, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 13]
 solution : [9, 1, 26, 10, 17]


Before reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 13]
 solution : [9, 1, 26, 10, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 13]
 solution : [9, 1, 26, 10, 17]


Solution : [9, 1, 26, 10, 17] has cost 28.


Before backtrack at level 11
 pending : [38, 27, 40, 16, 39, 14, 13]
 solution : [9, 1, 26, 10, 17]

After backtrack at level 11
 pending : [38, 27, 40, 16, 39, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 26, 10, 17]


Invert decision for 17 at level 10


New level: 11
 pending : [38, 27, 40, 16, 39, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 26, 10]


Before reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 26, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 26, 10]


Solution : [9, 1, 26, 10] has cost 19.


Decide in level 11 among pending : [38, 27, 40, 16, 39, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [38, 27, 40, 16, 39, 14, 0, 19, 15, 18]
 solution : [9, 1, 26, 10, 13]


New level: 12
 pending : [38, 27, 40, 16, 39, 14, 0, 19, 15, 18]
 solution : [9, 1, 26, 10, 13]


Before reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 0, 19, 15, 18]
 solution : [9, 1, 26, 10, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {16, 15, 14, 39}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 26, 10, 13]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 26, 10, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 26, 10, 13]


Solution : [9, 1, 26, 10, 13] has cost 26.


Before backtrack at level 12
 pending : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 26, 10, 13]

After backtrack at level 12
 pending : [38, 27, 40, 0, 19, 18, 16, 39, 14, 15]
 solution : [9, 1, 26, 10, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [38, 27, 40, 0, 19, 18, 16, 39, 14, 15]
 solution : [9, 1, 26, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 39, 14, 15]
 solution : [9, 1, 26, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 39, 14, 15]
 solution : [9, 1, 26, 10]


Solution : [9, 1, 26, 10] has cost 19.


Decide in level 12 among pending : [38, 27, 40, 0, 19, 18, 16, 39, 14, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [38, 27, 40, 0, 19, 16, 39, 14, 15]
 solution : [9, 1, 26, 10, 18]


New level: 13
 pending : [38, 27, 40, 0, 19, 16, 39, 14, 15]
 solution : [9, 1, 26, 10, 18]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 39, 14, 15]
 solution : [9, 1, 26, 10, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 39, 14]
 solution : [9, 1, 26, 10, 18]


Before reduction : 
 pending  : [38, 27, 40, 16, 39, 14]
 solution : [9, 1, 26, 10, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 39, 14]
 solution : [9, 1, 26, 10, 18]


Solution : [9, 1, 26, 10, 18] has cost 28.


Before backtrack at level 13
 pending : [38, 27, 40, 16, 39, 14]
 solution : [9, 1, 26, 10, 18]

After backtrack at level 13
 pending : [38, 27, 40, 16, 39, 14, 0, 19, 15]
 solution : [9, 1, 26, 10, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [38, 27, 40, 16, 39, 14, 0, 19, 15]
 solution : [9, 1, 26, 10]


Before reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 0, 19, 15]
 solution : [9, 1, 26, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 0, 19, 15]
 solution : [9, 1, 26, 10]


Solution : [9, 1, 26, 10] has cost 19.


Decide in level 13 among pending : [38, 27, 40, 16, 39, 14, 0, 19, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [38, 27, 40, 16, 39, 0, 19, 15]
 solution : [9, 1, 26, 10, 14]


New level: 14
 pending : [38, 27, 40, 16, 39, 0, 19, 15]
 solution : [9, 1, 26, 10, 14]


Before reduction : 
 pending  : [38, 27, 40, 16, 39, 0, 19, 15]
 solution : [9, 1, 26, 10, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 15, 39}

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 26, 10, 14]


Before reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 26, 10, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 26, 10, 14]


Solution : [9, 1, 26, 10, 14] has cost 26.


Before backtrack at level 14
 pending : [38, 27, 40, 0, 19]
 solution : [9, 1, 26, 10, 14]

After backtrack at level 14
 pending : [38, 27, 40, 0, 19, 16, 39, 15]
 solution : [9, 1, 26, 10, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [38, 27, 40, 0, 19, 16, 39, 15]
 solution : [9, 1, 26, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 39, 15]
 solution : [9, 1, 26, 10]

Essensial at level 14 : {16}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 0), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {39}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 26, 10, 16]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 26, 10, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 0), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 26, 10, 16]


Solution : [9, 1, 26, 10, 16] has cost 26.


Before backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 26, 10, 16]

After backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16, 39]
 solution : [9, 1, 26, 10]


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 39]
 solution : [9, 1, 26, 10]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14]
 solution : [9, 1, 26, 10]


Before backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14]
 solution : [9, 1, 26, 10]

After backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18]
 solution : [9, 1, 26, 10]


Before backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18]
 solution : [9, 1, 26, 10]

After backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13]
 solution : [9, 1, 26, 10]


Before backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13]
 solution : [9, 1, 26, 10]

After backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17]
 solution : [9, 1, 26]


Before backtrack at level 9
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17]
 solution : [9, 1, 26]

After backtrack at level 9
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23]
 solution : [9, 1, 26]


Before backtrack at level 8
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23]
 solution : [9, 1, 26]

After backtrack at level 8
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22]
 solution : [9, 1, 26]


Before backtrack at level 7
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22]
 solution : [9, 1, 26]

After backtrack at level 7
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21]
 solution : [9, 1, 26]


Before backtrack at level 6
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21]
 solution : [9, 1, 26]

After backtrack at level 6
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21, 25]
 solution : [9, 1, 26]


Before backtrack at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21, 25]
 solution : [9, 1, 26]

After backtrack at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21, 25, 32]
 solution : [9, 1, 26]


Before backtrack at level 4
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21, 25, 32]
 solution : [9, 1, 26]

After backtrack at level 4
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21, 25, 32, 28]
 solution : [9, 1, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21, 25, 32, 28]
 solution : [9, 1]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21, 25, 32, 28]
 solution : [9, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21, 25, 32, 28]
 solution : [9, 1]


Solution : [9, 1] has cost 11.


Decide in level 4 among pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21, 25, 32, 28]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21, 25, 28]
 solution : [9, 1, 32]


New level: 5
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21, 25, 28]
 solution : [9, 1, 32]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 22, 21, 25, 28]
 solution : [9, 1, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 32768), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 8192), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {34, 31}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 25, 28]
 solution : [9, 1, 32]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 25, 28]
 solution : [9, 1, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 32768), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 8192), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 32768), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 8192), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 25, 28]
 solution : [9, 1, 32]


Solution : [9, 1, 32] has cost 24.


Before backtrack at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 25, 28]
 solution : [9, 1, 32]

After backtrack at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 25, 28, 31, 34]
 solution : [9, 1, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 25, 28, 31, 34]
 solution : [9, 1]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 25, 28, 31, 34]
 solution : [9, 1]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 32768), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 8192), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 25, 28, 31, 34]
 solution : [9, 1]


Solution : [9, 1] has cost 11.


Decide in level 5 among pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 25, 28, 31, 34]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 5

After decision at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 28, 31, 34]
 solution : [9, 1, 25]


New level: 6
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 28, 31, 34]
 solution : [9, 1, 25]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 28, 31, 34]
 solution : [9, 1, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {34, 31}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 28]
 solution : [9, 1, 25]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 28]
 solution : [9, 1, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 28]
 solution : [9, 1, 25]


Solution : [9, 1, 25] has cost 18.


Decide in level 6 among pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21, 28]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21]
 solution : [9, 1, 25, 28]


New level: 7
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21]
 solution : [9, 1, 25, 28]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 17, 23, 22, 21]
 solution : [9, 1, 25, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {0, 39, 40, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 1, 25, 28]


Before reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 1, 25, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 1, 25, 28]


Solution : [9, 1, 25, 28] has cost 22.


Decide in level 7 among pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 1, 25, 28, 10]


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 1, 25, 28, 10]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 1, 25, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 38, 8, 41, 42, 43, 45, 46, 49, 23, 30}

After reduction : 
 pending  : []
 solution : [9, 1, 25, 28, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 25, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 25, 28, 10]


Solution : [9, 1, 25, 28, 10] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 25, 28, 10]

After backtrack at level 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 1, 25, 28, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 1, 25, 28]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 1, 25, 28]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 38, 8, 41, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : []
 solution : [9, 1, 25, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 25, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 25, 28, 23]


Solution : [9, 1, 25, 28, 23] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 25, 28, 23]

After backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41]
 solution : [9, 1, 25, 28]


Before backtrack at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41]
 solution : [9, 1, 25, 28]

After backtrack at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 22, 21, 10]
 solution : [9, 1, 25, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 22, 21, 10]
 solution : [9, 1, 25]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 22, 21, 10]
 solution : [9, 1, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 22, 21, 10]
 solution : [9, 1, 25]


Solution : [9, 1, 25] has cost 18.


Decide in level 7 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 22, 21, 10]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 7

After decision at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 22, 10]
 solution : [9, 1, 25, 21]


New level: 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 22, 10]
 solution : [9, 1, 25, 21]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 22, 10]
 solution : [9, 1, 25, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {0, 39, 40, 13, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 25, 21]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 25, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 25, 21]


Solution : [9, 1, 25, 21] has cost 25.


Before backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 25, 21]

After backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 22]
 solution : [9, 1, 25, 21]


Invert decision for 21 at level 7


New level: 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 22]
 solution : [9, 1, 25]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 22]
 solution : [9, 1, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 22]
 solution : [9, 1, 25]


Solution : [9, 1, 25] has cost 18.


Decide in level 8 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 22]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 22]


New level: 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 22]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {0, 39, 40, 13, 14, 15, 16, 17, 18, 19, 27}

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 25, 22]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 25, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 25, 22]


Solution : [9, 1, 25, 22] has cost 25.


Before backtrack at level 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 1, 25, 22]

After backtrack at level 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25]


Solution : [9, 1, 25] has cost 18.


Decide in level 9 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 9

After decision at level 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 49]


New level: 10
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 49]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 49]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 0), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 0), (43, 0), (44, -1), (45, 4096), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {42, 43, 36, 46}

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 49]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 49]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 0), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 0), (43, 0), (44, -1), (45, 4096), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, -1), (43, -1), (44, -1), (45, 4096), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 49]


Solution : [9, 1, 25, 49] has cost 49.


Before backtrack at level 10
 pending : [23, 38, 8, 30, 33, 45, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 49]

After backtrack at level 10
 pending : [23, 38, 8, 30, 33, 45, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 1, 25, 49]


Invert decision for 49 at level 9


New level: 10
 pending : [23, 38, 8, 30, 33, 45, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 1, 25]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 1, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, -1), (43, -1), (44, -1), (45, 4096), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 1, 25]


Solution : [9, 1, 25] has cost 18.


Decide in level 10 among pending : [23, 38, 8, 30, 33, 45, 41, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 36, 42, 43, 46]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 10

After decision at level 10
 pending : [23, 38, 8, 30, 33, 45, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 1, 25, 41]


New level: 11
 pending : [23, 38, 8, 30, 33, 45, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 1, 25, 41]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 1, 25, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 131072), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 36, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [23, 38, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 41]


Before reduction : 
 pending  : [23, 38, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 131072), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 131072), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 38, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 41]


Solution : [9, 1, 25, 41] has cost 36.


Before backtrack at level 11
 pending : [23, 38, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 41]

After backtrack at level 11
 pending : [23, 38, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 25, 41]


Invert decision for 41 at level 10


New level: 11
 pending : [23, 38, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 25]


Before reduction : 
 pending  : [23, 38, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 131072), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 38, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 25]


Solution : [9, 1, 25] has cost 18.


Decide in level 11 among pending : [23, 38, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 11

After decision at level 11
 pending : [38, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 25, 23]


New level: 12
 pending : [38, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 25, 23]


Before reduction : 
 pending  : [38, 10, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 25, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 36, 8, 10, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 23]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 23]


Solution : [9, 1, 25, 23] has cost 25.


Before backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 23]

After backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 10, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 25, 23]


Invert decision for 23 at level 11


New level: 12
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 10, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 25]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17, 10, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 1, 25]

Essensial at level 12 : {10}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 36, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]
 solution : [9, 1, 25, 10]


Solution : [9, 1, 25, 10] has cost 22.


Decide in level 12 among pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 17]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13]
 solution : [9, 1, 25, 10, 17]


New level: 13
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13]
 solution : [9, 1, 25, 10, 17]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13]
 solution : [9, 1, 25, 10, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 18, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 13]
 solution : [9, 1, 25, 10, 17]


Before reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 13]
 solution : [9, 1, 25, 10, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 13]
 solution : [9, 1, 25, 10, 17]


Solution : [9, 1, 25, 10, 17] has cost 31.


Before backtrack at level 13
 pending : [38, 27, 40, 16, 39, 14, 13]
 solution : [9, 1, 25, 10, 17]

After backtrack at level 13
 pending : [38, 27, 40, 16, 39, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 25, 10, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [38, 27, 40, 16, 39, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 25, 10]


Before reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 25, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 25, 10]


Solution : [9, 1, 25, 10] has cost 22.


Decide in level 13 among pending : [38, 27, 40, 16, 39, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [38, 27, 40, 16, 39, 14, 0, 19, 15, 18]
 solution : [9, 1, 25, 10, 13]


New level: 14
 pending : [38, 27, 40, 16, 39, 14, 0, 19, 15, 18]
 solution : [9, 1, 25, 10, 13]


Before reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 0, 19, 15, 18]
 solution : [9, 1, 25, 10, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 15, 14, 39}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 25, 10, 13]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 25, 10, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 25, 10, 13]


Solution : [9, 1, 25, 10, 13] has cost 29.


Before backtrack at level 14
 pending : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 25, 10, 13]

After backtrack at level 14
 pending : [38, 27, 40, 0, 19, 18, 16, 39, 14, 15]
 solution : [9, 1, 25, 10, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [38, 27, 40, 0, 19, 18, 16, 39, 14, 15]
 solution : [9, 1, 25, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 39, 14, 15]
 solution : [9, 1, 25, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 39, 14, 15]
 solution : [9, 1, 25, 10]


Solution : [9, 1, 25, 10] has cost 22.


Decide in level 14 among pending : [38, 27, 40, 0, 19, 18, 16, 39, 14, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 14

After decision at level 14
 pending : [38, 27, 40, 0, 19, 16, 39, 14, 15]
 solution : [9, 1, 25, 10, 18]


New level: 15
 pending : [38, 27, 40, 0, 19, 16, 39, 14, 15]
 solution : [9, 1, 25, 10, 18]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 39, 14, 15]
 solution : [9, 1, 25, 10, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {0, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 39, 14]
 solution : [9, 1, 25, 10, 18]


Before reduction : 
 pending  : [38, 27, 40, 16, 39, 14]
 solution : [9, 1, 25, 10, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 39, 14]
 solution : [9, 1, 25, 10, 18]


Solution : [9, 1, 25, 10, 18] has cost 31.


Before backtrack at level 15
 pending : [38, 27, 40, 16, 39, 14]
 solution : [9, 1, 25, 10, 18]

After backtrack at level 15
 pending : [38, 27, 40, 16, 39, 14, 0, 19, 15]
 solution : [9, 1, 25, 10, 18]


Invert decision for 18 at level 14


New level: 15
 pending : [38, 27, 40, 16, 39, 14, 0, 19, 15]
 solution : [9, 1, 25, 10]


Before reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 0, 19, 15]
 solution : [9, 1, 25, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 512), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 39, 14, 0, 19, 15]
 solution : [9, 1, 25, 10]


Solution : [9, 1, 25, 10] has cost 22.


Decide in level 15 among pending : [38, 27, 40, 16, 39, 14, 0, 19, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 15

After decision at level 15
 pending : [38, 27, 40, 16, 39, 0, 19, 15]
 solution : [9, 1, 25, 10, 14]


New level: 16
 pending : [38, 27, 40, 16, 39, 0, 19, 15]
 solution : [9, 1, 25, 10, 14]


Before reduction : 
 pending  : [38, 27, 40, 16, 39, 0, 19, 15]
 solution : [9, 1, 25, 10, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 15, 39}

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 25, 10, 14]


Before reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 25, 10, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 25, 10, 14]


Solution : [9, 1, 25, 10, 14] has cost 29.


Before backtrack at level 16
 pending : [38, 27, 40, 0, 19]
 solution : [9, 1, 25, 10, 14]

After backtrack at level 16
 pending : [38, 27, 40, 0, 19, 16, 39, 15]
 solution : [9, 1, 25, 10, 14]


Invert decision for 14 at level 15


New level: 16
 pending : [38, 27, 40, 0, 19, 16, 39, 15]
 solution : [9, 1, 25, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 39, 15]
 solution : [9, 1, 25, 10]

Essensial at level 16 : {16}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 0), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {39}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 25, 10, 16]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 25, 10, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 0), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 25, 10, 16]


Solution : [9, 1, 25, 10, 16] has cost 29.


Before backtrack at level 16
 pending : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 25, 10, 16]

After backtrack at level 16
 pending : [38, 27, 40, 0, 19, 15, 16, 39]
 solution : [9, 1, 25, 10]


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15, 16, 39]
 solution : [9, 1, 25, 10]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14]
 solution : [9, 1, 25, 10]


Before backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14]
 solution : [9, 1, 25, 10]

After backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18]
 solution : [9, 1, 25, 10]


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18]
 solution : [9, 1, 25, 10]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13]
 solution : [9, 1, 25, 10]


Before backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13]
 solution : [9, 1, 25, 10]

After backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17]
 solution : [9, 1, 25]


Before backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17]
 solution : [9, 1, 25]

After backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23]
 solution : [9, 1, 25]


Before backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23]
 solution : [9, 1, 25]

After backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41]
 solution : [9, 1, 25]


Before backtrack at level 9
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41]
 solution : [9, 1, 25]

After backtrack at level 9
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49]
 solution : [9, 1, 25]


Before backtrack at level 8
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49]
 solution : [9, 1, 25]

After backtrack at level 8
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49, 22]
 solution : [9, 1, 25]


Before backtrack at level 7
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49, 22]
 solution : [9, 1, 25]

After backtrack at level 7
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49, 22, 21]
 solution : [9, 1, 25]


Before backtrack at level 6
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49, 22, 21]
 solution : [9, 1, 25]

After backtrack at level 6
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49, 22, 21, 31, 34, 28]
 solution : [9, 1, 25]


Invert decision for 25 at level 5


New level: 6
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49, 22, 21, 31, 34, 28]
 solution : [9, 1]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49, 22, 21, 31, 34, 28]
 solution : [9, 1]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49, 22, 21, 31, 34, 28]
 solution : [9, 1]


Solution : [9, 1] has cost 11.


Decide in level 6 among pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49, 22, 21, 31, 34, 28]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49, 22, 21, 31, 34]
 solution : [9, 1, 28]


New level: 7
 pending : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49, 22, 21, 31, 34]
 solution : [9, 1, 28]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 39, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 17, 23, 41, 49, 22, 21, 31, 34]
 solution : [9, 1, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [38, 39, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 41, 49, 31, 34]
 solution : [9, 1, 28]


Before reduction : 
 pending  : [38, 39, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 41, 49, 31, 34]
 solution : [9, 1, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 39, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 41, 49, 31, 34]
 solution : [9, 1, 28]


Solution : [9, 1, 28] has cost 15.


Decide in level 7 among pending : [38, 39, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 41, 49, 31, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 23, 41, 49, 31, 34]
 solution : [9, 1, 28, 10]


New level: 8
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 23, 41, 49, 31, 34]
 solution : [9, 1, 28, 10]


Before reduction : 
 pending  : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 23, 41, 49, 31, 34]
 solution : [9, 1, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 28, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 28, 10]


Solution : [9, 1, 28, 10] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 28, 10]

After backtrack at level 8
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 23, 41, 49, 31, 34]
 solution : [9, 1, 28, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 23, 41, 49, 31, 34]
 solution : [9, 1, 28]


Before reduction : 
 pending  : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 23, 41, 49, 31, 34]
 solution : [9, 1, 28]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 28, 23]


Solution : [9, 1, 28, 23] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [9, 1, 28, 23]

After backtrack at level 8
 pending : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34]
 solution : [9, 1, 28]


Before backtrack at level 7
 pending : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34]
 solution : [9, 1, 28]

After backtrack at level 7
 pending : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 10]
 solution : [9, 1, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 10]
 solution : [9, 1]


Before reduction : 
 pending  : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 10]
 solution : [9, 1]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 10]
 solution : [9, 1]


Solution : [9, 1] has cost 11.


Decide in level 7 among pending : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 10]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 7

After decision at level 7
 pending : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 10]
 solution : [9, 1, 21]


New level: 8
 pending : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 10]
 solution : [9, 1, 21]


Before reduction : 
 pending  : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 10]
 solution : [9, 1, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, 536870912), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10]
 solution : [9, 1, 21]


Before reduction : 
 pending  : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10]
 solution : [9, 1, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10]
 solution : [9, 1, 21]


Solution : [9, 1, 21] has cost 18.


Decide in level 8 among pending : [23, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10]
 solution : [9, 1, 21, 23]


New level: 9
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10]
 solution : [9, 1, 21, 23]


Before reduction : 
 pending  : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10]
 solution : [9, 1, 21, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 21, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 21, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 21, 23]


Solution : [9, 1, 21, 23] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [9, 1, 21, 23]

After backtrack at level 9
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10]
 solution : [9, 1, 21, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10]
 solution : [9, 1, 21]


Before reduction : 
 pending  : [38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10]
 solution : [9, 1, 21]

Essensial at level 9 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 21, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 21, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 21, 10]


Solution : [9, 1, 21, 10] has cost 22.


Before backtrack at level 9
 pending : []
 solution : [9, 1, 21, 10]

After backtrack at level 9
 pending : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34]
 solution : [9, 1, 21]


Before backtrack at level 8
 pending : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34]
 solution : [9, 1, 21]

After backtrack at level 8
 pending : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1, 21]


Invert decision for 21 at level 7


New level: 8
 pending : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1]


Before reduction : 
 pending  : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1]


Solution : [9, 1] has cost 11.


Decide in level 8 among pending : [10, 38, 39, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1, 39]


New level: 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1, 39]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 33554432), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1, 39]


Solution : [9, 1, 39] has cost 25.


Before backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1, 39]

After backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 33554432), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]
 solution : [9, 1]


Solution : [9, 1] has cost 11.


Decide in level 9 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 23]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]
 solution : [9, 1, 22]


New level: 10
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]
 solution : [9, 1, 22]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23]
 solution : [9, 1, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, 268435456), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 27}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23]
 solution : [9, 1, 22]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23]
 solution : [9, 1, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23]
 solution : [9, 1, 22]


Solution : [9, 1, 22] has cost 18.


Decide in level 10 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23]
 solution : [9, 1, 22, 10]


New level: 11
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23]
 solution : [9, 1, 22, 10]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23]
 solution : [9, 1, 22, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 38, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 22, 10]


Before reduction : 
 pending  : []
 solution : [9, 1, 22, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 22, 10]


Solution : [9, 1, 22, 10] has cost 22.


Before backtrack at level 11
 pending : []
 solution : [9, 1, 22, 10]

After backtrack at level 11
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23]
 solution : [9, 1, 22, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23]
 solution : [9, 1, 22]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23]
 solution : [9, 1, 22]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 38, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 1, 22, 23]


Before reduction : 
 pending  : []
 solution : [9, 1, 22, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 1, 22, 23]


Solution : [9, 1, 22, 23] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [9, 1, 22, 23]

After backtrack at level 11
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34]
 solution : [9, 1, 22]


Before backtrack at level 10
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34]
 solution : [9, 1, 22]

After backtrack at level 10
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1]


Solution : [9, 1] has cost 11.


Decide in level 10 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1, 23]


New level: 11
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1, 23]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 10]
 solution : [9, 1, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 131072), (16, 65536), (17, 16777216), (18, 8388608), (19, 393216), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 23]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 23]


Solution : [9, 1, 23] has cost 18.


Decide in level 11 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 23, 17]


New level: 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 23, 17]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 18, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 23, 17]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 23, 17]


Solution : [9, 1, 23, 17] has cost 27.


Before backtrack at level 12
 pending : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 23, 17]

After backtrack at level 12
 pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 23, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 23]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 23]


Solution : [9, 1, 23] has cost 18.


Decide in level 12 among pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 23, 13]


New level: 13
 pending : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 23, 13]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 23, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 23, 13]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 23, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 23, 13]


Solution : [9, 1, 23, 13] has cost 25.


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 23, 13]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 23, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 23]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 23]


Solution : [9, 1, 23] has cost 18.


Decide in level 13 among pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 23, 18]


New level: 14
 pending : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 23, 18]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 23, 18]


Before reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 23, 18]


Solution : [9, 1, 23, 18] has cost 27.


Before backtrack at level 14
 pending : [38, 27, 40, 16, 14]
 solution : [9, 1, 23, 18]

After backtrack at level 14
 pending : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 23, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 23]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 23]


Solution : [9, 1, 23] has cost 18.


Decide in level 14 among pending : [38, 27, 40, 16, 14, 0, 19, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 23, 14]


New level: 15
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 23, 14]


Before reduction : 
 pending  : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 23, 14]


Before reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 23, 14]


Solution : [9, 1, 23, 14] has cost 25.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19]
 solution : [9, 1, 23, 14]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 23, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 23]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 23]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 23, 16]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 23, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 23, 16]


Solution : [9, 1, 23, 16] has cost 25.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 23, 16]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 1, 23]


Before backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 1, 23]

After backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 1, 23]


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 1, 23]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 1, 23]


Before backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 1, 23]

After backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 23]


Before backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 23]

After backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 17]
 solution : [9, 1, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 17]
 solution : [9, 1]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 17]
 solution : [9, 1]

Essensial at level 11 : {10}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 1, 10]


Solution : [9, 1, 10] has cost 15.


Decide in level 11 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 10, 17]


New level: 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 10, 17]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 10, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, 8388608), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 18, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 10, 17]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 10, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 10, 17]


Solution : [9, 1, 10, 17] has cost 24.


Before backtrack at level 12
 pending : [38, 27, 40, 16, 14, 13]
 solution : [9, 1, 10, 17]

After backtrack at level 12
 pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 10, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 10]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 1, 10]


Solution : [9, 1, 10] has cost 15.


Decide in level 12 among pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 10, 13]


New level: 13
 pending : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 10, 13]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 1, 10, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 10, 13]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 10, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 10, 13]


Solution : [9, 1, 10, 13] has cost 22.


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 18]
 solution : [9, 1, 10, 13]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 10, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1048576), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 1, 10]


Solution : [9, 1, 10] has cost 15.


Decide in level 13 among pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 10, 18]


New level: 14
 pending : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 10, 18]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 1, 10, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, 4194304), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 10, 18]


Before reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 10, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 0), (16, 16384), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 1, 10, 18]


Solution : [9, 1, 10, 18] has cost 24.


Before backtrack at level 14
 pending : [38, 27, 40, 16, 14]
 solution : [9, 1, 10, 18]

After backtrack at level 14
 pending : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 10, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 10]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 1, 10]


Solution : [9, 1, 10] has cost 15.


Decide in level 14 among pending : [38, 27, 40, 16, 14, 0, 19, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 10, 14]


New level: 15
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 10, 14]


Before reduction : 
 pending  : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 1, 10, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 10, 14]


Before reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 10, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 1, 10, 14]


Solution : [9, 1, 10, 14] has cost 22.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19]
 solution : [9, 1, 10, 14]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 10, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 1, 10]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 10, 16]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 10, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 10, 16]


Solution : [9, 1, 10, 16] has cost 22.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15]
 solution : [9, 1, 10, 16]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 1, 10]


Before backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 1, 10]

After backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 1, 10]


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 1, 10]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 1, 10]


Before backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 1, 10]

After backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 10]


Before backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 1, 10]

After backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17]
 solution : [9, 1]


Before backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17]
 solution : [9, 1]

After backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23]
 solution : [9, 1]


Before backtrack at level 9
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23]
 solution : [9, 1]

After backtrack at level 9
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22]
 solution : [9, 1]


Before backtrack at level 8
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22]
 solution : [9, 1]

After backtrack at level 8
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39]
 solution : [9, 1]


Before backtrack at level 7
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39]
 solution : [9, 1]

After backtrack at level 7
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21]
 solution : [9, 1]


Before backtrack at level 6
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21]
 solution : [9, 1]

After backtrack at level 6
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28]
 solution : [9, 1]


Before backtrack at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28]
 solution : [9, 1]

After backtrack at level 5
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25]
 solution : [9, 1]


Before backtrack at level 4
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25]
 solution : [9, 1]

After backtrack at level 4
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32]
 solution : [9, 1]


Before backtrack at level 3
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32]
 solution : [9, 1]

After backtrack at level 3
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32, 26]
 solution : [9, 1]


Before backtrack at level 2
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32, 26]
 solution : [9, 1]

After backtrack at level 2
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32, 26, 2]
 solution : [9, 1]


Invert decision for 1 at level 1


New level: 2
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32, 26, 2]
 solution : [9]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32, 26, 2]
 solution : [9]

Essensial at level 2 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32, 26, 2]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 2 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32, 26, 2]

Coverage : [(0, 1048576), (1, -1), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 2 with phase True at level 2

After decision at level 2
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32, 26]
 solution : [9, 2]


New level: 3
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32, 26]
 solution : [9, 2]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32, 26]
 solution : [9, 2]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, 1073741824), (22, 536870912), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, 2147483648), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32, 26]
 solution : [9, 2]


Solution : [9, 2] has cost 9.


Decide in level 3 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 28, 25, 32, 26]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, 1073741824), (22, 536870912), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, 2147483648), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 25, 32, 26]
 solution : [9, 2, 28]


New level: 4
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 25, 32, 26]
 solution : [9, 2, 28]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 22, 39, 21, 25, 32, 26]
 solution : [9, 2, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, 1073741824), (22, 536870912), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, 2147483648), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 536870912), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 39, 25, 32, 26]
 solution : [9, 2, 28]


Before reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 39, 25, 32, 26]
 solution : [9, 2, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 536870912), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 536870912), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 39, 25, 32, 26]
 solution : [9, 2, 28]


Solution : [9, 2, 28] has cost 13.


Decide in level 4 among pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 39, 25, 32, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 536870912), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 39, 25, 26]
 solution : [9, 2, 28, 32]


New level: 5
 pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 39, 25, 26]
 solution : [9, 2, 28, 32]


Before reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 39, 25, 26]
 solution : [9, 2, 28, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 536870912), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 4096), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {34, 39, 31}

After reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 26]
 solution : [9, 2, 28, 32]


Before reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 26]
 solution : [9, 2, 28, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 4096), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 4096), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 26]
 solution : [9, 2, 28, 32]


Solution : [9, 2, 28, 32] has cost 26.


Before backtrack at level 5
 pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 26]
 solution : [9, 2, 28, 32]

After backtrack at level 5
 pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 26, 31, 34, 39]
 solution : [9, 2, 28, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 26, 31, 34, 39]
 solution : [9, 2, 28]


Before reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 26, 31, 34, 39]
 solution : [9, 2, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 4096), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 26, 31, 34, 39]
 solution : [9, 2, 28]


Solution : [9, 2, 28] has cost 13.


Decide in level 5 among pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 26, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 5

After decision at level 5
 pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 31, 34, 39]
 solution : [9, 2, 28, 26]


New level: 6
 pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 31, 34, 39]
 solution : [9, 2, 28, 26]


Before reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 31, 34, 39]
 solution : [9, 2, 28, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 31, 34, 39]
 solution : [9, 2, 28, 26]


Solution : [9, 2, 28, 26] has cost 17.


Decide in level 6 among pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 28, 26, 25]


New level: 7
 pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 28, 26, 25]


Before reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 28, 26, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 39, 31}

After reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 2, 28, 26, 25]


Before reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 2, 28, 26, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 2, 28, 26, 25]


Solution : [9, 2, 28, 26, 25] has cost 24.


Before backtrack at level 7
 pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 2, 28, 26, 25]

After backtrack at level 7
 pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 28, 26, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 28, 26]


Before reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 28, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 28, 26]


Solution : [9, 2, 28, 26] has cost 17.


Decide in level 7 among pending : [38, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 28, 26, 10]


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 28, 26, 10]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 28, 26, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 2, 28, 26, 10]


Before reduction : 
 pending  : []
 solution : [9, 2, 28, 26, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 2, 28, 26, 10]


Solution : [9, 2, 28, 26, 10] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [9, 2, 28, 26, 10]

After backtrack at level 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 28, 26, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 28, 26]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 28, 26]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 2, 28, 26, 23]


Before reduction : 
 pending  : []
 solution : [9, 2, 28, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 2, 28, 26, 23]


Solution : [9, 2, 28, 26, 23] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [9, 2, 28, 26, 23]

After backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39]
 solution : [9, 2, 28, 26]


Before backtrack at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39]
 solution : [9, 2, 28, 26]

After backtrack at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10]
 solution : [9, 2, 28, 26]


Before backtrack at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10]
 solution : [9, 2, 28, 26]

After backtrack at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25]
 solution : [9, 2, 28, 26]


Invert decision for 26 at level 5


New level: 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25]
 solution : [9, 2, 28]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25]
 solution : [9, 2, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25]
 solution : [9, 2, 28]


Solution : [9, 2, 28] has cost 13.


Decide in level 6 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10]
 solution : [9, 2, 28, 25]


New level: 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10]
 solution : [9, 2, 28, 25]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10]
 solution : [9, 2, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 39, 31}

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 2, 28, 25]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 2, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 2, 28, 25]


Solution : [9, 2, 28, 25] has cost 20.


Before backtrack at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 2, 28, 25]

After backtrack at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 2, 28, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 2, 28]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 2, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 2, 28]


Solution : [9, 2, 28] has cost 13.


Decide in level 7 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 2, 28, 23]


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 2, 28, 23]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 2, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 2, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 2, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 2, 28, 23]


Solution : [9, 2, 28, 23] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [9, 2, 28, 23]

After backtrack at level 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 2, 28, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 2, 28]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 31, 34, 39]
 solution : [9, 2, 28]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 2, 28, 10]


Before reduction : 
 pending  : []
 solution : [9, 2, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 2, 28, 10]


Solution : [9, 2, 28, 10] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [9, 2, 28, 10]

After backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39]
 solution : [9, 2, 28]


Before backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39]
 solution : [9, 2, 28]

After backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23]
 solution : [9, 2, 28]


Before backtrack at level 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23]
 solution : [9, 2, 28]

After backtrack at level 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25]
 solution : [9, 2, 28]


Before backtrack at level 5
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25]
 solution : [9, 2, 28]

After backtrack at level 5
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26]
 solution : [9, 2, 28]


Before backtrack at level 4
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26]
 solution : [9, 2, 28]

After backtrack at level 4
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9, 2, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9, 2]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, 1073741824), (22, 536870912), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9, 2]


Solution : [9, 2] has cost 9.


Decide in level 4 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, 1073741824), (22, 536870912), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 4

After decision at level 4
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 2, 21]


New level: 5
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 2, 21]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 2, 21]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, 1073741824), (22, 536870912), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 536870912), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26, 32]
 solution : [9, 2, 21]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26, 32]
 solution : [9, 2, 21]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 536870912), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 536870912), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26, 32]
 solution : [9, 2, 21]


Solution : [9, 2, 21] has cost 16.


Decide in level 5 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 26, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 536870912), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 5

After decision at level 5
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 32]
 solution : [9, 2, 21, 26]


New level: 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 32]
 solution : [9, 2, 21, 26]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 32]
 solution : [9, 2, 21, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 536870912), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 268435456), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 32]
 solution : [9, 2, 21, 26]


Solution : [9, 2, 21, 26] has cost 20.


Before backtrack at level 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 32]
 solution : [9, 2, 21, 26]

After backtrack at level 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 32]
 solution : [9, 2, 21, 26]


Invert decision for 26 at level 5


New level: 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 32]
 solution : [9, 2, 21]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 32]
 solution : [9, 2, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 268435456), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 536870912), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 32]
 solution : [9, 2, 21]


Solution : [9, 2, 21] has cost 16.


Decide in level 6 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 536870912), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25]
 solution : [9, 2, 21, 32]


New level: 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25]
 solution : [9, 2, 21, 32]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 23, 25]
 solution : [9, 2, 21, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 536870912), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 39, 31}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25]
 solution : [9, 2, 21, 32]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25]
 solution : [9, 2, 21, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25]
 solution : [9, 2, 21, 32]


Solution : [9, 2, 21, 32] has cost 29.


Before backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25]
 solution : [9, 2, 21, 32]

After backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 31, 34, 39]
 solution : [9, 2, 21, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 31, 34, 39]
 solution : [9, 2, 21]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 31, 34, 39]
 solution : [9, 2, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 31, 34, 39]
 solution : [9, 2, 21]


Solution : [9, 2, 21] has cost 16.


Decide in level 7 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 25, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 7

After decision at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 21, 25]


New level: 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 21, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 21, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 39, 31}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 2, 21, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 2, 21, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 2, 21, 25]


Solution : [9, 2, 21, 25] has cost 23.


Before backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23]
 solution : [9, 2, 21, 25]

After backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 21, 25]


Invert decision for 25 at level 7


New level: 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 21]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 21]


Solution : [9, 2, 21] has cost 16.


Decide in level 8 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 8

After decision at level 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 21, 10]


New level: 9
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 21, 10]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 21, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 2, 21, 10]


Before reduction : 
 pending  : []
 solution : [9, 2, 21, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 2, 21, 10]


Solution : [9, 2, 21, 10] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [9, 2, 21, 10]

After backtrack at level 9
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 21, 10]


Invert decision for 10 at level 8


New level: 9
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 21]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 39]
 solution : [9, 2, 21]

Essensial at level 9 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 2, 21, 23]


Before reduction : 
 pending  : []
 solution : [9, 2, 21, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 2, 21, 23]


Solution : [9, 2, 21, 23] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [9, 2, 21, 23]

After backtrack at level 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39]
 solution : [9, 2, 21]


Before backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39]
 solution : [9, 2, 21]

After backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10]
 solution : [9, 2, 21]


Before backtrack at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10]
 solution : [9, 2, 21]

After backtrack at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25]
 solution : [9, 2, 21]


Before backtrack at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25]
 solution : [9, 2, 21]

After backtrack at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25, 32]
 solution : [9, 2, 21]


Before backtrack at level 5
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25, 32]
 solution : [9, 2, 21]

After backtrack at level 5
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25, 32, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26]
 solution : [9, 2, 21]


Invert decision for 21 at level 4


New level: 5
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25, 32, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26]
 solution : [9, 2]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25, 32, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26]
 solution : [9, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, 536870912), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25, 32, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26]
 solution : [9, 2]


Solution : [9, 2] has cost 9.


Decide in level 5 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25, 32, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, 536870912), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26]
 solution : [9, 2, 32]


New level: 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26]
 solution : [9, 2, 32]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26]
 solution : [9, 2, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, 536870912), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 536870912), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, 536870912), (23, 67108864), (24, -1), (25, 8192), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {34, 31}

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26]
 solution : [9, 2, 32]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26]
 solution : [9, 2, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, 536870912), (23, 67108864), (24, -1), (25, 8192), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, 536870912), (23, 67108864), (24, -1), (25, 8192), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26]
 solution : [9, 2, 32]


Solution : [9, 2, 32] has cost 22.


Before backtrack at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26]
 solution : [9, 2, 32]

After backtrack at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26, 31, 34]
 solution : [9, 2, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26, 31, 34]
 solution : [9, 2]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26, 31, 34]
 solution : [9, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, 536870912), (23, 67108864), (24, -1), (25, 8192), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, 536870912), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26, 31, 34]
 solution : [9, 2]


Solution : [9, 2] has cost 9.


Decide in level 6 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 26, 31, 34]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, 536870912), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 22 with phase True at level 6

After decision at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 26, 31, 34]
 solution : [9, 2, 22]


New level: 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 26, 31, 34]
 solution : [9, 2, 22]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 26, 31, 34]
 solution : [9, 2, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, 536870912), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 27}

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 26, 31, 34]
 solution : [9, 2, 22]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 26, 31, 34]
 solution : [9, 2, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 0), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 26, 31, 34]
 solution : [9, 2, 22]


Solution : [9, 2, 22] has cost 16.


Decide in level 7 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 26, 31, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 31, 34]
 solution : [9, 2, 22, 26]


New level: 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 31, 34]
 solution : [9, 2, 22, 26]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 31, 34]
 solution : [9, 2, 22, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 31, 34]
 solution : [9, 2, 22, 26]


Solution : [9, 2, 22, 26] has cost 20.


Before backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 31, 34]
 solution : [9, 2, 22, 26]

After backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 31, 34]
 solution : [9, 2, 22, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 31, 34]
 solution : [9, 2, 22]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 31, 34]
 solution : [9, 2, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 31, 34]
 solution : [9, 2, 22]


Solution : [9, 2, 22] has cost 16.


Decide in level 8 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 25, 31, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 8

After decision at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 31, 34]
 solution : [9, 2, 22, 25]


New level: 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 31, 34]
 solution : [9, 2, 22, 25]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 10, 31, 34]
 solution : [9, 2, 22, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {34, 31, 39}

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 2, 22, 25]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 2, 22, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 2, 22, 25]


Solution : [9, 2, 22, 25] has cost 23.


Before backtrack at level 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 2, 22, 25]

After backtrack at level 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 31, 34]
 solution : [9, 2, 22, 25]


Invert decision for 25 at level 8


New level: 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 31, 34]
 solution : [9, 2, 22]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 31, 34]
 solution : [9, 2, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 31, 34]
 solution : [9, 2, 22]


Solution : [9, 2, 22] has cost 16.


Decide in level 9 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 31, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 9

After decision at level 9
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 31, 34]
 solution : [9, 2, 22, 23]


New level: 10
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 31, 34]
 solution : [9, 2, 22, 23]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 31, 34]
 solution : [9, 2, 22, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 2, 22, 23]


Before reduction : 
 pending  : []
 solution : [9, 2, 22, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 2, 22, 23]


Solution : [9, 2, 22, 23] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [9, 2, 22, 23]

After backtrack at level 10
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 31, 34]
 solution : [9, 2, 22, 23]


Invert decision for 23 at level 9


New level: 10
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 31, 34]
 solution : [9, 2, 22]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 31, 34]
 solution : [9, 2, 22]

Essensial at level 10 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 2, 22, 10]


Before reduction : 
 pending  : []
 solution : [9, 2, 22, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 2, 22, 10]


Solution : [9, 2, 22, 10] has cost 20.


Before backtrack at level 10
 pending : []
 solution : [9, 2, 22, 10]

After backtrack at level 10
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34]
 solution : [9, 2, 22]


Before backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34]
 solution : [9, 2, 22]

After backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23]
 solution : [9, 2, 22]


Before backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23]
 solution : [9, 2, 22]

After backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23, 25]
 solution : [9, 2, 22]


Before backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23, 25]
 solution : [9, 2, 22]

After backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 26]
 solution : [9, 2, 22]


Invert decision for 22 at level 6


New level: 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 26]
 solution : [9, 2]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 26]
 solution : [9, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 26]
 solution : [9, 2]


Solution : [9, 2] has cost 9.


Decide in level 7 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 26]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26]


New level: 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, 536870912), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26]


Solution : [9, 2, 26] has cost 13.


Decide in level 8 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 39, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 39]


New level: 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 39]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 67108864), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 262144), (32, -1), (33, 8192), (34, 2048), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 39]


Solution : [9, 2, 26, 39] has cost 27.


Before backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 39]

After backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 67108864), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 262144), (32, -1), (33, 8192), (34, 2048), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26]


Solution : [9, 2, 26] has cost 13.


Decide in level 9 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 25]


New level: 10
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 134217728), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {34, 31}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 25]


Solution : [9, 2, 26, 25] has cost 20.


Before backtrack at level 10
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 25]

After backtrack at level 10
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 2, 26, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 2, 26]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 2, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 2, 26]


Solution : [9, 2, 26] has cost 13.


Decide in level 10 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 2, 26, 10]


New level: 11
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 2, 26, 10]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 2, 26, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 10]


Solution : [9, 2, 26, 10] has cost 17.


Decide in level 11 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 2, 26, 10, 17]


New level: 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 2, 26, 10, 17]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 2, 26, 10, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 18, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 2, 26, 10, 17]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 2, 26, 10, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13]
 solution : [9, 2, 26, 10, 17]


Solution : [9, 2, 26, 10, 17] has cost 26.


Before backtrack at level 12
 pending : [38, 27, 40, 16, 14, 13]
 solution : [9, 2, 26, 10, 17]

After backtrack at level 12
 pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 2, 26, 10, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 2, 26, 10]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 2, 26, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 2, 26, 10]


Solution : [9, 2, 26, 10] has cost 17.


Decide in level 12 among pending : [38, 27, 40, 16, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 2, 26, 10, 13]


New level: 13
 pending : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 2, 26, 10, 13]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 2, 26, 10, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 2097152), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 2, 26, 10, 13]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 2, 26, 10, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 2097152), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2097152), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18]
 solution : [9, 2, 26, 10, 13]


Solution : [9, 2, 26, 10, 13] has cost 24.


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 18]
 solution : [9, 2, 26, 10, 13]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 2, 26, 10, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 2, 26, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 2, 26, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2097152), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 2, 26, 10]


Solution : [9, 2, 26, 10] has cost 17.


Decide in level 13 among pending : [38, 27, 40, 0, 19, 18, 16, 14, 15]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 2, 26, 10, 18]


New level: 14
 pending : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 2, 26, 10, 18]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 14, 15]
 solution : [9, 2, 26, 10, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 19, 15}

After reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 2, 26, 10, 18]


Before reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 2, 26, 10, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14]
 solution : [9, 2, 26, 10, 18]


Solution : [9, 2, 26, 10, 18] has cost 26.


Before backtrack at level 14
 pending : [38, 27, 40, 16, 14]
 solution : [9, 2, 26, 10, 18]

After backtrack at level 14
 pending : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 2, 26, 10, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 2, 26, 10]


Before reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 2, 26, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 40, 16, 14, 0, 19, 15]
 solution : [9, 2, 26, 10]


Solution : [9, 2, 26, 10] has cost 17.


Decide in level 14 among pending : [38, 27, 40, 16, 14, 0, 19, 15]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 2, 26, 10, 14]


New level: 15
 pending : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 2, 26, 10, 14]


Before reduction : 
 pending  : [38, 27, 40, 16, 0, 19, 15]
 solution : [9, 2, 26, 10, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 15}

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 2, 26, 10, 14]


Before reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 2, 26, 10, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19]
 solution : [9, 2, 26, 10, 14]


Solution : [9, 2, 26, 10, 14] has cost 24.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19]
 solution : [9, 2, 26, 10, 14]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 2, 26, 10, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 2, 26, 10]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 16, 15]
 solution : [9, 2, 26, 10]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 2, 26, 10, 16]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 2, 26, 10, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15]
 solution : [9, 2, 26, 10, 16]


Solution : [9, 2, 26, 10, 16] has cost 24.


Before backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15]
 solution : [9, 2, 26, 10, 16]

After backtrack at level 15
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 2, 26, 10]


Before backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16]
 solution : [9, 2, 26, 10]

After backtrack at level 14
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 2, 26, 10]


Before backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14]
 solution : [9, 2, 26, 10]

After backtrack at level 13
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 2, 26, 10]


Before backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 2, 26, 10]

After backtrack at level 12
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 2, 26, 10]


Before backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 2, 26, 10]

After backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 17]
 solution : [9, 2, 26, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 17]
 solution : [9, 2, 26]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 31, 34, 17]
 solution : [9, 2, 26]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 23]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 23]


Solution : [9, 2, 26, 23] has cost 20.


Before backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 26, 23]

After backtrack at level 11
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34]
 solution : [9, 2, 26]


Before backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34]
 solution : [9, 2, 26]

After backtrack at level 10
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10]
 solution : [9, 2, 26]


Before backtrack at level 9
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10]
 solution : [9, 2, 26]

After backtrack at level 9
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 25]
 solution : [9, 2, 26]


Before backtrack at level 8
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 25]
 solution : [9, 2, 26]

After backtrack at level 8
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 25, 39]
 solution : [9, 2, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 25, 39]
 solution : [9, 2]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 25, 39]
 solution : [9, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 25, 39]
 solution : [9, 2]


Solution : [9, 2] has cost 9.


Decide in level 8 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 25, 39]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 8

After decision at level 8
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 39]
 solution : [9, 2, 25]


New level: 9
 pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 39]
 solution : [9, 2, 25]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 10, 39]
 solution : [9, 2, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 268435456), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {34, 31}

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25]


Before reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 2048), (34, 0), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25]


Solution : [9, 2, 25] has cost 16.


Decide in level 9 among pending : [38, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 9

After decision at level 9
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25, 38]


New level: 10
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25, 38]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 0), (40, 524288), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {39}

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 2, 25, 38]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 2, 25, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 0), (40, 524288), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 2, 25, 38]


Solution : [9, 2, 25, 38] has cost 34.


Before backtrack at level 10
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10]
 solution : [9, 2, 25, 38]

After backtrack at level 10
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25, 38]


Invert decision for 38 at level 9


New level: 10
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25]


Solution : [9, 2, 25] has cost 16.


Decide in level 10 among pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 10

After decision at level 10
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25, 17]


New level: 11
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25, 17]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 512), (40, 2048), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {0, 18, 19, 15}

After reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25, 17]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 512), (40, 2048), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 512), (40, 2048), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25, 17]


Solution : [9, 2, 25, 17] has cost 25.


Before backtrack at level 11
 pending : [27, 40, 16, 14, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39]
 solution : [9, 2, 25, 17]

After backtrack at level 11
 pending : [27, 40, 16, 14, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 17]


Invert decision for 17 at level 10


New level: 11
 pending : [27, 40, 16, 14, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 0, 19, 15, 18]
 solution : [9, 2, 25]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 0, 19, 15, 18]
 solution : [9, 2, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 512), (40, 2048), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 0, 19, 15, 18]
 solution : [9, 2, 25]


Solution : [9, 2, 25] has cost 16.


Decide in level 11 among pending : [27, 40, 16, 14, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 39, 0, 19, 15, 18]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 11

After decision at level 11
 pending : [27, 40, 16, 14, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 10, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 41]


New level: 12
 pending : [27, 40, 16, 14, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 10, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 41]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 10, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 65536), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 262144), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 36, 8, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 41]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 65536), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 262144), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 262144), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 41]


Solution : [9, 2, 25, 41] has cost 34.


Before backtrack at level 12
 pending : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 41]

After backtrack at level 12
 pending : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 2, 25, 41]


Invert decision for 41 at level 11


New level: 12
 pending : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 2, 25]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 2, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 262144), (20, -1), (21, -1), (22, -1), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 2, 25]


Solution : [9, 2, 25] has cost 16.


Decide in level 12 among pending : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46, 49]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 12

After decision at level 12
 pending : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25, 49]


New level: 13
 pending : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25, 49]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25, 49]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 2048), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {42, 43, 36, 46}

After reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45]
 solution : [9, 2, 25, 49]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45]
 solution : [9, 2, 25, 49]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 2048), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, 2048), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45]
 solution : [9, 2, 25, 49]


Solution : [9, 2, 25, 49] has cost 47.


Before backtrack at level 13
 pending : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45]
 solution : [9, 2, 25, 49]

After backtrack at level 13
 pending : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25, 49]


Invert decision for 49 at level 12


New level: 13
 pending : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2048), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, 2048), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25]


Solution : [9, 2, 25] has cost 16.


Decide in level 13 among pending : [27, 40, 16, 14, 13, 23, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 13

After decision at level 13
 pending : [27, 40, 16, 14, 13, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25, 23]


New level: 14
 pending : [27, 40, 16, 14, 13, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25, 23]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 10, 39, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, -1), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {33, 36, 8, 10, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 23]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 23]


Solution : [9, 2, 25, 23] has cost 23.


Before backtrack at level 14
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 23]

After backtrack at level 14
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25, 23]


Invert decision for 23 at level 13


New level: 14
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25]

Essensial at level 14 : {10}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {33, 36, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 10]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 10]


Solution : [9, 2, 25, 10] has cost 20.


Before backtrack at level 14
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18]
 solution : [9, 2, 25, 10]

After backtrack at level 14
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25]


Before backtrack at level 13
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 2, 25]

After backtrack at level 13
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23]
 solution : [9, 2, 25]


Before backtrack at level 12
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23]
 solution : [9, 2, 25]

After backtrack at level 12
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49]
 solution : [9, 2, 25]


Before backtrack at level 11
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49]
 solution : [9, 2, 25]

After backtrack at level 11
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41]
 solution : [9, 2, 25]


Before backtrack at level 10
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41]
 solution : [9, 2, 25]

After backtrack at level 10
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17]
 solution : [9, 2, 25]


Before backtrack at level 9
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17]
 solution : [9, 2, 25]

After backtrack at level 9
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2, 25]


Invert decision for 25 at level 8


New level: 9
 pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2]


Solution : [9, 2] has cost 9.


Decide in level 9 among pending : [27, 40, 16, 14, 13, 39, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 9

After decision at level 9
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2, 39]


New level: 10
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2, 39]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2, 39]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2, 39]


Solution : [9, 2, 39] has cost 23.


Before backtrack at level 10
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2, 39]

After backtrack at level 10
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2, 39]


Invert decision for 39 at level 9


New level: 10
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, -1), (33, 8192), (34, 4096), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2]


Solution : [9, 2] has cost 9.


Decide in level 10 among pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2, 10]


New level: 11
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2, 10]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 17, 31, 34, 38]
 solution : [9, 2, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 262144), (16, 131072), (17, 33554432), (18, 16777216), (19, 786432), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, -1), (33, 8192), (34, 8192), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 38]
 solution : [9, 2, 10]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 38]
 solution : [9, 2, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 38]
 solution : [9, 2, 10]


Solution : [9, 2, 10] has cost 13.


Decide in level 11 among pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 38]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 38]
 solution : [9, 2, 10, 17]


New level: 12
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 38]
 solution : [9, 2, 10, 17]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 38]
 solution : [9, 2, 10, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 18, 19, 15}

After reduction : 
 pending  : [27, 40, 16, 14, 13, 38]
 solution : [9, 2, 10, 17]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 38]
 solution : [9, 2, 10, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 38]
 solution : [9, 2, 10, 17]


Solution : [9, 2, 10, 17] has cost 22.


Before backtrack at level 12
 pending : [27, 40, 16, 14, 13, 38]
 solution : [9, 2, 10, 17]

After backtrack at level 12
 pending : [27, 40, 16, 14, 13, 38, 0, 19, 15, 18]
 solution : [9, 2, 10, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [27, 40, 16, 14, 13, 38, 0, 19, 15, 18]
 solution : [9, 2, 10]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 38, 0, 19, 15, 18]
 solution : [9, 2, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 38, 0, 19, 15, 18]
 solution : [9, 2, 10]


Solution : [9, 2, 10] has cost 13.


Decide in level 12 among pending : [27, 40, 16, 14, 13, 38, 0, 19, 15, 18]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [27, 40, 16, 14, 38, 0, 19, 15, 18]
 solution : [9, 2, 10, 13]


New level: 13
 pending : [27, 40, 16, 14, 38, 0, 19, 15, 18]
 solution : [9, 2, 10, 13]


Before reduction : 
 pending  : [27, 40, 16, 14, 38, 0, 19, 15, 18]
 solution : [9, 2, 10, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 2097152), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [27, 40, 38, 0, 19, 18]
 solution : [9, 2, 10, 13]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 18]
 solution : [9, 2, 10, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 2097152), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2097152), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 38, 0, 19, 18]
 solution : [9, 2, 10, 13]


Solution : [9, 2, 10, 13] has cost 20.


Before backtrack at level 13
 pending : [27, 40, 38, 0, 19, 18]
 solution : [9, 2, 10, 13]

After backtrack at level 13
 pending : [27, 40, 38, 0, 19, 18, 16, 14, 15]
 solution : [9, 2, 10, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [27, 40, 38, 0, 19, 18, 16, 14, 15]
 solution : [9, 2, 10]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 18, 16, 14, 15]
 solution : [9, 2, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2097152), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 38, 0, 19, 18, 16, 14, 15]
 solution : [9, 2, 10]


Solution : [9, 2, 10] has cost 13.


Decide in level 13 among pending : [27, 40, 38, 0, 19, 18, 16, 14, 15]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [27, 40, 38, 0, 19, 16, 14, 15]
 solution : [9, 2, 10, 18]


New level: 14
 pending : [27, 40, 38, 0, 19, 16, 14, 15]
 solution : [9, 2, 10, 18]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 16, 14, 15]
 solution : [9, 2, 10, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 19, 15}

After reduction : 
 pending  : [27, 40, 38, 16, 14]
 solution : [9, 2, 10, 18]


Before reduction : 
 pending  : [27, 40, 38, 16, 14]
 solution : [9, 2, 10, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 38, 16, 14]
 solution : [9, 2, 10, 18]


Solution : [9, 2, 10, 18] has cost 22.


Before backtrack at level 14
 pending : [27, 40, 38, 16, 14]
 solution : [9, 2, 10, 18]

After backtrack at level 14
 pending : [27, 40, 38, 16, 14, 0, 19, 15]
 solution : [9, 2, 10, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [27, 40, 38, 16, 14, 0, 19, 15]
 solution : [9, 2, 10]


Before reduction : 
 pending  : [27, 40, 38, 16, 14, 0, 19, 15]
 solution : [9, 2, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 38, 16, 14, 0, 19, 15]
 solution : [9, 2, 10]


Solution : [9, 2, 10] has cost 13.


Decide in level 14 among pending : [27, 40, 38, 16, 14, 0, 19, 15]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [27, 40, 38, 16, 0, 19, 15]
 solution : [9, 2, 10, 14]


New level: 15
 pending : [27, 40, 38, 16, 0, 19, 15]
 solution : [9, 2, 10, 14]


Before reduction : 
 pending  : [27, 40, 38, 16, 0, 19, 15]
 solution : [9, 2, 10, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 15}

After reduction : 
 pending  : [27, 40, 38, 0, 19]
 solution : [9, 2, 10, 14]


Before reduction : 
 pending  : [27, 40, 38, 0, 19]
 solution : [9, 2, 10, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 38, 0, 19]
 solution : [9, 2, 10, 14]


Solution : [9, 2, 10, 14] has cost 20.


Before backtrack at level 15
 pending : [27, 40, 38, 0, 19]
 solution : [9, 2, 10, 14]

After backtrack at level 15
 pending : [27, 40, 38, 0, 19, 16, 15]
 solution : [9, 2, 10, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [27, 40, 38, 0, 19, 16, 15]
 solution : [9, 2, 10]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 16, 15]
 solution : [9, 2, 10]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 38, 0, 19, 15]
 solution : [9, 2, 10, 16]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 15]
 solution : [9, 2, 10, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 38, 0, 19, 15]
 solution : [9, 2, 10, 16]


Solution : [9, 2, 10, 16] has cost 20.


Before backtrack at level 15
 pending : [27, 40, 38, 0, 19, 15]
 solution : [9, 2, 10, 16]

After backtrack at level 15
 pending : [27, 40, 38, 0, 19, 15, 16]
 solution : [9, 2, 10]


Before backtrack at level 14
 pending : [27, 40, 38, 0, 19, 15, 16]
 solution : [9, 2, 10]

After backtrack at level 14
 pending : [27, 40, 38, 0, 19, 15, 16, 14]
 solution : [9, 2, 10]


Before backtrack at level 13
 pending : [27, 40, 38, 0, 19, 15, 16, 14]
 solution : [9, 2, 10]

After backtrack at level 13
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18]
 solution : [9, 2, 10]


Before backtrack at level 12
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18]
 solution : [9, 2, 10]

After backtrack at level 12
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 2, 10]


Before backtrack at level 11
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 2, 10]

After backtrack at level 11
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 31, 34, 17]
 solution : [9, 2, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 31, 34, 17]
 solution : [9, 2]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 31, 34, 17]
 solution : [9, 2]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 23]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 2, 23]


Solution : [9, 2, 23] has cost 16.


Decide in level 11 among pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 2, 23, 17]


New level: 12
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 2, 23, 17]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 2, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, 16777216), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 18, 19, 15}

After reduction : 
 pending  : [27, 40, 38, 16, 14, 13]
 solution : [9, 2, 23, 17]


Before reduction : 
 pending  : [27, 40, 38, 16, 14, 13]
 solution : [9, 2, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 40, 38, 16, 14, 13]
 solution : [9, 2, 23, 17]


Solution : [9, 2, 23, 17] has cost 25.


Before backtrack at level 12
 pending : [27, 40, 38, 16, 14, 13]
 solution : [9, 2, 23, 17]

After backtrack at level 12
 pending : [27, 40, 38, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 2, 23, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [27, 40, 38, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 2, 23]


Before reduction : 
 pending  : [27, 40, 38, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 2, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 40, 38, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 2, 23]


Solution : [9, 2, 23] has cost 16.


Decide in level 12 among pending : [27, 40, 38, 16, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [27, 40, 38, 16, 14, 0, 19, 15, 18]
 solution : [9, 2, 23, 13]


New level: 13
 pending : [27, 40, 38, 16, 14, 0, 19, 15, 18]
 solution : [9, 2, 23, 13]


Before reduction : 
 pending  : [27, 40, 38, 16, 14, 0, 19, 15, 18]
 solution : [9, 2, 23, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 2097152), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [27, 40, 38, 0, 19, 18]
 solution : [9, 2, 23, 13]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 18]
 solution : [9, 2, 23, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 2097152), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2097152), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 38, 0, 19, 18]
 solution : [9, 2, 23, 13]


Solution : [9, 2, 23, 13] has cost 23.


Before backtrack at level 13
 pending : [27, 40, 38, 0, 19, 18]
 solution : [9, 2, 23, 13]

After backtrack at level 13
 pending : [27, 40, 38, 0, 19, 18, 16, 14, 15]
 solution : [9, 2, 23, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [27, 40, 38, 0, 19, 18, 16, 14, 15]
 solution : [9, 2, 23]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 18, 16, 14, 15]
 solution : [9, 2, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2097152), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 38, 0, 19, 18, 16, 14, 15]
 solution : [9, 2, 23]


Solution : [9, 2, 23] has cost 16.


Decide in level 13 among pending : [27, 40, 38, 0, 19, 18, 16, 14, 15]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [27, 40, 38, 0, 19, 16, 14, 15]
 solution : [9, 2, 23, 18]


New level: 14
 pending : [27, 40, 38, 0, 19, 16, 14, 15]
 solution : [9, 2, 23, 18]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 16, 14, 15]
 solution : [9, 2, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, 8388608), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 19, 15}

After reduction : 
 pending  : [27, 40, 38, 16, 14]
 solution : [9, 2, 23, 18]


Before reduction : 
 pending  : [27, 40, 38, 16, 14]
 solution : [9, 2, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 0), (16, 32768), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 38, 16, 14]
 solution : [9, 2, 23, 18]


Solution : [9, 2, 23, 18] has cost 25.


Before backtrack at level 14
 pending : [27, 40, 38, 16, 14]
 solution : [9, 2, 23, 18]

After backtrack at level 14
 pending : [27, 40, 38, 16, 14, 0, 19, 15]
 solution : [9, 2, 23, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [27, 40, 38, 16, 14, 0, 19, 15]
 solution : [9, 2, 23]


Before reduction : 
 pending  : [27, 40, 38, 16, 14, 0, 19, 15]
 solution : [9, 2, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 38, 16, 14, 0, 19, 15]
 solution : [9, 2, 23]


Solution : [9, 2, 23] has cost 16.


Decide in level 14 among pending : [27, 40, 38, 16, 14, 0, 19, 15]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [27, 40, 38, 16, 0, 19, 15]
 solution : [9, 2, 23, 14]


New level: 15
 pending : [27, 40, 38, 16, 0, 19, 15]
 solution : [9, 2, 23, 14]


Before reduction : 
 pending  : [27, 40, 38, 16, 0, 19, 15]
 solution : [9, 2, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 131072), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 15}

After reduction : 
 pending  : [27, 40, 38, 0, 19]
 solution : [9, 2, 23, 14]


Before reduction : 
 pending  : [27, 40, 38, 0, 19]
 solution : [9, 2, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 38, 0, 19]
 solution : [9, 2, 23, 14]


Solution : [9, 2, 23, 14] has cost 23.


Before backtrack at level 15
 pending : [27, 40, 38, 0, 19]
 solution : [9, 2, 23, 14]

After backtrack at level 15
 pending : [27, 40, 38, 0, 19, 16, 15]
 solution : [9, 2, 23, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [27, 40, 38, 0, 19, 16, 15]
 solution : [9, 2, 23]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 16, 15]
 solution : [9, 2, 23]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 38, 0, 19, 15]
 solution : [9, 2, 23, 16]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 15]
 solution : [9, 2, 23, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 38, 0, 19, 15]
 solution : [9, 2, 23, 16]


Solution : [9, 2, 23, 16] has cost 23.


Before backtrack at level 15
 pending : [27, 40, 38, 0, 19, 15]
 solution : [9, 2, 23, 16]

After backtrack at level 15
 pending : [27, 40, 38, 0, 19, 15, 16]
 solution : [9, 2, 23]


Before backtrack at level 14
 pending : [27, 40, 38, 0, 19, 15, 16]
 solution : [9, 2, 23]

After backtrack at level 14
 pending : [27, 40, 38, 0, 19, 15, 16, 14]
 solution : [9, 2, 23]


Before backtrack at level 13
 pending : [27, 40, 38, 0, 19, 15, 16, 14]
 solution : [9, 2, 23]

After backtrack at level 13
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18]
 solution : [9, 2, 23]


Before backtrack at level 12
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18]
 solution : [9, 2, 23]

After backtrack at level 12
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 2, 23]


Before backtrack at level 11
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 2, 23]

After backtrack at level 11
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17]
 solution : [9, 2]


Before backtrack at level 10
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17]
 solution : [9, 2]

After backtrack at level 10
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10]
 solution : [9, 2]


Before backtrack at level 9
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10]
 solution : [9, 2]

After backtrack at level 9
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39]
 solution : [9, 2]


Before backtrack at level 8
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39]
 solution : [9, 2]

After backtrack at level 8
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25]
 solution : [9, 2]


Before backtrack at level 7
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25]
 solution : [9, 2]

After backtrack at level 7
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 26]
 solution : [9, 2]


Before backtrack at level 6
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 26]
 solution : [9, 2]

After backtrack at level 6
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 26, 22]
 solution : [9, 2]


Before backtrack at level 5
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 26, 22]
 solution : [9, 2]

After backtrack at level 5
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 26, 22, 32]
 solution : [9, 2]


Before backtrack at level 4
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 26, 22, 32]
 solution : [9, 2]

After backtrack at level 4
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 26, 22, 32, 21]
 solution : [9, 2]


Before backtrack at level 3
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 26, 22, 32, 21]
 solution : [9, 2]

After backtrack at level 3
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 26, 22, 32, 21, 28]
 solution : [9, 2]


Invert decision for 2 at level 2


New level: 3
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 26, 22, 32, 21, 28]
 solution : [9]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 26, 22, 32, 21, 28]
 solution : [9]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 26, 22, 32, 21, 28]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 3 among pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 26, 22, 32, 21, 28]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 22, 32, 21, 28]
 solution : [9, 26]


New level: 4
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 22, 32, 21, 28]
 solution : [9, 26]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 22, 32, 21, 28]
 solution : [9, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 22, 32, 21, 28]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 4 among pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 22, 32, 21, 28]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 22, 32, 21]
 solution : [9, 26, 28]


New level: 5
 pending : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 22, 32, 21]
 solution : [9, 26, 28]


Before reduction : 
 pending  : [27, 40, 38, 0, 19, 15, 16, 14, 18, 13, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 10, 39, 25, 22, 32, 21]
 solution : [9, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 10, 39, 25, 32]
 solution : [9, 26, 28]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 10, 39, 25, 32]
 solution : [9, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 10, 39, 25, 32]
 solution : [9, 26, 28]


Solution : [9, 26, 28] has cost 14.


Decide in level 5 among pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 10, 39, 25, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 10, 39, 25]
 solution : [9, 26, 28, 32]


New level: 6
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 10, 39, 25]
 solution : [9, 26, 28, 32]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 10, 39, 25]
 solution : [9, 26, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {34, 39, 31}

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25]
 solution : [9, 26, 28, 32]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25]
 solution : [9, 26, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25]
 solution : [9, 26, 28, 32]


Solution : [9, 26, 28, 32] has cost 27.


Before backtrack at level 6
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25]
 solution : [9, 26, 28, 32]

After backtrack at level 6
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 31, 34, 39]
 solution : [9, 26, 28, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 31, 34, 39]
 solution : [9, 26, 28]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 31, 34, 39]
 solution : [9, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 31, 34, 39]
 solution : [9, 26, 28]


Solution : [9, 26, 28] has cost 14.


Decide in level 6 among pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 28, 25]


New level: 7
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 28, 25]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 39, 31}

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 26, 28, 25]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 26, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 26, 28, 25]


Solution : [9, 26, 28, 25] has cost 21.


Before backtrack at level 7
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 26, 28, 25]

After backtrack at level 7
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 28, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 28]


Before reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 28]


Solution : [9, 26, 28] has cost 14.


Decide in level 7 among pending : [38, 23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 28, 23]


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 28, 23]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 26, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 26, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 26, 28, 23]


Solution : [9, 26, 28, 23] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [9, 26, 28, 23]

After backtrack at level 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 28, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 28]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 28]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 26, 28, 10]


Before reduction : 
 pending  : []
 solution : [9, 26, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 26, 28, 10]


Solution : [9, 26, 28, 10] has cost 18.


Before backtrack at level 8
 pending : []
 solution : [9, 26, 28, 10]

After backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39]
 solution : [9, 26, 28]


Before backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39]
 solution : [9, 26, 28]

After backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23]
 solution : [9, 26, 28]


Before backtrack at level 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23]
 solution : [9, 26, 28]

After backtrack at level 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25]
 solution : [9, 26, 28]


Before backtrack at level 5
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25]
 solution : [9, 26, 28]

After backtrack at level 5
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9, 26, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9, 26]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 5 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 5

After decision at level 5
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 26, 21]


New level: 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 26, 21]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 26, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 32]
 solution : [9, 26, 21]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 32]
 solution : [9, 26, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 32]
 solution : [9, 26, 21]


Solution : [9, 26, 21] has cost 17.


Decide in level 6 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25]
 solution : [9, 26, 21, 32]


New level: 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25]
 solution : [9, 26, 21, 32]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25]
 solution : [9, 26, 21, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 39, 31}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25]
 solution : [9, 26, 21, 32]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25]
 solution : [9, 26, 21, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25]
 solution : [9, 26, 21, 32]


Solution : [9, 26, 21, 32] has cost 30.


Before backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25]
 solution : [9, 26, 21, 32]

After backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 31, 34, 39]
 solution : [9, 26, 21, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 31, 34, 39]
 solution : [9, 26, 21]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 31, 34, 39]
 solution : [9, 26, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 31, 34, 39]
 solution : [9, 26, 21]


Solution : [9, 26, 21] has cost 17.


Decide in level 7 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 7

After decision at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]
 solution : [9, 26, 21, 25]


New level: 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]
 solution : [9, 26, 21, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]
 solution : [9, 26, 21, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 39, 31}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 26, 21, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 26, 21, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 26, 21, 25]


Solution : [9, 26, 21, 25] has cost 24.


Before backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23]
 solution : [9, 26, 21, 25]

After backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]
 solution : [9, 26, 21, 25]


Invert decision for 25 at level 7


New level: 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]
 solution : [9, 26, 21]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]
 solution : [9, 26, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]
 solution : [9, 26, 21]


Solution : [9, 26, 21] has cost 17.


Decide in level 8 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 8

After decision at level 8
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]
 solution : [9, 26, 21, 10]


New level: 9
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]
 solution : [9, 26, 21, 10]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]
 solution : [9, 26, 21, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 26, 21, 10]


Before reduction : 
 pending  : []
 solution : [9, 26, 21, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 26, 21, 10]


Solution : [9, 26, 21, 10] has cost 21.


Before backtrack at level 9
 pending : []
 solution : [9, 26, 21, 10]

After backtrack at level 9
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]
 solution : [9, 26, 21, 10]


Invert decision for 10 at level 8


New level: 9
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]
 solution : [9, 26, 21]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 31, 34, 39]
 solution : [9, 26, 21]

Essensial at level 9 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 26, 21, 23]


Before reduction : 
 pending  : []
 solution : [9, 26, 21, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 26, 21, 23]


Solution : [9, 26, 21, 23] has cost 24.


Before backtrack at level 9
 pending : []
 solution : [9, 26, 21, 23]

After backtrack at level 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39]
 solution : [9, 26, 21]


Before backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39]
 solution : [9, 26, 21]

After backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10]
 solution : [9, 26, 21]


Before backtrack at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10]
 solution : [9, 26, 21]

After backtrack at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25]
 solution : [9, 26, 21]


Before backtrack at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25]
 solution : [9, 26, 21]

After backtrack at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 26, 21]


Invert decision for 21 at level 5


New level: 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 26]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 6 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 22 with phase True at level 6

After decision at level 6
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 32]
 solution : [9, 26, 22]


New level: 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 32]
 solution : [9, 26, 22]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 32]
 solution : [9, 26, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 27}

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25, 32]
 solution : [9, 26, 22]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25, 32]
 solution : [9, 26, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25, 32]
 solution : [9, 26, 22]


Solution : [9, 26, 22] has cost 17.


Decide in level 7 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 7

After decision at level 7
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25]
 solution : [9, 26, 22, 32]


New level: 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25]
 solution : [9, 26, 22, 32]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 10, 25]
 solution : [9, 26, 22, 32]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 1073741824), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 39, 31}

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25]
 solution : [9, 26, 22, 32]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25]
 solution : [9, 26, 22, 32]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25]
 solution : [9, 26, 22, 32]


Solution : [9, 26, 22, 32] has cost 30.


Before backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25]
 solution : [9, 26, 22, 32]

After backtrack at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 31, 34, 39]
 solution : [9, 26, 22, 32]


Invert decision for 32 at level 7


New level: 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 31, 34, 39]
 solution : [9, 26, 22]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 31, 34, 39]
 solution : [9, 26, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 31, 34, 39]
 solution : [9, 26, 22]


Solution : [9, 26, 22] has cost 17.


Decide in level 8 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 25, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 8

After decision at level 8
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 22, 25]


New level: 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 22, 25]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 22, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {34, 39, 31}

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 26, 22, 25]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 26, 22, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 26, 22, 25]


Solution : [9, 26, 22, 25] has cost 24.


Before backtrack at level 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10]
 solution : [9, 26, 22, 25]

After backtrack at level 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 22, 25]


Invert decision for 25 at level 8


New level: 9
 pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 22]


Before reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 22]


Solution : [9, 26, 22] has cost 17.


Decide in level 9 among pending : [23, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 9

After decision at level 9
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 22, 23]


New level: 10
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 22, 23]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 22, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 26, 22, 23]


Before reduction : 
 pending  : []
 solution : [9, 26, 22, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 26, 22, 23]


Solution : [9, 26, 22, 23] has cost 24.


Before backtrack at level 10
 pending : []
 solution : [9, 26, 22, 23]

After backtrack at level 10
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 22, 23]


Invert decision for 23 at level 9


New level: 10
 pending : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 22]


Before reduction : 
 pending  : [38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 10, 31, 34, 39]
 solution : [9, 26, 22]

Essensial at level 10 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 26, 22, 10]


Before reduction : 
 pending  : []
 solution : [9, 26, 22, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 26, 22, 10]


Solution : [9, 26, 22, 10] has cost 21.


Before backtrack at level 10
 pending : []
 solution : [9, 26, 22, 10]

After backtrack at level 10
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39]
 solution : [9, 26, 22]


Before backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39]
 solution : [9, 26, 22]

After backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23]
 solution : [9, 26, 22]


Before backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23]
 solution : [9, 26, 22]

After backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25]
 solution : [9, 26, 22]


Before backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25]
 solution : [9, 26, 22]

After backtrack at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 32]
 solution : [9, 26, 22]


Invert decision for 22 at level 6


New level: 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 32]
 solution : [9, 26]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 32]
 solution : [9, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 32]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 7 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 32]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 7

After decision at level 7
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 32]


New level: 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 32]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 32]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 1073741824), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 16384), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 16384), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 31}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 32]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 32]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 16384), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 16384), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 16384), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 16384), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 32]


Solution : [9, 26, 32] has cost 23.


Before backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 32]

After backtrack at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26, 32]


Invert decision for 32 at level 7


New level: 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 16384), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 16384), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 8 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26, 39]


New level: 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26, 39]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 268435456), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 1048576), (32, -1), (33, 16384), (34, 8192), (35, -1), (36, 16384), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26, 39]


Solution : [9, 26, 39] has cost 24.


Before backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26, 39]

After backtrack at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 268435456), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 1048576), (32, -1), (33, 16384), (34, 8192), (35, -1), (36, 16384), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 9 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26, 25]


New level: 10
 pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 31, 34]
 solution : [9, 26, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {34, 31}

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25]


Before reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25]


Solution : [9, 26, 25] has cost 17.


Decide in level 10 among pending : [10, 38, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 38]


New level: 11
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 38]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 8388608), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 8388608), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 67108864), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 38]


Solution : [9, 26, 25, 38] has cost 35.


Before backtrack at level 11
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 38]

After backtrack at level 11
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 8388608), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 8388608), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 67108864), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25]


Solution : [9, 26, 25] has cost 17.


Decide in level 11 among pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 11

After decision at level 11
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 49]


New level: 12
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 49]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 49]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 0), (43, 0), (44, -1), (45, 4096), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {42, 43, 36, 46}

After reduction : 
 pending  : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 49]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 49]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 0), (43, 0), (44, -1), (45, 4096), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, -1), (43, -1), (44, -1), (45, 4096), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 49]


Solution : [9, 26, 25, 49] has cost 48.


Before backtrack at level 12
 pending : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 49]

After backtrack at level 12
 pending : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 26, 25, 49]


Invert decision for 49 at level 11


New level: 12
 pending : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 26, 25]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 26, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, -1), (43, -1), (44, -1), (45, 4096), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 26, 25]


Solution : [9, 26, 25] has cost 17.


Decide in level 12 among pending : [10, 8, 30, 33, 45, 41, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 36, 42, 43, 46]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 12

After decision at level 12
 pending : [10, 8, 30, 33, 45, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 26, 25, 41]


New level: 13
 pending : [10, 8, 30, 33, 45, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 26, 25, 41]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 36, 42, 43, 46]
 solution : [9, 26, 25, 41]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {33, 36, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 41]


Before reduction : 
 pending  : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 41]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 41]


Solution : [9, 26, 25, 41] has cost 35.


Before backtrack at level 13
 pending : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 25, 41]

After backtrack at level 13
 pending : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25, 41]


Invert decision for 41 at level 12


New level: 13
 pending : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25]


Before reduction : 
 pending  : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25]


Solution : [9, 26, 25] has cost 17.


Decide in level 13 among pending : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25, 17]


New level: 14
 pending : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25, 17]


Before reduction : 
 pending  : [10, 23, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 18, 19, 15}

After reduction : 
 pending  : [10, 23, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25, 17]


Before reduction : 
 pending  : [10, 23, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 23, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25, 17]


Solution : [9, 26, 25, 17] has cost 26.


Before backtrack at level 14
 pending : [10, 23, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25, 17]

After backtrack at level 14
 pending : [10, 23, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 0, 19, 15, 18]
 solution : [9, 26, 25, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [10, 23, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 0, 19, 15, 18]
 solution : [9, 26, 25]


Before reduction : 
 pending  : [10, 23, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 0, 19, 15, 18]
 solution : [9, 26, 25]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, -1), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 23, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 0, 19, 15, 18]
 solution : [9, 26, 25]


Solution : [9, 26, 25] has cost 17.


Decide in level 14 among pending : [10, 23, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 0, 19, 15, 18]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, -1), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 14

After decision at level 14
 pending : [23, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 0, 19, 15, 18]
 solution : [9, 26, 25, 10]


New level: 15
 pending : [23, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 0, 19, 15, 18]
 solution : [9, 26, 25, 10]


Before reduction : 
 pending  : [23, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 0, 19, 15, 18]
 solution : [9, 26, 25, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, -1), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {33, 36, 8, 42, 43, 45, 46, 23, 30}

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 25, 10]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 25, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 25, 10]


Solution : [9, 26, 25, 10] has cost 21.


Before backtrack at level 15
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 25, 10]

After backtrack at level 15
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25, 10]


Invert decision for 10 at level 14


New level: 15
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25]

Essensial at level 15 : {23}

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {33, 36, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 25, 23]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 25, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 25, 23]


Solution : [9, 26, 25, 23] has cost 24.


Before backtrack at level 15
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 25, 23]

After backtrack at level 15
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25]


Before backtrack at level 14
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 26, 25]

After backtrack at level 14
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10]
 solution : [9, 26, 25]


Before backtrack at level 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10]
 solution : [9, 26, 25]

After backtrack at level 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17]
 solution : [9, 26, 25]


Before backtrack at level 12
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17]
 solution : [9, 26, 25]

After backtrack at level 12
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41]
 solution : [9, 26, 25]


Before backtrack at level 11
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41]
 solution : [9, 26, 25]

After backtrack at level 11
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49]
 solution : [9, 26, 25]


Before backtrack at level 10
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49]
 solution : [9, 26, 25]

After backtrack at level 10
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34, 38]
 solution : [9, 26, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34, 38]
 solution : [9, 26]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34, 38]
 solution : [9, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34, 38]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 10 among pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34, 38]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34]
 solution : [9, 26, 38]


New level: 11
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34]
 solution : [9, 26, 38]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34]
 solution : [9, 26, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34]
 solution : [9, 26, 38]


Solution : [9, 26, 38] has cost 28.


Before backtrack at level 11
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34]
 solution : [9, 26, 38]

After backtrack at level 11
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34]
 solution : [9, 26, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34]
 solution : [9, 26]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34]
 solution : [9, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, 2097152), (32, -1), (33, 4096), (34, 4096), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 11 among pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 23, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 11

After decision at level 11
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34]
 solution : [9, 26, 23]


New level: 12
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34]
 solution : [9, 26, 23]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 8, 30, 33, 45, 36, 42, 43, 46, 10, 17, 41, 49, 31, 34]
 solution : [9, 26, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 34, 36, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 17]
 solution : [9, 26, 23]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 17]
 solution : [9, 26, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 17]
 solution : [9, 26, 23]


Solution : [9, 26, 23] has cost 17.


Decide in level 12 among pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 17]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 23, 17]


New level: 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 23, 17]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 23, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 18, 19, 15}

After reduction : 
 pending  : [27, 40, 16, 14, 13]
 solution : [9, 26, 23, 17]


Before reduction : 
 pending  : [27, 40, 16, 14, 13]
 solution : [9, 26, 23, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13]
 solution : [9, 26, 23, 17]


Solution : [9, 26, 23, 17] has cost 26.


Before backtrack at level 13
 pending : [27, 40, 16, 14, 13]
 solution : [9, 26, 23, 17]

After backtrack at level 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 23, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 23]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 23]


Solution : [9, 26, 23] has cost 17.


Decide in level 13 among pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 26, 23, 13]


New level: 14
 pending : [27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 26, 23, 13]


Before reduction : 
 pending  : [27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 26, 23, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 14, 15}

After reduction : 
 pending  : [27, 40, 0, 19, 18]
 solution : [9, 26, 23, 13]


Before reduction : 
 pending  : [27, 40, 0, 19, 18]
 solution : [9, 26, 23, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 18]
 solution : [9, 26, 23, 13]


Solution : [9, 26, 23, 13] has cost 24.


Before backtrack at level 14
 pending : [27, 40, 0, 19, 18]
 solution : [9, 26, 23, 13]

After backtrack at level 14
 pending : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 26, 23, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 26, 23]


Before reduction : 
 pending  : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 26, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 26, 23]


Solution : [9, 26, 23] has cost 17.


Decide in level 14 among pending : [27, 40, 0, 19, 18, 16, 14, 15]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 14

After decision at level 14
 pending : [27, 40, 0, 19, 16, 14, 15]
 solution : [9, 26, 23, 18]


New level: 15
 pending : [27, 40, 0, 19, 16, 14, 15]
 solution : [9, 26, 23, 18]


Before reduction : 
 pending  : [27, 40, 0, 19, 16, 14, 15]
 solution : [9, 26, 23, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {0, 19, 15}

After reduction : 
 pending  : [27, 40, 16, 14]
 solution : [9, 26, 23, 18]


Before reduction : 
 pending  : [27, 40, 16, 14]
 solution : [9, 26, 23, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 16, 14]
 solution : [9, 26, 23, 18]


Solution : [9, 26, 23, 18] has cost 26.


Before backtrack at level 15
 pending : [27, 40, 16, 14]
 solution : [9, 26, 23, 18]

After backtrack at level 15
 pending : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 26, 23, 18]


Invert decision for 18 at level 14


New level: 15
 pending : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 26, 23]


Before reduction : 
 pending  : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 26, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 26, 23]


Solution : [9, 26, 23] has cost 17.


Decide in level 15 among pending : [27, 40, 16, 14, 0, 19, 15]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 15

After decision at level 15
 pending : [27, 40, 16, 0, 19, 15]
 solution : [9, 26, 23, 14]


New level: 16
 pending : [27, 40, 16, 0, 19, 15]
 solution : [9, 26, 23, 14]


Before reduction : 
 pending  : [27, 40, 16, 0, 19, 15]
 solution : [9, 26, 23, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 15}

After reduction : 
 pending  : [27, 40, 0, 19]
 solution : [9, 26, 23, 14]


Before reduction : 
 pending  : [27, 40, 0, 19]
 solution : [9, 26, 23, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 40, 0, 19]
 solution : [9, 26, 23, 14]


Solution : [9, 26, 23, 14] has cost 24.


Before backtrack at level 16
 pending : [27, 40, 0, 19]
 solution : [9, 26, 23, 14]

After backtrack at level 16
 pending : [27, 40, 0, 19, 16, 15]
 solution : [9, 26, 23, 14]


Invert decision for 14 at level 15


New level: 16
 pending : [27, 40, 0, 19, 16, 15]
 solution : [9, 26, 23]


Before reduction : 
 pending  : [27, 40, 0, 19, 16, 15]
 solution : [9, 26, 23]

Essensial at level 16 : {16}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15]
 solution : [9, 26, 23, 16]


Before reduction : 
 pending  : [27, 40, 0, 19, 15]
 solution : [9, 26, 23, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15]
 solution : [9, 26, 23, 16]


Solution : [9, 26, 23, 16] has cost 24.


Before backtrack at level 16
 pending : [27, 40, 0, 19, 15]
 solution : [9, 26, 23, 16]

After backtrack at level 16
 pending : [27, 40, 0, 19, 15, 16]
 solution : [9, 26, 23]


Before backtrack at level 15
 pending : [27, 40, 0, 19, 15, 16]
 solution : [9, 26, 23]

After backtrack at level 15
 pending : [27, 40, 0, 19, 15, 16, 14]
 solution : [9, 26, 23]


Before backtrack at level 14
 pending : [27, 40, 0, 19, 15, 16, 14]
 solution : [9, 26, 23]

After backtrack at level 14
 pending : [27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 26, 23]


Before backtrack at level 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 26, 23]

After backtrack at level 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 26, 23]


Before backtrack at level 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 26, 23]

After backtrack at level 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 31, 34, 17]
 solution : [9, 26, 23]


Invert decision for 23 at level 11


New level: 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 31, 34, 17]
 solution : [9, 26]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 10, 41, 49, 31, 34, 17]
 solution : [9, 26]

Essensial at level 12 : {10}

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 34, 36, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 10]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 26, 10]


Solution : [9, 26, 10] has cost 14.


Decide in level 12 among pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 26, 10, 17]


New level: 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 26, 10, 17]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 26, 10, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 18, 19, 15}

After reduction : 
 pending  : [27, 40, 16, 14, 13]
 solution : [9, 26, 10, 17]


Before reduction : 
 pending  : [27, 40, 16, 14, 13]
 solution : [9, 26, 10, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13]
 solution : [9, 26, 10, 17]


Solution : [9, 26, 10, 17] has cost 23.


Before backtrack at level 13
 pending : [27, 40, 16, 14, 13]
 solution : [9, 26, 10, 17]

After backtrack at level 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 10, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 10]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 26, 10]


Solution : [9, 26, 10] has cost 14.


Decide in level 13 among pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 26, 10, 13]


New level: 14
 pending : [27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 26, 10, 13]


Before reduction : 
 pending  : [27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 26, 10, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 14, 15}

After reduction : 
 pending  : [27, 40, 0, 19, 18]
 solution : [9, 26, 10, 13]


Before reduction : 
 pending  : [27, 40, 0, 19, 18]
 solution : [9, 26, 10, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 18]
 solution : [9, 26, 10, 13]


Solution : [9, 26, 10, 13] has cost 21.


Before backtrack at level 14
 pending : [27, 40, 0, 19, 18]
 solution : [9, 26, 10, 13]

After backtrack at level 14
 pending : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 26, 10, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 26, 10]


Before reduction : 
 pending  : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 26, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 26, 10]


Solution : [9, 26, 10] has cost 14.


Decide in level 14 among pending : [27, 40, 0, 19, 18, 16, 14, 15]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 14

After decision at level 14
 pending : [27, 40, 0, 19, 16, 14, 15]
 solution : [9, 26, 10, 18]


New level: 15
 pending : [27, 40, 0, 19, 16, 14, 15]
 solution : [9, 26, 10, 18]


Before reduction : 
 pending  : [27, 40, 0, 19, 16, 14, 15]
 solution : [9, 26, 10, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {0, 19, 15}

After reduction : 
 pending  : [27, 40, 16, 14]
 solution : [9, 26, 10, 18]


Before reduction : 
 pending  : [27, 40, 16, 14]
 solution : [9, 26, 10, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 16, 14]
 solution : [9, 26, 10, 18]


Solution : [9, 26, 10, 18] has cost 23.


Before backtrack at level 15
 pending : [27, 40, 16, 14]
 solution : [9, 26, 10, 18]

After backtrack at level 15
 pending : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 26, 10, 18]


Invert decision for 18 at level 14


New level: 15
 pending : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 26, 10]


Before reduction : 
 pending  : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 26, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 26, 10]


Solution : [9, 26, 10] has cost 14.


Decide in level 15 among pending : [27, 40, 16, 14, 0, 19, 15]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 15

After decision at level 15
 pending : [27, 40, 16, 0, 19, 15]
 solution : [9, 26, 10, 14]


New level: 16
 pending : [27, 40, 16, 0, 19, 15]
 solution : [9, 26, 10, 14]


Before reduction : 
 pending  : [27, 40, 16, 0, 19, 15]
 solution : [9, 26, 10, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 15}

After reduction : 
 pending  : [27, 40, 0, 19]
 solution : [9, 26, 10, 14]


Before reduction : 
 pending  : [27, 40, 0, 19]
 solution : [9, 26, 10, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 40, 0, 19]
 solution : [9, 26, 10, 14]


Solution : [9, 26, 10, 14] has cost 21.


Before backtrack at level 16
 pending : [27, 40, 0, 19]
 solution : [9, 26, 10, 14]

After backtrack at level 16
 pending : [27, 40, 0, 19, 16, 15]
 solution : [9, 26, 10, 14]


Invert decision for 14 at level 15


New level: 16
 pending : [27, 40, 0, 19, 16, 15]
 solution : [9, 26, 10]


Before reduction : 
 pending  : [27, 40, 0, 19, 16, 15]
 solution : [9, 26, 10]

Essensial at level 16 : {16}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15]
 solution : [9, 26, 10, 16]


Before reduction : 
 pending  : [27, 40, 0, 19, 15]
 solution : [9, 26, 10, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15]
 solution : [9, 26, 10, 16]


Solution : [9, 26, 10, 16] has cost 21.


Before backtrack at level 16
 pending : [27, 40, 0, 19, 15]
 solution : [9, 26, 10, 16]

After backtrack at level 16
 pending : [27, 40, 0, 19, 15, 16]
 solution : [9, 26, 10]


Before backtrack at level 15
 pending : [27, 40, 0, 19, 15, 16]
 solution : [9, 26, 10]

After backtrack at level 15
 pending : [27, 40, 0, 19, 15, 16, 14]
 solution : [9, 26, 10]


Before backtrack at level 14
 pending : [27, 40, 0, 19, 15, 16, 14]
 solution : [9, 26, 10]

After backtrack at level 14
 pending : [27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 26, 10]


Before backtrack at level 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 26, 10]

After backtrack at level 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 26, 10]


Before backtrack at level 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 26, 10]

After backtrack at level 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17]
 solution : [9, 26]


Before backtrack at level 11
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17]
 solution : [9, 26]

After backtrack at level 11
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23]
 solution : [9, 26]


Before backtrack at level 10
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23]
 solution : [9, 26]

After backtrack at level 10
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38]
 solution : [9, 26]


Before backtrack at level 9
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38]
 solution : [9, 26]

After backtrack at level 9
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25]
 solution : [9, 26]


Before backtrack at level 8
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25]
 solution : [9, 26]

After backtrack at level 8
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39]
 solution : [9, 26]


Before backtrack at level 7
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39]
 solution : [9, 26]

After backtrack at level 7
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32]
 solution : [9, 26]


Before backtrack at level 6
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32]
 solution : [9, 26]

After backtrack at level 6
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32, 22]
 solution : [9, 26]


Before backtrack at level 5
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32, 22]
 solution : [9, 26]

After backtrack at level 5
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32, 22, 21]
 solution : [9, 26]


Before backtrack at level 4
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32, 22, 21]
 solution : [9, 26]

After backtrack at level 4
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32, 22, 21, 28]
 solution : [9, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32, 22, 21, 28]
 solution : [9]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32, 22, 21, 28]
 solution : [9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32, 22, 21, 28]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 4 among pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32, 22, 21, 28]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32, 22, 21]
 solution : [9, 28]


New level: 5
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32, 22, 21]
 solution : [9, 28]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 17, 23, 38, 25, 39, 32, 22, 21]
 solution : [9, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 2147483648), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 38, 25, 39, 32]
 solution : [9, 28]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 38, 25, 39, 32]
 solution : [9, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 2147483648), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 2147483648), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 38, 25, 39, 32]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 5 among pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 38, 25, 39, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 2147483648), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 38, 25, 39]
 solution : [9, 28, 32]


New level: 6
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 38, 25, 39]
 solution : [9, 28, 32]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 31, 34, 23, 38, 25, 39]
 solution : [9, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 2147483648), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {34, 39, 31}

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38, 25]
 solution : [9, 28, 32]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38, 25]
 solution : [9, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38, 25]
 solution : [9, 28, 32]


Solution : [9, 28, 32] has cost 23.


Before backtrack at level 6
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38, 25]
 solution : [9, 28, 32]

After backtrack at level 6
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38, 25, 31, 34, 39]
 solution : [9, 28, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38, 25, 31, 34, 39]
 solution : [9, 28]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38, 25, 31, 34, 39]
 solution : [9, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38, 25, 31, 34, 39]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 6 among pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38, 25, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38, 31, 34, 39]
 solution : [9, 28, 25]


New level: 7
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38, 31, 34, 39]
 solution : [9, 28, 25]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38, 31, 34, 39]
 solution : [9, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 39, 31}

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38]
 solution : [9, 28, 25]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38]
 solution : [9, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38]
 solution : [9, 28, 25]


Solution : [9, 28, 25] has cost 17.


Decide in level 7 among pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38]
 solution : [9, 28, 25, 10]


New level: 8
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38]
 solution : [9, 28, 25, 10]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38]
 solution : [9, 28, 25, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 38, 8, 41, 42, 43, 45, 46, 49, 23, 30}

After reduction : 
 pending  : []
 solution : [9, 28, 25, 10]


Before reduction : 
 pending  : []
 solution : [9, 28, 25, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 25, 10]


Solution : [9, 28, 25, 10] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [9, 28, 25, 10]

After backtrack at level 8
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38]
 solution : [9, 28, 25, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38]
 solution : [9, 28, 25]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 23, 38]
 solution : [9, 28, 25]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 38, 8, 41, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : []
 solution : [9, 28, 25, 23]


Before reduction : 
 pending  : []
 solution : [9, 28, 25, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 25, 23]


Solution : [9, 28, 25, 23] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [9, 28, 25, 23]

After backtrack at level 8
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38]
 solution : [9, 28, 25]


Before backtrack at level 7
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38]
 solution : [9, 28, 25]

After backtrack at level 7
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10]
 solution : [9, 28, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10]
 solution : [9, 28]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10]
 solution : [9, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 7 among pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10]
 solution : [9, 28, 23]


New level: 8
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10]
 solution : [9, 28, 23]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10]
 solution : [9, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 23]


Solution : [9, 28, 23] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [9, 28, 23]

After backtrack at level 8
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10]
 solution : [9, 28, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10]
 solution : [9, 28]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10]
 solution : [9, 28]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 28, 10]


Before reduction : 
 pending  : []
 solution : [9, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 10]


Solution : [9, 28, 10] has cost 14.


Before backtrack at level 8
 pending : []
 solution : [9, 28, 10]

After backtrack at level 8
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39]
 solution : [9, 28]


Before backtrack at level 7
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39]
 solution : [9, 28]

After backtrack at level 7
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23]
 solution : [9, 28]


Before backtrack at level 6
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23]
 solution : [9, 28]

After backtrack at level 6
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25]
 solution : [9, 28]


Before backtrack at level 5
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25]
 solution : [9, 28]

After backtrack at level 5
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 5 among pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 21, 32]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 5

After decision at level 5
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 21]


New level: 6
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 21]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, 2147483648), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 2147483648), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25, 32]
 solution : [9, 21]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25, 32]
 solution : [9, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 2147483648), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 2147483648), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25, 32]
 solution : [9, 21]


Solution : [9, 21] has cost 13.


Decide in level 6 among pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 2147483648), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25]
 solution : [9, 21, 32]


New level: 7
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25]
 solution : [9, 21, 32]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 23, 25]
 solution : [9, 21, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 2147483648), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 39, 31}

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 25]
 solution : [9, 21, 32]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 25]
 solution : [9, 21, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 25]
 solution : [9, 21, 32]


Solution : [9, 21, 32] has cost 26.


Before backtrack at level 7
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 25]
 solution : [9, 21, 32]

After backtrack at level 7
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 25, 31, 34, 39]
 solution : [9, 21, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 25, 31, 34, 39]
 solution : [9, 21]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 25, 31, 34, 39]
 solution : [9, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 25, 31, 34, 39]
 solution : [9, 21]


Solution : [9, 21] has cost 13.


Decide in level 7 among pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 25, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 7

After decision at level 7
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]
 solution : [9, 21, 25]


New level: 8
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]
 solution : [9, 21, 25]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]
 solution : [9, 21, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 39, 31}

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23]
 solution : [9, 21, 25]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23]
 solution : [9, 21, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, -1), (33, 1024), (34, 0), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23]
 solution : [9, 21, 25]


Solution : [9, 21, 25] has cost 20.


Before backtrack at level 8
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23]
 solution : [9, 21, 25]

After backtrack at level 8
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]
 solution : [9, 21, 25]


Invert decision for 25 at level 7


New level: 8
 pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]
 solution : [9, 21]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]
 solution : [9, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]
 solution : [9, 21]


Solution : [9, 21] has cost 13.


Decide in level 8 among pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 8

After decision at level 8
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]
 solution : [9, 21, 10]


New level: 9
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]
 solution : [9, 21, 10]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]
 solution : [9, 21, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 21, 10]


Before reduction : 
 pending  : []
 solution : [9, 21, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 21, 10]


Solution : [9, 21, 10] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [9, 21, 10]

After backtrack at level 9
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]
 solution : [9, 21, 10]


Invert decision for 10 at level 8


New level: 9
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]
 solution : [9, 21]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 23, 31, 34, 39]
 solution : [9, 21]

Essensial at level 9 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 34, 36, 38, 39, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 21, 23]


Before reduction : 
 pending  : []
 solution : [9, 21, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 21, 23]


Solution : [9, 21, 23] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [9, 21, 23]

After backtrack at level 9
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39]
 solution : [9, 21]


Before backtrack at level 8
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39]
 solution : [9, 21]

After backtrack at level 8
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10]
 solution : [9, 21]


Before backtrack at level 7
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10]
 solution : [9, 21]

After backtrack at level 7
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10, 25]
 solution : [9, 21]


Before backtrack at level 6
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10, 25]
 solution : [9, 21]

After backtrack at level 6
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9, 21]


Invert decision for 21 at level 5


New level: 6
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 6 among pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 32]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 32]


New level: 7
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 32]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 31, 34, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 2147483648), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 32768), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 32768), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 31}

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 32]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 32768), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 32768), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 32768), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 32768), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 32]


Solution : [9, 32] has cost 19.


Before backtrack at level 7
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 32]

After backtrack at level 7
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 32768), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 32768), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 7 among pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 39, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 7

After decision at level 7
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9, 39]


New level: 8
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9, 39]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9, 39]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9, 39]


Solution : [9, 39] has cost 20.


Before backtrack at level 8
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9, 39]

After backtrack at level 8
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9, 39]


Invert decision for 39 at level 7


New level: 8
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 536870912), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, -1), (33, 16384), (34, 16384), (35, -1), (36, 16384), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 8 among pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 25, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 8

After decision at level 8
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9, 25]


New level: 9
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9, 25]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22, 31, 34]
 solution : [9, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, 1073741824), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {34, 31}

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 25]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, 0), (32, -1), (33, 4096), (34, 0), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]
 solution : [9, 25]


Solution : [9, 25] has cost 13.


Decide in level 9 among pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 22]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 22]


New level: 10
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 22]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 27}

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10]
 solution : [9, 25, 22]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10]
 solution : [9, 25, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10]
 solution : [9, 25, 22]


Solution : [9, 25, 22] has cost 20.


Before backtrack at level 10
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10]
 solution : [9, 25, 22]

After backtrack at level 10
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25]


Solution : [9, 25] has cost 13.


Decide in level 10 among pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 38, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 38]


New level: 11
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 38]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 8388608), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 8388608), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 67108864), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 38]


Solution : [9, 25, 38] has cost 31.


Before backtrack at level 11
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 38]

After backtrack at level 11
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 8388608), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 8388608), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 67108864), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25]


Solution : [9, 25] has cost 13.


Decide in level 11 among pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 41, 49, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 11

After decision at level 11
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 41]


New level: 12
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 41]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 36, 8, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : [23, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 41]


Before reduction : 
 pending  : [23, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 41]


Solution : [9, 25, 41] has cost 31.


Before backtrack at level 12
 pending : [23, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 25, 41]

After backtrack at level 12
 pending : [23, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 25, 41]


Invert decision for 41 at level 11


New level: 12
 pending : [23, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 25]


Before reduction : 
 pending  : [23, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 25]


Solution : [9, 25] has cost 13.


Decide in level 12 among pending : [23, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 17, 8, 30, 33, 45, 36, 42, 43, 46, 49]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [23, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 25, 17]


New level: 13
 pending : [23, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 25, 17]


Before reduction : 
 pending  : [23, 10, 27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 25, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 18, 19, 15}

After reduction : 
 pending  : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 25, 17]


Before reduction : 
 pending  : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 25, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 25, 17]


Solution : [9, 25, 17] has cost 22.


Before backtrack at level 13
 pending : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49]
 solution : [9, 25, 17]

After backtrack at level 13
 pending : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 0, 19, 15, 18]
 solution : [9, 25, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 0, 19, 15, 18]
 solution : [9, 25]


Before reduction : 
 pending  : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 0, 19, 15, 18]
 solution : [9, 25]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, -1), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 0, 19, 15, 18]
 solution : [9, 25]


Solution : [9, 25] has cost 13.


Decide in level 13 among pending : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 0, 19, 15, 18]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, -1), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 13

After decision at level 13
 pending : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 0, 19, 15, 18]
 solution : [9, 25, 49]


New level: 14
 pending : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 0, 19, 15, 18]
 solution : [9, 25, 49]


Before reduction : 
 pending  : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 36, 42, 43, 46, 0, 19, 15, 18]
 solution : [9, 25, 49]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, -1), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, -1), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, 4096), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {42, 43, 36, 46}

After reduction : 
 pending  : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 0, 19, 15, 18]
 solution : [9, 25, 49]


Before reduction : 
 pending  : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 0, 19, 15, 18]
 solution : [9, 25, 49]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, -1), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, 4096), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, -1), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, 4096), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 0, 19, 15, 18]
 solution : [9, 25, 49]


Solution : [9, 25, 49] has cost 44.


Before backtrack at level 14
 pending : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 0, 19, 15, 18]
 solution : [9, 25, 49]

After backtrack at level 14
 pending : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 0, 19, 15, 18, 36, 42, 43, 46]
 solution : [9, 25, 49]


Invert decision for 49 at level 13


New level: 14
 pending : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 0, 19, 15, 18, 36, 42, 43, 46]
 solution : [9, 25]


Before reduction : 
 pending  : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 0, 19, 15, 18, 36, 42, 43, 46]
 solution : [9, 25]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4096), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, -1), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, 4096), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, -1), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 0, 19, 15, 18, 36, 42, 43, 46]
 solution : [9, 25]


Solution : [9, 25] has cost 13.


Decide in level 14 among pending : [23, 10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 0, 19, 15, 18, 36, 42, 43, 46]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, -1), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 14

After decision at level 14
 pending : [10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 0, 19, 15, 18, 36, 42, 43, 46]
 solution : [9, 25, 23]


New level: 15
 pending : [10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 0, 19, 15, 18, 36, 42, 43, 46]
 solution : [9, 25, 23]


Before reduction : 
 pending  : [10, 27, 40, 16, 14, 13, 8, 30, 33, 45, 0, 19, 15, 18, 36, 42, 43, 46]
 solution : [9, 25, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, -1), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {33, 36, 8, 10, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 25, 23]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 25, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 25, 23]


Solution : [9, 25, 23] has cost 20.


Before backtrack at level 15
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 25, 23]

After backtrack at level 15
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 25, 23]


Invert decision for 23 at level 14


New level: 15
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 25]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 25]

Essensial at level 15 : {10}

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {33, 36, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 25, 10]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 25, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 25, 10]


Solution : [9, 25, 10] has cost 17.


Before backtrack at level 15
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 25, 10]

After backtrack at level 15
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 25]


Before backtrack at level 14
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46]
 solution : [9, 25]

After backtrack at level 14
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23]
 solution : [9, 25]


Before backtrack at level 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23]
 solution : [9, 25]

After backtrack at level 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49]
 solution : [9, 25]


Before backtrack at level 12
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49]
 solution : [9, 25]

After backtrack at level 12
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17]
 solution : [9, 25]


Before backtrack at level 11
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17]
 solution : [9, 25]

After backtrack at level 11
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17, 41]
 solution : [9, 25]


Before backtrack at level 10
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17, 41]
 solution : [9, 25]

After backtrack at level 10
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17, 41, 38]
 solution : [9, 25]


Before backtrack at level 9
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17, 41, 38]
 solution : [9, 25]

After backtrack at level 9
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17, 41, 38, 31, 34, 22]
 solution : [9, 25]


Invert decision for 25 at level 8


New level: 9
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17, 41, 38, 31, 34, 22]
 solution : [9]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17, 41, 38, 31, 34, 22]
 solution : [9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17, 41, 38, 31, 34, 22]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 9 among pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17, 41, 38, 31, 34, 22]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17, 41, 38, 31, 34]
 solution : [9, 22]


New level: 10
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17, 41, 38, 31, 34]
 solution : [9, 22]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 17, 41, 38, 31, 34]
 solution : [9, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, 1073741824), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {0, 40, 13, 14, 15, 16, 17, 18, 19, 27}

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 38, 31, 34]
 solution : [9, 22]


Before reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 38, 31, 34]
 solution : [9, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 38, 31, 34]
 solution : [9, 22]


Solution : [9, 22] has cost 13.


Decide in level 10 among pending : [10, 8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 38, 31, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 38, 31, 34]
 solution : [9, 22, 10]


New level: 11
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 38, 31, 34]
 solution : [9, 22, 10]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 38, 31, 34]
 solution : [9, 22, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 38, 8, 41, 42, 43, 45, 46, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 22, 10]


Before reduction : 
 pending  : []
 solution : [9, 22, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 22, 10]


Solution : [9, 22, 10] has cost 17.


Before backtrack at level 11
 pending : []
 solution : [9, 22, 10]

After backtrack at level 11
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 38, 31, 34]
 solution : [9, 22, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 38, 31, 34]
 solution : [9, 22]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 23, 49, 41, 38, 31, 34]
 solution : [9, 22]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 34, 36, 38, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 22, 23]


Before reduction : 
 pending  : []
 solution : [9, 22, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 22, 23]


Solution : [9, 22, 23] has cost 20.


Before backtrack at level 11
 pending : []
 solution : [9, 22, 23]

After backtrack at level 11
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34]
 solution : [9, 22]


Before backtrack at level 10
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34]
 solution : [9, 22]

After backtrack at level 10
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 10 among pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 38, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9, 38]


New level: 11
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9, 38]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9, 38]


Solution : [9, 38] has cost 24.


Before backtrack at level 11
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9, 38]

After backtrack at level 11
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9]


Before reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, -1), (30, 262144), (31, 4194304), (32, -1), (33, 4096), (34, 8192), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 11 among pending : [23, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 11

After decision at level 11
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9, 23]


New level: 12
 pending : [8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9, 23]


Before reduction : 
 pending  : [8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 27, 40, 16, 14, 13, 0, 19, 15, 18, 17, 10]
 solution : [9, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 524288), (16, 262144), (17, 67108864), (18, 33554432), (19, 1572864), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, -1), (33, 16384), (34, 32768), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 34, 36, 8, 41, 42, 43, 10, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 17]
 solution : [9, 23]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 17]
 solution : [9, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18, 17]
 solution : [9, 23]


Solution : [9, 23] has cost 13.


Decide in level 12 among pending : [27, 40, 16, 14, 13, 0, 19, 15, 18, 17]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 23, 17]


New level: 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 23, 17]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 23, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 18, 19, 15}

After reduction : 
 pending  : [27, 40, 16, 14, 13]
 solution : [9, 23, 17]


Before reduction : 
 pending  : [27, 40, 16, 14, 13]
 solution : [9, 23, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13]
 solution : [9, 23, 17]


Solution : [9, 23, 17] has cost 22.


Before backtrack at level 13
 pending : [27, 40, 16, 14, 13]
 solution : [9, 23, 17]

After backtrack at level 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 23, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 23]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 23]


Solution : [9, 23] has cost 13.


Decide in level 13 among pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 23, 13]


New level: 14
 pending : [27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 23, 13]


Before reduction : 
 pending  : [27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 23, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 14, 15}

After reduction : 
 pending  : [27, 40, 0, 19, 18]
 solution : [9, 23, 13]


Before reduction : 
 pending  : [27, 40, 0, 19, 18]
 solution : [9, 23, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 18]
 solution : [9, 23, 13]


Solution : [9, 23, 13] has cost 20.


Before backtrack at level 14
 pending : [27, 40, 0, 19, 18]
 solution : [9, 23, 13]

After backtrack at level 14
 pending : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 23, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 23]


Before reduction : 
 pending  : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 23]


Solution : [9, 23] has cost 13.


Decide in level 14 among pending : [27, 40, 0, 19, 18, 16, 14, 15]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 14

After decision at level 14
 pending : [27, 40, 0, 19, 16, 14, 15]
 solution : [9, 23, 18]


New level: 15
 pending : [27, 40, 0, 19, 16, 14, 15]
 solution : [9, 23, 18]


Before reduction : 
 pending  : [27, 40, 0, 19, 16, 14, 15]
 solution : [9, 23, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {0, 19, 15}

After reduction : 
 pending  : [27, 40, 16, 14]
 solution : [9, 23, 18]


Before reduction : 
 pending  : [27, 40, 16, 14]
 solution : [9, 23, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 16, 14]
 solution : [9, 23, 18]


Solution : [9, 23, 18] has cost 22.


Before backtrack at level 15
 pending : [27, 40, 16, 14]
 solution : [9, 23, 18]

After backtrack at level 15
 pending : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 23, 18]


Invert decision for 18 at level 14


New level: 15
 pending : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 23]


Before reduction : 
 pending  : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 23]


Solution : [9, 23] has cost 13.


Decide in level 15 among pending : [27, 40, 16, 14, 0, 19, 15]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 15

After decision at level 15
 pending : [27, 40, 16, 0, 19, 15]
 solution : [9, 23, 14]


New level: 16
 pending : [27, 40, 16, 0, 19, 15]
 solution : [9, 23, 14]


Before reduction : 
 pending  : [27, 40, 16, 0, 19, 15]
 solution : [9, 23, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 15}

After reduction : 
 pending  : [27, 40, 0, 19]
 solution : [9, 23, 14]


Before reduction : 
 pending  : [27, 40, 0, 19]
 solution : [9, 23, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 40, 0, 19]
 solution : [9, 23, 14]


Solution : [9, 23, 14] has cost 20.


Before backtrack at level 16
 pending : [27, 40, 0, 19]
 solution : [9, 23, 14]

After backtrack at level 16
 pending : [27, 40, 0, 19, 16, 15]
 solution : [9, 23, 14]


Invert decision for 14 at level 15


New level: 16
 pending : [27, 40, 0, 19, 16, 15]
 solution : [9, 23]


Before reduction : 
 pending  : [27, 40, 0, 19, 16, 15]
 solution : [9, 23]

Essensial at level 16 : {16}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15]
 solution : [9, 23, 16]


Before reduction : 
 pending  : [27, 40, 0, 19, 15]
 solution : [9, 23, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15]
 solution : [9, 23, 16]


Solution : [9, 23, 16] has cost 20.


Before backtrack at level 16
 pending : [27, 40, 0, 19, 15]
 solution : [9, 23, 16]

After backtrack at level 16
 pending : [27, 40, 0, 19, 15, 16]
 solution : [9, 23]


Before backtrack at level 15
 pending : [27, 40, 0, 19, 15, 16]
 solution : [9, 23]

After backtrack at level 15
 pending : [27, 40, 0, 19, 15, 16, 14]
 solution : [9, 23]


Before backtrack at level 14
 pending : [27, 40, 0, 19, 15, 16, 14]
 solution : [9, 23]

After backtrack at level 14
 pending : [27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 23]


Before backtrack at level 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 23]

After backtrack at level 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 23]


Before backtrack at level 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 23]

After backtrack at level 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 10, 17]
 solution : [9, 23]


Invert decision for 23 at level 11


New level: 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 10, 17]
 solution : [9]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 10, 17]
 solution : [9]

Essensial at level 12 : {10}

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 34, 36, 8, 41, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 10]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17]
 solution : [9, 10]


Solution : [9, 10] has cost 10.


Decide in level 12 among pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 17]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 10, 17]


New level: 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 10, 17]


Before reduction : 
 pending  : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 10, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, 33554432), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 18, 19, 15}

After reduction : 
 pending  : [27, 40, 16, 14, 13]
 solution : [9, 10, 17]


Before reduction : 
 pending  : [27, 40, 16, 14, 13]
 solution : [9, 10, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13]
 solution : [9, 10, 17]


Solution : [9, 10, 17] has cost 19.


Before backtrack at level 13
 pending : [27, 40, 16, 14, 13]
 solution : [9, 10, 17]

After backtrack at level 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 10, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 10]


Before reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 13, 0, 19, 15, 18]
 solution : [9, 10]


Solution : [9, 10] has cost 10.


Decide in level 13 among pending : [27, 40, 16, 14, 13, 0, 19, 15, 18]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 10, 13]


New level: 14
 pending : [27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 10, 13]


Before reduction : 
 pending  : [27, 40, 16, 14, 0, 19, 15, 18]
 solution : [9, 10, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 14, 15}

After reduction : 
 pending  : [27, 40, 0, 19, 18]
 solution : [9, 10, 13]


Before reduction : 
 pending  : [27, 40, 0, 19, 18]
 solution : [9, 10, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 18]
 solution : [9, 10, 13]


Solution : [9, 10, 13] has cost 17.


Before backtrack at level 14
 pending : [27, 40, 0, 19, 18]
 solution : [9, 10, 13]

After backtrack at level 14
 pending : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 10, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 10]


Before reduction : 
 pending  : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 18, 16, 14, 15]
 solution : [9, 10]


Solution : [9, 10] has cost 10.


Decide in level 14 among pending : [27, 40, 0, 19, 18, 16, 14, 15]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 14

After decision at level 14
 pending : [27, 40, 0, 19, 16, 14, 15]
 solution : [9, 10, 18]


New level: 15
 pending : [27, 40, 0, 19, 16, 14, 15]
 solution : [9, 10, 18]


Before reduction : 
 pending  : [27, 40, 0, 19, 16, 14, 15]
 solution : [9, 10, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, 16777216), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {0, 19, 15}

After reduction : 
 pending  : [27, 40, 16, 14]
 solution : [9, 10, 18]


Before reduction : 
 pending  : [27, 40, 16, 14]
 solution : [9, 10, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 0), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 16, 14]
 solution : [9, 10, 18]


Solution : [9, 10, 18] has cost 19.


Before backtrack at level 15
 pending : [27, 40, 16, 14]
 solution : [9, 10, 18]

After backtrack at level 15
 pending : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 10, 18]


Invert decision for 18 at level 14


New level: 15
 pending : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 10]


Before reduction : 
 pending  : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 40, 16, 14, 0, 19, 15]
 solution : [9, 10]


Solution : [9, 10] has cost 10.


Decide in level 15 among pending : [27, 40, 16, 14, 0, 19, 15]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 15

After decision at level 15
 pending : [27, 40, 16, 0, 19, 15]
 solution : [9, 10, 14]


New level: 16
 pending : [27, 40, 16, 0, 19, 15]
 solution : [9, 10, 14]


Before reduction : 
 pending  : [27, 40, 16, 0, 19, 15]
 solution : [9, 10, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 15}

After reduction : 
 pending  : [27, 40, 0, 19]
 solution : [9, 10, 14]


Before reduction : 
 pending  : [27, 40, 0, 19]
 solution : [9, 10, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 40, 0, 19]
 solution : [9, 10, 14]


Solution : [9, 10, 14] has cost 17.


Before backtrack at level 16
 pending : [27, 40, 0, 19]
 solution : [9, 10, 14]

After backtrack at level 16
 pending : [27, 40, 0, 19, 16, 15]
 solution : [9, 10, 14]


Invert decision for 14 at level 15


New level: 16
 pending : [27, 40, 0, 19, 16, 15]
 solution : [9, 10]


Before reduction : 
 pending  : [27, 40, 0, 19, 16, 15]
 solution : [9, 10]

Essensial at level 16 : {16}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 262144), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15]
 solution : [9, 10, 16]


Before reduction : 
 pending  : [27, 40, 0, 19, 15]
 solution : [9, 10, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 40, 0, 19, 15]
 solution : [9, 10, 16]


Solution : [9, 10, 16] has cost 17.


Before backtrack at level 16
 pending : [27, 40, 0, 19, 15]
 solution : [9, 10, 16]

After backtrack at level 16
 pending : [27, 40, 0, 19, 15, 16]
 solution : [9, 10]


Before backtrack at level 15
 pending : [27, 40, 0, 19, 15, 16]
 solution : [9, 10]

After backtrack at level 15
 pending : [27, 40, 0, 19, 15, 16, 14]
 solution : [9, 10]


Before backtrack at level 14
 pending : [27, 40, 0, 19, 15, 16, 14]
 solution : [9, 10]

After backtrack at level 14
 pending : [27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 10]


Before backtrack at level 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18]
 solution : [9, 10]

After backtrack at level 13
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 10]


Before backtrack at level 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13]
 solution : [9, 10]

After backtrack at level 12
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17]
 solution : [9]


Before backtrack at level 11
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17]
 solution : [9]

After backtrack at level 11
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23]
 solution : [9]


Before backtrack at level 10
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23]
 solution : [9]

After backtrack at level 10
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38]
 solution : [9]


Before backtrack at level 9
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38]
 solution : [9]

After backtrack at level 9
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22]
 solution : [9]


Before backtrack at level 8
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22]
 solution : [9]

After backtrack at level 8
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25]
 solution : [9]


Before backtrack at level 7
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25]
 solution : [9]

After backtrack at level 7
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25, 39]
 solution : [9]


Before backtrack at level 6
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25, 39]
 solution : [9]

After backtrack at level 6
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25, 39, 32]
 solution : [9]


Before backtrack at level 5
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25, 39, 32]
 solution : [9]

After backtrack at level 5
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25, 39, 32, 21]
 solution : [9]


Before backtrack at level 4
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25, 39, 32, 21]
 solution : [9]

After backtrack at level 4
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25, 39, 32, 21, 28]
 solution : [9]


Before backtrack at level 3
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25, 39, 32, 21, 28]
 solution : [9]

After backtrack at level 3
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25, 39, 32, 21, 28, 26]
 solution : [9]


Before backtrack at level 2
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25, 39, 32, 21, 28, 26]
 solution : [9]

After backtrack at level 2
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25, 39, 32, 21, 28, 26, 2]
 solution : [9]


Before backtrack at level 1
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25, 39, 32, 21, 28, 26, 2]
 solution : [9]

After backtrack at level 1
 pending : [27, 40, 0, 19, 15, 16, 14, 18, 13, 10, 8, 30, 33, 45, 36, 42, 43, 46, 49, 41, 31, 34, 17, 23, 38, 22, 25, 39, 32, 21, 28, 26, 2, 1]
 solution : [9]


=========================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=========================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 14

[MIN NOTE]: maximum branch and bound depth: 16

[MIN NOTE]: number of definitions: 2

invariant [def_didNotPromise] forall A. didNotPromise(A) = (forall P. ~promise(A,P)) # definition, qcost: 4

invariant [def_chosenAt] forall Q,P. chosenAt(Q,P) = (forall A. member(A,Q) -> promise(A,P)) # definition, qcost: 6

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [9, 28, 10]

[MIN NOTE]: solution length: 3

invariant [invar_9] forall PROPOSER0,ACCEPTOR0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_28] forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) # qcost: 4

invariant [invar_10] forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 24




[QRM NOTE]: Time elapsed since start: 12.998 seconds

[QRM NOTE]: Time elapsed since last: 2.289 seconds

[QRM NOTE]: Peak memory: 3251036 bytes


=============================================

	[IVY_CHECK] Ivy Check for Rmin

=============================================


==============================================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy]

==============================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_10

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_10 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_10 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_10 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_10 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS


===============================================================================================================================

	[MUS]: Extract strengthening assertion for [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy]

===============================================================================================================================

[MUS NOTE]: number of strengthening assertions: 2

[MUS NOTE]: min mus: {0, 1}

invariant [invar_9] forall PROPOSER0,ACCEPTOR0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_28] forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) # qcost: 4


=====================================================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy]

=====================================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 58: invar8
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 63: invar_9
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 64: invar_28

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 58: invar8 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 63: invar_9 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 64: invar_28 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 58: invar8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 63: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 64: invar_28 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 58: invar8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 63: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 64: invar_28 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 58: invar8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 63: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 64: invar_28 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS

[ASSERT_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 17.178 seconds

[QRM NOTE]: Time elapsed since last: 4.181 seconds

[QRM NOTE]: Peak memory: 3290847 bytes


**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************

[QRM RESULT]: PASS

