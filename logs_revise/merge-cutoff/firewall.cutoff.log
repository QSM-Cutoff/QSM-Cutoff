
********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


====================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall.ivy: node=3]

====================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 15

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 6

[FW NOTE]: number of branching actions: 18

ivy_to_cpp target=qrm firewall.node_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o firewall.node_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 firewall.node_3.finite.cpp firewall.node_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared firewall.node_3.finite.o firewall.node_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 8.434 seconds

[QRM NOTE]: Time elapsed since last: 8.434 seconds

[QRM NOTE]: Peak memory: 1177582 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 4

[FW NOTE]: number of total reachable states:        68

[FW NOTE]: number of dfs representative states:     16

[FW NOTE]: number of dfs non-representative states: 52


===========================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall.ivy: node=3]

===========================================================================================

sort: node=['node0', 'node1', 'node2']
predicate: sent('node', 'node')
predicate: internal('node',)
predicate: allowed_in('node',)
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)', 'internal(node0)', 'internal(node1)', 'internal(node2)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node1)', 'sent(node1,node2)', 'sent(node2,node0)', 'sent(node2,node1)', 'sent(node2,node2)']
representative states : 0, 3584, 1536, 512, 7176, 7240, 7242, 7246, 7178, 7182, 7180, 5128, 14528, 14532, 14564, 5130


=== State Orbit 0 =====================
size : 1
repr state: 000000000000000
lex min decimal: 0
states:
000000000000000




=== State Orbit 1 =====================
size : 1
repr state: 000111000000000
lex min decimal: 3584
states:
000111000000000




=== State Orbit 2 =====================
size : 3
repr state: 000101000000000
lex min decimal: 1536
states:
000110000000000
000101000000000
000011000000000




=== State Orbit 3 =====================
size : 3
repr state: 000001000000000
lex min decimal: 512
states:
000100000000000
000001000000000
000010000000000




=== State Orbit 4 =====================
size : 6
repr state: 010101010000000
lex min decimal: 7176
states:
010101010000000
100011000100000
001110001000000
010101000000010
001110000001000
100011000000100




=== State Orbit 5 =====================
size : 3
repr state: 010101010000010
lex min decimal: 7240
states:
010101010000010
100011000100100
001110001001000




=== State Orbit 6 =====================
size : 6
repr state: 010101010100010
lex min decimal: 7242
states:
100011001100100
100011010100100
001110001001010
001110001001100
010101010001010
010101010100010




=== State Orbit 7 =====================
size : 3
repr state: 010101010101010
lex min decimal: 7246
states:
010101010101010
100011011100100
001110001001110




=== State Orbit 8 =====================
size : 6
repr state: 010101010100000
lex min decimal: 7178
states:
100011001000100
100011010100000
001110001000100
010101010100000
010101000001010
001110000001010




=== State Orbit 9 =====================
size : 6
repr state: 010101010101000
lex min decimal: 7182
states:
001110000001110
010101010101000
001110001000110
100011011000100
100011011100000
010101000101010




=== State Orbit 10 =====================
size : 6
repr state: 010101010001000
lex min decimal: 7180
states:
001110000001100
100011001100000
010101000100010
001110001000010
010101010001000
100011010000100




=== State Orbit 11 =====================
size : 6
repr state: 100001000000100
lex min decimal: 5128
states:
010001000000010
001010000001000
100010000100000
010100010000000
100001000000100
001100001000000




=== State Orbit 12 =====================
size : 3
repr state: 110001000000110
lex min decimal: 14528
states:
101010000101000
110001000000110
011100011000000




=== State Orbit 13 =====================
size : 6
repr state: 110001001000110
lex min decimal: 14532
states:
101010000101010
101010010101000
110001000001110
110001001000110
011100011100000
011100011000100




=== State Orbit 14 =====================
size : 3
repr state: 110001001001110
lex min decimal: 14564
states:
011100011100100
101010010101010
110001001001110




=== State Orbit 15 =====================
size : 6
repr state: 100001001000100
lex min decimal: 5130
states:
100001001000100
001010000001010
010100010100000
010001000001010
001100001000100
100010010100000



[QRM NOTE]: Time elapsed since start: 8.539 seconds

[QRM NOTE]: Time elapsed since last: 0.105 seconds

[QRM NOTE]: Peak memory: 1227785 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 8.542 seconds

[QRM NOTE]: Time elapsed since last: 0.003 seconds

[QRM NOTE]: Peak memory: 190865 bytes


===========================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall.ivy: node=3]

===========================================================================================


======================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

======================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : --1--1---------
3     : ['allowed_in(node2)', 'internal(node2)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 12
num_suborbits: 2
6 (*) : -0---1-------1-
6     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
7     : --0-1------1---
7     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
8     : 0----1------1--
8     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
9     : --01----1------
9     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
10     : 0---1----1-----
10     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
11     : -0-1---1-------
11     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
44 (*) : -0---1-----1---
44     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
45     : --0-1--------1-
45     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
46     : 0----1--1------
46     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
47     : --01--------1--
47     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
48     : 0---1--1-------
48     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
49     : -0-1-----1-----
49     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 12
num_suborbits: 2
12 (*) : -1---0-------1-
12     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
13     : --1-0------1---
13     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
14     : 1----0------1--
14     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
15     : --10----1------
15     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
16     : 1---0----1-----
16     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
17     : -1-0---1-------
17     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
68 (*) : 1----0--1------
68     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
69     : 1---0--1-------
69     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
70     : -1---0-----1---
70     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
71     : -1-0-----1-----
71     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
72     : --1-0--------1-
72     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
73     : --10--------1--
73     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
18 (*) : ----11-------1-
18     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
19     : ----11-----1---
19     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
20     : ---1-1------1--
20     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
21     : ---1-1--1------
21     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
22     : ---11----1-----
22     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
23     : ---11--1-------
23     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 8
num_suborbits: 2
24 (*) : --------11---1-
24     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
25     : -------1---11--
25     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
32 (*) : ---------1--11-
32     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
33     : ---------1-11--
33     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
34     : -------1----11-
34     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
35     : -------11----1-
35     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
36     : --------11-1---
36     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
37     : -------11--1---
37     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 12
num_suborbits: 2
26 (*) : -0--0--------1-
26     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
27     : --0--0-----1---
27     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
28     : 0--0--------1--
28     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
29     : --0--0--1------
29     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
30     : 0--0-----1-----
30     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
31     : -0--0--1-------
31     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
50 (*) : -0--0------1---
50     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
51     : --0--0-------1-
51     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
52     : 0--0----1------
52     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
53     : --0--0------1--
53     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
54     : 0--0---1-------
54     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
55     : -0--0----1-----
55     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
38 (*) : ----00-------1-
38     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
39     : ----00-----1---
39     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
40     : ---0-0------1--
40     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
41     : ---0-0--1------
41     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
42     : ---00----1-----
42     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
43     : ---00--1-------
43     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
56 (*) : 00-------1-----
56     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
57     : 0-0---------1--
57     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
58     : 00-----1-------
58     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
59     : -00----------1-
59     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
60     : 0-0-----1------
60     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
61     : -00--------1---
61     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
62 (*) : 1----0---0-----
62     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
63     : 1---0-------0--
63     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
64     : -1---0-0-------
64     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
65     : -1-0---------0-
65     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
66     : --1-0---0------
66     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
67     : --10-------0---
67     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
74 (*) : 1--------0--0--
74     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
75     : -1-----0-----0-
75     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
76     : --1-----0--0---
76     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 3
num_suborbits: 1
77 (*) : -1-0-0---------
77     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
78     : --100----------
78     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
79     : 1---00---------
79     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
80 (*) : 11-----------0-
80     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
81     : 1-1--------0---
81     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
82     : 11----------0--
82     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
83     : -11-----0------
83     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
84     : 1-1------0-----
84     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
85     : -11----0-------
85     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 3
num_suborbits: 1
86 (*) : 11---0---------
86     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
87     : 1-1-0----------
87     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
88     : -110-----------
88     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
89 (*) : 11-------1-----
89     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
90     : 1-1---------1--
90     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
91     : 11-----1-------
91     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
92     : -11----------1-
92     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
93     : 1-1-----1------
93     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
94     : -11--------1---
94     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 1
num_suborbits: 1
95 (*) : 111------------
95     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 18
num_suborbits: 3
96 (*) : 1----1-----10--
96     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
97     : 1---1----0---1-
97     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
98     : -1---1--1----0-
98     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
99     : -1-1---0----1--
99     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
100     : --1-1--1---0---
100     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
101     : --11----01-----
101     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
126 (*) : 1---1----0-1---
126     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
127     : 1----1------01-
127     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
128     : -1-1---01------
128     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
129     : -1---1------10-
129     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
130     : --11---10------
130     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
131     : --1-1----1-0---
131     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
294 (*) : --1-1--1-0-----
294     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
295     : -1---1--1---0--
295     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
296     : --11---0-1-----
296     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
297     : 1----1-----1-0-
297     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
298     : -1-1----0---1--
298     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
299     : 1---1------0-1-
299     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 24
num_suborbits: 4
102 (*) : 1----1-1---1---
102     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
103     : 1---1---1----1-
103     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
104     : -1---1--11-----
104     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
105     : -1-1-------11--
105     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
106     : --1-1--1----1--
106     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
107     : --11-----1---1-
107     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
108 (*) : 1----1---1-1---
108     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
109     : 1---1-------11-
109     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
110     : -1---1-11------
110     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
111     : -1-1--------11-
111     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
112     : --1-1--11------
112     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
113     : --11-----1-1---
113     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
120 (*) : 1---1------11--
120     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
121     : 1----1---1---1-
121     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
122     : -1-1----1----1-
122     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
123     : -1---1-1----1--
123     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
124     : --11---1---1---
124     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
125     : --1-1---11-----
125     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
336 (*) : --11---1-----1-
336     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
337     : -1-1----1--1---
337     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
338     : --1-1----1--1--
338     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
339     : 1---1---1--1---
339     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
340     : -1---1---1--1--
340     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
341     : 1----1-1-----1-
341     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 18
num_suborbits: 3
114 (*) : 1-0--------10--
114     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
115     : 10-------0---1-
115     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
116     : -10-----1----0-
116     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
117     : 01-----0----1--
117     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
118     : -01----1---0---
118     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
119     : 0-1-----01-----
119     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
216 (*) : 10-------0-1---
216     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
217     : 1-0---------01-
217     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
218     : 01-----01------
218     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
219     : -10---------10-
219     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
220     : 0-1----10------
220     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
221     : -01------1-0---
221     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
240 (*) : -01----1-0-----
240     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
241     : -10-----1---0--
241     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
242     : 0-1----0-1-----
242     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
243     : 1-0--------1-0-
243     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
244     : 01------0---1--
244     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
245     : 10---------0-1-
245     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 24
num_suborbits: 4
132 (*) : 1-0----1---1---
132     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
133     : 10------1----1-
133     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
134     : -10-----11-----
134     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
135     : 01---------11--
135     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
136     : -01----1----1--
136     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
137     : 0-1------1---1-
137     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
144 (*) : 1-0------1-1---
144     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
145     : 10----------11-
145     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
146     : -10----11------
146     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
147     : 01----------11-
147     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
148     : -01----11------
148     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
149     : 0-1------1-1---
149     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
198 (*) : 0-1----1---1---
198     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
199     : 01------1----1-
199     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
200     : -01-----11-----
200     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
201     : 10---------11--
201     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
202     : -10----1----1--
202     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
203     : 1-0------1---1-
203     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
330 (*) : 0-1----1-----1-
330     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
331     : 01------1--1---
331     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
332     : -01------1--1--
332     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
333     : 10------1--1---
333     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
334     : -10------1--1--
334     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
335     : 1-0----1-----1-
335     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 24
num_suborbits: 4
138 (*) : 1------1-0-1---
138     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
139     : 1-------1---01-
139     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
140     : -1-----011-----
140     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
141     : -1---------110-
141     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
142     : --1----10---1--
142     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
143     : --1------1-0-1-
143     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
180 (*) : --1----1-0-1---
180     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
181     : -1------1---01-
181     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
182     : --1----011-----
182     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
183     : 1----------110-
183     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
184     : -1-----10---1--
184     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
185     : 1--------1-0-1-
185     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
264 (*) : 1------1-0---1-
264     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
265     : 1-------1--10--
265     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
266     : -1-----0-1--1--
266     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
267     : -1------1--1-0-
267     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
268     : --1-----01--1--
268     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
269     : --1----1---0-1-
269     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
306 (*) : --1----1-0---1-
306     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
307     : -1------1--10--
307     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
308     : --1----0-1--1--
308     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
309     : 1-------1--1-0-
309     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
310     : -1------01--1--
310     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
311     : 1------1---0-1-
311     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
150 (*) : --00-----1-1---
150     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
151     : -0-0--------11-
151     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
152     : --0-0--11------
152     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
153     : 0---0-------11-
153     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
154     : -0---0-11------
154     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
155     : 0----0---1-1---
155     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
186 (*) : --00---1---1---
186     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
187     : -0-0----1----1-
187     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
188     : --0-0---11-----
188     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
189     : 0---0------11--
189     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
190     : -0---0-1----1--
190     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
191     : 0----0---1---1-
191     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
192 (*) : 0----0-1---1---
192     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
193     : 0---0---1----1-
193     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
194     : -0---0--11-----
194     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
195     : -0-0-------11--
195     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
196     : --0-0--1----1--
196     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
197     : --00-----1---1-
197     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
324 (*) : 0----0-1-----1-
324     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
325     : 0---0---1--1---
325     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
326     : -0---0---1--1--
326     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
327     : -0-0----1--1---
327     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
328     : --0-0----1--1--
328     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
329     : --00---1-----1-
329     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
156 (*) : ---01------11--
156     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
157     : ---0-1---1---1-
157     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
158     : ---10---1----1-
158     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
159     : ----01-1----1--
159     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
160     : ---1-0-1---1---
160     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
161     : ----10--11-----
161     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
204 (*) : ---1-0---1-1---
204     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
205     : ---10-------11-
205     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
206     : ----10-11------
206     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
207     : ---01-------11-
207     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
208     : ----01-11------
208     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
209     : ---0-1---1-1---
209     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
210 (*) : ---10------11--
210     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
211     : ---1-0---1---1-
211     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
212     : ---01---1----1-
212     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
213     : ----10-1----1--
213     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
214     : ---0-1-1---1---
214     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
215     : ----01--11-----
215     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
342 (*) : ---1-0-1-----1-
342     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
343     : ---10---1--1---
343     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
344     : ----10---1--1--
344     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
345     : ---01---1--1---
345     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
346     : ----01---1--1--
346     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
347     : ---0-1-1-----1-
347     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
162 (*) : ---0---1-0-1---
162     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
163     : ---0----1---01-
163     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
164     : ----0--011-----
164     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
165     : ----0------110-
165     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
166     : -----0-10---1--
166     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
167     : -----0---1-0-1-
167     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
174 (*) : -----0-1-0-1---
174     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
175     : ----0---1---01-
175     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
176     : -----0-011-----
176     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
177     : ---0-------110-
177     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
178     : ----0--10---1--
178     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
179     : ---0-----1-0-1-
179     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
258 (*) : ---0---1-0---1-
258     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
259     : ---0----1--10--
259     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
260     : ----0--0-1--1--
260     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
261     : ----0---1--1-0-
261     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
262     : -----0--01--1--
262     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
263     : -----0-1---0-1-
263     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
270 (*) : -----0-1-0---1-
270     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
271     : ----0---1--10--
271     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
272     : -----0-0-1--1--
272     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
273     : ---0----1--1-0-
273     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
274     : ----0---01--1--
274     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
275     : ---0---1---0-1-
275     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 12
num_suborbits: 2
168 (*) : ----1--1-0-1---
168     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
169     : -----1--1---01-
169     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
170     : ---1---011-----
170     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
171     : -----1-----110-
171     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
172     : ---1---10---1--
172     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
173     : ----1----1-0-1-
173     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
252 (*) : ----1--1-0---1-
252     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
253     : -----1--1--10--
253     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
254     : ---1---0-1--1--
254     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
255     : -----1--1--1-0-
255     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
256     : ---1----01--1--
256     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
257     : ----1--1---0-1-
257     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 12
num_suborbits: 2
222 (*) : -0-----1-0-1---
222     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
223     : --0-----1---01-
223     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
224     : 0------011-----
224     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
225     : --0--------110-
225     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
226     : 0------10---1--
226     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
227     : -0-------1-0-1-
227     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
228 (*) : -0-----1-0---1-
228     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
229     : --0-----1--10--
229     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
230     : 0------0-1--1--
230     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
231     : --0-----1--1-0-
231     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
232     : 0-------01--1--
232     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
233     : -0-----1---0-1-
233     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
234 (*) : -0---0-1-0-----
234     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
235     : --0-0---1---0--
235     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
236     : 0----0-0-1-----
236     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
237     : --00-------1-0-
237     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
238     : 0---0---0---1--
238     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
239     : -0-0-------0-1-
239     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
246 (*) : -0-----1-0--0--
246     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
247     : --0-----10--0--
247     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
248     : 0------0-1---0-
248     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
249     : --0----0---1-0-
249     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
250     : 0-------0--01--
250     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
251     : -0------0--0-1-
251     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
276 (*) : ----10-1-0-----
276     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
277     : ----01--1---0--
277     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
278     : ---1-0-0-1-----
278     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
279     : ---0-1-----1-0-
279     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
280     : ---10---0---1--
280     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
281     : ---01------0-1-
281     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
282 (*) : ---0-0-1-0-----
282     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
283     : ---00---1---0--
283     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
284     : ----00-0-1-----
284     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
285     : ---00------1-0-
285     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
286     : ----00--0---1--
286     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
287     : ---0-0-----0-1-
287     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
288 (*) : --1----100-----
288     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
289     : -1-----01---0--
289     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
290     : --1----0-1-0---
290     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
291     : 1--------0-1-0-
291     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
292     : -1------0---10-
292     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
293     : 1----------001-
293     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
300 (*) : --10---1-0-----
300     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
301     : -1-0----1---0--
301     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
302     : --1-0--0-1-----
302     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
303     : 1---0------1-0-
303     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
304     : -1---0--0---1--
304     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
305     : 1----0-----0-1-
305     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
312 (*) : ----1--1-0--0--
312     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
313     : -----1--10--0--
313     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
314     : ---1---0-1---0-
314     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
315     : -----1-0---1-0-
315     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
316     : ---1----0--01--
316     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
317     : ----1---0--0-1-
317     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
318 (*) : ---0---1-0--0--
318     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
319     : ---0----10--0--
319     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
320     : ----0--0-1---0-
320     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
321     : ----0--0---1-0-
321     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
322     : -----0--0--01--
322     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
323     : -----0--0--0-1-
323     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 34

[PRIME NOTE]: number of orbits before merging: 62

[PRIME NOTE]: number of primes: 348

[QRM NOTE]: Time elapsed since start: 8.611 seconds

[QRM NOTE]: Time elapsed since last: 0.069 seconds

[QRM NOTE]: Peak memory: 1556826 bytes


================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall.ivy: node=3]

================================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : []

Essensial at level 0 : {0, 10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 768), (3, 576), (4, 512), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 256), (17, 520), (18, 224), (19, 512), (20, 320), (21, 576), (22, 576), (23, 512), (24, 384), (25, 384), (26, 256), (27, 128), (28, 256), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10]


Before reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 768), (3, 576), (4, 512), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 256), (17, 520), (18, 224), (19, 512), (20, 320), (21, 576), (22, 576), (23, 512), (24, 384), (25, 384), (26, 256), (27, 128), (28, 256), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 768), (3, 576), (4, 512), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 256), (17, 520), (18, 224), (19, 512), (20, 320), (21, 576), (22, 576), (23, 512), (24, 384), (25, 384), (26, 256), (27, 128), (28, 256), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10]

[QRM NOTE]: Time elapsed since start: 8.626 seconds

[QRM NOTE]: Time elapsed since last: 0.015 seconds

[QRM NOTE]: Peak memory: 496117 bytes


====================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall.ivy: node=3]

====================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node2,node2)']

sign_func_name2args: {'0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node2,node2)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
74 (*) : 1--------0--0--
74     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
75     : -1-----0-----0-
75     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
76     : --1-----0--0---
76     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1}

	identical_multi_classes: {'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : --1--1---------
3     : ['allowed_in(node2)', 'internal(node2)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'internal(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$internal$0': [node$0$allowed_in$0$0; node$0$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$internal$0': node$0$allowed_in$0$0; node$0$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)


=== Prime Orbit 2 =====================
size : 12
num_suborbits: 2
6 (*) : -0---1-------1-
6     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
7     : --0-1------1---
7     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
8     : 0----1------1--
8     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
9     : --01----1------
9     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
10     : 0---1----1-----
10     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
11     : -0-1---1-------
11     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
44 (*) : -0---1-----1---
44     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
45     : --0-1--------1-
45     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
46     : 0----1--1------
46     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
47     : --01--------1--
47     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
48     : 0---1--1-------
48     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
49     : -0-1-----1-----
49     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'internal(node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'internal(node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'internal(node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', 'internal(NODE0)', '~allowed_in(NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0,NODE3. ~sent(NODE1,NODE2) | ~internal(NODE0) | allowed_in(NODE3) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))


=== Prime Orbit 3 =====================
size : 12
num_suborbits: 2
12 (*) : -1---0-------1-
12     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
13     : --1-0------1---
13     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
14     : 1----0------1--
14     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
15     : --10----1------
15     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
16     : 1---0----1-----
16     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
17     : -1-0---1-------
17     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
68 (*) : 1----0--1------
68     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
69     : 1---0--1-------
69     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
70     : -1---0-----1---
70     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
71     : -1-0-----1-----
71     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
72     : --1-0--------1-
72     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
73     : --10--------1--
73     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~internal(node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node2)', 'sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~internal(node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE3)', 'sent(NODE1,NODE2)', 'allowed_in(NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0,NODE3. internal(NODE3) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))


=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
18 (*) : ----11-------1-
18     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
19     : ----11-----1---
19     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
20     : ---1-1------1--
20     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
21     : ---1-1--1------
21     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
22     : ---11----1-----
22     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
23     : ---11--1-------
23     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$1, node$0$sent$0$0]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$internal$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$internal$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$0], 'node$0$internal$0; node$0$sent$0': [node$0$internal$0$1; node$0$sent$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$0, 'node$0$internal$0; node$0$sent$0': node$0$internal$0$1; node$0$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'internal(NODE1)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. ~sent(NODE1,NODE0) | ~internal(NODE1) | ~internal(NODE0) | NODE0 = NODE1


=== Prime Orbit 5 =====================
size : 8
num_suborbits: 2
24 (*) : --------11---1-
24     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
25     : -------1---11--
25     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
32 (*) : ---------1--11-
32     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
33     : ---------1-11--
33     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
34     : -------1----11-
34     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
35     : -------11----1-
35     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
36     : --------11-1---
36     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
37     : -------11--1---
37     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$2], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$0$sent$1$2]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$2, node$0$sent$0$2; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$2 | node$0$sent$0$2; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$2 | node$0$sent$0$2; node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$2], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$0$sent$0$2]}

sig2const: {'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$2, node$0$sent$0$1; node$0$sent$0$2, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$2 | node$0$sent$0$1; node$0$sent$0$2 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$0$sent$1$2 | node$0$sent$0$1; node$0$sent$0$2 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2, node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$0$2 | node$0$sent$1$0 | node$0$sent$1$1 | node$0$sent$1$2}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE4)', 'sent(NODE2,NODE5)', 'sent(NODE0,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE3,NODE4,NODE5,NODE0. ~sent(NODE1,NODE4) | ~sent(NODE2,NODE5) | ~sent(NODE0,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1))


=== Prime Orbit 6 =====================
size : 12
num_suborbits: 2
26 (*) : -0--0--------1-
26     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
27     : --0--0-----1---
27     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
28     : 0--0--------1--
28     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
29     : --0--0--1------
29     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
30     : 0--0-----1-----
30     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
31     : -0--0--1-------
31     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
50 (*) : -0--0------1---
50     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
51     : --0--0-------1-
51     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
52     : 0--0----1------
52     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
53     : --0--0------1--
53     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
54     : 0--0---1-------
54     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
55     : -0--0----1-----
55     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node1)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node1)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$internal$0': [node$1$allowed_in$0$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$internal$0': node$1$allowed_in$0$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE2)', '~allowed_in(NODE2)', 'sent(NODE0,NODE1)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0. internal(NODE2) | allowed_in(NODE2) | ~sent(NODE0,NODE1) | ((NODE1 ~= NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE0 = NODE1))


=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
38 (*) : ----00-------1-
38     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
39     : ----00-----1---
39     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
40     : ---0-0------1--
40     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
41     : ---0-0--1------
41     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
42     : ---00----1-----
42     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
43     : ---00--1-------
43     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', '~internal(node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1, node$0$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node1)', '~internal(node2)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$1], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$1, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', '~internal(NODE1)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. internal(NODE0) | internal(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
56 (*) : 00-------1-----
56     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
57     : 0-0---------1--
57     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
58     : 00-----1-------
58     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
59     : -00----------1-
59     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
60     : 0-0-----1------
60     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
61     : -00--------1---
61     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~allowed_in(node1)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$1, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~allowed_in(node1)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$1], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$1, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE0)', 'sent(NODE0,NODE1)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. allowed_in(NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | NODE0 = NODE1


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
62 (*) : 1----0---0-----
62     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
63     : 1---0-------0--
63     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
64     : -1---0-0-------
64     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
65     : -1-0---------0-
65     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
66     : --1-0---0------
66     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
67     : --10-------0---
67     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'allowed_in(NODE0)', '~sent(NODE2,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0. internal(NODE1) | ~allowed_in(NODE0) | sent(NODE2,NODE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 11 =====================
size : 3
num_suborbits: 1
77 (*) : -1-0-0---------
77     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
78     : --100----------
78     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
79     : 1---00---------
79     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

part_sig: ('node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0}

	identical_multi_classes: {'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', 'allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
80 (*) : 11-----------0-
80     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
81     : 1-1--------0---
81     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
82     : 11----------0--
82     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
83     : -11-----0------
83     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
84     : 1-1------0-----
84     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
85     : -11----0-------
85     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$1; node$1$sent$1$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$1; node$1$sent$1$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE1)', 'allowed_in(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0. sent(NODE2,NODE1) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 13 =====================
size : 3
num_suborbits: 1
86 (*) : 11---0---------
86     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
87     : 1-1-0----------
87     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
88     : -110-----------
88     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 2, '1$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
89 (*) : 11-------1-----
89     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
90     : 1-1---------1--
90     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
91     : 11-----1-------
91     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
92     : -11----------1-
92     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
93     : 1-1-----1------
93     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
94     : -11--------1---
94     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$allowed_in$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$allowed_in$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$0], 'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$1; node$0$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$0, 'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$1; node$0$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'allowed_in(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. ~sent(NODE1,NODE0) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 15 =====================
size : 1
num_suborbits: 1
95 (*) : 111------------
95     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$2]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: exists NODE0. ~allowed_in(NODE0)


=== Prime Orbit 16 =====================
size : 18
num_suborbits: 3
96 (*) : 1----1-----10--
96     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
97     : 1---1----0---1-
97     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
98     : -1---1--1----0-
98     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
99     : -1-1---0----1--
99     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
100     : --1-1--1---0---
100     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
101     : --11----01-----
101     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
126 (*) : 1---1----0-1---
126     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
127     : 1----1------01-
127     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
128     : -1-1---01------
128     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
129     : -1---1------10-
129     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
130     : --11---10------
130     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
131     : --1-1----1-0---
131     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
294 (*) : --1-1--1-0-----
294     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
295     : -1---1--1---0--
295     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
296     : --11---0-1-----
296     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
297     : 1----1-----1-0-
297     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
298     : -1-1----0---1--
298     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
299     : 1---1------0-1-
299     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$1$sent$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0; node$1$sent$0': [node$0$internal$0$0; node$1$sent$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0; node$1$sent$0': node$0$internal$0$0; node$1$sent$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'sent(NODE2,NODE3)', 'allowed_in(NODE0)', '~sent(NODE1,NODE4)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE3,NODE4,NODE0. ~internal(NODE1) | ~sent(NODE2,NODE3) | ~allowed_in(NODE0) | sent(NODE1,NODE4) | ((NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1))


=== Prime Orbit 17 =====================
size : 24
num_suborbits: 4
102 (*) : 1----1-1---1---
102     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
103     : 1---1---1----1-
103     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
104     : -1---1--11-----
104     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
105     : -1-1-------11--
105     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
106     : --1-1--1----1--
106     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
107     : --11-----1---1-
107     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
108 (*) : 1----1---1-1---
108     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
109     : 1---1-------11-
109     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
110     : -1---1-11------
110     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
111     : -1-1--------11-
111     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
112     : --1-1--11------
112     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
113     : --11-----1-1---
113     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
120 (*) : 1---1------11--
120     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
121     : 1----1---1---1-
121     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
122     : -1-1----1----1-
122     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
123     : -1---1-1----1--
123     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
124     : --11---1---1---
124     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
125     : --1-1---11-----
125     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
336 (*) : --11---1-----1-
336     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
337     : -1-1----1--1---
337     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
338     : --1-1----1--1--
338     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
339     : 1---1---1--1---
339     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
340     : -1---1---1--1--
340     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
341     : 1----1-1-----1-
341     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0': node$0$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'sent(NODE2,NODE4)', 'allowed_in(NODE0)', 'sent(NODE3,NODE5)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE3,NODE4,NODE5,NODE0. ~internal(NODE1) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ~sent(NODE3,NODE5) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE0 = NODE4 | NODE0 = NODE1 | NODE1 = NODE4))


=== Prime Orbit 18 =====================
size : 18
num_suborbits: 3
114 (*) : 1-0--------10--
114     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
115     : 10-------0---1-
115     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
116     : -10-----1----0-
116     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
117     : 01-----0----1--
117     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
118     : -01----1---0---
118     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
119     : 0-1-----01-----
119     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
216 (*) : 10-------0-1---
216     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
217     : 1-0---------01-
217     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
218     : 01-----01------
218     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
219     : -10---------10-
219     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
220     : 0-1----10------
220     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
221     : -01------1-0---
221     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
240 (*) : -01----1-0-----
240     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
241     : -10-----1---0--
241     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
242     : 0-1----0-1-----
242     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
243     : 1-0--------1-0-
243     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
244     : 01------0---1--
244     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
245     : 10---------0-1-
245     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~allowed_in(node2)', 'sent(node1,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~allowed_in(node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~allowed_in(node2)', 'sent(node1,node2)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$allowed_in': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$sent$0': [node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$sent$0': node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~sent(NODE3,NODE4)', '~allowed_in(NODE3)', 'allowed_in(NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE3,NODE4,NODE0. ~sent(NODE1,NODE2) | sent(NODE3,NODE4) | allowed_in(NODE3) | ~allowed_in(NODE0) | ((NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1))


=== Prime Orbit 19 =====================
size : 24
num_suborbits: 4
132 (*) : 1-0----1---1---
132     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
133     : 10------1----1-
133     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
134     : -10-----11-----
134     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
135     : 01---------11--
135     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
136     : -01----1----1--
136     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
137     : 0-1------1---1-
137     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
144 (*) : 1-0------1-1---
144     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
145     : 10----------11-
145     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
146     : -10----11------
146     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
147     : 01----------11-
147     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
148     : -01----11------
148     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
149     : 0-1------1-1---
149     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
198 (*) : 0-1----1---1---
198     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
199     : 01------1----1-
199     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
200     : -01-----11-----
200     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
201     : 10---------11--
201     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
202     : -10----1----1--
202     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
203     : 1-0------1---1-
203     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
330 (*) : 0-1----1-----1-
330     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
331     : 01------1--1---
331     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
332     : -01------1--1--
332     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
333     : 10------1--1---
333     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
334     : -10------1--1--
334     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
335     : 1-0----1-----1-
335     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$allowed_in': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE5)', 'sent(NODE2,NODE4)', 'sent(NODE1,NODE3)', 'allowed_in(NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE3,NODE4,NODE5,NODE0. allowed_in(NODE5) | ~sent(NODE2,NODE4) | ~sent(NODE1,NODE3) | ~allowed_in(NODE0) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE2 = NODE4 | NODE0 = NODE2 | NODE0 = NODE4) & (NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE0 = NODE4 | NODE0 = NODE1 | NODE1 = NODE4) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1))


=== Prime Orbit 20 =====================
size : 24
num_suborbits: 4
138 (*) : 1------1-0-1---
138     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
139     : 1-------1---01-
139     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
140     : -1-----011-----
140     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
141     : -1---------110-
141     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
142     : --1----10---1--
142     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
143     : --1------1-0-1-
143     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
180 (*) : --1----1-0-1---
180     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
181     : -1------1---01-
181     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
182     : --1----011-----
182     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
183     : 1----------110-
183     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
184     : -1-----10---1--
184     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
185     : 1--------1-0-1-
185     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
264 (*) : 1------1-0---1-
264     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
265     : 1-------1--10--
265     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
266     : -1-----0-1--1--
266     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
267     : -1------1--1-0-
267     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
268     : --1-----01--1--
268     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
269     : --1----1---0-1-
269     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
306 (*) : --1----1-0---1-
306     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
307     : -1------1--10--
307     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
308     : --1----0-1--1--
308     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
309     : 1-------1--1-0-
309     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
310     : -1------01--1--
310     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
311     : 1------1---0-1-
311     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE3)', '~sent(NODE3,NODE1)', 'sent(NODE2,NODE4)', 'allowed_in(NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE3,NODE4,NODE0. ~sent(NODE1,NODE3) | sent(NODE3,NODE1) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE2 = NODE4 | NODE0 = NODE2 | NODE0 = NODE4) & (NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE0 = NODE2 | NODE2 = NODE3) & (NODE0 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1))


=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
150 (*) : --00-----1-1---
150     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
151     : -0-0--------11-
151     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
152     : --0-0--11------
152     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
153     : 0---0-------11-
153     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
154     : -0---0-11------
154     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
155     : 0----0---1-1---
155     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
186 (*) : --00---1---1---
186     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
187     : -0-0----1----1-
187     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
188     : --0-0---11-----
188     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
189     : 0---0------11--
189     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
190     : -0---0-1----1--
190     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
191     : 0----0---1---1-
191     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
192 (*) : 0----0-1---1---
192     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
193     : 0---0---1----1-
193     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
194     : -0---0--11-----
194     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
195     : -0-0-------11--
195     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
196     : --0-0--1----1--
196     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
197     : --00-----1---1-
197     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
324 (*) : 0----0-1-----1-
324     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
325     : 0---0---1--1---
325     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
326     : -0---0---1--1--
326     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
327     : -0-0----1--1---
327     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
328     : --0-0----1--1--
328     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
329     : --00---1-----1-
329     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$internal$0$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', '~internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$allowed_in$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$allowed_in$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$allowed_in$0': [node$1$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$allowed_in$0': node$1$allowed_in$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE4)', 'sent(NODE1,NODE3)', '~internal(NODE5)', 'sent(NODE0,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE3,NODE4,NODE5,NODE0. allowed_in(NODE4) | ~sent(NODE1,NODE3) | internal(NODE5) | ~sent(NODE0,NODE2) | ((NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE0 = NODE2 | NODE2 = NODE3) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1))


=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
156 (*) : ---01------11--
156     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
157     : ---0-1---1---1-
157     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
158     : ---10---1----1-
158     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
159     : ----01-1----1--
159     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
160     : ---1-0-1---1---
160     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
161     : ----10--11-----
161     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
204 (*) : ---1-0---1-1---
204     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
205     : ---10-------11-
205     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
206     : ----10-11------
206     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
207     : ---01-------11-
207     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
208     : ----01-11------
208     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
209     : ---0-1---1-1---
209     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
210 (*) : ---10------11--
210     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
211     : ---1-0---1---1-
211     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
212     : ---01---1----1-
212     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
213     : ----10-1----1--
213     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
214     : ---0-1-1---1---
214     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
215     : ----01--11-----
215     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
342 (*) : ---1-0-1-----1-
342     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
343     : ---10---1--1---
343     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
344     : ----10---1--1--
344     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
345     : ---01---1--1---
345     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
346     : ----01---1--1--
346     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
347     : ---0-1-1-----1-
347     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE3)', 'internal(NODE0)', '~internal(NODE5)', 'sent(NODE2,NODE4)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE3,NODE4,NODE5,NODE0. ~sent(NODE1,NODE3) | ~internal(NODE0) | internal(NODE5) | ~sent(NODE2,NODE4) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE2 = NODE4 | NODE0 = NODE2 | NODE0 = NODE4) & (NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE0 = NODE4 | NODE0 = NODE1 | NODE1 = NODE4) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE0 = NODE2 | NODE2 = NODE3))


=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
162 (*) : ---0---1-0-1---
162     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
163     : ---0----1---01-
163     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
164     : ----0--011-----
164     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
165     : ----0------110-
165     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
166     : -----0-10---1--
166     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
167     : -----0---1-0-1-
167     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
174 (*) : -----0-1-0-1---
174     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
175     : ----0---1---01-
175     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
176     : -----0-011-----
176     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
177     : ---0-------110-
177     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
178     : ----0--10---1--
178     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
179     : ---0-----1-0-1-
179     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
258 (*) : ---0---1-0---1-
258     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
259     : ---0----1--10--
259     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
260     : ----0--0-1--1--
260     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
261     : ----0---1--1-0-
261     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
262     : -----0--01--1--
262     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
263     : -----0-1---0-1-
263     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
270 (*) : -----0-1-0---1-
270     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
271     : ----0---1--10--
271     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
272     : -----0-0-1--1--
272     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
273     : ---0----1--1-0-
273     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
274     : ----0---01--1--
274     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
275     : ---0---1---0-1-
275     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$1, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE3)', '~sent(NODE2,NODE0)', '~internal(NODE4)', 'sent(NODE0,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE3,NODE4,NODE0. ~sent(NODE1,NODE3) | sent(NODE2,NODE0) | internal(NODE4) | ~sent(NODE0,NODE2) | ((NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1))


=== Prime Orbit 24 =====================
size : 12
num_suborbits: 2
168 (*) : ----1--1-0-1---
168     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
169     : -----1--1---01-
169     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
170     : ---1---011-----
170     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
171     : -----1-----110-
171     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
172     : ---1---10---1--
172     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
173     : ----1----1-0-1-
173     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
252 (*) : ----1--1-0---1-
252     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
253     : -----1--1--10--
253     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
254     : ---1---0-1--1--
254     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
255     : -----1--1--1-0-
255     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
256     : ---1----01--1--
256     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
257     : ----1--1---0-1-
257     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$1}

part_sig: ('node$0$internal$0$0; node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1',)


---------- SigGenerator ----------

terms:  ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$1]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1': node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'internal(NODE0)', 'sent(NODE2,NODE3)', '~sent(NODE0,NODE1)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0,NODE3. ~sent(NODE1,NODE0) | ~internal(NODE0) | ~sent(NODE2,NODE3) | sent(NODE0,NODE1) | ((NODE0 ~= NODE2 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1))


=== Prime Orbit 25 =====================
size : 12
num_suborbits: 2
222 (*) : -0-----1-0-1---
222     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
223     : --0-----1---01-
223     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
224     : 0------011-----
224     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
225     : --0--------110-
225     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
226     : 0------10---1--
226     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
227     : -0-------1-0-1-
227     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
228 (*) : -0-----1-0---1-
228     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
229     : --0-----1--10--
229     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
230     : 0------0-1--1--
230     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
231     : --0-----1--1-0-
231     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
232     : 0-------01--1--
232     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
233     : -0-----1---0-1-
233     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$1]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE3)', '~sent(NODE2,NODE0)', '~allowed_in(NODE2)', 'sent(NODE0,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0,NODE3. ~sent(NODE1,NODE3) | sent(NODE2,NODE0) | allowed_in(NODE2) | ~sent(NODE0,NODE2) | ((NODE1 ~= NODE2 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1))


=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
234 (*) : -0---0-1-0-----
234     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
235     : --0-0---1---0--
235     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
236     : 0----0-0-1-----
236     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
237     : --00-------1-0-
237     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
238     : 0---0---0---1--
238     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
239     : -0-0-------0-1-
239     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE2)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0. internal(NODE2) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
246 (*) : -0-----1-0--0--
246     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
247     : --0-----10--0--
247     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
248     : 0------0-1---0-
248     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
249     : --0----0---1-0-
249     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
250     : 0-------0--01--
250     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
251     : -0------0--0-1-
251     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE0)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0. sent(NODE2,NODE0) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
276 (*) : ----10-1-0-----
276     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
277     : ----01--1---0--
277     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
278     : ---1-0-0-1-----
278     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
279     : ---0-1-----1-0-
279     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
280     : ---10---0---1--
280     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
281     : ---01------0-1-
281     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['internal(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'internal(NODE0)', '~internal(NODE2)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0. ~sent(NODE1,NODE0) | ~internal(NODE0) | internal(NODE2) | sent(NODE0,NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
282 (*) : ---0-0-1-0-----
282     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
283     : ---00---1---0--
283     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
284     : ----00-0-1-----
284     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
285     : ---00------1-0-
285     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
286     : ----00--0---1--
286     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
287     : ---0-0-----0-1-
287     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', '~internal(NODE2)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0. internal(NODE0) | internal(NODE2) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
288 (*) : --1----100-----
288     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
289     : -1-----01---0--
289     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
290     : --1----0-1-0---
290     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
291     : 1--------0-1-0-
291     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
292     : -1------0---10-
292     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
293     : 1----------001-
293     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$0$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$sent$0; node$1$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$sent$0; node$1$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE1)', 'sent(NODE1,NODE2)', '~sent(NODE1,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0. sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
300 (*) : --10---1-0-----
300     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
301     : -1-0----1---0--
301     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
302     : --1-0--0-1-----
302     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
303     : 1---0------1-0-
303     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
304     : -1---0--0---1--
304     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
305     : 1----0-----0-1-
305     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE1)', 'sent(NODE1,NODE2)', '~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0. sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | internal(NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
312 (*) : ----1--1-0--0--
312     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
313     : -----1--10--0--
313     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
314     : ---1---0-1---0-
314     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
315     : -----1-0---1-0-
315     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
316     : ---1----0--01--
316     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
317     : ----1---0--0-1-
317     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'internal(NODE0)', '~sent(NODE0,NODE1)', '~sent(NODE2,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0. ~sent(NODE1,NODE0) | ~internal(NODE0) | sent(NODE0,NODE1) | sent(NODE2,NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
318 (*) : ---0---1-0--0--
318     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
319     : ---0----10--0--
319     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
320     : ----0--0-1---0-
320     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
321     : ----0--0---1-0-
321     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
322     : -----0--0--01--
322     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
323     : -----0--0--0-1-
323     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)', '~sent(NODE2,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0. internal(NODE0) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | sent(NODE2,NODE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


==============================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

==============================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
74 (*) : 1--------0--0--
74     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
75     : -1-----0-----0-
75     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
76     : --1-----0--0---
76     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : --1--1---------
3     : ['allowed_in(node2)', 'internal(node2)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)
qcost : 3




=== Prime Orbit 2 =====================
size : 12
num_suborbits: 2
6 (*) : -0---1-------1-
6     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
7     : --0-1------1---
7     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
8     : 0----1------1--
8     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
9     : --01----1------
9     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
10     : 0---1----1-----
10     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
11     : -0-1---1-------
11     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
44 (*) : -0---1-----1---
44     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
45     : --0-1--------1-
45     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
46     : 0----1--1------
46     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
47     : --01--------1--
47     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
48     : 0---1--1-------
48     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
49     : -0-1-----1-----
49     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE1,NODE2,NODE0,NODE3. ~sent(NODE1,NODE2) | ~internal(NODE0) | allowed_in(NODE3) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))
qcost : 13




=== Prime Orbit 3 =====================
size : 12
num_suborbits: 2
12 (*) : -1---0-------1-
12     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
13     : --1-0------1---
13     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
14     : 1----0------1--
14     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
15     : --10----1------
15     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
16     : 1---0----1-----
16     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
17     : -1-0---1-------
17     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
68 (*) : 1----0--1------
68     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
69     : 1---0--1-------
69     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
70     : -1---0-----1---
70     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
71     : -1-0-----1-----
71     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
72     : --1-0--------1-
72     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
73     : --10--------1--
73     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE1,NODE2,NODE0,NODE3. internal(NODE3) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))
qcost : 13




=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
18 (*) : ----11-------1-
18     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
19     : ----11-----1---
19     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
20     : ---1-1------1--
20     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
21     : ---1-1--1------
21     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
22     : ---11----1-----
22     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
23     : ---11--1-------
23     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. ~sent(NODE1,NODE0) | ~internal(NODE1) | ~internal(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 5 =====================
size : 8
num_suborbits: 2
24 (*) : --------11---1-
24     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
25     : -------1---11--
25     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
32 (*) : ---------1--11-
32     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
33     : ---------1-11--
33     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
34     : -------1----11-
34     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
35     : -------11----1-
35     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
36     : --------11-1---
36     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
37     : -------11--1---
37     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
num_forall :   6
num_exists :   0
num_literals : 15
quantified form : forall NODE1,NODE2,NODE3,NODE4,NODE5,NODE0. ~sent(NODE1,NODE4) | ~sent(NODE2,NODE5) | ~sent(NODE0,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1))
qcost : 21




=== Prime Orbit 6 =====================
size : 12
num_suborbits: 2
26 (*) : -0--0--------1-
26     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
27     : --0--0-----1---
27     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
28     : 0--0--------1--
28     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
29     : --0--0--1------
29     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
30     : 0--0-----1-----
30     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
31     : -0--0--1-------
31     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
50 (*) : -0--0------1---
50     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
51     : --0--0-------1-
51     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
52     : 0--0----1------
52     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
53     : --0--0------1--
53     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
54     : 0--0---1-------
54     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
55     : -0--0----1-----
55     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0. internal(NODE2) | allowed_in(NODE2) | ~sent(NODE0,NODE1) | ((NODE1 ~= NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE0 = NODE1))
qcost : 10




=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
38 (*) : ----00-------1-
38     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
39     : ----00-----1---
39     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
40     : ---0-0------1--
40     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
41     : ---0-0--1------
41     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
42     : ---00----1-----
42     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
43     : ---00--1-------
43     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. internal(NODE0) | internal(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
56 (*) : 00-------1-----
56     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
57     : 0-0---------1--
57     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
58     : 00-----1-------
58     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
59     : -00----------1-
59     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
60     : 0-0-----1------
60     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
61     : -00--------1---
61     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. allowed_in(NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
62 (*) : 1----0---0-----
62     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
63     : 1---0-------0--
63     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
64     : -1---0-0-------
64     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
65     : -1-0---------0-
65     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
66     : --1-0---0------
66     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
67     : --10-------0---
67     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE1,NODE2,NODE0. internal(NODE1) | ~allowed_in(NODE0) | sent(NODE2,NODE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 9




=== Prime Orbit 11 =====================
size : 3
num_suborbits: 1
77 (*) : -1-0-0---------
77     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
78     : --100----------
78     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
79     : 1---00---------
79     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
80 (*) : 11-----------0-
80     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
81     : 1-1--------0---
81     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
82     : 11----------0--
82     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
83     : -11-----0------
83     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
84     : 1-1------0-----
84     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
85     : -11----0-------
85     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE1,NODE2,NODE0. sent(NODE2,NODE1) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 9




=== Prime Orbit 13 =====================
size : 3
num_suborbits: 1
86 (*) : 11---0---------
86     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
87     : 1-1-0----------
87     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
88     : -110-----------
88     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
89 (*) : 11-------1-----
89     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
90     : 1-1---------1--
90     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
91     : 11-----1-------
91     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
92     : -11----------1-
92     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
93     : 1-1-----1------
93     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
94     : -11--------1---
94     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. ~sent(NODE1,NODE0) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 15 =====================
size : 1
num_suborbits: 1
95 (*) : 111------------
95     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists NODE0. ~allowed_in(NODE0)
qcost : 2




=== Prime Orbit 16 =====================
size : 18
num_suborbits: 3
96 (*) : 1----1-----10--
96     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
97     : 1---1----0---1-
97     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
98     : -1---1--1----0-
98     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
99     : -1-1---0----1--
99     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
100     : --1-1--1---0---
100     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
101     : --11----01-----
101     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
126 (*) : 1---1----0-1---
126     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
127     : 1----1------01-
127     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
128     : -1-1---01------
128     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
129     : -1---1------10-
129     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
130     : --11---10------
130     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
131     : --1-1----1-0---
131     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
294 (*) : --1-1--1-0-----
294     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
295     : -1---1--1---0--
295     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
296     : --11---0-1-----
296     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
297     : 1----1-----1-0-
297     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
298     : -1-1----0---1--
298     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
299     : 1---1------0-1-
299     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   5
num_exists :   0
num_literals : 19
quantified form : forall NODE1,NODE2,NODE3,NODE4,NODE0. ~internal(NODE1) | ~sent(NODE2,NODE3) | ~allowed_in(NODE0) | sent(NODE1,NODE4) | ((NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1))
qcost : 24




=== Prime Orbit 17 =====================
size : 24
num_suborbits: 4
102 (*) : 1----1-1---1---
102     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
103     : 1---1---1----1-
103     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
104     : -1---1--11-----
104     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
105     : -1-1-------11--
105     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
106     : --1-1--1----1--
106     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
107     : --11-----1---1-
107     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
108 (*) : 1----1---1-1---
108     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
109     : 1---1-------11-
109     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
110     : -1---1-11------
110     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
111     : -1-1--------11-
111     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
112     : --1-1--11------
112     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
113     : --11-----1-1---
113     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
120 (*) : 1---1------11--
120     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
121     : 1----1---1---1-
121     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
122     : -1-1----1----1-
122     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
123     : -1---1-1----1--
123     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
124     : --11---1---1---
124     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
125     : --1-1---11-----
125     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
336 (*) : --11---1-----1-
336     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
337     : -1-1----1--1---
337     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
338     : --1-1----1--1--
338     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
339     : 1---1---1--1---
339     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
340     : -1---1---1--1--
340     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
341     : 1----1-1-----1-
341     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE1,NODE2,NODE3,NODE4,NODE5,NODE0. ~internal(NODE1) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ~sent(NODE3,NODE5) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE0 = NODE4 | NODE0 = NODE1 | NODE1 = NODE4))
qcost : 34




=== Prime Orbit 18 =====================
size : 18
num_suborbits: 3
114 (*) : 1-0--------10--
114     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
115     : 10-------0---1-
115     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
116     : -10-----1----0-
116     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
117     : 01-----0----1--
117     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
118     : -01----1---0---
118     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
119     : 0-1-----01-----
119     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
216 (*) : 10-------0-1---
216     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
217     : 1-0---------01-
217     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
218     : 01-----01------
218     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
219     : -10---------10-
219     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
220     : 0-1----10------
220     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
221     : -01------1-0---
221     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
240 (*) : -01----1-0-----
240     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
241     : -10-----1---0--
241     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
242     : 0-1----0-1-----
242     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
243     : 1-0--------1-0-
243     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
244     : 01------0---1--
244     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
245     : 10---------0-1-
245     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
num_forall :   5
num_exists :   0
num_literals : 19
quantified form : forall NODE1,NODE2,NODE3,NODE4,NODE0. ~sent(NODE1,NODE2) | sent(NODE3,NODE4) | allowed_in(NODE3) | ~allowed_in(NODE0) | ((NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1))
qcost : 24




=== Prime Orbit 19 =====================
size : 24
num_suborbits: 4
132 (*) : 1-0----1---1---
132     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
133     : 10------1----1-
133     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
134     : -10-----11-----
134     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
135     : 01---------11--
135     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
136     : -01----1----1--
136     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
137     : 0-1------1---1-
137     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
144 (*) : 1-0------1-1---
144     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
145     : 10----------11-
145     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
146     : -10----11------
146     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
147     : 01----------11-
147     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
148     : -01----11------
148     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
149     : 0-1------1-1---
149     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
198 (*) : 0-1----1---1---
198     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
199     : 01------1----1-
199     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
200     : -01-----11-----
200     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
201     : 10---------11--
201     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
202     : -10----1----1--
202     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
203     : 1-0------1---1-
203     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
330 (*) : 0-1----1-----1-
330     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
331     : 01------1--1---
331     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
332     : -01------1--1--
332     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
333     : 10------1--1---
333     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
334     : -10------1--1--
334     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
335     : 1-0----1-----1-
335     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE1,NODE2,NODE3,NODE4,NODE5,NODE0. allowed_in(NODE5) | ~sent(NODE2,NODE4) | ~sent(NODE1,NODE3) | ~allowed_in(NODE0) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE2 = NODE4 | NODE0 = NODE2 | NODE0 = NODE4) & (NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE0 = NODE4 | NODE0 = NODE1 | NODE1 = NODE4) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1))
qcost : 34




=== Prime Orbit 20 =====================
size : 24
num_suborbits: 4
138 (*) : 1------1-0-1---
138     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
139     : 1-------1---01-
139     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
140     : -1-----011-----
140     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
141     : -1---------110-
141     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
142     : --1----10---1--
142     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
143     : --1------1-0-1-
143     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
180 (*) : --1----1-0-1---
180     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
181     : -1------1---01-
181     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
182     : --1----011-----
182     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
183     : 1----------110-
183     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
184     : -1-----10---1--
184     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
185     : 1--------1-0-1-
185     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
264 (*) : 1------1-0---1-
264     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
265     : 1-------1--10--
265     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
266     : -1-----0-1--1--
266     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
267     : -1------1--1-0-
267     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
268     : --1-----01--1--
268     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
269     : --1----1---0-1-
269     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
306 (*) : --1----1-0---1-
306     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
307     : -1------1--10--
307     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
308     : --1----0-1--1--
308     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
309     : 1-------1--1-0-
309     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
310     : -1------01--1--
310     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
311     : 1------1---0-1-
311     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   5
num_exists :   0
num_literals : 24
quantified form : forall NODE1,NODE2,NODE3,NODE4,NODE0. ~sent(NODE1,NODE3) | sent(NODE3,NODE1) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE2 = NODE4 | NODE0 = NODE2 | NODE0 = NODE4) & (NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE0 = NODE2 | NODE2 = NODE3) & (NODE0 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1))
qcost : 29




=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
150 (*) : --00-----1-1---
150     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
151     : -0-0--------11-
151     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
152     : --0-0--11------
152     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
153     : 0---0-------11-
153     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
154     : -0---0-11------
154     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
155     : 0----0---1-1---
155     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
186 (*) : --00---1---1---
186     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
187     : -0-0----1----1-
187     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
188     : --0-0---11-----
188     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
189     : 0---0------11--
189     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
190     : -0---0-1----1--
190     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
191     : 0----0---1---1-
191     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
192 (*) : 0----0-1---1---
192     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
193     : 0---0---1----1-
193     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
194     : -0---0--11-----
194     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
195     : -0-0-------11--
195     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
196     : --0-0--1----1--
196     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
197     : --00-----1---1-
197     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
324 (*) : 0----0-1-----1-
324     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
325     : 0---0---1--1---
325     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
326     : -0---0---1--1--
326     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
327     : -0-0----1--1---
327     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
328     : --0-0----1--1--
328     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
329     : --00---1-----1-
329     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE1,NODE2,NODE3,NODE4,NODE5,NODE0. allowed_in(NODE4) | ~sent(NODE1,NODE3) | internal(NODE5) | ~sent(NODE0,NODE2) | ((NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE0 = NODE2 | NODE2 = NODE3) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1))
qcost : 34




=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
156 (*) : ---01------11--
156     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
157     : ---0-1---1---1-
157     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
158     : ---10---1----1-
158     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
159     : ----01-1----1--
159     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
160     : ---1-0-1---1---
160     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
161     : ----10--11-----
161     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
204 (*) : ---1-0---1-1---
204     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
205     : ---10-------11-
205     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
206     : ----10-11------
206     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
207     : ---01-------11-
207     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
208     : ----01-11------
208     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
209     : ---0-1---1-1---
209     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
210 (*) : ---10------11--
210     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
211     : ---1-0---1---1-
211     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
212     : ---01---1----1-
212     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
213     : ----10-1----1--
213     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
214     : ---0-1-1---1---
214     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
215     : ----01--11-----
215     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
342 (*) : ---1-0-1-----1-
342     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
343     : ---10---1--1---
343     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
344     : ----10---1--1--
344     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
345     : ---01---1--1---
345     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
346     : ----01---1--1--
346     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
347     : ---0-1-1-----1-
347     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE1,NODE2,NODE3,NODE4,NODE5,NODE0. ~sent(NODE1,NODE3) | ~internal(NODE0) | internal(NODE5) | ~sent(NODE2,NODE4) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE2 = NODE4 | NODE0 = NODE2 | NODE0 = NODE4) & (NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE0 = NODE4 | NODE0 = NODE1 | NODE1 = NODE4) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE0 = NODE2 | NODE2 = NODE3))
qcost : 34




=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
162 (*) : ---0---1-0-1---
162     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
163     : ---0----1---01-
163     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
164     : ----0--011-----
164     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
165     : ----0------110-
165     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
166     : -----0-10---1--
166     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
167     : -----0---1-0-1-
167     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
174 (*) : -----0-1-0-1---
174     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
175     : ----0---1---01-
175     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
176     : -----0-011-----
176     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
177     : ---0-------110-
177     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
178     : ----0--10---1--
178     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
179     : ---0-----1-0-1-
179     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
258 (*) : ---0---1-0---1-
258     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
259     : ---0----1--10--
259     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
260     : ----0--0-1--1--
260     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
261     : ----0---1--1-0-
261     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
262     : -----0--01--1--
262     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
263     : -----0-1---0-1-
263     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
270 (*) : -----0-1-0---1-
270     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
271     : ----0---1--10--
271     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
272     : -----0-0-1--1--
272     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
273     : ---0----1--1-0-
273     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
274     : ----0---01--1--
274     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
275     : ---0---1---0-1-
275     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   5
num_exists :   0
num_literals : 24
quantified form : forall NODE1,NODE2,NODE3,NODE4,NODE0. ~sent(NODE1,NODE3) | sent(NODE2,NODE0) | internal(NODE4) | ~sent(NODE0,NODE2) | ((NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1))
qcost : 29




=== Prime Orbit 24 =====================
size : 12
num_suborbits: 2
168 (*) : ----1--1-0-1---
168     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
169     : -----1--1---01-
169     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
170     : ---1---011-----
170     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
171     : -----1-----110-
171     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
172     : ---1---10---1--
172     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
173     : ----1----1-0-1-
173     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
252 (*) : ----1--1-0---1-
252     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
253     : -----1--1--10--
253     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
254     : ---1---0-1--1--
254     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
255     : -----1--1--1-0-
255     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
256     : ---1----01--1--
256     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
257     : ----1--1---0-1-
257     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   4
num_exists :   0
num_literals : 12
quantified form : forall NODE1,NODE2,NODE0,NODE3. ~sent(NODE1,NODE0) | ~internal(NODE0) | ~sent(NODE2,NODE3) | sent(NODE0,NODE1) | ((NODE0 ~= NODE2 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1))
qcost : 16




=== Prime Orbit 25 =====================
size : 12
num_suborbits: 2
222 (*) : -0-----1-0-1---
222     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
223     : --0-----1---01-
223     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
224     : 0------011-----
224     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
225     : --0--------110-
225     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
226     : 0------10---1--
226     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
227     : -0-------1-0-1-
227     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
228 (*) : -0-----1-0---1-
228     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
229     : --0-----1--10--
229     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
230     : 0------0-1--1--
230     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
231     : --0-----1--1-0-
231     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
232     : 0-------01--1--
232     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
233     : -0-----1---0-1-
233     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
num_forall :   4
num_exists :   0
num_literals : 12
quantified form : forall NODE1,NODE2,NODE0,NODE3. ~sent(NODE1,NODE3) | sent(NODE2,NODE0) | allowed_in(NODE2) | ~sent(NODE0,NODE2) | ((NODE1 ~= NODE2 | NODE1 = NODE3 | NODE0 = NODE3 | NODE0 = NODE1) & (NODE2 ~= NODE3 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1))
qcost : 16




=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
234 (*) : -0---0-1-0-----
234     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
235     : --0-0---1---0--
235     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
236     : 0----0-0-1-----
236     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
237     : --00-------1-0-
237     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
238     : 0---0---0---1--
238     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
239     : -0-0-------0-1-
239     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0. internal(NODE2) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
246 (*) : -0-----1-0--0--
246     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
247     : --0-----10--0--
247     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
248     : 0------0-1---0-
248     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
249     : --0----0---1-0-
249     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
250     : 0-------0--01--
250     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
251     : -0------0--0-1-
251     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0. sent(NODE2,NODE0) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
276 (*) : ----10-1-0-----
276     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
277     : ----01--1---0--
277     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
278     : ---1-0-0-1-----
278     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
279     : ---0-1-----1-0-
279     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
280     : ---10---0---1--
280     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
281     : ---01------0-1-
281     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0. ~sent(NODE1,NODE0) | ~internal(NODE0) | internal(NODE2) | sent(NODE0,NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
282 (*) : ---0-0-1-0-----
282     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
283     : ---00---1---0--
283     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
284     : ----00-0-1-----
284     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
285     : ---00------1-0-
285     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
286     : ----00--0---1--
286     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
287     : ---0-0-----0-1-
287     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0. internal(NODE0) | internal(NODE2) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
288 (*) : --1----100-----
288     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
289     : -1-----01---0--
289     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
290     : --1----0-1-0---
290     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
291     : 1--------0-1-0-
291     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
292     : -1------0---10-
292     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
293     : 1----------001-
293     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0. sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
300 (*) : --10---1-0-----
300     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
301     : -1-0----1---0--
301     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
302     : --1-0--0-1-----
302     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
303     : 1---0------1-0-
303     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
304     : -1---0--0---1--
304     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
305     : 1----0-----0-1-
305     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0. sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | internal(NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
312 (*) : ----1--1-0--0--
312     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
313     : -----1--10--0--
313     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
314     : ---1---0-1---0-
314     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
315     : -----1-0---1-0-
315     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
316     : ---1----0--01--
316     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
317     : ----1---0--0-1-
317     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0. ~sent(NODE1,NODE0) | ~internal(NODE0) | sent(NODE0,NODE1) | sent(NODE2,NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
318 (*) : ---0---1-0--0--
318     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
319     : ---0----10--0--
319     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
320     : ----0--0-1---0-
320     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
321     : ----0--0---1-0-
321     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
322     : -----0--0--01--
322     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
323     : -----0--0--0-1-
323     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0. internal(NODE0) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | sent(NODE2,NODE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 10



[QRM NOTE]: Time elapsed since start: 10.246 seconds

[QRM NOTE]: Time elapsed since last: 1.620 seconds

[QRM NOTE]: Peak memory: 2424050 bytes


=============================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall.ivy: node=3]

=============================================================================


New level: 1
 pending : [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10]


Before reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 768), (3, 576), (4, 512), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 256), (17, 520), (18, 224), (19, 512), (20, 320), (21, 576), (22, 576), (23, 512), (24, 384), (25, 384), (26, 256), (27, 128), (28, 256), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 768), (3, 576), (4, 512), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 256), (17, 520), (18, 224), (19, 512), (20, 320), (21, 576), (22, 576), (23, 512), (24, 384), (25, 384), (26, 256), (27, 128), (28, 256), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Covered at level 1 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10]


Solution : [0, 10] has cost 7.


Decide in level 1 among pending : [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, 1024), (2, 768), (3, 576), (4, 512), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 256), (17, 520), (18, 224), (19, 512), (20, 320), (21, 576), (22, 576), (23, 512), (24, 384), (25, 384), (26, 256), (27, 128), (28, 256), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Decide 1 with phase True at level 1

After decision at level 1
 pending : [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10, 1]


New level: 2
 pending : [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10, 1]


Before reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10, 1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 768), (3, 576), (4, 512), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 256), (17, 520), (18, 224), (19, 512), (20, 320), (21, 576), (22, 576), (23, 512), (24, 384), (25, 384), (26, 256), (27, 128), (28, 256), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, 264), (4, 128), (5, 768), (6, 640), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 64), (17, 130), (18, 112), (19, 256), (20, 160), (21, 528), (22, 288), (23, 448), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 64), (31, 128), (32, 64), (33, 128)]

Covered at level 2 : set()

After reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10, 1]


Solution : [0, 10, 1] has cost 10.


Decide in level 2 among pending : [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 320), (3, 264), (4, 128), (5, 768), (6, 640), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 64), (17, 130), (18, 112), (19, 256), (20, 160), (21, 528), (22, 288), (23, 448), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 64), (31, 128), (32, 64), (33, 128)]

Decide 5 with phase True at level 2

After decision at level 2
 pending : [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10, 1, 5]


New level: 3
 pending : [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10, 1, 5]


Before reduction : 
 pending  : [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10, 1, 5]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, 264), (4, 128), (5, 768), (6, 640), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 64), (17, 130), (18, 112), (19, 256), (20, 160), (21, 528), (22, 288), (23, 448), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 64), (31, 128), (32, 64), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, 258), (4, 128), (5, -1), (6, 640), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 26), (17, 24), (18, 48), (19, 48), (20, 16), (21, 120), (22, 60), (23, 56), (24, 20), (25, 40), (26, 256), (27, 128), (28, 128), (29, 256), (30, 16), (31, 128), (32, 64), (33, 128)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10, 1, 5]


Solution : [0, 10, 1, 5] has cost 31.


Decide in level 3 among pending : [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 320), (3, 258), (4, 128), (5, -1), (6, 640), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 26), (17, 24), (18, 48), (19, 48), (20, 16), (21, 120), (22, 60), (23, 56), (24, 20), (25, 40), (26, 256), (27, 128), (28, 128), (29, 256), (30, 16), (31, 128), (32, 64), (33, 128)]

Decide 6 with phase True at level 3

After decision at level 3
 pending : [2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10, 1, 5, 6]


New level: 4
 pending : [2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10, 1, 5, 6]


Before reduction : 
 pending  : [2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 10, 1, 5, 6]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, 258), (4, 128), (5, -1), (6, 640), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 26), (17, 24), (18, 48), (19, 48), (20, 16), (21, 120), (22, 60), (23, 56), (24, 20), (25, 40), (26, 256), (27, 128), (28, 128), (29, 256), (30, 16), (31, 128), (32, 64), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 4), (30, 8), (31, 4), (32, 32), (33, 0)]

Covered at level 4 : {33}

After reduction : 
 pending  : [2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 10, 1, 5, 6]


Before reduction : 
 pending  : [2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 10, 1, 5, 6]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 4), (30, 8), (31, 4), (32, 32), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 10, 1, 5, 6]


Solution : [0, 10, 1, 5, 6] has cost 41.


Decide in level 4 among pending : [2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Decide 11 with phase True at level 4

After decision at level 4
 pending : [2, 3, 4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 10, 1, 5, 6, 11]


New level: 5
 pending : [2, 3, 4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 10, 1, 5, 6, 11]


Before reduction : 
 pending  : [2, 3, 4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 10, 1, 5, 6, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, 0), (14, 32), (15, 0), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 1), (30, 8), (31, 1), (32, 32), (33, -1)]

Covered at level 5 : {13, 15}

After reduction : 
 pending  : [2, 3, 4, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 10, 1, 5, 6, 11]


Before reduction : 
 pending  : [2, 3, 4, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 10, 1, 5, 6, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, 0), (14, 32), (15, 0), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 1), (30, 8), (31, 1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 1), (30, 8), (31, 1), (32, 32), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 3, 4, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 10, 1, 5, 6, 11]


Solution : [0, 10, 1, 5, 6, 11] has cost 46.


Decide in level 5 among pending : [2, 3, 4, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 1), (30, 8), (31, 1), (32, 32), (33, -1)]

Decide 2 with phase True at level 5

After decision at level 5
 pending : [3, 4, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 10, 1, 5, 6, 11, 2]


New level: 6
 pending : [3, 4, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 10, 1, 5, 6, 11, 2]


Before reduction : 
 pending  : [3, 4, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 10, 1, 5, 6, 11, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 1), (30, 8), (31, 1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, 0), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, 0), (25, 0), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 6 : {32, 4, 8, 24, 25, 27}

After reduction : 
 pending  : [3, 7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]


Before reduction : 
 pending  : [3, 7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, 0), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, 0), (25, 0), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]


Solution : [0, 10, 1, 5, 6, 11, 2] has cost 59.


Decide in level 6 among pending : [3, 7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 3 with phase True at level 6

After decision at level 6
 pending : [7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 3]


New level: 7
 pending : [7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 3]


Before reduction : 
 pending  : [7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 7 : {7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 3]


Solution : [0, 10, 1, 5, 6, 11, 2, 3] has cost 72.


Before backtrack at level 7
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 2, 3]

After backtrack at level 7
 pending : [7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 3]


Invert decision for 3 at level 6


New level: 7
 pending : [7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]


Before reduction : 
 pending  : [7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]


Solution : [0, 10, 1, 5, 6, 11, 2] has cost 59.


Decide in level 7 among pending : [7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 7]


New level: 8
 pending : [9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 7]


Before reduction : 
 pending  : [9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 8 : {9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 7]


Solution : [0, 10, 1, 5, 6, 11, 2, 7] has cost 65.


Before backtrack at level 8
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 2, 7]

After backtrack at level 8
 pending : [9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]


Before reduction : 
 pending  : [9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]


Solution : [0, 10, 1, 5, 6, 11, 2] has cost 59.


Decide in level 8 among pending : [9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 14 with phase True at level 8

After decision at level 8
 pending : [9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 14]


New level: 9
 pending : [9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 14]


Before reduction : 
 pending  : [9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 9 : {9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 14]


Solution : [0, 10, 1, 5, 6, 11, 2, 14] has cost 65.


Before backtrack at level 9
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 2, 14]

After backtrack at level 9
 pending : [9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 14]


Invert decision for 14 at level 8


New level: 9
 pending : [9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]


Before reduction : 
 pending  : [9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]


Solution : [0, 10, 1, 5, 6, 11, 2] has cost 59.


Decide in level 9 among pending : [9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 9 with phase True at level 9

After decision at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 9]


New level: 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 9]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 10 : {12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 9]


Solution : [0, 10, 1, 5, 6, 11, 2, 9] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 2, 9]

After backtrack at level 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2, 9]


Invert decision for 9 at level 9


New level: 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]

Essensial at level 10 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 10 : {16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 2, 12]


Solution : [0, 10, 1, 5, 6, 11, 2, 12] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 2, 12]

After backtrack at level 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]


Before backtrack at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31]
 solution : [0, 10, 1, 5, 6, 11, 2]

After backtrack at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 9]
 solution : [0, 10, 1, 5, 6, 11, 2]


Before backtrack at level 8
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 9]
 solution : [0, 10, 1, 5, 6, 11, 2]

After backtrack at level 8
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 9, 14]
 solution : [0, 10, 1, 5, 6, 11, 2]


Before backtrack at level 7
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 9, 14]
 solution : [0, 10, 1, 5, 6, 11, 2]

After backtrack at level 7
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 9, 14, 7]
 solution : [0, 10, 1, 5, 6, 11, 2]


Before backtrack at level 6
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 9, 14, 7]
 solution : [0, 10, 1, 5, 6, 11, 2]

After backtrack at level 6
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 9, 14, 7, 4, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11, 2]


Invert decision for 2 at level 5


New level: 6
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 9, 14, 7, 4, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 9, 14, 7, 4, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 1), (30, 8), (31, 1), (32, 32), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 9, 14, 7, 4, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11]


Solution : [0, 10, 1, 5, 6, 11] has cost 46.


Decide in level 6 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 9, 14, 7, 4, 8, 24, 25, 27, 32, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 1), (30, 8), (31, 1), (32, 32), (33, -1)]

Decide 26 with phase True at level 6

After decision at level 6
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 9, 14, 7, 4, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11, 26]


New level: 7
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 9, 14, 7, 4, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11, 26]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 9, 14, 7, 4, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 1), (30, 8), (31, 1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, 0), (29, 0), (30, 2), (31, 0), (32, 8), (33, -1)]

Covered at level 7 : {28, 29, 31}

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 4, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11, 26]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 4, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, 0), (29, 0), (30, 2), (31, 0), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, 8), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 4, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11, 26]


Solution : [0, 10, 1, 5, 6, 11, 26] has cost 56.


Decide in level 7 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 4, 8, 24, 25, 27, 32, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, 8), (33, -1)]

Decide 4 with phase True at level 7

After decision at level 7
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


New level: 8
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, 0), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

Covered at level 8 : {32, 8, 24, 25, 27}

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, 0), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Solution : [0, 10, 1, 5, 6, 11, 26, 4] has cost 62.


Decide in level 8 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 14 with phase True at level 8

After decision at level 8
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 14]


New level: 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 14]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {3, 7, 9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 14]


Solution : [0, 10, 1, 5, 6, 11, 26, 4, 14] has cost 68.


Before backtrack at level 9
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 14]

After backtrack at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 14]


Invert decision for 14 at level 8


New level: 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Solution : [0, 10, 1, 5, 6, 11, 26, 4] has cost 62.


Decide in level 9 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 9

After decision at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 7]


New level: 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 7]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {3, 9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 7]


Solution : [0, 10, 1, 5, 6, 11, 26, 4, 7] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 7]

After backtrack at level 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 7]


Invert decision for 7 at level 9


New level: 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Solution : [0, 10, 1, 5, 6, 11, 26, 4] has cost 62.


Decide in level 10 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 3 with phase True at level 10

After decision at level 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 3]


New level: 11
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 3]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 3]


Solution : [0, 10, 1, 5, 6, 11, 26, 4, 3] has cost 75.


Before backtrack at level 11
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 3]

After backtrack at level 11
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 3]


Invert decision for 3 at level 10


New level: 11
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Solution : [0, 10, 1, 5, 6, 11, 26, 4] has cost 62.


Decide in level 11 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 12]


New level: 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {9, 16, 17, 18, 19, 20, 21, 22, 23, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 12]


Solution : [0, 10, 1, 5, 6, 11, 26, 4, 12] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 12]

After backtrack at level 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]

Essensial at level 12 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {16, 17, 18, 19, 20, 21, 22, 23, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 9]


Solution : [0, 10, 1, 5, 6, 11, 26, 4, 9] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 26, 4, 9]

After backtrack at level 12
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Before backtrack at level 11
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]

After backtrack at level 11
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Before backtrack at level 10
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]

After backtrack at level 10
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Before backtrack at level 9
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 3]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]

After backtrack at level 9
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 3, 7]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Before backtrack at level 8
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 3, 7]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]

After backtrack at level 8
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 3, 7, 8, 24, 25, 27, 32, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 4]


Invert decision for 4 at level 7


New level: 8
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 3, 7, 8, 24, 25, 27, 32, 14]
 solution : [0, 10, 1, 5, 6, 11, 26]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 3, 7, 8, 24, 25, 27, 32, 14]
 solution : [0, 10, 1, 5, 6, 11, 26]

Essensial at level 8 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

Covered at level 8 : {24, 25, 32, 27}

After reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 3, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 3, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 3, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]


Solution : [0, 10, 1, 5, 6, 11, 26, 8] has cost 62.


Decide in level 8 among pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 3, 7, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 3 with phase True at level 8

After decision at level 8
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 3]


New level: 9
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 3]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 3]


Solution : [0, 10, 1, 5, 6, 11, 26, 8, 3] has cost 75.


Before backtrack at level 9
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 3]

After backtrack at level 9
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 3]


Invert decision for 3 at level 8


New level: 9
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]


Solution : [0, 10, 1, 5, 6, 11, 26, 8] has cost 62.


Decide in level 9 among pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 7, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 9

After decision at level 9
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 7]


New level: 10
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 7]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 7]


Solution : [0, 10, 1, 5, 6, 11, 26, 8, 7] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 7]

After backtrack at level 10
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 7]


Invert decision for 7 at level 9


New level: 10
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]


Solution : [0, 10, 1, 5, 6, 11, 26, 8] has cost 62.


Decide in level 10 among pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 14]


New level: 11
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 14]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 14]


Solution : [0, 10, 1, 5, 6, 11, 26, 8, 14] has cost 68.


Before backtrack at level 11
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 14]

After backtrack at level 11
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]


Solution : [0, 10, 1, 5, 6, 11, 26, 8] has cost 62.


Decide in level 11 among pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 9]


New level: 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {12, 16, 17, 18, 19, 20, 21, 22, 23, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 9]


Solution : [0, 10, 1, 5, 6, 11, 26, 8, 9] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 9]

After backtrack at level 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 20, 21, 22, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]

Essensial at level 12 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {16, 17, 18, 19, 20, 21, 22, 23, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 12]


Solution : [0, 10, 1, 5, 6, 11, 26, 8, 12] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 26, 8, 12]

After backtrack at level 12
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]


Before backtrack at level 11
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]

After backtrack at level 11
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]


Before backtrack at level 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]

After backtrack at level 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]


Before backtrack at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]

After backtrack at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]


Before backtrack at level 8
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7]
 solution : [0, 10, 1, 5, 6, 11, 26, 8]

After backtrack at level 8
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11, 26]


Before backtrack at level 7
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 8, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11, 26]

After backtrack at level 7
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 8, 24, 25, 27, 32, 3, 28, 29, 31, 4]
 solution : [0, 10, 1, 5, 6, 11, 26]


Invert decision for 26 at level 6


New level: 7
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 8, 24, 25, 27, 32, 3, 28, 29, 31, 4]
 solution : [0, 10, 1, 5, 6, 11]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 8, 24, 25, 27, 32, 3, 28, 29, 31, 4]
 solution : [0, 10, 1, 5, 6, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, -1), (27, 32), (28, 128), (29, 1), (30, 8), (31, 1), (32, 32), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 8, 24, 25, 27, 32, 3, 28, 29, 31, 4]
 solution : [0, 10, 1, 5, 6, 11]


Solution : [0, 10, 1, 5, 6, 11] has cost 46.


Decide in level 7 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 8, 24, 25, 27, 32, 3, 28, 29, 31, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, -1), (27, 32), (28, 128), (29, 1), (30, 8), (31, 1), (32, 32), (33, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 24, 25, 27, 32, 3, 28, 29, 31, 4]
 solution : [0, 10, 1, 5, 6, 11, 8]


New level: 8
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 24, 25, 27, 32, 3, 28, 29, 31, 4]
 solution : [0, 10, 1, 5, 6, 11, 8]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 24, 25, 27, 32, 3, 28, 29, 31, 4]
 solution : [0, 10, 1, 5, 6, 11, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, -1), (27, 32), (28, 128), (29, 1), (30, 8), (31, 1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 8 : {32, 4, 24, 25, 27}

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]


Solution : [0, 10, 1, 5, 6, 11, 8] has cost 52.


Decide in level 8 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 14, 7, 3, 28, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 14 with phase True at level 8

After decision at level 8
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 14]


New level: 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 14]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 9 : {3, 7, 9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 14]


Solution : [0, 10, 1, 5, 6, 11, 8, 14] has cost 58.


Before backtrack at level 9
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 8, 14]

After backtrack at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 14]


Invert decision for 14 at level 8


New level: 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]


Solution : [0, 10, 1, 5, 6, 11, 8] has cost 52.


Decide in level 9 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 7, 3, 28, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 7 with phase True at level 9

After decision at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 7]


New level: 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 7]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 10 : {3, 9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 7]


Solution : [0, 10, 1, 5, 6, 11, 8, 7] has cost 58.


Before backtrack at level 10
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 8, 7]

After backtrack at level 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 7]


Invert decision for 7 at level 9


New level: 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]


Solution : [0, 10, 1, 5, 6, 11, 8] has cost 52.


Decide in level 10 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 3, 28, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 3 with phase True at level 10

After decision at level 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 3]


New level: 11
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 3]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 11 : {9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 3]


Solution : [0, 10, 1, 5, 6, 11, 8, 3] has cost 65.


Before backtrack at level 11
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 8, 3]

After backtrack at level 11
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 3]


Invert decision for 3 at level 10


New level: 11
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]


Solution : [0, 10, 1, 5, 6, 11, 8] has cost 52.


Decide in level 11 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 12]


New level: 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {9, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 12]


Solution : [0, 10, 1, 5, 6, 11, 8, 12] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 8, 12]

After backtrack at level 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 20, 21, 22, 23, 30, 9, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]

Essensial at level 12 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 8, 9]


Solution : [0, 10, 1, 5, 6, 11, 8, 9] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 8, 9]

After backtrack at level 12
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]


Before backtrack at level 11
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 8]

After backtrack at level 11
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 8]


Before backtrack at level 10
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 8]

After backtrack at level 10
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 3]
 solution : [0, 10, 1, 5, 6, 11, 8]


Before backtrack at level 9
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 3]
 solution : [0, 10, 1, 5, 6, 11, 8]

After backtrack at level 9
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 3, 7]
 solution : [0, 10, 1, 5, 6, 11, 8]


Before backtrack at level 8
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 3, 7]
 solution : [0, 10, 1, 5, 6, 11, 8]

After backtrack at level 8
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 3, 7, 24, 25, 27, 32, 4, 14]
 solution : [0, 10, 1, 5, 6, 11, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 3, 7, 24, 25, 27, 32, 4, 14]
 solution : [0, 10, 1, 5, 6, 11]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 3, 7, 24, 25, 27, 32, 4, 14]
 solution : [0, 10, 1, 5, 6, 11]

Essensial at level 8 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 8 : {24, 25, 32, 27}

After reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 3, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 4]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 3, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 3, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 4]


Solution : [0, 10, 1, 5, 6, 11, 4] has cost 52.


Decide in level 8 among pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 3, 7, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 3 with phase True at level 8

After decision at level 8
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 4, 3]


New level: 9
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 4, 3]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 4, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 9 : {7, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 3]


Solution : [0, 10, 1, 5, 6, 11, 4, 3] has cost 65.


Before backtrack at level 9
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 4, 3]

After backtrack at level 9
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 4, 3]


Invert decision for 3 at level 8


New level: 9
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 4]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 7, 14]
 solution : [0, 10, 1, 5, 6, 11, 4]


Solution : [0, 10, 1, 5, 6, 11, 4] has cost 52.


Decide in level 9 among pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 7, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 7 with phase True at level 9

After decision at level 9
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 4, 7]


New level: 10
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 4, 7]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 4, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 10 : {9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 7]


Solution : [0, 10, 1, 5, 6, 11, 4, 7] has cost 58.


Before backtrack at level 10
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 4, 7]

After backtrack at level 10
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 4, 7]


Invert decision for 7 at level 9


New level: 10
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 4]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 14]
 solution : [0, 10, 1, 5, 6, 11, 4]


Solution : [0, 10, 1, 5, 6, 11, 4] has cost 52.


Decide in level 10 among pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 4, 14]


New level: 11
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 4, 14]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 4, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 11 : {9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 14]


Solution : [0, 10, 1, 5, 6, 11, 4, 14] has cost 58.


Before backtrack at level 11
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 4, 14]

After backtrack at level 11
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 4, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 4]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 4]


Solution : [0, 10, 1, 5, 6, 11, 4] has cost 52.


Decide in level 11 among pending : [9, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 4, 9]


New level: 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 4, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 4, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {12, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 9]


Solution : [0, 10, 1, 5, 6, 11, 4, 9] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 4, 9]

After backtrack at level 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 4, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 11, 4]

Essensial at level 12 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 11, 4, 12]


Solution : [0, 10, 1, 5, 6, 11, 4, 12] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 5, 6, 11, 4, 12]

After backtrack at level 12
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 4]


Before backtrack at level 11
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31]
 solution : [0, 10, 1, 5, 6, 11, 4]

After backtrack at level 11
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9]
 solution : [0, 10, 1, 5, 6, 11, 4]


Before backtrack at level 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9]
 solution : [0, 10, 1, 5, 6, 11, 4]

After backtrack at level 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14]
 solution : [0, 10, 1, 5, 6, 11, 4]


Before backtrack at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14]
 solution : [0, 10, 1, 5, 6, 11, 4]

After backtrack at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14, 7]
 solution : [0, 10, 1, 5, 6, 11, 4]


Before backtrack at level 8
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14, 7]
 solution : [0, 10, 1, 5, 6, 11, 4]

After backtrack at level 8
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11]


Before backtrack at level 7
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3]
 solution : [0, 10, 1, 5, 6, 11]

After backtrack at level 7
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8]
 solution : [0, 10, 1, 5, 6, 11]


Before backtrack at level 6
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8]
 solution : [0, 10, 1, 5, 6, 11]

After backtrack at level 6
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 26]
 solution : [0, 10, 1, 5, 6, 11]


Before backtrack at level 5
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 26]
 solution : [0, 10, 1, 5, 6, 11]

After backtrack at level 5
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 26, 13, 15, 2]
 solution : [0, 10, 1, 5, 6, 11]


Invert decision for 11 at level 4


New level: 5
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 26, 13, 15, 2]
 solution : [0, 10, 1, 5, 6]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 26, 13, 15, 2]
 solution : [0, 10, 1, 5, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 26, 13, 15, 2]
 solution : [0, 10, 1, 5, 6]


Solution : [0, 10, 1, 5, 6] has cost 41.


Decide in level 5 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 28, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 26, 13, 15, 2]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 26, 13, 15, 2]
 solution : [0, 10, 1, 5, 6, 28]


New level: 6
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 26, 13, 15, 2]
 solution : [0, 10, 1, 5, 6, 28]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 26, 13, 15, 2]
 solution : [0, 10, 1, 5, 6, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, 128), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, 0), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 6 : {26}

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 13, 15, 2]
 solution : [0, 10, 1, 5, 6, 28]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 13, 15, 2]
 solution : [0, 10, 1, 5, 6, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, 0), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 13, 15, 2]
 solution : [0, 10, 1, 5, 6, 28]


Solution : [0, 10, 1, 5, 6, 28] has cost 51.


Decide in level 6 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 29, 31, 9, 14, 7, 4, 24, 25, 27, 32, 3, 8, 13, 15, 2]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Decide 14 with phase True at level 6

After decision at level 6
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 29, 31, 9, 7, 4, 24, 25, 27, 32, 3, 8, 13, 15, 2]
 solution : [0, 10, 1, 5, 6, 28, 14]


New level: 7
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 29, 31, 9, 7, 4, 24, 25, 27, 32, 3, 8, 13, 15, 2]
 solution : [0, 10, 1, 5, 6, 28, 14]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 30, 29, 31, 9, 7, 4, 24, 25, 27, 32, 3, 8, 13, 15, 2]
 solution : [0, 10, 1, 5, 6, 28, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 0), (4, 128), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 2), (17, 2), (18, 2), (19, 2), (20, 0), (21, 2), (22, 2), (23, 0), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

Covered at level 7 : {3, 7, 9, 12, 13, 15, 20, 23, 29, 30, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 4, 24, 25, 27, 32, 8, 2]
 solution : [0, 10, 1, 5, 6, 28, 14]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 4, 24, 25, 27, 32, 8, 2]
 solution : [0, 10, 1, 5, 6, 28, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 0), (4, 128), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 2), (17, 2), (18, 2), (19, 2), (20, 0), (21, 2), (22, 2), (23, 0), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, -1), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 4, 24, 25, 27, 32, 8, 2]
 solution : [0, 10, 1, 5, 6, 28, 14]


Solution : [0, 10, 1, 5, 6, 28, 14] has cost 57.


Decide in level 7 among pending : [16, 17, 18, 19, 21, 22, 4, 24, 25, 27, 32, 8, 2]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, -1), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Decide 4 with phase True at level 7

After decision at level 7
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 2]
 solution : [0, 10, 1, 5, 6, 28, 14, 4]


New level: 8
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 2]
 solution : [0, 10, 1, 5, 6, 28, 14, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 2]
 solution : [0, 10, 1, 5, 6, 28, 14, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, -1), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

Covered at level 8 : {32, 2, 8, 16, 17, 18, 19, 21, 22, 24, 25, 27}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 14, 4]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 14, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 14, 4]


Solution : [0, 10, 1, 5, 6, 28, 14, 4] has cost 63.


Before backtrack at level 8
 pending : []
 solution : [0, 10, 1, 5, 6, 28, 14, 4]

After backtrack at level 8
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 2]
 solution : [0, 10, 1, 5, 6, 28, 14, 4]


Invert decision for 4 at level 7


New level: 8
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 2]
 solution : [0, 10, 1, 5, 6, 28, 14]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 2]
 solution : [0, 10, 1, 5, 6, 28, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, -1), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 2]
 solution : [0, 10, 1, 5, 6, 28, 14]


Solution : [0, 10, 1, 5, 6, 28, 14] has cost 57.


Decide in level 8 among pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 2]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, -1), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Decide 8 with phase True at level 8

After decision at level 8
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 2]
 solution : [0, 10, 1, 5, 6, 28, 14, 8]


New level: 9
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 2]
 solution : [0, 10, 1, 5, 6, 28, 14, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 2]
 solution : [0, 10, 1, 5, 6, 28, 14, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, -1), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

Covered at level 9 : {32, 2, 16, 17, 18, 19, 21, 22, 24, 25, 27}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 14, 8]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 14, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 14, 8]


Solution : [0, 10, 1, 5, 6, 28, 14, 8] has cost 63.


Before backtrack at level 9
 pending : []
 solution : [0, 10, 1, 5, 6, 28, 14, 8]

After backtrack at level 9
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 2]
 solution : [0, 10, 1, 5, 6, 28, 14, 8]


Invert decision for 8 at level 8


New level: 9
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 2]
 solution : [0, 10, 1, 5, 6, 28, 14]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 2]
 solution : [0, 10, 1, 5, 6, 28, 14]

Essensial at level 9 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

Covered at level 9 : {32, 16, 17, 18, 19, 21, 22, 24, 25, 27}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 14, 2]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 14, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 14, 2]


Solution : [0, 10, 1, 5, 6, 28, 14, 2] has cost 70.


Before backtrack at level 9
 pending : []
 solution : [0, 10, 1, 5, 6, 28, 14, 2]

After backtrack at level 9
 pending : [2, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32]
 solution : [0, 10, 1, 5, 6, 28, 14]


Before backtrack at level 8
 pending : [2, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32]
 solution : [0, 10, 1, 5, 6, 28, 14]

After backtrack at level 8
 pending : [2, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 28, 14]


Before backtrack at level 7
 pending : [2, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 28, 14]

After backtrack at level 7
 pending : [2, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15, 4]
 solution : [0, 10, 1, 5, 6, 28, 14]


Invert decision for 14 at level 6


New level: 7
 pending : [2, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15, 4]
 solution : [0, 10, 1, 5, 6, 28]


Before reduction : 
 pending  : [2, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15, 4]
 solution : [0, 10, 1, 5, 6, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15, 4]
 solution : [0, 10, 1, 5, 6, 28]


Solution : [0, 10, 1, 5, 6, 28] has cost 51.


Decide in level 7 among pending : [2, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15, 4]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15, 4]
 solution : [0, 10, 1, 5, 6, 28, 2]


New level: 8
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15, 4]
 solution : [0, 10, 1, 5, 6, 28, 2]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15, 4]
 solution : [0, 10, 1, 5, 6, 28, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 0), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 8 : {32, 4, 8, 24, 25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 2]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 0), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 2]


Solution : [0, 10, 1, 5, 6, 28, 2] has cost 64.


Before backtrack at level 8
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 2]

After backtrack at level 8
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15, 24, 25, 27, 32, 8, 4]
 solution : [0, 10, 1, 5, 6, 28, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15, 24, 25, 27, 32, 8, 4]
 solution : [0, 10, 1, 5, 6, 28]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15, 24, 25, 27, 32, 8, 4]
 solution : [0, 10, 1, 5, 6, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15, 24, 25, 27, 32, 8, 4]
 solution : [0, 10, 1, 5, 6, 28]


Solution : [0, 10, 1, 5, 6, 28] has cost 51.


Decide in level 8 among pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 7, 3, 13, 15, 24, 25, 27, 32, 8, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Decide 7 with phase True at level 8

After decision at level 8
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15, 24, 25, 27, 32, 8, 4]
 solution : [0, 10, 1, 5, 6, 28, 7]


New level: 9
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15, 24, 25, 27, 32, 8, 4]
 solution : [0, 10, 1, 5, 6, 28, 7]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15, 24, 25, 27, 32, 8, 4]
 solution : [0, 10, 1, 5, 6, 28, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 2), (17, 2), (18, 2), (19, 2), (20, 0), (21, 2), (22, 2), (23, 0), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

Covered at level 9 : {3, 9, 12, 13, 15, 20, 23, 29, 30, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 4]
 solution : [0, 10, 1, 5, 6, 28, 7]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 4]
 solution : [0, 10, 1, 5, 6, 28, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 2), (17, 2), (18, 2), (19, 2), (20, 0), (21, 2), (22, 2), (23, 0), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, -1), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 4]
 solution : [0, 10, 1, 5, 6, 28, 7]


Solution : [0, 10, 1, 5, 6, 28, 7] has cost 57.


Decide in level 9 among pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, -1), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 4]
 solution : [0, 10, 1, 5, 6, 28, 7, 8]


New level: 10
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 4]
 solution : [0, 10, 1, 5, 6, 28, 7, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 4]
 solution : [0, 10, 1, 5, 6, 28, 7, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, -1), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

Covered at level 10 : {32, 4, 16, 17, 18, 19, 21, 22, 24, 25, 27}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 7, 8]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 7, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 7, 8]


Solution : [0, 10, 1, 5, 6, 28, 7, 8] has cost 63.


Before backtrack at level 10
 pending : []
 solution : [0, 10, 1, 5, 6, 28, 7, 8]

After backtrack at level 10
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 4]
 solution : [0, 10, 1, 5, 6, 28, 7, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 4]
 solution : [0, 10, 1, 5, 6, 28, 7]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 4]
 solution : [0, 10, 1, 5, 6, 28, 7]

Essensial at level 10 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

Covered at level 10 : {32, 16, 17, 18, 19, 21, 22, 24, 25, 27}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 7, 4]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 7, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 7, 4]


Solution : [0, 10, 1, 5, 6, 28, 7, 4] has cost 63.


Before backtrack at level 10
 pending : []
 solution : [0, 10, 1, 5, 6, 28, 7, 4]

After backtrack at level 10
 pending : [4, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32]
 solution : [0, 10, 1, 5, 6, 28, 7]


Before backtrack at level 9
 pending : [4, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32]
 solution : [0, 10, 1, 5, 6, 28, 7]

After backtrack at level 9
 pending : [4, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15, 8]
 solution : [0, 10, 1, 5, 6, 28, 7]


Invert decision for 7 at level 8


New level: 9
 pending : [4, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15, 8]
 solution : [0, 10, 1, 5, 6, 28]


Before reduction : 
 pending  : [4, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15, 8]
 solution : [0, 10, 1, 5, 6, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [4, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15, 8]
 solution : [0, 10, 1, 5, 6, 28]


Solution : [0, 10, 1, 5, 6, 28] has cost 51.


Decide in level 9 among pending : [4, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Decide 4 with phase True at level 9

After decision at level 9
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15, 8]
 solution : [0, 10, 1, 5, 6, 28, 4]


New level: 10
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15, 8]
 solution : [0, 10, 1, 5, 6, 28, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15, 8]
 solution : [0, 10, 1, 5, 6, 28, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 10 : {32, 8, 24, 25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 4]


Solution : [0, 10, 1, 5, 6, 28, 4] has cost 57.


Decide in level 10 among pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 3, 13, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 3 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 4, 3]


New level: 11
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 4, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 4, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 11 : {9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 4, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 4, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 4, 3]


Solution : [0, 10, 1, 5, 6, 28, 4, 3] has cost 70.


Before backtrack at level 11
 pending : []
 solution : [0, 10, 1, 5, 6, 28, 4, 3]

After backtrack at level 11
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 4, 3]


Invert decision for 3 at level 10


New level: 11
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 13, 15]
 solution : [0, 10, 1, 5, 6, 28, 4]


Solution : [0, 10, 1, 5, 6, 28, 4] has cost 57.


Decide in level 11 among pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 13, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 28, 4, 13]


New level: 12
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 28, 4, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 28, 4, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 0), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {15, 29, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 28, 4, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 28, 4, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 0), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 28, 4, 13]


Solution : [0, 10, 1, 5, 6, 28, 4, 13] has cost 62.


Before backtrack at level 12
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 9]
 solution : [0, 10, 1, 5, 6, 28, 4, 13]

After backtrack at level 12
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 4, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 4]


Solution : [0, 10, 1, 5, 6, 28, 4] has cost 57.


Decide in level 12 among pending : [16, 17, 18, 19, 21, 22, 12, 20, 23, 30, 9, 29, 31, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 4, 12]


New level: 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 4, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 4, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 4, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 4, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 4, 12]


Solution : [0, 10, 1, 5, 6, 28, 4, 12] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 10, 1, 5, 6, 28, 4, 12]

After backtrack at level 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 4, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 4]

Essensial at level 13 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 4, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 4, 9]


Solution : [0, 10, 1, 5, 6, 28, 4, 9] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 10, 1, 5, 6, 28, 4, 9]

After backtrack at level 13
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 4]


Before backtrack at level 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 4]

After backtrack at level 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 28, 4]


Before backtrack at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 28, 4]

After backtrack at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 28, 4]


Before backtrack at level 10
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 28, 4]

After backtrack at level 10
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 24, 25, 27, 32, 8, 3]
 solution : [0, 10, 1, 5, 6, 28, 4]


Invert decision for 4 at level 9


New level: 10
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 24, 25, 27, 32, 8, 3]
 solution : [0, 10, 1, 5, 6, 28]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 24, 25, 27, 32, 8, 3]
 solution : [0, 10, 1, 5, 6, 28]

Essensial at level 10 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 10 : {24, 25, 32, 27}

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 3]
 solution : [0, 10, 1, 5, 6, 28, 8]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 3]
 solution : [0, 10, 1, 5, 6, 28, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 3]
 solution : [0, 10, 1, 5, 6, 28, 8]


Solution : [0, 10, 1, 5, 6, 28, 8] has cost 57.


Decide in level 10 among pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 3]
 solution : [0, 10, 1, 5, 6, 28, 8, 13]


New level: 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 3]
 solution : [0, 10, 1, 5, 6, 28, 8, 13]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 3]
 solution : [0, 10, 1, 5, 6, 28, 8, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 0), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

Covered at level 11 : {15, 29, 31}

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 3]
 solution : [0, 10, 1, 5, 6, 28, 8, 13]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 3]
 solution : [0, 10, 1, 5, 6, 28, 8, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 0), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 3]
 solution : [0, 10, 1, 5, 6, 28, 8, 13]


Solution : [0, 10, 1, 5, 6, 28, 8, 13] has cost 62.


Before backtrack at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 3]
 solution : [0, 10, 1, 5, 6, 28, 8, 13]

After backtrack at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 3, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 3, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 3, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 3, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8]


Solution : [0, 10, 1, 5, 6, 28, 8] has cost 57.


Decide in level 11 among pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 3, 29, 31, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 3 with phase True at level 11

After decision at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8, 3]


New level: 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8, 3]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 8, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 8, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 8, 3]


Solution : [0, 10, 1, 5, 6, 28, 8, 3] has cost 70.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 5, 6, 28, 8, 3]

After backtrack at level 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8, 3]


Invert decision for 3 at level 11


New level: 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8]


Solution : [0, 10, 1, 5, 6, 28, 8] has cost 57.


Decide in level 12 among pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 9 with phase True at level 12

After decision at level 12
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8, 9]


New level: 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 8, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 8, 9]


Solution : [0, 10, 1, 5, 6, 28, 8, 9] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 10, 1, 5, 6, 28, 8, 9]

After backtrack at level 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8, 9]


Invert decision for 9 at level 12


New level: 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8]

Essensial at level 13 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 8, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 8, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 28, 8, 12]


Solution : [0, 10, 1, 5, 6, 28, 8, 12] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 10, 1, 5, 6, 28, 8, 12]

After backtrack at level 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8]


Before backtrack at level 12
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 28, 8]

After backtrack at level 12
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 28, 8]


Before backtrack at level 11
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 28, 8]

After backtrack at level 11
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3]
 solution : [0, 10, 1, 5, 6, 28, 8]


Before backtrack at level 10
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3]
 solution : [0, 10, 1, 5, 6, 28, 8]

After backtrack at level 10
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3, 8, 24, 25, 27, 32, 13]
 solution : [0, 10, 1, 5, 6, 28]


Before backtrack at level 9
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3, 8, 24, 25, 27, 32, 13]
 solution : [0, 10, 1, 5, 6, 28]

After backtrack at level 9
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3, 8, 24, 25, 27, 32, 13, 4]
 solution : [0, 10, 1, 5, 6, 28]


Before backtrack at level 8
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3, 8, 24, 25, 27, 32, 13, 4]
 solution : [0, 10, 1, 5, 6, 28]

After backtrack at level 8
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3, 8, 24, 25, 27, 32, 13, 4, 7]
 solution : [0, 10, 1, 5, 6, 28]


Before backtrack at level 7
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3, 8, 24, 25, 27, 32, 13, 4, 7]
 solution : [0, 10, 1, 5, 6, 28]

After backtrack at level 7
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3, 8, 24, 25, 27, 32, 13, 4, 7, 2]
 solution : [0, 10, 1, 5, 6, 28]


Before backtrack at level 6
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3, 8, 24, 25, 27, 32, 13, 4, 7, 2]
 solution : [0, 10, 1, 5, 6, 28]

After backtrack at level 6
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3, 8, 24, 25, 27, 32, 13, 4, 7, 2, 26, 14]
 solution : [0, 10, 1, 5, 6, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3, 8, 24, 25, 27, 32, 13, 4, 7, 2, 26, 14]
 solution : [0, 10, 1, 5, 6]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3, 8, 24, 25, 27, 32, 13, 4, 7, 2, 26, 14]
 solution : [0, 10, 1, 5, 6]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3, 8, 24, 25, 27, 32, 13, 4, 7, 2, 26, 14]
 solution : [0, 10, 1, 5, 6]


Solution : [0, 10, 1, 5, 6] has cost 41.


Decide in level 6 among pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 3, 8, 24, 25, 27, 32, 13, 4, 7, 2, 26, 14]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Decide 3 with phase True at level 6

After decision at level 6
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 8, 24, 25, 27, 32, 13, 4, 7, 2, 26, 14]
 solution : [0, 10, 1, 5, 6, 3]


New level: 7
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 8, 24, 25, 27, 32, 13, 4, 7, 2, 26, 14]
 solution : [0, 10, 1, 5, 6, 3]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 8, 24, 25, 27, 32, 13, 4, 7, 2, 26, 14]
 solution : [0, 10, 1, 5, 6, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 6), (17, 6), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 2), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, 0), (30, 2), (31, 0), (32, 32), (33, -1)]

Covered at level 7 : {7, 9, 12, 13, 14, 15, 29, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 8, 24, 25, 27, 32, 4, 2, 26]
 solution : [0, 10, 1, 5, 6, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 8, 24, 25, 27, 32, 4, 2, 26]
 solution : [0, 10, 1, 5, 6, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 6), (17, 6), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 2), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, 0), (30, 2), (31, 0), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 2), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, -1), (30, 2), (31, -1), (32, 32), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 8, 24, 25, 27, 32, 4, 2, 26]
 solution : [0, 10, 1, 5, 6, 3]


Solution : [0, 10, 1, 5, 6, 3] has cost 54.


Decide in level 7 among pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 8, 24, 25, 27, 32, 4, 2, 26]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 2), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, -1), (30, 2), (31, -1), (32, 32), (33, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 4, 2, 26]
 solution : [0, 10, 1, 5, 6, 3, 8]


New level: 8
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 4, 2, 26]
 solution : [0, 10, 1, 5, 6, 3, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 4, 2, 26]
 solution : [0, 10, 1, 5, 6, 3, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 2), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, -1), (30, 2), (31, -1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

Covered at level 8 : {32, 2, 4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 3, 8]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 3, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 3, 8]


Solution : [0, 10, 1, 5, 6, 3, 8] has cost 60.


Before backtrack at level 8
 pending : []
 solution : [0, 10, 1, 5, 6, 3, 8]

After backtrack at level 8
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 4, 2, 26]
 solution : [0, 10, 1, 5, 6, 3, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 4, 2, 26]
 solution : [0, 10, 1, 5, 6, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 4, 2, 26]
 solution : [0, 10, 1, 5, 6, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 2), (24, 9), (25, 9), (26, 32), (27, 32), (28, -1), (29, -1), (30, 2), (31, -1), (32, 32), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 4, 2, 26]
 solution : [0, 10, 1, 5, 6, 3]


Solution : [0, 10, 1, 5, 6, 3] has cost 54.


Decide in level 8 among pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 4, 2, 26]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 2), (24, 9), (25, 9), (26, 32), (27, 32), (28, -1), (29, -1), (30, 2), (31, -1), (32, 32), (33, -1)]

Decide 4 with phase True at level 8

After decision at level 8
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 2, 26]
 solution : [0, 10, 1, 5, 6, 3, 4]


New level: 9
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 2, 26]
 solution : [0, 10, 1, 5, 6, 3, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 2, 26]
 solution : [0, 10, 1, 5, 6, 3, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 2), (24, 9), (25, 9), (26, 32), (27, 32), (28, -1), (29, -1), (30, 2), (31, -1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

Covered at level 9 : {32, 2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 3, 4]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 3, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 3, 4]


Solution : [0, 10, 1, 5, 6, 3, 4] has cost 60.


Before backtrack at level 9
 pending : []
 solution : [0, 10, 1, 5, 6, 3, 4]

After backtrack at level 9
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 2, 26]
 solution : [0, 10, 1, 5, 6, 3, 4]


Invert decision for 4 at level 8


New level: 9
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 2, 26]
 solution : [0, 10, 1, 5, 6, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 2, 26]
 solution : [0, 10, 1, 5, 6, 3]

Essensial at level 9 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

Covered at level 9 : {32, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 3, 2]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 3, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 3, 2]


Solution : [0, 10, 1, 5, 6, 3, 2] has cost 67.


Before backtrack at level 9
 pending : []
 solution : [0, 10, 1, 5, 6, 3, 2]

After backtrack at level 9
 pending : [2, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 26]
 solution : [0, 10, 1, 5, 6, 3]


Before backtrack at level 8
 pending : [2, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 26]
 solution : [0, 10, 1, 5, 6, 3]

After backtrack at level 8
 pending : [2, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 26, 4]
 solution : [0, 10, 1, 5, 6, 3]


Before backtrack at level 7
 pending : [2, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 26, 4]
 solution : [0, 10, 1, 5, 6, 3]

After backtrack at level 7
 pending : [2, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 26, 4, 12, 29, 31, 15, 9, 13, 7, 14, 8]
 solution : [0, 10, 1, 5, 6, 3]


Invert decision for 3 at level 6


New level: 7
 pending : [2, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 26, 4, 12, 29, 31, 15, 9, 13, 7, 14, 8]
 solution : [0, 10, 1, 5, 6]


Before reduction : 
 pending  : [2, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 26, 4, 12, 29, 31, 15, 9, 13, 7, 14, 8]
 solution : [0, 10, 1, 5, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 26, 4, 12, 29, 31, 15, 9, 13, 7, 14, 8]
 solution : [0, 10, 1, 5, 6]


Solution : [0, 10, 1, 5, 6] has cost 41.


Decide in level 7 among pending : [2, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 26, 4, 12, 29, 31, 15, 9, 13, 7, 14, 8]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 26, 4, 12, 29, 31, 15, 9, 13, 7, 14, 8]
 solution : [0, 10, 1, 5, 6, 2]


New level: 8
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 26, 4, 12, 29, 31, 15, 9, 13, 7, 14, 8]
 solution : [0, 10, 1, 5, 6, 2]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 26, 4, 12, 29, 31, 15, 9, 13, 7, 14, 8]
 solution : [0, 10, 1, 5, 6, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, 0), (25, 0), (26, 1), (27, 0), (28, -1), (29, 4), (30, 2), (31, 4), (32, 0), (33, -1)]

Covered at level 8 : {32, 4, 8, 24, 25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 15, 9, 13, 7, 14]
 solution : [0, 10, 1, 5, 6, 2]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 15, 9, 13, 7, 14]
 solution : [0, 10, 1, 5, 6, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, 0), (25, 0), (26, 1), (27, 0), (28, -1), (29, 4), (30, 2), (31, 4), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 15, 9, 13, 7, 14]
 solution : [0, 10, 1, 5, 6, 2]


Solution : [0, 10, 1, 5, 6, 2] has cost 54.


Decide in level 8 among pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 15, 9, 13, 7, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 15, 9, 7, 14]
 solution : [0, 10, 1, 5, 6, 2, 13]


New level: 9
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 15, 9, 7, 14]
 solution : [0, 10, 1, 5, 6, 2, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 15, 9, 7, 14]
 solution : [0, 10, 1, 5, 6, 2, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, 0), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 9 : {15}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 7, 14]
 solution : [0, 10, 1, 5, 6, 2, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 7, 14]
 solution : [0, 10, 1, 5, 6, 2, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, 0), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 7, 14]
 solution : [0, 10, 1, 5, 6, 2, 13]


Solution : [0, 10, 1, 5, 6, 2, 13] has cost 59.


Before backtrack at level 9
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 7, 14]
 solution : [0, 10, 1, 5, 6, 2, 13]

After backtrack at level 9
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 7, 14, 15]
 solution : [0, 10, 1, 5, 6, 2, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 7, 14, 15]
 solution : [0, 10, 1, 5, 6, 2]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 7, 14, 15]
 solution : [0, 10, 1, 5, 6, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 7, 14, 15]
 solution : [0, 10, 1, 5, 6, 2]


Solution : [0, 10, 1, 5, 6, 2] has cost 54.


Decide in level 9 among pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 7, 14, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Decide 7 with phase True at level 9

After decision at level 9
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 14, 15]
 solution : [0, 10, 1, 5, 6, 2, 7]


New level: 10
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 14, 15]
 solution : [0, 10, 1, 5, 6, 2, 7]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 14, 15]
 solution : [0, 10, 1, 5, 6, 2, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 10 : {9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 2, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 2, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 2, 7]


Solution : [0, 10, 1, 5, 6, 2, 7] has cost 60.


Before backtrack at level 10
 pending : []
 solution : [0, 10, 1, 5, 6, 2, 7]

After backtrack at level 10
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 14, 15]
 solution : [0, 10, 1, 5, 6, 2, 7]


Invert decision for 7 at level 9


New level: 10
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 14, 15]
 solution : [0, 10, 1, 5, 6, 2]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 14, 15]
 solution : [0, 10, 1, 5, 6, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 14, 15]
 solution : [0, 10, 1, 5, 6, 2]


Solution : [0, 10, 1, 5, 6, 2] has cost 54.


Decide in level 10 among pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 14, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 2, 14]


New level: 11
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 2, 14]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 2, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 11 : {9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 2, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 2, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 2, 14]


Solution : [0, 10, 1, 5, 6, 2, 14] has cost 60.


Before backtrack at level 11
 pending : []
 solution : [0, 10, 1, 5, 6, 2, 14]

After backtrack at level 11
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 2, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 2]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 2]


Solution : [0, 10, 1, 5, 6, 2] has cost 54.


Decide in level 11 among pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 12, 29, 31, 9, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 2, 12]


New level: 12
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 2, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 2, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 2, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 2, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 2, 12]


Solution : [0, 10, 1, 5, 6, 2, 12] has cost 63.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 5, 6, 2, 12]

After backtrack at level 12
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 2, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 2]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 2]

Essensial at level 12 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 2, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 2, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 2, 9]


Solution : [0, 10, 1, 5, 6, 2, 9] has cost 63.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 5, 6, 2, 9]

After backtrack at level 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 2]


Before backtrack at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 2]

After backtrack at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 2]


Before backtrack at level 10
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 2]

After backtrack at level 10
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 15, 12, 14]
 solution : [0, 10, 1, 5, 6, 2]


Before backtrack at level 9
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 15, 12, 14]
 solution : [0, 10, 1, 5, 6, 2]

After backtrack at level 9
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 15, 12, 14, 7]
 solution : [0, 10, 1, 5, 6, 2]


Before backtrack at level 8
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 15, 12, 14, 7]
 solution : [0, 10, 1, 5, 6, 2]

After backtrack at level 8
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 15, 12, 14, 7, 24, 25, 27, 32, 4, 8, 13]
 solution : [0, 10, 1, 5, 6, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 15, 12, 14, 7, 24, 25, 27, 32, 4, 8, 13]
 solution : [0, 10, 1, 5, 6]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 15, 12, 14, 7, 24, 25, 27, 32, 4, 8, 13]
 solution : [0, 10, 1, 5, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 15, 12, 14, 7, 24, 25, 27, 32, 4, 8, 13]
 solution : [0, 10, 1, 5, 6]


Solution : [0, 10, 1, 5, 6] has cost 41.


Decide in level 8 among pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 26, 29, 31, 15, 12, 14, 7, 24, 25, 27, 32, 4, 8, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14, 7, 24, 25, 27, 32, 4, 8, 13]
 solution : [0, 10, 1, 5, 6, 26]


New level: 9
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14, 7, 24, 25, 27, 32, 4, 8, 13]
 solution : [0, 10, 1, 5, 6, 26]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14, 7, 24, 25, 27, 32, 4, 8, 13]
 solution : [0, 10, 1, 5, 6, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, 128), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14, 7, 24, 25, 27, 32, 4, 8, 13]
 solution : [0, 10, 1, 5, 6, 26]


Solution : [0, 10, 1, 5, 6, 26] has cost 51.


Decide in level 9 among pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14, 7, 24, 25, 27, 32, 4, 8, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Decide 14 with phase True at level 9

After decision at level 9
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7, 24, 25, 27, 32, 4, 8, 13]
 solution : [0, 10, 1, 5, 6, 26, 14]


New level: 10
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7, 24, 25, 27, 32, 4, 8, 13]
 solution : [0, 10, 1, 5, 6, 26, 14]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7, 24, 25, 27, 32, 4, 8, 13]
 solution : [0, 10, 1, 5, 6, 26, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 2), (17, 2), (18, 2), (19, 2), (20, 0), (21, 2), (22, 2), (23, 0), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

Covered at level 10 : {7, 9, 12, 13, 15, 20, 23, 29, 30, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 4, 8]
 solution : [0, 10, 1, 5, 6, 26, 14]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 4, 8]
 solution : [0, 10, 1, 5, 6, 26, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 2), (17, 2), (18, 2), (19, 2), (20, 0), (21, 2), (22, 2), (23, 0), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, -1), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 4, 8]
 solution : [0, 10, 1, 5, 6, 26, 14]


Solution : [0, 10, 1, 5, 6, 26, 14] has cost 57.


Decide in level 10 among pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 4, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, -1), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Decide 4 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 26, 14, 4]


New level: 11
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 26, 14, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 26, 14, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, -1), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

Covered at level 11 : {32, 8, 16, 17, 18, 19, 21, 22, 24, 25, 27}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 14, 4]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 14, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 14, 4]


Solution : [0, 10, 1, 5, 6, 26, 14, 4] has cost 63.


Before backtrack at level 11
 pending : []
 solution : [0, 10, 1, 5, 6, 26, 14, 4]

After backtrack at level 11
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 26, 14, 4]


Invert decision for 4 at level 10


New level: 11
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 26, 14]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 26, 14]

Essensial at level 11 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

Covered at level 11 : {32, 16, 17, 18, 19, 21, 22, 24, 25, 27}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 14, 8]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 14, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 14, 8]


Solution : [0, 10, 1, 5, 6, 26, 14, 8] has cost 63.


Before backtrack at level 11
 pending : []
 solution : [0, 10, 1, 5, 6, 26, 14, 8]

After backtrack at level 11
 pending : [8, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32]
 solution : [0, 10, 1, 5, 6, 26, 14]


Before backtrack at level 10
 pending : [8, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32]
 solution : [0, 10, 1, 5, 6, 26, 14]

After backtrack at level 10
 pending : [8, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 9, 20, 23, 30, 29, 31, 15, 12, 7, 13, 4]
 solution : [0, 10, 1, 5, 6, 26, 14]


Invert decision for 14 at level 9


New level: 10
 pending : [8, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 9, 20, 23, 30, 29, 31, 15, 12, 7, 13, 4]
 solution : [0, 10, 1, 5, 6, 26]


Before reduction : 
 pending  : [8, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 9, 20, 23, 30, 29, 31, 15, 12, 7, 13, 4]
 solution : [0, 10, 1, 5, 6, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [8, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 9, 20, 23, 30, 29, 31, 15, 12, 7, 13, 4]
 solution : [0, 10, 1, 5, 6, 26]


Solution : [0, 10, 1, 5, 6, 26] has cost 51.


Decide in level 10 among pending : [8, 16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 9, 20, 23, 30, 29, 31, 15, 12, 7, 13, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Decide 8 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 9, 20, 23, 30, 29, 31, 15, 12, 7, 13, 4]
 solution : [0, 10, 1, 5, 6, 26, 8]


New level: 11
 pending : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 9, 20, 23, 30, 29, 31, 15, 12, 7, 13, 4]
 solution : [0, 10, 1, 5, 6, 26, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 24, 25, 27, 32, 9, 20, 23, 30, 29, 31, 15, 12, 7, 13, 4]
 solution : [0, 10, 1, 5, 6, 26, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 10), (17, 10), (18, 10), (19, 10), (20, 2), (21, 10), (22, 16), (23, 2), (24, 3), (25, 3), (26, -1), (27, 8), (28, -1), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 11 : {32, 4, 24, 25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12, 7, 13]
 solution : [0, 10, 1, 5, 6, 26, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12, 7, 13]
 solution : [0, 10, 1, 5, 6, 26, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12, 7, 13]
 solution : [0, 10, 1, 5, 6, 26, 8]


Solution : [0, 10, 1, 5, 6, 26, 8] has cost 57.


Decide in level 11 among pending : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12, 7, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 7 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 26, 8, 7]


New level: 12
 pending : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 26, 8, 7]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 26, 8, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 8, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 8, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 8, 7]


Solution : [0, 10, 1, 5, 6, 26, 8, 7] has cost 63.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 5, 6, 26, 8, 7]

After backtrack at level 12
 pending : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 26, 8, 7]


Invert decision for 7 at level 11


New level: 12
 pending : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 26, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 26, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 26, 8]


Solution : [0, 10, 1, 5, 6, 26, 8] has cost 57.


Decide in level 12 among pending : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 26, 8, 13]


New level: 13
 pending : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 26, 8, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 26, 8, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 0), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {15, 29, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 26, 8, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 26, 8, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 0), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 26, 8, 13]


Solution : [0, 10, 1, 5, 6, 26, 8, 13] has cost 62.


Before backtrack at level 13
 pending : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 12]
 solution : [0, 10, 1, 5, 6, 26, 8, 13]

After backtrack at level 13
 pending : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 8, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 8]


Solution : [0, 10, 1, 5, 6, 26, 8] has cost 57.


Decide in level 13 among pending : [16, 17, 18, 19, 21, 22, 9, 20, 23, 30, 12, 29, 31, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 9 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 8, 9]


New level: 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 8, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 8, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 8, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 8, 9]


Solution : [0, 10, 1, 5, 6, 26, 8, 9] has cost 66.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 5, 6, 26, 8, 9]

After backtrack at level 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 8, 9]


Invert decision for 9 at level 13


New level: 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 12, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 8]

Essensial at level 14 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 8, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 8, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 8, 12]


Solution : [0, 10, 1, 5, 6, 26, 8, 12] has cost 66.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 5, 6, 26, 8, 12]

After backtrack at level 14
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 8]


Before backtrack at level 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 8]

After backtrack at level 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 26, 8]


Before backtrack at level 12
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 26, 8]

After backtrack at level 12
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 13]
 solution : [0, 10, 1, 5, 6, 26, 8]


Before backtrack at level 11
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 13]
 solution : [0, 10, 1, 5, 6, 26, 8]

After backtrack at level 11
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 13, 24, 25, 27, 32, 4, 7]
 solution : [0, 10, 1, 5, 6, 26, 8]


Invert decision for 8 at level 10


New level: 11
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 13, 24, 25, 27, 32, 4, 7]
 solution : [0, 10, 1, 5, 6, 26]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 13, 24, 25, 27, 32, 4, 7]
 solution : [0, 10, 1, 5, 6, 26]

Essensial at level 11 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 11 : {24, 25, 32, 27}

After reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 13, 7]
 solution : [0, 10, 1, 5, 6, 26, 4]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 13, 7]
 solution : [0, 10, 1, 5, 6, 26, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 13, 7]
 solution : [0, 10, 1, 5, 6, 26, 4]


Solution : [0, 10, 1, 5, 6, 26, 4] has cost 57.


Decide in level 11 among pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 13, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 7]
 solution : [0, 10, 1, 5, 6, 26, 4, 13]


New level: 12
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 7]
 solution : [0, 10, 1, 5, 6, 26, 4, 13]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9, 7]
 solution : [0, 10, 1, 5, 6, 26, 4, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 0), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {15, 29, 31}

After reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 7]
 solution : [0, 10, 1, 5, 6, 26, 4, 13]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 7]
 solution : [0, 10, 1, 5, 6, 26, 4, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 0), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 7]
 solution : [0, 10, 1, 5, 6, 26, 4, 13]


Solution : [0, 10, 1, 5, 6, 26, 4, 13] has cost 62.


Before backtrack at level 12
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 7]
 solution : [0, 10, 1, 5, 6, 26, 4, 13]

After backtrack at level 12
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 7, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 7, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 7, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 7, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4]


Solution : [0, 10, 1, 5, 6, 26, 4] has cost 57.


Decide in level 12 among pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 7, 29, 31, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 7 with phase True at level 12

After decision at level 12
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4, 7]


New level: 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4, 7]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 4, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 4, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 4, 7]


Solution : [0, 10, 1, 5, 6, 26, 4, 7] has cost 63.


Before backtrack at level 13
 pending : []
 solution : [0, 10, 1, 5, 6, 26, 4, 7]

After backtrack at level 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4, 7]


Invert decision for 7 at level 12


New level: 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4]


Solution : [0, 10, 1, 5, 6, 26, 4] has cost 57.


Decide in level 13 among pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4, 12]


New level: 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 4), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 4, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 4, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 4, 12]


Solution : [0, 10, 1, 5, 6, 26, 4, 12] has cost 66.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 5, 6, 26, 4, 12]

After backtrack at level 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4]

Essensial at level 14 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 4, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 26, 4, 9]


Solution : [0, 10, 1, 5, 6, 26, 4, 9] has cost 66.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 5, 6, 26, 4, 9]

After backtrack at level 14
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4]


Before backtrack at level 13
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 26, 4]

After backtrack at level 13
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 26, 4]


Before backtrack at level 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 26, 4]

After backtrack at level 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7]
 solution : [0, 10, 1, 5, 6, 26, 4]


Before backtrack at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7]
 solution : [0, 10, 1, 5, 6, 26, 4]

After backtrack at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7, 4, 24, 25, 27, 32, 13]
 solution : [0, 10, 1, 5, 6, 26]


Before backtrack at level 10
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7, 4, 24, 25, 27, 32, 13]
 solution : [0, 10, 1, 5, 6, 26]

After backtrack at level 10
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7, 4, 24, 25, 27, 32, 13, 8]
 solution : [0, 10, 1, 5, 6, 26]


Before backtrack at level 9
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7, 4, 24, 25, 27, 32, 13, 8]
 solution : [0, 10, 1, 5, 6, 26]

After backtrack at level 9
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7, 4, 24, 25, 27, 32, 13, 8, 14]
 solution : [0, 10, 1, 5, 6, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7, 4, 24, 25, 27, 32, 13, 8, 14]
 solution : [0, 10, 1, 5, 6]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7, 4, 24, 25, 27, 32, 13, 8, 14]
 solution : [0, 10, 1, 5, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, -1), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7, 4, 24, 25, 27, 32, 13, 8, 14]
 solution : [0, 10, 1, 5, 6]


Solution : [0, 10, 1, 5, 6] has cost 41.


Decide in level 9 among pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 7, 4, 24, 25, 27, 32, 13, 8, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, -1), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Decide 7 with phase True at level 9

After decision at level 9
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 4, 24, 25, 27, 32, 13, 8, 14]
 solution : [0, 10, 1, 5, 6, 7]


New level: 10
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 4, 24, 25, 27, 32, 13, 8, 14]
 solution : [0, 10, 1, 5, 6, 7]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 4, 24, 25, 27, 32, 13, 8, 14]
 solution : [0, 10, 1, 5, 6, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, -1), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 6), (17, 6), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 2), (24, 9), (25, 9), (26, -1), (27, 32), (28, -1), (29, 0), (30, 2), (31, 0), (32, 32), (33, -1)]

Covered at level 10 : {9, 12, 13, 14, 15, 29, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 7]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 6), (17, 6), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 2), (24, 9), (25, 9), (26, -1), (27, 32), (28, -1), (29, 0), (30, 2), (31, 0), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 2), (24, 9), (25, 9), (26, -1), (27, 32), (28, -1), (29, -1), (30, 2), (31, -1), (32, 32), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 7]


Solution : [0, 10, 1, 5, 6, 7] has cost 47.


Decide in level 10 among pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 4, 24, 25, 27, 32, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 2), (24, 9), (25, 9), (26, -1), (27, 32), (28, -1), (29, -1), (30, 2), (31, -1), (32, 32), (33, -1)]

Decide 4 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 7, 4]


New level: 11
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 7, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 7, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 2), (24, 9), (25, 9), (26, -1), (27, 32), (28, -1), (29, -1), (30, 2), (31, -1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

Covered at level 11 : {32, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 7, 4]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 7, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 7, 4]


Solution : [0, 10, 1, 5, 6, 7, 4] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 10, 1, 5, 6, 7, 4]

After backtrack at level 11
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 7, 4]


Invert decision for 4 at level 10


New level: 11
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 7]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5, 6, 7]

Essensial at level 11 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

Covered at level 11 : {32, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 7, 8]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 7, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 7, 8]


Solution : [0, 10, 1, 5, 6, 7, 8] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 10, 1, 5, 6, 7, 8]

After backtrack at level 11
 pending : [8, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32]
 solution : [0, 10, 1, 5, 6, 7]


Before backtrack at level 10
 pending : [8, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32]
 solution : [0, 10, 1, 5, 6, 7]

After backtrack at level 10
 pending : [8, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 9, 29, 31, 15, 12, 13, 14, 4]
 solution : [0, 10, 1, 5, 6, 7]


Invert decision for 7 at level 9


New level: 10
 pending : [8, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 9, 29, 31, 15, 12, 13, 14, 4]
 solution : [0, 10, 1, 5, 6]


Before reduction : 
 pending  : [8, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 9, 29, 31, 15, 12, 13, 14, 4]
 solution : [0, 10, 1, 5, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, -1), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [8, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 9, 29, 31, 15, 12, 13, 14, 4]
 solution : [0, 10, 1, 5, 6]


Solution : [0, 10, 1, 5, 6] has cost 41.


Decide in level 10 among pending : [8, 16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 9, 29, 31, 15, 12, 13, 14, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, -1), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

Decide 8 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 9, 29, 31, 15, 12, 13, 14, 4]
 solution : [0, 10, 1, 5, 6, 8]


New level: 11
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 9, 29, 31, 15, 12, 13, 14, 4]
 solution : [0, 10, 1, 5, 6, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 24, 25, 27, 32, 9, 29, 31, 15, 12, 13, 14, 4]
 solution : [0, 10, 1, 5, 6, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 24), (17, 24), (18, 24), (19, 24), (20, 8), (21, 24), (22, 24), (23, 8), (24, 9), (25, 9), (26, -1), (27, 32), (28, -1), (29, 4), (30, 8), (31, 4), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 4), (30, 2), (31, 4), (32, 0), (33, -1)]

Covered at level 11 : {32, 4, 24, 25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15, 12, 13, 14]
 solution : [0, 10, 1, 5, 6, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15, 12, 13, 14]
 solution : [0, 10, 1, 5, 6, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 4), (30, 2), (31, 4), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15, 12, 13, 14]
 solution : [0, 10, 1, 5, 6, 8]


Solution : [0, 10, 1, 5, 6, 8] has cost 47.


Decide in level 11 among pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15, 12, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15, 12, 14]
 solution : [0, 10, 1, 5, 6, 8, 13]


New level: 12
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15, 12, 14]
 solution : [0, 10, 1, 5, 6, 8, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 15, 12, 14]
 solution : [0, 10, 1, 5, 6, 8, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, 0), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 12 : {15}

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 12, 14]
 solution : [0, 10, 1, 5, 6, 8, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 12, 14]
 solution : [0, 10, 1, 5, 6, 8, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, 0), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 12, 14]
 solution : [0, 10, 1, 5, 6, 8, 13]


Solution : [0, 10, 1, 5, 6, 8, 13] has cost 52.


Decide in level 12 among pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 8, 13, 14]


New level: 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 8, 13, 14]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 8, 13, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 13, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 13, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 13, 14]


Solution : [0, 10, 1, 5, 6, 8, 13, 14] has cost 58.


Before backtrack at level 13
 pending : []
 solution : [0, 10, 1, 5, 6, 8, 13, 14]

After backtrack at level 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 8, 13, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 8, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 8, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 8, 13]


Solution : [0, 10, 1, 5, 6, 8, 13] has cost 52.


Decide in level 13 among pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 9, 29, 31, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 9 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 8, 13, 9]


New level: 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 8, 13, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 8, 13, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {12, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 13, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 13, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 13, 9]


Solution : [0, 10, 1, 5, 6, 8, 13, 9] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 5, 6, 8, 13, 9]

After backtrack at level 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 8, 13, 9]


Invert decision for 9 at level 13


New level: 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 8, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 8, 13]

Essensial at level 14 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 13, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 13, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 13, 12]


Solution : [0, 10, 1, 5, 6, 8, 13, 12] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 5, 6, 8, 13, 12]

After backtrack at level 14
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31]
 solution : [0, 10, 1, 5, 6, 8, 13]


Before backtrack at level 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31]
 solution : [0, 10, 1, 5, 6, 8, 13]

After backtrack at level 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9]
 solution : [0, 10, 1, 5, 6, 8, 13]


Before backtrack at level 12
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9]
 solution : [0, 10, 1, 5, 6, 8, 13]

After backtrack at level 12
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15, 14]
 solution : [0, 10, 1, 5, 6, 8, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15, 14]
 solution : [0, 10, 1, 5, 6, 8]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15, 14]
 solution : [0, 10, 1, 5, 6, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15, 14]
 solution : [0, 10, 1, 5, 6, 8]


Solution : [0, 10, 1, 5, 6, 8] has cost 47.


Decide in level 12 among pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 8, 14]


New level: 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 8, 14]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 14]


Solution : [0, 10, 1, 5, 6, 8, 14] has cost 53.


Before backtrack at level 13
 pending : []
 solution : [0, 10, 1, 5, 6, 8, 14]

After backtrack at level 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 8, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 8]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 8]


Solution : [0, 10, 1, 5, 6, 8] has cost 47.


Decide in level 13 among pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 8, 12]


New level: 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 8, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 8, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 12]


Solution : [0, 10, 1, 5, 6, 8, 12] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 5, 6, 8, 12]

After backtrack at level 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 8, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 9, 15]
 solution : [0, 10, 1, 5, 6, 8]

Essensial at level 14 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 8, 9]


Solution : [0, 10, 1, 5, 6, 8, 9] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 5, 6, 8, 9]

After backtrack at level 14
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 8]


Before backtrack at level 13
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 8]

After backtrack at level 13
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 8]


Before backtrack at level 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 8]

After backtrack at level 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14]
 solution : [0, 10, 1, 5, 6, 8]


Before backtrack at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14]
 solution : [0, 10, 1, 5, 6, 8]

After backtrack at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14, 24, 25, 27, 32, 4, 13]
 solution : [0, 10, 1, 5, 6, 8]


Invert decision for 8 at level 10


New level: 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14, 24, 25, 27, 32, 4, 13]
 solution : [0, 10, 1, 5, 6]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14, 24, 25, 27, 32, 4, 13]
 solution : [0, 10, 1, 5, 6]

Essensial at level 11 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 4), (30, 2), (31, 4), (32, 0), (33, -1)]

Covered at level 11 : {24, 25, 32, 27}

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14, 13]
 solution : [0, 10, 1, 5, 6, 4]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14, 13]
 solution : [0, 10, 1, 5, 6, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 4), (30, 2), (31, 4), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14, 13]
 solution : [0, 10, 1, 5, 6, 4]


Solution : [0, 10, 1, 5, 6, 4] has cost 47.


Decide in level 11 among pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 14, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 4, 14]


New level: 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 4, 14]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 4, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 14]


Solution : [0, 10, 1, 5, 6, 4, 14] has cost 53.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 5, 6, 4, 14]

After backtrack at level 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 4, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 4]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 4]


Solution : [0, 10, 1, 5, 6, 4] has cost 47.


Decide in level 12 among pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 4, 13]


New level: 13
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 4, 13]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 4, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 0), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 13 : {15}

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 4, 13]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 4, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 0), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 4, 13]


Solution : [0, 10, 1, 5, 6, 4, 13] has cost 52.


Decide in level 13 among pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Decide 9 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 4, 13, 9]


New level: 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 4, 13, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 4, 13, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {12, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 13, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 13, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 13, 9]


Solution : [0, 10, 1, 5, 6, 4, 13, 9] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 5, 6, 4, 13, 9]

After backtrack at level 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 4, 13, 9]


Invert decision for 9 at level 13


New level: 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 4, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 12]
 solution : [0, 10, 1, 5, 6, 4, 13]

Essensial at level 14 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 13, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 13, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 13, 12]


Solution : [0, 10, 1, 5, 6, 4, 13, 12] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 5, 6, 4, 13, 12]

After backtrack at level 14
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31]
 solution : [0, 10, 1, 5, 6, 4, 13]


Before backtrack at level 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31]
 solution : [0, 10, 1, 5, 6, 4, 13]

After backtrack at level 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 4, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 4]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 4]


Solution : [0, 10, 1, 5, 6, 4] has cost 47.


Decide in level 13 among pending : [12, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 4, 12]


New level: 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 4, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 4, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 6), (22, 5), (23, 2), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 2), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 12]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 12]


Solution : [0, 10, 1, 5, 6, 4, 12] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 5, 6, 4, 12]

After backtrack at level 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 4, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 9]
 solution : [0, 10, 1, 5, 6, 4]

Essensial at level 14 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 6, 4, 9]


Solution : [0, 10, 1, 5, 6, 4, 9] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 5, 6, 4, 9]

After backtrack at level 14
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 4]


Before backtrack at level 13
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15]
 solution : [0, 10, 1, 5, 6, 4]

After backtrack at level 13
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 4]


Before backtrack at level 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12]
 solution : [0, 10, 1, 5, 6, 4]

After backtrack at level 12
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 4]


Before backtrack at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13]
 solution : [0, 10, 1, 5, 6, 4]

After backtrack at level 11
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14]
 solution : [0, 10, 1, 5, 6]


Before backtrack at level 10
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14]
 solution : [0, 10, 1, 5, 6]

After backtrack at level 10
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8]
 solution : [0, 10, 1, 5, 6]


Before backtrack at level 9
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8]
 solution : [0, 10, 1, 5, 6]

After backtrack at level 9
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7]
 solution : [0, 10, 1, 5, 6]


Before backtrack at level 8
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7]
 solution : [0, 10, 1, 5, 6]

After backtrack at level 8
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7, 26]
 solution : [0, 10, 1, 5, 6]


Before backtrack at level 7
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7, 26]
 solution : [0, 10, 1, 5, 6]

After backtrack at level 7
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7, 26, 2]
 solution : [0, 10, 1, 5, 6]


Before backtrack at level 6
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7, 26, 2]
 solution : [0, 10, 1, 5, 6]

After backtrack at level 6
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7, 26, 2, 3]
 solution : [0, 10, 1, 5, 6]


Before backtrack at level 5
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7, 26, 2, 3]
 solution : [0, 10, 1, 5, 6]

After backtrack at level 5
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7, 26, 2, 3, 28]
 solution : [0, 10, 1, 5, 6]


Before backtrack at level 4
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7, 26, 2, 3, 28]
 solution : [0, 10, 1, 5, 6]

After backtrack at level 4
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7, 26, 2, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 6]


Invert decision for 6 at level 3


New level: 4
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7, 26, 2, 3, 28, 33, 11]
 solution : [0, 10, 1, 5]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7, 26, 2, 3, 28, 33, 11]
 solution : [0, 10, 1, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, 258), (4, 128), (5, -1), (6, -1), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 26), (17, 24), (18, 48), (19, 48), (20, 16), (21, 120), (22, 60), (23, 56), (24, 20), (25, 40), (26, 256), (27, 128), (28, 128), (29, 256), (30, 16), (31, 128), (32, 64), (33, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7, 26, 2, 3, 28, 33, 11]
 solution : [0, 10, 1, 5]


Solution : [0, 10, 1, 5] has cost 31.


Decide in level 4 among pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 8, 7, 26, 2, 3, 28, 33, 11]

Coverage : [(0, -1), (1, -1), (2, 320), (3, 258), (4, 128), (5, -1), (6, -1), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 26), (17, 24), (18, 48), (19, 48), (20, 16), (21, 120), (22, 60), (23, 56), (24, 20), (25, 40), (26, 256), (27, 128), (28, 128), (29, 256), (30, 16), (31, 128), (32, 64), (33, 128)]

Decide 8 with phase True at level 4

After decision at level 4
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 7, 26, 2, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 8]


New level: 5
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 7, 26, 2, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 8]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 4, 24, 25, 27, 32, 14, 7, 26, 2, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, 258), (4, 128), (5, -1), (6, -1), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 26), (17, 24), (18, 48), (19, 48), (20, 16), (21, 120), (22, 60), (23, 56), (24, 20), (25, 40), (26, 256), (27, 128), (28, 128), (29, 256), (30, 16), (31, 128), (32, 64), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 258), (4, 0), (5, -1), (6, -1), (7, 512), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 12), (19, 10), (20, 4), (21, 30), (22, 13), (23, 14), (24, 0), (25, 0), (26, 8), (27, 0), (28, 4), (29, 256), (30, 4), (31, 128), (32, 0), (33, 32)]

Covered at level 5 : {32, 2, 4, 24, 25, 27}

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 7, 26, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 8]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 7, 26, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 258), (4, 0), (5, -1), (6, -1), (7, 512), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 12), (19, 10), (20, 4), (21, 30), (22, 13), (23, 14), (24, 0), (25, 0), (26, 8), (27, 0), (28, 4), (29, 256), (30, 4), (31, 128), (32, 0), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 258), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 12), (19, 10), (20, 4), (21, 30), (22, 13), (23, 14), (24, -1), (25, -1), (26, 8), (27, -1), (28, 4), (29, 256), (30, 4), (31, 128), (32, -1), (33, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 7, 26, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 8]


Solution : [0, 10, 1, 5, 8] has cost 37.


Decide in level 5 among pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 7, 26, 3, 28, 33, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 258), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 12), (19, 10), (20, 4), (21, 30), (22, 13), (23, 14), (24, -1), (25, -1), (26, 8), (27, -1), (28, 4), (29, 256), (30, 4), (31, 128), (32, -1), (33, 32)]

Decide 7 with phase True at level 5

After decision at level 5
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 8, 7]


New level: 6
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 8, 7]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 8, 7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 258), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 12), (19, 10), (20, 4), (21, 30), (22, 13), (23, 14), (24, -1), (25, -1), (26, 8), (27, -1), (28, 4), (29, 256), (30, 4), (31, 128), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 6 : {3, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 33}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 8, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 8, 7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 8, 7]


Solution : [0, 10, 1, 5, 8, 7] has cost 43.


Before backtrack at level 6
 pending : []
 solution : [0, 10, 1, 5, 8, 7]

After backtrack at level 6
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 8, 7]


Invert decision for 7 at level 5


New level: 6
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 8]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 258), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 12), (19, 10), (20, 4), (21, 30), (22, 13), (23, 14), (24, -1), (25, -1), (26, 8), (27, -1), (28, 4), (29, 256), (30, 4), (31, 128), (32, -1), (33, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 3, 28, 33, 11]
 solution : [0, 10, 1, 5, 8]


Solution : [0, 10, 1, 5, 8] has cost 37.


Decide in level 6 among pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 3, 28, 33, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 258), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 12), (19, 10), (20, 4), (21, 30), (22, 13), (23, 14), (24, -1), (25, -1), (26, 8), (27, -1), (28, 4), (29, 256), (30, 4), (31, 128), (32, -1), (33, 32)]

Decide 3 with phase True at level 6

After decision at level 6
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 28, 33, 11]
 solution : [0, 10, 1, 5, 8, 3]


New level: 7
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 28, 33, 11]
 solution : [0, 10, 1, 5, 8, 3]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 28, 33, 11]
 solution : [0, 10, 1, 5, 8, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 258), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 5), (18, 12), (19, 10), (20, 4), (21, 30), (22, 13), (23, 14), (24, -1), (25, -1), (26, 8), (27, -1), (28, 4), (29, 256), (30, 4), (31, 128), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 7 : {9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 33}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 8, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 8, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 8, 3]


Solution : [0, 10, 1, 5, 8, 3] has cost 50.


Before backtrack at level 7
 pending : []
 solution : [0, 10, 1, 5, 8, 3]

After backtrack at level 7
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 28, 33, 11]
 solution : [0, 10, 1, 5, 8, 3]


Invert decision for 3 at level 6


New level: 7
 pending : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 28, 33, 11]
 solution : [0, 10, 1, 5, 8]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 21, 22, 20, 23, 30, 29, 31, 15, 12, 13, 14, 26, 28, 33, 11]
 solution : [0, 10, 1, 5, 8]

Essensial at level 7 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 10), (22, 6), (23, 6), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 2), (30, 0), (31, 0), (32, -1), (33, 4)]

Covered at level 7 : {12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 28, 30, 31}

After reduction : 
 pending  : [21, 22, 23, 29, 33, 11]
 solution : [0, 10, 1, 5, 8, 9]


Before reduction : 
 pending  : [21, 22, 23, 29, 33, 11]
 solution : [0, 10, 1, 5, 8, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 10), (22, 6), (23, 6), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 2), (30, 0), (31, 0), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 10), (22, 6), (23, 6), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 7 : set()

After reduction : 
 pending  : [21, 22, 23, 29, 33, 11]
 solution : [0, 10, 1, 5, 8, 9]


Solution : [0, 10, 1, 5, 8, 9] has cost 46.


Before backtrack at level 7
 pending : [21, 22, 23, 29, 33, 11]
 solution : [0, 10, 1, 5, 8, 9]

After backtrack at level 7
 pending : [21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28]
 solution : [0, 10, 1, 5, 8]


Before backtrack at level 6
 pending : [21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28]
 solution : [0, 10, 1, 5, 8]

After backtrack at level 6
 pending : [21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3]
 solution : [0, 10, 1, 5, 8]


Before backtrack at level 5
 pending : [21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3]
 solution : [0, 10, 1, 5, 8]

After backtrack at level 5
 pending : [21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 2, 7]
 solution : [0, 10, 1, 5, 8]


Invert decision for 8 at level 4


New level: 5
 pending : [21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 2, 7]
 solution : [0, 10, 1, 5]


Before reduction : 
 pending  : [21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 2, 7]
 solution : [0, 10, 1, 5]

Essensial at level 5 : {2, 7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 10), (22, 6), (23, 6), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 5 : {3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 2, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 2, 7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 5, 2, 7]


Solution : [0, 10, 1, 5, 2, 7] has cost 50.


Before backtrack at level 5
 pending : []
 solution : [0, 10, 1, 5, 2, 7]

After backtrack at level 5
 pending : [2, 7, 21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32]
 solution : [0, 10, 1, 5]


Before backtrack at level 4
 pending : [2, 7, 21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32]
 solution : [0, 10, 1, 5]

After backtrack at level 4
 pending : [2, 7, 21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5]


Before backtrack at level 3
 pending : [2, 7, 21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 5]

After backtrack at level 3
 pending : [2, 7, 21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8, 6]
 solution : [0, 10, 1, 5]


Invert decision for 5 at level 2


New level: 3
 pending : [2, 7, 21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8, 6]
 solution : [0, 10, 1]


Before reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8, 6]
 solution : [0, 10, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, 264), (4, 128), (5, -1), (6, 640), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 64), (17, 130), (18, 112), (19, 256), (20, 160), (21, 528), (22, 288), (23, 448), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 64), (31, 128), (32, 64), (33, 128)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8, 6]
 solution : [0, 10, 1]


Solution : [0, 10, 1] has cost 10.


Decide in level 3 among pending : [2, 7, 21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8, 6]

Coverage : [(0, -1), (1, -1), (2, 320), (3, 264), (4, 128), (5, -1), (6, 640), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 64), (17, 130), (18, 112), (19, 256), (20, 160), (21, 528), (22, 288), (23, 448), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 64), (31, 128), (32, 64), (33, 128)]

Decide 6 with phase True at level 3

After decision at level 3
 pending : [2, 7, 21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 6]


New level: 4
 pending : [2, 7, 21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 33, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 6]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, 264), (4, 128), (5, -1), (6, 640), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 64), (17, 130), (18, 112), (19, 256), (20, 160), (21, 528), (22, 288), (23, 448), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 64), (31, 128), (32, 64), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, 192), (25, 192), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, 0)]

Covered at level 4 : {33}

After reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 6]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, 192), (25, 192), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, 192), (25, 192), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 6]


Solution : [0, 10, 1, 6] has cost 20.


Decide in level 4 among pending : [2, 7, 21, 22, 23, 29, 11, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, 192), (25, 192), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Decide 11 with phase True at level 4

After decision at level 4
 pending : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 6, 11]


New level: 5
 pending : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 6, 11]


Before reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 15, 12, 13, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 6, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, 192), (25, 192), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, 0), (14, 32), (15, 0), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, 192), (25, 192), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Covered at level 5 : {13, 15}

After reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 6, 11]


Before reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 6, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, 0), (14, 32), (15, 0), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, 192), (25, 192), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, 192), (25, 192), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]
 solution : [0, 10, 1, 6, 11]


Solution : [0, 10, 1, 6, 11] has cost 25.


Decide in level 5 among pending : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 24, 25, 27, 32, 8]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, 192), (25, 192), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Decide 24 with phase True at level 5

After decision at level 5
 pending : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 25, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24]


New level: 6
 pending : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 25, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24]


Before reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 25, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, 192), (25, 192), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, 0), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 6 : {25}

After reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24]


Before reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, 0), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24]


Solution : [0, 10, 1, 6, 11, 24] has cost 41.


Decide in level 6 among pending : [2, 7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 27, 32, 8]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Decide 2 with phase True at level 6

After decision at level 6
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24, 2]


New level: 7
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24, 2]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, 0), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 7 : {32, 8, 27, 4}

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 24, 2]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 24, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, 0), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 24, 2]


Solution : [0, 10, 1, 6, 11, 24, 2] has cost 54.


Before backtrack at level 7
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 24, 2]

After backtrack at level 7
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24, 2]


Invert decision for 2 at level 6


New level: 7
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24]


Solution : [0, 10, 1, 6, 11, 24] has cost 41.


Decide in level 7 among pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 4, 27, 32, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Decide 4 with phase True at level 7

After decision at level 7
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24, 4]


New level: 8
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24, 4]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, 0), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 8 : {32, 8, 27}

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 24, 4]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 24, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, 0), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 24, 4]


Solution : [0, 10, 1, 6, 11, 24, 4] has cost 47.


Before backtrack at level 8
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 24, 4]

After backtrack at level 8
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24, 4]


Invert decision for 4 at level 7


New level: 8
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 24]

Essensial at level 8 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 8 : {32, 27}

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 24, 8]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 24, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 24, 8]


Solution : [0, 10, 1, 6, 11, 24, 8] has cost 47.


Before backtrack at level 8
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 24, 8]

After backtrack at level 8
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32]
 solution : [0, 10, 1, 6, 11, 24]


Before backtrack at level 7
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32]
 solution : [0, 10, 1, 6, 11, 24]

After backtrack at level 7
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32, 4]
 solution : [0, 10, 1, 6, 11, 24]


Before backtrack at level 6
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32, 4]
 solution : [0, 10, 1, 6, 11, 24]

After backtrack at level 6
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32, 4, 25, 2]
 solution : [0, 10, 1, 6, 11, 24]


Invert decision for 24 at level 5


New level: 6
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32, 4, 25, 2]
 solution : [0, 10, 1, 6, 11]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32, 4, 25, 2]
 solution : [0, 10, 1, 6, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, -1), (25, 192), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32, 4, 25, 2]
 solution : [0, 10, 1, 6, 11]


Solution : [0, 10, 1, 6, 11] has cost 25.


Decide in level 6 among pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32, 4, 25, 2]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, -1), (25, 192), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32, 4, 2]
 solution : [0, 10, 1, 6, 11, 25]


New level: 7
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32, 4, 2]
 solution : [0, 10, 1, 6, 11, 25]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32, 4, 2]
 solution : [0, 10, 1, 6, 11, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, -1), (25, 192), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32, 4, 2]
 solution : [0, 10, 1, 6, 11, 25]


Solution : [0, 10, 1, 6, 11, 25] has cost 41.


Decide in level 7 among pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 8, 27, 32, 4, 2]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 4, 2]
 solution : [0, 10, 1, 6, 11, 25, 8]


New level: 8
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 4, 2]
 solution : [0, 10, 1, 6, 11, 25, 8]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 4, 2]
 solution : [0, 10, 1, 6, 11, 25, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 8 : {32, 2, 27, 4}

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 25, 8]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 25, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 25, 8]


Solution : [0, 10, 1, 6, 11, 25, 8] has cost 47.


Before backtrack at level 8
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 25, 8]

After backtrack at level 8
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 4, 2]
 solution : [0, 10, 1, 6, 11, 25, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 4, 2]
 solution : [0, 10, 1, 6, 11, 25]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 4, 2]
 solution : [0, 10, 1, 6, 11, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 4, 2]
 solution : [0, 10, 1, 6, 11, 25]


Solution : [0, 10, 1, 6, 11, 25] has cost 41.


Decide in level 8 among pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 4, 2]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Decide 4 with phase True at level 8

After decision at level 8
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 2]
 solution : [0, 10, 1, 6, 11, 25, 4]


New level: 9
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 2]
 solution : [0, 10, 1, 6, 11, 25, 4]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 2]
 solution : [0, 10, 1, 6, 11, 25, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 9 : {32, 2, 27}

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 25, 4]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 25, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 25, 4]


Solution : [0, 10, 1, 6, 11, 25, 4] has cost 47.


Before backtrack at level 9
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 25, 4]

After backtrack at level 9
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 2]
 solution : [0, 10, 1, 6, 11, 25, 4]


Invert decision for 4 at level 8


New level: 9
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 2]
 solution : [0, 10, 1, 6, 11, 25]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 27, 32, 2]
 solution : [0, 10, 1, 6, 11, 25]

Essensial at level 9 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

Covered at level 9 : {32, 27}

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 25, 2]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 25, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 1), (30, 2), (31, 1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 25, 2]


Solution : [0, 10, 1, 6, 11, 25, 2] has cost 54.


Before backtrack at level 9
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3]
 solution : [0, 10, 1, 6, 11, 25, 2]

After backtrack at level 9
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 2, 27, 32]
 solution : [0, 10, 1, 6, 11, 25]


Before backtrack at level 8
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 2, 27, 32]
 solution : [0, 10, 1, 6, 11, 25]

After backtrack at level 8
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4]
 solution : [0, 10, 1, 6, 11, 25]


Before backtrack at level 7
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4]
 solution : [0, 10, 1, 6, 11, 25]

After backtrack at level 7
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11]


Before reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 6), (17, 22), (18, 6), (19, 22), (20, 11), (21, 21), (22, 17), (23, 11), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11]


Solution : [0, 10, 1, 6, 11] has cost 25.


Decide in level 7 among pending : [7, 21, 22, 23, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [7, 21, 22, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 23]


New level: 8
 pending : [7, 21, 22, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 23]


Before reduction : 
 pending  : [7, 21, 22, 29, 9, 16, 17, 18, 19, 20, 30, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 16), (17, 64), (18, 16), (19, 64), (20, 0), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, 32), (27, 32), (28, 32), (29, 1), (30, 0), (31, 1), (32, 32), (33, -1)]

Covered at level 8 : {20, 30}

After reduction : 
 pending  : [7, 21, 22, 29, 9, 16, 17, 18, 19, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 23]


Before reduction : 
 pending  : [7, 21, 22, 29, 9, 16, 17, 18, 19, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 16), (17, 64), (18, 16), (19, 64), (20, 0), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, 32), (27, 32), (28, 32), (29, 1), (30, 0), (31, 1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 16), (17, 64), (18, 16), (19, 64), (20, -1), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, 32), (27, 32), (28, 32), (29, 1), (30, -1), (31, 1), (32, 32), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 21, 22, 29, 9, 16, 17, 18, 19, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 23]


Solution : [0, 10, 1, 6, 11, 23] has cost 54.


Before backtrack at level 8
 pending : [7, 21, 22, 29, 9, 16, 17, 18, 19, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 23]

After backtrack at level 8
 pending : [7, 21, 22, 29, 9, 16, 17, 18, 19, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8, 20, 30]
 solution : [0, 10, 1, 6, 11, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [7, 21, 22, 29, 9, 16, 17, 18, 19, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8, 20, 30]
 solution : [0, 10, 1, 6, 11]


Before reduction : 
 pending  : [7, 21, 22, 29, 9, 16, 17, 18, 19, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8, 20, 30]
 solution : [0, 10, 1, 6, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 16), (17, 64), (18, 16), (19, 64), (20, -1), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, 32), (27, 32), (28, 32), (29, 1), (30, -1), (31, 1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, -1), (24, -1), (25, -1), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 21, 22, 29, 9, 16, 17, 18, 19, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8, 20, 30]
 solution : [0, 10, 1, 6, 11]


Solution : [0, 10, 1, 6, 11] has cost 25.


Decide in level 8 among pending : [7, 21, 22, 29, 9, 16, 17, 18, 19, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8, 20, 30]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, -1), (24, -1), (25, -1), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Decide 17 with phase True at level 8

After decision at level 8
 pending : [7, 21, 22, 29, 9, 16, 18, 19, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8, 20, 30]
 solution : [0, 10, 1, 6, 11, 17]


New level: 9
 pending : [7, 21, 22, 29, 9, 16, 18, 19, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8, 20, 30]
 solution : [0, 10, 1, 6, 11, 17]


Before reduction : 
 pending  : [7, 21, 22, 29, 9, 16, 18, 19, 31, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8, 20, 30]
 solution : [0, 10, 1, 6, 11, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, -1), (24, -1), (25, -1), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 1), (4, 64), (5, -1), (6, -1), (7, 1), (8, 128), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, 1), (27, 16), (28, 1), (29, 0), (30, 0), (31, 0), (32, 16), (33, -1)]

Covered at level 9 : {16, 18, 19, 20, 21, 22, 29, 30, 31}

After reduction : 
 pending  : [7, 9, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 17]


Before reduction : 
 pending  : [7, 9, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 1), (4, 64), (5, -1), (6, -1), (7, 1), (8, 128), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, 1), (27, 16), (28, 1), (29, 0), (30, 0), (31, 0), (32, 16), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 1), (4, 64), (5, -1), (6, -1), (7, 1), (8, 128), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 1), (27, 16), (28, 1), (29, -1), (30, -1), (31, -1), (32, 16), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 9, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 17]


Solution : [0, 10, 1, 6, 11, 17] has cost 59.


Before backtrack at level 9
 pending : [7, 9, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 17]

After backtrack at level 9
 pending : [7, 9, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8, 21, 22, 29, 16, 18, 19, 31, 20, 30]
 solution : [0, 10, 1, 6, 11, 17]


Invert decision for 17 at level 8


New level: 9
 pending : [7, 9, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8, 21, 22, 29, 16, 18, 19, 31, 20, 30]
 solution : [0, 10, 1, 6, 11]


Before reduction : 
 pending  : [7, 9, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8, 21, 22, 29, 16, 18, 19, 31, 20, 30]
 solution : [0, 10, 1, 6, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 1), (4, 64), (5, -1), (6, -1), (7, 1), (8, 128), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 1), (27, 16), (28, 1), (29, -1), (30, -1), (31, -1), (32, 16), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, -1), (24, -1), (25, -1), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 9, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8, 21, 22, 29, 16, 18, 19, 31, 20, 30]
 solution : [0, 10, 1, 6, 11]


Solution : [0, 10, 1, 6, 11] has cost 25.


Decide in level 9 among pending : [7, 9, 12, 14, 26, 28, 3, 2, 27, 32, 4, 8, 21, 22, 29, 16, 18, 19, 31, 20, 30]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, -1), (24, -1), (25, -1), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Decide 26 with phase True at level 9

After decision at level 9
 pending : [7, 9, 12, 14, 28, 3, 2, 27, 32, 4, 8, 21, 22, 29, 16, 18, 19, 31, 20, 30]
 solution : [0, 10, 1, 6, 11, 26]


New level: 10
 pending : [7, 9, 12, 14, 28, 3, 2, 27, 32, 4, 8, 21, 22, 29, 16, 18, 19, 31, 20, 30]
 solution : [0, 10, 1, 6, 11, 26]


Before reduction : 
 pending  : [7, 9, 12, 14, 28, 3, 2, 27, 32, 4, 8, 21, 22, 29, 16, 18, 19, 31, 20, 30]
 solution : [0, 10, 1, 6, 11, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, -1), (24, -1), (25, -1), (26, 128), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 18), (17, -1), (18, 18), (19, 52), (20, 73), (21, 37), (22, 64), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 0), (29, 0), (30, 2), (31, 0), (32, 8), (33, -1)]

Covered at level 10 : {28, 29, 31}

After reduction : 
 pending  : [7, 9, 12, 14, 3, 2, 27, 32, 4, 8, 21, 22, 16, 18, 19, 20, 30]
 solution : [0, 10, 1, 6, 11, 26]


Before reduction : 
 pending  : [7, 9, 12, 14, 3, 2, 27, 32, 4, 8, 21, 22, 16, 18, 19, 20, 30]
 solution : [0, 10, 1, 6, 11, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 18), (17, -1), (18, 18), (19, 52), (20, 73), (21, 37), (22, 64), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 0), (29, 0), (30, 2), (31, 0), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 18), (17, -1), (18, 18), (19, 52), (20, 73), (21, 37), (22, 64), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, 8), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 9, 12, 14, 3, 2, 27, 32, 4, 8, 21, 22, 16, 18, 19, 20, 30]
 solution : [0, 10, 1, 6, 11, 26]


Solution : [0, 10, 1, 6, 11, 26] has cost 35.


Decide in level 10 among pending : [7, 9, 12, 14, 3, 2, 27, 32, 4, 8, 21, 22, 16, 18, 19, 20, 30]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 18), (17, -1), (18, 18), (19, 52), (20, 73), (21, 37), (22, 64), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, 8), (33, -1)]

Decide 2 with phase True at level 10

After decision at level 10
 pending : [7, 9, 12, 14, 3, 27, 32, 4, 8, 21, 22, 16, 18, 19, 20, 30]
 solution : [0, 10, 1, 6, 11, 26, 2]


New level: 11
 pending : [7, 9, 12, 14, 3, 27, 32, 4, 8, 21, 22, 16, 18, 19, 20, 30]
 solution : [0, 10, 1, 6, 11, 26, 2]


Before reduction : 
 pending  : [7, 9, 12, 14, 3, 27, 32, 4, 8, 21, 22, 16, 18, 19, 20, 30]
 solution : [0, 10, 1, 6, 11, 26, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 18), (17, -1), (18, 18), (19, 52), (20, 73), (21, 37), (22, 64), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, 0), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

Covered at level 11 : {32, 8, 27, 4}

After reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30]
 solution : [0, 10, 1, 6, 11, 26, 2]


Before reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30]
 solution : [0, 10, 1, 6, 11, 26, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, 0), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30]
 solution : [0, 10, 1, 6, 11, 26, 2]


Solution : [0, 10, 1, 6, 11, 26, 2] has cost 48.


Before backtrack at level 11
 pending : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30]
 solution : [0, 10, 1, 6, 11, 26, 2]

After backtrack at level 11
 pending : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 26, 2]


Invert decision for 2 at level 10


New level: 11
 pending : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 26]


Before reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 18), (17, -1), (18, 18), (19, 52), (20, 73), (21, 37), (22, 64), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, 8), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30, 27, 32, 4, 8]
 solution : [0, 10, 1, 6, 11, 26]


Solution : [0, 10, 1, 6, 11, 26] has cost 35.


Decide in level 11 among pending : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30, 27, 32, 4, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 18), (17, -1), (18, 18), (19, 52), (20, 73), (21, 37), (22, 64), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, 8), (33, -1)]

Decide 4 with phase True at level 11

After decision at level 11
 pending : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 26, 4]


New level: 12
 pending : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30, 27, 32, 8]
 solution : [0, 10, 1, 6, 11, 26, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 18), (17, -1), (18, 18), (19, 52), (20, 73), (21, 37), (22, 64), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, 0), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

Covered at level 12 : {32, 8, 27}

After reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, 0), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Solution : [0, 10, 1, 6, 11, 26, 4] has cost 41.


Decide in level 12 among pending : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 20, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 20]


New level: 13
 pending : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 20]


Before reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 2), (17, -1), (18, 2), (19, 5), (20, -1), (21, 8), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {30}

After reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19]
 solution : [0, 10, 1, 6, 11, 26, 4, 20]


Before reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19]
 solution : [0, 10, 1, 6, 11, 26, 4, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 2), (17, -1), (18, 2), (19, 5), (20, -1), (21, 8), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 2), (17, -1), (18, 2), (19, 5), (20, -1), (21, 8), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19]
 solution : [0, 10, 1, 6, 11, 26, 4, 20]


Solution : [0, 10, 1, 6, 11, 26, 4, 20] has cost 70.


Before backtrack at level 13
 pending : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19]
 solution : [0, 10, 1, 6, 11, 26, 4, 20]

After backtrack at level 13
 pending : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 2), (17, -1), (18, 2), (19, 5), (20, -1), (21, 8), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Solution : [0, 10, 1, 6, 11, 26, 4] has cost 41.


Decide in level 13 among pending : [7, 9, 12, 14, 3, 21, 22, 16, 18, 19, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 13

After decision at level 13
 pending : [9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 7]


New level: 14
 pending : [9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 7]


Before reduction : 
 pending  : [9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {3, 9, 12, 14, 16, 18, 19, 21, 22, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 4, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 4, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 4, 7]


Solution : [0, 10, 1, 6, 11, 26, 4, 7] has cost 47.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 6, 11, 26, 4, 7]

After backtrack at level 14
 pending : [9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 7]


Invert decision for 7 at level 13


New level: 14
 pending : [9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before reduction : 
 pending  : [9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [9, 12, 14, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Solution : [0, 10, 1, 6, 11, 26, 4] has cost 41.


Decide in level 14 among pending : [9, 12, 14, 3, 21, 22, 16, 18, 19, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [9, 12, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 14]


New level: 15
 pending : [9, 12, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 14]


Before reduction : 
 pending  : [9, 12, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {3, 9, 12, 16, 18, 19, 21, 22, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 4, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 4, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 4, 14]


Solution : [0, 10, 1, 6, 11, 26, 4, 14] has cost 47.


Before backtrack at level 15
 pending : []
 solution : [0, 10, 1, 6, 11, 26, 4, 14]

After backtrack at level 15
 pending : [9, 12, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [9, 12, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before reduction : 
 pending  : [9, 12, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [9, 12, 3, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Solution : [0, 10, 1, 6, 11, 26, 4] has cost 41.


Decide in level 15 among pending : [9, 12, 3, 21, 22, 16, 18, 19, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 3 with phase True at level 15

After decision at level 15
 pending : [9, 12, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 3]


New level: 16
 pending : [9, 12, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 3]


Before reduction : 
 pending  : [9, 12, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {9, 12, 16, 18, 19, 21, 22, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 4, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 4, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 4, 3]


Solution : [0, 10, 1, 6, 11, 26, 4, 3] has cost 54.


Before backtrack at level 16
 pending : []
 solution : [0, 10, 1, 6, 11, 26, 4, 3]

After backtrack at level 16
 pending : [9, 12, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 3]


Invert decision for 3 at level 15


New level: 16
 pending : [9, 12, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before reduction : 
 pending  : [9, 12, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [9, 12, 21, 22, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Solution : [0, 10, 1, 6, 11, 26, 4] has cost 41.


Decide in level 16 among pending : [9, 12, 21, 22, 16, 18, 19, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 22 with phase True at level 16

After decision at level 16
 pending : [9, 12, 21, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 22]


New level: 17
 pending : [9, 12, 21, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 22]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 22]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {16, 18, 19, 21, 30}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 4, 22]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 4, 22]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 4, 22]


Solution : [0, 10, 1, 6, 11, 26, 4, 22] has cost 75.


Before backtrack at level 17
 pending : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 4, 22]

After backtrack at level 17
 pending : [9, 12, 21, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 22]


Invert decision for 22 at level 16


New level: 17
 pending : [9, 12, 21, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [9, 12, 21, 16, 18, 19, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Solution : [0, 10, 1, 6, 11, 26, 4] has cost 41.


Decide in level 17 among pending : [9, 12, 21, 16, 18, 19, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 19 with phase True at level 17

After decision at level 17
 pending : [9, 12, 21, 16, 18, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 19]


New level: 18
 pending : [9, 12, 21, 16, 18, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 19]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 19]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, -1), (21, 13), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {16, 18, 21, 30}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 4, 19]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 4, 19]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 4, 19]


Solution : [0, 10, 1, 6, 11, 26, 4, 19] has cost 75.


Before backtrack at level 18
 pending : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 4, 19]

After backtrack at level 18
 pending : [9, 12, 21, 16, 18, 30]
 solution : [0, 10, 1, 6, 11, 26, 4, 19]


Invert decision for 19 at level 17


New level: 18
 pending : [9, 12, 21, 16, 18, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]

Essensial at level 18 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {16, 18, 30}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 4, 21]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 4, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 4, 21]


Solution : [0, 10, 1, 6, 11, 26, 4, 21] has cost 75.


Before backtrack at level 18
 pending : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 4, 21]

After backtrack at level 18
 pending : [9, 12, 21, 16, 18, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before backtrack at level 17
 pending : [9, 12, 21, 16, 18, 30]
 solution : [0, 10, 1, 6, 11, 26, 4]

After backtrack at level 17
 pending : [9, 12, 21, 16, 18, 30, 19]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before backtrack at level 16
 pending : [9, 12, 21, 16, 18, 30, 19]
 solution : [0, 10, 1, 6, 11, 26, 4]

After backtrack at level 16
 pending : [9, 12, 21, 16, 18, 30, 19, 22]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before backtrack at level 15
 pending : [9, 12, 21, 16, 18, 30, 19, 22]
 solution : [0, 10, 1, 6, 11, 26, 4]

After backtrack at level 15
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 3]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before backtrack at level 14
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 3]
 solution : [0, 10, 1, 6, 11, 26, 4]

After backtrack at level 14
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 3, 14]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before backtrack at level 13
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 3, 14]
 solution : [0, 10, 1, 6, 11, 26, 4]

After backtrack at level 13
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 3, 14, 7]
 solution : [0, 10, 1, 6, 11, 26, 4]


Before backtrack at level 12
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 3, 14, 7]
 solution : [0, 10, 1, 6, 11, 26, 4]

After backtrack at level 12
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 3, 14, 7, 27, 32, 8, 20]
 solution : [0, 10, 1, 6, 11, 26, 4]


Invert decision for 4 at level 11


New level: 12
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 3, 14, 7, 27, 32, 8, 20]
 solution : [0, 10, 1, 6, 11, 26]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 3, 14, 7, 27, 32, 8, 20]
 solution : [0, 10, 1, 6, 11, 26]

Essensial at level 12 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

Covered at level 12 : {32, 27}

After reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 3, 14, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 3, 14, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 3, 14, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]


Solution : [0, 10, 1, 6, 11, 26, 8] has cost 41.


Decide in level 12 among pending : [9, 12, 21, 16, 18, 30, 19, 22, 3, 14, 7, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 3 with phase True at level 12

After decision at level 12
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 14, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 3]


New level: 13
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 14, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 3]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 14, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {7, 9, 12, 14, 16, 18, 19, 20, 21, 22, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 8, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 8, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 8, 3]


Solution : [0, 10, 1, 6, 11, 26, 8, 3] has cost 54.


Before backtrack at level 13
 pending : []
 solution : [0, 10, 1, 6, 11, 26, 8, 3]

After backtrack at level 13
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 14, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 3]


Invert decision for 3 at level 12


New level: 13
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 14, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 14, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 14, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]


Solution : [0, 10, 1, 6, 11, 26, 8] has cost 41.


Decide in level 13 among pending : [9, 12, 21, 16, 18, 30, 19, 22, 14, 7, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 14]


New level: 14
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 14]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {7, 9, 12, 16, 18, 19, 20, 21, 22, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 8, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 8, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 8, 14]


Solution : [0, 10, 1, 6, 11, 26, 8, 14] has cost 47.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 6, 11, 26, 8, 14]

After backtrack at level 14
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 7, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]


Solution : [0, 10, 1, 6, 11, 26, 8] has cost 41.


Decide in level 14 among pending : [9, 12, 21, 16, 18, 30, 19, 22, 7, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 14

After decision at level 14
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 7]


New level: 15
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 7]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {9, 12, 16, 18, 19, 20, 21, 22, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 8, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 8, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 26, 8, 7]


Solution : [0, 10, 1, 6, 11, 26, 8, 7] has cost 47.


Before backtrack at level 15
 pending : []
 solution : [0, 10, 1, 6, 11, 26, 8, 7]

After backtrack at level 15
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 7]


Invert decision for 7 at level 14


New level: 15
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]


Solution : [0, 10, 1, 6, 11, 26, 8] has cost 41.


Decide in level 15 among pending : [9, 12, 21, 16, 18, 30, 19, 22, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 22 with phase True at level 15

After decision at level 15
 pending : [9, 12, 21, 16, 18, 30, 19, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 22]


New level: 16
 pending : [9, 12, 21, 16, 18, 30, 19, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 22]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {16, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 8, 22]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 8, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 8, 22]


Solution : [0, 10, 1, 6, 11, 26, 8, 22] has cost 75.


Before backtrack at level 16
 pending : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 8, 22]

After backtrack at level 16
 pending : [9, 12, 21, 16, 18, 30, 19, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 22]


Invert decision for 22 at level 15


New level: 16
 pending : [9, 12, 21, 16, 18, 30, 19, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]


Solution : [0, 10, 1, 6, 11, 26, 8] has cost 41.


Decide in level 16 among pending : [9, 12, 21, 16, 18, 30, 19, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 19 with phase True at level 16

After decision at level 16
 pending : [9, 12, 21, 16, 18, 30, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 19]


New level: 17
 pending : [9, 12, 21, 16, 18, 30, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 19]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 19]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, 14), (20, 11), (21, 13), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {16, 18, 20, 21, 30}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 8, 19]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 8, 19]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 8, 19]


Solution : [0, 10, 1, 6, 11, 26, 8, 19] has cost 75.


Before backtrack at level 17
 pending : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 8, 19]

After backtrack at level 17
 pending : [9, 12, 21, 16, 18, 30, 20]
 solution : [0, 10, 1, 6, 11, 26, 8, 19]


Invert decision for 19 at level 16


New level: 17
 pending : [9, 12, 21, 16, 18, 30, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]

Essensial at level 17 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {16, 18, 20, 30}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 8, 21]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 8, 21]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 8, 21]


Solution : [0, 10, 1, 6, 11, 26, 8, 21] has cost 75.


Before backtrack at level 17
 pending : [9, 12]
 solution : [0, 10, 1, 6, 11, 26, 8, 21]

After backtrack at level 17
 pending : [9, 12, 21, 16, 18, 30, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]


Before backtrack at level 16
 pending : [9, 12, 21, 16, 18, 30, 20]
 solution : [0, 10, 1, 6, 11, 26, 8]

After backtrack at level 16
 pending : [9, 12, 21, 16, 18, 30, 20, 19]
 solution : [0, 10, 1, 6, 11, 26, 8]


Before backtrack at level 15
 pending : [9, 12, 21, 16, 18, 30, 20, 19]
 solution : [0, 10, 1, 6, 11, 26, 8]

After backtrack at level 15
 pending : [9, 12, 21, 16, 18, 30, 20, 19, 22]
 solution : [0, 10, 1, 6, 11, 26, 8]


Before backtrack at level 14
 pending : [9, 12, 21, 16, 18, 30, 20, 19, 22]
 solution : [0, 10, 1, 6, 11, 26, 8]

After backtrack at level 14
 pending : [9, 12, 21, 16, 18, 30, 20, 19, 22, 7]
 solution : [0, 10, 1, 6, 11, 26, 8]


Before backtrack at level 13
 pending : [9, 12, 21, 16, 18, 30, 20, 19, 22, 7]
 solution : [0, 10, 1, 6, 11, 26, 8]

After backtrack at level 13
 pending : [9, 12, 21, 16, 18, 30, 20, 19, 22, 7, 14]
 solution : [0, 10, 1, 6, 11, 26, 8]


Before backtrack at level 12
 pending : [9, 12, 21, 16, 18, 30, 20, 19, 22, 7, 14]
 solution : [0, 10, 1, 6, 11, 26, 8]

After backtrack at level 12
 pending : [9, 12, 21, 16, 18, 30, 20, 19, 22, 7, 14, 8, 27, 32, 3]
 solution : [0, 10, 1, 6, 11, 26]


Before backtrack at level 11
 pending : [9, 12, 21, 16, 18, 30, 20, 19, 22, 7, 14, 8, 27, 32, 3]
 solution : [0, 10, 1, 6, 11, 26]

After backtrack at level 11
 pending : [9, 12, 21, 16, 18, 30, 20, 19, 22, 7, 14, 8, 27, 32, 3, 4]
 solution : [0, 10, 1, 6, 11, 26]


Before backtrack at level 10
 pending : [9, 12, 21, 16, 18, 30, 20, 19, 22, 7, 14, 8, 27, 32, 3, 4]
 solution : [0, 10, 1, 6, 11, 26]

After backtrack at level 10
 pending : [9, 12, 21, 16, 18, 30, 20, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2]
 solution : [0, 10, 1, 6, 11, 26]


Invert decision for 26 at level 9


New level: 10
 pending : [9, 12, 21, 16, 18, 30, 20, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2]
 solution : [0, 10, 1, 6, 11]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 20, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2]
 solution : [0, 10, 1, 6, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 20, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2]
 solution : [0, 10, 1, 6, 11]


Solution : [0, 10, 1, 6, 11] has cost 25.


Decide in level 10 among pending : [9, 12, 21, 16, 18, 30, 20, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Decide 20 with phase True at level 10

After decision at level 10
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2]
 solution : [0, 10, 1, 6, 11, 20]


New level: 11
 pending : [9, 12, 21, 16, 18, 30, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2]
 solution : [0, 10, 1, 6, 11, 20]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 30, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2]
 solution : [0, 10, 1, 6, 11, 20]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, 128), (20, 128), (21, 112), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 16), (17, -1), (18, 16), (19, 64), (20, -1), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 64), (29, 1), (30, 0), (31, 1), (32, 32), (33, -1)]

Covered at level 11 : {30}

After reduction : 
 pending  : [9, 12, 21, 16, 18, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2]
 solution : [0, 10, 1, 6, 11, 20]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2]
 solution : [0, 10, 1, 6, 11, 20]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 16), (17, -1), (18, 16), (19, 64), (20, -1), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 64), (29, 1), (30, 0), (31, 1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 16), (17, -1), (18, 16), (19, 64), (20, -1), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 64), (29, 1), (30, -1), (31, 1), (32, 32), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [9, 12, 21, 16, 18, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2]
 solution : [0, 10, 1, 6, 11, 20]


Solution : [0, 10, 1, 6, 11, 20] has cost 54.


Before backtrack at level 11
 pending : [9, 12, 21, 16, 18, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2]
 solution : [0, 10, 1, 6, 11, 20]

After backtrack at level 11
 pending : [9, 12, 21, 16, 18, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2, 30]
 solution : [0, 10, 1, 6, 11, 20]


Invert decision for 20 at level 10


New level: 11
 pending : [9, 12, 21, 16, 18, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2, 30]
 solution : [0, 10, 1, 6, 11]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2, 30]
 solution : [0, 10, 1, 6, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 16), (17, -1), (18, 16), (19, 64), (20, -1), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 64), (29, 1), (30, -1), (31, 1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, 128), (20, -1), (21, 112), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [9, 12, 21, 16, 18, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2, 30]
 solution : [0, 10, 1, 6, 11]


Solution : [0, 10, 1, 6, 11] has cost 25.


Decide in level 11 among pending : [9, 12, 21, 16, 18, 19, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2, 30]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, 128), (20, -1), (21, 112), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Decide 19 with phase True at level 11

After decision at level 11
 pending : [9, 12, 21, 16, 18, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2, 30]
 solution : [0, 10, 1, 6, 11, 19]


New level: 12
 pending : [9, 12, 21, 16, 18, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2, 30]
 solution : [0, 10, 1, 6, 11, 19]


Before reduction : 
 pending  : [9, 12, 21, 16, 18, 22, 7, 14, 8, 27, 32, 3, 4, 28, 29, 31, 2, 30]
 solution : [0, 10, 1, 6, 11, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, 128), (20, -1), (21, 112), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 1), (4, 128), (5, -1), (6, -1), (7, 1), (8, 128), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 8), (29, 0), (30, 0), (31, 0), (32, 32), (33, -1)]

Covered at level 12 : {16, 18, 21, 22, 29, 30, 31}

After reduction : 
 pending  : [9, 12, 7, 14, 8, 27, 32, 3, 4, 28, 2]
 solution : [0, 10, 1, 6, 11, 19]


Before reduction : 
 pending  : [9, 12, 7, 14, 8, 27, 32, 3, 4, 28, 2]
 solution : [0, 10, 1, 6, 11, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 1), (4, 128), (5, -1), (6, -1), (7, 1), (8, 128), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 8), (29, 0), (30, 0), (31, 0), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 1), (4, 128), (5, -1), (6, -1), (7, 1), (8, 128), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 8), (29, -1), (30, -1), (31, -1), (32, 32), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [9, 12, 7, 14, 8, 27, 32, 3, 4, 28, 2]
 solution : [0, 10, 1, 6, 11, 19]


Solution : [0, 10, 1, 6, 11, 19] has cost 59.


Before backtrack at level 12
 pending : [9, 12, 7, 14, 8, 27, 32, 3, 4, 28, 2]
 solution : [0, 10, 1, 6, 11, 19]

After backtrack at level 12
 pending : [9, 12, 7, 14, 8, 27, 32, 3, 4, 28, 2, 21, 16, 18, 22, 29, 31, 30]
 solution : [0, 10, 1, 6, 11, 19]


Invert decision for 19 at level 11


New level: 12
 pending : [9, 12, 7, 14, 8, 27, 32, 3, 4, 28, 2, 21, 16, 18, 22, 29, 31, 30]
 solution : [0, 10, 1, 6, 11]


Before reduction : 
 pending  : [9, 12, 7, 14, 8, 27, 32, 3, 4, 28, 2, 21, 16, 18, 22, 29, 31, 30]
 solution : [0, 10, 1, 6, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 1), (4, 128), (5, -1), (6, -1), (7, 1), (8, 128), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 8), (29, -1), (30, -1), (31, -1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [9, 12, 7, 14, 8, 27, 32, 3, 4, 28, 2, 21, 16, 18, 22, 29, 31, 30]
 solution : [0, 10, 1, 6, 11]


Solution : [0, 10, 1, 6, 11] has cost 25.


Decide in level 12 among pending : [9, 12, 7, 14, 8, 27, 32, 3, 4, 28, 2, 21, 16, 18, 22, 29, 31, 30]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Decide 8 with phase True at level 12

After decision at level 12
 pending : [9, 12, 7, 14, 27, 32, 3, 4, 28, 2, 21, 16, 18, 22, 29, 31, 30]
 solution : [0, 10, 1, 6, 11, 8]


New level: 13
 pending : [9, 12, 7, 14, 27, 32, 3, 4, 28, 2, 21, 16, 18, 22, 29, 31, 30]
 solution : [0, 10, 1, 6, 11, 8]


Before reduction : 
 pending  : [9, 12, 7, 14, 27, 32, 3, 4, 28, 2, 21, 16, 18, 22, 29, 31, 30]
 solution : [0, 10, 1, 6, 11, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, 128), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 8), (29, 8), (30, 64), (31, 8), (32, 0), (33, -1)]

Covered at level 13 : {32, 2, 27, 4}

After reduction : 
 pending  : [9, 12, 7, 14, 3, 28, 21, 16, 18, 22, 29, 31, 30]
 solution : [0, 10, 1, 6, 11, 8]


Before reduction : 
 pending  : [9, 12, 7, 14, 3, 28, 21, 16, 18, 22, 29, 31, 30]
 solution : [0, 10, 1, 6, 11, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 8), (29, 8), (30, 64), (31, 8), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [9, 12, 7, 14, 3, 28, 21, 16, 18, 22, 29, 31, 30]
 solution : [0, 10, 1, 6, 11, 8]


Solution : [0, 10, 1, 6, 11, 8] has cost 31.


Decide in level 13 among pending : [9, 12, 7, 14, 3, 28, 21, 16, 18, 22, 29, 31, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Decide 30 with phase True at level 13

After decision at level 13
 pending : [9, 12, 7, 14, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]


New level: 14
 pending : [9, 12, 7, 14, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]


Before reduction : 
 pending  : [9, 12, 7, 14, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [9, 12, 7, 14, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]


Solution : [0, 10, 1, 6, 11, 8, 30] has cost 41.


Decide in level 14 among pending : [9, 12, 7, 14, 3, 28, 21, 16, 18, 22, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

Decide 7 with phase True at level 14

After decision at level 14
 pending : [9, 12, 14, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 7]


New level: 15
 pending : [9, 12, 14, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 7]


Before reduction : 
 pending  : [9, 12, 14, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 15 : {3, 9, 12, 14, 16, 18, 21, 22, 28, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 30, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 30, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 30, 7]


Solution : [0, 10, 1, 6, 11, 8, 30, 7] has cost 47.


Before backtrack at level 15
 pending : []
 solution : [0, 10, 1, 6, 11, 8, 30, 7]

After backtrack at level 15
 pending : [9, 12, 14, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 7]


Invert decision for 7 at level 14


New level: 15
 pending : [9, 12, 14, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]


Before reduction : 
 pending  : [9, 12, 14, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [9, 12, 14, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]


Solution : [0, 10, 1, 6, 11, 8, 30] has cost 41.


Decide in level 15 among pending : [9, 12, 14, 3, 28, 21, 16, 18, 22, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

Decide 14 with phase True at level 15

After decision at level 15
 pending : [9, 12, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 14]


New level: 16
 pending : [9, 12, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 14]


Before reduction : 
 pending  : [9, 12, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 16 : {3, 9, 12, 16, 18, 21, 22, 28, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 30, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 30, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 30, 14]


Solution : [0, 10, 1, 6, 11, 8, 30, 14] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 10, 1, 6, 11, 8, 30, 14]

After backtrack at level 16
 pending : [9, 12, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 14]


Invert decision for 14 at level 15


New level: 16
 pending : [9, 12, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]


Before reduction : 
 pending  : [9, 12, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [9, 12, 3, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]


Solution : [0, 10, 1, 6, 11, 8, 30] has cost 41.


Decide in level 16 among pending : [9, 12, 3, 28, 21, 16, 18, 22, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

Decide 3 with phase True at level 16

After decision at level 16
 pending : [9, 12, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 3]


New level: 17
 pending : [9, 12, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 3]


Before reduction : 
 pending  : [9, 12, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 17 : {9, 12, 16, 18, 21, 22, 28, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 30, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 30, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 30, 3]


Solution : [0, 10, 1, 6, 11, 8, 30, 3] has cost 54.


Before backtrack at level 17
 pending : []
 solution : [0, 10, 1, 6, 11, 8, 30, 3]

After backtrack at level 17
 pending : [9, 12, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 3]


Invert decision for 3 at level 16


New level: 17
 pending : [9, 12, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]


Before reduction : 
 pending  : [9, 12, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [9, 12, 28, 21, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]


Solution : [0, 10, 1, 6, 11, 8, 30] has cost 41.


Decide in level 17 among pending : [9, 12, 28, 21, 16, 18, 22, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

Decide 21 with phase True at level 17

After decision at level 17
 pending : [9, 12, 28, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 21]


New level: 18
 pending : [9, 12, 28, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 21]


Before reduction : 
 pending  : [9, 12, 28, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 18 : {16, 18, 22, 28, 29, 31}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 30, 21]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 30, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 30, 21]


Solution : [0, 10, 1, 6, 11, 8, 30, 21] has cost 75.


Before backtrack at level 18
 pending : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 30, 21]

After backtrack at level 18
 pending : [9, 12, 28, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30, 21]


Invert decision for 21 at level 17


New level: 18
 pending : [9, 12, 28, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]


Before reduction : 
 pending  : [9, 12, 28, 16, 18, 22, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]

Essensial at level 18 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 18 : {16, 18, 28, 29, 31}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 30, 22]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 30, 22]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 30, 22]


Solution : [0, 10, 1, 6, 11, 8, 30, 22] has cost 75.


Before backtrack at level 18
 pending : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 30, 22]

After backtrack at level 18
 pending : [9, 12, 22, 28, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]


Before backtrack at level 17
 pending : [9, 12, 22, 28, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 30]

After backtrack at level 17
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 11, 8, 30]


Before backtrack at level 16
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 11, 8, 30]

After backtrack at level 16
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 3]
 solution : [0, 10, 1, 6, 11, 8, 30]


Before backtrack at level 15
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 3]
 solution : [0, 10, 1, 6, 11, 8, 30]

After backtrack at level 15
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 3, 14]
 solution : [0, 10, 1, 6, 11, 8, 30]


Before backtrack at level 14
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 3, 14]
 solution : [0, 10, 1, 6, 11, 8, 30]

After backtrack at level 14
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 3, 14, 7]
 solution : [0, 10, 1, 6, 11, 8, 30]


Invert decision for 30 at level 13


New level: 14
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 3, 14, 7]
 solution : [0, 10, 1, 6, 11, 8]


Before reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31, 21, 3, 14, 7]
 solution : [0, 10, 1, 6, 11, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31, 21, 3, 14, 7]
 solution : [0, 10, 1, 6, 11, 8]


Solution : [0, 10, 1, 6, 11, 8] has cost 31.


Decide in level 14 among pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 3, 14, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 3 with phase True at level 14

After decision at level 14
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 14, 7]
 solution : [0, 10, 1, 6, 11, 8, 3]


New level: 15
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 14, 7]
 solution : [0, 10, 1, 6, 11, 8, 3]


Before reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31, 21, 14, 7]
 solution : [0, 10, 1, 6, 11, 8, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 15 : {7, 9, 12, 14, 16, 18, 21, 22, 28, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 3]


Solution : [0, 10, 1, 6, 11, 8, 3] has cost 44.


Before backtrack at level 15
 pending : []
 solution : [0, 10, 1, 6, 11, 8, 3]

After backtrack at level 15
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 14, 7]
 solution : [0, 10, 1, 6, 11, 8, 3]


Invert decision for 3 at level 14


New level: 15
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 14, 7]
 solution : [0, 10, 1, 6, 11, 8]


Before reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31, 21, 14, 7]
 solution : [0, 10, 1, 6, 11, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31, 21, 14, 7]
 solution : [0, 10, 1, 6, 11, 8]


Solution : [0, 10, 1, 6, 11, 8] has cost 31.


Decide in level 15 among pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 14, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 14 with phase True at level 15

After decision at level 15
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7]
 solution : [0, 10, 1, 6, 11, 8, 14]


New level: 16
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7]
 solution : [0, 10, 1, 6, 11, 8, 14]


Before reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7]
 solution : [0, 10, 1, 6, 11, 8, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 16 : {7, 9, 12, 16, 18, 21, 22, 28, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 14]


Solution : [0, 10, 1, 6, 11, 8, 14] has cost 37.


Before backtrack at level 16
 pending : []
 solution : [0, 10, 1, 6, 11, 8, 14]

After backtrack at level 16
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7]
 solution : [0, 10, 1, 6, 11, 8, 14]


Invert decision for 14 at level 15


New level: 16
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7]
 solution : [0, 10, 1, 6, 11, 8]


Before reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7]
 solution : [0, 10, 1, 6, 11, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7]
 solution : [0, 10, 1, 6, 11, 8]


Solution : [0, 10, 1, 6, 11, 8] has cost 31.


Decide in level 16 among pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 7 with phase True at level 16

After decision at level 16
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 11, 8, 7]


New level: 17
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 11, 8, 7]


Before reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 11, 8, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 17 : {9, 12, 16, 18, 21, 22, 28, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 8, 7]


Solution : [0, 10, 1, 6, 11, 8, 7] has cost 37.


Before backtrack at level 17
 pending : []
 solution : [0, 10, 1, 6, 11, 8, 7]

After backtrack at level 17
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 11, 8, 7]


Invert decision for 7 at level 16


New level: 17
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 11, 8]


Before reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 11, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 11, 8]


Solution : [0, 10, 1, 6, 11, 8] has cost 31.


Decide in level 17 among pending : [9, 12, 22, 28, 16, 18, 29, 31, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 21 with phase True at level 17

After decision at level 17
 pending : [9, 12, 22, 28, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 21]


New level: 18
 pending : [9, 12, 22, 28, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 21]


Before reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 18 : {16, 18, 22, 28, 29, 31}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 21]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 21]


Solution : [0, 10, 1, 6, 11, 8, 21] has cost 65.


Before backtrack at level 18
 pending : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 21]

After backtrack at level 18
 pending : [9, 12, 22, 28, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 8, 21]


Invert decision for 21 at level 17


New level: 18
 pending : [9, 12, 22, 28, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 8]


Before reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 8]

Essensial at level 18 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 18 : {16, 18, 28, 29, 31}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 22]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 22]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 22]


Solution : [0, 10, 1, 6, 11, 8, 22] has cost 65.


Before backtrack at level 18
 pending : [9, 12]
 solution : [0, 10, 1, 6, 11, 8, 22]

After backtrack at level 18
 pending : [9, 12, 22, 28, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 8]


Before backtrack at level 17
 pending : [9, 12, 22, 28, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 8]

After backtrack at level 17
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 11, 8]


Before backtrack at level 16
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 11, 8]

After backtrack at level 16
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7]
 solution : [0, 10, 1, 6, 11, 8]


Before backtrack at level 15
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7]
 solution : [0, 10, 1, 6, 11, 8]

After backtrack at level 15
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7, 14]
 solution : [0, 10, 1, 6, 11, 8]


Before backtrack at level 14
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7, 14]
 solution : [0, 10, 1, 6, 11, 8]

After backtrack at level 14
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7, 14, 3]
 solution : [0, 10, 1, 6, 11, 8]


Before backtrack at level 13
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7, 14, 3]
 solution : [0, 10, 1, 6, 11, 8]

After backtrack at level 13
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7, 14, 3, 27, 32, 4, 2, 30]
 solution : [0, 10, 1, 6, 11, 8]


Invert decision for 8 at level 12


New level: 13
 pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7, 14, 3, 27, 32, 4, 2, 30]
 solution : [0, 10, 1, 6, 11]


Before reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7, 14, 3, 27, 32, 4, 2, 30]
 solution : [0, 10, 1, 6, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7, 14, 3, 27, 32, 4, 2, 30]
 solution : [0, 10, 1, 6, 11]


Solution : [0, 10, 1, 6, 11] has cost 25.


Decide in level 13 among pending : [9, 12, 22, 28, 16, 18, 29, 31, 21, 7, 14, 3, 27, 32, 4, 2, 30]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Decide 28 with phase True at level 13

After decision at level 13
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 7, 14, 3, 27, 32, 4, 2, 30]
 solution : [0, 10, 1, 6, 11, 28]


New level: 14
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 7, 14, 3, 27, 32, 4, 2, 30]
 solution : [0, 10, 1, 6, 11, 28]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 29, 31, 21, 7, 14, 3, 27, 32, 4, 2, 30]
 solution : [0, 10, 1, 6, 11, 28]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 128), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 18), (17, -1), (18, 18), (19, -1), (20, -1), (21, 37), (22, 64), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 0), (30, 2), (31, 0), (32, 8), (33, -1)]

Covered at level 14 : {29, 31}

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 27, 32, 4, 2, 30]
 solution : [0, 10, 1, 6, 11, 28]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 27, 32, 4, 2, 30]
 solution : [0, 10, 1, 6, 11, 28]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 18), (17, -1), (18, 18), (19, -1), (20, -1), (21, 37), (22, 64), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 0), (30, 2), (31, 0), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 18), (17, -1), (18, 18), (19, -1), (20, -1), (21, 37), (22, 64), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, 8), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 27, 32, 4, 2, 30]
 solution : [0, 10, 1, 6, 11, 28]


Solution : [0, 10, 1, 6, 11, 28] has cost 35.


Decide in level 14 among pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 27, 32, 4, 2, 30]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 18), (17, -1), (18, 18), (19, -1), (20, -1), (21, 37), (22, 64), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, 8), (33, -1)]

Decide 4 with phase True at level 14

After decision at level 14
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 27, 32, 2, 30]
 solution : [0, 10, 1, 6, 11, 28, 4]


New level: 15
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 27, 32, 2, 30]
 solution : [0, 10, 1, 6, 11, 28, 4]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 27, 32, 2, 30]
 solution : [0, 10, 1, 6, 11, 28, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 18), (17, -1), (18, 18), (19, -1), (20, -1), (21, 37), (22, 64), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

Covered at level 15 : {32, 2, 27}

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30]
 solution : [0, 10, 1, 6, 11, 28, 4]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30]
 solution : [0, 10, 1, 6, 11, 28, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30]
 solution : [0, 10, 1, 6, 11, 28, 4]


Solution : [0, 10, 1, 6, 11, 28, 4] has cost 41.


Before backtrack at level 15
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30]
 solution : [0, 10, 1, 6, 11, 28, 4]

After backtrack at level 15
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 27, 32, 2]
 solution : [0, 10, 1, 6, 11, 28, 4]


Invert decision for 4 at level 14


New level: 15
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 27, 32, 2]
 solution : [0, 10, 1, 6, 11, 28]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 27, 32, 2]
 solution : [0, 10, 1, 6, 11, 28]

Essensial at level 15 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

Covered at level 15 : {32, 27}

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30]
 solution : [0, 10, 1, 6, 11, 28, 2]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30]
 solution : [0, 10, 1, 6, 11, 28, 2]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 2), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30]
 solution : [0, 10, 1, 6, 11, 28, 2]


Solution : [0, 10, 1, 6, 11, 28, 2] has cost 48.


Before backtrack at level 15
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30]
 solution : [0, 10, 1, 6, 11, 28, 2]

After backtrack at level 15
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 2, 27, 32]
 solution : [0, 10, 1, 6, 11, 28]


Before backtrack at level 14
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 2, 27, 32]
 solution : [0, 10, 1, 6, 11, 28]

After backtrack at level 14
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 2, 27, 32, 29, 31, 4]
 solution : [0, 10, 1, 6, 11, 28]


Invert decision for 28 at level 13


New level: 14
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 2, 27, 32, 29, 31, 4]
 solution : [0, 10, 1, 6, 11]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 2, 27, 32, 29, 31, 4]
 solution : [0, 10, 1, 6, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 2, 27, 32, 29, 31, 4]
 solution : [0, 10, 1, 6, 11]


Solution : [0, 10, 1, 6, 11] has cost 25.


Decide in level 14 among pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 2, 27, 32, 29, 31, 4]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

Decide 2 with phase True at level 14

After decision at level 14
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 27, 32, 29, 31, 4]
 solution : [0, 10, 1, 6, 11, 2]


New level: 15
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 27, 32, 29, 31, 4]
 solution : [0, 10, 1, 6, 11, 2]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 27, 32, 29, 31, 4]
 solution : [0, 10, 1, 6, 11, 2]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 8), (30, 64), (31, 8), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 64), (31, 8), (32, 0), (33, -1)]

Covered at level 15 : {32, 27, 4}

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 29, 31]
 solution : [0, 10, 1, 6, 11, 2]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 29, 31]
 solution : [0, 10, 1, 6, 11, 2]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 64), (31, 8), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 29, 31]
 solution : [0, 10, 1, 6, 11, 2]


Solution : [0, 10, 1, 6, 11, 2] has cost 38.


Before backtrack at level 15
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 29, 31]
 solution : [0, 10, 1, 6, 11, 2]

After backtrack at level 15
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 29, 31, 27, 32, 4]
 solution : [0, 10, 1, 6, 11, 2]


Invert decision for 2 at level 14


New level: 15
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 29, 31, 27, 32, 4]
 solution : [0, 10, 1, 6, 11]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 29, 31, 27, 32, 4]
 solution : [0, 10, 1, 6, 11]

Essensial at level 15 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 64), (31, 8), (32, 0), (33, -1)]

Covered at level 15 : {32, 27}

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 64), (31, 8), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]


Solution : [0, 10, 1, 6, 11, 4] has cost 31.


Decide in level 15 among pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 30, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Decide 30 with phase True at level 15

After decision at level 15
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 30]


New level: 16
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 30]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 30]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 30]


Solution : [0, 10, 1, 6, 11, 4, 30] has cost 41.


Before backtrack at level 16
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 30]

After backtrack at level 16
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 30]


Invert decision for 30 at level 15


New level: 16
 pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 7, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]


Solution : [0, 10, 1, 6, 11, 4] has cost 31.


Decide in level 16 among pending : [9, 12, 22, 16, 18, 21, 7, 14, 3, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 7 with phase True at level 16

After decision at level 16
 pending : [9, 12, 22, 16, 18, 21, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 7]


New level: 17
 pending : [9, 12, 22, 16, 18, 21, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 7]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 17 : {3, 9, 12, 14, 16, 18, 21, 22, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 4, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 4, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 4, 7]


Solution : [0, 10, 1, 6, 11, 4, 7] has cost 37.


Before backtrack at level 17
 pending : []
 solution : [0, 10, 1, 6, 11, 4, 7]

After backtrack at level 17
 pending : [9, 12, 22, 16, 18, 21, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 7]


Invert decision for 7 at level 16


New level: 17
 pending : [9, 12, 22, 16, 18, 21, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 14, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]


Solution : [0, 10, 1, 6, 11, 4] has cost 31.


Decide in level 17 among pending : [9, 12, 22, 16, 18, 21, 14, 3, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 14 with phase True at level 17

After decision at level 17
 pending : [9, 12, 22, 16, 18, 21, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 14]


New level: 18
 pending : [9, 12, 22, 16, 18, 21, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 14]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 14]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 18 : {3, 9, 12, 16, 18, 21, 22, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 4, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 4, 14]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 4, 14]


Solution : [0, 10, 1, 6, 11, 4, 14] has cost 37.


Before backtrack at level 18
 pending : []
 solution : [0, 10, 1, 6, 11, 4, 14]

After backtrack at level 18
 pending : [9, 12, 22, 16, 18, 21, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 14]


Invert decision for 14 at level 17


New level: 18
 pending : [9, 12, 22, 16, 18, 21, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 3, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]


Solution : [0, 10, 1, 6, 11, 4] has cost 31.


Decide in level 18 among pending : [9, 12, 22, 16, 18, 21, 3, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 3 with phase True at level 18

After decision at level 18
 pending : [9, 12, 22, 16, 18, 21, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 3]


New level: 19
 pending : [9, 12, 22, 16, 18, 21, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 3]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 3]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 19 : {9, 12, 16, 18, 21, 22, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 4, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 4, 3]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 11, 4, 3]


Solution : [0, 10, 1, 6, 11, 4, 3] has cost 44.


Before backtrack at level 19
 pending : []
 solution : [0, 10, 1, 6, 11, 4, 3]

After backtrack at level 19
 pending : [9, 12, 22, 16, 18, 21, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 3]


Invert decision for 3 at level 18


New level: 19
 pending : [9, 12, 22, 16, 18, 21, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [9, 12, 22, 16, 18, 21, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]


Solution : [0, 10, 1, 6, 11, 4] has cost 31.


Decide in level 19 among pending : [9, 12, 22, 16, 18, 21, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 21 with phase True at level 19

After decision at level 19
 pending : [9, 12, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 21]


New level: 20
 pending : [9, 12, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 21]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 21]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 20 : {16, 18, 22, 29, 31}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 4, 21]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 4, 21]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 4, 21]


Solution : [0, 10, 1, 6, 11, 4, 21] has cost 65.


Before backtrack at level 20
 pending : [9, 12]
 solution : [0, 10, 1, 6, 11, 4, 21]

After backtrack at level 20
 pending : [9, 12, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 4, 21]


Invert decision for 21 at level 19


New level: 20
 pending : [9, 12, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]

Essensial at level 20 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 20 : {16, 18, 29, 31}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 4, 22]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 4, 22]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 11, 4, 22]


Solution : [0, 10, 1, 6, 11, 4, 22] has cost 65.


Before backtrack at level 20
 pending : [9, 12]
 solution : [0, 10, 1, 6, 11, 4, 22]

After backtrack at level 20
 pending : [9, 12, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]


Before backtrack at level 19
 pending : [9, 12, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 11, 4]

After backtrack at level 19
 pending : [9, 12, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 11, 4]


Before backtrack at level 18
 pending : [9, 12, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 11, 4]

After backtrack at level 18
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3]
 solution : [0, 10, 1, 6, 11, 4]


Before backtrack at level 17
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3]
 solution : [0, 10, 1, 6, 11, 4]

After backtrack at level 17
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14]
 solution : [0, 10, 1, 6, 11, 4]


Before backtrack at level 16
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14]
 solution : [0, 10, 1, 6, 11, 4]

After backtrack at level 16
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7]
 solution : [0, 10, 1, 6, 11, 4]


Before backtrack at level 15
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7]
 solution : [0, 10, 1, 6, 11, 4]

After backtrack at level 15
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30]
 solution : [0, 10, 1, 6, 11]


Before backtrack at level 14
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30]
 solution : [0, 10, 1, 6, 11]

After backtrack at level 14
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2]
 solution : [0, 10, 1, 6, 11]


Before backtrack at level 13
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2]
 solution : [0, 10, 1, 6, 11]

After backtrack at level 13
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28]
 solution : [0, 10, 1, 6, 11]


Before backtrack at level 12
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28]
 solution : [0, 10, 1, 6, 11]

After backtrack at level 12
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8]
 solution : [0, 10, 1, 6, 11]


Before backtrack at level 11
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8]
 solution : [0, 10, 1, 6, 11]

After backtrack at level 11
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19]
 solution : [0, 10, 1, 6, 11]


Before backtrack at level 10
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19]
 solution : [0, 10, 1, 6, 11]

After backtrack at level 10
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20]
 solution : [0, 10, 1, 6, 11]


Before backtrack at level 9
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20]
 solution : [0, 10, 1, 6, 11]

After backtrack at level 9
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26]
 solution : [0, 10, 1, 6, 11]


Before backtrack at level 8
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26]
 solution : [0, 10, 1, 6, 11]

After backtrack at level 8
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17]
 solution : [0, 10, 1, 6, 11]


Before backtrack at level 7
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17]
 solution : [0, 10, 1, 6, 11]

After backtrack at level 7
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23]
 solution : [0, 10, 1, 6, 11]


Before backtrack at level 6
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23]
 solution : [0, 10, 1, 6, 11]

After backtrack at level 6
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 25]
 solution : [0, 10, 1, 6, 11]


Before backtrack at level 5
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 25]
 solution : [0, 10, 1, 6, 11]

After backtrack at level 5
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 25, 15, 13, 24]
 solution : [0, 10, 1, 6, 11]


Invert decision for 11 at level 4


New level: 5
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 25, 15, 13, 24]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 25, 15, 13, 24]
 solution : [0, 10, 1, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 96), (22, 96), (23, 128), (24, 192), (25, 192), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 25, 15, 13, 24]
 solution : [0, 10, 1, 6]


Solution : [0, 10, 1, 6] has cost 20.


Decide in level 5 among pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 25, 15, 13, 24]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 96), (22, 96), (23, 128), (24, 192), (25, 192), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Decide 25 with phase True at level 5

After decision at level 5
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 15, 13, 24]
 solution : [0, 10, 1, 6, 25]


New level: 6
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 15, 13, 24]
 solution : [0, 10, 1, 6, 25]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 15, 13, 24]
 solution : [0, 10, 1, 6, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 96), (22, 96), (23, 128), (24, 192), (25, 192), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, 0), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Covered at level 6 : {24}

After reduction : 
 pending  : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 15, 13]
 solution : [0, 10, 1, 6, 25]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 15, 13]
 solution : [0, 10, 1, 6, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, 0), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 15, 13]
 solution : [0, 10, 1, 6, 25]


Solution : [0, 10, 1, 6, 25] has cost 36.


Decide in level 6 among pending : [9, 12, 22, 16, 18, 29, 31, 21, 3, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Decide 3 with phase True at level 6

After decision at level 6
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 3]


New level: 7
 pending : [9, 12, 22, 16, 18, 29, 31, 21, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 3]


Before reduction : 
 pending  : [9, 12, 22, 16, 18, 29, 31, 21, 14, 7, 4, 27, 32, 30, 2, 28, 8, 19, 20, 26, 17, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 4), (17, 16), (18, 4), (19, 16), (20, 0), (21, 16), (22, 10), (23, 0), (24, -1), (25, -1), (26, 8), (27, 8), (28, 8), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

Covered at level 7 : {7, 9, 12, 13, 14, 15, 20, 23, 29, 30, 31}

After reduction : 
 pending  : [22, 16, 18, 21, 4, 27, 32, 2, 28, 8, 19, 26, 17]
 solution : [0, 10, 1, 6, 25, 3]


Before reduction : 
 pending  : [22, 16, 18, 21, 4, 27, 32, 2, 28, 8, 19, 26, 17]
 solution : [0, 10, 1, 6, 25, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 4), (17, 16), (18, 4), (19, 16), (20, 0), (21, 16), (22, 10), (23, 0), (24, -1), (25, -1), (26, 8), (27, 8), (28, 8), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 16), (18, 4), (19, 16), (20, -1), (21, 16), (22, 10), (23, -1), (24, -1), (25, -1), (26, 8), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 4, 27, 32, 2, 28, 8, 19, 26, 17]
 solution : [0, 10, 1, 6, 25, 3]


Solution : [0, 10, 1, 6, 25, 3] has cost 49.


Before backtrack at level 7
 pending : [22, 16, 18, 21, 4, 27, 32, 2, 28, 8, 19, 26, 17]
 solution : [0, 10, 1, 6, 25, 3]

After backtrack at level 7
 pending : [22, 16, 18, 21, 4, 27, 32, 2, 28, 8, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 3]


Invert decision for 3 at level 6


New level: 7
 pending : [22, 16, 18, 21, 4, 27, 32, 2, 28, 8, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25]


Before reduction : 
 pending  : [22, 16, 18, 21, 4, 27, 32, 2, 28, 8, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 16), (18, 4), (19, 16), (20, -1), (21, 16), (22, 10), (23, -1), (24, -1), (25, -1), (26, 8), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 4, 27, 32, 2, 28, 8, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25]


Solution : [0, 10, 1, 6, 25] has cost 36.


Decide in level 7 among pending : [22, 16, 18, 21, 4, 27, 32, 2, 28, 8, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Decide 4 with phase True at level 7

After decision at level 7
 pending : [22, 16, 18, 21, 27, 32, 2, 28, 8, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 4]


New level: 8
 pending : [22, 16, 18, 21, 27, 32, 2, 28, 8, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 4]


Before reduction : 
 pending  : [22, 16, 18, 21, 27, 32, 2, 28, 8, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 32), (30, 16), (31, 32), (32, 0), (33, -1)]

Covered at level 8 : {32, 8, 2, 27}

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 4]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 32), (30, 16), (31, 32), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 32), (30, 16), (31, 32), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 4]


Solution : [0, 10, 1, 6, 25, 4] has cost 42.


Before backtrack at level 8
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 4]

After backtrack at level 8
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 25, 4]


Invert decision for 4 at level 7


New level: 8
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 25]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 32), (30, 16), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 25]


Solution : [0, 10, 1, 6, 25] has cost 36.


Decide in level 8 among pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 14, 7, 30, 20, 23, 15, 13, 27, 32, 2, 8]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Decide 14 with phase True at level 8

After decision at level 8
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 25, 14]


New level: 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 25, 14]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 25, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 4), (17, 16), (18, 4), (19, 16), (20, 0), (21, 16), (22, 10), (23, 0), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

Covered at level 9 : {7, 9, 12, 13, 15, 20, 23, 29, 30, 31}

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 25, 14]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 25, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 4), (17, 16), (18, 4), (19, 16), (20, 0), (21, 16), (22, 10), (23, 0), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 16), (18, 4), (19, 16), (20, -1), (21, 16), (22, 10), (23, -1), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 25, 14]


Solution : [0, 10, 1, 6, 25, 14] has cost 42.


Before backtrack at level 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 25, 14]

After backtrack at level 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 8, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 14]


Invert decision for 14 at level 8


New level: 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 8, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 8, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 16), (18, 4), (19, 16), (20, -1), (21, 16), (22, 10), (23, -1), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 8, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25]


Solution : [0, 10, 1, 6, 25] has cost 36.


Decide in level 9 among pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 8, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Decide 2 with phase True at level 9

After decision at level 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 8, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 2]


New level: 10
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 8, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 2]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 8, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 32), (30, 16), (31, 32), (32, 0), (33, -1)]

Covered at level 10 : {32, 8, 27}

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 2]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 32), (30, 16), (31, 32), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 32), (30, 16), (31, 32), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 2]


Solution : [0, 10, 1, 6, 25, 2] has cost 49.


Before backtrack at level 10
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 2]

After backtrack at level 10
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 27, 32, 8]
 solution : [0, 10, 1, 6, 25, 2]


Invert decision for 2 at level 9


New level: 10
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 27, 32, 8]
 solution : [0, 10, 1, 6, 25]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 27, 32, 8]
 solution : [0, 10, 1, 6, 25]

Essensial at level 10 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 32), (30, 16), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 32), (30, 16), (31, 32), (32, 0), (33, -1)]

Covered at level 10 : {32, 27}

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 8]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 32), (30, 16), (31, 32), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 32), (30, 16), (31, 32), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 8]


Solution : [0, 10, 1, 6, 25, 8] has cost 42.


Before backtrack at level 10
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13]
 solution : [0, 10, 1, 6, 25, 8]

After backtrack at level 10
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32]
 solution : [0, 10, 1, 6, 25]


Before backtrack at level 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32]
 solution : [0, 10, 1, 6, 25]

After backtrack at level 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2]
 solution : [0, 10, 1, 6, 25]


Before backtrack at level 8
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2]
 solution : [0, 10, 1, 6, 25]

After backtrack at level 8
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14]
 solution : [0, 10, 1, 6, 25]


Before backtrack at level 7
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14]
 solution : [0, 10, 1, 6, 25]

After backtrack at level 7
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4]
 solution : [0, 10, 1, 6, 25]


Before backtrack at level 6
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4]
 solution : [0, 10, 1, 6, 25]

After backtrack at level 6
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4, 24, 3]
 solution : [0, 10, 1, 6, 25]


Invert decision for 25 at level 5


New level: 6
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4, 24, 3]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4, 24, 3]
 solution : [0, 10, 1, 6]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 32), (30, 16), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 96), (22, 96), (23, 128), (24, 192), (25, -1), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4, 24, 3]
 solution : [0, 10, 1, 6]


Solution : [0, 10, 1, 6] has cost 20.


Decide in level 6 among pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4, 24, 3]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 96), (22, 96), (23, 128), (24, 192), (25, -1), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4, 3]
 solution : [0, 10, 1, 6, 24]


New level: 7
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4, 3]
 solution : [0, 10, 1, 6, 24]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4, 3]
 solution : [0, 10, 1, 6, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 96), (22, 96), (23, 128), (24, 192), (25, -1), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4, 3]
 solution : [0, 10, 1, 6, 24]


Solution : [0, 10, 1, 6, 24] has cost 36.


Decide in level 7 among pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 7, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4, 3]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4, 3]
 solution : [0, 10, 1, 6, 24, 7]


New level: 8
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4, 3]
 solution : [0, 10, 1, 6, 24, 7]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 13, 8, 27, 32, 2, 14, 4, 3]
 solution : [0, 10, 1, 6, 24, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 0), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 4), (17, 16), (18, 4), (19, 16), (20, 0), (21, 16), (22, 10), (23, 0), (24, -1), (25, -1), (26, 8), (27, 8), (28, 8), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

Covered at level 8 : {3, 9, 12, 13, 14, 15, 20, 23, 29, 30, 31}

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 8, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 7]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 8, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 0), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 4), (17, 16), (18, 4), (19, 16), (20, 0), (21, 16), (22, 10), (23, 0), (24, -1), (25, -1), (26, 8), (27, 8), (28, 8), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 16), (18, 4), (19, 16), (20, -1), (21, 16), (22, 10), (23, -1), (24, -1), (25, -1), (26, 8), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 8, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 7]


Solution : [0, 10, 1, 6, 24, 7] has cost 42.


Before backtrack at level 8
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 8, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 7]

After backtrack at level 8
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 8, 27, 32, 2, 4, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3]
 solution : [0, 10, 1, 6, 24, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 8, 27, 32, 2, 4, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3]
 solution : [0, 10, 1, 6, 24]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 8, 27, 32, 2, 4, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3]
 solution : [0, 10, 1, 6, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 16), (18, 4), (19, 16), (20, -1), (21, 16), (22, 10), (23, -1), (24, -1), (25, -1), (26, 8), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 8, 27, 32, 2, 4, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3]
 solution : [0, 10, 1, 6, 24]


Solution : [0, 10, 1, 6, 24] has cost 36.


Decide in level 8 among pending : [22, 16, 18, 21, 28, 19, 26, 17, 8, 27, 32, 2, 4, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Decide 8 with phase True at level 8

After decision at level 8
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 4, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3]
 solution : [0, 10, 1, 6, 24, 8]


New level: 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 4, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3]
 solution : [0, 10, 1, 6, 24, 8]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 4, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3]
 solution : [0, 10, 1, 6, 24, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 128), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 32), (30, 16), (31, 32), (32, 0), (33, -1)]

Covered at level 9 : {32, 2, 27, 4}

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3]
 solution : [0, 10, 1, 6, 24, 8]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3]
 solution : [0, 10, 1, 6, 24, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 128), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 32), (30, 16), (31, 32), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 32), (30, 16), (31, 32), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3]
 solution : [0, 10, 1, 6, 24, 8]


Solution : [0, 10, 1, 6, 24, 8] has cost 42.


Before backtrack at level 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3]
 solution : [0, 10, 1, 6, 24, 8]

After backtrack at level 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 8]


Invert decision for 8 at level 8


New level: 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 32), (30, 16), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24]


Solution : [0, 10, 1, 6, 24] has cost 36.


Decide in level 9 among pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 13, 14, 3, 27, 32, 2, 4]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Decide 13 with phase True at level 9

After decision at level 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 14, 3, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 13]


New level: 10
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 14, 3, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 13]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 15, 14, 3, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, 0), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 10 : {15}

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 14, 3, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 13]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 14, 3, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, 0), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 14, 3, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 13]


Solution : [0, 10, 1, 6, 24, 13] has cost 41.


Before backtrack at level 10
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 14, 3, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 13]

After backtrack at level 10
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 14, 3, 27, 32, 2, 4, 15]
 solution : [0, 10, 1, 6, 24, 13]


Invert decision for 13 at level 9


New level: 10
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 14, 3, 27, 32, 2, 4, 15]
 solution : [0, 10, 1, 6, 24]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 14, 3, 27, 32, 2, 4, 15]
 solution : [0, 10, 1, 6, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 32), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, 32), (15, -1), (16, 18), (17, 100), (18, 18), (19, 100), (20, 11), (21, 69), (22, 72), (23, 11), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 1), (30, 2), (31, 1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 14, 3, 27, 32, 2, 4, 15]
 solution : [0, 10, 1, 6, 24]


Solution : [0, 10, 1, 6, 24] has cost 36.


Decide in level 10 among pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 14, 3, 27, 32, 2, 4, 15]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 27, 32, 2, 4, 15]
 solution : [0, 10, 1, 6, 24, 14]


New level: 11
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 27, 32, 2, 4, 15]
 solution : [0, 10, 1, 6, 24, 14]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 27, 32, 2, 4, 15]
 solution : [0, 10, 1, 6, 24, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 0), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 4), (17, 16), (18, 4), (19, 16), (20, 0), (21, 16), (22, 10), (23, 0), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

Covered at level 11 : {3, 9, 12, 15, 20, 23, 29, 30, 31}

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 14]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 0), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 4), (17, 16), (18, 4), (19, 16), (20, 0), (21, 16), (22, 10), (23, 0), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 16), (18, 4), (19, 16), (20, -1), (21, 16), (22, 10), (23, -1), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 14]


Solution : [0, 10, 1, 6, 24, 14] has cost 42.


Before backtrack at level 11
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 4]
 solution : [0, 10, 1, 6, 24, 14]

After backtrack at level 11
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 4, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 4, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 4, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 16), (18, 4), (19, 16), (20, -1), (21, 16), (22, 10), (23, -1), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 4, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24]


Solution : [0, 10, 1, 6, 24] has cost 36.


Decide in level 11 among pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 2, 4, 9, 12, 29, 31, 30, 20, 23, 3, 15]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 4, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24, 2]


New level: 12
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 4, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24, 2]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 27, 32, 4, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 18), (17, 100), (18, 18), (19, 100), (20, 28), (21, 69), (22, 72), (23, 28), (24, -1), (25, -1), (26, 32), (27, 8), (28, 32), (29, 32), (30, 16), (31, 32), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 32), (30, 16), (31, 32), (32, 0), (33, -1)]

Covered at level 12 : {32, 27, 4}

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24, 2]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 32), (30, 16), (31, 32), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 32), (30, 16), (31, 32), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24, 2]


Solution : [0, 10, 1, 6, 24, 2] has cost 49.


Before backtrack at level 12
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24, 2]

After backtrack at level 12
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 27, 32, 4]
 solution : [0, 10, 1, 6, 24, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 27, 32, 4]
 solution : [0, 10, 1, 6, 24]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 27, 32, 4]
 solution : [0, 10, 1, 6, 24]

Essensial at level 12 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 32), (30, 16), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 32), (30, 16), (31, 32), (32, 0), (33, -1)]

Covered at level 12 : {32, 27}

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24, 4]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, 0), (28, 1), (29, 32), (30, 16), (31, 32), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 32), (30, 16), (31, 32), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24, 4]


Solution : [0, 10, 1, 6, 24, 4] has cost 42.


Before backtrack at level 12
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15]
 solution : [0, 10, 1, 6, 24, 4]

After backtrack at level 12
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32]
 solution : [0, 10, 1, 6, 24]


Before backtrack at level 11
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32]
 solution : [0, 10, 1, 6, 24]

After backtrack at level 11
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2]
 solution : [0, 10, 1, 6, 24]


Before backtrack at level 10
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2]
 solution : [0, 10, 1, 6, 24]

After backtrack at level 10
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14]
 solution : [0, 10, 1, 6, 24]


Before backtrack at level 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14]
 solution : [0, 10, 1, 6, 24]

After backtrack at level 9
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13]
 solution : [0, 10, 1, 6, 24]


Before backtrack at level 8
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13]
 solution : [0, 10, 1, 6, 24]

After backtrack at level 8
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8]
 solution : [0, 10, 1, 6, 24]


Before backtrack at level 7
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8]
 solution : [0, 10, 1, 6, 24]

After backtrack at level 7
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8, 7]
 solution : [0, 10, 1, 6, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8, 7]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8, 7]
 solution : [0, 10, 1, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 6), (17, 22), (18, 6), (19, 22), (20, 28), (21, 21), (22, 17), (23, 28), (24, -1), (25, -1), (26, 1), (27, -1), (28, 1), (29, 32), (30, 16), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8, 7]
 solution : [0, 10, 1, 6]


Solution : [0, 10, 1, 6] has cost 20.


Decide in level 7 among pending : [22, 16, 18, 21, 28, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8, 7]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [22, 16, 18, 21, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8, 7]
 solution : [0, 10, 1, 6, 28]


New level: 8
 pending : [22, 16, 18, 21, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8, 7]
 solution : [0, 10, 1, 6, 28]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 26, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8, 7]
 solution : [0, 10, 1, 6, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, 128), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, 0), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

Covered at level 8 : {26}

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8, 7]
 solution : [0, 10, 1, 6, 28]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8, 7]
 solution : [0, 10, 1, 6, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, 0), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8, 7]
 solution : [0, 10, 1, 6, 28]


Solution : [0, 10, 1, 6, 28] has cost 30.


Decide in level 8 among pending : [22, 16, 18, 21, 19, 17, 9, 12, 29, 31, 30, 20, 23, 3, 15, 4, 27, 32, 2, 14, 13, 8, 7]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

Decide 3 with phase True at level 8

After decision at level 8
 pending : [22, 16, 18, 21, 19, 17, 9, 12, 29, 31, 30, 20, 23, 15, 4, 27, 32, 2, 14, 13, 8, 7]
 solution : [0, 10, 1, 6, 28, 3]


New level: 9
 pending : [22, 16, 18, 21, 19, 17, 9, 12, 29, 31, 30, 20, 23, 15, 4, 27, 32, 2, 14, 13, 8, 7]
 solution : [0, 10, 1, 6, 28, 3]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 9, 12, 29, 31, 30, 20, 23, 15, 4, 27, 32, 2, 14, 13, 8, 7]
 solution : [0, 10, 1, 6, 28, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 4), (17, 10), (18, 4), (19, 10), (20, 2), (21, 8), (22, 8), (23, 2), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

Covered at level 9 : {7, 9, 12, 13, 14, 15, 29, 30, 31}

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 4, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 28, 3]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 4, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 28, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 4), (17, 10), (18, 4), (19, 10), (20, 2), (21, 8), (22, 8), (23, 2), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 10), (18, 4), (19, 10), (20, 2), (21, 8), (22, 8), (23, 2), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 4, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 28, 3]


Solution : [0, 10, 1, 6, 28, 3] has cost 43.


Before backtrack at level 9
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 4, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 28, 3]

After backtrack at level 9
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 4, 27, 32, 2, 8, 9, 12, 29, 31, 30, 15, 14, 13, 7]
 solution : [0, 10, 1, 6, 28, 3]


Invert decision for 3 at level 8


New level: 9
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 4, 27, 32, 2, 8, 9, 12, 29, 31, 30, 15, 14, 13, 7]
 solution : [0, 10, 1, 6, 28]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 4, 27, 32, 2, 8, 9, 12, 29, 31, 30, 15, 14, 13, 7]
 solution : [0, 10, 1, 6, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 10), (18, 4), (19, 10), (20, 2), (21, 8), (22, 8), (23, 2), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 4, 27, 32, 2, 8, 9, 12, 29, 31, 30, 15, 14, 13, 7]
 solution : [0, 10, 1, 6, 28]


Solution : [0, 10, 1, 6, 28] has cost 30.


Decide in level 9 among pending : [22, 16, 18, 21, 19, 17, 20, 23, 4, 27, 32, 2, 8, 9, 12, 29, 31, 30, 15, 14, 13, 7]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

Decide 4 with phase True at level 9

After decision at level 9
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 2, 8, 9, 12, 29, 31, 30, 15, 14, 13, 7]
 solution : [0, 10, 1, 6, 28, 4]


New level: 10
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 2, 8, 9, 12, 29, 31, 30, 15, 14, 13, 7]
 solution : [0, 10, 1, 6, 28, 4]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 2, 8, 9, 12, 29, 31, 30, 15, 14, 13, 7]
 solution : [0, 10, 1, 6, 28, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 16), (31, 8), (32, 0), (33, -1)]

Covered at level 10 : {32, 8, 2, 27}

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 14, 13, 7]
 solution : [0, 10, 1, 6, 28, 4]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 14, 13, 7]
 solution : [0, 10, 1, 6, 28, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 16), (31, 8), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 14, 13, 7]
 solution : [0, 10, 1, 6, 28, 4]


Solution : [0, 10, 1, 6, 28, 4] has cost 36.


Decide in level 10 among pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 14, 13, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 13, 7]
 solution : [0, 10, 1, 6, 28, 4, 14]


New level: 11
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 13, 7]
 solution : [0, 10, 1, 6, 28, 4, 14]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 13, 7]
 solution : [0, 10, 1, 6, 28, 4, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 11 : {7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 4, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 4, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 4, 14]


Solution : [0, 10, 1, 6, 28, 4, 14] has cost 42.


Before backtrack at level 11
 pending : []
 solution : [0, 10, 1, 6, 28, 4, 14]

After backtrack at level 11
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 13, 7]
 solution : [0, 10, 1, 6, 28, 4, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 13, 7]
 solution : [0, 10, 1, 6, 28, 4]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 13, 7]
 solution : [0, 10, 1, 6, 28, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 13, 7]
 solution : [0, 10, 1, 6, 28, 4]


Solution : [0, 10, 1, 6, 28, 4] has cost 36.


Decide in level 11 among pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 13, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 7]
 solution : [0, 10, 1, 6, 28, 4, 13]


New level: 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 7]
 solution : [0, 10, 1, 6, 28, 4, 13]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 29, 31, 30, 15, 7]
 solution : [0, 10, 1, 6, 28, 4, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 0), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {15, 29, 31}

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 7]
 solution : [0, 10, 1, 6, 28, 4, 13]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 7]
 solution : [0, 10, 1, 6, 28, 4, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 0), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 7]
 solution : [0, 10, 1, 6, 28, 4, 13]


Solution : [0, 10, 1, 6, 28, 4, 13] has cost 41.


Before backtrack at level 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 7]
 solution : [0, 10, 1, 6, 28, 4, 13]

After backtrack at level 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 7, 29, 31, 15]
 solution : [0, 10, 1, 6, 28, 4, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 7, 29, 31, 15]
 solution : [0, 10, 1, 6, 28, 4]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 7, 29, 31, 15]
 solution : [0, 10, 1, 6, 28, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 7, 29, 31, 15]
 solution : [0, 10, 1, 6, 28, 4]


Solution : [0, 10, 1, 6, 28, 4] has cost 36.


Decide in level 12 among pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 7, 29, 31, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

Decide 7 with phase True at level 12

After decision at level 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 29, 31, 15]
 solution : [0, 10, 1, 6, 28, 4, 7]


New level: 13
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 29, 31, 15]
 solution : [0, 10, 1, 6, 28, 4, 7]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 29, 31, 15]
 solution : [0, 10, 1, 6, 28, 4, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 4, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 4, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 4, 7]


Solution : [0, 10, 1, 6, 28, 4, 7] has cost 42.


Before backtrack at level 13
 pending : []
 solution : [0, 10, 1, 6, 28, 4, 7]

After backtrack at level 13
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 29, 31, 15]
 solution : [0, 10, 1, 6, 28, 4, 7]


Invert decision for 7 at level 12


New level: 13
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 29, 31, 15]
 solution : [0, 10, 1, 6, 28, 4]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 29, 31, 15]
 solution : [0, 10, 1, 6, 28, 4]

Essensial at level 13 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {29, 31}

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30]
 solution : [0, 10, 1, 6, 28, 4, 15]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30]
 solution : [0, 10, 1, 6, 28, 4, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30]
 solution : [0, 10, 1, 6, 28, 4, 15]


Solution : [0, 10, 1, 6, 28, 4, 15] has cost 38.


Before backtrack at level 13
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30]
 solution : [0, 10, 1, 6, 28, 4, 15]

After backtrack at level 13
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 4]


Before backtrack at level 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 4]

After backtrack at level 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 7]
 solution : [0, 10, 1, 6, 28, 4]


Before backtrack at level 11
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 7]
 solution : [0, 10, 1, 6, 28, 4]

After backtrack at level 11
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 7, 13]
 solution : [0, 10, 1, 6, 28, 4]


Before backtrack at level 10
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 7, 13]
 solution : [0, 10, 1, 6, 28, 4]

After backtrack at level 10
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 7, 13, 27, 32, 2, 8, 14]
 solution : [0, 10, 1, 6, 28, 4]


Invert decision for 4 at level 9


New level: 10
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 7, 13, 27, 32, 2, 8, 14]
 solution : [0, 10, 1, 6, 28]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 7, 13, 27, 32, 2, 8, 14]
 solution : [0, 10, 1, 6, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 7, 13, 27, 32, 2, 8, 14]
 solution : [0, 10, 1, 6, 28]


Solution : [0, 10, 1, 6, 28] has cost 30.


Decide in level 10 among pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 7, 13, 27, 32, 2, 8, 14]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

Decide 7 with phase True at level 10

After decision at level 10
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 13, 27, 32, 2, 8, 14]
 solution : [0, 10, 1, 6, 28, 7]


New level: 11
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 13, 27, 32, 2, 8, 14]
 solution : [0, 10, 1, 6, 28, 7]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 13, 27, 32, 2, 8, 14]
 solution : [0, 10, 1, 6, 28, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 4), (17, 10), (18, 4), (19, 10), (20, 2), (21, 8), (22, 8), (23, 2), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

Covered at level 11 : {9, 12, 13, 14, 15, 29, 30, 31}

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 28, 7]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 28, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 4), (17, 10), (18, 4), (19, 10), (20, 2), (21, 8), (22, 8), (23, 2), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 10), (18, 4), (19, 10), (20, 2), (21, 8), (22, 8), (23, 2), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 2, 8]
 solution : [0, 10, 1, 6, 28, 7]


Solution : [0, 10, 1, 6, 28, 7] has cost 36.


Decide in level 11 among pending : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 2, 8]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 10), (18, 4), (19, 10), (20, 2), (21, 8), (22, 8), (23, 2), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 8]
 solution : [0, 10, 1, 6, 28, 7, 2]


New level: 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 8]
 solution : [0, 10, 1, 6, 28, 7, 2]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 8]
 solution : [0, 10, 1, 6, 28, 7, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, 10), (18, 4), (19, 10), (20, 2), (21, 8), (22, 8), (23, 2), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

Covered at level 12 : {32, 8, 16, 17, 18, 19, 20, 21, 22, 23, 27}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 7, 2]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 7, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 7, 2]


Solution : [0, 10, 1, 6, 28, 7, 2] has cost 49.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 6, 28, 7, 2]

After backtrack at level 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 8]
 solution : [0, 10, 1, 6, 28, 7, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 8]
 solution : [0, 10, 1, 6, 28, 7]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 8]
 solution : [0, 10, 1, 6, 28, 7]

Essensial at level 12 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

Covered at level 12 : {32, 16, 17, 18, 19, 20, 21, 22, 23, 27}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 7, 8]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 7, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 7, 8]


Solution : [0, 10, 1, 6, 28, 7, 8] has cost 42.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 6, 28, 7, 8]

After backtrack at level 12
 pending : [8, 22, 16, 18, 21, 19, 17, 20, 23, 27, 32]
 solution : [0, 10, 1, 6, 28, 7]


Before backtrack at level 11
 pending : [8, 22, 16, 18, 21, 19, 17, 20, 23, 27, 32]
 solution : [0, 10, 1, 6, 28, 7]

After backtrack at level 11
 pending : [8, 22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 9, 12, 30, 15, 29, 31, 13, 14, 2]
 solution : [0, 10, 1, 6, 28, 7]


Invert decision for 7 at level 10


New level: 11
 pending : [8, 22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 9, 12, 30, 15, 29, 31, 13, 14, 2]
 solution : [0, 10, 1, 6, 28]


Before reduction : 
 pending  : [8, 22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 9, 12, 30, 15, 29, 31, 13, 14, 2]
 solution : [0, 10, 1, 6, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [8, 22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 9, 12, 30, 15, 29, 31, 13, 14, 2]
 solution : [0, 10, 1, 6, 28]


Solution : [0, 10, 1, 6, 28] has cost 30.


Decide in level 11 among pending : [8, 22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 9, 12, 30, 15, 29, 31, 13, 14, 2]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

Decide 8 with phase True at level 11

After decision at level 11
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 9, 12, 30, 15, 29, 31, 13, 14, 2]
 solution : [0, 10, 1, 6, 28, 8]


New level: 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 9, 12, 30, 15, 29, 31, 13, 14, 2]
 solution : [0, 10, 1, 6, 28, 8]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 27, 32, 9, 12, 30, 15, 29, 31, 13, 14, 2]
 solution : [0, 10, 1, 6, 28, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 18), (17, 52), (18, 18), (19, 52), (20, 76), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 16), (31, 8), (32, 0), (33, -1)]

Covered at level 12 : {32, 2, 27}

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 13, 14]
 solution : [0, 10, 1, 6, 28, 8]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 13, 14]
 solution : [0, 10, 1, 6, 28, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 16), (31, 8), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 13, 14]
 solution : [0, 10, 1, 6, 28, 8]


Solution : [0, 10, 1, 6, 28, 8] has cost 36.


Decide in level 12 among pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14]
 solution : [0, 10, 1, 6, 28, 8, 13]


New level: 13
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14]
 solution : [0, 10, 1, 6, 28, 8, 13]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14]
 solution : [0, 10, 1, 6, 28, 8, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, 0), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {31, 29, 15}

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 14]
 solution : [0, 10, 1, 6, 28, 8, 13]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 14]
 solution : [0, 10, 1, 6, 28, 8, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, 0), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 14]
 solution : [0, 10, 1, 6, 28, 8, 13]


Solution : [0, 10, 1, 6, 28, 8, 13] has cost 41.


Before backtrack at level 13
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 14]
 solution : [0, 10, 1, 6, 28, 8, 13]

After backtrack at level 13
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 14, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 8, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 14, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 8]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 14, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 8), (13, -1), (14, 32), (15, -1), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 14, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 8]


Solution : [0, 10, 1, 6, 28, 8] has cost 36.


Decide in level 13 among pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 14, 15, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 8, 14]


New level: 14
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 8, 14]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 8, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 8, 14]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 8, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 28, 8, 14]


Solution : [0, 10, 1, 6, 28, 8, 14] has cost 42.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 6, 28, 8, 14]

After backtrack at level 14
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 8, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 8]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 8]

Essensial at level 14 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {29, 31}

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30]
 solution : [0, 10, 1, 6, 28, 8, 15]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30]
 solution : [0, 10, 1, 6, 28, 8, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 2), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30]
 solution : [0, 10, 1, 6, 28, 8, 15]


Solution : [0, 10, 1, 6, 28, 8, 15] has cost 38.


Before backtrack at level 14
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30]
 solution : [0, 10, 1, 6, 28, 8, 15]

After backtrack at level 14
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 8]


Before backtrack at level 13
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31]
 solution : [0, 10, 1, 6, 28, 8]

After backtrack at level 13
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14]
 solution : [0, 10, 1, 6, 28, 8]


Before backtrack at level 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14]
 solution : [0, 10, 1, 6, 28, 8]

After backtrack at level 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 27, 32, 2, 13]
 solution : [0, 10, 1, 6, 28, 8]


Invert decision for 8 at level 11


New level: 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 27, 32, 2, 13]
 solution : [0, 10, 1, 6, 28]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 27, 32, 2, 13]
 solution : [0, 10, 1, 6, 28]

Essensial at level 12 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 14), (18, 4), (19, 14), (20, 73), (21, 13), (22, 16), (23, 73), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 16), (31, 8), (32, 0), (33, -1)]

Covered at level 12 : {32, 27}

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13]
 solution : [0, 10, 1, 6, 28, 2]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13]
 solution : [0, 10, 1, 6, 28, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 16), (31, 8), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13]
 solution : [0, 10, 1, 6, 28, 2]


Solution : [0, 10, 1, 6, 28, 2] has cost 43.


Before backtrack at level 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13]
 solution : [0, 10, 1, 6, 28, 2]

After backtrack at level 12
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32]
 solution : [0, 10, 1, 6, 28]


Before backtrack at level 11
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32]
 solution : [0, 10, 1, 6, 28]

After backtrack at level 11
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8]
 solution : [0, 10, 1, 6, 28]


Before backtrack at level 10
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8]
 solution : [0, 10, 1, 6, 28]

After backtrack at level 10
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7]
 solution : [0, 10, 1, 6, 28]


Before backtrack at level 9
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7]
 solution : [0, 10, 1, 6, 28]

After backtrack at level 9
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4]
 solution : [0, 10, 1, 6, 28]


Before backtrack at level 8
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4]
 solution : [0, 10, 1, 6, 28]

After backtrack at level 8
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3]
 solution : [0, 10, 1, 6, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3]
 solution : [0, 10, 1, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 14), (18, 4), (19, 14), (20, 76), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3]
 solution : [0, 10, 1, 6]


Solution : [0, 10, 1, 6] has cost 20.


Decide in level 8 among pending : [22, 16, 18, 21, 19, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [22, 16, 18, 21, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3]
 solution : [0, 10, 1, 6, 19]


New level: 9
 pending : [22, 16, 18, 21, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3]
 solution : [0, 10, 1, 6, 19]


Before reduction : 
 pending  : [22, 16, 18, 21, 17, 20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3]
 solution : [0, 10, 1, 6, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, 128), (20, 128), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 0), (17, 0), (18, 0), (19, -1), (20, 5), (21, 0), (22, 0), (23, 5), (24, -1), (25, -1), (26, 4), (27, 32), (28, -1), (29, 8), (30, 2), (31, 8), (32, 32), (33, -1)]

Covered at level 9 : {16, 17, 18, 21, 22}

After reduction : 
 pending  : [20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3]
 solution : [0, 10, 1, 6, 19]


Before reduction : 
 pending  : [20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3]
 solution : [0, 10, 1, 6, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 0), (17, 0), (18, 0), (19, -1), (20, 5), (21, 0), (22, 0), (23, 5), (24, -1), (25, -1), (26, 4), (27, 32), (28, -1), (29, 8), (30, 2), (31, 8), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 5), (21, -1), (22, -1), (23, 5), (24, -1), (25, -1), (26, 4), (27, 32), (28, -1), (29, 8), (30, 2), (31, 8), (32, 32), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3]
 solution : [0, 10, 1, 6, 19]


Solution : [0, 10, 1, 6, 19] has cost 54.


Before backtrack at level 9
 pending : [20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3]
 solution : [0, 10, 1, 6, 19]

After backtrack at level 9
 pending : [20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17]
 solution : [0, 10, 1, 6, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17]
 solution : [0, 10, 1, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 5), (21, -1), (22, -1), (23, 5), (24, -1), (25, -1), (26, 4), (27, 32), (28, -1), (29, 8), (30, 2), (31, 8), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, -1), (20, 128), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17]
 solution : [0, 10, 1, 6]


Solution : [0, 10, 1, 6] has cost 20.


Decide in level 9 among pending : [20, 23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, -1), (20, 128), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Decide 20 with phase True at level 9

After decision at level 9
 pending : [23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17]
 solution : [0, 10, 1, 6, 20]


New level: 10
 pending : [23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17]
 solution : [0, 10, 1, 6, 20]


Before reduction : 
 pending  : [23, 9, 12, 30, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17]
 solution : [0, 10, 1, 6, 20]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, -1), (20, 128), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 16), (17, 64), (18, 16), (19, -1), (20, -1), (21, 64), (22, 40), (23, 0), (24, -1), (25, -1), (26, 32), (27, 32), (28, -1), (29, 4), (30, 0), (31, 4), (32, 32), (33, -1)]

Covered at level 10 : {30, 23}

After reduction : 
 pending  : [9, 12, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17]
 solution : [0, 10, 1, 6, 20]


Before reduction : 
 pending  : [9, 12, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17]
 solution : [0, 10, 1, 6, 20]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 16), (17, 64), (18, 16), (19, -1), (20, -1), (21, 64), (22, 40), (23, 0), (24, -1), (25, -1), (26, 32), (27, 32), (28, -1), (29, 4), (30, 0), (31, 4), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 16), (17, 64), (18, 16), (19, -1), (20, -1), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, 32), (27, 32), (28, -1), (29, 4), (30, -1), (31, 4), (32, 32), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 12, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17]
 solution : [0, 10, 1, 6, 20]


Solution : [0, 10, 1, 6, 20] has cost 49.


Before backtrack at level 10
 pending : [9, 12, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17]
 solution : [0, 10, 1, 6, 20]

After backtrack at level 10
 pending : [9, 12, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 20]


Invert decision for 20 at level 9


New level: 10
 pending : [9, 12, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [9, 12, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 16), (17, 64), (18, 16), (19, -1), (20, -1), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, 32), (27, 32), (28, -1), (29, 4), (30, -1), (31, 4), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 12, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6]


Solution : [0, 10, 1, 6] has cost 20.


Decide in level 10 among pending : [9, 12, 15, 29, 31, 14, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17, 23, 30]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [9, 12, 15, 29, 31, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14]


New level: 11
 pending : [9, 12, 15, 29, 31, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14]


Before reduction : 
 pending  : [9, 12, 15, 29, 31, 13, 2, 27, 32, 8, 7, 4, 26, 3, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, 128), (15, 64), (16, 52), (17, 128), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 0), (4, 128), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 16), (17, 26), (18, 16), (19, -1), (20, -1), (21, 20), (22, 20), (23, 14), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 0), (30, 16), (31, 0), (32, 32), (33, -1)]

Covered at level 11 : {3, 7, 9, 12, 13, 15, 29, 31}

After reduction : 
 pending  : [2, 27, 32, 8, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14]


Before reduction : 
 pending  : [2, 27, 32, 8, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 0), (4, 128), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 16), (17, 26), (18, 16), (19, -1), (20, -1), (21, 20), (22, 20), (23, 14), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 0), (30, 16), (31, 0), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 26), (18, 16), (19, -1), (20, -1), (21, 20), (22, 20), (23, 14), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, -1), (30, 16), (31, -1), (32, 32), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 27, 32, 8, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14]


Solution : [0, 10, 1, 6, 14] has cost 26.


Decide in level 11 among pending : [2, 27, 32, 8, 4, 26, 22, 16, 18, 21, 17, 23, 30]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 26), (18, 16), (19, -1), (20, -1), (21, 20), (22, 20), (23, 14), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, -1), (30, 16), (31, -1), (32, 32), (33, -1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [27, 32, 8, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14, 2]


New level: 12
 pending : [27, 32, 8, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14, 2]


Before reduction : 
 pending  : [27, 32, 8, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 26), (18, 16), (19, -1), (20, -1), (21, 20), (22, 20), (23, 14), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, -1), (30, 16), (31, -1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

Covered at level 12 : {32, 4, 8, 16, 17, 18, 21, 22, 23, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 14, 2]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 14, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 14, 2]


Solution : [0, 10, 1, 6, 14, 2] has cost 39.


Before backtrack at level 12
 pending : []
 solution : [0, 10, 1, 6, 14, 2]

After backtrack at level 12
 pending : [27, 32, 8, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [27, 32, 8, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14]


Before reduction : 
 pending  : [27, 32, 8, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 26), (18, 16), (19, -1), (20, -1), (21, 20), (22, 20), (23, 14), (24, -1), (25, -1), (26, 32), (27, 32), (28, -1), (29, -1), (30, 4), (31, -1), (32, 32), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 32, 8, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14]


Solution : [0, 10, 1, 6, 14] has cost 26.


Decide in level 12 among pending : [27, 32, 8, 4, 26, 22, 16, 18, 21, 17, 23, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 26), (18, 16), (19, -1), (20, -1), (21, 20), (22, 20), (23, 14), (24, -1), (25, -1), (26, 32), (27, 32), (28, -1), (29, -1), (30, 4), (31, -1), (32, 32), (33, -1)]

Decide 8 with phase True at level 12

After decision at level 12
 pending : [27, 32, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14, 8]


New level: 13
 pending : [27, 32, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14, 8]


Before reduction : 
 pending  : [27, 32, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, 26), (18, 16), (19, -1), (20, -1), (21, 20), (22, 20), (23, 14), (24, -1), (25, -1), (26, 32), (27, 32), (28, -1), (29, -1), (30, 4), (31, -1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

Covered at level 13 : {32, 4, 16, 17, 18, 21, 22, 23, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 14, 8]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 14, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 14, 8]


Solution : [0, 10, 1, 6, 14, 8] has cost 32.


Before backtrack at level 13
 pending : []
 solution : [0, 10, 1, 6, 14, 8]

After backtrack at level 13
 pending : [27, 32, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14, 8]


Invert decision for 8 at level 12


New level: 13
 pending : [27, 32, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14]


Before reduction : 
 pending  : [27, 32, 4, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14]

Essensial at level 13 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

Covered at level 13 : {32, 16, 17, 18, 21, 22, 23, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 14, 4]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 14, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 14, 4]


Solution : [0, 10, 1, 6, 14, 4] has cost 32.


Before backtrack at level 13
 pending : []
 solution : [0, 10, 1, 6, 14, 4]

After backtrack at level 13
 pending : [4, 27, 32, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14]


Before backtrack at level 12
 pending : [4, 27, 32, 26, 22, 16, 18, 21, 17, 23, 30]
 solution : [0, 10, 1, 6, 14]

After backtrack at level 12
 pending : [4, 27, 32, 26, 22, 16, 18, 21, 17, 23, 30, 8]
 solution : [0, 10, 1, 6, 14]


Before backtrack at level 11
 pending : [4, 27, 32, 26, 22, 16, 18, 21, 17, 23, 30, 8]
 solution : [0, 10, 1, 6, 14]

After backtrack at level 11
 pending : [4, 27, 32, 26, 22, 16, 18, 21, 17, 23, 30, 8, 9, 12, 15, 29, 31, 13, 7, 3, 2]
 solution : [0, 10, 1, 6, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [4, 27, 32, 26, 22, 16, 18, 21, 17, 23, 30, 8, 9, 12, 15, 29, 31, 13, 7, 3, 2]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [4, 27, 32, 26, 22, 16, 18, 21, 17, 23, 30, 8, 9, 12, 15, 29, 31, 13, 7, 3, 2]
 solution : [0, 10, 1, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, 128), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [4, 27, 32, 26, 22, 16, 18, 21, 17, 23, 30, 8, 9, 12, 15, 29, 31, 13, 7, 3, 2]
 solution : [0, 10, 1, 6]


Solution : [0, 10, 1, 6] has cost 20.


Decide in level 11 among pending : [4, 27, 32, 26, 22, 16, 18, 21, 17, 23, 30, 8, 9, 12, 15, 29, 31, 13, 7, 3, 2]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, 128), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Decide 4 with phase True at level 11

After decision at level 11
 pending : [27, 32, 26, 22, 16, 18, 21, 17, 23, 30, 8, 9, 12, 15, 29, 31, 13, 7, 3, 2]
 solution : [0, 10, 1, 6, 4]


New level: 12
 pending : [27, 32, 26, 22, 16, 18, 21, 17, 23, 30, 8, 9, 12, 15, 29, 31, 13, 7, 3, 2]
 solution : [0, 10, 1, 6, 4]


Before reduction : 
 pending  : [27, 32, 26, 22, 16, 18, 21, 17, 23, 30, 8, 9, 12, 15, 29, 31, 13, 7, 3, 2]
 solution : [0, 10, 1, 6, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, 128), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, 0), (28, -1), (29, 32), (30, 64), (31, 32), (32, 0), (33, -1)]

Covered at level 12 : {32, 8, 2, 27}

After reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 23, 30, 9, 12, 15, 29, 31, 13, 7, 3]
 solution : [0, 10, 1, 6, 4]


Before reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 23, 30, 9, 12, 15, 29, 31, 13, 7, 3]
 solution : [0, 10, 1, 6, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, 0), (28, -1), (29, 32), (30, 64), (31, 32), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 23, 30, 9, 12, 15, 29, 31, 13, 7, 3]
 solution : [0, 10, 1, 6, 4]


Solution : [0, 10, 1, 6, 4] has cost 26.


Decide in level 12 among pending : [26, 22, 16, 18, 21, 17, 23, 30, 9, 12, 15, 29, 31, 13, 7, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [26, 22, 16, 18, 21, 17, 23, 30, 9, 12, 15, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13]


New level: 13
 pending : [26, 22, 16, 18, 21, 17, 23, 30, 9, 12, 15, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13]


Before reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 23, 30, 9, 12, 15, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 0), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Covered at level 13 : {15}

After reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 23, 30, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13]


Before reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 23, 30, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 0), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 23, 30, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13]


Solution : [0, 10, 1, 6, 4, 13] has cost 31.


Decide in level 13 among pending : [26, 22, 16, 18, 21, 17, 23, 30, 9, 12, 29, 31, 7, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Decide 23 with phase True at level 13

After decision at level 13
 pending : [26, 22, 16, 18, 21, 17, 30, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13, 23]


New level: 14
 pending : [26, 22, 16, 18, 21, 17, 30, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13, 23]


Before reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 30, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 4), (17, 9), (18, 4), (19, -1), (20, -1), (21, 16), (22, 9), (23, -1), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 1), (30, 0), (31, 1), (32, -1), (33, -1)]

Covered at level 14 : {30}

After reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13, 23]


Before reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 4), (17, 9), (18, 4), (19, -1), (20, -1), (21, 16), (22, 9), (23, -1), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 1), (30, 0), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 4), (17, 9), (18, 4), (19, -1), (20, -1), (21, 16), (22, 9), (23, -1), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13, 23]


Solution : [0, 10, 1, 6, 4, 13, 23] has cost 60.


Before backtrack at level 14
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13, 23]

After backtrack at level 14
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3, 30]
 solution : [0, 10, 1, 6, 4, 13, 23]


Invert decision for 23 at level 13


New level: 14
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3, 30]
 solution : [0, 10, 1, 6, 4, 13]


Before reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3, 30]
 solution : [0, 10, 1, 6, 4, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 4), (17, 9), (18, 4), (19, -1), (20, -1), (21, 16), (22, 9), (23, -1), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3, 30]
 solution : [0, 10, 1, 6, 4, 13]


Solution : [0, 10, 1, 6, 4, 13] has cost 31.


Decide in level 14 among pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Decide 30 with phase True at level 14

After decision at level 14
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13, 30]


New level: 15
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13, 30]


Before reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13, 30]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 20), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13, 30]


Solution : [0, 10, 1, 6, 4, 13, 30] has cost 41.


Before backtrack at level 15
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13, 30]

After backtrack at level 15
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13, 30]


Invert decision for 30 at level 14


New level: 15
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13]


Before reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 20), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]
 solution : [0, 10, 1, 6, 4, 13]


Solution : [0, 10, 1, 6, 4, 13] has cost 31.


Decide in level 15 among pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 7, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 7 with phase True at level 15

After decision at level 15
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 3]
 solution : [0, 10, 1, 6, 4, 13, 7]


New level: 16
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 3]
 solution : [0, 10, 1, 6, 4, 13, 7]


Before reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 3]
 solution : [0, 10, 1, 6, 4, 13, 7]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 16 : {3, 9, 12, 16, 17, 18, 21, 22, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 4, 13, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 4, 13, 7]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 4, 13, 7]


Solution : [0, 10, 1, 6, 4, 13, 7] has cost 37.


Before backtrack at level 16
 pending : []
 solution : [0, 10, 1, 6, 4, 13, 7]

After backtrack at level 16
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 3]
 solution : [0, 10, 1, 6, 4, 13, 7]


Invert decision for 7 at level 15


New level: 16
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 3]
 solution : [0, 10, 1, 6, 4, 13]


Before reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 3]
 solution : [0, 10, 1, 6, 4, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 3]
 solution : [0, 10, 1, 6, 4, 13]


Solution : [0, 10, 1, 6, 4, 13] has cost 31.


Decide in level 16 among pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 3 with phase True at level 16

After decision at level 16
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31]
 solution : [0, 10, 1, 6, 4, 13, 3]


New level: 17
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31]
 solution : [0, 10, 1, 6, 4, 13, 3]


Before reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31]
 solution : [0, 10, 1, 6, 4, 13, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 17 : {9, 12, 16, 17, 18, 21, 22, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 4, 13, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 4, 13, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 4, 13, 3]


Solution : [0, 10, 1, 6, 4, 13, 3] has cost 44.


Before backtrack at level 17
 pending : []
 solution : [0, 10, 1, 6, 4, 13, 3]

After backtrack at level 17
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31]
 solution : [0, 10, 1, 6, 4, 13, 3]


Invert decision for 3 at level 16


New level: 17
 pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31]
 solution : [0, 10, 1, 6, 4, 13]


Before reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31]
 solution : [0, 10, 1, 6, 4, 13]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31]
 solution : [0, 10, 1, 6, 4, 13]


Solution : [0, 10, 1, 6, 4, 13] has cost 31.


Decide in level 17 among pending : [26, 22, 16, 18, 21, 17, 9, 12, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 21 with phase True at level 17

After decision at level 17
 pending : [26, 22, 16, 18, 17, 9, 12, 29, 31]
 solution : [0, 10, 1, 6, 4, 13, 21]


New level: 18
 pending : [26, 22, 16, 18, 17, 9, 12, 29, 31]
 solution : [0, 10, 1, 6, 4, 13, 21]


Before reduction : 
 pending  : [26, 22, 16, 18, 17, 9, 12, 29, 31]
 solution : [0, 10, 1, 6, 4, 13, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 18 : {16, 17, 18, 22, 26, 29, 31}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 4, 13, 21]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 4, 13, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 4, 13, 21]


Solution : [0, 10, 1, 6, 4, 13, 21] has cost 65.


Before backtrack at level 18
 pending : [9, 12]
 solution : [0, 10, 1, 6, 4, 13, 21]

After backtrack at level 18
 pending : [9, 12, 26, 22, 16, 18, 17, 29, 31]
 solution : [0, 10, 1, 6, 4, 13, 21]


Invert decision for 21 at level 17


New level: 18
 pending : [9, 12, 26, 22, 16, 18, 17, 29, 31]
 solution : [0, 10, 1, 6, 4, 13]


Before reduction : 
 pending  : [9, 12, 26, 22, 16, 18, 17, 29, 31]
 solution : [0, 10, 1, 6, 4, 13]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, -1), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [9, 12, 26, 22, 16, 18, 17, 29, 31]
 solution : [0, 10, 1, 6, 4, 13]


Solution : [0, 10, 1, 6, 4, 13] has cost 31.


Decide in level 18 among pending : [9, 12, 26, 22, 16, 18, 17, 29, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, -1), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 17 with phase True at level 18

After decision at level 18
 pending : [9, 12, 26, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 4, 13, 17]


New level: 19
 pending : [9, 12, 26, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 4, 13, 17]


Before reduction : 
 pending  : [9, 12, 26, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 4, 13, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, -1), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 19 : {16, 18, 22, 26, 29, 31}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 4, 13, 17]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 4, 13, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 4, 13, 17]


Solution : [0, 10, 1, 6, 4, 13, 17] has cost 65.


Before backtrack at level 19
 pending : [9, 12]
 solution : [0, 10, 1, 6, 4, 13, 17]

After backtrack at level 19
 pending : [9, 12, 26, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 4, 13, 17]


Invert decision for 17 at level 18


New level: 19
 pending : [9, 12, 26, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 4, 13]


Before reduction : 
 pending  : [9, 12, 26, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 4, 13]

Essensial at level 19 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 19 : {16, 18, 26, 29, 31}

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 4, 13, 22]


Before reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 4, 13, 22]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [9, 12]
 solution : [0, 10, 1, 6, 4, 13, 22]


Solution : [0, 10, 1, 6, 4, 13, 22] has cost 65.


Before backtrack at level 19
 pending : [9, 12]
 solution : [0, 10, 1, 6, 4, 13, 22]

After backtrack at level 19
 pending : [9, 12, 22, 26, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 4, 13]


Before backtrack at level 18
 pending : [9, 12, 22, 26, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 4, 13]

After backtrack at level 18
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17]
 solution : [0, 10, 1, 6, 4, 13]


Before backtrack at level 17
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17]
 solution : [0, 10, 1, 6, 4, 13]

After backtrack at level 17
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 13]


Before backtrack at level 16
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 13]

After backtrack at level 16
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 3]
 solution : [0, 10, 1, 6, 4, 13]


Before backtrack at level 15
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 3]
 solution : [0, 10, 1, 6, 4, 13]

After backtrack at level 15
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 3, 7]
 solution : [0, 10, 1, 6, 4, 13]


Before backtrack at level 14
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 3, 7]
 solution : [0, 10, 1, 6, 4, 13]

After backtrack at level 14
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 3, 7, 30]
 solution : [0, 10, 1, 6, 4, 13]


Before backtrack at level 13
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 3, 7, 30]
 solution : [0, 10, 1, 6, 4, 13]

After backtrack at level 13
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 3, 7, 30, 15, 23]
 solution : [0, 10, 1, 6, 4, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 3, 7, 30, 15, 23]
 solution : [0, 10, 1, 6, 4]


Before reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 3, 7, 30, 15, 23]
 solution : [0, 10, 1, 6, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 3, 7, 30, 15, 23]
 solution : [0, 10, 1, 6, 4]


Solution : [0, 10, 1, 6, 4] has cost 26.


Decide in level 13 among pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 3, 7, 30, 15, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

Decide 3 with phase True at level 13

After decision at level 13
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 7, 30, 15, 23]
 solution : [0, 10, 1, 6, 4, 3]


New level: 14
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 7, 30, 15, 23]
 solution : [0, 10, 1, 6, 4, 3]


Before reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 7, 30, 15, 23]
 solution : [0, 10, 1, 6, 4, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {7, 9, 12, 15, 16, 17, 18, 21, 22, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 4, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 4, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 4, 3]


Solution : [0, 10, 1, 6, 4, 3] has cost 39.


Before backtrack at level 14
 pending : []
 solution : [0, 10, 1, 6, 4, 3]

After backtrack at level 14
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 7, 30, 15, 23]
 solution : [0, 10, 1, 6, 4, 3]


Invert decision for 3 at level 13


New level: 14
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 7, 30, 15, 23]
 solution : [0, 10, 1, 6, 4]


Before reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 7, 30, 15, 23]
 solution : [0, 10, 1, 6, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 7, 30, 15, 23]
 solution : [0, 10, 1, 6, 4]


Solution : [0, 10, 1, 6, 4] has cost 26.


Decide in level 14 among pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 7, 30, 15, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

Decide 7 with phase True at level 14

After decision at level 14
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30, 15, 23]
 solution : [0, 10, 1, 6, 4, 7]


New level: 15
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30, 15, 23]
 solution : [0, 10, 1, 6, 4, 7]


Before reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30, 15, 23]
 solution : [0, 10, 1, 6, 4, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 15 : {9, 12, 15, 16, 17, 18, 21, 22, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 4, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 4, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 4, 7]


Solution : [0, 10, 1, 6, 4, 7] has cost 32.


Before backtrack at level 15
 pending : []
 solution : [0, 10, 1, 6, 4, 7]

After backtrack at level 15
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30, 15, 23]
 solution : [0, 10, 1, 6, 4, 7]


Invert decision for 7 at level 14


New level: 15
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30, 15, 23]
 solution : [0, 10, 1, 6, 4]


Before reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30, 15, 23]
 solution : [0, 10, 1, 6, 4]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30, 23]
 solution : [0, 10, 1, 6, 4, 15]


Before reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30, 23]
 solution : [0, 10, 1, 6, 4, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30, 23]
 solution : [0, 10, 1, 6, 4, 15]


Solution : [0, 10, 1, 6, 4, 15] has cost 28.


Decide in level 15 among pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Decide 23 with phase True at level 15

After decision at level 15
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30]
 solution : [0, 10, 1, 6, 4, 15, 23]


New level: 16
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30]
 solution : [0, 10, 1, 6, 4, 15, 23]


Before reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30]
 solution : [0, 10, 1, 6, 4, 15, 23]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, 104), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 9), (18, 4), (19, -1), (20, -1), (21, 16), (22, 9), (23, -1), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 1), (30, 0), (31, 1), (32, -1), (33, -1)]

Covered at level 16 : {30}

After reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 23]


Before reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 23]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 9), (18, 4), (19, -1), (20, -1), (21, 16), (22, 9), (23, -1), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 1), (30, 0), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 9), (18, 4), (19, -1), (20, -1), (21, 16), (22, 9), (23, -1), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 23]


Solution : [0, 10, 1, 6, 4, 15, 23] has cost 57.


Before backtrack at level 16
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 23]

After backtrack at level 16
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30]
 solution : [0, 10, 1, 6, 4, 15, 23]


Invert decision for 23 at level 15


New level: 16
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30]
 solution : [0, 10, 1, 6, 4, 15]


Before reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30]
 solution : [0, 10, 1, 6, 4, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 9), (18, 4), (19, -1), (20, -1), (21, 16), (22, 9), (23, -1), (24, -1), (25, -1), (26, 1), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30]
 solution : [0, 10, 1, 6, 4, 15]


Solution : [0, 10, 1, 6, 4, 15] has cost 28.


Decide in level 16 among pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Decide 30 with phase True at level 16

After decision at level 16
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 30]


New level: 17
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 30]


Before reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 30]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 8), (17, 20), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 30]


Solution : [0, 10, 1, 6, 4, 15, 30] has cost 38.


Before backtrack at level 17
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 30]

After backtrack at level 17
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 30]


Invert decision for 30 at level 16


New level: 17
 pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15]


Before reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 8), (17, 20), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15]


Solution : [0, 10, 1, 6, 4, 15] has cost 28.


Decide in level 17 among pending : [9, 12, 22, 26, 16, 18, 29, 31, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 9 with phase True at level 17

After decision at level 17
 pending : [12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 9]


New level: 18
 pending : [12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 9]


Before reduction : 
 pending  : [12, 22, 26, 16, 18, 29, 31, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, 22), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, 8), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 7), (18, 0), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 18 : {12, 16, 18, 26, 29, 31}

After reduction : 
 pending  : [22, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 9]


Before reduction : 
 pending  : [22, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 7), (18, 0), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, -1), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [22, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 9]


Solution : [0, 10, 1, 6, 4, 15, 9] has cost 37.


Before backtrack at level 18
 pending : [22, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 9]

After backtrack at level 18
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 4, 15, 9]


Invert decision for 9 at level 17


New level: 18
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 4, 15]


Before reduction : 
 pending  : [22, 17, 21, 12, 26, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 4, 15]

Essensial at level 18 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, -1), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 7), (18, 0), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 18 : {16, 18, 26, 29, 31}

After reduction : 
 pending  : [22, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 12]


Before reduction : 
 pending  : [22, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 12]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 7), (18, 0), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, -1), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [22, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 12]


Solution : [0, 10, 1, 6, 4, 15, 12] has cost 37.


Before backtrack at level 18
 pending : [22, 17, 21]
 solution : [0, 10, 1, 6, 4, 15, 12]

After backtrack at level 18
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 4, 15]


Before backtrack at level 17
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 4, 15]

After backtrack at level 17
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9]
 solution : [0, 10, 1, 6, 4, 15]


Before backtrack at level 16
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9]
 solution : [0, 10, 1, 6, 4, 15]

After backtrack at level 16
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9, 30]
 solution : [0, 10, 1, 6, 4, 15]


Before backtrack at level 15
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9, 30]
 solution : [0, 10, 1, 6, 4, 15]

After backtrack at level 15
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23]
 solution : [0, 10, 1, 6, 4]


Before backtrack at level 14
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23]
 solution : [0, 10, 1, 6, 4]

After backtrack at level 14
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23, 7]
 solution : [0, 10, 1, 6, 4]


Before backtrack at level 13
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23, 7]
 solution : [0, 10, 1, 6, 4]

After backtrack at level 13
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23, 7, 3]
 solution : [0, 10, 1, 6, 4]


Before backtrack at level 12
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23, 7, 3]
 solution : [0, 10, 1, 6, 4]

After backtrack at level 12
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13]
 solution : [0, 10, 1, 6, 4]


Invert decision for 4 at level 11


New level: 12
 pending : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13]
 solution : [0, 10, 1, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, -1), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, 128), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13]
 solution : [0, 10, 1, 6]


Solution : [0, 10, 1, 6] has cost 20.


Decide in level 12 among pending : [22, 17, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, 128), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [22, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13]
 solution : [0, 10, 1, 6, 17]


New level: 13
 pending : [22, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13]
 solution : [0, 10, 1, 6, 17]


Before reduction : 
 pending  : [22, 21, 12, 26, 16, 18, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13]
 solution : [0, 10, 1, 6, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, 128), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 5), (24, -1), (25, -1), (26, 1), (27, 16), (28, -1), (29, 8), (30, 2), (31, 8), (32, 16), (33, -1)]

Covered at level 13 : {16, 18, 21, 22}

After reduction : 
 pending  : [12, 26, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13]
 solution : [0, 10, 1, 6, 17]


Before reduction : 
 pending  : [12, 26, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13]
 solution : [0, 10, 1, 6, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 5), (24, -1), (25, -1), (26, 1), (27, 16), (28, -1), (29, 8), (30, 2), (31, 8), (32, 16), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 5), (24, -1), (25, -1), (26, 1), (27, 16), (28, -1), (29, 8), (30, 2), (31, 8), (32, 16), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [12, 26, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13]
 solution : [0, 10, 1, 6, 17]


Solution : [0, 10, 1, 6, 17] has cost 54.


Before backtrack at level 13
 pending : [12, 26, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13]
 solution : [0, 10, 1, 6, 17]

After backtrack at level 13
 pending : [12, 26, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13, 22, 21, 16, 18]
 solution : [0, 10, 1, 6, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [12, 26, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13, 22, 21, 16, 18]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [12, 26, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13, 22, 21, 16, 18]
 solution : [0, 10, 1, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 5), (24, -1), (25, -1), (26, 1), (27, 16), (28, -1), (29, 8), (30, 2), (31, 8), (32, 16), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [12, 26, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13, 22, 21, 16, 18]
 solution : [0, 10, 1, 6]


Solution : [0, 10, 1, 6] has cost 20.


Decide in level 13 among pending : [12, 26, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13, 22, 21, 16, 18]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Decide 26 with phase True at level 13

After decision at level 13
 pending : [12, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13, 22, 21, 16, 18]
 solution : [0, 10, 1, 6, 26]


New level: 14
 pending : [12, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13, 22, 21, 16, 18]
 solution : [0, 10, 1, 6, 26]


Before reduction : 
 pending  : [12, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13, 22, 21, 16, 18]
 solution : [0, 10, 1, 6, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, 128), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 18), (17, -1), (18, 18), (19, -1), (20, -1), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [12, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13, 22, 21, 16, 18]
 solution : [0, 10, 1, 6, 26]


Solution : [0, 10, 1, 6, 26] has cost 30.


Decide in level 14 among pending : [12, 29, 31, 9, 30, 15, 23, 7, 3, 27, 32, 8, 2, 13, 22, 21, 16, 18]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 18), (17, -1), (18, 18), (19, -1), (20, -1), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

Decide 7 with phase True at level 14

After decision at level 14
 pending : [12, 29, 31, 9, 30, 15, 23, 3, 27, 32, 8, 2, 13, 22, 21, 16, 18]
 solution : [0, 10, 1, 6, 26, 7]


New level: 15
 pending : [12, 29, 31, 9, 30, 15, 23, 3, 27, 32, 8, 2, 13, 22, 21, 16, 18]
 solution : [0, 10, 1, 6, 26, 7]


Before reduction : 
 pending  : [12, 29, 31, 9, 30, 15, 23, 3, 27, 32, 8, 2, 13, 22, 21, 16, 18]
 solution : [0, 10, 1, 6, 26, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 18), (17, -1), (18, 18), (19, -1), (20, -1), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 8), (22, 8), (23, 2), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

Covered at level 15 : {3, 9, 12, 13, 15, 29, 30, 31}

After reduction : 
 pending  : [23, 27, 32, 8, 2, 22, 21, 16, 18]
 solution : [0, 10, 1, 6, 26, 7]


Before reduction : 
 pending  : [23, 27, 32, 8, 2, 22, 21, 16, 18]
 solution : [0, 10, 1, 6, 26, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 8), (22, 8), (23, 2), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 8), (22, 8), (23, 2), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 27, 32, 8, 2, 22, 21, 16, 18]
 solution : [0, 10, 1, 6, 26, 7]


Solution : [0, 10, 1, 6, 26, 7] has cost 36.


Before backtrack at level 15
 pending : [23, 27, 32, 8, 2, 22, 21, 16, 18]
 solution : [0, 10, 1, 6, 26, 7]

After backtrack at level 15
 pending : [23, 27, 32, 8, 2, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26, 7]


Invert decision for 7 at level 14


New level: 15
 pending : [23, 27, 32, 8, 2, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26]


Before reduction : 
 pending  : [23, 27, 32, 8, 2, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 8), (22, 8), (23, 2), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 18), (17, -1), (18, 18), (19, -1), (20, -1), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 27, 32, 8, 2, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26]


Solution : [0, 10, 1, 6, 26] has cost 30.


Decide in level 15 among pending : [23, 27, 32, 8, 2, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 18), (17, -1), (18, 18), (19, -1), (20, -1), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

Decide 8 with phase True at level 15

After decision at level 15
 pending : [23, 27, 32, 2, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26, 8]


New level: 16
 pending : [23, 27, 32, 2, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26, 8]


Before reduction : 
 pending  : [23, 27, 32, 2, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 18), (17, -1), (18, 18), (19, -1), (20, -1), (21, 37), (22, 64), (23, 76), (24, -1), (25, -1), (26, -1), (27, 8), (28, -1), (29, 8), (30, 16), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, 28), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 16), (31, 8), (32, 0), (33, -1)]

Covered at level 16 : {32, 2, 27}

After reduction : 
 pending  : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26, 8]


Before reduction : 
 pending  : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, 28), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 16), (31, 8), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, 28), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26, 8]


Solution : [0, 10, 1, 6, 26, 8] has cost 36.


Before backtrack at level 16
 pending : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26, 8]

After backtrack at level 16
 pending : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 27, 32, 2]
 solution : [0, 10, 1, 6, 26, 8]


Invert decision for 8 at level 15


New level: 16
 pending : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 27, 32, 2]
 solution : [0, 10, 1, 6, 26]


Before reduction : 
 pending  : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 27, 32, 2]
 solution : [0, 10, 1, 6, 26]

Essensial at level 16 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, 28), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 16), (31, 8), (32, 0), (33, -1)]

Covered at level 16 : {32, 27}

After reduction : 
 pending  : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26, 2]


Before reduction : 
 pending  : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26, 2]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, 16), (31, 8), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26, 2]


Solution : [0, 10, 1, 6, 26, 2] has cost 43.


Before backtrack at level 16
 pending : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13]
 solution : [0, 10, 1, 6, 26, 2]

After backtrack at level 16
 pending : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 2, 27, 32]
 solution : [0, 10, 1, 6, 26]


Before backtrack at level 15
 pending : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 2, 27, 32]
 solution : [0, 10, 1, 6, 26]

After backtrack at level 15
 pending : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 2, 27, 32, 8]
 solution : [0, 10, 1, 6, 26]


Before backtrack at level 14
 pending : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 2, 27, 32, 8]
 solution : [0, 10, 1, 6, 26]

After backtrack at level 14
 pending : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 2, 27, 32, 8, 7]
 solution : [0, 10, 1, 6, 26]


Invert decision for 26 at level 13


New level: 14
 pending : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 2, 27, 32, 8, 7]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 2, 27, 32, 8, 7]
 solution : [0, 10, 1, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 4), (17, -1), (18, 4), (19, -1), (20, -1), (21, 13), (22, 16), (23, 76), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 16), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 2, 27, 32, 8, 7]
 solution : [0, 10, 1, 6]


Solution : [0, 10, 1, 6] has cost 20.


Decide in level 14 among pending : [23, 22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 2, 27, 32, 8, 7]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Decide 23 with phase True at level 14

After decision at level 14
 pending : [22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 2, 27, 32, 8, 7]
 solution : [0, 10, 1, 6, 23]


New level: 15
 pending : [22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 2, 27, 32, 8, 7]
 solution : [0, 10, 1, 6, 23]


Before reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9, 30, 15, 3, 13, 2, 27, 32, 8, 7]
 solution : [0, 10, 1, 6, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, 128), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 16), (17, -1), (18, 16), (19, -1), (20, -1), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 4), (30, 0), (31, 4), (32, 32), (33, -1)]

Covered at level 15 : {30}

After reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9, 15, 3, 13, 2, 27, 32, 8, 7]
 solution : [0, 10, 1, 6, 23]


Before reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9, 15, 3, 13, 2, 27, 32, 8, 7]
 solution : [0, 10, 1, 6, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 16), (17, -1), (18, 16), (19, -1), (20, -1), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 4), (30, 0), (31, 4), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 16), (17, -1), (18, 16), (19, -1), (20, -1), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 4), (30, -1), (31, 4), (32, 32), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9, 15, 3, 13, 2, 27, 32, 8, 7]
 solution : [0, 10, 1, 6, 23]


Solution : [0, 10, 1, 6, 23] has cost 49.


Before backtrack at level 15
 pending : [22, 21, 16, 18, 12, 29, 31, 9, 15, 3, 13, 2, 27, 32, 8, 7]
 solution : [0, 10, 1, 6, 23]

After backtrack at level 15
 pending : [22, 21, 16, 18, 12, 29, 31, 9, 15, 3, 13, 2, 27, 32, 8, 7, 30]
 solution : [0, 10, 1, 6, 23]


Invert decision for 23 at level 14


New level: 15
 pending : [22, 21, 16, 18, 12, 29, 31, 9, 15, 3, 13, 2, 27, 32, 8, 7, 30]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9, 15, 3, 13, 2, 27, 32, 8, 7, 30]
 solution : [0, 10, 1, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 16), (17, -1), (18, 16), (19, -1), (20, -1), (21, 64), (22, 40), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 4), (30, -1), (31, 4), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9, 15, 3, 13, 2, 27, 32, 8, 7, 30]
 solution : [0, 10, 1, 6]


Solution : [0, 10, 1, 6] has cost 20.


Decide in level 15 among pending : [22, 21, 16, 18, 12, 29, 31, 9, 15, 3, 13, 2, 27, 32, 8, 7, 30]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Decide 3 with phase True at level 15

After decision at level 15
 pending : [22, 21, 16, 18, 12, 29, 31, 9, 15, 13, 2, 27, 32, 8, 7, 30]
 solution : [0, 10, 1, 6, 3]


New level: 16
 pending : [22, 21, 16, 18, 12, 29, 31, 9, 15, 13, 2, 27, 32, 8, 7, 30]
 solution : [0, 10, 1, 6, 3]


Before reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9, 15, 13, 2, 27, 32, 8, 7, 30]
 solution : [0, 10, 1, 6, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 16), (17, -1), (18, 16), (19, -1), (20, -1), (21, 20), (22, 20), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 0), (30, 4), (31, 0), (32, 32), (33, -1)]

Covered at level 16 : {7, 9, 12, 13, 15, 29, 31}

After reduction : 
 pending  : [22, 21, 16, 18, 2, 27, 32, 8, 30]
 solution : [0, 10, 1, 6, 3]


Before reduction : 
 pending  : [22, 21, 16, 18, 2, 27, 32, 8, 30]
 solution : [0, 10, 1, 6, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 128), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, 16), (17, -1), (18, 16), (19, -1), (20, -1), (21, 20), (22, 20), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 0), (30, 4), (31, 0), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, -1), (18, 16), (19, -1), (20, -1), (21, 20), (22, 20), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, -1), (30, 4), (31, -1), (32, 32), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 2, 27, 32, 8, 30]
 solution : [0, 10, 1, 6, 3]


Solution : [0, 10, 1, 6, 3] has cost 33.


Before backtrack at level 16
 pending : [22, 21, 16, 18, 2, 27, 32, 8, 30]
 solution : [0, 10, 1, 6, 3]

After backtrack at level 16
 pending : [22, 21, 16, 18, 2, 27, 32, 8, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6, 3]


Invert decision for 3 at level 15


New level: 16
 pending : [22, 21, 16, 18, 2, 27, 32, 8, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [22, 21, 16, 18, 2, 27, 32, 8, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16), (17, -1), (18, 16), (19, -1), (20, -1), (21, 20), (22, 20), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, -1), (30, 4), (31, -1), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 2, 27, 32, 8, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6]


Solution : [0, 10, 1, 6] has cost 20.


Decide in level 16 among pending : [22, 21, 16, 18, 2, 27, 32, 8, 30, 12, 29, 31, 9, 15, 13, 7]

Coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

Decide 2 with phase True at level 16

After decision at level 16
 pending : [22, 21, 16, 18, 27, 32, 8, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6, 2]


New level: 17
 pending : [22, 21, 16, 18, 27, 32, 8, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6, 2]


Before reduction : 
 pending  : [22, 21, 16, 18, 27, 32, 8, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6, 2]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 52), (17, -1), (18, 52), (19, -1), (20, -1), (21, 96), (22, 96), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, -1), (29, 32), (30, 64), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 32), (30, 64), (31, 32), (32, 0), (33, -1)]

Covered at level 17 : {32, 8, 27}

After reduction : 
 pending  : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6, 2]


Before reduction : 
 pending  : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6, 2]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 0), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 32), (30, 64), (31, 32), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6, 2]


Solution : [0, 10, 1, 6, 2] has cost 33.


Before backtrack at level 17
 pending : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6, 2]

After backtrack at level 17
 pending : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 13, 7, 27, 32, 8]
 solution : [0, 10, 1, 6, 2]


Invert decision for 2 at level 16


New level: 17
 pending : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 13, 7, 27, 32, 8]
 solution : [0, 10, 1, 6]


Before reduction : 
 pending  : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 13, 7, 27, 32, 8]
 solution : [0, 10, 1, 6]

Essensial at level 17 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 32), (30, 64), (31, 32), (32, 0), (33, -1)]

Covered at level 17 : {32, 27}

After reduction : 
 pending  : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6, 8]


Before reduction : 
 pending  : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 32), (30, 64), (31, 32), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 13, 7]
 solution : [0, 10, 1, 6, 8]


Solution : [0, 10, 1, 6, 8] has cost 26.


Decide in level 17 among pending : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 13, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

Decide 13 with phase True at level 17

After decision at level 17
 pending : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 7]
 solution : [0, 10, 1, 6, 8, 13]


New level: 18
 pending : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 7]
 solution : [0, 10, 1, 6, 8, 13]


Before reduction : 
 pending  : [22, 21, 16, 18, 30, 12, 29, 31, 9, 15, 7]
 solution : [0, 10, 1, 6, 8, 13]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 0), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Covered at level 18 : {15}

After reduction : 
 pending  : [22, 21, 16, 18, 30, 12, 29, 31, 9, 7]
 solution : [0, 10, 1, 6, 8, 13]


Before reduction : 
 pending  : [22, 21, 16, 18, 30, 12, 29, 31, 9, 7]
 solution : [0, 10, 1, 6, 8, 13]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 0), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 30, 12, 29, 31, 9, 7]
 solution : [0, 10, 1, 6, 8, 13]


Solution : [0, 10, 1, 6, 8, 13] has cost 31.


Decide in level 18 among pending : [22, 21, 16, 18, 30, 12, 29, 31, 9, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Decide 30 with phase True at level 18

After decision at level 18
 pending : [22, 21, 16, 18, 12, 29, 31, 9, 7]
 solution : [0, 10, 1, 6, 8, 13, 30]


New level: 19
 pending : [22, 21, 16, 18, 12, 29, 31, 9, 7]
 solution : [0, 10, 1, 6, 8, 13, 30]


Before reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9, 7]
 solution : [0, 10, 1, 6, 8, 13, 30]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9, 7]
 solution : [0, 10, 1, 6, 8, 13, 30]


Solution : [0, 10, 1, 6, 8, 13, 30] has cost 41.


Before backtrack at level 19
 pending : [22, 21, 16, 18, 12, 29, 31, 9, 7]
 solution : [0, 10, 1, 6, 8, 13, 30]

After backtrack at level 19
 pending : [22, 21, 16, 18, 12, 29, 31, 9, 7]
 solution : [0, 10, 1, 6, 8, 13, 30]


Invert decision for 30 at level 18


New level: 19
 pending : [22, 21, 16, 18, 12, 29, 31, 9, 7]
 solution : [0, 10, 1, 6, 8, 13]


Before reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9, 7]
 solution : [0, 10, 1, 6, 8, 13]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9, 7]
 solution : [0, 10, 1, 6, 8, 13]


Solution : [0, 10, 1, 6, 8, 13] has cost 31.


Decide in level 19 among pending : [22, 21, 16, 18, 12, 29, 31, 9, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 7 with phase True at level 19

After decision at level 19
 pending : [22, 21, 16, 18, 12, 29, 31, 9]
 solution : [0, 10, 1, 6, 8, 13, 7]


New level: 20
 pending : [22, 21, 16, 18, 12, 29, 31, 9]
 solution : [0, 10, 1, 6, 8, 13, 7]


Before reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9]
 solution : [0, 10, 1, 6, 8, 13, 7]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 20 : {9, 12, 16, 18, 21, 22, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 8, 13, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 8, 13, 7]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 8, 13, 7]


Solution : [0, 10, 1, 6, 8, 13, 7] has cost 37.


Before backtrack at level 20
 pending : []
 solution : [0, 10, 1, 6, 8, 13, 7]

After backtrack at level 20
 pending : [22, 21, 16, 18, 12, 29, 31, 9]
 solution : [0, 10, 1, 6, 8, 13, 7]


Invert decision for 7 at level 19


New level: 20
 pending : [22, 21, 16, 18, 12, 29, 31, 9]
 solution : [0, 10, 1, 6, 8, 13]


Before reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9]
 solution : [0, 10, 1, 6, 8, 13]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 12, 29, 31, 9]
 solution : [0, 10, 1, 6, 8, 13]


Solution : [0, 10, 1, 6, 8, 13] has cost 31.


Decide in level 20 among pending : [22, 21, 16, 18, 12, 29, 31, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 21 with phase True at level 20

After decision at level 20
 pending : [22, 16, 18, 12, 29, 31, 9]
 solution : [0, 10, 1, 6, 8, 13, 21]


New level: 21
 pending : [22, 16, 18, 12, 29, 31, 9]
 solution : [0, 10, 1, 6, 8, 13, 21]


Before reduction : 
 pending  : [22, 16, 18, 12, 29, 31, 9]
 solution : [0, 10, 1, 6, 8, 13, 21]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 21 : {16, 18, 22, 29, 31}

After reduction : 
 pending  : [12, 9]
 solution : [0, 10, 1, 6, 8, 13, 21]


Before reduction : 
 pending  : [12, 9]
 solution : [0, 10, 1, 6, 8, 13, 21]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [12, 9]
 solution : [0, 10, 1, 6, 8, 13, 21]


Solution : [0, 10, 1, 6, 8, 13, 21] has cost 65.


Before backtrack at level 21
 pending : [12, 9]
 solution : [0, 10, 1, 6, 8, 13, 21]

After backtrack at level 21
 pending : [12, 9, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 8, 13, 21]


Invert decision for 21 at level 20


New level: 21
 pending : [12, 9, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 8, 13]


Before reduction : 
 pending  : [12, 9, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 8, 13]

Essensial at level 21 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 21 : {16, 18, 29, 31}

After reduction : 
 pending  : [12, 9]
 solution : [0, 10, 1, 6, 8, 13, 22]


Before reduction : 
 pending  : [12, 9]
 solution : [0, 10, 1, 6, 8, 13, 22]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [12, 9]
 solution : [0, 10, 1, 6, 8, 13, 22]


Solution : [0, 10, 1, 6, 8, 13, 22] has cost 65.


Before backtrack at level 21
 pending : [12, 9]
 solution : [0, 10, 1, 6, 8, 13, 22]

After backtrack at level 21
 pending : [12, 9, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 8, 13]


Before backtrack at level 20
 pending : [12, 9, 22, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 8, 13]

After backtrack at level 20
 pending : [12, 9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 13]


Before backtrack at level 19
 pending : [12, 9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 13]

After backtrack at level 19
 pending : [12, 9, 22, 16, 18, 29, 31, 21, 7]
 solution : [0, 10, 1, 6, 8, 13]


Before backtrack at level 18
 pending : [12, 9, 22, 16, 18, 29, 31, 21, 7]
 solution : [0, 10, 1, 6, 8, 13]

After backtrack at level 18
 pending : [12, 9, 22, 16, 18, 29, 31, 21, 7, 15, 30]
 solution : [0, 10, 1, 6, 8, 13]


Invert decision for 13 at level 17


New level: 18
 pending : [12, 9, 22, 16, 18, 29, 31, 21, 7, 15, 30]
 solution : [0, 10, 1, 6, 8]


Before reduction : 
 pending  : [12, 9, 22, 16, 18, 29, 31, 21, 7, 15, 30]
 solution : [0, 10, 1, 6, 8]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [12, 9, 22, 16, 18, 29, 31, 21, 7, 15, 30]
 solution : [0, 10, 1, 6, 8]


Solution : [0, 10, 1, 6, 8] has cost 26.


Decide in level 18 among pending : [12, 9, 22, 16, 18, 29, 31, 21, 7, 15, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

Decide 7 with phase True at level 18

After decision at level 18
 pending : [12, 9, 22, 16, 18, 29, 31, 21, 15, 30]
 solution : [0, 10, 1, 6, 8, 7]


New level: 19
 pending : [12, 9, 22, 16, 18, 29, 31, 21, 15, 30]
 solution : [0, 10, 1, 6, 8, 7]


Before reduction : 
 pending  : [12, 9, 22, 16, 18, 29, 31, 21, 15, 30]
 solution : [0, 10, 1, 6, 8, 7]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 32), (30, 64), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 19 : {9, 12, 15, 16, 18, 21, 22, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 8, 7]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 8, 7]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 6, 8, 7]


Solution : [0, 10, 1, 6, 8, 7] has cost 32.


Before backtrack at level 19
 pending : []
 solution : [0, 10, 1, 6, 8, 7]

After backtrack at level 19
 pending : [12, 9, 22, 16, 18, 29, 31, 21, 15, 30]
 solution : [0, 10, 1, 6, 8, 7]


Invert decision for 7 at level 18


New level: 19
 pending : [12, 9, 22, 16, 18, 29, 31, 21, 15, 30]
 solution : [0, 10, 1, 6, 8]


Before reduction : 
 pending  : [12, 9, 22, 16, 18, 29, 31, 21, 15, 30]
 solution : [0, 10, 1, 6, 8]

Essensial at level 19 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [12, 9, 22, 16, 18, 29, 31, 21, 30]
 solution : [0, 10, 1, 6, 8, 15]


Before reduction : 
 pending  : [12, 9, 22, 16, 18, 29, 31, 21, 30]
 solution : [0, 10, 1, 6, 8, 15]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [12, 9, 22, 16, 18, 29, 31, 21, 30]
 solution : [0, 10, 1, 6, 8, 15]


Solution : [0, 10, 1, 6, 8, 15] has cost 28.


Decide in level 19 among pending : [12, 9, 22, 16, 18, 29, 31, 21, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

Decide 30 with phase True at level 19

After decision at level 19
 pending : [12, 9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 15, 30]


New level: 20
 pending : [12, 9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 15, 30]


Before reduction : 
 pending  : [12, 9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 15, 30]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, 64), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [12, 9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 15, 30]


Solution : [0, 10, 1, 6, 8, 15, 30] has cost 38.


Before backtrack at level 20
 pending : [12, 9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 15, 30]

After backtrack at level 20
 pending : [12, 9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 15, 30]


Invert decision for 30 at level 19


New level: 20
 pending : [12, 9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 15]


Before reduction : 
 pending  : [12, 9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 15]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 8), (19, -1), (20, -1), (21, 19), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [12, 9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 15]


Solution : [0, 10, 1, 6, 8, 15] has cost 28.


Decide in level 20 among pending : [12, 9, 22, 16, 18, 29, 31, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

Decide 12 with phase True at level 20

After decision at level 20
 pending : [9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 15, 12]


New level: 21
 pending : [9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 15, 12]


Before reduction : 
 pending  : [9, 22, 16, 18, 29, 31, 21]
 solution : [0, 10, 1, 6, 8, 15, 12]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 12), (17, -1), (18, 12), (19, -1), (20, -1), (21, 22), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 21 : {9, 16, 18, 29, 31}

After reduction : 
 pending  : [22, 21]
 solution : [0, 10, 1, 6, 8, 15, 12]


Before reduction : 
 pending  : [22, 21]
 solution : [0, 10, 1, 6, 8, 15, 12]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [22, 21]
 solution : [0, 10, 1, 6, 8, 15, 12]


Solution : [0, 10, 1, 6, 8, 15, 12] has cost 37.


Before backtrack at level 21
 pending : [22, 21]
 solution : [0, 10, 1, 6, 8, 15, 12]

After backtrack at level 21
 pending : [22, 21, 9, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 8, 15, 12]


Invert decision for 12 at level 20


New level: 21
 pending : [22, 21, 9, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 8, 15]


Before reduction : 
 pending  : [22, 21, 9, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 8, 15]

Essensial at level 21 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

Covered at level 21 : {16, 18, 29, 31}

After reduction : 
 pending  : [22, 21]
 solution : [0, 10, 1, 6, 8, 15, 9]


Before reduction : 
 pending  : [22, 21]
 solution : [0, 10, 1, 6, 8, 15, 9]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [22, 21]
 solution : [0, 10, 1, 6, 8, 15, 9]


Solution : [0, 10, 1, 6, 8, 15, 9] has cost 37.


Before backtrack at level 21
 pending : [22, 21]
 solution : [0, 10, 1, 6, 8, 15, 9]

After backtrack at level 21
 pending : [22, 21, 9, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 8, 15]


Before backtrack at level 20
 pending : [22, 21, 9, 16, 18, 29, 31]
 solution : [0, 10, 1, 6, 8, 15]

After backtrack at level 20
 pending : [22, 21, 9, 16, 18, 29, 31, 12]
 solution : [0, 10, 1, 6, 8, 15]


Before backtrack at level 19
 pending : [22, 21, 9, 16, 18, 29, 31, 12]
 solution : [0, 10, 1, 6, 8, 15]

After backtrack at level 19
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30]
 solution : [0, 10, 1, 6, 8]


Before backtrack at level 18
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30]
 solution : [0, 10, 1, 6, 8]

After backtrack at level 18
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7]
 solution : [0, 10, 1, 6, 8]


Before backtrack at level 17
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7]
 solution : [0, 10, 1, 6, 8]

After backtrack at level 17
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13]
 solution : [0, 10, 1, 6]


Before backtrack at level 16
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13]
 solution : [0, 10, 1, 6]

After backtrack at level 16
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2]
 solution : [0, 10, 1, 6]


Before backtrack at level 15
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2]
 solution : [0, 10, 1, 6]

After backtrack at level 15
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3]
 solution : [0, 10, 1, 6]


Before backtrack at level 14
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3]
 solution : [0, 10, 1, 6]

After backtrack at level 14
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23]
 solution : [0, 10, 1, 6]


Before backtrack at level 13
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23]
 solution : [0, 10, 1, 6]

After backtrack at level 13
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26]
 solution : [0, 10, 1, 6]


Before backtrack at level 12
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26]
 solution : [0, 10, 1, 6]

After backtrack at level 12
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17]
 solution : [0, 10, 1, 6]


Before backtrack at level 11
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17]
 solution : [0, 10, 1, 6]

After backtrack at level 11
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4]
 solution : [0, 10, 1, 6]


Before backtrack at level 10
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4]
 solution : [0, 10, 1, 6]

After backtrack at level 10
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14]
 solution : [0, 10, 1, 6]


Before backtrack at level 9
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14]
 solution : [0, 10, 1, 6]

After backtrack at level 9
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20]
 solution : [0, 10, 1, 6]


Before backtrack at level 8
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20]
 solution : [0, 10, 1, 6]

After backtrack at level 8
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19]
 solution : [0, 10, 1, 6]


Before backtrack at level 7
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19]
 solution : [0, 10, 1, 6]

After backtrack at level 7
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28]
 solution : [0, 10, 1, 6]


Before backtrack at level 6
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28]
 solution : [0, 10, 1, 6]

After backtrack at level 6
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28, 24]
 solution : [0, 10, 1, 6]


Before backtrack at level 5
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28, 24]
 solution : [0, 10, 1, 6]

After backtrack at level 5
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28, 24, 25]
 solution : [0, 10, 1, 6]


Before backtrack at level 4
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28, 24, 25]
 solution : [0, 10, 1, 6]

After backtrack at level 4
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28, 24, 25, 33, 11]
 solution : [0, 10, 1, 6]


Invert decision for 6 at level 3


New level: 4
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28, 24, 25, 33, 11]
 solution : [0, 10, 1]


Before reduction : 
 pending  : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28, 24, 25, 33, 11]
 solution : [0, 10, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 7), (22, 8), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, 264), (4, 128), (5, -1), (6, -1), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 64), (17, 130), (18, 112), (19, 256), (20, 160), (21, 464), (22, 240), (23, 448), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 64), (31, 128), (32, 64), (33, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28, 24, 25, 33, 11]
 solution : [0, 10, 1]


Solution : [0, 10, 1] has cost 10.


Decide in level 4 among pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 7, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28, 24, 25, 33, 11]

Coverage : [(0, -1), (1, -1), (2, 320), (3, 264), (4, 128), (5, -1), (6, -1), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 64), (17, 130), (18, 112), (19, 256), (20, 160), (21, 464), (22, 240), (23, 448), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 64), (31, 128), (32, 64), (33, 128)]

Decide 7 with phase True at level 4

After decision at level 4
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28, 24, 25, 33, 11]
 solution : [0, 10, 1, 7]


New level: 5
 pending : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28, 24, 25, 33, 11]
 solution : [0, 10, 1, 7]


Before reduction : 
 pending  : [22, 21, 9, 16, 18, 29, 31, 12, 15, 30, 8, 27, 32, 13, 2, 3, 23, 26, 17, 4, 14, 20, 19, 28, 24, 25, 33, 11]
 solution : [0, 10, 1, 7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, 264), (4, 128), (5, -1), (6, -1), (7, 512), (8, 512), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 64), (17, 130), (18, 112), (19, 256), (20, 160), (21, 464), (22, 240), (23, 448), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 64), (31, 128), (32, 64), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, 0), (4, 128), (5, -1), (6, -1), (7, -1), (8, 512), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 28), (17, 26), (18, 28), (19, 52), (20, 22), (21, 106), (22, 45), (23, 112), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 8), (30, 16), (31, 2), (32, 64), (33, 32)]

Covered at level 5 : {3, 9, 11, 12, 13, 14, 15}

After reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 30, 8, 27, 32, 2, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33]
 solution : [0, 10, 1, 7]


Before reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 30, 8, 27, 32, 2, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33]
 solution : [0, 10, 1, 7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, 0), (4, 128), (5, -1), (6, -1), (7, -1), (8, 512), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 28), (17, 26), (18, 28), (19, 52), (20, 22), (21, 106), (22, 45), (23, 112), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 8), (30, 16), (31, 2), (32, 64), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 28), (17, 26), (18, 28), (19, 52), (20, 22), (21, 106), (22, 45), (23, 112), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 8), (30, 16), (31, 2), (32, 64), (33, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 30, 8, 27, 32, 2, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33]
 solution : [0, 10, 1, 7]


Solution : [0, 10, 1, 7] has cost 16.


Decide in level 5 among pending : [22, 21, 16, 18, 29, 31, 30, 8, 27, 32, 2, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33]

Coverage : [(0, -1), (1, -1), (2, 320), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 28), (17, 26), (18, 28), (19, 52), (20, 22), (21, 106), (22, 45), (23, 112), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 8), (30, 16), (31, 2), (32, 64), (33, 32)]

Decide 8 with phase True at level 5

After decision at level 5
 pending : [22, 21, 16, 18, 29, 31, 30, 27, 32, 2, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33]
 solution : [0, 10, 1, 7, 8]


New level: 6
 pending : [22, 21, 16, 18, 29, 31, 30, 27, 32, 2, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33]
 solution : [0, 10, 1, 7, 8]


Before reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 30, 27, 32, 2, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33]
 solution : [0, 10, 1, 7, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 320), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 28), (17, 26), (18, 28), (19, 52), (20, 22), (21, 106), (22, 45), (23, 112), (24, 192), (25, 384), (26, 256), (27, 128), (28, 128), (29, 8), (30, 16), (31, 2), (32, 64), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 6 : {2, 4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 7, 8]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 7, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 7, 8]


Solution : [0, 10, 1, 7, 8] has cost 22.


Before backtrack at level 6
 pending : []
 solution : [0, 10, 1, 7, 8]

After backtrack at level 6
 pending : [22, 21, 16, 18, 29, 31, 30, 27, 32, 2, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33]
 solution : [0, 10, 1, 7, 8]


Invert decision for 8 at level 5


New level: 6
 pending : [22, 21, 16, 18, 29, 31, 30, 27, 32, 2, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33]
 solution : [0, 10, 1, 7]


Before reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 30, 27, 32, 2, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33]
 solution : [0, 10, 1, 7]

Essensial at level 6 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 6 : {4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 7, 2]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 7, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 7, 2]


Solution : [0, 10, 1, 7, 2] has cost 29.


Before backtrack at level 6
 pending : []
 solution : [0, 10, 1, 7, 2]

After backtrack at level 6
 pending : [2, 22, 21, 16, 18, 29, 31, 30, 27, 32, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33]
 solution : [0, 10, 1, 7]


Before backtrack at level 5
 pending : [2, 22, 21, 16, 18, 29, 31, 30, 27, 32, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33]
 solution : [0, 10, 1, 7]

After backtrack at level 5
 pending : [2, 22, 21, 16, 18, 29, 31, 30, 27, 32, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33, 9, 12, 15, 13, 3, 14, 11, 8]
 solution : [0, 10, 1, 7]


Invert decision for 7 at level 4


New level: 5
 pending : [2, 22, 21, 16, 18, 29, 31, 30, 27, 32, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33, 9, 12, 15, 13, 3, 14, 11, 8]
 solution : [0, 10, 1]


Before reduction : 
 pending  : [2, 22, 21, 16, 18, 29, 31, 30, 27, 32, 23, 26, 17, 4, 20, 19, 28, 24, 25, 33, 9, 12, 15, 13, 3, 14, 11, 8]
 solution : [0, 10, 1]

Essensial at level 5 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 258), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 12), (17, 22), (18, 24), (19, 44), (20, 112), (21, 98), (22, 39), (23, 400), (24, 5), (25, 10), (26, 32), (27, 0), (28, 16), (29, 256), (30, 64), (31, 128), (32, 0), (33, 32)]

Covered at level 5 : {32, 2, 27, 4}

After reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 30, 23, 26, 17, 20, 19, 28, 24, 25, 33, 9, 12, 15, 13, 3, 14, 11]
 solution : [0, 10, 1, 8]


Before reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 30, 23, 26, 17, 20, 19, 28, 24, 25, 33, 9, 12, 15, 13, 3, 14, 11]
 solution : [0, 10, 1, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 258), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 12), (17, 22), (18, 24), (19, 44), (20, 112), (21, 98), (22, 39), (23, 400), (24, 5), (25, 10), (26, 32), (27, 0), (28, 16), (29, 256), (30, 64), (31, 128), (32, 0), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 258), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 12), (17, 22), (18, 24), (19, 44), (20, 112), (21, 98), (22, 39), (23, 400), (24, 5), (25, 10), (26, 32), (27, -1), (28, 16), (29, 256), (30, 64), (31, 128), (32, -1), (33, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 30, 23, 26, 17, 20, 19, 28, 24, 25, 33, 9, 12, 15, 13, 3, 14, 11]
 solution : [0, 10, 1, 8]


Solution : [0, 10, 1, 8] has cost 16.


Decide in level 5 among pending : [22, 21, 16, 18, 29, 31, 30, 23, 26, 17, 20, 19, 28, 24, 25, 33, 9, 12, 15, 13, 3, 14, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 258), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 12), (17, 22), (18, 24), (19, 44), (20, 112), (21, 98), (22, 39), (23, 400), (24, 5), (25, 10), (26, 32), (27, -1), (28, 16), (29, 256), (30, 64), (31, 128), (32, -1), (33, 32)]

Decide 23 with phase True at level 5

After decision at level 5
 pending : [22, 21, 16, 18, 29, 31, 30, 26, 17, 20, 19, 28, 24, 25, 33, 9, 12, 15, 13, 3, 14, 11]
 solution : [0, 10, 1, 8, 23]


New level: 6
 pending : [22, 21, 16, 18, 29, 31, 30, 26, 17, 20, 19, 28, 24, 25, 33, 9, 12, 15, 13, 3, 14, 11]
 solution : [0, 10, 1, 8, 23]


Before reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 30, 26, 17, 20, 19, 28, 24, 25, 33, 9, 12, 15, 13, 3, 14, 11]
 solution : [0, 10, 1, 8, 23]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 258), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 12), (17, 22), (18, 24), (19, 44), (20, 112), (21, 98), (22, 39), (23, 400), (24, 5), (25, 10), (26, 32), (27, -1), (28, 16), (29, 256), (30, 64), (31, 128), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 257), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 9), (18, 8), (19, 18), (20, 0), (21, 64), (22, 18), (23, -1), (24, 0), (25, 0), (26, 4), (27, -1), (28, 2), (29, 64), (30, 0), (31, 16), (32, -1), (33, 8)]

Covered at level 6 : {24, 25, 20, 30}

After reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 3, 14, 11]
 solution : [0, 10, 1, 8, 23]


Before reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 3, 14, 11]
 solution : [0, 10, 1, 8, 23]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 257), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 9), (18, 8), (19, 18), (20, 0), (21, 64), (22, 18), (23, -1), (24, 0), (25, 0), (26, 4), (27, -1), (28, 2), (29, 64), (30, 0), (31, 16), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 257), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 9), (18, 8), (19, 18), (20, -1), (21, 64), (22, 18), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, 2), (29, 64), (30, -1), (31, 16), (32, -1), (33, 8)]

Covered at level 6 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 3, 14, 11]
 solution : [0, 10, 1, 8, 23]


Solution : [0, 10, 1, 8, 23] has cost 45.


Before backtrack at level 6
 pending : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 3, 14, 11]
 solution : [0, 10, 1, 8, 23]

After backtrack at level 6
 pending : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 3, 14, 11, 30, 20, 24, 25]
 solution : [0, 10, 1, 8, 23]


Invert decision for 23 at level 5


New level: 6
 pending : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 3, 14, 11, 30, 20, 24, 25]
 solution : [0, 10, 1, 8]


Before reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 3, 14, 11, 30, 20, 24, 25]
 solution : [0, 10, 1, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 257), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 4), (17, 9), (18, 8), (19, 18), (20, -1), (21, 64), (22, 18), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, 2), (29, 64), (30, -1), (31, 16), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 258), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 12), (17, 22), (18, 24), (19, 44), (20, 112), (21, 98), (22, 39), (23, -1), (24, 5), (25, 10), (26, 32), (27, -1), (28, 16), (29, 256), (30, 64), (31, 128), (32, -1), (33, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 3, 14, 11, 30, 20, 24, 25]
 solution : [0, 10, 1, 8]


Solution : [0, 10, 1, 8] has cost 16.


Decide in level 6 among pending : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 3, 14, 11, 30, 20, 24, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 258), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 12), (17, 22), (18, 24), (19, 44), (20, 112), (21, 98), (22, 39), (23, -1), (24, 5), (25, 10), (26, 32), (27, -1), (28, 16), (29, 256), (30, 64), (31, 128), (32, -1), (33, 32)]

Decide 3 with phase True at level 6

After decision at level 6
 pending : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 14, 11, 30, 20, 24, 25]
 solution : [0, 10, 1, 8, 3]


New level: 7
 pending : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 14, 11, 30, 20, 24, 25]
 solution : [0, 10, 1, 8, 3]


Before reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 14, 11, 30, 20, 24, 25]
 solution : [0, 10, 1, 8, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 258), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, 256), (12, 64), (13, 128), (14, 128), (15, 64), (16, 12), (17, 22), (18, 24), (19, 44), (20, 112), (21, 98), (22, 39), (23, -1), (24, 5), (25, 10), (26, 32), (27, -1), (28, 16), (29, 256), (30, 64), (31, 128), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 7 : {9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33}

After reduction : 
 pending  : []
 solution : [0, 10, 1, 8, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 1, 8, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 1, 8, 3]


Solution : [0, 10, 1, 8, 3] has cost 29.


Before backtrack at level 7
 pending : []
 solution : [0, 10, 1, 8, 3]

After backtrack at level 7
 pending : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 14, 11, 30, 20, 24, 25]
 solution : [0, 10, 1, 8, 3]


Invert decision for 3 at level 6


New level: 7
 pending : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 14, 11, 30, 20, 24, 25]
 solution : [0, 10, 1, 8]


Before reduction : 
 pending  : [22, 21, 16, 18, 29, 31, 26, 17, 19, 28, 33, 9, 12, 15, 13, 14, 11, 30, 20, 24, 25]
 solution : [0, 10, 1, 8]

Essensial at level 7 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, 0), (13, 8), (14, 32), (15, 1), (16, 0), (17, 7), (18, 0), (19, 13), (20, 11), (21, 58), (22, 34), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, 16), (30, 0), (31, 2), (32, -1), (33, 16)]

Covered at level 7 : {12, 16, 18, 24, 25, 26, 28, 30}

After reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20]
 solution : [0, 10, 1, 8, 9]


Before reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20]
 solution : [0, 10, 1, 8, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, 0), (13, 8), (14, 32), (15, 1), (16, 0), (17, 7), (18, 0), (19, 13), (20, 11), (21, 58), (22, 34), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, 16), (30, 0), (31, 2), (32, -1), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, 8), (14, 32), (15, 1), (16, -1), (17, 7), (18, -1), (19, 13), (20, 11), (21, 58), (22, 34), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 16), (30, -1), (31, 2), (32, -1), (33, 16)]

Covered at level 7 : set()

After reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20]
 solution : [0, 10, 1, 8, 9]


Solution : [0, 10, 1, 8, 9] has cost 25.


Before backtrack at level 7
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20]
 solution : [0, 10, 1, 8, 9]

After backtrack at level 7
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25]
 solution : [0, 10, 1, 8]


Before backtrack at level 6
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25]
 solution : [0, 10, 1, 8]

After backtrack at level 6
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3]
 solution : [0, 10, 1, 8]


Before backtrack at level 5
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3]
 solution : [0, 10, 1, 8]

After backtrack at level 5
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 2, 27, 32, 4, 23]
 solution : [0, 10, 1]


Before backtrack at level 4
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 2, 27, 32, 4, 23]
 solution : [0, 10, 1]

After backtrack at level 4
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 2, 27, 32, 4, 23, 7]
 solution : [0, 10, 1]


Before backtrack at level 3
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 2, 27, 32, 4, 23, 7]
 solution : [0, 10, 1]

After backtrack at level 3
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 2, 27, 32, 4, 23, 7, 6]
 solution : [0, 10, 1]


Before backtrack at level 2
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 2, 27, 32, 4, 23, 7, 6]
 solution : [0, 10, 1]

After backtrack at level 2
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 2, 27, 32, 4, 23, 7, 6, 5]
 solution : [0, 10, 1]


Invert decision for 1 at level 1


New level: 2
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 2, 27, 32, 4, 23, 7, 6, 5]
 solution : [0, 10]


Before reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 2, 27, 32, 4, 23, 7, 6, 5]
 solution : [0, 10]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, 8), (14, 32), (15, 1), (16, -1), (17, 7), (18, -1), (19, 13), (20, 11), (21, 58), (22, 34), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 16), (30, -1), (31, 2), (32, -1), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 768), (3, 576), (4, 512), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 256), (17, 520), (18, 224), (19, 512), (20, 320), (21, 576), (22, 448), (23, 512), (24, 384), (25, 384), (26, 256), (27, 128), (28, 256), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Covered at level 2 : set()

After reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 2, 27, 32, 4, 23, 7, 6, 5]
 solution : [0, 10]


Solution : [0, 10] has cost 7.


Decide in level 2 among pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 2, 27, 32, 4, 23, 7, 6, 5]

Coverage : [(0, -1), (1, -1), (2, 768), (3, 576), (4, 512), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 256), (17, 520), (18, 224), (19, 512), (20, 320), (21, 576), (22, 448), (23, 512), (24, 384), (25, 384), (26, 256), (27, 128), (28, 256), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Decide 2 with phase True at level 2

After decision at level 2
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 27, 32, 4, 23, 7, 6, 5]
 solution : [0, 10, 2]


New level: 3
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 27, 32, 4, 23, 7, 6, 5]
 solution : [0, 10, 2]


Before reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 27, 32, 4, 23, 7, 6, 5]
 solution : [0, 10, 2]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 768), (3, 576), (4, 512), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 256), (17, 520), (18, 224), (19, 512), (20, 320), (21, 576), (22, 448), (23, 512), (24, 384), (25, 384), (26, 256), (27, 128), (28, 256), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 576), (4, 128), (5, 768), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, 0), (33, 64)]

Covered at level 3 : {32}

After reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 27, 4, 23, 7, 6, 5]
 solution : [0, 10, 2]


Before reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 27, 4, 23, 7, 6, 5]
 solution : [0, 10, 2]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 576), (4, 128), (5, 768), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, 0), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 576), (4, 128), (5, 768), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Covered at level 3 : set()

After reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 27, 4, 23, 7, 6, 5]
 solution : [0, 10, 2]


Solution : [0, 10, 2] has cost 20.


Decide in level 3 among pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 27, 4, 23, 7, 6, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 576), (4, 128), (5, 768), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Decide 5 with phase True at level 3

After decision at level 3
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 27, 4, 23, 7, 6]
 solution : [0, 10, 2, 5]


New level: 4
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 27, 4, 23, 7, 6]
 solution : [0, 10, 2, 5]


Before reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 24, 25, 3, 8, 27, 4, 23, 7, 6]
 solution : [0, 10, 2, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 576), (4, 128), (5, 768), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 528), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 36), (17, 28), (18, 48), (19, 48), (20, 16), (21, 60), (22, 45), (23, 24), (24, 0), (25, 5), (26, 128), (27, 32), (28, 16), (29, 256), (30, 16), (31, 256), (32, -1), (33, 64)]

Covered at level 4 : {24}

After reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 25, 3, 8, 27, 4, 23, 7, 6]
 solution : [0, 10, 2, 5]


Before reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 25, 3, 8, 27, 4, 23, 7, 6]
 solution : [0, 10, 2, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 528), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 36), (17, 28), (18, 48), (19, 48), (20, 16), (21, 60), (22, 45), (23, 24), (24, 0), (25, 5), (26, 128), (27, 32), (28, 16), (29, 256), (30, 16), (31, 256), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 528), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 36), (17, 28), (18, 48), (19, 48), (20, 16), (21, 60), (22, 45), (23, 24), (24, -1), (25, 5), (26, 128), (27, 32), (28, 16), (29, 256), (30, 16), (31, 256), (32, -1), (33, 64)]

Covered at level 4 : set()

After reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 25, 3, 8, 27, 4, 23, 7, 6]
 solution : [0, 10, 2, 5]


Solution : [0, 10, 2, 5] has cost 41.


Before backtrack at level 4
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 25, 3, 8, 27, 4, 23, 7, 6]
 solution : [0, 10, 2, 5]

After backtrack at level 4
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 25, 3, 8, 27, 4, 23, 7, 6, 24]
 solution : [0, 10, 2, 5]


Invert decision for 5 at level 3


New level: 4
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 25, 3, 8, 27, 4, 23, 7, 6, 24]
 solution : [0, 10, 2]


Before reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 25, 3, 8, 27, 4, 23, 7, 6, 24]
 solution : [0, 10, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 528), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 36), (17, 28), (18, 48), (19, 48), (20, 16), (21, 60), (22, 45), (23, 24), (24, -1), (25, 5), (26, 128), (27, 32), (28, 16), (29, 256), (30, 16), (31, 256), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 576), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Covered at level 4 : set()

After reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 25, 3, 8, 27, 4, 23, 7, 6, 24]
 solution : [0, 10, 2]


Solution : [0, 10, 2] has cost 20.


Decide in level 4 among pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 25, 3, 8, 27, 4, 23, 7, 6, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 576), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Decide 3 with phase True at level 4

After decision at level 4
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24]
 solution : [0, 10, 2, 3]


New level: 5
 pending : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24]
 solution : [0, 10, 2, 3]


Before reduction : 
 pending  : [22, 21, 29, 31, 17, 19, 33, 15, 13, 14, 11, 20, 9, 16, 18, 26, 28, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24]
 solution : [0, 10, 2, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 576), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 64), (8, 128), (9, 0), (10, -1), (11, 0), (12, 64), (13, 1), (14, 128), (15, 256), (16, 9), (17, 16), (18, 0), (19, 0), (20, 5), (21, 21), (22, 0), (23, 12), (24, 5), (25, 12), (26, 16), (27, 16), (28, 0), (29, 32), (30, 2), (31, 0), (32, -1), (33, 16)]

Covered at level 5 : {9, 11, 18, 19, 22, 28, 31}

After reduction : 
 pending  : [21, 29, 17, 33, 15, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24]
 solution : [0, 10, 2, 3]


Before reduction : 
 pending  : [21, 29, 17, 33, 15, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24]
 solution : [0, 10, 2, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 64), (8, 128), (9, 0), (10, -1), (11, 0), (12, 64), (13, 1), (14, 128), (15, 256), (16, 9), (17, 16), (18, 0), (19, 0), (20, 5), (21, 21), (22, 0), (23, 12), (24, 5), (25, 12), (26, 16), (27, 16), (28, 0), (29, 32), (30, 2), (31, 0), (32, -1), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, 64), (13, 1), (14, 128), (15, 256), (16, 9), (17, 16), (18, -1), (19, -1), (20, 5), (21, 21), (22, -1), (23, 12), (24, 5), (25, 12), (26, 16), (27, 16), (28, -1), (29, 16), (30, 2), (31, -1), (32, -1), (33, 16)]

Covered at level 5 : set()

After reduction : 
 pending  : [21, 29, 17, 33, 15, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24]
 solution : [0, 10, 2, 3]


Solution : [0, 10, 2, 3] has cost 33.


Before backtrack at level 5
 pending : [21, 29, 17, 33, 15, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24]
 solution : [0, 10, 2, 3]

After backtrack at level 5
 pending : [21, 29, 17, 33, 15, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24, 22, 31, 19, 11, 9, 18, 28]
 solution : [0, 10, 2, 3]


Invert decision for 3 at level 4


New level: 5
 pending : [21, 29, 17, 33, 15, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24, 22, 31, 19, 11, 9, 18, 28]
 solution : [0, 10, 2]


Before reduction : 
 pending  : [21, 29, 17, 33, 15, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24, 22, 31, 19, 11, 9, 18, 28]
 solution : [0, 10, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, 64), (13, 1), (14, 128), (15, 256), (16, 9), (17, 16), (18, -1), (19, -1), (20, 5), (21, 21), (22, -1), (23, 12), (24, 5), (25, 12), (26, 16), (27, 16), (28, -1), (29, 16), (30, 2), (31, -1), (32, -1), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Covered at level 5 : set()

After reduction : 
 pending  : [21, 29, 17, 33, 15, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24, 22, 31, 19, 11, 9, 18, 28]
 solution : [0, 10, 2]


Solution : [0, 10, 2] has cost 20.


Decide in level 5 among pending : [21, 29, 17, 33, 15, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24, 22, 31, 19, 11, 9, 18, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Decide 15 with phase True at level 5

After decision at level 5
 pending : [21, 29, 17, 33, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24, 22, 31, 19, 11, 9, 18, 28]
 solution : [0, 10, 2, 15]


New level: 6
 pending : [21, 29, 17, 33, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24, 22, 31, 19, 11, 9, 18, 28]
 solution : [0, 10, 2, 15]


Before reduction : 
 pending  : [21, 29, 17, 33, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24, 22, 31, 19, 11, 9, 18, 28]
 solution : [0, 10, 2, 15]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 128), (13, 256), (14, 256), (15, -1), (16, 24), (17, 44), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 5), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Covered at level 6 : set()

After reduction : 
 pending  : [21, 29, 17, 33, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24, 22, 31, 19, 11, 9, 18, 28]
 solution : [0, 10, 2, 15]


Solution : [0, 10, 2, 15] has cost 22.


Decide in level 6 among pending : [21, 29, 17, 33, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 7, 6, 24, 22, 31, 19, 11, 9, 18, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 128), (13, 256), (14, 256), (15, -1), (16, 24), (17, 44), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 5), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Decide 7 with phase True at level 6

After decision at level 6
 pending : [21, 29, 17, 33, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 6, 24, 22, 31, 19, 11, 9, 18, 28]
 solution : [0, 10, 2, 15, 7]


New level: 7
 pending : [21, 29, 17, 33, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 6, 24, 22, 31, 19, 11, 9, 18, 28]
 solution : [0, 10, 2, 15, 7]


Before reduction : 
 pending  : [21, 29, 17, 33, 13, 14, 20, 16, 26, 12, 30, 25, 8, 27, 4, 23, 6, 24, 22, 31, 19, 11, 9, 18, 28]
 solution : [0, 10, 2, 15, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 128), (13, 256), (14, 256), (15, -1), (16, 24), (17, 44), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 5), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 0), (7, -1), (8, 0), (9, 16), (10, -1), (11, 64), (12, 128), (13, 128), (14, 256), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 2), (31, 1), (32, -1), (33, 0)]

Covered at level 7 : {33, 6, 8, 21, 22, 23, 24, 25, 26, 27, 28, 29}

After reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 11, 9, 18]
 solution : [0, 10, 2, 15, 7]


Before reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 11, 9, 18]
 solution : [0, 10, 2, 15, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 0), (7, -1), (8, 0), (9, 16), (10, -1), (11, 64), (12, 128), (13, 128), (14, 256), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 2), (31, 1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, 64), (12, 128), (13, 128), (14, 256), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 11, 9, 18]
 solution : [0, 10, 2, 15, 7]


Solution : [0, 10, 2, 15, 7] has cost 28.


Before backtrack at level 7
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 11, 9, 18]
 solution : [0, 10, 2, 15, 7]

After backtrack at level 7
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 11, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]
 solution : [0, 10, 2, 15, 7]


Invert decision for 7 at level 6


New level: 7
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 11, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]
 solution : [0, 10, 2, 15]


Before reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 11, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]
 solution : [0, 10, 2, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, 64), (12, 128), (13, 128), (14, 256), (15, -1), (16, 6), (17, 5), (18, 6), (19, 5), (20, 2), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 288), (7, -1), (8, 128), (9, 256), (10, -1), (11, 512), (12, 128), (13, 256), (14, 256), (15, -1), (16, 24), (17, 44), (18, 100), (19, 256), (20, 160), (21, 196), (22, 85), (23, 448), (24, 5), (25, 96), (26, 128), (27, 32), (28, 32), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 11, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]
 solution : [0, 10, 2, 15]


Solution : [0, 10, 2, 15] has cost 22.


Decide in level 7 among pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 11, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 288), (7, -1), (8, 128), (9, 256), (10, -1), (11, 512), (12, 128), (13, 256), (14, 256), (15, -1), (16, 24), (17, 44), (18, 100), (19, 256), (20, 160), (21, 196), (22, 85), (23, 448), (24, 5), (25, 96), (26, 128), (27, 32), (28, 32), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Decide 11 with phase True at level 7

After decision at level 7
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]
 solution : [0, 10, 2, 15, 11]


New level: 8
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]
 solution : [0, 10, 2, 15, 11]


Before reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]
 solution : [0, 10, 2, 15, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 288), (7, -1), (8, 128), (9, 256), (10, -1), (11, 512), (12, 128), (13, 256), (14, 256), (15, -1), (16, 24), (17, 44), (18, 100), (19, 256), (20, 160), (21, 196), (22, 85), (23, 448), (24, 5), (25, 96), (26, 128), (27, 32), (28, 32), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 132), (7, -1), (8, 64), (9, 128), (10, -1), (11, -1), (12, 128), (13, 1), (14, 256), (15, -1), (16, 24), (17, 44), (18, 24), (19, 44), (20, 112), (21, 172), (22, 51), (23, 448), (24, 5), (25, 96), (26, 128), (27, 16), (28, 16), (29, 128), (30, 128), (31, 16), (32, -1), (33, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]
 solution : [0, 10, 2, 15, 11]


Solution : [0, 10, 2, 15, 11] has cost 27.


Before backtrack at level 8
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]
 solution : [0, 10, 2, 15, 11]

After backtrack at level 8
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]
 solution : [0, 10, 2, 15, 11]


Invert decision for 11 at level 7


New level: 8
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]
 solution : [0, 10, 2, 15]


Before reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]
 solution : [0, 10, 2, 15]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 132), (7, -1), (8, 64), (9, 128), (10, -1), (11, -1), (12, 128), (13, 1), (14, 256), (15, -1), (16, 24), (17, 44), (18, 24), (19, 44), (20, 112), (21, 172), (22, 51), (23, 448), (24, 5), (25, 96), (26, 128), (27, 16), (28, 16), (29, 128), (30, 128), (31, 16), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 288), (7, -1), (8, 128), (9, 256), (10, -1), (11, -1), (12, 128), (13, 256), (14, 256), (15, -1), (16, 24), (17, 44), (18, 100), (19, 256), (20, 160), (21, 196), (22, 85), (23, 448), (24, 5), (25, 96), (26, 128), (27, 32), (28, 32), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]
 solution : [0, 10, 2, 15]


Solution : [0, 10, 2, 15] has cost 22.


Decide in level 8 among pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 25, 8, 27, 23, 6, 24, 22, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 288), (7, -1), (8, 128), (9, 256), (10, -1), (11, -1), (12, 128), (13, 256), (14, 256), (15, -1), (16, 24), (17, 44), (18, 100), (19, 256), (20, 160), (21, 196), (22, 85), (23, 448), (24, 5), (25, 96), (26, 128), (27, 32), (28, 32), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 25, 8, 27, 6, 24, 22, 28]
 solution : [0, 10, 2, 15, 23]


New level: 9
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 25, 8, 27, 6, 24, 22, 28]
 solution : [0, 10, 2, 15, 23]


Before reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 25, 8, 27, 6, 24, 22, 28]
 solution : [0, 10, 2, 15, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 288), (7, -1), (8, 128), (9, 256), (10, -1), (11, -1), (12, 128), (13, 256), (14, 256), (15, -1), (16, 24), (17, 44), (18, 100), (19, 256), (20, 160), (21, 196), (22, 85), (23, 448), (24, 5), (25, 96), (26, 128), (27, 32), (28, 32), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 264), (7, -1), (8, 128), (9, 256), (10, -1), (11, -1), (12, 128), (13, 256), (14, 256), (15, -1), (16, 10), (17, 36), (18, 34), (19, 146), (20, 2), (21, 128), (22, 40), (23, -1), (24, 0), (25, 0), (26, 32), (27, 8), (28, 4), (29, 64), (30, 2), (31, 32), (32, -1), (33, 16)]

Covered at level 9 : {24, 25}

After reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 8, 27, 6, 22, 28]
 solution : [0, 10, 2, 15, 23]


Before reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 8, 27, 6, 22, 28]
 solution : [0, 10, 2, 15, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 264), (7, -1), (8, 128), (9, 256), (10, -1), (11, -1), (12, 128), (13, 256), (14, 256), (15, -1), (16, 10), (17, 36), (18, 34), (19, 146), (20, 2), (21, 128), (22, 40), (23, -1), (24, 0), (25, 0), (26, 32), (27, 8), (28, 4), (29, 64), (30, 2), (31, 32), (32, -1), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 264), (7, -1), (8, 128), (9, 256), (10, -1), (11, -1), (12, 128), (13, 256), (14, 256), (15, -1), (16, 10), (17, 36), (18, 34), (19, 146), (20, 2), (21, 128), (22, 40), (23, -1), (24, -1), (25, -1), (26, 32), (27, 8), (28, 4), (29, 64), (30, 2), (31, 32), (32, -1), (33, 16)]

Covered at level 9 : set()

After reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 8, 27, 6, 22, 28]
 solution : [0, 10, 2, 15, 23]


Solution : [0, 10, 2, 15, 23] has cost 51.


Before backtrack at level 9
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 8, 27, 6, 22, 28]
 solution : [0, 10, 2, 15, 23]

After backtrack at level 9
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 8, 27, 6, 22, 28, 25, 24]
 solution : [0, 10, 2, 15, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 8, 27, 6, 22, 28, 25, 24]
 solution : [0, 10, 2, 15]


Before reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 8, 27, 6, 22, 28, 25, 24]
 solution : [0, 10, 2, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 264), (7, -1), (8, 128), (9, 256), (10, -1), (11, -1), (12, 128), (13, 256), (14, 256), (15, -1), (16, 10), (17, 36), (18, 34), (19, 146), (20, 2), (21, 128), (22, 40), (23, -1), (24, -1), (25, -1), (26, 32), (27, 8), (28, 4), (29, 64), (30, 2), (31, 32), (32, -1), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 288), (7, -1), (8, 128), (9, 256), (10, -1), (11, -1), (12, 128), (13, 256), (14, 256), (15, -1), (16, 24), (17, 44), (18, 100), (19, 256), (20, 160), (21, 196), (22, 85), (23, -1), (24, 5), (25, 96), (26, 128), (27, 32), (28, 32), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 8, 27, 6, 22, 28, 25, 24]
 solution : [0, 10, 2, 15]


Solution : [0, 10, 2, 15] has cost 22.


Decide in level 9 among pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 8, 27, 6, 22, 28, 25, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 288), (7, -1), (8, 128), (9, 256), (10, -1), (11, -1), (12, 128), (13, 256), (14, 256), (15, -1), (16, 24), (17, 44), (18, 100), (19, 256), (20, 160), (21, 196), (22, 85), (23, -1), (24, 5), (25, 96), (26, 128), (27, 32), (28, 32), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Decide 6 with phase True at level 9

After decision at level 9
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 8, 27, 22, 28, 25, 24]
 solution : [0, 10, 2, 15, 6]


New level: 10
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 8, 27, 22, 28, 25, 24]
 solution : [0, 10, 2, 15, 6]


Before reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 33, 26, 8, 27, 22, 28, 25, 24]
 solution : [0, 10, 2, 15, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 288), (7, -1), (8, 128), (9, 256), (10, -1), (11, -1), (12, 128), (13, 256), (14, 256), (15, -1), (16, 24), (17, 44), (18, 100), (19, 256), (20, 160), (21, 196), (22, 85), (23, -1), (24, 5), (25, 96), (26, 128), (27, 32), (28, 32), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, -1), (8, 0), (9, 64), (10, -1), (11, -1), (12, 128), (13, 4), (14, 256), (15, -1), (16, 24), (17, 44), (18, 24), (19, 44), (20, 112), (21, 22), (22, 18), (23, -1), (24, 5), (25, 5), (26, 8), (27, 0), (28, 8), (29, 8), (30, 128), (31, 16), (32, -1), (33, 0)]

Covered at level 10 : {8, 33, 27}

After reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 26, 22, 28, 25, 24]
 solution : [0, 10, 2, 15, 6]


Before reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 26, 22, 28, 25, 24]
 solution : [0, 10, 2, 15, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, -1), (8, 0), (9, 64), (10, -1), (11, -1), (12, 128), (13, 4), (14, 256), (15, -1), (16, 24), (17, 44), (18, 24), (19, 44), (20, 112), (21, 22), (22, 18), (23, -1), (24, 5), (25, 5), (26, 8), (27, 0), (28, 8), (29, 8), (30, 128), (31, 16), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, 4), (14, 256), (15, -1), (16, 24), (17, 44), (18, 24), (19, 44), (20, 112), (21, 22), (22, 18), (23, -1), (24, 5), (25, 5), (26, 8), (27, -1), (28, 8), (29, 8), (30, 128), (31, 16), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 26, 22, 28, 25, 24]
 solution : [0, 10, 2, 15, 6]


Solution : [0, 10, 2, 15, 6] has cost 32.


Before backtrack at level 10
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 26, 22, 28, 25, 24]
 solution : [0, 10, 2, 15, 6]

After backtrack at level 10
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 26, 22, 28, 25, 24, 33, 8, 27]
 solution : [0, 10, 2, 15, 6]


Invert decision for 6 at level 9


New level: 10
 pending : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 26, 22, 28, 25, 24, 33, 8, 27]
 solution : [0, 10, 2, 15]


Before reduction : 
 pending  : [17, 13, 14, 20, 16, 12, 30, 4, 31, 19, 9, 18, 21, 29, 26, 22, 28, 25, 24, 33, 8, 27]
 solution : [0, 10, 2, 15]

Essensial at level 10 : {8, 9, 21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, 4), (14, 256), (15, -1), (16, 24), (17, 44), (18, 24), (19, 44), (20, 112), (21, 22), (22, 18), (23, -1), (24, 5), (25, 5), (26, 8), (27, -1), (28, 8), (29, 8), (30, 128), (31, 16), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, 1), (14, 256), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31}

After reduction : 
 pending  : [13, 14, 12, 4]
 solution : [0, 10, 2, 15, 8, 9, 21]


Before reduction : 
 pending  : [13, 14, 12, 4]
 solution : [0, 10, 2, 15, 8, 9, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, 1), (14, 256), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, 1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [13, 14, 12, 4]
 solution : [0, 10, 2, 15, 8, 9, 21]


Solution : [0, 10, 2, 15, 8, 9, 21] has cost 71.


Before backtrack at level 10
 pending : [13, 14, 12, 4]
 solution : [0, 10, 2, 15, 8, 9, 21]

After backtrack at level 10
 pending : [13, 14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27]
 solution : [0, 10, 2, 15]


Before backtrack at level 9
 pending : [13, 14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27]
 solution : [0, 10, 2, 15]

After backtrack at level 9
 pending : [13, 14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6]
 solution : [0, 10, 2, 15]


Before backtrack at level 8
 pending : [13, 14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6]
 solution : [0, 10, 2, 15]

After backtrack at level 8
 pending : [13, 14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23]
 solution : [0, 10, 2, 15]


Before backtrack at level 7
 pending : [13, 14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23]
 solution : [0, 10, 2, 15]

After backtrack at level 7
 pending : [13, 14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11]
 solution : [0, 10, 2, 15]


Before backtrack at level 6
 pending : [13, 14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11]
 solution : [0, 10, 2, 15]

After backtrack at level 6
 pending : [13, 14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 15]


Invert decision for 15 at level 5


New level: 6
 pending : [13, 14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2]


Before reduction : 
 pending  : [13, 14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2), (13, 1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Covered at level 6 : set()

After reduction : 
 pending  : [13, 14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2]


Solution : [0, 10, 2] has cost 20.


Decide in level 6 among pending : [13, 14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Decide 13 with phase True at level 6

After decision at level 6
 pending : [14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 13]


New level: 7
 pending : [14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 13]


Before reduction : 
 pending  : [14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 272), (7, 512), (8, 128), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 256), (15, -1), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 39), (23, 400), (24, 40), (25, 96), (26, 128), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, -1), (33, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 13]


Solution : [0, 10, 2, 13] has cost 25.


Before backtrack at level 7
 pending : [14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 13]

After backtrack at level 7
 pending : [14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 13]


Invert decision for 13 at level 6


New level: 7
 pending : [14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2]


Before reduction : 
 pending  : [14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 272), (7, 512), (8, 128), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 256), (15, -1), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 39), (23, 400), (24, 40), (25, 96), (26, 128), (27, 32), (28, 16), (29, 256), (30, 128), (31, 128), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, -1), (14, 512), (15, -1), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2]


Solution : [0, 10, 2] has cost 20.


Decide in level 7 among pending : [14, 12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, -1), (14, 512), (15, -1), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Decide 14 with phase True at level 7

After decision at level 7
 pending : [12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 14]


New level: 8
 pending : [12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 14]


Before reduction : 
 pending  : [12, 4, 9, 21, 8, 17, 20, 16, 30, 31, 19, 18, 29, 26, 22, 28, 25, 24, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, -1), (14, 512), (15, -1), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 288), (7, 512), (8, 128), (9, 64), (10, -1), (11, 512), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 16), (19, 26), (20, 14), (21, 196), (22, 8), (23, 386), (24, 0), (25, 96), (26, 128), (27, 32), (28, 2), (29, 256), (30, 4), (31, 64), (32, -1), (33, 64)]

Covered at level 8 : {4, 12, 16, 17, 24}

After reduction : 
 pending  : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 14]


Before reduction : 
 pending  : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 288), (7, 512), (8, 128), (9, 64), (10, -1), (11, 512), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 16), (19, 26), (20, 14), (21, 196), (22, 8), (23, 386), (24, 0), (25, 96), (26, 128), (27, 32), (28, 2), (29, 256), (30, 4), (31, 64), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 288), (7, 512), (8, 128), (9, 64), (10, -1), (11, 512), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16), (19, 26), (20, 14), (21, 196), (22, 8), (23, 386), (24, -1), (25, 96), (26, 128), (27, 32), (28, 2), (29, 256), (30, 4), (31, 64), (32, -1), (33, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 14]


Solution : [0, 10, 2, 14] has cost 26.


Before backtrack at level 8
 pending : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 11, 7]
 solution : [0, 10, 2, 14]

After backtrack at level 8
 pending : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 11, 7, 12, 4, 17, 16, 24]
 solution : [0, 10, 2, 14]


Invert decision for 14 at level 7


New level: 8
 pending : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 11, 7, 12, 4, 17, 16, 24]
 solution : [0, 10, 2]


Before reduction : 
 pending  : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 11, 7, 12, 4, 17, 16, 24]
 solution : [0, 10, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 288), (7, 512), (8, 128), (9, 64), (10, -1), (11, 512), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16), (19, 26), (20, 14), (21, 196), (22, 8), (23, 386), (24, -1), (25, 96), (26, 128), (27, 32), (28, 2), (29, 256), (30, 4), (31, 64), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, -1), (14, -1), (15, -1), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 11, 7, 12, 4, 17, 16, 24]
 solution : [0, 10, 2]


Solution : [0, 10, 2] has cost 20.


Decide in level 8 among pending : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 11, 7, 12, 4, 17, 16, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, -1), (14, -1), (15, -1), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

Decide 11 with phase True at level 8

After decision at level 8
 pending : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 7, 12, 4, 17, 16, 24]
 solution : [0, 10, 2, 11]


New level: 9
 pending : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 7, 12, 4, 17, 16, 24]
 solution : [0, 10, 2, 11]


Before reduction : 
 pending  : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 7, 12, 4, 17, 16, 24]
 solution : [0, 10, 2, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 288), (7, 512), (8, 128), (9, 256), (10, -1), (11, 512), (12, 256), (13, -1), (14, -1), (15, -1), (16, 96), (17, 152), (18, 100), (19, 256), (20, 256), (21, 196), (22, 149), (23, 448), (24, 40), (25, 96), (26, 128), (27, 32), (28, 64), (29, 256), (30, 128), (31, 256), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 132), (7, 256), (8, 64), (9, 128), (10, -1), (11, -1), (12, 256), (13, -1), (14, -1), (15, -1), (16, 96), (17, 152), (18, 24), (19, 44), (20, 208), (21, 172), (22, 147), (23, 448), (24, 40), (25, 96), (26, 128), (27, 16), (28, 64), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 7, 12, 4, 17, 16, 24]
 solution : [0, 10, 2, 11]


Solution : [0, 10, 2, 11] has cost 25.


Before backtrack at level 9
 pending : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 7, 12, 4, 17, 16, 24]
 solution : [0, 10, 2, 11]

After backtrack at level 9
 pending : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 7, 12, 4, 17, 16, 24]
 solution : [0, 10, 2, 11]


Invert decision for 11 at level 8


New level: 9
 pending : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 7, 12, 4, 17, 16, 24]
 solution : [0, 10, 2]


Before reduction : 
 pending  : [9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 22, 28, 25, 33, 27, 6, 23, 7, 12, 4, 17, 16, 24]
 solution : [0, 10, 2]

Essensial at level 9 : {12, 7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 132), (7, 256), (8, 64), (9, 128), (10, -1), (11, -1), (12, 256), (13, -1), (14, -1), (15, -1), (16, 96), (17, 152), (18, 24), (19, 44), (20, 208), (21, 172), (22, 147), (23, 448), (24, 40), (25, 96), (26, 128), (27, 16), (28, 64), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 0), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 4), (18, 0), (19, 0), (20, 0), (21, 0), (22, 1), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 9 : {33, 6, 8, 9, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31}

After reduction : 
 pending  : [22, 4, 17]
 solution : [0, 10, 2, 12, 7]


Before reduction : 
 pending  : [22, 4, 17]
 solution : [0, 10, 2, 12, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, 0), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 4), (18, 0), (19, 0), (20, 0), (21, 0), (22, 1), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, -1), (19, -1), (20, -1), (21, -1), (22, 1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [22, 4, 17]
 solution : [0, 10, 2, 12, 7]


Solution : [0, 10, 2, 12, 7] has cost 35.


Before backtrack at level 9
 pending : [22, 4, 17]
 solution : [0, 10, 2, 12, 7]

After backtrack at level 9
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24]
 solution : [0, 10, 2]


Before backtrack at level 8
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24]
 solution : [0, 10, 2]

After backtrack at level 8
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11]
 solution : [0, 10, 2]


Before backtrack at level 7
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11]
 solution : [0, 10, 2]

After backtrack at level 7
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14]
 solution : [0, 10, 2]


Before backtrack at level 6
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14]
 solution : [0, 10, 2]

After backtrack at level 6
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13]
 solution : [0, 10, 2]


Before backtrack at level 5
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13]
 solution : [0, 10, 2]

After backtrack at level 5
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15]
 solution : [0, 10, 2]


Before backtrack at level 4
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15]
 solution : [0, 10, 2]

After backtrack at level 4
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3]
 solution : [0, 10, 2]


Before backtrack at level 3
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3]
 solution : [0, 10, 2]

After backtrack at level 3
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32, 5]
 solution : [0, 10, 2]


Invert decision for 2 at level 2


New level: 3
 pending : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32, 5]
 solution : [0, 10]


Before reduction : 
 pending  : [22, 4, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32, 5]
 solution : [0, 10]

Essensial at level 3 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, -1), (19, -1), (20, -1), (21, -1), (22, 1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 520), (4, -1), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 112), (17, 260), (18, 224), (19, 512), (20, 320), (21, 576), (22, 202), (23, 448), (24, 96), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 128), (31, 256), (32, 64), (33, 128)]

Covered at level 3 : set()

After reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32, 5]
 solution : [0, 10, 4]


Before reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32, 5]
 solution : [0, 10, 4]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 520), (4, -1), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 112), (17, 260), (18, 224), (19, 512), (20, 320), (21, 576), (22, 202), (23, 448), (24, 96), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 128), (31, 256), (32, 64), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 520), (4, -1), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 112), (17, 260), (18, 224), (19, 512), (20, 320), (21, 576), (22, 202), (23, 448), (24, 96), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 128), (31, 256), (32, 64), (33, 128)]

Covered at level 3 : set()

After reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32, 5]
 solution : [0, 10, 4]


Solution : [0, 10, 4] has cost 13.


Decide in level 3 among pending : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 520), (4, -1), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 112), (17, 260), (18, 224), (19, 512), (20, 320), (21, 576), (22, 202), (23, 448), (24, 96), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 128), (31, 256), (32, 64), (33, 128)]

Decide 5 with phase True at level 3

After decision at level 3
 pending : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32]
 solution : [0, 10, 4, 5]


New level: 4
 pending : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32]
 solution : [0, 10, 4, 5]


Before reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32]
 solution : [0, 10, 4, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 520), (4, -1), (5, 768), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 112), (17, 260), (18, 224), (19, 512), (20, 320), (21, 576), (22, 202), (23, 448), (24, 96), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 128), (31, 256), (32, 64), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 514), (4, -1), (5, -1), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 44), (17, 40), (18, 96), (19, 96), (20, 32), (21, 120), (22, 58), (23, 48), (24, 10), (25, 40), (26, 256), (27, 128), (28, 128), (29, 256), (30, 32), (31, 256), (32, 64), (33, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32]
 solution : [0, 10, 4, 5]


Solution : [0, 10, 4, 5] has cost 34.


Before backtrack at level 4
 pending : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32]
 solution : [0, 10, 4, 5]

After backtrack at level 4
 pending : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32]
 solution : [0, 10, 4, 5]


Invert decision for 5 at level 3


New level: 4
 pending : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32]
 solution : [0, 10, 4]


Before reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32]
 solution : [0, 10, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 514), (4, -1), (5, -1), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 44), (17, 40), (18, 96), (19, 96), (20, 32), (21, 120), (22, 58), (23, 48), (24, 10), (25, 40), (26, 256), (27, 128), (28, 128), (29, 256), (30, 32), (31, 256), (32, 64), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 520), (4, -1), (5, -1), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 112), (17, 260), (18, 224), (19, 512), (20, 320), (21, 576), (22, 202), (23, 448), (24, 96), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 128), (31, 256), (32, 64), (33, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32]
 solution : [0, 10, 4]


Solution : [0, 10, 4] has cost 13.


Decide in level 4 among pending : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 6, 23, 16, 24, 11, 14, 13, 15, 3, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 520), (4, -1), (5, -1), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 112), (17, 260), (18, 224), (19, 512), (20, 320), (21, 576), (22, 202), (23, 448), (24, 96), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 128), (31, 256), (32, 64), (33, 128)]

Decide 6 with phase True at level 4

After decision at level 4
 pending : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 23, 16, 24, 11, 14, 13, 15, 3, 32]
 solution : [0, 10, 4, 6]


New level: 5
 pending : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 23, 16, 24, 11, 14, 13, 15, 3, 32]
 solution : [0, 10, 4, 6]


Before reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 8, 20, 30, 31, 19, 18, 29, 26, 28, 25, 33, 27, 23, 16, 24, 11, 14, 13, 15, 3, 32]
 solution : [0, 10, 4, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 520), (4, -1), (5, -1), (6, 640), (7, 512), (8, 512), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 112), (17, 260), (18, 224), (19, 512), (20, 320), (21, 576), (22, 202), (23, 448), (24, 96), (25, 384), (26, 256), (27, 128), (28, 128), (29, 256), (30, 128), (31, 256), (32, 64), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, -1), (5, -1), (6, -1), (7, 128), (8, 0), (9, 128), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 48), (17, 80), (18, 24), (19, 44), (20, 208), (21, 22), (22, 36), (23, 112), (24, 10), (25, 5), (26, 8), (27, 0), (28, 16), (29, 32), (30, 128), (31, 64), (32, 0), (33, 0)]

Covered at level 5 : {8, 33, 32, 27}

After reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 3]
 solution : [0, 10, 4, 6]


Before reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 3]
 solution : [0, 10, 4, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, -1), (5, -1), (6, -1), (7, 128), (8, 0), (9, 128), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 48), (17, 80), (18, 24), (19, 44), (20, 208), (21, 22), (22, 36), (23, 112), (24, 10), (25, 5), (26, 8), (27, 0), (28, 16), (29, 32), (30, 128), (31, 64), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 128), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 48), (17, 80), (18, 24), (19, 44), (20, 208), (21, 22), (22, 36), (23, 112), (24, 10), (25, 5), (26, 8), (27, -1), (28, 16), (29, 32), (30, 128), (31, 64), (32, -1), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 3]
 solution : [0, 10, 4, 6]


Solution : [0, 10, 4, 6] has cost 23.


Before backtrack at level 5
 pending : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 3]
 solution : [0, 10, 4, 6]

After backtrack at level 5
 pending : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 3, 8, 33, 27, 32]
 solution : [0, 10, 4, 6]


Invert decision for 6 at level 4


New level: 5
 pending : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 3, 8, 33, 27, 32]
 solution : [0, 10, 4]


Before reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 3, 8, 33, 27, 32]
 solution : [0, 10, 4]

Essensial at level 5 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, 128), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 48), (17, 80), (18, 24), (19, 44), (20, 208), (21, 22), (22, 36), (23, 112), (24, 10), (25, 5), (26, 8), (27, -1), (28, 16), (29, 32), (30, 128), (31, 64), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 514), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 104), (17, 257), (18, 96), (19, 176), (20, 256), (21, 288), (22, 197), (23, 448), (24, 96), (25, 40), (26, 64), (27, 0), (28, 128), (29, 256), (30, 128), (31, 256), (32, 32), (33, 64)]

Covered at level 5 : {27}

After reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 3, 33, 32]
 solution : [0, 10, 4, 8]


Before reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 3, 33, 32]
 solution : [0, 10, 4, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 514), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 104), (17, 257), (18, 96), (19, 176), (20, 256), (21, 288), (22, 197), (23, 448), (24, 96), (25, 40), (26, 64), (27, 0), (28, 128), (29, 256), (30, 128), (31, 256), (32, 32), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 514), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 104), (17, 257), (18, 96), (19, 176), (20, 256), (21, 288), (22, 197), (23, 448), (24, 96), (25, 40), (26, 64), (27, -1), (28, 128), (29, 256), (30, 128), (31, 256), (32, 32), (33, 64)]

Covered at level 5 : set()

After reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 3, 33, 32]
 solution : [0, 10, 4, 8]


Solution : [0, 10, 4, 8] has cost 19.


Decide in level 5 among pending : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 3, 33, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 514), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 104), (17, 257), (18, 96), (19, 176), (20, 256), (21, 288), (22, 197), (23, 448), (24, 96), (25, 40), (26, 64), (27, -1), (28, 128), (29, 256), (30, 128), (31, 256), (32, 32), (33, 64)]

Decide 3 with phase True at level 5

After decision at level 5
 pending : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32]
 solution : [0, 10, 4, 8, 3]


New level: 6
 pending : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32]
 solution : [0, 10, 4, 8, 3]


Before reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32]
 solution : [0, 10, 4, 8, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 514), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, 256), (10, -1), (11, 512), (12, 256), (13, 512), (14, 512), (15, 512), (16, 104), (17, 257), (18, 96), (19, 176), (20, 256), (21, 288), (22, 197), (23, 448), (24, 96), (25, 40), (26, 64), (27, -1), (28, 128), (29, 256), (30, 128), (31, 256), (32, 32), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 6 : {7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 10, 4, 8, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 4, 8, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 4, 8, 3]


Solution : [0, 10, 4, 8, 3] has cost 32.


Before backtrack at level 6
 pending : []
 solution : [0, 10, 4, 8, 3]

After backtrack at level 6
 pending : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32]
 solution : [0, 10, 4, 8, 3]


Invert decision for 3 at level 5


New level: 6
 pending : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32]
 solution : [0, 10, 4, 8]


Before reduction : 
 pending  : [22, 17, 7, 12, 9, 21, 20, 30, 31, 19, 18, 29, 26, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32]
 solution : [0, 10, 4, 8]

Essensial at level 6 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, -1), (11, 128), (12, 8), (13, 128), (14, 512), (15, 512), (16, 4), (17, 50), (18, 4), (19, 161), (20, 81), (21, 192), (22, 131), (23, 304), (24, 9), (25, 2), (26, 0), (27, -1), (28, 16), (29, 32), (30, 2), (31, 128), (32, 8), (33, 32)]

Covered at level 6 : {26}

After reduction : 
 pending  : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32]
 solution : [0, 10, 4, 8, 9]


Before reduction : 
 pending  : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32]
 solution : [0, 10, 4, 8, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, -1), (11, 128), (12, 8), (13, 128), (14, 512), (15, 512), (16, 4), (17, 50), (18, 4), (19, 161), (20, 81), (21, 192), (22, 131), (23, 304), (24, 9), (25, 2), (26, 0), (27, -1), (28, 16), (29, 32), (30, 2), (31, 128), (32, 8), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, -1), (11, 128), (12, 8), (13, 128), (14, 512), (15, 512), (16, 4), (17, 50), (18, 4), (19, 161), (20, 81), (21, 192), (22, 131), (23, 304), (24, 9), (25, 2), (26, -1), (27, -1), (28, 16), (29, 32), (30, 2), (31, 128), (32, 8), (33, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32]
 solution : [0, 10, 4, 8, 9]


Solution : [0, 10, 4, 8, 9] has cost 28.


Before backtrack at level 6
 pending : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32]
 solution : [0, 10, 4, 8, 9]

After backtrack at level 6
 pending : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32, 9, 26]
 solution : [0, 10, 4, 8]


Before backtrack at level 5
 pending : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32, 9, 26]
 solution : [0, 10, 4, 8]

After backtrack at level 5
 pending : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32, 9, 26, 8, 27, 3]
 solution : [0, 10, 4]


Before backtrack at level 4
 pending : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32, 9, 26, 8, 27, 3]
 solution : [0, 10, 4]

After backtrack at level 4
 pending : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32, 9, 26, 8, 27, 3, 6]
 solution : [0, 10, 4]


Before backtrack at level 3
 pending : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32, 9, 26, 8, 27, 3, 6]
 solution : [0, 10, 4]

After backtrack at level 3
 pending : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32, 9, 26, 8, 27, 3, 6, 4, 5]
 solution : [0, 10]


Before backtrack at level 2
 pending : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32, 9, 26, 8, 27, 3, 6, 4, 5]
 solution : [0, 10]

After backtrack at level 2
 pending : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32, 9, 26, 8, 27, 3, 6, 4, 5, 2]
 solution : [0, 10]


Before backtrack at level 1
 pending : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32, 9, 26, 8, 27, 3, 6, 4, 5, 2]
 solution : [0, 10]

After backtrack at level 1
 pending : [22, 17, 7, 12, 21, 20, 30, 31, 19, 18, 29, 28, 25, 23, 16, 24, 11, 14, 13, 15, 33, 32, 9, 26, 8, 27, 3, 6, 4, 5, 2, 1]
 solution : [0, 10]


============================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall.ivy: node=3]

============================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 22

[MIN NOTE]: maximum branch and bound depth: 21

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 10, 1, 7, 8]

[MIN NOTE]: solution length: 5

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_10] forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1)) # qcost: 5

invariant [invar_1] forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0) # qcost: 3

invariant [invar_7] forall NODE1,NODE0. internal(NODE0) | internal(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1 # qcost: 6

invariant [invar_8] forall NODE1,NODE0. allowed_in(NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | NODE0 = NODE1 # qcost: 6

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 22




[QRM NOTE]: Time elapsed since start: 12.384 seconds

[QRM NOTE]: Time elapsed since last: 2.137 seconds

[QRM NOTE]: Peak memory: 2394038 bytes


=============================================

	[IVY_CHECK] Ivy Check for Rmin

=============================================


=================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym/ivy/firewall.node_3.0.ivy]

=================================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_3.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_10
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_7
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_8

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_10 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_7 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_8 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_10 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_7 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_8 ... PASS
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_10 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_7 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_8 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 26: assumption

OK
[IVY_CHECK RESULT]: PASS


==================================================================================================

	[MUS]: Extract strengthening assertion for [ivybench/sym/ivy/firewall.node_3.0.ivy]

==================================================================================================

[MUS NOTE]: number of strengthening assertions: 2

[MUS NOTE]: min mus: {1, 3}

invariant [invar_10] forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1)) # qcost: 5

invariant [invar_7] forall NODE1,NODE0. internal(NODE0) | internal(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1 # qcost: 6


========================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym/ivy/firewall.node_3.0.assert.ivy]

========================================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_3.0.assert.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_10
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_7

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety ... PASS
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_10 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_7 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_10 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_7 ... PASS
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_10 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_7 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 26: assumption

OK
[IVY_CHECK RESULT]: PASS

[ASSERT_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 16.340 seconds

[QRM NOTE]: Time elapsed since last: 3.956 seconds

[QRM NOTE]: Peak memory: 2413615 bytes


********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************

[QRM RESULT]: PASS

