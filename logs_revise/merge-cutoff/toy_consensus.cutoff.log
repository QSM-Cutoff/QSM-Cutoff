
********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/toy_consensus.ivy

********************************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


========================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/toy_consensus.ivy: node=3,value=3]

========================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 24

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 36

[FW NOTE]: number of branching actions: 18

ivy_to_cpp target=qrm toy_consensus.node_3_value_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o toy_consensus.node_3_value_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 toy_consensus.node_3_value_3.finite.cpp toy_consensus.node_3_value_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared toy_consensus.node_3_value_3.finite.o toy_consensus.node_3_value_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.356 seconds

[QRM NOTE]: Time elapsed since last: 7.356 seconds

[QRM NOTE]: Peak memory: 1189251 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 4

[FW NOTE]: number of total reachable states:        94

[FW NOTE]: number of dfs representative states:     10

[FW NOTE]: number of dfs non-representative states: 84


===============================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/toy_consensus.ivy: node=3,value=3]

===============================================================================================================

sort: node=['node0', 'node1', 'node2']
sort: value=['value0', 'value1', 'value2']
sort: quorum=['quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2']
predicate: member('node', 'quorum')
predicate: didNotVote('node',)
predicate: chosenAt('quorum', 'value')
predicate: decision('value',)
predicate: vote('node', 'value')
interpreted atoms: {'member(node0,quorum__node0_node1)': '1', 'member(node0,quorum__node0_node2)': '1', 'member(node0,quorum__node1_node2)': '0', 'member(node1,quorum__node0_node1)': '1', 'member(node1,quorum__node0_node2)': '0', 'member(node1,quorum__node1_node2)': '1', 'member(node2,quorum__node0_node1)': '0', 'member(node2,quorum__node0_node2)': '1', 'member(node2,quorum__node1_node2)': '1'}
state atoms: ['chosenAt(quorum__node0_node1,value0)', 'chosenAt(quorum__node0_node1,value1)', 'chosenAt(quorum__node0_node1,value2)', 'chosenAt(quorum__node0_node2,value0)', 'chosenAt(quorum__node0_node2,value1)', 'chosenAt(quorum__node0_node2,value2)', 'chosenAt(quorum__node1_node2,value0)', 'chosenAt(quorum__node1_node2,value1)', 'chosenAt(quorum__node1_node2,value2)', 'decision(value0)', 'decision(value1)', 'decision(value2)', 'didNotVote(node0)', 'didNotVote(node1)', 'didNotVote(node2)', 'vote(node0,value0)', 'vote(node0,value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node1,value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node2,value1)', 'vote(node2,value2)']
representative states : 1835435, 819627, 17830827, 1224774571, 1226871723, 16847787, 18944939, 19927979, 303531, 43435


=== State Orbit 0 =====================
size : 1
repr state: 000000000000111000000000
lex min decimal: 1835435
states:
000000000000111000000000




=== State Orbit 1 =====================
size : 9
repr state: 000000000000011100000000
lex min decimal: 819627
states:
000000000000101000001000
000000000000011100000000
000000000000011001000000
000000000000110000000001
000000000000110000000100
000000000000101000010000
000000000000011010000000
000000000000110000000010
000000000000101000100000




=== State Orbit 2 =====================
size : 9
repr state: 100000000000001100100000
lex min decimal: 17830827
states:
001000000000001001001000
000001000000010001000001
000010000000010010000010
010000000000001010010000
000100000000010100000100
000000100000100000100100
000000010000100000010010
100000000000001100100000
000000001000100000001001




=== State Orbit 3 =====================
size : 3
repr state: 100100100000000100100100
lex min decimal: 1224774571
states:
001001001000000001001001
010010010000000010010010
100100100000000100100100




=== State Orbit 4 =====================
size : 3
repr state: 100100100100000100100100
lex min decimal: 1226871723
states:
001001001001000001001001
010010010010000010010010
100100100100000100100100




=== State Orbit 5 =====================
size : 18
repr state: 100000000000000100100010
lex min decimal: 16847787
states:
001000000000000001001100
000000001000000010001001
000000100000000010100100
001000000000000001001010
000001000000000001100001
000010000000000010001010
000000010000000001010010
000001000000000001010001
000010000000000010100010
000100000000000100010100
100000000000000100100001
000100000000000100001100
000000100000000001100100
000000001000000100001001
010000000000000010010100
000000010000000100010010
100000000000000100100010
010000000000000010010001




=== State Orbit 6 =====================
size : 18
repr state: 100000000100000100100010
lex min decimal: 18944939
states:
000000001001000010001001
010000000010000010010100
000001000001000001100001
010000000010000010010001
000000100100000001100100
000010000010000010001010
001000000001000001001010
000100000100000100010100
000010000010000010100010
000100000100000100001100
000000010010000001010010
001000000001000001001100
000001000001000001010001
000000100100000010100100
100000000100000100100001
000000010010000100010010
100000000100000100100010
000000001001000100001001




=== State Orbit 7 =====================
size : 9
repr state: 100000000100001100100000
lex min decimal: 19927979
states:
100000000100001100100000
000100000100010100000100
000000100100100000100100
000000001001100000001001
000000010010100000010010
001000000001001001001000
000010000010010010000010
010000000010001010010000
000001000001010001000001




=== State Orbit 8 =====================
size : 18
repr state: 000000000000001100010000
lex min decimal: 303531
states:
000000000000001010001000
000000000000001001100000
000000000000010010000001
000000000000001010100000
000000000000100000100001
000000000000100000010100
000000000000010100000001
000000000000100000001010
000000000000010010000100
000000000000010001000100
000000000000001100010000
000000000000010100000010
000000000000100000010001
000000000000001001010000
000000000000100000001100
000000000000100000100010
000000000000001100001000
000000000000010001000010




=== State Orbit 9 =====================
size : 6
repr state: 000000000000000100010001
lex min decimal: 43435
states:
000000000000000100001010
000000000000000001100010
000000000000000010100001
000000000000000001010100
000000000000000100010001
000000000000000010001100



[QRM NOTE]: Time elapsed since start: 7.538 seconds

[QRM NOTE]: Time elapsed since last: 0.182 seconds

[QRM NOTE]: Peak memory: 1252015 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 7.543 seconds

[QRM NOTE]: Time elapsed since last: 0.005 seconds

[QRM NOTE]: Peak memory: 225993 bytes


===============================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/toy_consensus.ivy: node=3,value=3]

===============================================================================================================


==========================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/toy_consensus.ivy: node=3,value=3]

==========================================================================================================


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ---------------1-1------
0     : ['vote(node0,value0)', 'vote(node0,value2)']
1     : ---------------11-------
1     : ['vote(node0,value0)', 'vote(node0,value1)']
2     : ----------------11------
2     : ['vote(node0,value1)', 'vote(node0,value2)']
3     : ------------------1-1---
3     : ['vote(node1,value0)', 'vote(node1,value2)']
4     : ------------------11----
4     : ['vote(node1,value0)', 'vote(node1,value1)']
5     : -------------------11---
5     : ['vote(node1,value1)', 'vote(node1,value2)']
6     : ---------------------1-1
6     : ['vote(node2,value0)', 'vote(node2,value2)']
7     : ---------------------11-
7     : ['vote(node2,value0)', 'vote(node2,value1)']
8     : ----------------------11
8     : ['vote(node2,value1)', 'vote(node2,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 36
num_suborbits: 1
9 (*) : -----1---------1--------
9     : ['chosenAt(quorum__node0_node2,value2)', 'vote(node0,value0)']
10     : ----1----------1--------
10     : ['chosenAt(quorum__node0_node2,value1)', 'vote(node0,value0)']
11     : -----1----------1-------
11     : ['chosenAt(quorum__node0_node2,value2)', 'vote(node0,value1)']
12     : ---1------------1-------
12     : ['chosenAt(quorum__node0_node2,value0)', 'vote(node0,value1)']
13     : ----1------------1------
13     : ['chosenAt(quorum__node0_node2,value1)', 'vote(node0,value2)']
14     : ---1-------------1------
14     : ['chosenAt(quorum__node0_node2,value0)', 'vote(node0,value2)']
15     : --1------------1--------
15     : ['chosenAt(quorum__node0_node1,value2)', 'vote(node0,value0)']
16     : -1-------------1--------
16     : ['chosenAt(quorum__node0_node1,value1)', 'vote(node0,value0)']
17     : --1-------------1-------
17     : ['chosenAt(quorum__node0_node1,value2)', 'vote(node0,value1)']
18     : 1---------------1-------
18     : ['chosenAt(quorum__node0_node1,value0)', 'vote(node0,value1)']
19     : -1---------------1------
19     : ['chosenAt(quorum__node0_node1,value1)', 'vote(node0,value2)']
20     : 1----------------1------
20     : ['chosenAt(quorum__node0_node1,value0)', 'vote(node0,value2)']
21     : --------1---------1-----
21     : ['chosenAt(quorum__node1_node2,value2)', 'vote(node1,value0)']
22     : -------1----------1-----
22     : ['chosenAt(quorum__node1_node2,value1)', 'vote(node1,value0)']
23     : --------1----------1----
23     : ['chosenAt(quorum__node1_node2,value2)', 'vote(node1,value1)']
24     : ------1------------1----
24     : ['chosenAt(quorum__node1_node2,value0)', 'vote(node1,value1)']
25     : -------1------------1---
25     : ['chosenAt(quorum__node1_node2,value1)', 'vote(node1,value2)']
26     : ------1-------------1---
26     : ['chosenAt(quorum__node1_node2,value0)', 'vote(node1,value2)']
27     : --1---------------1-----
27     : ['chosenAt(quorum__node0_node1,value2)', 'vote(node1,value0)']
28     : -1----------------1-----
28     : ['chosenAt(quorum__node0_node1,value1)', 'vote(node1,value0)']
29     : --1----------------1----
29     : ['chosenAt(quorum__node0_node1,value2)', 'vote(node1,value1)']
30     : 1------------------1----
30     : ['chosenAt(quorum__node0_node1,value0)', 'vote(node1,value1)']
31     : -1------------------1---
31     : ['chosenAt(quorum__node0_node1,value1)', 'vote(node1,value2)']
32     : 1-------------------1---
32     : ['chosenAt(quorum__node0_node1,value0)', 'vote(node1,value2)']
33     : --------1------------1--
33     : ['chosenAt(quorum__node1_node2,value2)', 'vote(node2,value0)']
34     : -------1-------------1--
34     : ['chosenAt(quorum__node1_node2,value1)', 'vote(node2,value0)']
35     : --------1-------------1-
35     : ['chosenAt(quorum__node1_node2,value2)', 'vote(node2,value1)']
36     : ------1---------------1-
36     : ['chosenAt(quorum__node1_node2,value0)', 'vote(node2,value1)']
37     : -------1---------------1
37     : ['chosenAt(quorum__node1_node2,value1)', 'vote(node2,value2)']
38     : ------1----------------1
38     : ['chosenAt(quorum__node1_node2,value0)', 'vote(node2,value2)']
39     : -----1---------------1--
39     : ['chosenAt(quorum__node0_node2,value2)', 'vote(node2,value0)']
40     : ----1----------------1--
40     : ['chosenAt(quorum__node0_node2,value1)', 'vote(node2,value0)']
41     : -----1----------------1-
41     : ['chosenAt(quorum__node0_node2,value2)', 'vote(node2,value1)']
42     : ---1------------------1-
42     : ['chosenAt(quorum__node0_node2,value0)', 'vote(node2,value1)']
43     : ----1------------------1
43     : ['chosenAt(quorum__node0_node2,value1)', 'vote(node2,value2)']
44     : ---1-------------------1
44     : ['chosenAt(quorum__node0_node2,value0)', 'vote(node2,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 9
num_suborbits: 1
45 (*) : ------------1--1--------
45     : ['didNotVote(node0)', 'vote(node0,value0)']
46     : ------------1---1-------
46     : ['didNotVote(node0)', 'vote(node0,value1)']
47     : ------------1----1------
47     : ['didNotVote(node0)', 'vote(node0,value2)']
48     : -------------1----1-----
48     : ['didNotVote(node1)', 'vote(node1,value0)']
49     : -------------1-----1----
49     : ['didNotVote(node1)', 'vote(node1,value1)']
50     : -------------1------1---
50     : ['didNotVote(node1)', 'vote(node1,value2)']
51     : --------------1------1--
51     : ['didNotVote(node2)', 'vote(node2,value0)']
52     : --------------1-------1-
52     : ['didNotVote(node2)', 'vote(node2,value1)']
53     : --------------1--------1
53     : ['didNotVote(node2)', 'vote(node2,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 18
num_suborbits: 1
54 (*) : 1-----------1-----------
54     : ['chosenAt(quorum__node0_node1,value0)', 'didNotVote(node0)']
55     : -1----------1-----------
55     : ['chosenAt(quorum__node0_node1,value1)', 'didNotVote(node0)']
56     : --1---------1-----------
56     : ['chosenAt(quorum__node0_node1,value2)', 'didNotVote(node0)']
57     : ---1--------1-----------
57     : ['chosenAt(quorum__node0_node2,value0)', 'didNotVote(node0)']
58     : ----1-------1-----------
58     : ['chosenAt(quorum__node0_node2,value1)', 'didNotVote(node0)']
59     : -----1------1-----------
59     : ['chosenAt(quorum__node0_node2,value2)', 'didNotVote(node0)']
60     : 1------------1----------
60     : ['chosenAt(quorum__node0_node1,value0)', 'didNotVote(node1)']
61     : -1-----------1----------
61     : ['chosenAt(quorum__node0_node1,value1)', 'didNotVote(node1)']
62     : --1----------1----------
62     : ['chosenAt(quorum__node0_node1,value2)', 'didNotVote(node1)']
63     : ------1------1----------
63     : ['chosenAt(quorum__node1_node2,value0)', 'didNotVote(node1)']
64     : -------1-----1----------
64     : ['chosenAt(quorum__node1_node2,value1)', 'didNotVote(node1)']
65     : --------1----1----------
65     : ['chosenAt(quorum__node1_node2,value2)', 'didNotVote(node1)']
66     : ---1----------1---------
66     : ['chosenAt(quorum__node0_node2,value0)', 'didNotVote(node2)']
67     : ----1---------1---------
67     : ['chosenAt(quorum__node0_node2,value1)', 'didNotVote(node2)']
68     : -----1--------1---------
68     : ['chosenAt(quorum__node0_node2,value2)', 'didNotVote(node2)']
69     : ------1-------1---------
69     : ['chosenAt(quorum__node1_node2,value0)', 'didNotVote(node2)']
70     : -------1------1---------
70     : ['chosenAt(quorum__node1_node2,value1)', 'didNotVote(node2)']
71     : --------1-----1---------
71     : ['chosenAt(quorum__node1_node2,value2)', 'didNotVote(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 18
num_suborbits: 1
72 (*) : --------11--------------
72     : ['chosenAt(quorum__node1_node2,value2)', 'decision(value0)']
73     : -------1-1--------------
73     : ['chosenAt(quorum__node1_node2,value1)', 'decision(value0)']
74     : --------1-1-------------
74     : ['chosenAt(quorum__node1_node2,value2)', 'decision(value1)']
75     : ------1---1-------------
75     : ['chosenAt(quorum__node1_node2,value0)', 'decision(value1)']
76     : -------1---1------------
76     : ['chosenAt(quorum__node1_node2,value1)', 'decision(value2)']
77     : ------1----1------------
77     : ['chosenAt(quorum__node1_node2,value0)', 'decision(value2)']
78     : -----1---1--------------
78     : ['chosenAt(quorum__node0_node2,value2)', 'decision(value0)']
79     : ----1----1--------------
79     : ['chosenAt(quorum__node0_node2,value1)', 'decision(value0)']
80     : -----1----1-------------
80     : ['chosenAt(quorum__node0_node2,value2)', 'decision(value1)']
81     : ---1------1-------------
81     : ['chosenAt(quorum__node0_node2,value0)', 'decision(value1)']
82     : ----1------1------------
82     : ['chosenAt(quorum__node0_node2,value1)', 'decision(value2)']
83     : ---1-------1------------
83     : ['chosenAt(quorum__node0_node2,value0)', 'decision(value2)']
84     : --1------1--------------
84     : ['chosenAt(quorum__node0_node1,value2)', 'decision(value0)']
85     : -1-------1--------------
85     : ['chosenAt(quorum__node0_node1,value1)', 'decision(value0)']
86     : --1-------1-------------
86     : ['chosenAt(quorum__node0_node1,value2)', 'decision(value1)']
87     : 1---------1-------------
87     : ['chosenAt(quorum__node0_node1,value0)', 'decision(value1)']
88     : -1---------1------------
88     : ['chosenAt(quorum__node0_node1,value1)', 'decision(value2)']
89     : 1----------1------------
89     : ['chosenAt(quorum__node0_node1,value0)', 'decision(value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 3
num_suborbits: 1
90 (*) : ---------1-1------------
90     : ['decision(value0)', 'decision(value2)']
91     : ---------11-------------
91     : ['decision(value0)', 'decision(value1)']
92     : ----------11------------
92     : ['decision(value1)', 'decision(value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 27
num_suborbits: 2
93 (*) : 1-------1---------------
93     : ['chosenAt(quorum__node0_node1,value0)', 'chosenAt(quorum__node1_node2,value2)']
94     : 1------1----------------
94     : ['chosenAt(quorum__node0_node1,value0)', 'chosenAt(quorum__node1_node2,value1)']
95     : -1------1---------------
95     : ['chosenAt(quorum__node0_node1,value1)', 'chosenAt(quorum__node1_node2,value2)']
96     : -1----1-----------------
96     : ['chosenAt(quorum__node0_node1,value1)', 'chosenAt(quorum__node1_node2,value0)']
97     : --1----1----------------
97     : ['chosenAt(quorum__node0_node1,value2)', 'chosenAt(quorum__node1_node2,value1)']
98     : --1---1-----------------
98     : ['chosenAt(quorum__node0_node1,value2)', 'chosenAt(quorum__node1_node2,value0)']
99     : ---1----1---------------
99     : ['chosenAt(quorum__node0_node2,value0)', 'chosenAt(quorum__node1_node2,value2)']
100     : ---1---1----------------
100     : ['chosenAt(quorum__node0_node2,value0)', 'chosenAt(quorum__node1_node2,value1)']
101     : ----1---1---------------
101     : ['chosenAt(quorum__node0_node2,value1)', 'chosenAt(quorum__node1_node2,value2)']
102     : ----1-1-----------------
102     : ['chosenAt(quorum__node0_node2,value1)', 'chosenAt(quorum__node1_node2,value0)']
103     : -----1-1----------------
103     : ['chosenAt(quorum__node0_node2,value2)', 'chosenAt(quorum__node1_node2,value1)']
104     : -----11-----------------
104     : ['chosenAt(quorum__node0_node2,value2)', 'chosenAt(quorum__node1_node2,value0)']
105     : 1----1------------------
105     : ['chosenAt(quorum__node0_node1,value0)', 'chosenAt(quorum__node0_node2,value2)']
106     : 1---1-------------------
106     : ['chosenAt(quorum__node0_node1,value0)', 'chosenAt(quorum__node0_node2,value1)']
107     : -1---1------------------
107     : ['chosenAt(quorum__node0_node1,value1)', 'chosenAt(quorum__node0_node2,value2)']
108     : -1-1--------------------
108     : ['chosenAt(quorum__node0_node1,value1)', 'chosenAt(quorum__node0_node2,value0)']
109     : --1-1-------------------
109     : ['chosenAt(quorum__node0_node1,value2)', 'chosenAt(quorum__node0_node2,value1)']
110     : --11--------------------
110     : ['chosenAt(quorum__node0_node1,value2)', 'chosenAt(quorum__node0_node2,value0)']
111 (*) : ------1-1---------------
111     : ['chosenAt(quorum__node1_node2,value0)', 'chosenAt(quorum__node1_node2,value2)']
112     : ------11----------------
112     : ['chosenAt(quorum__node1_node2,value0)', 'chosenAt(quorum__node1_node2,value1)']
113     : -------11---------------
113     : ['chosenAt(quorum__node1_node2,value1)', 'chosenAt(quorum__node1_node2,value2)']
114     : ---1-1------------------
114     : ['chosenAt(quorum__node0_node2,value0)', 'chosenAt(quorum__node0_node2,value2)']
115     : ---11-------------------
115     : ['chosenAt(quorum__node0_node2,value0)', 'chosenAt(quorum__node0_node2,value1)']
116     : ----11------------------
116     : ['chosenAt(quorum__node0_node2,value1)', 'chosenAt(quorum__node0_node2,value2)']
117     : 1-1---------------------
117     : ['chosenAt(quorum__node0_node1,value0)', 'chosenAt(quorum__node0_node1,value2)']
118     : 11----------------------
118     : ['chosenAt(quorum__node0_node1,value0)', 'chosenAt(quorum__node0_node1,value1)']
119     : -11---------------------
119     : ['chosenAt(quorum__node0_node1,value1)', 'chosenAt(quorum__node0_node1,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 18
num_suborbits: 1
120 (*) : 1--------------0--------
120     : ['chosenAt(quorum__node0_node1,value0)', '~vote(node0,value0)']
121     : -1--------------0-------
121     : ['chosenAt(quorum__node0_node1,value1)', '~vote(node0,value1)']
122     : --1--------------0------
122     : ['chosenAt(quorum__node0_node1,value2)', '~vote(node0,value2)']
123     : ---1-----------0--------
123     : ['chosenAt(quorum__node0_node2,value0)', '~vote(node0,value0)']
124     : ----1-----------0-------
124     : ['chosenAt(quorum__node0_node2,value1)', '~vote(node0,value1)']
125     : -----1-----------0------
125     : ['chosenAt(quorum__node0_node2,value2)', '~vote(node0,value2)']
126     : 1-----------------0-----
126     : ['chosenAt(quorum__node0_node1,value0)', '~vote(node1,value0)']
127     : -1-----------------0----
127     : ['chosenAt(quorum__node0_node1,value1)', '~vote(node1,value1)']
128     : --1-----------------0---
128     : ['chosenAt(quorum__node0_node1,value2)', '~vote(node1,value2)']
129     : ------1-----------0-----
129     : ['chosenAt(quorum__node1_node2,value0)', '~vote(node1,value0)']
130     : -------1-----------0----
130     : ['chosenAt(quorum__node1_node2,value1)', '~vote(node1,value1)']
131     : --------1-----------0---
131     : ['chosenAt(quorum__node1_node2,value2)', '~vote(node1,value2)']
132     : ---1-----------------0--
132     : ['chosenAt(quorum__node0_node2,value0)', '~vote(node2,value0)']
133     : ----1-----------------0-
133     : ['chosenAt(quorum__node0_node2,value1)', '~vote(node2,value1)']
134     : -----1-----------------0
134     : ['chosenAt(quorum__node0_node2,value2)', '~vote(node2,value2)']
135     : ------1--------------0--
135     : ['chosenAt(quorum__node1_node2,value0)', '~vote(node2,value0)']
136     : -------1--------------0-
136     : ['chosenAt(quorum__node1_node2,value1)', '~vote(node2,value1)']
137     : --------1--------------0
137     : ['chosenAt(quorum__node1_node2,value2)', '~vote(node2,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
138 (*) : -------0-----------1--1-
138     : ['vote(node1,value1)', 'vote(node2,value1)', '~chosenAt(quorum__node1_node2,value1)']
139     : --------0-----------1--1
139     : ['vote(node1,value2)', 'vote(node2,value2)', '~chosenAt(quorum__node1_node2,value2)']
140     : ------0-----------1--1--
140     : ['vote(node1,value0)', 'vote(node2,value0)', '~chosenAt(quorum__node1_node2,value0)']
141     : ----0-----------1-----1-
141     : ['vote(node0,value1)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node2,value1)']
142     : -----0-----------1-----1
142     : ['vote(node0,value2)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node2,value2)']
143     : ---0-----------1-----1--
143     : ['vote(node0,value0)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node2,value0)']
144     : -0--------------1--1----
144     : ['vote(node0,value1)', 'vote(node1,value1)', '~chosenAt(quorum__node0_node1,value1)']
145     : --0--------------1--1---
145     : ['vote(node0,value2)', 'vote(node1,value2)', '~chosenAt(quorum__node0_node1,value2)']
146     : 0--------------1--1-----
146     : ['vote(node0,value0)', 'vote(node1,value0)', '~chosenAt(quorum__node0_node1,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 18
num_suborbits: 1
147 (*) : ----1--0-----------1----
147     : ['chosenAt(quorum__node0_node2,value1)', 'vote(node1,value1)', '~chosenAt(quorum__node1_node2,value1)']
148     : -----1--0-----------1---
148     : ['chosenAt(quorum__node0_node2,value2)', 'vote(node1,value2)', '~chosenAt(quorum__node1_node2,value2)']
149     : ---1--0-----------1-----
149     : ['chosenAt(quorum__node0_node2,value0)', 'vote(node1,value0)', '~chosenAt(quorum__node1_node2,value0)']
150     : -1-----0--------------1-
150     : ['chosenAt(quorum__node0_node1,value1)', 'vote(node2,value1)', '~chosenAt(quorum__node1_node2,value1)']
151     : --1-----0--------------1
151     : ['chosenAt(quorum__node0_node1,value2)', 'vote(node2,value2)', '~chosenAt(quorum__node1_node2,value2)']
152     : 1-----0--------------1--
152     : ['chosenAt(quorum__node0_node1,value0)', 'vote(node2,value0)', '~chosenAt(quorum__node1_node2,value0)']
153     : ----0--1--------1-------
153     : ['chosenAt(quorum__node1_node2,value1)', 'vote(node0,value1)', '~chosenAt(quorum__node0_node2,value1)']
154     : -----0--1--------1------
154     : ['chosenAt(quorum__node1_node2,value2)', 'vote(node0,value2)', '~chosenAt(quorum__node0_node2,value2)']
155     : ---0--1--------1--------
155     : ['chosenAt(quorum__node1_node2,value0)', 'vote(node0,value0)', '~chosenAt(quorum__node0_node2,value0)']
156     : -1--0-----------------1-
156     : ['chosenAt(quorum__node0_node1,value1)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node2,value1)']
157     : --1--0-----------------1
157     : ['chosenAt(quorum__node0_node1,value2)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node2,value2)']
158     : 1--0-----------------1--
158     : ['chosenAt(quorum__node0_node1,value0)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node2,value0)']
159     : -0-----1--------1-------
159     : ['chosenAt(quorum__node1_node2,value1)', 'vote(node0,value1)', '~chosenAt(quorum__node0_node1,value1)']
160     : --0-----1--------1------
160     : ['chosenAt(quorum__node1_node2,value2)', 'vote(node0,value2)', '~chosenAt(quorum__node0_node1,value2)']
161     : 0-----1--------1--------
161     : ['chosenAt(quorum__node1_node2,value0)', 'vote(node0,value0)', '~chosenAt(quorum__node0_node1,value0)']
162     : -0--1--------------1----
162     : ['chosenAt(quorum__node0_node2,value1)', 'vote(node1,value1)', '~chosenAt(quorum__node0_node1,value1)']
163     : --0--1--------------1---
163     : ['chosenAt(quorum__node0_node2,value2)', 'vote(node1,value2)', '~chosenAt(quorum__node0_node1,value2)']
164     : 0--1--------------1-----
164     : ['chosenAt(quorum__node0_node2,value0)', 'vote(node1,value0)', '~chosenAt(quorum__node0_node1,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 36
num_suborbits: 2
165 (*) : -----------1-------1-1--
165     : ['decision(value2)', 'vote(node1,value1)', 'vote(node2,value0)']
166     : ----------1---------11--
166     : ['decision(value1)', 'vote(node1,value2)', 'vote(node2,value0)']
167     : -----------1------1---1-
167     : ['decision(value2)', 'vote(node1,value0)', 'vote(node2,value1)']
168     : ---------1----------1-1-
168     : ['decision(value0)', 'vote(node1,value2)', 'vote(node2,value1)']
169     : ----------1-------1----1
169     : ['decision(value1)', 'vote(node1,value0)', 'vote(node2,value2)']
170     : ---------1---------1---1
170     : ['decision(value0)', 'vote(node1,value1)', 'vote(node2,value2)']
171     : -----------1----1----1--
171     : ['decision(value2)', 'vote(node0,value1)', 'vote(node2,value0)']
172     : ----------1------1---1--
172     : ['decision(value1)', 'vote(node0,value2)', 'vote(node2,value0)']
173     : -----------1---1------1-
173     : ['decision(value2)', 'vote(node0,value0)', 'vote(node2,value1)']
174     : ---------1-------1----1-
174     : ['decision(value0)', 'vote(node0,value2)', 'vote(node2,value1)']
175     : ----------1----1-------1
175     : ['decision(value1)', 'vote(node0,value0)', 'vote(node2,value2)']
176     : ---------1------1------1
176     : ['decision(value0)', 'vote(node0,value1)', 'vote(node2,value2)']
177     : -----------1----1-1-----
177     : ['decision(value2)', 'vote(node0,value1)', 'vote(node1,value0)']
178     : ----------1------11-----
178     : ['decision(value1)', 'vote(node0,value2)', 'vote(node1,value0)']
179     : -----------1---1---1----
179     : ['decision(value2)', 'vote(node0,value0)', 'vote(node1,value1)']
180     : ---------1-------1-1----
180     : ['decision(value0)', 'vote(node0,value2)', 'vote(node1,value1)']
181     : ----------1----1----1---
181     : ['decision(value1)', 'vote(node0,value0)', 'vote(node1,value2)']
182     : ---------1------1---1---
182     : ['decision(value0)', 'vote(node0,value1)', 'vote(node1,value2)']
237 (*) : -----------1-------1--1-
237     : ['decision(value2)', 'vote(node1,value1)', 'vote(node2,value1)']
238     : ----------1---------1--1
238     : ['decision(value1)', 'vote(node1,value2)', 'vote(node2,value2)']
239     : -----------1------1--1--
239     : ['decision(value2)', 'vote(node1,value0)', 'vote(node2,value0)']
240     : ---------1----------1--1
240     : ['decision(value0)', 'vote(node1,value2)', 'vote(node2,value2)']
241     : ----------1-------1--1--
241     : ['decision(value1)', 'vote(node1,value0)', 'vote(node2,value0)']
242     : ---------1---------1--1-
242     : ['decision(value0)', 'vote(node1,value1)', 'vote(node2,value1)']
243     : -----------1----1-----1-
243     : ['decision(value2)', 'vote(node0,value1)', 'vote(node2,value1)']
244     : ----------1------1-----1
244     : ['decision(value1)', 'vote(node0,value2)', 'vote(node2,value2)']
245     : -----------1---1-----1--
245     : ['decision(value2)', 'vote(node0,value0)', 'vote(node2,value0)']
246     : ---------1-------1-----1
246     : ['decision(value0)', 'vote(node0,value2)', 'vote(node2,value2)']
247     : ----------1----1-----1--
247     : ['decision(value1)', 'vote(node0,value0)', 'vote(node2,value0)']
248     : ---------1------1-----1-
248     : ['decision(value0)', 'vote(node0,value1)', 'vote(node2,value1)']
249     : -----------1----1--1----
249     : ['decision(value2)', 'vote(node0,value1)', 'vote(node1,value1)']
250     : ----------1------1--1---
250     : ['decision(value1)', 'vote(node0,value2)', 'vote(node1,value2)']
251     : -----------1---1--1-----
251     : ['decision(value2)', 'vote(node0,value0)', 'vote(node1,value0)']
252     : ---------1-------1--1---
252     : ['decision(value0)', 'vote(node0,value2)', 'vote(node1,value2)']
253     : ----------1----1--1-----
253     : ['decision(value1)', 'vote(node0,value0)', 'vote(node1,value0)']
254     : ---------1------1--1----
254     : ['decision(value0)', 'vote(node0,value1)', 'vote(node1,value1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 36
num_suborbits: 1
183 (*) : -----------1-------1---0
183     : ['decision(value2)', 'vote(node1,value1)', '~vote(node2,value2)']
184     : ----------1---------1-0-
184     : ['decision(value1)', 'vote(node1,value2)', '~vote(node2,value1)']
185     : -----------1------1----0
185     : ['decision(value2)', 'vote(node1,value0)', '~vote(node2,value2)']
186     : ---------1----------10--
186     : ['decision(value0)', 'vote(node1,value2)', '~vote(node2,value0)']
187     : ----------1-------1---0-
187     : ['decision(value1)', 'vote(node1,value0)', '~vote(node2,value1)']
188     : ---------1---------1-0--
188     : ['decision(value0)', 'vote(node1,value1)', '~vote(node2,value0)']
189     : -----------1--------0-1-
189     : ['decision(value2)', 'vote(node2,value1)', '~vote(node1,value2)']
190     : ----------1--------0---1
190     : ['decision(value1)', 'vote(node2,value2)', '~vote(node1,value1)']
191     : -----------1--------01--
191     : ['decision(value2)', 'vote(node2,value0)', '~vote(node1,value2)']
192     : ---------1--------0----1
192     : ['decision(value0)', 'vote(node2,value2)', '~vote(node1,value0)']
193     : ----------1--------0-1--
193     : ['decision(value1)', 'vote(node2,value0)', '~vote(node1,value1)']
194     : ---------1--------0---1-
194     : ['decision(value0)', 'vote(node2,value1)', '~vote(node1,value0)']
195     : -----------1----1------0
195     : ['decision(value2)', 'vote(node0,value1)', '~vote(node2,value2)']
196     : ----------1------1----0-
196     : ['decision(value1)', 'vote(node0,value2)', '~vote(node2,value1)']
197     : -----------1---1-------0
197     : ['decision(value2)', 'vote(node0,value0)', '~vote(node2,value2)']
198     : ---------1-------1---0--
198     : ['decision(value0)', 'vote(node0,value2)', '~vote(node2,value0)']
199     : ----------1----1------0-
199     : ['decision(value1)', 'vote(node0,value0)', '~vote(node2,value1)']
200     : ---------1------1----0--
200     : ['decision(value0)', 'vote(node0,value1)', '~vote(node2,value0)']
201     : -----------1-----0----1-
201     : ['decision(value2)', 'vote(node2,value1)', '~vote(node0,value2)']
202     : ----------1-----0------1
202     : ['decision(value1)', 'vote(node2,value2)', '~vote(node0,value1)']
203     : -----------1-----0---1--
203     : ['decision(value2)', 'vote(node2,value0)', '~vote(node0,value2)']
204     : ---------1-----0-------1
204     : ['decision(value0)', 'vote(node2,value2)', '~vote(node0,value0)']
205     : ----------1-----0----1--
205     : ['decision(value1)', 'vote(node2,value0)', '~vote(node0,value1)']
206     : ---------1-----0------1-
206     : ['decision(value0)', 'vote(node2,value1)', '~vote(node0,value0)']
207     : -----------1----1---0---
207     : ['decision(value2)', 'vote(node0,value1)', '~vote(node1,value2)']
208     : ----------1------1-0----
208     : ['decision(value1)', 'vote(node0,value2)', '~vote(node1,value1)']
209     : -----------1---1----0---
209     : ['decision(value2)', 'vote(node0,value0)', '~vote(node1,value2)']
210     : ---------1-------10-----
210     : ['decision(value0)', 'vote(node0,value2)', '~vote(node1,value0)']
211     : ----------1----1---0----
211     : ['decision(value1)', 'vote(node0,value0)', '~vote(node1,value1)']
212     : ---------1------1-0-----
212     : ['decision(value0)', 'vote(node0,value1)', '~vote(node1,value0)']
213     : -----------1-----0-1----
213     : ['decision(value2)', 'vote(node1,value1)', '~vote(node0,value2)']
214     : ----------1-----0---1---
214     : ['decision(value1)', 'vote(node1,value2)', '~vote(node0,value1)']
215     : -----------1-----01-----
215     : ['decision(value2)', 'vote(node1,value0)', '~vote(node0,value2)']
216     : ---------1-----0----1---
216     : ['decision(value0)', 'vote(node1,value2)', '~vote(node0,value0)']
217     : ----------1-----0-1-----
217     : ['decision(value1)', 'vote(node1,value0)', '~vote(node0,value1)']
218     : ---------1-----0---1----
218     : ['decision(value0)', 'vote(node1,value1)', '~vote(node0,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 18
num_suborbits: 1
219 (*) : -----0-----1-------1----
219     : ['decision(value2)', 'vote(node1,value1)', '~chosenAt(quorum__node0_node2,value2)']
220     : ----0-----1---------1---
220     : ['decision(value1)', 'vote(node1,value2)', '~chosenAt(quorum__node0_node2,value1)']
221     : -----0-----1------1-----
221     : ['decision(value2)', 'vote(node1,value0)', '~chosenAt(quorum__node0_node2,value2)']
222     : ---0-----1----------1---
222     : ['decision(value0)', 'vote(node1,value2)', '~chosenAt(quorum__node0_node2,value0)']
223     : ----0-----1-------1-----
223     : ['decision(value1)', 'vote(node1,value0)', '~chosenAt(quorum__node0_node2,value1)']
224     : ---0-----1---------1----
224     : ['decision(value0)', 'vote(node1,value1)', '~chosenAt(quorum__node0_node2,value0)']
225     : --0--------1----------1-
225     : ['decision(value2)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node1,value2)']
226     : -0--------1------------1
226     : ['decision(value1)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node1,value1)']
227     : --0--------1---------1--
227     : ['decision(value2)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node1,value2)']
228     : 0--------1-------------1
228     : ['decision(value0)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node1,value0)']
229     : -0--------1----------1--
229     : ['decision(value1)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node1,value1)']
230     : 0--------1------------1-
230     : ['decision(value0)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node1,value0)']
231     : --------0--1----1-------
231     : ['decision(value2)', 'vote(node0,value1)', '~chosenAt(quorum__node1_node2,value2)']
232     : -------0--1------1------
232     : ['decision(value1)', 'vote(node0,value2)', '~chosenAt(quorum__node1_node2,value1)']
233     : --------0--1---1--------
233     : ['decision(value2)', 'vote(node0,value0)', '~chosenAt(quorum__node1_node2,value2)']
234     : ------0--1-------1------
234     : ['decision(value0)', 'vote(node0,value2)', '~chosenAt(quorum__node1_node2,value0)']
235     : -------0--1----1--------
235     : ['decision(value1)', 'vote(node0,value0)', '~chosenAt(quorum__node1_node2,value1)']
236     : ------0--1------1-------
236     : ['decision(value0)', 'vote(node0,value1)', '~chosenAt(quorum__node1_node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 36
num_suborbits: 1
255 (*) : -----------11------1----
255     : ['decision(value2)', 'didNotVote(node0)', 'vote(node1,value1)']
256     : ----------1-1-------1---
256     : ['decision(value1)', 'didNotVote(node0)', 'vote(node1,value2)']
257     : -----------11-----1-----
257     : ['decision(value2)', 'didNotVote(node0)', 'vote(node1,value0)']
258     : ---------1--1-------1---
258     : ['decision(value0)', 'didNotVote(node0)', 'vote(node1,value2)']
259     : ----------1-1-----1-----
259     : ['decision(value1)', 'didNotVote(node0)', 'vote(node1,value0)']
260     : ---------1--1------1----
260     : ['decision(value0)', 'didNotVote(node0)', 'vote(node1,value1)']
261     : -----------11---------1-
261     : ['decision(value2)', 'didNotVote(node0)', 'vote(node2,value1)']
262     : ----------1-1----------1
262     : ['decision(value1)', 'didNotVote(node0)', 'vote(node2,value2)']
263     : -----------11--------1--
263     : ['decision(value2)', 'didNotVote(node0)', 'vote(node2,value0)']
264     : ---------1--1----------1
264     : ['decision(value0)', 'didNotVote(node0)', 'vote(node2,value2)']
265     : ----------1-1--------1--
265     : ['decision(value1)', 'didNotVote(node0)', 'vote(node2,value0)']
266     : ---------1--1---------1-
266     : ['decision(value0)', 'didNotVote(node0)', 'vote(node2,value1)']
267     : -----------1-1--1-------
267     : ['decision(value2)', 'didNotVote(node1)', 'vote(node0,value1)']
268     : ----------1--1---1------
268     : ['decision(value1)', 'didNotVote(node1)', 'vote(node0,value2)']
269     : -----------1-1-1--------
269     : ['decision(value2)', 'didNotVote(node1)', 'vote(node0,value0)']
270     : ---------1---1---1------
270     : ['decision(value0)', 'didNotVote(node1)', 'vote(node0,value2)']
271     : ----------1--1-1--------
271     : ['decision(value1)', 'didNotVote(node1)', 'vote(node0,value0)']
272     : ---------1---1--1-------
272     : ['decision(value0)', 'didNotVote(node1)', 'vote(node0,value1)']
273     : -----------1-1--------1-
273     : ['decision(value2)', 'didNotVote(node1)', 'vote(node2,value1)']
274     : ----------1--1---------1
274     : ['decision(value1)', 'didNotVote(node1)', 'vote(node2,value2)']
275     : -----------1-1-------1--
275     : ['decision(value2)', 'didNotVote(node1)', 'vote(node2,value0)']
276     : ---------1---1---------1
276     : ['decision(value0)', 'didNotVote(node1)', 'vote(node2,value2)']
277     : ----------1--1-------1--
277     : ['decision(value1)', 'didNotVote(node1)', 'vote(node2,value0)']
278     : ---------1---1--------1-
278     : ['decision(value0)', 'didNotVote(node1)', 'vote(node2,value1)']
279     : -----------1--1-1-------
279     : ['decision(value2)', 'didNotVote(node2)', 'vote(node0,value1)']
280     : ----------1---1--1------
280     : ['decision(value1)', 'didNotVote(node2)', 'vote(node0,value2)']
281     : -----------1--11--------
281     : ['decision(value2)', 'didNotVote(node2)', 'vote(node0,value0)']
282     : ---------1----1--1------
282     : ['decision(value0)', 'didNotVote(node2)', 'vote(node0,value2)']
283     : ----------1---11--------
283     : ['decision(value1)', 'didNotVote(node2)', 'vote(node0,value0)']
284     : ---------1----1-1-------
284     : ['decision(value0)', 'didNotVote(node2)', 'vote(node0,value1)']
285     : -----------1--1----1----
285     : ['decision(value2)', 'didNotVote(node2)', 'vote(node1,value1)']
286     : ----------1---1-----1---
286     : ['decision(value1)', 'didNotVote(node2)', 'vote(node1,value2)']
287     : -----------1--1---1-----
287     : ['decision(value2)', 'didNotVote(node2)', 'vote(node1,value0)']
288     : ---------1----1-----1---
288     : ['decision(value0)', 'didNotVote(node2)', 'vote(node1,value2)']
289     : ----------1---1---1-----
289     : ['decision(value1)', 'didNotVote(node2)', 'vote(node1,value0)']
290     : ---------1----1----1----
290     : ['decision(value0)', 'didNotVote(node2)', 'vote(node1,value1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
291 (*) : ---0-----1--------0-----
291     : ['decision(value0)', '~chosenAt(quorum__node0_node2,value0)', '~vote(node1,value0)']
292     : ----0-----1--------0----
292     : ['decision(value1)', '~chosenAt(quorum__node0_node2,value1)', '~vote(node1,value1)']
293     : -----0-----1--------0---
293     : ['decision(value2)', '~chosenAt(quorum__node0_node2,value2)', '~vote(node1,value2)']
294     : 0--------1-----------0--
294     : ['decision(value0)', '~chosenAt(quorum__node0_node1,value0)', '~vote(node2,value0)']
295     : -0--------1-----------0-
295     : ['decision(value1)', '~chosenAt(quorum__node0_node1,value1)', '~vote(node2,value1)']
296     : --0--------1-----------0
296     : ['decision(value2)', '~chosenAt(quorum__node0_node1,value2)', '~vote(node2,value2)']
297     : ------0--1-----0--------
297     : ['decision(value0)', '~chosenAt(quorum__node1_node2,value0)', '~vote(node0,value0)']
298     : -------0--1-----0-------
298     : ['decision(value1)', '~chosenAt(quorum__node1_node2,value1)', '~vote(node0,value1)']
299     : --------0--1-----0------
299     : ['decision(value2)', '~chosenAt(quorum__node1_node2,value2)', '~vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
300 (*) : ---------1--------0--0--
300     : ['decision(value0)', '~vote(node1,value0)', '~vote(node2,value0)']
301     : ----------1--------0--0-
301     : ['decision(value1)', '~vote(node1,value1)', '~vote(node2,value1)']
302     : -----------1--------0--0
302     : ['decision(value2)', '~vote(node1,value2)', '~vote(node2,value2)']
303     : ---------1-----0-----0--
303     : ['decision(value0)', '~vote(node0,value0)', '~vote(node2,value0)']
304     : ----------1-----0-----0-
304     : ['decision(value1)', '~vote(node0,value1)', '~vote(node2,value1)']
305     : -----------1-----0-----0
305     : ['decision(value2)', '~vote(node0,value2)', '~vote(node2,value2)']
306     : ---------1-----0--0-----
306     : ['decision(value0)', '~vote(node0,value0)', '~vote(node1,value0)']
307     : ----------1-----0--0----
307     : ['decision(value1)', '~vote(node0,value1)', '~vote(node1,value1)']
308     : -----------1-----0--0---
308     : ['decision(value2)', '~vote(node0,value2)', '~vote(node1,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 18
num_suborbits: 1
309 (*) : ---------1--1-----0-----
309     : ['decision(value0)', 'didNotVote(node0)', '~vote(node1,value0)']
310     : ----------1-1------0----
310     : ['decision(value1)', 'didNotVote(node0)', '~vote(node1,value1)']
311     : -----------11-------0---
311     : ['decision(value2)', 'didNotVote(node0)', '~vote(node1,value2)']
312     : ---------1--1--------0--
312     : ['decision(value0)', 'didNotVote(node0)', '~vote(node2,value0)']
313     : ----------1-1---------0-
313     : ['decision(value1)', 'didNotVote(node0)', '~vote(node2,value1)']
314     : -----------11----------0
314     : ['decision(value2)', 'didNotVote(node0)', '~vote(node2,value2)']
315     : ---------1---1-0--------
315     : ['decision(value0)', 'didNotVote(node1)', '~vote(node0,value0)']
316     : ----------1--1--0-------
316     : ['decision(value1)', 'didNotVote(node1)', '~vote(node0,value1)']
317     : -----------1-1---0------
317     : ['decision(value2)', 'didNotVote(node1)', '~vote(node0,value2)']
318     : ---------1---1-------0--
318     : ['decision(value0)', 'didNotVote(node1)', '~vote(node2,value0)']
319     : ----------1--1--------0-
319     : ['decision(value1)', 'didNotVote(node1)', '~vote(node2,value1)']
320     : -----------1-1---------0
320     : ['decision(value2)', 'didNotVote(node1)', '~vote(node2,value2)']
321     : ---------1----10--------
321     : ['decision(value0)', 'didNotVote(node2)', '~vote(node0,value0)']
322     : ----------1---1-0-------
322     : ['decision(value1)', 'didNotVote(node2)', '~vote(node0,value1)']
323     : -----------1--1--0------
323     : ['decision(value2)', 'didNotVote(node2)', '~vote(node0,value2)']
324     : ---------1----1---0-----
324     : ['decision(value0)', 'didNotVote(node2)', '~vote(node1,value0)']
325     : ----------1---1----0----
325     : ['decision(value1)', 'didNotVote(node2)', '~vote(node1,value1)']
326     : -----------1--1-----0---
326     : ['decision(value2)', 'didNotVote(node2)', '~vote(node1,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
327 (*) : ------0--1--1-----------
327     : ['decision(value0)', 'didNotVote(node0)', '~chosenAt(quorum__node1_node2,value0)']
328     : -------0--1-1-----------
328     : ['decision(value1)', 'didNotVote(node0)', '~chosenAt(quorum__node1_node2,value1)']
329     : --------0--11-----------
329     : ['decision(value2)', 'didNotVote(node0)', '~chosenAt(quorum__node1_node2,value2)']
330     : ---0-----1---1----------
330     : ['decision(value0)', 'didNotVote(node1)', '~chosenAt(quorum__node0_node2,value0)']
331     : ----0-----1--1----------
331     : ['decision(value1)', 'didNotVote(node1)', '~chosenAt(quorum__node0_node2,value1)']
332     : -----0-----1-1----------
332     : ['decision(value2)', 'didNotVote(node1)', '~chosenAt(quorum__node0_node2,value2)']
333     : 0--------1----1---------
333     : ['decision(value0)', 'didNotVote(node2)', '~chosenAt(quorum__node0_node1,value0)']
334     : -0--------1---1---------
334     : ['decision(value1)', 'didNotVote(node2)', '~chosenAt(quorum__node0_node1,value1)']
335     : --0--------1--1---------
335     : ['decision(value2)', 'didNotVote(node2)', '~chosenAt(quorum__node0_node1,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
336 (*) : -0--1--1----------------
336     : ['chosenAt(quorum__node0_node2,value1)', 'chosenAt(quorum__node1_node2,value1)', '~chosenAt(quorum__node0_node1,value1)']
337     : --0--1--1---------------
337     : ['chosenAt(quorum__node0_node2,value2)', 'chosenAt(quorum__node1_node2,value2)', '~chosenAt(quorum__node0_node1,value2)']
338     : 0--1--1-----------------
338     : ['chosenAt(quorum__node0_node2,value0)', 'chosenAt(quorum__node1_node2,value0)', '~chosenAt(quorum__node0_node1,value0)']
339     : -1--0--1----------------
339     : ['chosenAt(quorum__node0_node1,value1)', 'chosenAt(quorum__node1_node2,value1)', '~chosenAt(quorum__node0_node2,value1)']
340     : --1--0--1---------------
340     : ['chosenAt(quorum__node0_node1,value2)', 'chosenAt(quorum__node1_node2,value2)', '~chosenAt(quorum__node0_node2,value2)']
341     : 1--0--1-----------------
341     : ['chosenAt(quorum__node0_node1,value0)', 'chosenAt(quorum__node1_node2,value0)', '~chosenAt(quorum__node0_node2,value0)']
342     : -1--1--0----------------
342     : ['chosenAt(quorum__node0_node1,value1)', 'chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)']
343     : --1--1--0---------------
343     : ['chosenAt(quorum__node0_node1,value2)', 'chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)']
344     : 1--1--0-----------------
344     : ['chosenAt(quorum__node0_node1,value0)', 'chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
345 (*) : ---------1--1-1---------
345     : ['decision(value0)', 'didNotVote(node0)', 'didNotVote(node2)']
346     : ----------1-1-1---------
346     : ['decision(value1)', 'didNotVote(node0)', 'didNotVote(node2)']
347     : -----------11-1---------
347     : ['decision(value2)', 'didNotVote(node0)', 'didNotVote(node2)']
348     : ---------1--11----------
348     : ['decision(value0)', 'didNotVote(node0)', 'didNotVote(node1)']
349     : ----------1-11----------
349     : ['decision(value1)', 'didNotVote(node0)', 'didNotVote(node1)']
350     : -----------111----------
350     : ['decision(value2)', 'didNotVote(node0)', 'didNotVote(node1)']
351     : ---------1---11---------
351     : ['decision(value0)', 'didNotVote(node1)', 'didNotVote(node2)']
352     : ----------1--11---------
352     : ['decision(value1)', 'didNotVote(node1)', 'didNotVote(node2)']
353     : -----------1-11---------
353     : ['decision(value2)', 'didNotVote(node1)', 'didNotVote(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 3
num_suborbits: 1
354 (*) : -------------0----000---
354     : ['~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value1)', '~vote(node1,value2)']
355     : --------------0------000
355     : ['~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value1)', '~vote(node2,value2)']
356     : ------------0--000------
356     : ['~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
357 (*) : -----0--0--1-----------1
357     : ['decision(value2)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)']
358     : ----0--0--1-----------1-
358     : ['decision(value1)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)']
359     : ---0--0--1-----------1--
359     : ['decision(value0)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)']
360     : --0-----0--1--------1---
360     : ['decision(value2)', 'vote(node1,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value2)']
361     : -0-----0--1--------1----
361     : ['decision(value1)', 'vote(node1,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value1)']
362     : 0-----0--1--------1-----
362     : ['decision(value0)', 'vote(node1,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value0)']
363     : --0--0-----1-----1------
363     : ['decision(value2)', 'vote(node0,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)']
364     : -0--0-----1-----1-------
364     : ['decision(value1)', 'vote(node0,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)']
365     : 0--0-----1-----1--------
365     : ['decision(value0)', 'vote(node0,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 3
num_suborbits: 1
366 (*) : --0--0--0--1------------
366     : ['decision(value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)']
367     : -0--0--0--1-------------
367     : ['decision(value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)']
368     : 0--0--0--1--------------
368     : ['decision(value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 18
num_suborbits: 1
369 (*) : --0----------0---100----
369     : ['vote(node0,value2)', '~chosenAt(quorum__node0_node1,value2)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value1)']
370     : -0-----------0--1-0-0---
370     : ['vote(node0,value1)', '~chosenAt(quorum__node0_node1,value1)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value2)']
371     : 0------------0-1---00---
371     : ['vote(node0,value0)', '~chosenAt(quorum__node0_node1,value0)', '~didNotVote(node1)', '~vote(node1,value1)', '~vote(node1,value2)']
372     : -----0--------0--1---00-
372     : ['vote(node0,value2)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value1)']
373     : ----0---------0-1----0-0
373     : ['vote(node0,value1)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value2)']
374     : ---0----------01------00
374     : ['vote(node0,value0)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node2)', '~vote(node2,value1)', '~vote(node2,value2)']
375     : --0---------0--00---1---
375     : ['vote(node1,value2)', '~chosenAt(quorum__node0_node1,value2)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value1)']
376     : -0----------0--0-0-1----
376     : ['vote(node1,value1)', '~chosenAt(quorum__node0_node1,value1)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value2)']
377     : 0-----------0---001-----
377     : ['vote(node1,value0)', '~chosenAt(quorum__node0_node1,value0)', '~didNotVote(node0)', '~vote(node0,value1)', '~vote(node0,value2)']
378     : --------0-----0-----100-
378     : ['vote(node1,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value1)']
379     : -------0------0----1-0-0
379     : ['vote(node1,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value2)']
380     : ------0-------0---1---00
380     : ['vote(node1,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node2)', '~vote(node2,value1)', '~vote(node2,value2)']
381     : -----0------0--00------1
381     : ['vote(node2,value2)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value1)']
382     : ----0-------0--0-0----1-
382     : ['vote(node2,value1)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value2)']
383     : ---0--------0---00---1--
383     : ['vote(node2,value0)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~vote(node0,value1)', '~vote(node0,value2)']
384     : --------0----0----00---1
384     : ['vote(node2,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value1)']
385     : -------0-----0----0-0-1-
385     : ['vote(node2,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value2)']
386     : ------0------0-----001--
386     : ['vote(node2,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~vote(node1,value1)', '~vote(node1,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 18
num_suborbits: 1
387 (*) : --0--1-------0----00----
387     : ['chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node0_node1,value2)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value1)']
388     : -0--1--------0----0-0---
388     : ['chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node0_node1,value1)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value2)']
389     : 0--1---------0-----00---
389     : ['chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node0_node1,value0)', '~didNotVote(node1)', '~vote(node1,value1)', '~vote(node1,value2)']
390     : --1--0--------0------00-
390     : ['chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value1)']
391     : -1--0---------0------0-0
391     : ['chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value2)']
392     : 1--0----------0-------00
392     : ['chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node2)', '~vote(node2,value1)', '~vote(node2,value2)']
393     : --0-----1---0--00-------
393     : ['chosenAt(quorum__node1_node2,value2)', '~chosenAt(quorum__node0_node1,value2)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value1)']
394     : -0-----1----0--0-0------
394     : ['chosenAt(quorum__node1_node2,value1)', '~chosenAt(quorum__node0_node1,value1)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value2)']
395     : 0-----1-----0---00------
395     : ['chosenAt(quorum__node1_node2,value0)', '~chosenAt(quorum__node0_node1,value0)', '~didNotVote(node0)', '~vote(node0,value1)', '~vote(node0,value2)']
396     : --1-----0-----0------00-
396     : ['chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value1)']
397     : -1-----0------0------0-0
397     : ['chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value2)']
398     : 1-----0-------0-------00
398     : ['chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node2)', '~vote(node2,value1)', '~vote(node2,value2)']
399     : -----0--1---0--00-------
399     : ['chosenAt(quorum__node1_node2,value2)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value1)']
400     : ----0--1----0--0-0------
400     : ['chosenAt(quorum__node1_node2,value1)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value2)']
401     : ---0--1-----0---00------
401     : ['chosenAt(quorum__node1_node2,value0)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~vote(node0,value1)', '~vote(node0,value2)']
402     : -----1--0----0----00----
402     : ['chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value1)']
403     : ----1--0-----0----0-0---
403     : ['chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value2)']
404     : ---1--0------0-----00---
404     : ['chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~vote(node1,value1)', '~vote(node1,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 18
num_suborbits: 1
405 (*) : 0-------0----0-1---0---1
405     : ['vote(node0,value0)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~vote(node1,value1)']
406     : 0------0-----0-1----0-1-
406     : ['vote(node0,value0)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~vote(node1,value2)']
407     : -0------0----0--1-0----1
407     : ['vote(node0,value1)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~vote(node1,value0)']
408     : -0----0------0--1---01--
408     : ['vote(node0,value1)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~vote(node1,value2)']
409     : --0----0-----0---10---1-
409     : ['vote(node0,value2)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~vote(node1,value0)']
410     : --0---0------0---1-0-1--
410     : ['vote(node0,value2)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~vote(node1,value1)']
411     : ---0----0-----01----1-0-
411     : ['vote(node0,value0)', 'vote(node1,value2)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node2)', '~vote(node2,value1)']
412     : ---0---0------01---1---0
412     : ['vote(node0,value0)', 'vote(node1,value1)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node2)', '~vote(node2,value2)']
413     : ----0---0-----0-1---10--
413     : ['vote(node0,value1)', 'vote(node1,value2)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node2)', '~vote(node2,value0)']
414     : ----0-0-------0-1-1----0
414     : ['vote(node0,value1)', 'vote(node1,value0)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node2)', '~vote(node2,value2)']
415     : -----0-0------0--1-1-0--
415     : ['vote(node0,value2)', 'vote(node1,value1)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node2)', '~vote(node2,value0)']
416     : -----00-------0--11---0-
416     : ['vote(node0,value2)', 'vote(node1,value0)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node2)', '~vote(node2,value1)']
417     : 0----0------0---0-1----1
417     : ['vote(node1,value0)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~vote(node0,value1)']
418     : 0---0-------0----01---1-
418     : ['vote(node1,value0)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~vote(node0,value2)']
419     : -0---0------0--0---1---1
419     : ['vote(node1,value1)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~vote(node0,value0)']
420     : -0-0--------0----0-1-1--
420     : ['vote(node1,value1)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~vote(node0,value2)']
421     : --0-0-------0--0----1-1-
421     : ['vote(node1,value2)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~vote(node0,value0)']
422     : --00--------0---0---11--
422     : ['vote(node1,value2)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~vote(node0,value1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
423 (*) : -----0--0--1--0------00-
423     : ['decision(value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value1)']
424     : ----0--0--1---0------0-0
424     : ['decision(value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value2)']
425     : ---0--0--1----0-------00
425     : ['decision(value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node2)', '~vote(node2,value1)', '~vote(node2,value2)']
426     : --0-----0--1-0----00----
426     : ['decision(value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value1)']
427     : -0-----0--1--0----0-0---
427     : ['decision(value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value2)']
428     : 0-----0--1---0-----00---
428     : ['decision(value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~vote(node1,value1)', '~vote(node1,value2)']
429     : --0--0-----10--00-------
429     : ['decision(value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value1)']
430     : -0--0-----1-0--0-0------
430     : ['decision(value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value2)']
431     : 0--0-----1--0---00------
431     : ['decision(value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~vote(node0,value1)', '~vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
432 (*) : ------0------00----00-00
432     : ['~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value1)', '~vote(node1,value2)', '~vote(node2,value1)', '~vote(node2,value2)']
433     : -------0-----00---0-00-0
433     : ['~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value0)', '~vote(node1,value2)', '~vote(node2,value0)', '~vote(node2,value2)']
434     : --------0----00---00-00-
434     : ['~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value0)', '~vote(node1,value1)', '~vote(node2,value0)', '~vote(node2,value1)']
435     : ---0--------0-0-00----00
435     : ['~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node0,value2)', '~vote(node2,value1)', '~vote(node2,value2)']
436     : ----0-------0-00-0---0-0
436     : ['~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value2)', '~vote(node2,value0)', '~vote(node2,value2)']
437     : -----0------0-000----00-
437     : ['~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node2,value0)', '~vote(node2,value1)']
438     : 0-----------00--00-00---
438     : ['~chosenAt(quorum__node0_node1,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value1)', '~vote(node0,value2)', '~vote(node1,value1)', '~vote(node1,value2)']
439     : -0----------00-0-00-0---
439     : ['~chosenAt(quorum__node0_node1,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value0)', '~vote(node0,value2)', '~vote(node1,value0)', '~vote(node1,value2)']
440     : --0---------00-00-00----
440     : ['~chosenAt(quorum__node0_node1,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node1,value0)', '~vote(node1,value1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 18
num_suborbits: 1
441 (*) : -0-0---0----0-0--0-1---0
441     : ['vote(node1,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value2)', '~vote(node2,value2)']
442     : --00----0---0-0-0---1-0-
442     : ['vote(node1,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node2,value1)']
443     : 0---0-0-----0-0--01----0
443     : ['vote(node1,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value2)', '~vote(node2,value2)']
444     : --0-0---0---0-00----10--
444     : ['vote(node1,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node2,value0)']
445     : 0----00-----0-0-0-1---0-
445     : ['vote(node1,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node2,value1)']
446     : -0---0-0----0-00---1-0--
446     : ['vote(node1,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node2,value0)']
447     : 0---0--0----00---0--0-1-
447     : ['vote(node2,value1)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value2)', '~vote(node1,value2)']
448     : 0----0--0---00--0--0---1
448     : ['vote(node2,value2)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value1)', '~vote(node1,value1)']
449     : -0-0--0-----00---0--01--
449     : ['vote(node2,value0)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value2)', '~vote(node1,value2)']
450     : -0---0--0---00-0--0----1
450     : ['vote(node2,value2)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value0)', '~vote(node1,value0)']
451     : --00--0-----00--0--0-1--
451     : ['vote(node2,value0)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value1)', '~vote(node1,value1)']
452     : --0-0--0----00-0--0---1-
452     : ['vote(node2,value1)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value0)', '~vote(node1,value0)']
453     : -0--0-0------00-1---0--0
453     : ['vote(node0,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value2)', '~vote(node2,value2)']
454     : --0--00------00--1-0--0-
454     : ['vote(node0,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value1)', '~vote(node2,value1)']
455     : 0--0---0-----001----0--0
455     : ['vote(node0,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value2)', '~vote(node2,value2)']
456     : --0--0-0-----00--10--0--
456     : ['vote(node0,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value0)', '~vote(node2,value0)']
457     : 0--0----0----001---0--0-
457     : ['vote(node0,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value1)', '~vote(node2,value1)']
458     : -0--0---0----00-1-0--0--
458     : ['vote(node0,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value0)', '~vote(node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
459 (*) : ---0---0----0-0-00-1---0
459     : ['vote(node1,value1)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node0,value2)', '~vote(node2,value2)']
460     : ---0----0---0-0-00--1-0-
460     : ['vote(node1,value2)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node0,value2)', '~vote(node2,value1)']
461     : ----0-0-----0-00-01----0
461     : ['vote(node1,value0)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value2)', '~vote(node2,value2)']
462     : ----0---0---0-00-0--10--
462     : ['vote(node1,value2)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value2)', '~vote(node2,value0)']
463     : -----00-----0-000-1---0-
463     : ['vote(node1,value0)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node2,value1)']
464     : -----0-0----0-000--1-0--
464     : ['vote(node1,value1)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node2,value0)']
465     : 0------0----00--00--0-1-
465     : ['vote(node2,value1)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value1)', '~vote(node0,value2)', '~vote(node1,value2)']
466     : 0-------0---00--00-0---1
466     : ['vote(node2,value2)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value1)', '~vote(node0,value2)', '~vote(node1,value1)']
467     : -0----0-----00-0-0--01--
467     : ['vote(node2,value0)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value0)', '~vote(node0,value2)', '~vote(node1,value2)']
468     : -0------0---00-0-00----1
468     : ['vote(node2,value2)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value0)', '~vote(node0,value2)', '~vote(node1,value0)']
469     : --0---0-----00-00--0-1--
469     : ['vote(node2,value0)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node1,value1)']
470     : --0----0----00-00-0---1-
470     : ['vote(node2,value1)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node1,value0)']
471     : ----0-0------00-1--00--0
471     : ['vote(node0,value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value1)', '~vote(node1,value2)', '~vote(node2,value2)']
472     : -----00------00--1-00-0-
472     : ['vote(node0,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value1)', '~vote(node1,value2)', '~vote(node2,value1)']
473     : ---0---0-----001--0-0--0
473     : ['vote(node0,value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value0)', '~vote(node1,value2)', '~vote(node2,value2)']
474     : -----0-0-----00--10-00--
474     : ['vote(node0,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value0)', '~vote(node1,value2)', '~vote(node2,value0)']
475     : ---0----0----001--00--0-
475     : ['vote(node0,value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value0)', '~vote(node1,value1)', '~vote(node2,value1)']
476     : ----0---0----00-1-00-0--
476     : ['vote(node0,value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value0)', '~vote(node1,value1)', '~vote(node2,value0)']
477     : 0---0-------00---0-00-1-
477     : ['vote(node2,value1)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value2)', '~vote(node1,value1)', '~vote(node1,value2)']
478     : 0----0------00--0--00--1
478     : ['vote(node2,value2)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node1,value2)']
479     : -0-0--------00---00-01--
479     : ['vote(node2,value0)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value2)', '~vote(node1,value0)', '~vote(node1,value2)']
480     : -0---0------00-0--0-0--1
480     : ['vote(node2,value2)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node1,value2)']
481     : --00--------00--0-00-1--
481     : ['vote(node2,value0)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value1)', '~vote(node1,value0)', '~vote(node1,value1)']
482     : --0-0-------00-0--00--1-
482     : ['vote(node2,value1)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node1,value1)']
483     : -0----0------00-1---0-00
483     : ['vote(node0,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value2)', '~vote(node2,value1)', '~vote(node2,value2)']
484     : --0---0------00--1-0--00
484     : ['vote(node0,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value1)', '~vote(node2,value1)', '~vote(node2,value2)']
485     : 0------0-----001----00-0
485     : ['vote(node0,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value2)', '~vote(node2,value0)', '~vote(node2,value2)']
486     : --0----0-----00--10--0-0
486     : ['vote(node0,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value0)', '~vote(node2,value0)', '~vote(node2,value2)']
487     : 0-------0----001---0-00-
487     : ['vote(node0,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value1)', '~vote(node2,value0)', '~vote(node2,value1)']
488     : -0------0----00-1-0--00-
488     : ['vote(node0,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node1,value0)', '~vote(node2,value0)', '~vote(node2,value1)']
489     : -0-0--------0-0--0-1--00
489     : ['vote(node1,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value2)', '~vote(node2,value1)', '~vote(node2,value2)']
490     : --00--------0-0-0---1-00
490     : ['vote(node1,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node2,value1)', '~vote(node2,value2)']
491     : 0---0-------0-0--01--0-0
491     : ['vote(node1,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value2)', '~vote(node2,value0)', '~vote(node2,value2)']
492     : --0-0-------0-00----10-0
492     : ['vote(node1,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node2,value0)', '~vote(node2,value2)']
493     : 0----0------0-0-0-1--00-
493     : ['vote(node1,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node2,value0)', '~vote(node2,value1)']
494     : -0---0------0-00---1-00-
494     : ['vote(node1,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node2,value0)', '~vote(node2,value1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
495 (*) : 0---0-0-----000--0-00--0
495     : ['~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value2)', '~vote(node1,value1)', '~vote(node1,value2)', '~vote(node2,value2)']
496     : 0----00-----000-0--00-0-
496     : ['~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node1,value2)', '~vote(node2,value1)']
497     : -0-0---0----000--00-0--0
497     : ['~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value2)', '~vote(node1,value0)', '~vote(node1,value2)', '~vote(node2,value2)']
498     : -0---0-0----0000--0-00--
498     : ['~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node1,value2)', '~vote(node2,value0)']
499     : --00----0---000-0-00--0-
499     : ['~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node1,value0)', '~vote(node1,value1)', '~vote(node2,value1)']
500     : --0-0---0---0000--00-0--
500     : ['~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node1,value1)', '~vote(node2,value0)']
501     : -0-0--0-----000--0--0-00
501     : ['~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node2,value1)', '~vote(node2,value2)']
502     : --00--0-----000-0--0--00
502     : ['~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~vote(node2,value2)']
503     : 0---0--0----000--0--00-0
503     : ['~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node2,value0)', '~vote(node2,value2)']
504     : --0-0--0----0000--0--0-0
504     : ['~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~vote(node2,value2)']
505     : 0----0--0---000-0--0-00-
505     : ['~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node2,value0)', '~vote(node2,value1)']
506     : -0---0--0---0000--0--00-
506     : ['~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~vote(node2,value1)']
507     : 0--0---0----000-00--0--0
507     : ['~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node2,value2)']
508     : 0--0----0---000-00-0--0-
508     : ['~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node0,value2)', '~vote(node1,value1)', '~vote(node2,value1)']
509     : -0--0-0-----0000-0--0--0
509     : ['~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node2,value2)']
510     : -0--0---0---0000-00--0--
510     : ['~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value2)', '~vote(node1,value0)', '~vote(node2,value0)']
511     : --0--00-----00000--0--0-
511     : ['~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node2,value1)']
512     : --0--0-0----00000-0--0--
512     : ['~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node1,value0)', '~vote(node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
513 (*) : ---0----0---000-0000--0-
513     : ['~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node0,value2)', '~vote(node1,value0)', '~vote(node1,value1)', '~vote(node2,value1)']
514     : ---0---0----000-000-0--0
514     : ['~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node0,value2)', '~vote(node1,value0)', '~vote(node1,value2)', '~vote(node2,value2)']
515     : ----0---0---0000-000-0--
515     : ['~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value2)', '~vote(node1,value0)', '~vote(node1,value1)', '~vote(node2,value0)']
516     : ----0-0-----0000-0-00--0
516     : ['~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value2)', '~vote(node1,value1)', '~vote(node1,value2)', '~vote(node2,value2)']
517     : -----0-0----00000-0-00--
517     : ['~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node1,value0)', '~vote(node1,value2)', '~vote(node2,value0)']
518     : -----00-----00000--00-0-
518     : ['~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node1,value2)', '~vote(node2,value1)']
519     : 0-------0---000-00-0-00-
519     : ['~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node0,value2)', '~vote(node1,value1)', '~vote(node2,value0)', '~vote(node2,value1)']
520     : 0------0----000-00--00-0
520     : ['~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node2,value0)', '~vote(node2,value2)']
521     : -0------0---0000-00--00-
521     : ['~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value2)', '~vote(node1,value0)', '~vote(node2,value0)', '~vote(node2,value1)']
522     : -0----0-----0000-0--0-00
522     : ['~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node2,value1)', '~vote(node2,value2)']
523     : --0----0----00000-0--0-0
523     : ['~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node1,value0)', '~vote(node2,value0)', '~vote(node2,value2)']
524     : --0---0-----00000--0--00
524     : ['~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~vote(node2,value2)']
525     : 0----0------000-0--0000-
525     : ['~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node1,value2)', '~vote(node2,value0)', '~vote(node2,value1)']
526     : 0---0-------000--0-000-0
526     : ['~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value2)', '~vote(node1,value1)', '~vote(node1,value2)', '~vote(node2,value0)', '~vote(node2,value2)']
527     : -0---0------0000--0-000-
527     : ['~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node1,value2)', '~vote(node2,value0)', '~vote(node2,value1)']
528     : -0-0--------000--00-0-00
528     : ['~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value2)', '~vote(node1,value0)', '~vote(node1,value2)', '~vote(node2,value1)', '~vote(node2,value2)']
529     : --0-0-------0000--00-0-0
529     : ['~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node1,value1)', '~vote(node2,value0)', '~vote(node2,value2)']
530     : --00--------000-0-00--00
530     : ['~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node1,value0)', '~vote(node1,value1)', '~vote(node2,value1)', '~vote(node2,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 3
num_suborbits: 1
531 (*) : 0-00-00-0---000-0--0--0-
531     : ['~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value0)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node2,value1)']
532     : 00-00-00----000--0--0--0
532     : ['~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value0)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node2,value2)']
533     : -00-00-00---0000--0--0--
533     : ['~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value1)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node0)', '~didNotVote(node1)', '~didNotVote(node2)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 33

[PRIME NOTE]: number of orbits before merging: 35

[PRIME NOTE]: number of primes: 534

[QRM NOTE]: Time elapsed since start: 7.752 seconds

[QRM NOTE]: Time elapsed since last: 0.209 seconds

[QRM NOTE]: Peak memory: 1931130 bytes


====================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/toy_consensus.ivy: node=3,value=3]

====================================================================================================

definition primes: {32, 2, 3, 7, 8, 9, 18, 20, 23, 24, 25, 27, 28, 29, 30, 31}


New level: 0
 pending : [0, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]
 solution : []


Before reduction : 
 pending  : [0, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]
 solution : []

Essensial at level 0 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, 131072), (5, 2147483648), (6, 0), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, 268435456), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, 536870912), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 0 : {1, 6}

After reduction : 
 pending  : [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]
 solution : [0]


Before reduction : 
 pending  : [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]
 solution : [0]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, 131072), (5, 2147483648), (6, 0), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, 268435456), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, 536870912), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 2147483648), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, 268435456), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, 536870912), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]
 solution : [0]

[QRM NOTE]: Time elapsed since start: 7.833 seconds

[QRM NOTE]: Time elapsed since last: 0.082 seconds

[QRM NOTE]: Peak memory: 857424 bytes


========================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/toy_consensus.ivy: node=3,value=3]

========================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ---------------1-1------
0     : ['vote(node0,value0)', 'vote(node0,value2)']
1     : ---------------11-------
1     : ['vote(node0,value0)', 'vote(node0,value1)']
2     : ----------------11------
2     : ['vote(node0,value1)', 'vote(node0,value2)']
3     : ------------------1-1---
3     : ['vote(node1,value0)', 'vote(node1,value2)']
4     : ------------------11----
4     : ['vote(node1,value0)', 'vote(node1,value1)']
5     : -------------------11---
5     : ['vote(node1,value1)', 'vote(node1,value2)']
6     : ---------------------1-1
6     : ['vote(node2,value0)', 'vote(node2,value2)']
7     : ---------------------11-
7     : ['vote(node2,value0)', 'vote(node2,value1)']
8     : ----------------------11
8     : ['vote(node2,value1)', 'vote(node2,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['vote(node0,value0)', 'vote(node0,value2)']

sign_func_name2args: {'0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$vote$0$0, node$0$vote$0$1], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$1]}

sig2const: {'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$0$vote$1$1': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$vote$0$0; node$0$vote$0$1], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$vote$1$0, value$0$vote$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$vote$0$0; node$0$vote$0$1, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$vote$1$0 | value$0$vote$1$1}

part_sig: ('node$0$vote$0$0; node$0$vote$0$1', 'value$0$vote$1$0 | value$0$vote$1$1')


---------- SigGenerator ----------

terms:  ['vote(node0,value0)', 'vote(node0,value2)']

func_name2symbol:  {'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')))}

sign_func_name2count:  {'0$vote': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$vote$0$0; node$0$vote$0$1], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$vote$1$0, value$0$vote$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$vote$0$0; node$0$vote$0$1, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$vote$1$0 | value$0$vote$1$1}

	sort: node

	identical_classes: {'node$0$vote$0; node$0$vote$0': [node$0$vote$0$0; node$0$vote$0$1]}

	identical_single_classes: {'node$0$vote$0; node$0$vote$0': node$0$vote$0$0; node$0$vote$0$1}

	identical_multi_classes: {}

	sort: value

	identical_classes: {'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall

quantifier mode: value: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['vote(NODE0,VALUE0)', 'vote(NODE0,VALUE1)']


---------- QFormula: get_qclause ----------

qclause: forall VALUE0,VALUE1,NODE0. ~vote(NODE0,VALUE0) | ~vote(NODE0,VALUE1) | VALUE0 = VALUE1


=== Prime Orbit 4 =====================
size : 18
num_suborbits: 1
72 (*) : --------11--------------
72     : ['chosenAt(quorum__node1_node2,value2)', 'decision(value0)']
73     : -------1-1--------------
73     : ['chosenAt(quorum__node1_node2,value1)', 'decision(value0)']
74     : --------1-1-------------
74     : ['chosenAt(quorum__node1_node2,value2)', 'decision(value1)']
75     : ------1---1-------------
75     : ['chosenAt(quorum__node1_node2,value0)', 'decision(value1)']
76     : -------1---1------------
76     : ['chosenAt(quorum__node1_node2,value1)', 'decision(value2)']
77     : ------1----1------------
77     : ['chosenAt(quorum__node1_node2,value0)', 'decision(value2)']
78     : -----1---1--------------
78     : ['chosenAt(quorum__node0_node2,value2)', 'decision(value0)']
79     : ----1----1--------------
79     : ['chosenAt(quorum__node0_node2,value1)', 'decision(value0)']
80     : -----1----1-------------
80     : ['chosenAt(quorum__node0_node2,value2)', 'decision(value1)']
81     : ---1------1-------------
81     : ['chosenAt(quorum__node0_node2,value0)', 'decision(value1)']
82     : ----1------1------------
82     : ['chosenAt(quorum__node0_node2,value1)', 'decision(value2)']
83     : ---1-------1------------
83     : ['chosenAt(quorum__node0_node2,value0)', 'decision(value2)']
84     : --1------1--------------
84     : ['chosenAt(quorum__node0_node1,value2)', 'decision(value0)']
85     : -1-------1--------------
85     : ['chosenAt(quorum__node0_node1,value1)', 'decision(value0)']
86     : --1-------1-------------
86     : ['chosenAt(quorum__node0_node1,value2)', 'decision(value1)']
87     : 1---------1-------------
87     : ['chosenAt(quorum__node0_node1,value0)', 'decision(value1)']
88     : -1---------1------------
88     : ['chosenAt(quorum__node0_node1,value1)', 'decision(value2)']
89     : 1----------1------------
89     : ['chosenAt(quorum__node0_node1,value0)', 'decision(value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__node1_node2,value2)', 'decision(value0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$decision': [(Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)]}

const2sigs: {Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$0$chosenAt$0$0], Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$chosenAt$1$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decision$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$0$chosenAt$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'value$0$decision$0$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$0$chosenAt$0$0], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$chosenAt$1$0, value$0$decision$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$0$chosenAt$0$0, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$chosenAt$1$0 | value$0$decision$0$0}

part_sig: ('quorum$0$chosenAt$0$0', 'value$0$chosenAt$1$0 | value$0$decision$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__node1_node2,value2)', 'decision(value0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$decision': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$0$chosenAt$0$0], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$chosenAt$1$0, value$0$decision$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$0$chosenAt$0$0, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$chosenAt$1$0 | value$0$decision$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: value

	identical_classes: {'value$0$chosenAt$1': [value$0$chosenAt$1$0], 'value$0$decision$0': [value$0$decision$0$0]}

	identical_single_classes: {'value$0$chosenAt$1': value$0$chosenAt$1$0, 'value$0$decision$0': value$0$decision$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: value: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$decision': [[Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['decision(VALUE1)', 'chosenAt(QUORUM0,VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,VALUE0,VALUE1. ~decision(VALUE1) | ~chosenAt(QUORUM0,VALUE0) | VALUE0 = VALUE1


=== Prime Orbit 5 =====================
size : 3
num_suborbits: 1
90 (*) : ---------1-1------------
90     : ['decision(value0)', 'decision(value2)']
91     : ---------11-------------
91     : ['decision(value0)', 'decision(value1)']
92     : ----------11------------
92     : ['decision(value1)', 'decision(value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decision(value0)', 'decision(value2)']

sign_func_name2args: {'0$decision': [(Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))),), (Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)]}

const2sigs: {Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decision$0$0], Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decision$0$1]}

sig2const: {'value$0$decision$0$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'value$0$decision$0$1': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0, value$0$decision$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0 | value$0$decision$0$1}

part_sig: ('value$0$decision$0$0 | value$0$decision$0$1',)


---------- SigGenerator ----------

terms:  ['decision(value0)', 'decision(value2)']

func_name2symbol:  {'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),)}

sign_func_name2count:  {'0$decision': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0, value$0$decision$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0 | value$0$decision$0$1}

	sort: value

	identical_classes: {'value$0$decision$0': [value$0$decision$0$0, value$0$decision$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'value$0$decision$0': [value$0$decision$0$0, value$0$decision$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decision': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['decision(VALUE1)', 'decision(VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall VALUE0,VALUE1. ~decision(VALUE1) | ~decision(VALUE0) | VALUE0 = VALUE1


=== Prime Orbit 10 =====================
size : 36
num_suborbits: 2
165 (*) : -----------1-------1-1--
165     : ['decision(value2)', 'vote(node1,value1)', 'vote(node2,value0)']
166     : ----------1---------11--
166     : ['decision(value1)', 'vote(node1,value2)', 'vote(node2,value0)']
167     : -----------1------1---1-
167     : ['decision(value2)', 'vote(node1,value0)', 'vote(node2,value1)']
168     : ---------1----------1-1-
168     : ['decision(value0)', 'vote(node1,value2)', 'vote(node2,value1)']
169     : ----------1-------1----1
169     : ['decision(value1)', 'vote(node1,value0)', 'vote(node2,value2)']
170     : ---------1---------1---1
170     : ['decision(value0)', 'vote(node1,value1)', 'vote(node2,value2)']
171     : -----------1----1----1--
171     : ['decision(value2)', 'vote(node0,value1)', 'vote(node2,value0)']
172     : ----------1------1---1--
172     : ['decision(value1)', 'vote(node0,value2)', 'vote(node2,value0)']
173     : -----------1---1------1-
173     : ['decision(value2)', 'vote(node0,value0)', 'vote(node2,value1)']
174     : ---------1-------1----1-
174     : ['decision(value0)', 'vote(node0,value2)', 'vote(node2,value1)']
175     : ----------1----1-------1
175     : ['decision(value1)', 'vote(node0,value0)', 'vote(node2,value2)']
176     : ---------1------1------1
176     : ['decision(value0)', 'vote(node0,value1)', 'vote(node2,value2)']
177     : -----------1----1-1-----
177     : ['decision(value2)', 'vote(node0,value1)', 'vote(node1,value0)']
178     : ----------1------11-----
178     : ['decision(value1)', 'vote(node0,value2)', 'vote(node1,value0)']
179     : -----------1---1---1----
179     : ['decision(value2)', 'vote(node0,value0)', 'vote(node1,value1)']
180     : ---------1-------1-1----
180     : ['decision(value0)', 'vote(node0,value2)', 'vote(node1,value1)']
181     : ----------1----1----1---
181     : ['decision(value1)', 'vote(node0,value0)', 'vote(node1,value2)']
182     : ---------1------1---1---
182     : ['decision(value0)', 'vote(node0,value1)', 'vote(node1,value2)']
237 (*) : -----------1-------1--1-
237     : ['decision(value2)', 'vote(node1,value1)', 'vote(node2,value1)']
238     : ----------1---------1--1
238     : ['decision(value1)', 'vote(node1,value2)', 'vote(node2,value2)']
239     : -----------1------1--1--
239     : ['decision(value2)', 'vote(node1,value0)', 'vote(node2,value0)']
240     : ---------1----------1--1
240     : ['decision(value0)', 'vote(node1,value2)', 'vote(node2,value2)']
241     : ----------1-------1--1--
241     : ['decision(value1)', 'vote(node1,value0)', 'vote(node2,value0)']
242     : ---------1---------1--1-
242     : ['decision(value0)', 'vote(node1,value1)', 'vote(node2,value1)']
243     : -----------1----1-----1-
243     : ['decision(value2)', 'vote(node0,value1)', 'vote(node2,value1)']
244     : ----------1------1-----1
244     : ['decision(value1)', 'vote(node0,value2)', 'vote(node2,value2)']
245     : -----------1---1-----1--
245     : ['decision(value2)', 'vote(node0,value0)', 'vote(node2,value0)']
246     : ---------1-------1-----1
246     : ['decision(value0)', 'vote(node0,value2)', 'vote(node2,value2)']
247     : ----------1----1-----1--
247     : ['decision(value1)', 'vote(node0,value0)', 'vote(node2,value0)']
248     : ---------1------1-----1-
248     : ['decision(value0)', 'vote(node0,value1)', 'vote(node2,value1)']
249     : -----------1----1--1----
249     : ['decision(value2)', 'vote(node0,value1)', 'vote(node1,value1)']
250     : ----------1------1--1---
250     : ['decision(value1)', 'vote(node0,value2)', 'vote(node1,value2)']
251     : -----------1---1--1-----
251     : ['decision(value2)', 'vote(node0,value0)', 'vote(node1,value0)']
252     : ---------1-------1--1---
252     : ['decision(value0)', 'vote(node0,value2)', 'vote(node1,value2)']
253     : ----------1----1--1-----
253     : ['decision(value1)', 'vote(node0,value0)', 'vote(node1,value0)']
254     : ---------1------1--1----
254     : ['decision(value0)', 'vote(node0,value1)', 'vote(node1,value1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decision(value2)', 'vote(node1,value1)', 'vote(node2,value0)']

sign_func_name2args: {'0$decision': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decision$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$vote$0$0], Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$vote$0$1], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$1]}

sig2const: {'value$0$decision$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$0$vote$1$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$0$vote$1$1': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0, value$0$vote$1$0, value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$vote$0$0, node$0$vote$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0 | value$0$vote$1$0 | value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$vote$0$0 | node$0$vote$0$1}

part_sig: ('node$0$vote$0$0 | node$0$vote$0$1', 'value$0$decision$0$0 | value$0$vote$1$0 | value$0$vote$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decision(value2)', 'vote(node1,value1)', 'vote(node2,value1)']

sign_func_name2args: {'0$decision': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decision$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$vote$0$0], Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0, value$0$vote$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$vote$0$1]}

sig2const: {'value$0$decision$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$0$vote$1$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$0$vote$1$1': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0, value$0$vote$1$0; value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$vote$0$0, node$0$vote$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0 | value$0$vote$1$0; value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$vote$0$0 | node$0$vote$0$1}

part_sig: ('node$0$vote$0$0 | node$0$vote$0$1', 'value$0$decision$0$0 | value$0$vote$1$0; value$0$vote$1$1')


---------- SigGenerator ----------

terms:  ['decision(value2)', 'vote(node1,value1)', 'vote(node2,value0)']

func_name2symbol:  {'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')))}

sign_func_name2count:  {'0$decision': 1, '0$vote': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0, value$0$vote$1$0, value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$vote$0$0, node$0$vote$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0 | value$0$vote$1$0 | value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$vote$0$0 | node$0$vote$0$1}

	sort: value

	identical_classes: {'value$0$decision$0': [value$0$decision$0$0], 'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}

	identical_single_classes: {'value$0$decision$0': value$0$decision$0$0}

	identical_multi_classes: {'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}

	sort: node

	identical_classes: {'node$0$vote$0': [node$0$vote$0$0, node$0$vote$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$vote$0': [node$0$vote$0$0, node$0$vote$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('VALUE2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decision': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE2', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['decision(VALUE0)', 'vote(NODE1,VALUE2)', 'vote(NODE0,VALUE1)']


---------- QFormula: get_qclause ----------

qclause: forall VALUE0,VALUE2,NODE1,VALUE1,NODE0. ~decision(VALUE0) | ~vote(NODE1,VALUE2) | ~vote(NODE0,VALUE1) | (VALUE0 = VALUE1 | VALUE0 = VALUE2 | NODE0 = NODE1)


=== Prime Orbit 11 =====================
size : 36
num_suborbits: 1
183 (*) : -----------1-------1---0
183     : ['decision(value2)', 'vote(node1,value1)', '~vote(node2,value2)']
184     : ----------1---------1-0-
184     : ['decision(value1)', 'vote(node1,value2)', '~vote(node2,value1)']
185     : -----------1------1----0
185     : ['decision(value2)', 'vote(node1,value0)', '~vote(node2,value2)']
186     : ---------1----------10--
186     : ['decision(value0)', 'vote(node1,value2)', '~vote(node2,value0)']
187     : ----------1-------1---0-
187     : ['decision(value1)', 'vote(node1,value0)', '~vote(node2,value1)']
188     : ---------1---------1-0--
188     : ['decision(value0)', 'vote(node1,value1)', '~vote(node2,value0)']
189     : -----------1--------0-1-
189     : ['decision(value2)', 'vote(node2,value1)', '~vote(node1,value2)']
190     : ----------1--------0---1
190     : ['decision(value1)', 'vote(node2,value2)', '~vote(node1,value1)']
191     : -----------1--------01--
191     : ['decision(value2)', 'vote(node2,value0)', '~vote(node1,value2)']
192     : ---------1--------0----1
192     : ['decision(value0)', 'vote(node2,value2)', '~vote(node1,value0)']
193     : ----------1--------0-1--
193     : ['decision(value1)', 'vote(node2,value0)', '~vote(node1,value1)']
194     : ---------1--------0---1-
194     : ['decision(value0)', 'vote(node2,value1)', '~vote(node1,value0)']
195     : -----------1----1------0
195     : ['decision(value2)', 'vote(node0,value1)', '~vote(node2,value2)']
196     : ----------1------1----0-
196     : ['decision(value1)', 'vote(node0,value2)', '~vote(node2,value1)']
197     : -----------1---1-------0
197     : ['decision(value2)', 'vote(node0,value0)', '~vote(node2,value2)']
198     : ---------1-------1---0--
198     : ['decision(value0)', 'vote(node0,value2)', '~vote(node2,value0)']
199     : ----------1----1------0-
199     : ['decision(value1)', 'vote(node0,value0)', '~vote(node2,value1)']
200     : ---------1------1----0--
200     : ['decision(value0)', 'vote(node0,value1)', '~vote(node2,value0)']
201     : -----------1-----0----1-
201     : ['decision(value2)', 'vote(node2,value1)', '~vote(node0,value2)']
202     : ----------1-----0------1
202     : ['decision(value1)', 'vote(node2,value2)', '~vote(node0,value1)']
203     : -----------1-----0---1--
203     : ['decision(value2)', 'vote(node2,value0)', '~vote(node0,value2)']
204     : ---------1-----0-------1
204     : ['decision(value0)', 'vote(node2,value2)', '~vote(node0,value0)']
205     : ----------1-----0----1--
205     : ['decision(value1)', 'vote(node2,value0)', '~vote(node0,value1)']
206     : ---------1-----0------1-
206     : ['decision(value0)', 'vote(node2,value1)', '~vote(node0,value0)']
207     : -----------1----1---0---
207     : ['decision(value2)', 'vote(node0,value1)', '~vote(node1,value2)']
208     : ----------1------1-0----
208     : ['decision(value1)', 'vote(node0,value2)', '~vote(node1,value1)']
209     : -----------1---1----0---
209     : ['decision(value2)', 'vote(node0,value0)', '~vote(node1,value2)']
210     : ---------1-------10-----
210     : ['decision(value0)', 'vote(node0,value2)', '~vote(node1,value0)']
211     : ----------1----1---0----
211     : ['decision(value1)', 'vote(node0,value0)', '~vote(node1,value1)']
212     : ---------1------1-0-----
212     : ['decision(value0)', 'vote(node0,value1)', '~vote(node1,value0)']
213     : -----------1-----0-1----
213     : ['decision(value2)', 'vote(node1,value1)', '~vote(node0,value2)']
214     : ----------1-----0---1---
214     : ['decision(value1)', 'vote(node1,value2)', '~vote(node0,value1)']
215     : -----------1-----01-----
215     : ['decision(value2)', 'vote(node1,value0)', '~vote(node0,value2)']
216     : ---------1-----0----1---
216     : ['decision(value0)', 'vote(node1,value2)', '~vote(node0,value0)']
217     : ----------1-----0-1-----
217     : ['decision(value1)', 'vote(node1,value0)', '~vote(node0,value1)']
218     : ---------1-----0---1----
218     : ['decision(value0)', 'vote(node1,value1)', '~vote(node0,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decision(value2)', 'vote(node1,value1)', '~vote(node2,value2)']

sign_func_name2args: {'0$decision': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$vote': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decision$0$0, value$1$vote$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$vote$0$0], Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$vote$0$0]}

sig2const: {'value$0$decision$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$0$vote$1$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$1$vote$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$vote$1$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$vote$0$0, node$1$vote$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$vote$1$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$vote$0$0 | node$1$vote$0$0}

part_sig: ('node$0$vote$0$0 | node$1$vote$0$0', 'value$0$decision$0$0; value$1$vote$1$0 | value$0$vote$1$0')


---------- SigGenerator ----------

terms:  ['decision(value2)', 'vote(node1,value1)', '~vote(node2,value2)']

func_name2symbol:  {'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')))}

sign_func_name2count:  {'0$decision': 1, '0$vote': 1, '1$vote': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$vote$1$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$vote$0$0, node$1$vote$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$vote$1$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$vote$0$0 | node$1$vote$0$0}

	sort: value

	identical_classes: {'value$0$decision$0; value$1$vote$1': [value$0$decision$0$0; value$1$vote$1$0], 'value$0$vote$1': [value$0$vote$1$0]}

	identical_single_classes: {'value$0$decision$0; value$1$vote$1': value$0$decision$0$0; value$1$vote$1$0, 'value$0$vote$1': value$0$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$vote$0': [node$0$vote$0$0], 'node$1$vote$0': [node$1$vote$0$0]}

	identical_single_classes: {'node$0$vote$0': node$0$vote$0$0, 'node$1$vote$0': node$1$vote$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decision': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~vote(NODE1,VALUE0)', 'decision(VALUE0)', 'vote(NODE0,VALUE1)']


---------- QFormula: get_qclause ----------

qclause: forall VALUE0,VALUE1,NODE0,NODE1. vote(NODE1,VALUE0) | ~decision(VALUE0) | ~vote(NODE0,VALUE1) | (NODE0 = NODE1 | VALUE0 = VALUE1)


=== Prime Orbit 12 =====================
size : 18
num_suborbits: 1
219 (*) : -----0-----1-------1----
219     : ['decision(value2)', 'vote(node1,value1)', '~chosenAt(quorum__node0_node2,value2)']
220     : ----0-----1---------1---
220     : ['decision(value1)', 'vote(node1,value2)', '~chosenAt(quorum__node0_node2,value1)']
221     : -----0-----1------1-----
221     : ['decision(value2)', 'vote(node1,value0)', '~chosenAt(quorum__node0_node2,value2)']
222     : ---0-----1----------1---
222     : ['decision(value0)', 'vote(node1,value2)', '~chosenAt(quorum__node0_node2,value0)']
223     : ----0-----1-------1-----
223     : ['decision(value1)', 'vote(node1,value0)', '~chosenAt(quorum__node0_node2,value1)']
224     : ---0-----1---------1----
224     : ['decision(value0)', 'vote(node1,value1)', '~chosenAt(quorum__node0_node2,value0)']
225     : --0--------1----------1-
225     : ['decision(value2)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node1,value2)']
226     : -0--------1------------1
226     : ['decision(value1)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node1,value1)']
227     : --0--------1---------1--
227     : ['decision(value2)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node1,value2)']
228     : 0--------1-------------1
228     : ['decision(value0)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node1,value0)']
229     : -0--------1----------1--
229     : ['decision(value1)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node1,value1)']
230     : 0--------1------------1-
230     : ['decision(value0)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node1,value0)']
231     : --------0--1----1-------
231     : ['decision(value2)', 'vote(node0,value1)', '~chosenAt(quorum__node1_node2,value2)']
232     : -------0--1------1------
232     : ['decision(value1)', 'vote(node0,value2)', '~chosenAt(quorum__node1_node2,value1)']
233     : --------0--1---1--------
233     : ['decision(value2)', 'vote(node0,value0)', '~chosenAt(quorum__node1_node2,value2)']
234     : ------0--1-------1------
234     : ['decision(value0)', 'vote(node0,value2)', '~chosenAt(quorum__node1_node2,value0)']
235     : -------0--1----1--------
235     : ['decision(value1)', 'vote(node0,value0)', '~chosenAt(quorum__node1_node2,value1)']
236     : ------0--1------1-------
236     : ['decision(value0)', 'vote(node0,value1)', '~chosenAt(quorum__node1_node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__node0_node2,value2)', 'decision(value2)', 'vote(node1,value1)', '~member(node1,quorum__node0_node2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$decision': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$member': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))))]}

const2sigs: {Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$1$chosenAt$1$0, value$0$decision$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$vote$0$0, node$1$member$0$0], Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$1$chosenAt$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'value$0$decision$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$0$vote$1$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$member$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'quorum$1$member$1$0': Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$chosenAt$1$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$vote$0$0; node$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$chosenAt$1$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$vote$0$0; node$1$member$0$0}

part_sig: ('node$0$vote$0$0; node$1$member$0$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0', 'value$0$decision$0$0; value$1$chosenAt$1$0 | value$0$vote$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__node0_node2,value2)', 'decision(value2)', 'vote(node1,value1)', '~member(node1,quorum__node0_node2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$decision': 1, '0$vote': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$chosenAt$1$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$vote$0$0; node$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$chosenAt$1$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$vote$0$0; node$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: value

	identical_classes: {'value$0$decision$0; value$1$chosenAt$1': [value$0$decision$0$0; value$1$chosenAt$1$0], 'value$0$vote$1': [value$0$vote$1$0]}

	identical_single_classes: {'value$0$decision$0; value$1$chosenAt$1': value$0$decision$0$0; value$1$chosenAt$1$0, 'value$0$vote$1': value$0$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$vote$0; node$1$member$0': [node$0$vote$0$0; node$1$member$0$0]}

	identical_single_classes: {'node$0$vote$0; node$1$member$0': node$0$vote$0$0; node$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$decision': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(NODE0,QUORUM0)', '~chosenAt(QUORUM0,VALUE0)', 'decision(VALUE0)', 'vote(NODE0,VALUE1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,VALUE0,VALUE1,NODE0. member(NODE0,QUORUM0) | chosenAt(QUORUM0,VALUE0) | ~decision(VALUE0) | ~vote(NODE0,VALUE1) | VALUE0 = VALUE1


=== Prime Orbit 13 =====================
size : 36
num_suborbits: 1
255 (*) : -----------11------1----
255     : ['decision(value2)', 'didNotVote(node0)', 'vote(node1,value1)']
256     : ----------1-1-------1---
256     : ['decision(value1)', 'didNotVote(node0)', 'vote(node1,value2)']
257     : -----------11-----1-----
257     : ['decision(value2)', 'didNotVote(node0)', 'vote(node1,value0)']
258     : ---------1--1-------1---
258     : ['decision(value0)', 'didNotVote(node0)', 'vote(node1,value2)']
259     : ----------1-1-----1-----
259     : ['decision(value1)', 'didNotVote(node0)', 'vote(node1,value0)']
260     : ---------1--1------1----
260     : ['decision(value0)', 'didNotVote(node0)', 'vote(node1,value1)']
261     : -----------11---------1-
261     : ['decision(value2)', 'didNotVote(node0)', 'vote(node2,value1)']
262     : ----------1-1----------1
262     : ['decision(value1)', 'didNotVote(node0)', 'vote(node2,value2)']
263     : -----------11--------1--
263     : ['decision(value2)', 'didNotVote(node0)', 'vote(node2,value0)']
264     : ---------1--1----------1
264     : ['decision(value0)', 'didNotVote(node0)', 'vote(node2,value2)']
265     : ----------1-1--------1--
265     : ['decision(value1)', 'didNotVote(node0)', 'vote(node2,value0)']
266     : ---------1--1---------1-
266     : ['decision(value0)', 'didNotVote(node0)', 'vote(node2,value1)']
267     : -----------1-1--1-------
267     : ['decision(value2)', 'didNotVote(node1)', 'vote(node0,value1)']
268     : ----------1--1---1------
268     : ['decision(value1)', 'didNotVote(node1)', 'vote(node0,value2)']
269     : -----------1-1-1--------
269     : ['decision(value2)', 'didNotVote(node1)', 'vote(node0,value0)']
270     : ---------1---1---1------
270     : ['decision(value0)', 'didNotVote(node1)', 'vote(node0,value2)']
271     : ----------1--1-1--------
271     : ['decision(value1)', 'didNotVote(node1)', 'vote(node0,value0)']
272     : ---------1---1--1-------
272     : ['decision(value0)', 'didNotVote(node1)', 'vote(node0,value1)']
273     : -----------1-1--------1-
273     : ['decision(value2)', 'didNotVote(node1)', 'vote(node2,value1)']
274     : ----------1--1---------1
274     : ['decision(value1)', 'didNotVote(node1)', 'vote(node2,value2)']
275     : -----------1-1-------1--
275     : ['decision(value2)', 'didNotVote(node1)', 'vote(node2,value0)']
276     : ---------1---1---------1
276     : ['decision(value0)', 'didNotVote(node1)', 'vote(node2,value2)']
277     : ----------1--1-------1--
277     : ['decision(value1)', 'didNotVote(node1)', 'vote(node2,value0)']
278     : ---------1---1--------1-
278     : ['decision(value0)', 'didNotVote(node1)', 'vote(node2,value1)']
279     : -----------1--1-1-------
279     : ['decision(value2)', 'didNotVote(node2)', 'vote(node0,value1)']
280     : ----------1---1--1------
280     : ['decision(value1)', 'didNotVote(node2)', 'vote(node0,value2)']
281     : -----------1--11--------
281     : ['decision(value2)', 'didNotVote(node2)', 'vote(node0,value0)']
282     : ---------1----1--1------
282     : ['decision(value0)', 'didNotVote(node2)', 'vote(node0,value2)']
283     : ----------1---11--------
283     : ['decision(value1)', 'didNotVote(node2)', 'vote(node0,value0)']
284     : ---------1----1-1-------
284     : ['decision(value0)', 'didNotVote(node2)', 'vote(node0,value1)']
285     : -----------1--1----1----
285     : ['decision(value2)', 'didNotVote(node2)', 'vote(node1,value1)']
286     : ----------1---1-----1---
286     : ['decision(value1)', 'didNotVote(node2)', 'vote(node1,value2)']
287     : -----------1--1---1-----
287     : ['decision(value2)', 'didNotVote(node2)', 'vote(node1,value0)']
288     : ---------1----1-----1---
288     : ['decision(value0)', 'didNotVote(node2)', 'vote(node1,value2)']
289     : ----------1---1---1-----
289     : ['decision(value1)', 'didNotVote(node2)', 'vote(node1,value0)']
290     : ---------1----1----1----
290     : ['decision(value0)', 'didNotVote(node2)', 'vote(node1,value1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decision(value2)', 'didNotVote(node0)', 'vote(node1,value1)']

sign_func_name2args: {'0$decision': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$didNotVote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decision$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$didNotVote$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$vote$0$0], Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0]}

sig2const: {'value$0$decision$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$didNotVote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$0$vote$1$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$didNotVote$0$0, node$0$vote$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$didNotVote$0$0 | node$0$vote$0$0}

part_sig: ('node$0$didNotVote$0$0 | node$0$vote$0$0', 'value$0$decision$0$0 | value$0$vote$1$0')


---------- SigGenerator ----------

terms:  ['decision(value2)', 'didNotVote(node0)', 'vote(node1,value1)']

func_name2symbol:  {'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'didNotVote': Const('didNotVote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'didNotVote': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')))}

sign_func_name2count:  {'0$decision': 1, '0$didNotVote': 1, '0$vote': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$didNotVote$0$0, node$0$vote$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$didNotVote$0$0 | node$0$vote$0$0}

	sort: value

	identical_classes: {'value$0$decision$0': [value$0$decision$0$0], 'value$0$vote$1': [value$0$vote$1$0]}

	identical_single_classes: {'value$0$decision$0': value$0$decision$0$0, 'value$0$vote$1': value$0$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$didNotVote$0': [node$0$didNotVote$0$0], 'node$0$vote$0': [node$0$vote$0$0]}

	identical_single_classes: {'node$0$didNotVote$0': node$0$didNotVote$0$0, 'node$0$vote$0': node$0$vote$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decision': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$didNotVote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$vote': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotVote(NODE0)', 'vote(NODE1,VALUE1)', 'decision(VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall VALUE0,VALUE1,NODE0,NODE1. ~didNotVote(NODE0) | ~vote(NODE1,VALUE1) | ~decision(VALUE0) | (NODE0 = NODE1 | VALUE0 = VALUE1)


=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
291 (*) : ---0-----1--------0-----
291     : ['decision(value0)', '~chosenAt(quorum__node0_node2,value0)', '~vote(node1,value0)']
292     : ----0-----1--------0----
292     : ['decision(value1)', '~chosenAt(quorum__node0_node2,value1)', '~vote(node1,value1)']
293     : -----0-----1--------0---
293     : ['decision(value2)', '~chosenAt(quorum__node0_node2,value2)', '~vote(node1,value2)']
294     : 0--------1-----------0--
294     : ['decision(value0)', '~chosenAt(quorum__node0_node1,value0)', '~vote(node2,value0)']
295     : -0--------1-----------0-
295     : ['decision(value1)', '~chosenAt(quorum__node0_node1,value1)', '~vote(node2,value1)']
296     : --0--------1-----------0
296     : ['decision(value2)', '~chosenAt(quorum__node0_node1,value2)', '~vote(node2,value2)']
297     : ------0--1-----0--------
297     : ['decision(value0)', '~chosenAt(quorum__node1_node2,value0)', '~vote(node0,value0)']
298     : -------0--1-----0-------
298     : ['decision(value1)', '~chosenAt(quorum__node1_node2,value1)', '~vote(node0,value1)']
299     : --------0--1-----0------
299     : ['decision(value2)', '~chosenAt(quorum__node1_node2,value2)', '~vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__node0_node2,value0)', 'decision(value0)', '~vote(node1,value0)', '~member(node1,quorum__node0_node2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$decision': [(Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$member': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))))]}

const2sigs: {Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$1$chosenAt$1$0, value$0$decision$0$0, value$1$vote$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$vote$0$0, node$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$1$chosenAt$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'value$0$decision$0$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$1$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$member$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'quorum$1$member$1$0': Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$chosenAt$1$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$1$member$0$0; node$1$vote$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$chosenAt$1$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$1$member$0$0; node$1$vote$0$0}

part_sig: ('node$1$member$0$0; node$1$vote$0$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0', 'value$0$decision$0$0; value$1$chosenAt$1$0; value$1$vote$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__node0_node2,value0)', 'decision(value0)', '~vote(node1,value0)', '~member(node1,quorum__node0_node2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$decision': 1, '1$vote': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$chosenAt$1$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$1$member$0$0; node$1$vote$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$chosenAt$1$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$1$member$0$0; node$1$vote$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: value

	identical_classes: {'value$0$decision$0; value$1$chosenAt$1; value$1$vote$1': [value$0$decision$0$0; value$1$chosenAt$1$0; value$1$vote$1$0]}

	identical_single_classes: {'value$0$decision$0; value$1$chosenAt$1; value$1$vote$1': value$0$decision$0$0; value$1$chosenAt$1$0; value$1$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$1$member$0; node$1$vote$0': [node$1$member$0$0; node$1$vote$0$0]}

	identical_single_classes: {'node$1$member$0; node$1$vote$0': node$1$member$0$0; node$1$vote$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$decision': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,VALUE0)', 'decision(VALUE0)', '~vote(NODE0,VALUE0)', '~member(NODE0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,VALUE0,NODE0. chosenAt(QUORUM0,VALUE0) | ~decision(VALUE0) | vote(NODE0,VALUE0) | member(NODE0,QUORUM0)


=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
300 (*) : ---------1--------0--0--
300     : ['decision(value0)', '~vote(node1,value0)', '~vote(node2,value0)']
301     : ----------1--------0--0-
301     : ['decision(value1)', '~vote(node1,value1)', '~vote(node2,value1)']
302     : -----------1--------0--0
302     : ['decision(value2)', '~vote(node1,value2)', '~vote(node2,value2)']
303     : ---------1-----0-----0--
303     : ['decision(value0)', '~vote(node0,value0)', '~vote(node2,value0)']
304     : ----------1-----0-----0-
304     : ['decision(value1)', '~vote(node0,value1)', '~vote(node2,value1)']
305     : -----------1-----0-----0
305     : ['decision(value2)', '~vote(node0,value2)', '~vote(node2,value2)']
306     : ---------1-----0--0-----
306     : ['decision(value0)', '~vote(node0,value0)', '~vote(node1,value0)']
307     : ----------1-----0--0----
307     : ['decision(value1)', '~vote(node0,value1)', '~vote(node1,value1)']
308     : -----------1-----0--0---
308     : ['decision(value2)', '~vote(node0,value2)', '~vote(node1,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decision(value0)', '~vote(node1,value0)', '~vote(node2,value0)']

sign_func_name2args: {'0$decision': [(Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decision$0$0, value$1$vote$1$0, value$1$vote$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$vote$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$vote$0$1]}

sig2const: {'value$0$decision$0$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$1$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$1$vote$1$1': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$vote$1$0; value$1$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$1$vote$0$0, node$1$vote$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$vote$1$0; value$1$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$1$vote$0$0 | node$1$vote$0$1}

part_sig: ('node$1$vote$0$0 | node$1$vote$0$1', 'value$0$decision$0$0; value$1$vote$1$0; value$1$vote$1$1')


---------- SigGenerator ----------

terms:  ['decision(value0)', '~vote(node1,value0)', '~vote(node2,value0)']

func_name2symbol:  {'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')))}

sign_func_name2count:  {'0$decision': 1, '1$vote': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$vote$1$0; value$1$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$1$vote$0$0, node$1$vote$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$vote$1$0; value$1$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$1$vote$0$0 | node$1$vote$0$1}

	sort: value

	identical_classes: {'value$0$decision$0; value$1$vote$1; value$1$vote$1': [value$0$decision$0$0; value$1$vote$1$0; value$1$vote$1$1]}

	identical_single_classes: {'value$0$decision$0; value$1$vote$1; value$1$vote$1': value$0$decision$0$0; value$1$vote$1$0; value$1$vote$1$1}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$1$vote$0': [node$1$vote$0$0, node$1$vote$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'node$1$vote$0': [node$1$vote$0$0, node$1$vote$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decision': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~vote(NODE1,VALUE0)', 'decision(VALUE0)', '~vote(NODE0,VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall VALUE0,NODE0,NODE1. vote(NODE1,VALUE0) | ~decision(VALUE0) | vote(NODE0,VALUE0) | NODE0 = NODE1


=== Prime Orbit 16 =====================
size : 18
num_suborbits: 1
309 (*) : ---------1--1-----0-----
309     : ['decision(value0)', 'didNotVote(node0)', '~vote(node1,value0)']
310     : ----------1-1------0----
310     : ['decision(value1)', 'didNotVote(node0)', '~vote(node1,value1)']
311     : -----------11-------0---
311     : ['decision(value2)', 'didNotVote(node0)', '~vote(node1,value2)']
312     : ---------1--1--------0--
312     : ['decision(value0)', 'didNotVote(node0)', '~vote(node2,value0)']
313     : ----------1-1---------0-
313     : ['decision(value1)', 'didNotVote(node0)', '~vote(node2,value1)']
314     : -----------11----------0
314     : ['decision(value2)', 'didNotVote(node0)', '~vote(node2,value2)']
315     : ---------1---1-0--------
315     : ['decision(value0)', 'didNotVote(node1)', '~vote(node0,value0)']
316     : ----------1--1--0-------
316     : ['decision(value1)', 'didNotVote(node1)', '~vote(node0,value1)']
317     : -----------1-1---0------
317     : ['decision(value2)', 'didNotVote(node1)', '~vote(node0,value2)']
318     : ---------1---1-------0--
318     : ['decision(value0)', 'didNotVote(node1)', '~vote(node2,value0)']
319     : ----------1--1--------0-
319     : ['decision(value1)', 'didNotVote(node1)', '~vote(node2,value1)']
320     : -----------1-1---------0
320     : ['decision(value2)', 'didNotVote(node1)', '~vote(node2,value2)']
321     : ---------1----10--------
321     : ['decision(value0)', 'didNotVote(node2)', '~vote(node0,value0)']
322     : ----------1---1-0-------
322     : ['decision(value1)', 'didNotVote(node2)', '~vote(node0,value1)']
323     : -----------1--1--0------
323     : ['decision(value2)', 'didNotVote(node2)', '~vote(node0,value2)']
324     : ---------1----1---0-----
324     : ['decision(value0)', 'didNotVote(node2)', '~vote(node1,value0)']
325     : ----------1---1----0----
325     : ['decision(value1)', 'didNotVote(node2)', '~vote(node1,value1)']
326     : -----------1--1-----0---
326     : ['decision(value2)', 'didNotVote(node2)', '~vote(node1,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decision(value0)', 'didNotVote(node0)', '~vote(node1,value0)']

sign_func_name2args: {'0$decision': [(Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$didNotVote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decision$0$0, value$1$vote$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$didNotVote$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$vote$0$0]}

sig2const: {'value$0$decision$0$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$didNotVote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$1$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$didNotVote$0$0, node$1$vote$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$didNotVote$0$0 | node$1$vote$0$0}

part_sig: ('node$0$didNotVote$0$0 | node$1$vote$0$0', 'value$0$decision$0$0; value$1$vote$1$0')


---------- SigGenerator ----------

terms:  ['decision(value0)', 'didNotVote(node0)', '~vote(node1,value0)']

func_name2symbol:  {'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'didNotVote': Const('didNotVote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'didNotVote': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')))}

sign_func_name2count:  {'0$decision': 1, '0$didNotVote': 1, '1$vote': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$didNotVote$0$0, node$1$vote$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$didNotVote$0$0 | node$1$vote$0$0}

	sort: value

	identical_classes: {'value$0$decision$0; value$1$vote$1': [value$0$decision$0$0; value$1$vote$1$0]}

	identical_single_classes: {'value$0$decision$0; value$1$vote$1': value$0$decision$0$0; value$1$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$didNotVote$0': [node$0$didNotVote$0$0], 'node$1$vote$0': [node$1$vote$0$0]}

	identical_single_classes: {'node$0$didNotVote$0': node$0$didNotVote$0$0, 'node$1$vote$0': node$1$vote$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decision': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$didNotVote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$vote': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotVote(NODE0)', '~vote(NODE1,VALUE0)', 'decision(VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall VALUE0,NODE0,NODE1. ~didNotVote(NODE0) | vote(NODE1,VALUE0) | ~decision(VALUE0) | NODE0 = NODE1


=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
327 (*) : ------0--1--1-----------
327     : ['decision(value0)', 'didNotVote(node0)', '~chosenAt(quorum__node1_node2,value0)']
328     : -------0--1-1-----------
328     : ['decision(value1)', 'didNotVote(node0)', '~chosenAt(quorum__node1_node2,value1)']
329     : --------0--11-----------
329     : ['decision(value2)', 'didNotVote(node0)', '~chosenAt(quorum__node1_node2,value2)']
330     : ---0-----1---1----------
330     : ['decision(value0)', 'didNotVote(node1)', '~chosenAt(quorum__node0_node2,value0)']
331     : ----0-----1--1----------
331     : ['decision(value1)', 'didNotVote(node1)', '~chosenAt(quorum__node0_node2,value1)']
332     : -----0-----1-1----------
332     : ['decision(value2)', 'didNotVote(node1)', '~chosenAt(quorum__node0_node2,value2)']
333     : 0--------1----1---------
333     : ['decision(value0)', 'didNotVote(node2)', '~chosenAt(quorum__node0_node1,value0)']
334     : -0--------1---1---------
334     : ['decision(value1)', 'didNotVote(node2)', '~chosenAt(quorum__node0_node1,value1)']
335     : --0--------1--1---------
335     : ['decision(value2)', 'didNotVote(node2)', '~chosenAt(quorum__node0_node1,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__node1_node2,value0)', 'decision(value0)', 'didNotVote(node0)', '~member(node0,quorum__node1_node2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$decision': [(Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$didNotVote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$member': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))))]}

const2sigs: {Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$1$chosenAt$1$0, value$0$decision$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$didNotVote$0$0, node$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$1$chosenAt$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'value$0$decision$0$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$didNotVote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$member$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'quorum$1$member$1$0': Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$chosenAt$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$didNotVote$0$0; node$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$chosenAt$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$didNotVote$0$0; node$1$member$0$0}

part_sig: ('node$0$didNotVote$0$0; node$1$member$0$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0', 'value$0$decision$0$0; value$1$chosenAt$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__node1_node2,value0)', 'decision(value0)', 'didNotVote(node0)', '~member(node0,quorum__node1_node2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'didNotVote': Const('didNotVote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'didNotVote': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$decision': 1, '0$didNotVote': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$chosenAt$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$didNotVote$0$0; node$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$chosenAt$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$didNotVote$0$0; node$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: value

	identical_classes: {'value$0$decision$0; value$1$chosenAt$1': [value$0$decision$0$0; value$1$chosenAt$1$0]}

	identical_single_classes: {'value$0$decision$0; value$1$chosenAt$1': value$0$decision$0$0; value$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$didNotVote$0; node$1$member$0': [node$0$didNotVote$0$0; node$1$member$0$0]}

	identical_single_classes: {'node$0$didNotVote$0; node$1$member$0': node$0$didNotVote$0$0; node$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$decision': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$didNotVote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotVote(NODE0)', '~chosenAt(QUORUM0,VALUE0)', 'decision(VALUE0)', '~member(NODE0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,VALUE0,NODE0. ~didNotVote(NODE0) | chosenAt(QUORUM0,VALUE0) | ~decision(VALUE0) | member(NODE0,QUORUM0)


=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
345 (*) : ---------1--1-1---------
345     : ['decision(value0)', 'didNotVote(node0)', 'didNotVote(node2)']
346     : ----------1-1-1---------
346     : ['decision(value1)', 'didNotVote(node0)', 'didNotVote(node2)']
347     : -----------11-1---------
347     : ['decision(value2)', 'didNotVote(node0)', 'didNotVote(node2)']
348     : ---------1--11----------
348     : ['decision(value0)', 'didNotVote(node0)', 'didNotVote(node1)']
349     : ----------1-11----------
349     : ['decision(value1)', 'didNotVote(node0)', 'didNotVote(node1)']
350     : -----------111----------
350     : ['decision(value2)', 'didNotVote(node0)', 'didNotVote(node1)']
351     : ---------1---11---------
351     : ['decision(value0)', 'didNotVote(node1)', 'didNotVote(node2)']
352     : ----------1--11---------
352     : ['decision(value1)', 'didNotVote(node1)', 'didNotVote(node2)']
353     : -----------1-11---------
353     : ['decision(value2)', 'didNotVote(node1)', 'didNotVote(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decision(value0)', 'didNotVote(node0)', 'didNotVote(node2)']

sign_func_name2args: {'0$decision': [(Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$didNotVote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decision$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$didNotVote$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$didNotVote$0$1]}

sig2const: {'value$0$decision$0$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$didNotVote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$didNotVote$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$didNotVote$0$0, node$0$didNotVote$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$didNotVote$0$0 | node$0$didNotVote$0$1}

part_sig: ('node$0$didNotVote$0$0 | node$0$didNotVote$0$1', 'value$0$decision$0$0')


---------- SigGenerator ----------

terms:  ['decision(value0)', 'didNotVote(node0)', 'didNotVote(node2)']

func_name2symbol:  {'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'didNotVote': Const('didNotVote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'didNotVote': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$decision': 1, '0$didNotVote': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$didNotVote$0$0, node$0$didNotVote$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$didNotVote$0$0 | node$0$didNotVote$0$1}

	sort: value

	identical_classes: {'value$0$decision$0': [value$0$decision$0$0]}

	identical_single_classes: {'value$0$decision$0': value$0$decision$0$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$didNotVote$0': [node$0$didNotVote$0$0, node$0$didNotVote$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$didNotVote$0': [node$0$didNotVote$0$0, node$0$didNotVote$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decision': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$didNotVote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotVote(NODE0)', 'didNotVote(NODE1)', 'decision(VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall VALUE0,NODE0,NODE1. ~didNotVote(NODE0) | ~didNotVote(NODE1) | ~decision(VALUE0) | NODE0 = NODE1


=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
357 (*) : -----0--0--1-----------1
357     : ['decision(value2)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)']
358     : ----0--0--1-----------1-
358     : ['decision(value1)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)']
359     : ---0--0--1-----------1--
359     : ['decision(value0)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)']
360     : --0-----0--1--------1---
360     : ['decision(value2)', 'vote(node1,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value2)']
361     : -0-----0--1--------1----
361     : ['decision(value1)', 'vote(node1,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value1)']
362     : 0-----0--1--------1-----
362     : ['decision(value0)', 'vote(node1,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value0)']
363     : --0--0-----1-----1------
363     : ['decision(value2)', 'vote(node0,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)']
364     : -0--0-----1-----1-------
364     : ['decision(value1)', 'vote(node0,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)']
365     : 0--0-----1-----1--------
365     : ['decision(value0)', 'vote(node0,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', 'decision(value2)', 'vote(node2,value2)', 'member(node2,quorum__node0_node2)', 'member(node2,quorum__node1_node2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$decision': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$member': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))))]}

const2sigs: {Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$1$chosenAt$1$0, value$1$chosenAt$1$1, value$0$decision$0$0, value$0$vote$1$0], Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$vote$0$0, node$0$member$0$0, node$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$1$chosenAt$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$1$chosenAt$0$1': Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$1$chosenAt$1$1': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'value$0$decision$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$0$vote$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$member$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'quorum$0$member$1$0': Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'node$0$member$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'quorum$0$member$1$1': Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$0$vote$1$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$member$0$0; node$0$member$0$1; node$0$vote$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$0$vote$1$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$member$0$0; node$0$member$0$1; node$0$vote$0$0}

part_sig: ('node$0$member$0$0; node$0$member$0$1; node$0$vote$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1', 'value$0$decision$0$0; value$0$vote$1$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', 'decision(value2)', 'vote(node2,value2)', 'member(node2,quorum__node0_node2)', 'member(node2,quorum__node1_node2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$decision': 1, '0$vote': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$0$vote$1$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$member$0$0; node$0$member$0$1; node$0$vote$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$0$vote$1$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$member$0$0; node$0$member$0$1; node$0$vote$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: value

	identical_classes: {'value$0$decision$0; value$0$vote$1; value$1$chosenAt$1; value$1$chosenAt$1': [value$0$decision$0$0; value$0$vote$1$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1]}

	identical_single_classes: {'value$0$decision$0; value$0$vote$1; value$1$chosenAt$1; value$1$chosenAt$1': value$0$decision$0$0; value$0$vote$1$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$member$0; node$0$member$0; node$0$vote$0': [node$0$member$0$0; node$0$member$0$1; node$0$vote$0$0]}

	identical_single_classes: {'node$0$member$0; node$0$member$0; node$0$vote$0': node$0$member$0$0; node$0$member$0$1; node$0$vote$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$decision': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['decision(VALUE0)', 'member(NODE0,QUORUM0)', '~chosenAt(QUORUM0,VALUE0)', '~chosenAt(QUORUM1,VALUE0)', 'vote(NODE0,VALUE0)', 'member(NODE0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,VALUE0,QUORUM0,NODE0. ~decision(VALUE0) | ~member(NODE0,QUORUM0) | chosenAt(QUORUM0,VALUE0) | chosenAt(QUORUM1,VALUE0) | ~vote(NODE0,VALUE0) | ~member(NODE0,QUORUM1) | QUORUM0 = QUORUM1


=== Prime Orbit 22 =====================
size : 3
num_suborbits: 1
366 (*) : --0--0--0--1------------
366     : ['decision(value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)']
367     : -0--0--0--1-------------
367     : ['decision(value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)']
368     : 0--0--0--1--------------
368     : ['decision(value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', 'decision(value2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__node0_node1', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$decision': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)]}

const2sigs: {Const('quorum__node0_node1', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$1$chosenAt$0$0], Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$1$chosenAt$1$0, value$1$chosenAt$1$1, value$1$chosenAt$1$2, value$0$decision$0$0], Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$1$chosenAt$0$1], Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__node0_node1', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$1$chosenAt$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$1$chosenAt$0$1': Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$1$chosenAt$1$1': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$1$chosenAt$0$2': Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$1$chosenAt$1$2': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'value$0$decision$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1; value$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1; value$1$chosenAt$1$2}

part_sig: ('quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2', 'value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1; value$1$chosenAt$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', 'decision(value2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$decision': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1; value$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1; value$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: value

	identical_classes: {'value$0$decision$0; value$1$chosenAt$1; value$1$chosenAt$1; value$1$chosenAt$1': [value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1; value$1$chosenAt$1$2]}

	identical_single_classes: {'value$0$decision$0; value$1$chosenAt$1; value$1$chosenAt$1; value$1$chosenAt$1': value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1; value$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: value: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$decision': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,VALUE0)', 'decision(VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall VALUE0. (exists QUORUM0. chosenAt(QUORUM0,VALUE0) | ~decision(VALUE0))


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
423 (*) : -----0--0--1--0------00-
423     : ['decision(value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value1)']
424     : ----0--0--1---0------0-0
424     : ['decision(value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value2)']
425     : ---0--0--1----0-------00
425     : ['decision(value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node2)', '~vote(node2,value1)', '~vote(node2,value2)']
426     : --0-----0--1-0----00----
426     : ['decision(value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value1)']
427     : -0-----0--1--0----0-0---
427     : ['decision(value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value2)']
428     : 0-----0--1---0-----00---
428     : ['decision(value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~vote(node1,value1)', '~vote(node1,value2)']
429     : --0--0-----10--00-------
429     : ['decision(value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value1)']
430     : -0--0-----1-0--0-0------
430     : ['decision(value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value2)']
431     : 0--0-----1--0---00------
431     : ['decision(value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~vote(node0,value1)', '~vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', 'decision(value2)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value1)', 'member(node2,quorum__node0_node2)', 'member(node2,quorum__node1_node2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$decision': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$didNotVote': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$vote': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$member': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))))]}

const2sigs: {Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$1$chosenAt$1$0, value$1$chosenAt$1$1, value$0$decision$0$0], Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$didNotVote$0$0, node$1$vote$0$0, node$1$vote$0$1, node$0$member$0$0, node$0$member$0$1], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$1$vote$1$0], Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$1$vote$1$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$1$chosenAt$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$1$chosenAt$0$1': Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$1$chosenAt$1$1': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'value$0$decision$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$didNotVote$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$vote$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$1$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$1$vote$1$1': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$member$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'quorum$0$member$1$0': Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'node$0$member$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'quorum$0$member$1$1': Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1, value$1$vote$1$0, value$1$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$member$0$0; node$0$member$0$1; node$1$didNotVote$0$0; node$1$vote$0$0; node$1$vote$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1 | value$1$vote$1$0 | value$1$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$member$0$0; node$0$member$0$1; node$1$didNotVote$0$0; node$1$vote$0$0; node$1$vote$0$1}

part_sig: ('node$0$member$0$0; node$0$member$0$1; node$1$didNotVote$0$0; node$1$vote$0$0; node$1$vote$0$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1', 'value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1 | value$1$vote$1$0 | value$1$vote$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', 'decision(value2)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value1)', 'member(node2,quorum__node0_node2)', 'member(node2,quorum__node1_node2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'didNotVote': Const('didNotVote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'didNotVote': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$decision': 1, '1$didNotVote': 1, '1$vote': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1, value$1$vote$1$0, value$1$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$member$0$0; node$0$member$0$1; node$1$didNotVote$0$0; node$1$vote$0$0; node$1$vote$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1 | value$1$vote$1$0 | value$1$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$member$0$0; node$0$member$0$1; node$1$didNotVote$0$0; node$1$vote$0$0; node$1$vote$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: value

	identical_classes: {'value$0$decision$0; value$1$chosenAt$1; value$1$chosenAt$1': [value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1], 'value$1$vote$1': [value$1$vote$1$0, value$1$vote$1$1]}

	identical_single_classes: {'value$0$decision$0; value$1$chosenAt$1; value$1$chosenAt$1': value$0$decision$0$0; value$1$chosenAt$1$0; value$1$chosenAt$1$1}

	identical_multi_classes: {'value$1$vote$1': [value$1$vote$1$0, value$1$vote$1$1]}

	sort: node

	identical_classes: {'node$0$member$0; node$0$member$0; node$1$didNotVote$0; node$1$vote$0; node$1$vote$0': [node$0$member$0$0; node$0$member$0$1; node$1$didNotVote$0$0; node$1$vote$0$0; node$1$vote$0$1]}

	identical_single_classes: {'node$0$member$0; node$0$member$0; node$1$didNotVote$0; node$1$vote$0; node$1$vote$0': node$0$member$0$0; node$0$member$0$1; node$1$didNotVote$0$0; node$1$vote$0$0; node$1$vote$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: value: QuantifierMode.forall_exists

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$decision': [[Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$didNotVote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['decision(VALUE1)', 'member(NODE0,QUORUM0)', '~chosenAt(QUORUM1,VALUE1)', '~vote(NODE0,VALUE0)', '~chosenAt(QUORUM0,VALUE1)', 'member(NODE0,QUORUM1)', '~didNotVote(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,VALUE1,QUORUM0,NODE0. ~decision(VALUE1) | ~member(NODE0,QUORUM0) | chosenAt(QUORUM1,VALUE1) | chosenAt(QUORUM0,VALUE1) | ~member(NODE0,QUORUM1) | didNotVote(NODE0) | (exists VALUE0. (vote(NODE0,VALUE0) & VALUE0 ~= VALUE1)) | QUORUM0 = QUORUM1


==================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/toy_consensus.ivy: node=3,value=3]

==================================================================================================================


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ---------------1-1------
0     : ['vote(node0,value0)', 'vote(node0,value2)']
1     : ---------------11-------
1     : ['vote(node0,value0)', 'vote(node0,value1)']
2     : ----------------11------
2     : ['vote(node0,value1)', 'vote(node0,value2)']
3     : ------------------1-1---
3     : ['vote(node1,value0)', 'vote(node1,value2)']
4     : ------------------11----
4     : ['vote(node1,value0)', 'vote(node1,value1)']
5     : -------------------11---
5     : ['vote(node1,value1)', 'vote(node1,value2)']
6     : ---------------------1-1
6     : ['vote(node2,value0)', 'vote(node2,value2)']
7     : ---------------------11-
7     : ['vote(node2,value0)', 'vote(node2,value1)']
8     : ----------------------11
8     : ['vote(node2,value1)', 'vote(node2,value2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall VALUE0,VALUE1,NODE0. ~vote(NODE0,VALUE0) | ~vote(NODE0,VALUE1) | VALUE0 = VALUE1
qcost : 6




=== Prime Orbit 4 =====================
size : 18
num_suborbits: 1
72 (*) : --------11--------------
72     : ['chosenAt(quorum__node1_node2,value2)', 'decision(value0)']
73     : -------1-1--------------
73     : ['chosenAt(quorum__node1_node2,value1)', 'decision(value0)']
74     : --------1-1-------------
74     : ['chosenAt(quorum__node1_node2,value2)', 'decision(value1)']
75     : ------1---1-------------
75     : ['chosenAt(quorum__node1_node2,value0)', 'decision(value1)']
76     : -------1---1------------
76     : ['chosenAt(quorum__node1_node2,value1)', 'decision(value2)']
77     : ------1----1------------
77     : ['chosenAt(quorum__node1_node2,value0)', 'decision(value2)']
78     : -----1---1--------------
78     : ['chosenAt(quorum__node0_node2,value2)', 'decision(value0)']
79     : ----1----1--------------
79     : ['chosenAt(quorum__node0_node2,value1)', 'decision(value0)']
80     : -----1----1-------------
80     : ['chosenAt(quorum__node0_node2,value2)', 'decision(value1)']
81     : ---1------1-------------
81     : ['chosenAt(quorum__node0_node2,value0)', 'decision(value1)']
82     : ----1------1------------
82     : ['chosenAt(quorum__node0_node2,value1)', 'decision(value2)']
83     : ---1-------1------------
83     : ['chosenAt(quorum__node0_node2,value0)', 'decision(value2)']
84     : --1------1--------------
84     : ['chosenAt(quorum__node0_node1,value2)', 'decision(value0)']
85     : -1-------1--------------
85     : ['chosenAt(quorum__node0_node1,value1)', 'decision(value0)']
86     : --1-------1-------------
86     : ['chosenAt(quorum__node0_node1,value2)', 'decision(value1)']
87     : 1---------1-------------
87     : ['chosenAt(quorum__node0_node1,value0)', 'decision(value1)']
88     : -1---------1------------
88     : ['chosenAt(quorum__node0_node1,value1)', 'decision(value2)']
89     : 1----------1------------
89     : ['chosenAt(quorum__node0_node1,value0)', 'decision(value2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall QUORUM0,VALUE0,VALUE1. ~decision(VALUE1) | ~chosenAt(QUORUM0,VALUE0) | VALUE0 = VALUE1
qcost : 6




=== Prime Orbit 5 =====================
size : 3
num_suborbits: 1
90 (*) : ---------1-1------------
90     : ['decision(value0)', 'decision(value2)']
91     : ---------11-------------
91     : ['decision(value0)', 'decision(value1)']
92     : ----------11------------
92     : ['decision(value1)', 'decision(value2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall VALUE0,VALUE1. ~decision(VALUE1) | ~decision(VALUE0) | VALUE0 = VALUE1
qcost : 5




=== Prime Orbit 10 =====================
size : 36
num_suborbits: 2
165 (*) : -----------1-------1-1--
165     : ['decision(value2)', 'vote(node1,value1)', 'vote(node2,value0)']
166     : ----------1---------11--
166     : ['decision(value1)', 'vote(node1,value2)', 'vote(node2,value0)']
167     : -----------1------1---1-
167     : ['decision(value2)', 'vote(node1,value0)', 'vote(node2,value1)']
168     : ---------1----------1-1-
168     : ['decision(value0)', 'vote(node1,value2)', 'vote(node2,value1)']
169     : ----------1-------1----1
169     : ['decision(value1)', 'vote(node1,value0)', 'vote(node2,value2)']
170     : ---------1---------1---1
170     : ['decision(value0)', 'vote(node1,value1)', 'vote(node2,value2)']
171     : -----------1----1----1--
171     : ['decision(value2)', 'vote(node0,value1)', 'vote(node2,value0)']
172     : ----------1------1---1--
172     : ['decision(value1)', 'vote(node0,value2)', 'vote(node2,value0)']
173     : -----------1---1------1-
173     : ['decision(value2)', 'vote(node0,value0)', 'vote(node2,value1)']
174     : ---------1-------1----1-
174     : ['decision(value0)', 'vote(node0,value2)', 'vote(node2,value1)']
175     : ----------1----1-------1
175     : ['decision(value1)', 'vote(node0,value0)', 'vote(node2,value2)']
176     : ---------1------1------1
176     : ['decision(value0)', 'vote(node0,value1)', 'vote(node2,value2)']
177     : -----------1----1-1-----
177     : ['decision(value2)', 'vote(node0,value1)', 'vote(node1,value0)']
178     : ----------1------11-----
178     : ['decision(value1)', 'vote(node0,value2)', 'vote(node1,value0)']
179     : -----------1---1---1----
179     : ['decision(value2)', 'vote(node0,value0)', 'vote(node1,value1)']
180     : ---------1-------1-1----
180     : ['decision(value0)', 'vote(node0,value2)', 'vote(node1,value1)']
181     : ----------1----1----1---
181     : ['decision(value1)', 'vote(node0,value0)', 'vote(node1,value2)']
182     : ---------1------1---1---
182     : ['decision(value0)', 'vote(node0,value1)', 'vote(node1,value2)']
237 (*) : -----------1-------1--1-
237     : ['decision(value2)', 'vote(node1,value1)', 'vote(node2,value1)']
238     : ----------1---------1--1
238     : ['decision(value1)', 'vote(node1,value2)', 'vote(node2,value2)']
239     : -----------1------1--1--
239     : ['decision(value2)', 'vote(node1,value0)', 'vote(node2,value0)']
240     : ---------1----------1--1
240     : ['decision(value0)', 'vote(node1,value2)', 'vote(node2,value2)']
241     : ----------1-------1--1--
241     : ['decision(value1)', 'vote(node1,value0)', 'vote(node2,value0)']
242     : ---------1---------1--1-
242     : ['decision(value0)', 'vote(node1,value1)', 'vote(node2,value1)']
243     : -----------1----1-----1-
243     : ['decision(value2)', 'vote(node0,value1)', 'vote(node2,value1)']
244     : ----------1------1-----1
244     : ['decision(value1)', 'vote(node0,value2)', 'vote(node2,value2)']
245     : -----------1---1-----1--
245     : ['decision(value2)', 'vote(node0,value0)', 'vote(node2,value0)']
246     : ---------1-------1-----1
246     : ['decision(value0)', 'vote(node0,value2)', 'vote(node2,value2)']
247     : ----------1----1-----1--
247     : ['decision(value1)', 'vote(node0,value0)', 'vote(node2,value0)']
248     : ---------1------1-----1-
248     : ['decision(value0)', 'vote(node0,value1)', 'vote(node2,value1)']
249     : -----------1----1--1----
249     : ['decision(value2)', 'vote(node0,value1)', 'vote(node1,value1)']
250     : ----------1------1--1---
250     : ['decision(value1)', 'vote(node0,value2)', 'vote(node1,value2)']
251     : -----------1---1--1-----
251     : ['decision(value2)', 'vote(node0,value0)', 'vote(node1,value0)']
252     : ---------1-------1--1---
252     : ['decision(value0)', 'vote(node0,value2)', 'vote(node1,value2)']
253     : ----------1----1--1-----
253     : ['decision(value1)', 'vote(node0,value0)', 'vote(node1,value0)']
254     : ---------1------1--1----
254     : ['decision(value0)', 'vote(node0,value1)', 'vote(node1,value1)']
num_forall :   5
num_exists :   0
num_literals : 6
quantified form : forall VALUE0,VALUE2,NODE1,VALUE1,NODE0. ~decision(VALUE0) | ~vote(NODE1,VALUE2) | ~vote(NODE0,VALUE1) | (VALUE0 = VALUE1 | VALUE0 = VALUE2 | NODE0 = NODE1)
qcost : 11




=== Prime Orbit 11 =====================
size : 36
num_suborbits: 1
183 (*) : -----------1-------1---0
183     : ['decision(value2)', 'vote(node1,value1)', '~vote(node2,value2)']
184     : ----------1---------1-0-
184     : ['decision(value1)', 'vote(node1,value2)', '~vote(node2,value1)']
185     : -----------1------1----0
185     : ['decision(value2)', 'vote(node1,value0)', '~vote(node2,value2)']
186     : ---------1----------10--
186     : ['decision(value0)', 'vote(node1,value2)', '~vote(node2,value0)']
187     : ----------1-------1---0-
187     : ['decision(value1)', 'vote(node1,value0)', '~vote(node2,value1)']
188     : ---------1---------1-0--
188     : ['decision(value0)', 'vote(node1,value1)', '~vote(node2,value0)']
189     : -----------1--------0-1-
189     : ['decision(value2)', 'vote(node2,value1)', '~vote(node1,value2)']
190     : ----------1--------0---1
190     : ['decision(value1)', 'vote(node2,value2)', '~vote(node1,value1)']
191     : -----------1--------01--
191     : ['decision(value2)', 'vote(node2,value0)', '~vote(node1,value2)']
192     : ---------1--------0----1
192     : ['decision(value0)', 'vote(node2,value2)', '~vote(node1,value0)']
193     : ----------1--------0-1--
193     : ['decision(value1)', 'vote(node2,value0)', '~vote(node1,value1)']
194     : ---------1--------0---1-
194     : ['decision(value0)', 'vote(node2,value1)', '~vote(node1,value0)']
195     : -----------1----1------0
195     : ['decision(value2)', 'vote(node0,value1)', '~vote(node2,value2)']
196     : ----------1------1----0-
196     : ['decision(value1)', 'vote(node0,value2)', '~vote(node2,value1)']
197     : -----------1---1-------0
197     : ['decision(value2)', 'vote(node0,value0)', '~vote(node2,value2)']
198     : ---------1-------1---0--
198     : ['decision(value0)', 'vote(node0,value2)', '~vote(node2,value0)']
199     : ----------1----1------0-
199     : ['decision(value1)', 'vote(node0,value0)', '~vote(node2,value1)']
200     : ---------1------1----0--
200     : ['decision(value0)', 'vote(node0,value1)', '~vote(node2,value0)']
201     : -----------1-----0----1-
201     : ['decision(value2)', 'vote(node2,value1)', '~vote(node0,value2)']
202     : ----------1-----0------1
202     : ['decision(value1)', 'vote(node2,value2)', '~vote(node0,value1)']
203     : -----------1-----0---1--
203     : ['decision(value2)', 'vote(node2,value0)', '~vote(node0,value2)']
204     : ---------1-----0-------1
204     : ['decision(value0)', 'vote(node2,value2)', '~vote(node0,value0)']
205     : ----------1-----0----1--
205     : ['decision(value1)', 'vote(node2,value0)', '~vote(node0,value1)']
206     : ---------1-----0------1-
206     : ['decision(value0)', 'vote(node2,value1)', '~vote(node0,value0)']
207     : -----------1----1---0---
207     : ['decision(value2)', 'vote(node0,value1)', '~vote(node1,value2)']
208     : ----------1------1-0----
208     : ['decision(value1)', 'vote(node0,value2)', '~vote(node1,value1)']
209     : -----------1---1----0---
209     : ['decision(value2)', 'vote(node0,value0)', '~vote(node1,value2)']
210     : ---------1-------10-----
210     : ['decision(value0)', 'vote(node0,value2)', '~vote(node1,value0)']
211     : ----------1----1---0----
211     : ['decision(value1)', 'vote(node0,value0)', '~vote(node1,value1)']
212     : ---------1------1-0-----
212     : ['decision(value0)', 'vote(node0,value1)', '~vote(node1,value0)']
213     : -----------1-----0-1----
213     : ['decision(value2)', 'vote(node1,value1)', '~vote(node0,value2)']
214     : ----------1-----0---1---
214     : ['decision(value1)', 'vote(node1,value2)', '~vote(node0,value1)']
215     : -----------1-----01-----
215     : ['decision(value2)', 'vote(node1,value0)', '~vote(node0,value2)']
216     : ---------1-----0----1---
216     : ['decision(value0)', 'vote(node1,value2)', '~vote(node0,value0)']
217     : ----------1-----0-1-----
217     : ['decision(value1)', 'vote(node1,value0)', '~vote(node0,value1)']
218     : ---------1-----0---1----
218     : ['decision(value0)', 'vote(node1,value1)', '~vote(node0,value0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall VALUE0,VALUE1,NODE0,NODE1. vote(NODE1,VALUE0) | ~decision(VALUE0) | ~vote(NODE0,VALUE1) | (NODE0 = NODE1 | VALUE0 = VALUE1)
qcost : 9




=== Prime Orbit 12 =====================
size : 18
num_suborbits: 1
219 (*) : -----0-----1-------1----
219     : ['decision(value2)', 'vote(node1,value1)', '~chosenAt(quorum__node0_node2,value2)']
220     : ----0-----1---------1---
220     : ['decision(value1)', 'vote(node1,value2)', '~chosenAt(quorum__node0_node2,value1)']
221     : -----0-----1------1-----
221     : ['decision(value2)', 'vote(node1,value0)', '~chosenAt(quorum__node0_node2,value2)']
222     : ---0-----1----------1---
222     : ['decision(value0)', 'vote(node1,value2)', '~chosenAt(quorum__node0_node2,value0)']
223     : ----0-----1-------1-----
223     : ['decision(value1)', 'vote(node1,value0)', '~chosenAt(quorum__node0_node2,value1)']
224     : ---0-----1---------1----
224     : ['decision(value0)', 'vote(node1,value1)', '~chosenAt(quorum__node0_node2,value0)']
225     : --0--------1----------1-
225     : ['decision(value2)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node1,value2)']
226     : -0--------1------------1
226     : ['decision(value1)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node1,value1)']
227     : --0--------1---------1--
227     : ['decision(value2)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node1,value2)']
228     : 0--------1-------------1
228     : ['decision(value0)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node1,value0)']
229     : -0--------1----------1--
229     : ['decision(value1)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node1,value1)']
230     : 0--------1------------1-
230     : ['decision(value0)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node1,value0)']
231     : --------0--1----1-------
231     : ['decision(value2)', 'vote(node0,value1)', '~chosenAt(quorum__node1_node2,value2)']
232     : -------0--1------1------
232     : ['decision(value1)', 'vote(node0,value2)', '~chosenAt(quorum__node1_node2,value1)']
233     : --------0--1---1--------
233     : ['decision(value2)', 'vote(node0,value0)', '~chosenAt(quorum__node1_node2,value2)']
234     : ------0--1-------1------
234     : ['decision(value0)', 'vote(node0,value2)', '~chosenAt(quorum__node1_node2,value0)']
235     : -------0--1----1--------
235     : ['decision(value1)', 'vote(node0,value0)', '~chosenAt(quorum__node1_node2,value1)']
236     : ------0--1------1-------
236     : ['decision(value0)', 'vote(node0,value1)', '~chosenAt(quorum__node1_node2,value0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall QUORUM0,VALUE0,VALUE1,NODE0. member(NODE0,QUORUM0) | chosenAt(QUORUM0,VALUE0) | ~decision(VALUE0) | ~vote(NODE0,VALUE1) | VALUE0 = VALUE1
qcost : 9




=== Prime Orbit 13 =====================
size : 36
num_suborbits: 1
255 (*) : -----------11------1----
255     : ['decision(value2)', 'didNotVote(node0)', 'vote(node1,value1)']
256     : ----------1-1-------1---
256     : ['decision(value1)', 'didNotVote(node0)', 'vote(node1,value2)']
257     : -----------11-----1-----
257     : ['decision(value2)', 'didNotVote(node0)', 'vote(node1,value0)']
258     : ---------1--1-------1---
258     : ['decision(value0)', 'didNotVote(node0)', 'vote(node1,value2)']
259     : ----------1-1-----1-----
259     : ['decision(value1)', 'didNotVote(node0)', 'vote(node1,value0)']
260     : ---------1--1------1----
260     : ['decision(value0)', 'didNotVote(node0)', 'vote(node1,value1)']
261     : -----------11---------1-
261     : ['decision(value2)', 'didNotVote(node0)', 'vote(node2,value1)']
262     : ----------1-1----------1
262     : ['decision(value1)', 'didNotVote(node0)', 'vote(node2,value2)']
263     : -----------11--------1--
263     : ['decision(value2)', 'didNotVote(node0)', 'vote(node2,value0)']
264     : ---------1--1----------1
264     : ['decision(value0)', 'didNotVote(node0)', 'vote(node2,value2)']
265     : ----------1-1--------1--
265     : ['decision(value1)', 'didNotVote(node0)', 'vote(node2,value0)']
266     : ---------1--1---------1-
266     : ['decision(value0)', 'didNotVote(node0)', 'vote(node2,value1)']
267     : -----------1-1--1-------
267     : ['decision(value2)', 'didNotVote(node1)', 'vote(node0,value1)']
268     : ----------1--1---1------
268     : ['decision(value1)', 'didNotVote(node1)', 'vote(node0,value2)']
269     : -----------1-1-1--------
269     : ['decision(value2)', 'didNotVote(node1)', 'vote(node0,value0)']
270     : ---------1---1---1------
270     : ['decision(value0)', 'didNotVote(node1)', 'vote(node0,value2)']
271     : ----------1--1-1--------
271     : ['decision(value1)', 'didNotVote(node1)', 'vote(node0,value0)']
272     : ---------1---1--1-------
272     : ['decision(value0)', 'didNotVote(node1)', 'vote(node0,value1)']
273     : -----------1-1--------1-
273     : ['decision(value2)', 'didNotVote(node1)', 'vote(node2,value1)']
274     : ----------1--1---------1
274     : ['decision(value1)', 'didNotVote(node1)', 'vote(node2,value2)']
275     : -----------1-1-------1--
275     : ['decision(value2)', 'didNotVote(node1)', 'vote(node2,value0)']
276     : ---------1---1---------1
276     : ['decision(value0)', 'didNotVote(node1)', 'vote(node2,value2)']
277     : ----------1--1-------1--
277     : ['decision(value1)', 'didNotVote(node1)', 'vote(node2,value0)']
278     : ---------1---1--------1-
278     : ['decision(value0)', 'didNotVote(node1)', 'vote(node2,value1)']
279     : -----------1--1-1-------
279     : ['decision(value2)', 'didNotVote(node2)', 'vote(node0,value1)']
280     : ----------1---1--1------
280     : ['decision(value1)', 'didNotVote(node2)', 'vote(node0,value2)']
281     : -----------1--11--------
281     : ['decision(value2)', 'didNotVote(node2)', 'vote(node0,value0)']
282     : ---------1----1--1------
282     : ['decision(value0)', 'didNotVote(node2)', 'vote(node0,value2)']
283     : ----------1---11--------
283     : ['decision(value1)', 'didNotVote(node2)', 'vote(node0,value0)']
284     : ---------1----1-1-------
284     : ['decision(value0)', 'didNotVote(node2)', 'vote(node0,value1)']
285     : -----------1--1----1----
285     : ['decision(value2)', 'didNotVote(node2)', 'vote(node1,value1)']
286     : ----------1---1-----1---
286     : ['decision(value1)', 'didNotVote(node2)', 'vote(node1,value2)']
287     : -----------1--1---1-----
287     : ['decision(value2)', 'didNotVote(node2)', 'vote(node1,value0)']
288     : ---------1----1-----1---
288     : ['decision(value0)', 'didNotVote(node2)', 'vote(node1,value2)']
289     : ----------1---1---1-----
289     : ['decision(value1)', 'didNotVote(node2)', 'vote(node1,value0)']
290     : ---------1----1----1----
290     : ['decision(value0)', 'didNotVote(node2)', 'vote(node1,value1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall VALUE0,VALUE1,NODE0,NODE1. ~didNotVote(NODE0) | ~vote(NODE1,VALUE1) | ~decision(VALUE0) | (NODE0 = NODE1 | VALUE0 = VALUE1)
qcost : 9




=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
291 (*) : ---0-----1--------0-----
291     : ['decision(value0)', '~chosenAt(quorum__node0_node2,value0)', '~vote(node1,value0)']
292     : ----0-----1--------0----
292     : ['decision(value1)', '~chosenAt(quorum__node0_node2,value1)', '~vote(node1,value1)']
293     : -----0-----1--------0---
293     : ['decision(value2)', '~chosenAt(quorum__node0_node2,value2)', '~vote(node1,value2)']
294     : 0--------1-----------0--
294     : ['decision(value0)', '~chosenAt(quorum__node0_node1,value0)', '~vote(node2,value0)']
295     : -0--------1-----------0-
295     : ['decision(value1)', '~chosenAt(quorum__node0_node1,value1)', '~vote(node2,value1)']
296     : --0--------1-----------0
296     : ['decision(value2)', '~chosenAt(quorum__node0_node1,value2)', '~vote(node2,value2)']
297     : ------0--1-----0--------
297     : ['decision(value0)', '~chosenAt(quorum__node1_node2,value0)', '~vote(node0,value0)']
298     : -------0--1-----0-------
298     : ['decision(value1)', '~chosenAt(quorum__node1_node2,value1)', '~vote(node0,value1)']
299     : --------0--1-----0------
299     : ['decision(value2)', '~chosenAt(quorum__node1_node2,value2)', '~vote(node0,value2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall QUORUM0,VALUE0,NODE0. chosenAt(QUORUM0,VALUE0) | ~decision(VALUE0) | vote(NODE0,VALUE0) | member(NODE0,QUORUM0)
qcost : 7




=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
300 (*) : ---------1--------0--0--
300     : ['decision(value0)', '~vote(node1,value0)', '~vote(node2,value0)']
301     : ----------1--------0--0-
301     : ['decision(value1)', '~vote(node1,value1)', '~vote(node2,value1)']
302     : -----------1--------0--0
302     : ['decision(value2)', '~vote(node1,value2)', '~vote(node2,value2)']
303     : ---------1-----0-----0--
303     : ['decision(value0)', '~vote(node0,value0)', '~vote(node2,value0)']
304     : ----------1-----0-----0-
304     : ['decision(value1)', '~vote(node0,value1)', '~vote(node2,value1)']
305     : -----------1-----0-----0
305     : ['decision(value2)', '~vote(node0,value2)', '~vote(node2,value2)']
306     : ---------1-----0--0-----
306     : ['decision(value0)', '~vote(node0,value0)', '~vote(node1,value0)']
307     : ----------1-----0--0----
307     : ['decision(value1)', '~vote(node0,value1)', '~vote(node1,value1)']
308     : -----------1-----0--0---
308     : ['decision(value2)', '~vote(node0,value2)', '~vote(node1,value2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall VALUE0,NODE0,NODE1. vote(NODE1,VALUE0) | ~decision(VALUE0) | vote(NODE0,VALUE0) | NODE0 = NODE1
qcost : 7




=== Prime Orbit 16 =====================
size : 18
num_suborbits: 1
309 (*) : ---------1--1-----0-----
309     : ['decision(value0)', 'didNotVote(node0)', '~vote(node1,value0)']
310     : ----------1-1------0----
310     : ['decision(value1)', 'didNotVote(node0)', '~vote(node1,value1)']
311     : -----------11-------0---
311     : ['decision(value2)', 'didNotVote(node0)', '~vote(node1,value2)']
312     : ---------1--1--------0--
312     : ['decision(value0)', 'didNotVote(node0)', '~vote(node2,value0)']
313     : ----------1-1---------0-
313     : ['decision(value1)', 'didNotVote(node0)', '~vote(node2,value1)']
314     : -----------11----------0
314     : ['decision(value2)', 'didNotVote(node0)', '~vote(node2,value2)']
315     : ---------1---1-0--------
315     : ['decision(value0)', 'didNotVote(node1)', '~vote(node0,value0)']
316     : ----------1--1--0-------
316     : ['decision(value1)', 'didNotVote(node1)', '~vote(node0,value1)']
317     : -----------1-1---0------
317     : ['decision(value2)', 'didNotVote(node1)', '~vote(node0,value2)']
318     : ---------1---1-------0--
318     : ['decision(value0)', 'didNotVote(node1)', '~vote(node2,value0)']
319     : ----------1--1--------0-
319     : ['decision(value1)', 'didNotVote(node1)', '~vote(node2,value1)']
320     : -----------1-1---------0
320     : ['decision(value2)', 'didNotVote(node1)', '~vote(node2,value2)']
321     : ---------1----10--------
321     : ['decision(value0)', 'didNotVote(node2)', '~vote(node0,value0)']
322     : ----------1---1-0-------
322     : ['decision(value1)', 'didNotVote(node2)', '~vote(node0,value1)']
323     : -----------1--1--0------
323     : ['decision(value2)', 'didNotVote(node2)', '~vote(node0,value2)']
324     : ---------1----1---0-----
324     : ['decision(value0)', 'didNotVote(node2)', '~vote(node1,value0)']
325     : ----------1---1----0----
325     : ['decision(value1)', 'didNotVote(node2)', '~vote(node1,value1)']
326     : -----------1--1-----0---
326     : ['decision(value2)', 'didNotVote(node2)', '~vote(node1,value2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall VALUE0,NODE0,NODE1. ~didNotVote(NODE0) | vote(NODE1,VALUE0) | ~decision(VALUE0) | NODE0 = NODE1
qcost : 7




=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
327 (*) : ------0--1--1-----------
327     : ['decision(value0)', 'didNotVote(node0)', '~chosenAt(quorum__node1_node2,value0)']
328     : -------0--1-1-----------
328     : ['decision(value1)', 'didNotVote(node0)', '~chosenAt(quorum__node1_node2,value1)']
329     : --------0--11-----------
329     : ['decision(value2)', 'didNotVote(node0)', '~chosenAt(quorum__node1_node2,value2)']
330     : ---0-----1---1----------
330     : ['decision(value0)', 'didNotVote(node1)', '~chosenAt(quorum__node0_node2,value0)']
331     : ----0-----1--1----------
331     : ['decision(value1)', 'didNotVote(node1)', '~chosenAt(quorum__node0_node2,value1)']
332     : -----0-----1-1----------
332     : ['decision(value2)', 'didNotVote(node1)', '~chosenAt(quorum__node0_node2,value2)']
333     : 0--------1----1---------
333     : ['decision(value0)', 'didNotVote(node2)', '~chosenAt(quorum__node0_node1,value0)']
334     : -0--------1---1---------
334     : ['decision(value1)', 'didNotVote(node2)', '~chosenAt(quorum__node0_node1,value1)']
335     : --0--------1--1---------
335     : ['decision(value2)', 'didNotVote(node2)', '~chosenAt(quorum__node0_node1,value2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall QUORUM0,VALUE0,NODE0. ~didNotVote(NODE0) | chosenAt(QUORUM0,VALUE0) | ~decision(VALUE0) | member(NODE0,QUORUM0)
qcost : 7




=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
345 (*) : ---------1--1-1---------
345     : ['decision(value0)', 'didNotVote(node0)', 'didNotVote(node2)']
346     : ----------1-1-1---------
346     : ['decision(value1)', 'didNotVote(node0)', 'didNotVote(node2)']
347     : -----------11-1---------
347     : ['decision(value2)', 'didNotVote(node0)', 'didNotVote(node2)']
348     : ---------1--11----------
348     : ['decision(value0)', 'didNotVote(node0)', 'didNotVote(node1)']
349     : ----------1-11----------
349     : ['decision(value1)', 'didNotVote(node0)', 'didNotVote(node1)']
350     : -----------111----------
350     : ['decision(value2)', 'didNotVote(node0)', 'didNotVote(node1)']
351     : ---------1---11---------
351     : ['decision(value0)', 'didNotVote(node1)', 'didNotVote(node2)']
352     : ----------1--11---------
352     : ['decision(value1)', 'didNotVote(node1)', 'didNotVote(node2)']
353     : -----------1-11---------
353     : ['decision(value2)', 'didNotVote(node1)', 'didNotVote(node2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall VALUE0,NODE0,NODE1. ~didNotVote(NODE0) | ~didNotVote(NODE1) | ~decision(VALUE0) | NODE0 = NODE1
qcost : 7




=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
357 (*) : -----0--0--1-----------1
357     : ['decision(value2)', 'vote(node2,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)']
358     : ----0--0--1-----------1-
358     : ['decision(value1)', 'vote(node2,value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)']
359     : ---0--0--1-----------1--
359     : ['decision(value0)', 'vote(node2,value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)']
360     : --0-----0--1--------1---
360     : ['decision(value2)', 'vote(node1,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value2)']
361     : -0-----0--1--------1----
361     : ['decision(value1)', 'vote(node1,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value1)']
362     : 0-----0--1--------1-----
362     : ['decision(value0)', 'vote(node1,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value0)']
363     : --0--0-----1-----1------
363     : ['decision(value2)', 'vote(node0,value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)']
364     : -0--0-----1-----1-------
364     : ['decision(value1)', 'vote(node0,value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)']
365     : 0--0-----1-----1--------
365     : ['decision(value0)', 'vote(node0,value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall QUORUM1,VALUE0,QUORUM0,NODE0. ~decision(VALUE0) | ~member(NODE0,QUORUM0) | chosenAt(QUORUM0,VALUE0) | chosenAt(QUORUM1,VALUE0) | ~vote(NODE0,VALUE0) | ~member(NODE0,QUORUM1) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 22 =====================
size : 3
num_suborbits: 1
366 (*) : --0--0--0--1------------
366     : ['decision(value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)']
367     : -0--0--0--1-------------
367     : ['decision(value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)']
368     : 0--0--0--1--------------
368     : ['decision(value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall VALUE0. (exists QUORUM0. chosenAt(QUORUM0,VALUE0) | ~decision(VALUE0))
qcost : 4




=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
423 (*) : -----0--0--1--0------00-
423     : ['decision(value2)', '~chosenAt(quorum__node0_node2,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value1)']
424     : ----0--0--1---0------0-0
424     : ['decision(value1)', '~chosenAt(quorum__node0_node2,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node2)', '~vote(node2,value0)', '~vote(node2,value2)']
425     : ---0--0--1----0-------00
425     : ['decision(value0)', '~chosenAt(quorum__node0_node2,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node2)', '~vote(node2,value1)', '~vote(node2,value2)']
426     : --0-----0--1-0----00----
426     : ['decision(value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node1_node2,value2)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value1)']
427     : -0-----0--1--0----0-0---
427     : ['decision(value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node1_node2,value1)', '~didNotVote(node1)', '~vote(node1,value0)', '~vote(node1,value2)']
428     : 0-----0--1---0-----00---
428     : ['decision(value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node1_node2,value0)', '~didNotVote(node1)', '~vote(node1,value1)', '~vote(node1,value2)']
429     : --0--0-----10--00-------
429     : ['decision(value2)', '~chosenAt(quorum__node0_node1,value2)', '~chosenAt(quorum__node0_node2,value2)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value1)']
430     : -0--0-----1-0--0-0------
430     : ['decision(value1)', '~chosenAt(quorum__node0_node1,value1)', '~chosenAt(quorum__node0_node2,value1)', '~didNotVote(node0)', '~vote(node0,value0)', '~vote(node0,value2)']
431     : 0--0-----1--0---00------
431     : ['decision(value0)', '~chosenAt(quorum__node0_node1,value0)', '~chosenAt(quorum__node0_node2,value0)', '~didNotVote(node0)', '~vote(node0,value1)', '~vote(node0,value2)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall QUORUM1,VALUE1,QUORUM0,NODE0. ~decision(VALUE1) | ~member(NODE0,QUORUM0) | chosenAt(QUORUM1,VALUE1) | chosenAt(QUORUM0,VALUE1) | ~member(NODE0,QUORUM1) | didNotVote(NODE0) | (exists VALUE0. (vote(NODE0,VALUE0) & VALUE0 ~= VALUE1)) | QUORUM0 = QUORUM1
qcost : 14



[QRM NOTE]: Time elapsed since start: 9.800 seconds

[QRM NOTE]: Time elapsed since last: 1.967 seconds

[QRM NOTE]: Peak memory: 2700388 bytes


=================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/toy_consensus.ivy: node=3,value=3]

=================================================================================================


New level: 1
 pending : [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]
 solution : [0]


Before reduction : 
 pending  : [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]
 solution : [0]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 2147483648), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, 268435456), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, 536870912), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 2147483648), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, 268435456), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, 536870912), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 1 among pending : [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 2147483648), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, 268435456), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, 536870912), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 5 with phase True at level 1

After decision at level 1
 pending : [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]
 solution : [0, 5]


New level: 2
 pending : [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]
 solution : [0, 5]


Before reduction : 
 pending  : [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]
 solution : [0, 5]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, 2147483648), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, 268435456), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, 536870912), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, 2097152), (13, 16384), (14, 67108864), (15, 33554432), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, 134217728), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]
 solution : [0, 5]


Solution : [0, 5] has cost 11.


Decide in level 2 among pending : [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, 2097152), (13, 16384), (14, 67108864), (15, 33554432), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, 134217728), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 22 with phase True at level 2

After decision at level 2
 pending : [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26]
 solution : [0, 5, 22]


New level: 3
 pending : [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26]
 solution : [0, 5, 22]


Before reduction : 
 pending  : [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26]
 solution : [0, 5, 22]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, 2097152), (13, 16384), (14, 67108864), (15, 33554432), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, 134217728), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 3 : {4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 22]


Before reduction : 
 pending  : []
 solution : [0, 5, 22]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 22]


Solution : [0, 5, 22] has cost 15.


Before backtrack at level 3
 pending : []
 solution : [0, 5, 22]

After backtrack at level 3
 pending : [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26]
 solution : [0, 5, 22]


Invert decision for 22 at level 2


New level: 3
 pending : [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26]
 solution : [0, 5]


Before reduction : 
 pending  : [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26]
 solution : [0, 5]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, 2097152), (13, 16384), (14, 67108864), (15, 33554432), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26]
 solution : [0, 5]


Solution : [0, 5] has cost 11.


Decide in level 3 among pending : [4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, 2097152), (13, 16384), (14, 67108864), (15, 33554432), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 14 with phase True at level 3

After decision at level 3
 pending : [4, 10, 11, 12, 13, 15, 16, 17, 19, 21, 26]
 solution : [0, 5, 14]


New level: 4
 pending : [4, 10, 11, 12, 13, 15, 16, 17, 19, 21, 26]
 solution : [0, 5, 14]


Before reduction : 
 pending  : [4, 10, 11, 12, 13, 15, 16, 17, 19, 21, 26]
 solution : [0, 5, 14]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, 2097152), (13, 16384), (14, 67108864), (15, 33554432), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 4 : {4, 10, 11, 12, 13, 15, 16, 17, 19, 21, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 14]


Before reduction : 
 pending  : []
 solution : [0, 5, 14]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 14]


Solution : [0, 5, 14] has cost 18.


Before backtrack at level 4
 pending : []
 solution : [0, 5, 14]

After backtrack at level 4
 pending : [4, 10, 11, 12, 13, 15, 16, 17, 19, 21, 26]
 solution : [0, 5, 14]


Invert decision for 14 at level 3


New level: 4
 pending : [4, 10, 11, 12, 13, 15, 16, 17, 19, 21, 26]
 solution : [0, 5]


Before reduction : 
 pending  : [4, 10, 11, 12, 13, 15, 16, 17, 19, 21, 26]
 solution : [0, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, 2097152), (13, 16384), (14, -1), (15, 33554432), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [4, 10, 11, 12, 13, 15, 16, 17, 19, 21, 26]
 solution : [0, 5]


Solution : [0, 5] has cost 11.


Decide in level 4 among pending : [4, 10, 11, 12, 13, 15, 16, 17, 19, 21, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, 2097152), (13, 16384), (14, -1), (15, 33554432), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 15 with phase True at level 4

After decision at level 4
 pending : [4, 10, 11, 12, 13, 16, 17, 19, 21, 26]
 solution : [0, 5, 15]


New level: 5
 pending : [4, 10, 11, 12, 13, 16, 17, 19, 21, 26]
 solution : [0, 5, 15]


Before reduction : 
 pending  : [4, 10, 11, 12, 13, 16, 17, 19, 21, 26]
 solution : [0, 5, 15]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, 2097152), (13, 16384), (14, -1), (15, 33554432), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 5 : {4, 10, 11, 12, 13, 16, 17, 19, 21, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 15]


Before reduction : 
 pending  : []
 solution : [0, 5, 15]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 15]


Solution : [0, 5, 15] has cost 18.


Before backtrack at level 5
 pending : []
 solution : [0, 5, 15]

After backtrack at level 5
 pending : [4, 10, 11, 12, 13, 16, 17, 19, 21, 26]
 solution : [0, 5, 15]


Invert decision for 15 at level 4


New level: 5
 pending : [4, 10, 11, 12, 13, 16, 17, 19, 21, 26]
 solution : [0, 5]


Before reduction : 
 pending  : [4, 10, 11, 12, 13, 16, 17, 19, 21, 26]
 solution : [0, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, 2097152), (13, 16384), (14, -1), (15, -1), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [4, 10, 11, 12, 13, 16, 17, 19, 21, 26]
 solution : [0, 5]


Solution : [0, 5] has cost 11.


Decide in level 5 among pending : [4, 10, 11, 12, 13, 16, 17, 19, 21, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, 2097152), (13, 16384), (14, -1), (15, -1), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 12 with phase True at level 5

After decision at level 5
 pending : [4, 10, 11, 13, 16, 17, 19, 21, 26]
 solution : [0, 5, 12]


New level: 6
 pending : [4, 10, 11, 13, 16, 17, 19, 21, 26]
 solution : [0, 5, 12]


Before reduction : 
 pending  : [4, 10, 11, 13, 16, 17, 19, 21, 26]
 solution : [0, 5, 12]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, 2097152), (13, 16384), (14, -1), (15, -1), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, 0), (14, -1), (15, -1), (16, 2048), (17, 8192), (18, -1), (19, 2048), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 6 : {10, 11, 4, 13}

After reduction : 
 pending  : [16, 17, 19, 21, 26]
 solution : [0, 5, 12]


Before reduction : 
 pending  : [16, 17, 19, 21, 26]
 solution : [0, 5, 12]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, 0), (14, -1), (15, -1), (16, 2048), (17, 8192), (18, -1), (19, 2048), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2048), (17, 8192), (18, -1), (19, 2048), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [16, 17, 19, 21, 26]
 solution : [0, 5, 12]


Solution : [0, 5, 12] has cost 20.


Before backtrack at level 6
 pending : [16, 17, 19, 21, 26]
 solution : [0, 5, 12]

After backtrack at level 6
 pending : [16, 17, 19, 21, 26, 4, 10, 11, 13]
 solution : [0, 5, 12]


Invert decision for 12 at level 5


New level: 6
 pending : [16, 17, 19, 21, 26, 4, 10, 11, 13]
 solution : [0, 5]


Before reduction : 
 pending  : [16, 17, 19, 21, 26, 4, 10, 11, 13]
 solution : [0, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2048), (17, 8192), (18, -1), (19, 2048), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, -1), (13, 16384), (14, -1), (15, -1), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [16, 17, 19, 21, 26, 4, 10, 11, 13]
 solution : [0, 5]


Solution : [0, 5] has cost 11.


Decide in level 6 among pending : [16, 17, 19, 21, 26, 4, 10, 11, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, -1), (13, 16384), (14, -1), (15, -1), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 11 with phase True at level 6

After decision at level 6
 pending : [16, 17, 19, 21, 26, 4, 10, 13]
 solution : [0, 5, 11]


New level: 7
 pending : [16, 17, 19, 21, 26, 4, 10, 13]
 solution : [0, 5, 11]


Before reduction : 
 pending  : [16, 17, 19, 21, 26, 4, 10, 13]
 solution : [0, 5, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, 1048576), (12, -1), (13, 16384), (14, -1), (15, -1), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 2048), (17, 8192), (18, -1), (19, 2048), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 7 : {10, 4, 13}

After reduction : 
 pending  : [16, 17, 19, 21, 26]
 solution : [0, 5, 11]


Before reduction : 
 pending  : [16, 17, 19, 21, 26]
 solution : [0, 5, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 2048), (17, 8192), (18, -1), (19, 2048), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2048), (17, 8192), (18, -1), (19, 2048), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 17, 19, 21, 26]
 solution : [0, 5, 11]


Solution : [0, 5, 11] has cost 20.


Before backtrack at level 7
 pending : [16, 17, 19, 21, 26]
 solution : [0, 5, 11]

After backtrack at level 7
 pending : [16, 17, 19, 21, 26, 4, 10, 13]
 solution : [0, 5, 11]


Invert decision for 11 at level 6


New level: 7
 pending : [16, 17, 19, 21, 26, 4, 10, 13]
 solution : [0, 5]


Before reduction : 
 pending  : [16, 17, 19, 21, 26, 4, 10, 13]
 solution : [0, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2048), (17, 8192), (18, -1), (19, 2048), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, -1), (12, -1), (13, 16384), (14, -1), (15, -1), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 17, 19, 21, 26, 4, 10, 13]
 solution : [0, 5]


Solution : [0, 5] has cost 11.


Decide in level 7 among pending : [16, 17, 19, 21, 26, 4, 10, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, -1), (12, -1), (13, 16384), (14, -1), (15, -1), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [16, 19, 21, 26, 4, 10, 13]
 solution : [0, 5, 17]


New level: 8
 pending : [16, 19, 21, 26, 4, 10, 13]
 solution : [0, 5, 17]


Before reduction : 
 pending  : [16, 19, 21, 26, 4, 10, 13]
 solution : [0, 5, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, -1), (12, -1), (13, 16384), (14, -1), (15, -1), (16, 262144), (17, 524288), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16384), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 24576), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32768), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 8 : {16, 19, 13}

After reduction : 
 pending  : [21, 26, 4, 10]
 solution : [0, 5, 17]


Before reduction : 
 pending  : [21, 26, 4, 10]
 solution : [0, 5, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16384), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 24576), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32768), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16384), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 24576), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32768), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [21, 26, 4, 10]
 solution : [0, 5, 17]


Solution : [0, 5, 17] has cost 18.


Before backtrack at level 8
 pending : [21, 26, 4, 10]
 solution : [0, 5, 17]

After backtrack at level 8
 pending : [21, 26, 4, 10, 16, 19, 13]
 solution : [0, 5, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [21, 26, 4, 10, 16, 19, 13]
 solution : [0, 5]


Before reduction : 
 pending  : [21, 26, 4, 10, 16, 19, 13]
 solution : [0, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16384), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 24576), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32768), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, -1), (12, -1), (13, 16384), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [21, 26, 4, 10, 16, 19, 13]
 solution : [0, 5]


Solution : [0, 5] has cost 11.


Decide in level 8 among pending : [21, 26, 4, 10, 16, 19, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, -1), (12, -1), (13, 16384), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 16 with phase True at level 8

After decision at level 8
 pending : [21, 26, 4, 10, 19, 13]
 solution : [0, 5, 16]


New level: 9
 pending : [21, 26, 4, 10, 19, 13]
 solution : [0, 5, 16]


Before reduction : 
 pending  : [21, 26, 4, 10, 19, 13]
 solution : [0, 5, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, -1), (12, -1), (13, 16384), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 8192), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16384), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 24576), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32768), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 9 : {19, 13}

After reduction : 
 pending  : [21, 26, 4, 10]
 solution : [0, 5, 16]


Before reduction : 
 pending  : [21, 26, 4, 10]
 solution : [0, 5, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16384), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 24576), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32768), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16384), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 24576), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32768), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [21, 26, 4, 10]
 solution : [0, 5, 16]


Solution : [0, 5, 16] has cost 18.


Before backtrack at level 9
 pending : [21, 26, 4, 10]
 solution : [0, 5, 16]

After backtrack at level 9
 pending : [21, 26, 4, 10, 19, 13]
 solution : [0, 5, 16]


Invert decision for 16 at level 8


New level: 9
 pending : [21, 26, 4, 10, 19, 13]
 solution : [0, 5]


Before reduction : 
 pending  : [21, 26, 4, 10, 19, 13]
 solution : [0, 5]

Essensial at level 9 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16384), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 24576), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32768), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, -1), (12, -1), (13, 8192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [21, 26, 4, 10, 13]
 solution : [0, 5, 19]


Before reduction : 
 pending  : [21, 26, 4, 10, 13]
 solution : [0, 5, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, -1), (12, -1), (13, 8192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, -1), (12, -1), (13, 8192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [21, 26, 4, 10, 13]
 solution : [0, 5, 19]


Solution : [0, 5, 19] has cost 18.


Before backtrack at level 9
 pending : [21, 26, 4, 10, 13]
 solution : [0, 5, 19]

After backtrack at level 9
 pending : [21, 26, 4, 10, 13, 19]
 solution : [0, 5]


Before backtrack at level 8
 pending : [21, 26, 4, 10, 13, 19]
 solution : [0, 5]

After backtrack at level 8
 pending : [21, 26, 4, 10, 13, 19, 16]
 solution : [0, 5]


Before backtrack at level 7
 pending : [21, 26, 4, 10, 13, 19, 16]
 solution : [0, 5]

After backtrack at level 7
 pending : [21, 26, 4, 10, 13, 19, 16, 17]
 solution : [0, 5]


Before backtrack at level 6
 pending : [21, 26, 4, 10, 13, 19, 16, 17]
 solution : [0, 5]

After backtrack at level 6
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11]
 solution : [0, 5]


Before backtrack at level 5
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11]
 solution : [0, 5]

After backtrack at level 5
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12]
 solution : [0, 5]


Before backtrack at level 4
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12]
 solution : [0, 5]

After backtrack at level 4
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15]
 solution : [0, 5]


Before backtrack at level 3
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15]
 solution : [0, 5]

After backtrack at level 3
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14]
 solution : [0, 5]


Before backtrack at level 2
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14]
 solution : [0, 5]

After backtrack at level 2
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14, 22]
 solution : [0, 5]


Invert decision for 5 at level 1


New level: 2
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14, 22]
 solution : [0]


Before reduction : 
 pending  : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14, 22]
 solution : [0]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 49152), (11, -1), (12, -1), (13, 8192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, 268435456), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, 536870912), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14, 22]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 2 among pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, 268435456), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, 536870912), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 22 with phase True at level 2

After decision at level 2
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14]
 solution : [0, 22]


New level: 3
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14]
 solution : [0, 22]


Before reduction : 
 pending  : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14]
 solution : [0, 22]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, 268435456), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, 536870912), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 3 : {4, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 26}

After reduction : 
 pending  : []
 solution : [0, 22]


Before reduction : 
 pending  : []
 solution : [0, 22]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : []
 solution : [0, 22]


Solution : [0, 22] has cost 10.


Before backtrack at level 3
 pending : []
 solution : [0, 22]

After backtrack at level 3
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14]
 solution : [0, 22]


Invert decision for 22 at level 2


New level: 3
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14]
 solution : [0]


Before reduction : 
 pending  : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14]
 solution : [0]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, 268435456), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 3 among pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, 268435456), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 14 with phase True at level 3

After decision at level 3
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15]
 solution : [0, 14]


New level: 4
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15]
 solution : [0, 14]


Before reduction : 
 pending  : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15]
 solution : [0, 14]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, 268435456), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 4 : {4, 10, 11, 12, 13, 15, 16, 17, 19, 21, 26}

After reduction : 
 pending  : []
 solution : [0, 14]


Before reduction : 
 pending  : []
 solution : [0, 14]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [0, 14]


Solution : [0, 14] has cost 13.


Before backtrack at level 4
 pending : []
 solution : [0, 14]

After backtrack at level 4
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15]
 solution : [0, 14]


Invert decision for 14 at level 3


New level: 4
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15]
 solution : [0]


Before reduction : 
 pending  : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15]
 solution : [0]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 4 among pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 15 with phase True at level 4

After decision at level 4
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12]
 solution : [0, 15]


New level: 5
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12]
 solution : [0, 15]


Before reduction : 
 pending  : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12]
 solution : [0, 15]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 134217728), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 5 : {4, 10, 11, 12, 13, 16, 17, 19, 21, 26}

After reduction : 
 pending  : []
 solution : [0, 15]


Before reduction : 
 pending  : []
 solution : [0, 15]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 15]


Solution : [0, 15] has cost 13.


Before backtrack at level 5
 pending : []
 solution : [0, 15]

After backtrack at level 5
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12]
 solution : [0, 15]


Invert decision for 15 at level 4


New level: 5
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12]
 solution : [0]


Before reduction : 
 pending  : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12]
 solution : [0]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 5 among pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 12 with phase True at level 5

After decision at level 5
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11]
 solution : [0, 12]


New level: 6
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11]
 solution : [0, 12]


Before reduction : 
 pending  : [21, 26, 4, 10, 13, 19, 16, 17, 11]
 solution : [0, 12]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, 0), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 6 : {10, 11, 4, 13}

After reduction : 
 pending  : [21, 26, 19, 16, 17]
 solution : [0, 12]


Before reduction : 
 pending  : [21, 26, 19, 16, 17]
 solution : [0, 12]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, 0), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [21, 26, 19, 16, 17]
 solution : [0, 12]


Solution : [0, 12] has cost 15.


Before backtrack at level 6
 pending : [21, 26, 19, 16, 17]
 solution : [0, 12]

After backtrack at level 6
 pending : [21, 26, 19, 16, 17, 4, 10, 13, 11]
 solution : [0, 12]


Invert decision for 12 at level 5


New level: 6
 pending : [21, 26, 19, 16, 17, 4, 10, 13, 11]
 solution : [0]


Before reduction : 
 pending  : [21, 26, 19, 16, 17, 4, 10, 13, 11]
 solution : [0]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, -1), (13, 65536), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [21, 26, 19, 16, 17, 4, 10, 13, 11]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 6 among pending : [21, 26, 19, 16, 17, 4, 10, 13, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, -1), (13, 65536), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 11 with phase True at level 6

After decision at level 6
 pending : [21, 26, 19, 16, 17, 4, 10, 13]
 solution : [0, 11]


New level: 7
 pending : [21, 26, 19, 16, 17, 4, 10, 13]
 solution : [0, 11]


Before reduction : 
 pending  : [21, 26, 19, 16, 17, 4, 10, 13]
 solution : [0, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, 4194304), (12, -1), (13, 65536), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 7 : {10, 4, 13}

After reduction : 
 pending  : [21, 26, 19, 16, 17]
 solution : [0, 11]


Before reduction : 
 pending  : [21, 26, 19, 16, 17]
 solution : [0, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [21, 26, 19, 16, 17]
 solution : [0, 11]


Solution : [0, 11] has cost 15.


Before backtrack at level 7
 pending : [21, 26, 19, 16, 17]
 solution : [0, 11]

After backtrack at level 7
 pending : [21, 26, 19, 16, 17, 4, 10, 13]
 solution : [0, 11]


Invert decision for 11 at level 6


New level: 7
 pending : [21, 26, 19, 16, 17, 4, 10, 13]
 solution : [0]


Before reduction : 
 pending  : [21, 26, 19, 16, 17, 4, 10, 13]
 solution : [0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, 32768), (18, -1), (19, 8192), (20, -1), (21, 512), (22, -1), (23, -1), (24, -1), (25, -1), (26, 512), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, -1), (12, -1), (13, 65536), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [21, 26, 19, 16, 17, 4, 10, 13]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 7 among pending : [21, 26, 19, 16, 17, 4, 10, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, -1), (12, -1), (13, 65536), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [21, 26, 19, 16, 4, 10, 13]
 solution : [0, 17]


New level: 8
 pending : [21, 26, 19, 16, 4, 10, 13]
 solution : [0, 17]


Before reduction : 
 pending  : [21, 26, 19, 16, 4, 10, 13]
 solution : [0, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, -1), (12, -1), (13, 65536), (14, -1), (15, -1), (16, 1048576), (17, 2097152), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 98304), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 8 : {16, 19, 13}

After reduction : 
 pending  : [21, 26, 4, 10]
 solution : [0, 17]


Before reduction : 
 pending  : [21, 26, 4, 10]
 solution : [0, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 98304), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 98304), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [21, 26, 4, 10]
 solution : [0, 17]


Solution : [0, 17] has cost 13.


Before backtrack at level 8
 pending : [21, 26, 4, 10]
 solution : [0, 17]

After backtrack at level 8
 pending : [21, 26, 4, 10, 19, 16, 13]
 solution : [0, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [21, 26, 4, 10, 19, 16, 13]
 solution : [0]


Before reduction : 
 pending  : [21, 26, 4, 10, 19, 16, 13]
 solution : [0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 98304), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, -1), (12, -1), (13, 65536), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [21, 26, 4, 10, 19, 16, 13]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 8 among pending : [21, 26, 4, 10, 19, 16, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, -1), (12, -1), (13, 65536), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Decide 16 with phase True at level 8

After decision at level 8
 pending : [21, 26, 4, 10, 19, 13]
 solution : [0, 16]


New level: 9
 pending : [21, 26, 4, 10, 19, 13]
 solution : [0, 16]


Before reduction : 
 pending  : [21, 26, 4, 10, 19, 13]
 solution : [0, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, -1), (12, -1), (13, 65536), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, -1), (19, 32768), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 98304), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 9 : {19, 13}

After reduction : 
 pending  : [21, 26, 4, 10]
 solution : [0, 16]


Before reduction : 
 pending  : [21, 26, 4, 10]
 solution : [0, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 98304), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 98304), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [21, 26, 4, 10]
 solution : [0, 16]


Solution : [0, 16] has cost 13.


Before backtrack at level 9
 pending : [21, 26, 4, 10]
 solution : [0, 16]

After backtrack at level 9
 pending : [21, 26, 4, 10, 19, 13]
 solution : [0, 16]


Invert decision for 16 at level 8


New level: 9
 pending : [21, 26, 4, 10, 19, 13]
 solution : [0]


Before reduction : 
 pending  : [21, 26, 4, 10, 19, 13]
 solution : [0]

Essensial at level 9 : {19}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 98304), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, -1), (12, -1), (13, 32768), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [21, 26, 4, 10, 13]
 solution : [0, 19]


Before reduction : 
 pending  : [21, 26, 4, 10, 13]
 solution : [0, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, -1), (12, -1), (13, 32768), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 196608), (11, -1), (12, -1), (13, 32768), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [21, 26, 4, 10, 13]
 solution : [0, 19]


Solution : [0, 19] has cost 13.


Before backtrack at level 9
 pending : [21, 26, 4, 10, 13]
 solution : [0, 19]

After backtrack at level 9
 pending : [21, 26, 4, 10, 13, 19]
 solution : [0]


Before backtrack at level 8
 pending : [21, 26, 4, 10, 13, 19]
 solution : [0]

After backtrack at level 8
 pending : [21, 26, 4, 10, 13, 19, 16]
 solution : [0]


Before backtrack at level 7
 pending : [21, 26, 4, 10, 13, 19, 16]
 solution : [0]

After backtrack at level 7
 pending : [21, 26, 4, 10, 13, 19, 16, 17]
 solution : [0]


Before backtrack at level 6
 pending : [21, 26, 4, 10, 13, 19, 16, 17]
 solution : [0]

After backtrack at level 6
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11]
 solution : [0]


Before backtrack at level 5
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11]
 solution : [0]

After backtrack at level 5
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12]
 solution : [0]


Before backtrack at level 4
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12]
 solution : [0]

After backtrack at level 4
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15]
 solution : [0]


Before backtrack at level 3
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15]
 solution : [0]

After backtrack at level 3
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14]
 solution : [0]


Before backtrack at level 2
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14]
 solution : [0]

After backtrack at level 2
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14, 22]
 solution : [0]


Before backtrack at level 1
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14, 22]
 solution : [0]

After backtrack at level 1
 pending : [21, 26, 4, 10, 13, 19, 16, 17, 11, 12, 15, 14, 22, 5]
 solution : [0]


================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/toy_consensus.ivy: node=3,value=3]

================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 10

[MIN NOTE]: maximum branch and bound depth: 9

[MIN NOTE]: number of definitions: 2

invariant [def_didNotVote] forall N. didNotVote(N) = (forall V. ~vote(N,V)) # definition, qcost: 4

invariant [def_chosenAt] forall V,Q. chosenAt(Q,V) = (forall N. member(N,Q) -> vote(N,V)) # definition, qcost: 6

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 22]

[MIN NOTE]: solution length: 2

invariant [invar_0] forall VALUE0,VALUE1,NODE0. ~vote(NODE0,VALUE0) | ~vote(NODE0,VALUE1) | VALUE0 = VALUE1 # qcost: 6

invariant [invar_22] forall VALUE0. (exists QUORUM0. chosenAt(QUORUM0,VALUE0) | ~decision(VALUE0)) # qcost: 4

[MIN NOTE]: number of total invariants: 4

[MIN NOTE]: total qCost: 20




[QRM NOTE]: Time elapsed since start: 9.916 seconds

[QRM NOTE]: Time elapsed since last: 0.116 seconds

[QRM NOTE]: Peak memory: 2654032 bytes


=============================================

	[IVY_CHECK] Ivy Check for Rmin

=============================================


=====================================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy]

=====================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 10: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 15: def2
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 16: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 42: def_didNotVote
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 43: def_chosenAt
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 44: invar_0
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 45: invar_22

    The following action implementations are present:
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 23: implementation of cast_vote
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 28: implementation of decide

    The following initializers are present:
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 18: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 42: def_didNotVote ... PASS
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 43: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 44: invar_0 ... PASS
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 45: invar_22 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:cast_vote
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 42: def_didNotVote ... PASS
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 43: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 44: invar_0 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 45: invar_22 ... PASS
        (internal) ext:decide
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 42: def_didNotVote ... PASS
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 43: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 44: invar_0 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 45: invar_22 ... PASS

    The following program assertions are treated as assumptions:
        in action cast_vote when called from the environment:
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 24: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy: line 29: assumption

OK
[IVY_CHECK RESULT]: PASS


======================================================================================================================

	[MUS]: Extract strengthening assertion for [ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.ivy]

======================================================================================================================

[MUS NOTE]: number of strengthening assertions: 2

[MUS NOTE]: min mus: {0, 1}

invariant [invar_0] forall VALUE0,VALUE1,NODE0. ~vote(NODE0,VALUE0) | ~vote(NODE0,VALUE1) | VALUE0 = VALUE1 # qcost: 6

invariant [invar_22] forall VALUE0. (exists QUORUM0. chosenAt(QUORUM0,VALUE0) | ~decision(VALUE0)) # qcost: 4


============================================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy]

============================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 10: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 15: def2
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 16: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 37: invar7
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 42: invar_0
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 43: invar_22

    The following action implementations are present:
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 23: implementation of cast_vote
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 28: implementation of decide

    The following initializers are present:
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 18: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 37: invar7 ... PASS
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 42: invar_0 ... PASS
        ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 43: invar_22 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:cast_vote
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 37: invar7 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 42: invar_0 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 43: invar_22 ... PASS
        (internal) ext:decide
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 37: invar7 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 42: invar_0 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 43: invar_22 ... PASS

    The following program assertions are treated as assumptions:
        in action cast_vote when called from the environment:
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 24: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/toy_consensus.node_3_value_3.0.assert.ivy: line 29: assumption

OK
[IVY_CHECK RESULT]: PASS

[ASSERT_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 13.267 seconds

[QRM NOTE]: Time elapsed since last: 3.351 seconds

[QRM NOTE]: Peak memory: 2673317 bytes


********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/toy_consensus.ivy

********************************************************************

[QRM RESULT]: PASS

