
********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************


******************************************************************************

	[Synthesize Rmin]: [ivybench/sym/ivy/firewall.ivy: node=1]

******************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.ivy -s node=1 -f 1 -g -w -r -b -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


====================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall.ivy: node=1]

====================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 3

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 1

[QRM NOTE]: Time elapsed since start: 0.022 seconds

[QRM NOTE]: Time elapsed since last: 0.022 seconds

[QRM NOTE]: Peak memory: 20546 bytes


===================================

	Forward reachability

===================================

building bdd for atoms

building bdd for initial action

building bdd for axioms

building bdd for actions

building bdd for action: send_from_internal(fml:src,fml:dst)

building bdd for action: send_to_internal(fml:src,fml:dst)

building bdd for abstractions

start symbolic image computation

start extracting cubes

[FW NOTE]: number of reachable cubes: 1


=======================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall: node=1]

=======================================================================================

sort: node=['node0']
predicate: allowed_in('node',)
predicate: internal('node',)
predicate: sent('node', 'node')
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'internal(node0)', 'sent(node0,node0)']

0-0

[QRM NOTE]: Time elapsed since start: 0.058 seconds

[QRM NOTE]: Time elapsed since last: 0.036 seconds

[QRM NOTE]: Peak memory: 1080767 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 0.061 seconds

[QRM NOTE]: Time elapsed since last: 0.003 seconds

[QRM NOTE]: Peak memory: 31891 bytes


===========================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall.ivy: node=1]

===========================================================================================


======================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=1]

======================================================================================


=== Prime Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : --1
0     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : 1--
1     : ['allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 2

[PRIME NOTE]: number of orbits before merging: 2

[PRIME NOTE]: number of primes: 2

[QRM NOTE]: Time elapsed since start: 0.072 seconds

[QRM NOTE]: Time elapsed since last: 0.011 seconds

[QRM NOTE]: Peak memory: 1086992 bytes


================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall.ivy: node=1]

================================================================================

definition primes: set()


New level: 0
 pending : [0, 1]
 solution : []


Before reduction : 
 pending  : [0, 1]
 solution : []

Essensial at level 0 : {0, 1}

Before removed
 coverage : [(0, -1), (1, -1)]

After removed
 coverage : [(0, -1), (1, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : []
 solution : [0, 1]


Before reduction : 
 pending  : []
 solution : [0, 1]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1)]

After removed
 coverage : [(0, -1), (1, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : []
 solution : [0, 1]

[QRM NOTE]: Time elapsed since start: 0.076 seconds

[QRM NOTE]: Time elapsed since last: 0.004 seconds

[QRM NOTE]: Peak memory: 39418 bytes


====================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall.ivy: node=1]

====================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : --1
0     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node0)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0',))), Const('node0', EnumeratedSort('node', ('node0',))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0',))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0',))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0',)): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0',)): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node0,node0)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0',)), EnumeratedSort('node', ('node0',)), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0',)), EnumeratedSort('node', ('node0',)))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0',)): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0',)): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0',))), Var('NODE0', EnumeratedSort('node', ('node0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : 1--
1     : ['allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0',))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0',))): [node$0$allowed_in$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0',)): [node$0$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0',)): node$0$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0',)), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0',)),)}

sign_func_name2count:  {'0$allowed_in': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0',)): [node$0$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0',)): node$0$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~allowed_in(NODE0)


==============================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=1]

==============================================================================================


=== Prime Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : --1
0     : ['sent(node0,node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : 1--
1     : ['allowed_in(node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~allowed_in(NODE0)
qcost : 2



[QRM NOTE]: Time elapsed since start: 0.150 seconds

[QRM NOTE]: Time elapsed since last: 0.074 seconds

[QRM NOTE]: Peak memory: 1767650 bytes


=============================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall.ivy: node=1]

=============================================================================


New level: 1
 pending : []
 solution : [0, 1]


Before reduction : 
 pending  : []
 solution : [0, 1]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1)]

After removed
 coverage : [(0, -1), (1, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : []
 solution : [0, 1]


Solution : [0, 1] has cost 4.


Before backtrack at level 1
 pending : []
 solution : [0, 1]

After backtrack at level 1
 pending : []
 solution : [0, 1]


============================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall.ivy: node=1]

============================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 4

[MIN NOTE]: maximum branch and bound depth: 1

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 1]

[MIN NOTE]: solution length: 2

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_1] forall NODE0. ~allowed_in(NODE0) # qcost: 2

[MIN NOTE]: number of total invariants: 2

[MIN NOTE]: total qCost: 4




[QRM NOTE]: Time elapsed since start: 0.215 seconds

[QRM NOTE]: Time elapsed since last: 0.065 seconds

[QRM NOTE]: Peak memory: 1759382 bytes


*********************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym/ivy/firewall.ivy: node=1]

*********************************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.node_1.0.ivy -s node=2 -f 2 -g -w -r -b -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall.node_1.0.ivy: node=2]

=============================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 8

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 2

[QRM NOTE]: Time elapsed since start: 0.038 seconds

[QRM NOTE]: Time elapsed since last: 0.038 seconds

[QRM NOTE]: Peak memory: 63646 bytes


===================================

	Forward reachability

===================================

building bdd for atoms

building bdd for initial action

building bdd for axioms

building bdd for actions

building bdd for action: send_from_internal(fml:src,fml:dst)

building bdd for action: send_to_internal(fml:src,fml:dst)

building bdd for abstractions

start symbolic image computation

start extracting cubes

[FW NOTE]: number of reachable cubes: 3


=======================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall: node=2]

=======================================================================================

sort: node=['node0', 'node1']
predicate: allowed_in('node',)
predicate: sent('node', 'node')
predicate: internal('node',)
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'internal(node0)', 'internal(node1)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node1,node0)', 'sent(node1,node1)']

00--0000
011001-0
10010-10

[QRM NOTE]: Time elapsed since start: 0.229 seconds

[QRM NOTE]: Time elapsed since last: 0.191 seconds

[QRM NOTE]: Peak memory: 1147101 bytes


=========================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym/ivy/firewall.node_1.0.ivy: node=2]

=========================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.241 seconds

[QRM NOTE]: Time elapsed since last: 0.012 seconds

[QRM NOTE]: Peak memory: 104422 bytes

next size: node=2


******************************************************************************

	[Synthesize Rmin]: [ivybench/sym/ivy/firewall.ivy: node=2]

******************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.ivy -s node=2 -f 1 -g -w -r -b -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 0.015 seconds

[QRM NOTE]: Time elapsed since last: 0.015 seconds

[QRM NOTE]: Peak memory: 1802 bytes


===========================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall.ivy: node=2]

===========================================================================================


======================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=2]

======================================================================================


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : ----1---
0     : ['sent(node0,node0)']
1     : -------1
1     : ['sent(node1,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -10-----
2     : ['allowed_in(node1)', '~internal(node0)']
3     : 1--0----
3     : ['allowed_in(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : -1-1----
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1-1-----
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 1
num_suborbits: 1
6 (*) : 11------
6     : ['allowed_in(node0)', 'allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 2
num_suborbits: 1
7 (*) : 1-----0-
7     : ['allowed_in(node0)', '~sent(node1,node0)']
8     : -1---0--
8     : ['allowed_in(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 4
num_suborbits: 2
9 (*) : 0--1--1-
9     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
10     : -01--1--
10     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
15 (*) : 0--1-1--
15     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
16     : -01---1-
16     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 4
num_suborbits: 2
11 (*) : 0-0---1-
11     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
12     : -0-0-1--
12     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
13 (*) : 0-0--1--
13     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
14     : -0-0--1-
14     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
17 (*) : 0----01-
17     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
18     : -0---10-
18     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
19 (*) : --1--01-
19     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
20     : ---1-10-
20     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
21 (*) : --11-1--
21     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
22     : --11--1-
22     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
23 (*) : --00--1-
23     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
24     : --00-1--
24     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 2
num_suborbits: 1
25 (*) : 00----1-
25     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
26     : 00---1--
26     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 2
num_suborbits: 1
27 (*) : --0--10-
27     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
28     : ---0-01-
28     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 13

[PRIME NOTE]: number of orbits before merging: 15

[PRIME NOTE]: number of primes: 29

[QRM NOTE]: Time elapsed since start: 0.028 seconds

[QRM NOTE]: Time elapsed since last: 0.014 seconds

[QRM NOTE]: Peak memory: 1101625 bytes


================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall.ivy: node=2]

================================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : []

Essensial at level 0 : {0, 4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, 12), (6, 12), (7, 4), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 4]


Before reduction : 
 pending  : [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 4]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, 12), (6, 12), (7, 4), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4)]

After removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, 12), (6, 12), (7, 4), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 4]

[QRM NOTE]: Time elapsed since start: 0.032 seconds

[QRM NOTE]: Time elapsed since last: 0.003 seconds

[QRM NOTE]: Peak memory: 52578 bytes


====================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall.ivy: node=2]

====================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : ----1---
0     : ['sent(node0,node0)']
1     : -------1
1     : ['sent(node1,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node0)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node0,node0)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 4 =====================
size : 2
num_suborbits: 1
7 (*) : 1-----0-
7     : ['allowed_in(node0)', '~sent(node1,node0)']
8     : -1---0--
8     : ['allowed_in(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', '~sent(NODE1,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. ~allowed_in(NODE0) | sent(NODE1,NODE0) | NODE0 = NODE1


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -10-----
2     : ['allowed_in(node1)', '~internal(node0)']
3     : 1--0----
3     : ['allowed_in(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~internal(node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0 | node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~internal(node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),)}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. internal(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : -1-1----
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1-1-----
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$0, node$0$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0; node$0$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),)}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0; node$0$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$internal$0': [node$0$allowed_in$0$0; node$0$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$internal$0': node$0$allowed_in$0$0; node$0$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)


=== Prime Orbit 3 =====================
size : 1
num_suborbits: 1
6 (*) : 11------
6     : ['allowed_in(node0)', 'allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),)}

sign_func_name2count:  {'0$allowed_in': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: exists NODE0. ~allowed_in(NODE0)


=== Prime Orbit 5 =====================
size : 4
num_suborbits: 2
9 (*) : 0--1--1-
9     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
10     : -01--1--
10     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
15 (*) : 0--1-1--
15     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
16     : -01---1-
16     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'internal(node1)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'internal(node1)', 'sent(node0,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', 'internal(node1)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE3)', 'internal(NODE0)', 'sent(NODE1,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0,NODE3. allowed_in(NODE3) | ~internal(NODE0) | ~sent(NODE1,NODE2) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))


=== Prime Orbit 6 =====================
size : 4
num_suborbits: 2
11 (*) : 0-0---1-
11     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
12     : -0-0-1--
12     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
13 (*) : 0-0--1--
13     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
14     : -0-0--1-
14     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node0)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node0)', 'sent(node0,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~internal(node0)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$internal$0': [node$1$allowed_in$0$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$internal$0': node$1$allowed_in$0$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE2)', '~internal(NODE2)', 'sent(NODE0,NODE1)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0. allowed_in(NODE2) | internal(NODE2) | ~sent(NODE0,NODE1) | ((NODE1 ~= NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE0 = NODE1))


=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
17 (*) : 0----01-
17     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
18     : -0---10-
18     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~sent(node0,node1)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~sent(node0,node1)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. allowed_in(NODE1) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
19 (*) : --1--01-
19     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
20     : ---1-10-
20     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~sent(node0,node1)', 'sent(node1,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', '~sent(node0,node1)', 'sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'0$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'internal(NODE0)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. ~sent(NODE1,NODE0) | ~internal(NODE0) | sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
21 (*) : --11-1--
21     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
22     : --11--1-
22     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$1, node$0$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$internal$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$0$0, node$0$internal$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'0$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$0$0, node$0$internal$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$0], 'node$0$internal$0; node$0$sent$1': [node$0$internal$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$0, 'node$0$internal$0; node$0$sent$1': node$0$internal$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'internal(NODE1)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. ~internal(NODE0) | ~internal(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
23 (*) : --00--1-
23     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
24     : --00-1--
24     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node1)', 'sent(node1,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$internal$0$1, node$0$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$internal$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$internal$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node1)', 'sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$internal$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$1], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$1, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', '~internal(NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. internal(NODE1) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 11 =====================
size : 2
num_suborbits: 1
25 (*) : 00----1-
25     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
26     : 00---1--
26     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~allowed_in(node1)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$1, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$allowed_in$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~allowed_in(node1)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$allowed_in$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$1], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$1, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE0)', '~allowed_in(NODE1)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. allowed_in(NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 12 =====================
size : 2
num_suborbits: 1
27 (*) : --0--10-
27     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
28     : ---0-01-
28     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$1$0, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. internal(NODE0) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


==============================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=2]

==============================================================================================


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : ----1---
0     : ['sent(node0,node0)']
1     : -------1
1     : ['sent(node1,node1)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 4 =====================
size : 2
num_suborbits: 1
7 (*) : 1-----0-
7     : ['allowed_in(node0)', '~sent(node1,node0)']
8     : -1---0--
8     : ['allowed_in(node1)', '~sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~allowed_in(NODE0) | sent(NODE1,NODE0) | NODE0 = NODE1
qcost : 5




=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -10-----
2     : ['allowed_in(node1)', '~internal(node0)']
3     : 1--0----
3     : ['allowed_in(node0)', '~internal(node1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. internal(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 5




=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : -1-1----
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1-1-----
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)
qcost : 3




=== Prime Orbit 3 =====================
size : 1
num_suborbits: 1
6 (*) : 11------
6     : ['allowed_in(node0)', 'allowed_in(node1)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists NODE0. ~allowed_in(NODE0)
qcost : 2




=== Prime Orbit 5 =====================
size : 4
num_suborbits: 2
9 (*) : 0--1--1-
9     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
10     : -01--1--
10     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
15 (*) : 0--1-1--
15     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
16     : -01---1-
16     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE1,NODE2,NODE0,NODE3. allowed_in(NODE3) | ~internal(NODE0) | ~sent(NODE1,NODE2) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))
qcost : 13




=== Prime Orbit 6 =====================
size : 4
num_suborbits: 2
11 (*) : 0-0---1-
11     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
12     : -0-0-1--
12     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
13 (*) : 0-0--1--
13     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
14     : -0-0--1-
14     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0. allowed_in(NODE2) | internal(NODE2) | ~sent(NODE0,NODE1) | ((NODE1 ~= NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE0 = NODE1))
qcost : 10




=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
17 (*) : 0----01-
17     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
18     : -0---10-
18     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. allowed_in(NODE1) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
19 (*) : --1--01-
19     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
20     : ---1-10-
20     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. ~sent(NODE1,NODE0) | ~internal(NODE0) | sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
21 (*) : --11-1--
21     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
22     : --11--1-
22     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. ~internal(NODE0) | ~internal(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
23 (*) : --00--1-
23     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
24     : --00-1--
24     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. internal(NODE1) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 11 =====================
size : 2
num_suborbits: 1
25 (*) : 00----1-
25     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
26     : 00---1--
26     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. allowed_in(NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 12 =====================
size : 2
num_suborbits: 1
27 (*) : --0--10-
27     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
28     : ---0-01-
28     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. internal(NODE0) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6



[QRM NOTE]: Time elapsed since start: 0.198 seconds

[QRM NOTE]: Time elapsed since last: 0.167 seconds

[QRM NOTE]: Peak memory: 1837451 bytes


=============================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall.ivy: node=2]

=============================================================================


New level: 1
 pending : [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 4]


Before reduction : 
 pending  : [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 4]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, 12), (6, 12), (7, 4), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4)]

After removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, 12), (6, 12), (7, 4), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4)]

Covered at level 1 : set()

After reduction : 
 pending  : [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 4]


Solution : [0, 4] has cost 7.


Decide in level 1 among pending : [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12]

Coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, 12), (6, 12), (7, 4), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4)]

Decide 5 with phase True at level 1

After decision at level 1
 pending : [1, 2, 3, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 4, 5]


New level: 2
 pending : [1, 2, 3, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 4, 5]


Before reduction : 
 pending  : [1, 2, 3, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 4, 5]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, 12), (6, 12), (7, 4), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4)]

After removed
 coverage : [(0, -1), (1, 8), (2, 2), (3, 4), (4, -1), (5, -1), (6, 5), (7, 1), (8, 0), (9, 1), (10, 8), (11, 2), (12, 2)]

Covered at level 2 : {8}

After reduction : 
 pending  : [1, 2, 3, 6, 7, 9, 10, 11, 12]
 solution : [0, 4, 5]


Before reduction : 
 pending  : [1, 2, 3, 6, 7, 9, 10, 11, 12]
 solution : [0, 4, 5]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 2), (3, 4), (4, -1), (5, -1), (6, 5), (7, 1), (8, 0), (9, 1), (10, 8), (11, 2), (12, 2)]

After removed
 coverage : [(0, -1), (1, 8), (2, 2), (3, 4), (4, -1), (5, -1), (6, 5), (7, 1), (8, -1), (9, 1), (10, 8), (11, 2), (12, 2)]

Covered at level 2 : set()

After reduction : 
 pending  : [1, 2, 3, 6, 7, 9, 10, 11, 12]
 solution : [0, 4, 5]


Solution : [0, 4, 5] has cost 20.


Decide in level 2 among pending : [1, 2, 3, 6, 7, 9, 10, 11, 12]

Coverage : [(0, -1), (1, 8), (2, 2), (3, 4), (4, -1), (5, -1), (6, 5), (7, 1), (8, -1), (9, 1), (10, 8), (11, 2), (12, 2)]

Decide 1 with phase True at level 2

After decision at level 2
 pending : [2, 3, 6, 7, 9, 10, 11, 12]
 solution : [0, 4, 5, 1]


New level: 3
 pending : [2, 3, 6, 7, 9, 10, 11, 12]
 solution : [0, 4, 5, 1]


Before reduction : 
 pending  : [2, 3, 6, 7, 9, 10, 11, 12]
 solution : [0, 4, 5, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 2), (3, 4), (4, -1), (5, -1), (6, 5), (7, 1), (8, -1), (9, 1), (10, 8), (11, 2), (12, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, 2), (7, 1), (8, -1), (9, 1), (10, 2), (11, 2), (12, 1)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 3, 6, 7, 9, 10, 11, 12]
 solution : [0, 4, 5, 1]


Solution : [0, 4, 5, 1] has cost 25.


Decide in level 3 among pending : [2, 3, 6, 7, 9, 10, 11, 12]

Coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, 2), (7, 1), (8, -1), (9, 1), (10, 2), (11, 2), (12, 1)]

Decide 6 with phase True at level 3

After decision at level 3
 pending : [2, 3, 7, 9, 10, 11, 12]
 solution : [0, 4, 5, 1, 6]


New level: 4
 pending : [2, 3, 7, 9, 10, 11, 12]
 solution : [0, 4, 5, 1, 6]


Before reduction : 
 pending  : [2, 3, 7, 9, 10, 11, 12]
 solution : [0, 4, 5, 1, 6]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, 2), (7, 1), (8, -1), (9, 1), (10, 2), (11, 2), (12, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 1), (10, 0), (11, 0), (12, 0)]

Covered at level 4 : {10, 11, 12, 7}

After reduction : 
 pending  : [2, 3, 9]
 solution : [0, 4, 5, 1, 6]


Before reduction : 
 pending  : [2, 3, 9]
 solution : [0, 4, 5, 1, 6]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 1), (10, 0), (11, 0), (12, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [2, 3, 9]
 solution : [0, 4, 5, 1, 6]


Solution : [0, 4, 5, 1, 6] has cost 35.


Decide in level 4 among pending : [2, 3, 9]

Coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

Decide 2 with phase True at level 4

After decision at level 4
 pending : [3, 9]
 solution : [0, 4, 5, 1, 6, 2]


New level: 5
 pending : [3, 9]
 solution : [0, 4, 5, 1, 6, 2]


Before reduction : 
 pending  : [3, 9]
 solution : [0, 4, 5, 1, 6, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {9, 3}

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 6, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 6, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 6, 2]


Solution : [0, 4, 5, 1, 6, 2] has cost 38.


Before backtrack at level 5
 pending : []
 solution : [0, 4, 5, 1, 6, 2]

After backtrack at level 5
 pending : [3, 9]
 solution : [0, 4, 5, 1, 6, 2]


Invert decision for 2 at level 4


New level: 5
 pending : [3, 9]
 solution : [0, 4, 5, 1, 6]


Before reduction : 
 pending  : [3, 9]
 solution : [0, 4, 5, 1, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 9]
 solution : [0, 4, 5, 1, 6]


Solution : [0, 4, 5, 1, 6] has cost 35.


Decide in level 5 among pending : [3, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

Decide 3 with phase True at level 5

After decision at level 5
 pending : [9]
 solution : [0, 4, 5, 1, 6, 3]


New level: 6
 pending : [9]
 solution : [0, 4, 5, 1, 6, 3]


Before reduction : 
 pending  : [9]
 solution : [0, 4, 5, 1, 6, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : {9}

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 6, 3]


Before reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 6, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 6, 3]


Solution : [0, 4, 5, 1, 6, 3] has cost 37.


Before backtrack at level 6
 pending : []
 solution : [0, 4, 5, 1, 6, 3]

After backtrack at level 6
 pending : [9]
 solution : [0, 4, 5, 1, 6, 3]


Invert decision for 3 at level 5


New level: 6
 pending : [9]
 solution : [0, 4, 5, 1, 6]


Before reduction : 
 pending  : [9]
 solution : [0, 4, 5, 1, 6]

Essensial at level 6 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 6, 9]


Before reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 6, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 6, 9]


Solution : [0, 4, 5, 1, 6, 9] has cost 41.


Before backtrack at level 6
 pending : []
 solution : [0, 4, 5, 1, 6, 9]

After backtrack at level 6
 pending : [9]
 solution : [0, 4, 5, 1, 6]


Before backtrack at level 5
 pending : [9]
 solution : [0, 4, 5, 1, 6]

After backtrack at level 5
 pending : [9, 3]
 solution : [0, 4, 5, 1, 6]


Before backtrack at level 4
 pending : [9, 3]
 solution : [0, 4, 5, 1, 6]

After backtrack at level 4
 pending : [9, 3, 7, 10, 11, 12, 2]
 solution : [0, 4, 5, 1, 6]


Invert decision for 6 at level 3


New level: 4
 pending : [9, 3, 7, 10, 11, 12, 2]
 solution : [0, 4, 5, 1]


Before reduction : 
 pending  : [9, 3, 7, 10, 11, 12, 2]
 solution : [0, 4, 5, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, 1), (10, 2), (11, 2), (12, 1)]

Covered at level 4 : set()

After reduction : 
 pending  : [9, 3, 7, 10, 11, 12, 2]
 solution : [0, 4, 5, 1]


Solution : [0, 4, 5, 1] has cost 25.


Decide in level 4 among pending : [9, 3, 7, 10, 11, 12, 2]

Coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, 1), (10, 2), (11, 2), (12, 1)]

Decide 10 with phase True at level 4

After decision at level 4
 pending : [9, 3, 7, 11, 12, 2]
 solution : [0, 4, 5, 1, 10]


New level: 5
 pending : [9, 3, 7, 11, 12, 2]
 solution : [0, 4, 5, 1, 10]


Before reduction : 
 pending  : [9, 3, 7, 11, 12, 2]
 solution : [0, 4, 5, 1, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, 1), (10, 2), (11, 2), (12, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 1), (10, -1), (11, 0), (12, 0)]

Covered at level 5 : {11, 12, 7}

After reduction : 
 pending  : [9, 3, 2]
 solution : [0, 4, 5, 1, 10]


Before reduction : 
 pending  : [9, 3, 2]
 solution : [0, 4, 5, 1, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 1), (10, -1), (11, 0), (12, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [9, 3, 2]
 solution : [0, 4, 5, 1, 10]


Solution : [0, 4, 5, 1, 10] has cost 31.


Decide in level 5 among pending : [9, 3, 2]

Coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

Decide 9 with phase True at level 5

After decision at level 5
 pending : [3, 2]
 solution : [0, 4, 5, 1, 10, 9]


New level: 6
 pending : [3, 2]
 solution : [0, 4, 5, 1, 10, 9]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 4, 5, 1, 10, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : {2, 3}

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 10, 9]


Before reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 10, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 10, 9]


Solution : [0, 4, 5, 1, 10, 9] has cost 37.


Before backtrack at level 6
 pending : []
 solution : [0, 4, 5, 1, 10, 9]

After backtrack at level 6
 pending : [3, 2]
 solution : [0, 4, 5, 1, 10, 9]


Invert decision for 9 at level 5


New level: 6
 pending : [3, 2]
 solution : [0, 4, 5, 1, 10]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 4, 5, 1, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 4, 5, 1, 10]


Solution : [0, 4, 5, 1, 10] has cost 31.


Decide in level 6 among pending : [3, 2]

Coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Decide 3 with phase True at level 6

After decision at level 6
 pending : [2]
 solution : [0, 4, 5, 1, 10, 3]


New level: 7
 pending : [2]
 solution : [0, 4, 5, 1, 10, 3]


Before reduction : 
 pending  : [2]
 solution : [0, 4, 5, 1, 10, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : {2}

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 10, 3]


Before reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 10, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 10, 3]


Solution : [0, 4, 5, 1, 10, 3] has cost 33.


Before backtrack at level 7
 pending : []
 solution : [0, 4, 5, 1, 10, 3]

After backtrack at level 7
 pending : [2]
 solution : [0, 4, 5, 1, 10, 3]


Invert decision for 3 at level 6


New level: 7
 pending : [2]
 solution : [0, 4, 5, 1, 10]


Before reduction : 
 pending  : [2]
 solution : [0, 4, 5, 1, 10]

Essensial at level 7 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 10, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 10, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 10, 2]


Solution : [0, 4, 5, 1, 10, 2] has cost 34.


Before backtrack at level 7
 pending : []
 solution : [0, 4, 5, 1, 10, 2]

After backtrack at level 7
 pending : [2]
 solution : [0, 4, 5, 1, 10]


Before backtrack at level 6
 pending : [2]
 solution : [0, 4, 5, 1, 10]

After backtrack at level 6
 pending : [2, 3]
 solution : [0, 4, 5, 1, 10]


Before backtrack at level 5
 pending : [2, 3]
 solution : [0, 4, 5, 1, 10]

After backtrack at level 5
 pending : [2, 3, 7, 11, 12, 9]
 solution : [0, 4, 5, 1, 10]


Invert decision for 10 at level 4


New level: 5
 pending : [2, 3, 7, 11, 12, 9]
 solution : [0, 4, 5, 1]


Before reduction : 
 pending  : [2, 3, 7, 11, 12, 9]
 solution : [0, 4, 5, 1]

Essensial at level 5 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 1), (10, -1), (11, -1), (12, 0)]

Covered at level 5 : {12, 7}

After reduction : 
 pending  : [2, 3, 9]
 solution : [0, 4, 5, 1, 11]


Before reduction : 
 pending  : [2, 3, 9]
 solution : [0, 4, 5, 1, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 1), (10, -1), (11, -1), (12, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 3, 9]
 solution : [0, 4, 5, 1, 11]


Solution : [0, 4, 5, 1, 11] has cost 31.


Decide in level 5 among pending : [2, 3, 9]

Coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

Decide 2 with phase True at level 5

After decision at level 5
 pending : [3, 9]
 solution : [0, 4, 5, 1, 11, 2]


New level: 6
 pending : [3, 9]
 solution : [0, 4, 5, 1, 11, 2]


Before reduction : 
 pending  : [3, 9]
 solution : [0, 4, 5, 1, 11, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : {9, 3}

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 11, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 11, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 11, 2]


Solution : [0, 4, 5, 1, 11, 2] has cost 34.


Before backtrack at level 6
 pending : []
 solution : [0, 4, 5, 1, 11, 2]

After backtrack at level 6
 pending : [3, 9]
 solution : [0, 4, 5, 1, 11, 2]


Invert decision for 2 at level 5


New level: 6
 pending : [3, 9]
 solution : [0, 4, 5, 1, 11]


Before reduction : 
 pending  : [3, 9]
 solution : [0, 4, 5, 1, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 9]
 solution : [0, 4, 5, 1, 11]


Solution : [0, 4, 5, 1, 11] has cost 31.


Decide in level 6 among pending : [3, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

Decide 3 with phase True at level 6

After decision at level 6
 pending : [9]
 solution : [0, 4, 5, 1, 11, 3]


New level: 7
 pending : [9]
 solution : [0, 4, 5, 1, 11, 3]


Before reduction : 
 pending  : [9]
 solution : [0, 4, 5, 1, 11, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : {9}

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 11, 3]


Before reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 11, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 11, 3]


Solution : [0, 4, 5, 1, 11, 3] has cost 33.


Before backtrack at level 7
 pending : []
 solution : [0, 4, 5, 1, 11, 3]

After backtrack at level 7
 pending : [9]
 solution : [0, 4, 5, 1, 11, 3]


Invert decision for 3 at level 6


New level: 7
 pending : [9]
 solution : [0, 4, 5, 1, 11]


Before reduction : 
 pending  : [9]
 solution : [0, 4, 5, 1, 11]

Essensial at level 7 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 11, 9]


Before reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 11, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 1, 11, 9]


Solution : [0, 4, 5, 1, 11, 9] has cost 37.


Before backtrack at level 7
 pending : []
 solution : [0, 4, 5, 1, 11, 9]

After backtrack at level 7
 pending : [9]
 solution : [0, 4, 5, 1, 11]


Before backtrack at level 6
 pending : [9]
 solution : [0, 4, 5, 1, 11]

After backtrack at level 6
 pending : [9, 3]
 solution : [0, 4, 5, 1, 11]


Before backtrack at level 5
 pending : [9, 3]
 solution : [0, 4, 5, 1, 11]

After backtrack at level 5
 pending : [9, 3, 11, 7, 12, 2]
 solution : [0, 4, 5, 1]


Before backtrack at level 4
 pending : [9, 3, 11, 7, 12, 2]
 solution : [0, 4, 5, 1]

After backtrack at level 4
 pending : [9, 3, 11, 7, 12, 2, 10]
 solution : [0, 4, 5, 1]


Before backtrack at level 3
 pending : [9, 3, 11, 7, 12, 2, 10]
 solution : [0, 4, 5, 1]

After backtrack at level 3
 pending : [9, 3, 11, 7, 12, 2, 10, 6]
 solution : [0, 4, 5, 1]


Invert decision for 1 at level 2


New level: 3
 pending : [9, 3, 11, 7, 12, 2, 10, 6]
 solution : [0, 4, 5]


Before reduction : 
 pending  : [9, 3, 11, 7, 12, 2, 10, 6]
 solution : [0, 4, 5]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 4), (4, -1), (5, -1), (6, 5), (7, 1), (8, -1), (9, 1), (10, 8), (11, 2), (12, 2)]

Covered at level 3 : set()

After reduction : 
 pending  : [9, 3, 11, 7, 12, 2, 10, 6]
 solution : [0, 4, 5]


Solution : [0, 4, 5] has cost 20.


Decide in level 3 among pending : [9, 3, 11, 7, 12, 2, 10, 6]

Coverage : [(0, -1), (1, -1), (2, 2), (3, 4), (4, -1), (5, -1), (6, 5), (7, 1), (8, -1), (9, 1), (10, 8), (11, 2), (12, 2)]

Decide 10 with phase True at level 3

After decision at level 3
 pending : [9, 3, 11, 7, 12, 2, 6]
 solution : [0, 4, 5, 10]


New level: 4
 pending : [9, 3, 11, 7, 12, 2, 6]
 solution : [0, 4, 5, 10]


Before reduction : 
 pending  : [9, 3, 11, 7, 12, 2, 6]
 solution : [0, 4, 5, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 4), (4, -1), (5, -1), (6, 5), (7, 1), (8, -1), (9, 1), (10, 8), (11, 2), (12, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 4), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 1), (10, -1), (11, 0), (12, 0)]

Covered at level 4 : {11, 12, 6, 7}

After reduction : 
 pending  : [9, 3, 2]
 solution : [0, 4, 5, 10]


Before reduction : 
 pending  : [9, 3, 2]
 solution : [0, 4, 5, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 4), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 1), (10, -1), (11, 0), (12, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 4), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [9, 3, 2]
 solution : [0, 4, 5, 10]


Solution : [0, 4, 5, 10] has cost 26.


Decide in level 4 among pending : [9, 3, 2]

Coverage : [(0, -1), (1, -1), (2, 2), (3, 4), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

Decide 3 with phase True at level 4

After decision at level 4
 pending : [9, 2]
 solution : [0, 4, 5, 10, 3]


New level: 5
 pending : [9, 2]
 solution : [0, 4, 5, 10, 3]


Before reduction : 
 pending  : [9, 2]
 solution : [0, 4, 5, 10, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 4), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {9, 2}

After reduction : 
 pending  : []
 solution : [0, 4, 5, 10, 3]


Before reduction : 
 pending  : []
 solution : [0, 4, 5, 10, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 10, 3]


Solution : [0, 4, 5, 10, 3] has cost 28.


Before backtrack at level 5
 pending : []
 solution : [0, 4, 5, 10, 3]

After backtrack at level 5
 pending : [9, 2]
 solution : [0, 4, 5, 10, 3]


Invert decision for 3 at level 4


New level: 5
 pending : [9, 2]
 solution : [0, 4, 5, 10]


Before reduction : 
 pending  : [9, 2]
 solution : [0, 4, 5, 10]

Essensial at level 5 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {9}

After reduction : 
 pending  : []
 solution : [0, 4, 5, 10, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 5, 10, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 10, 2]


Solution : [0, 4, 5, 10, 2] has cost 29.


Before backtrack at level 5
 pending : []
 solution : [0, 4, 5, 10, 2]

After backtrack at level 5
 pending : [2, 9]
 solution : [0, 4, 5, 10]


Before backtrack at level 4
 pending : [2, 9]
 solution : [0, 4, 5, 10]

After backtrack at level 4
 pending : [2, 9, 11, 7, 12, 6, 3]
 solution : [0, 4, 5, 10]


Invert decision for 10 at level 3


New level: 4
 pending : [2, 9, 11, 7, 12, 6, 3]
 solution : [0, 4, 5]


Before reduction : 
 pending  : [2, 9, 11, 7, 12, 6, 3]
 solution : [0, 4, 5]

Essensial at level 4 : {3, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0)]

Covered at level 4 : {2, 7, 9, 11, 12}

After reduction : 
 pending  : []
 solution : [0, 4, 5, 3, 6]


Before reduction : 
 pending  : []
 solution : [0, 4, 5, 3, 6]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 5, 3, 6]


Solution : [0, 4, 5, 3, 6] has cost 32.


Before backtrack at level 4
 pending : []
 solution : [0, 4, 5, 3, 6]

After backtrack at level 4
 pending : [6, 3, 2, 9, 11, 7, 12]
 solution : [0, 4, 5]


Before backtrack at level 3
 pending : [6, 3, 2, 9, 11, 7, 12]
 solution : [0, 4, 5]

After backtrack at level 3
 pending : [6, 3, 2, 9, 11, 7, 12, 10]
 solution : [0, 4, 5]


Before backtrack at level 2
 pending : [6, 3, 2, 9, 11, 7, 12, 10]
 solution : [0, 4, 5]

After backtrack at level 2
 pending : [6, 3, 2, 9, 11, 7, 12, 10, 8, 1]
 solution : [0, 4, 5]


Invert decision for 5 at level 1


New level: 2
 pending : [6, 3, 2, 9, 11, 7, 12, 10, 8, 1]
 solution : [0, 4]


Before reduction : 
 pending  : [6, 3, 2, 9, 11, 7, 12, 10, 8, 1]
 solution : [0, 4]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, -1), (6, 12), (7, 4), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4)]

Covered at level 2 : set()

After reduction : 
 pending  : [6, 3, 2, 9, 11, 7, 12, 10, 8, 1]
 solution : [0, 4]


Solution : [0, 4] has cost 7.


Decide in level 2 among pending : [6, 3, 2, 9, 11, 7, 12, 10, 8, 1]

Coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, -1), (6, 12), (7, 4), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4)]

Decide 6 with phase True at level 2

After decision at level 2
 pending : [3, 2, 9, 11, 7, 12, 10, 8, 1]
 solution : [0, 4, 6]


New level: 3
 pending : [3, 2, 9, 11, 7, 12, 10, 8, 1]
 solution : [0, 4, 6]


Before reduction : 
 pending  : [3, 2, 9, 11, 7, 12, 10, 8, 1]
 solution : [0, 4, 6]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, -1), (6, 12), (7, 4), (8, 4), (9, 8), (10, 8), (11, 8), (12, 4)]

After removed
 coverage : [(0, -1), (1, 2), (2, 8), (3, 4), (4, -1), (5, -1), (6, -1), (7, 1), (8, 2), (9, 8), (10, 1), (11, 2), (12, 0)]

Covered at level 3 : {12}

After reduction : 
 pending  : [3, 2, 9, 11, 7, 10, 8, 1]
 solution : [0, 4, 6]


Before reduction : 
 pending  : [3, 2, 9, 11, 7, 10, 8, 1]
 solution : [0, 4, 6]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, 2), (2, 8), (3, 4), (4, -1), (5, -1), (6, -1), (7, 1), (8, 2), (9, 8), (10, 1), (11, 2), (12, 0)]

After removed
 coverage : [(0, -1), (1, 2), (2, 8), (3, 4), (4, -1), (5, -1), (6, -1), (7, 1), (8, 2), (9, 8), (10, 1), (11, 2), (12, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [3, 2, 9, 11, 7, 10, 8, 1]
 solution : [0, 4, 6]


Solution : [0, 4, 6] has cost 17.


Decide in level 3 among pending : [3, 2, 9, 11, 7, 10, 8, 1]

Coverage : [(0, -1), (1, 2), (2, 8), (3, 4), (4, -1), (5, -1), (6, -1), (7, 1), (8, 2), (9, 8), (10, 1), (11, 2), (12, -1)]

Decide 2 with phase True at level 3

After decision at level 3
 pending : [3, 9, 11, 7, 10, 8, 1]
 solution : [0, 4, 6, 2]


New level: 4
 pending : [3, 9, 11, 7, 10, 8, 1]
 solution : [0, 4, 6, 2]


Before reduction : 
 pending  : [3, 9, 11, 7, 10, 8, 1]
 solution : [0, 4, 6, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 2), (2, 8), (3, 4), (4, -1), (5, -1), (6, -1), (7, 1), (8, 2), (9, 8), (10, 1), (11, 2), (12, -1)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 1), (8, 1), (9, 2), (10, 1), (11, 2), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 9, 11, 7, 10, 8, 1]
 solution : [0, 4, 6, 2]


Solution : [0, 4, 6, 2] has cost 20.


Decide in level 4 among pending : [3, 9, 11, 7, 10, 8, 1]

Coverage : [(0, -1), (1, 1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 1), (8, 1), (9, 2), (10, 1), (11, 2), (12, -1)]

Decide 9 with phase True at level 4

After decision at level 4
 pending : [3, 11, 7, 10, 8, 1]
 solution : [0, 4, 6, 2, 9]


New level: 5
 pending : [3, 11, 7, 10, 8, 1]
 solution : [0, 4, 6, 2, 9]


Before reduction : 
 pending  : [3, 11, 7, 10, 8, 1]
 solution : [0, 4, 6, 2, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 1), (8, 1), (9, 2), (10, 1), (11, 2), (12, -1)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 1), (11, 0), (12, -1)]

Covered at level 5 : {8, 11, 7}

After reduction : 
 pending  : [3, 10, 1]
 solution : [0, 4, 6, 2, 9]


Before reduction : 
 pending  : [3, 10, 1]
 solution : [0, 4, 6, 2, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 1), (11, 0), (12, -1)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 10, 1]
 solution : [0, 4, 6, 2, 9]


Solution : [0, 4, 6, 2, 9] has cost 26.


Decide in level 5 among pending : [3, 10, 1]

Coverage : [(0, -1), (1, 1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

Decide 3 with phase True at level 5

After decision at level 5
 pending : [10, 1]
 solution : [0, 4, 6, 2, 9, 3]


New level: 6
 pending : [10, 1]
 solution : [0, 4, 6, 2, 9, 3]


Before reduction : 
 pending  : [10, 1]
 solution : [0, 4, 6, 2, 9, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1)]

Covered at level 6 : {1, 10}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 9, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 9, 3]


Solution : [0, 4, 6, 2, 9, 3] has cost 28.


Before backtrack at level 6
 pending : []
 solution : [0, 4, 6, 2, 9, 3]

After backtrack at level 6
 pending : [10, 1]
 solution : [0, 4, 6, 2, 9, 3]


Invert decision for 3 at level 5


New level: 6
 pending : [10, 1]
 solution : [0, 4, 6, 2, 9]


Before reduction : 
 pending  : [10, 1]
 solution : [0, 4, 6, 2, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 1]
 solution : [0, 4, 6, 2, 9]


Solution : [0, 4, 6, 2, 9] has cost 26.


Decide in level 6 among pending : [10, 1]

Coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

Decide 10 with phase True at level 6

After decision at level 6
 pending : [1]
 solution : [0, 4, 6, 2, 9, 10]


New level: 7
 pending : [1]
 solution : [0, 4, 6, 2, 9, 10]


Before reduction : 
 pending  : [1]
 solution : [0, 4, 6, 2, 9, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : {1}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 9, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 9, 10]


Solution : [0, 4, 6, 2, 9, 10] has cost 32.


Before backtrack at level 7
 pending : []
 solution : [0, 4, 6, 2, 9, 10]

After backtrack at level 7
 pending : [1]
 solution : [0, 4, 6, 2, 9, 10]


Invert decision for 10 at level 6


New level: 7
 pending : [1]
 solution : [0, 4, 6, 2, 9]


Before reduction : 
 pending  : [1]
 solution : [0, 4, 6, 2, 9]

Essensial at level 7 : {1}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 9, 1]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 9, 1]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 9, 1]


Solution : [0, 4, 6, 2, 9, 1] has cost 31.


Before backtrack at level 7
 pending : []
 solution : [0, 4, 6, 2, 9, 1]

After backtrack at level 7
 pending : [1]
 solution : [0, 4, 6, 2, 9]


Before backtrack at level 6
 pending : [1]
 solution : [0, 4, 6, 2, 9]

After backtrack at level 6
 pending : [1, 10]
 solution : [0, 4, 6, 2, 9]


Before backtrack at level 5
 pending : [1, 10]
 solution : [0, 4, 6, 2, 9]

After backtrack at level 5
 pending : [1, 10, 11, 7, 8, 3]
 solution : [0, 4, 6, 2, 9]


Invert decision for 9 at level 4


New level: 5
 pending : [1, 10, 11, 7, 8, 3]
 solution : [0, 4, 6, 2]


Before reduction : 
 pending  : [1, 10, 11, 7, 8, 3]
 solution : [0, 4, 6, 2]

Essensial at level 5 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 1), (11, -1), (12, -1)]

Covered at level 5 : {8, 7}

After reduction : 
 pending  : [1, 10, 3]
 solution : [0, 4, 6, 2, 11]


Before reduction : 
 pending  : [1, 10, 3]
 solution : [0, 4, 6, 2, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [1, 10, 3]
 solution : [0, 4, 6, 2, 11]


Solution : [0, 4, 6, 2, 11] has cost 26.


Decide in level 5 among pending : [1, 10, 3]

Coverage : [(0, -1), (1, 1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

Decide 1 with phase True at level 5

After decision at level 5
 pending : [10, 3]
 solution : [0, 4, 6, 2, 11, 1]


New level: 6
 pending : [10, 3]
 solution : [0, 4, 6, 2, 11, 1]


Before reduction : 
 pending  : [10, 3]
 solution : [0, 4, 6, 2, 11, 1]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1)]

Covered at level 6 : {10, 3}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 11, 1]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 11, 1]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 11, 1]


Solution : [0, 4, 6, 2, 11, 1] has cost 31.


Before backtrack at level 6
 pending : []
 solution : [0, 4, 6, 2, 11, 1]

After backtrack at level 6
 pending : [10, 3]
 solution : [0, 4, 6, 2, 11, 1]


Invert decision for 1 at level 5


New level: 6
 pending : [10, 3]
 solution : [0, 4, 6, 2, 11]


Before reduction : 
 pending  : [10, 3]
 solution : [0, 4, 6, 2, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 3]
 solution : [0, 4, 6, 2, 11]


Solution : [0, 4, 6, 2, 11] has cost 26.


Decide in level 6 among pending : [10, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

Decide 10 with phase True at level 6

After decision at level 6
 pending : [3]
 solution : [0, 4, 6, 2, 11, 10]


New level: 7
 pending : [3]
 solution : [0, 4, 6, 2, 11, 10]


Before reduction : 
 pending  : [3]
 solution : [0, 4, 6, 2, 11, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : {3}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 11, 10]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 11, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 11, 10]


Solution : [0, 4, 6, 2, 11, 10] has cost 32.


Before backtrack at level 7
 pending : []
 solution : [0, 4, 6, 2, 11, 10]

After backtrack at level 7
 pending : [3]
 solution : [0, 4, 6, 2, 11, 10]


Invert decision for 10 at level 6


New level: 7
 pending : [3]
 solution : [0, 4, 6, 2, 11]


Before reduction : 
 pending  : [3]
 solution : [0, 4, 6, 2, 11]

Essensial at level 7 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 11, 3]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 11, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 2, 11, 3]


Solution : [0, 4, 6, 2, 11, 3] has cost 28.


Before backtrack at level 7
 pending : []
 solution : [0, 4, 6, 2, 11, 3]

After backtrack at level 7
 pending : [3]
 solution : [0, 4, 6, 2, 11]


Before backtrack at level 6
 pending : [3]
 solution : [0, 4, 6, 2, 11]

After backtrack at level 6
 pending : [3, 10]
 solution : [0, 4, 6, 2, 11]


Before backtrack at level 5
 pending : [3, 10]
 solution : [0, 4, 6, 2, 11]

After backtrack at level 5
 pending : [3, 10, 11, 7, 8, 1]
 solution : [0, 4, 6, 2]


Before backtrack at level 4
 pending : [3, 10, 11, 7, 8, 1]
 solution : [0, 4, 6, 2]

After backtrack at level 4
 pending : [3, 10, 11, 7, 8, 1, 9]
 solution : [0, 4, 6, 2]


Invert decision for 2 at level 3


New level: 4
 pending : [3, 10, 11, 7, 8, 1, 9]
 solution : [0, 4, 6]


Before reduction : 
 pending  : [3, 10, 11, 7, 8, 1, 9]
 solution : [0, 4, 6]

Essensial at level 4 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 2), (2, -1), (3, 4), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 1), (11, 0), (12, -1)]

Covered at level 4 : {8, 11, 7}

After reduction : 
 pending  : [3, 10, 1]
 solution : [0, 4, 6, 9]


Before reduction : 
 pending  : [3, 10, 1]
 solution : [0, 4, 6, 9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 2), (2, -1), (3, 4), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 1), (11, 0), (12, -1)]

After removed
 coverage : [(0, -1), (1, 2), (2, -1), (3, 4), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 10, 1]
 solution : [0, 4, 6, 9]


Solution : [0, 4, 6, 9] has cost 23.


Decide in level 4 among pending : [3, 10, 1]

Coverage : [(0, -1), (1, 2), (2, -1), (3, 4), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

Decide 3 with phase True at level 4

After decision at level 4
 pending : [10, 1]
 solution : [0, 4, 6, 9, 3]


New level: 5
 pending : [10, 1]
 solution : [0, 4, 6, 9, 3]


Before reduction : 
 pending  : [10, 1]
 solution : [0, 4, 6, 9, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 2), (2, -1), (3, 4), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1)]

Covered at level 5 : {1, 10}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 9, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 9, 3]


Solution : [0, 4, 6, 9, 3] has cost 25.


Before backtrack at level 5
 pending : []
 solution : [0, 4, 6, 9, 3]

After backtrack at level 5
 pending : [10, 1]
 solution : [0, 4, 6, 9, 3]


Invert decision for 3 at level 4


New level: 5
 pending : [10, 1]
 solution : [0, 4, 6, 9]


Before reduction : 
 pending  : [10, 1]
 solution : [0, 4, 6, 9]

Essensial at level 5 : {1}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1)]

Covered at level 5 : {10}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 9, 1]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 9, 1]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 9, 1]


Solution : [0, 4, 6, 9, 1] has cost 28.


Before backtrack at level 5
 pending : []
 solution : [0, 4, 6, 9, 1]

After backtrack at level 5
 pending : [1, 10]
 solution : [0, 4, 6, 9]


Before backtrack at level 4
 pending : [1, 10]
 solution : [0, 4, 6, 9]

After backtrack at level 4
 pending : [1, 10, 9, 11, 7, 8, 3]
 solution : [0, 4, 6]


Before backtrack at level 3
 pending : [1, 10, 9, 11, 7, 8, 3]
 solution : [0, 4, 6]

After backtrack at level 3
 pending : [1, 10, 9, 11, 7, 8, 3, 12, 2]
 solution : [0, 4, 6]


Invert decision for 6 at level 2


New level: 3
 pending : [1, 10, 9, 11, 7, 8, 3, 12, 2]
 solution : [0, 4]


Before reduction : 
 pending  : [1, 10, 9, 11, 7, 8, 3, 12, 2]
 solution : [0, 4]

Essensial at level 3 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, -1), (6, -1), (7, 0), (8, 2), (9, 8), (10, 8), (11, -1), (12, 2)]

Covered at level 3 : {7}

After reduction : 
 pending  : [1, 10, 9, 8, 3, 12, 2]
 solution : [0, 4, 11]


Before reduction : 
 pending  : [1, 10, 9, 8, 3, 12, 2]
 solution : [0, 4, 11]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, -1), (6, -1), (7, 0), (8, 2), (9, 8), (10, 8), (11, -1), (12, 2)]

After removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 8), (10, 8), (11, -1), (12, 2)]

Covered at level 3 : set()

After reduction : 
 pending  : [1, 10, 9, 8, 3, 12, 2]
 solution : [0, 4, 11]


Solution : [0, 4, 11] has cost 13.


Decide in level 3 among pending : [1, 10, 9, 8, 3, 12, 2]

Coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 8), (10, 8), (11, -1), (12, 2)]

Decide 1 with phase True at level 3

After decision at level 3
 pending : [10, 9, 8, 3, 12, 2]
 solution : [0, 4, 11, 1]


New level: 4
 pending : [10, 9, 8, 3, 12, 2]
 solution : [0, 4, 11, 1]


Before reduction : 
 pending  : [10, 9, 8, 3, 12, 2]
 solution : [0, 4, 11, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, 4), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 8), (10, 8), (11, -1), (12, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1), (9, 8), (10, 0), (11, -1), (12, 0)]

Covered at level 4 : {10, 12}

After reduction : 
 pending  : [9, 8, 3, 2]
 solution : [0, 4, 11, 1]


Before reduction : 
 pending  : [9, 8, 3, 2]
 solution : [0, 4, 11, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1), (9, 8), (10, 0), (11, -1), (12, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1), (9, 8), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [9, 8, 3, 2]
 solution : [0, 4, 11, 1]


Solution : [0, 4, 11, 1] has cost 18.


Decide in level 4 among pending : [9, 8, 3, 2]

Coverage : [(0, -1), (1, -1), (2, 4), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1), (9, 8), (10, -1), (11, -1), (12, -1)]

Decide 9 with phase True at level 4

After decision at level 4
 pending : [8, 3, 2]
 solution : [0, 4, 11, 1, 9]


New level: 5
 pending : [8, 3, 2]
 solution : [0, 4, 11, 1, 9]


Before reduction : 
 pending  : [8, 3, 2]
 solution : [0, 4, 11, 1, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1), (9, 8), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {8, 2, 3}

After reduction : 
 pending  : []
 solution : [0, 4, 11, 1, 9]


Before reduction : 
 pending  : []
 solution : [0, 4, 11, 1, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 11, 1, 9]


Solution : [0, 4, 11, 1, 9] has cost 24.


Before backtrack at level 5
 pending : []
 solution : [0, 4, 11, 1, 9]

After backtrack at level 5
 pending : [8, 3, 2]
 solution : [0, 4, 11, 1, 9]


Invert decision for 9 at level 4


New level: 5
 pending : [8, 3, 2]
 solution : [0, 4, 11, 1]


Before reduction : 
 pending  : [8, 3, 2]
 solution : [0, 4, 11, 1]

Essensial at level 5 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {8, 3}

After reduction : 
 pending  : []
 solution : [0, 4, 11, 1, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 11, 1, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 11, 1, 2]


Solution : [0, 4, 11, 1, 2] has cost 21.


Before backtrack at level 5
 pending : []
 solution : [0, 4, 11, 1, 2]

After backtrack at level 5
 pending : [2, 8, 3]
 solution : [0, 4, 11, 1]


Before backtrack at level 4
 pending : [2, 8, 3]
 solution : [0, 4, 11, 1]

After backtrack at level 4
 pending : [2, 8, 3, 10, 12, 9]
 solution : [0, 4, 11, 1]


Invert decision for 1 at level 3


New level: 4
 pending : [2, 8, 3, 10, 12, 9]
 solution : [0, 4, 11]


Before reduction : 
 pending  : [2, 8, 3, 10, 12, 9]
 solution : [0, 4, 11]

Essensial at level 4 : {2, 10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, 0)]

Covered at level 4 : {8, 9, 3, 12}

After reduction : 
 pending  : []
 solution : [0, 4, 11, 2, 10]


Before reduction : 
 pending  : []
 solution : [0, 4, 11, 2, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 11, 2, 10]


Solution : [0, 4, 11, 2, 10] has cost 22.


Before backtrack at level 4
 pending : []
 solution : [0, 4, 11, 2, 10]

After backtrack at level 4
 pending : [2, 10, 8, 3, 12, 9]
 solution : [0, 4, 11]


Before backtrack at level 3
 pending : [2, 10, 8, 3, 12, 9]
 solution : [0, 4, 11]

After backtrack at level 3
 pending : [2, 10, 8, 3, 12, 9, 11, 7, 1]
 solution : [0, 4]


Before backtrack at level 2
 pending : [2, 10, 8, 3, 12, 9, 11, 7, 1]
 solution : [0, 4]

After backtrack at level 2
 pending : [2, 10, 8, 3, 12, 9, 11, 7, 1, 6]
 solution : [0, 4]


Before backtrack at level 1
 pending : [2, 10, 8, 3, 12, 9, 11, 7, 1, 6]
 solution : [0, 4]

After backtrack at level 1
 pending : [2, 10, 8, 3, 12, 9, 11, 7, 1, 6, 5]
 solution : [0, 4]


============================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall.ivy: node=2]

============================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 21

[MIN NOTE]: maximum branch and bound depth: 7

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 4, 11, 1, 2]

[MIN NOTE]: solution length: 5

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_4] forall NODE1,NODE0. ~allowed_in(NODE0) | sent(NODE1,NODE0) | NODE0 = NODE1 # qcost: 5

invariant [invar_11] forall NODE1,NODE0. allowed_in(NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1 # qcost: 6

invariant [invar_1] forall NODE1,NODE0. internal(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1 # qcost: 5

invariant [invar_2] forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0) # qcost: 3

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 21




[QRM NOTE]: Time elapsed since start: 0.326 seconds

[QRM NOTE]: Time elapsed since last: 0.128 seconds

[QRM NOTE]: Peak memory: 1817013 bytes


*********************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym/ivy/firewall.ivy: node=2]

*********************************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.node_2.0.ivy -s node=3 -f 2 -g -w -r -b -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall.node_2.0.ivy: node=3]

=============================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 15

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 6

[QRM NOTE]: Time elapsed since start: 0.108 seconds

[QRM NOTE]: Time elapsed since last: 0.108 seconds

[QRM NOTE]: Peak memory: 175128 bytes


===================================

	Forward reachability

===================================

building bdd for atoms

building bdd for initial action

building bdd for axioms

building bdd for actions

building bdd for action: send_from_internal(fml:src,fml:dst)

building bdd for action: send_to_internal(fml:src,fml:dst)

building bdd for abstractions

start symbolic image computation

start extracting cubes

[FW NOTE]: number of reachable cubes: 16


=======================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall: node=3]

=======================================================================================

sort: node=['node0', 'node1', 'node2']
predicate: allowed_in('node',)
predicate: sent('node', 'node')
predicate: internal('node',)
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)', 'internal(node0)', 'internal(node1)', 'internal(node2)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node1)', 'sent(node1,node2)', 'sent(node2,node0)', 'sent(node2,node1)', 'sent(node2,node2)']

000---000000000
0010100000010-0
001100001000-00
001110000001--0
00111000100---0
01000100000-010
010100010-00000
010101000-0-010
010101010-0-0-0
011100011-00-00
10000100-000100
1000100-0100000
1000110--000100
1000110--100-00
1010100-01010-0
11000100-00-110

[QRM NOTE]: Time elapsed since start: 0.915 seconds

[QRM NOTE]: Time elapsed since last: 0.807 seconds

[QRM NOTE]: Peak memory: 1318318 bytes


=========================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym/ivy/firewall.node_2.0.ivy: node=3]

=========================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 1.037 seconds

[QRM NOTE]: Time elapsed since last: 0.122 seconds

[QRM NOTE]: Peak memory: 368712 bytes

next size: node=3


******************************************************************************

	[Synthesize Rmin]: [ivybench/sym/ivy/firewall.ivy: node=3]

******************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.ivy -s node=3 -f 1 -g -w -r -b -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 0.016 seconds

[QRM NOTE]: Time elapsed since last: 0.016 seconds

[QRM NOTE]: Peak memory: 4828 bytes


===========================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall.ivy: node=3]

===========================================================================================


======================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

======================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : -1--1----------
3     : ['allowed_in(node1)', 'internal(node1)']
4     : --1--1---------
4     : ['allowed_in(node2)', 'internal(node2)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 6
num_suborbits: 1
6 (*) : --10-------0---
6     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
7     : -1-0---------0-
7     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
8     : --1-0---0------
8     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
9     : 1---0-------0--
9     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
10     : -1---0-0-------
10     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
11     : 1----0---0-----
11     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
12 (*) : --100----------
12     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
13     : -1-0-0---------
13     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
14     : 1---00---------
14     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
15 (*) : -110-----------
15     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
16     : 1-1-0----------
16     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
17     : 11---0---------
17     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 3
num_suborbits: 1
18 (*) : --1-----0--0---
18     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
19     : -1-----0-----0-
19     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
20     : 1--------0--0--
20     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 12
num_suborbits: 2
21 (*) : --1-0------1---
21     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
22     : -1---0-------1-
22     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
23     : --10----1------
23     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
24     : 1----0------1--
24     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
25     : -1-0---1-------
25     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
26     : 1---0----1-----
26     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
27 (*) : --1-0--------1-
27     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
28     : -1---0-----1---
28     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
29     : --10--------1--
29     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
30     : 1----0--1------
30     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
31     : -1-0-----1-----
31     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
32     : 1---0--1-------
32     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
33 (*) : -11-----0------
33     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
34     : -11----0-------
34     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
35     : 1-1--------0---
35     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
36     : 1-1------0-----
36     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
37     : 11-----------0-
37     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
38     : 11----------0--
38     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
39 (*) : -11--------1---
39     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
40     : -11----------1-
40     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
41     : 1-1-----1------
41     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
42     : 1-1---------1--
42     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
43     : 11-----1-------
43     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
44     : 11-------1-----
44     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 8
num_suborbits: 2
45 (*) : -------1----11-
45     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
46     : --------11-1---
46     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
47     : ---------1--11-
47     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
48     : -------11--1---
48     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
49     : ---------1-11--
49     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
50     : -------11----1-
50     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
51 (*) : -------1---11--
51     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
52     : --------11---1-
52     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 12
num_suborbits: 2
53 (*) : -0-1-----1-----
53     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
54     : --01--------1--
54     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
55     : 0---1--1-------
55     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
56     : --0-1--------1-
56     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
57     : 0----1--1------
57     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
58     : -0---1-----1---
58     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
65 (*) : -0-1---1-------
65     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
66     : --01----1------
66     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
67     : 0---1----1-----
67     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
68     : --0-1------1---
68     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
69     : 0----1------1--
69     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
70     : -0---1-------1-
70     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
59 (*) : 00-------1-----
59     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
60     : 0-0---------1--
60     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
61     : 00-----1-------
61     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
62     : -00----------1-
62     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
63     : 0-0-----1------
63     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
64     : -00--------1---
64     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 12
num_suborbits: 2
71 (*) : 0--0-----1-----
71     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
72     : 0--0--------1--
72     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
73     : -0--0--1-------
73     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
74     : -0--0--------1-
74     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
75     : --0--0--1------
75     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
76     : --0--0-----1---
76     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
77 (*) : --0--0-------1-
77     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
78     : -0--0------1---
78     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
79     : --0--0------1--
79     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
80     : 0--0----1------
80     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
81     : -0--0----1-----
81     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
82     : 0--0---1-------
82     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
83 (*) : ---0-0------1--
83     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
84     : ---00----1-----
84     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
85     : ----00-------1-
85     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
86     : ---00--1-------
86     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
87     : ----00-----1---
87     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
88     : ---0-0--1------
88     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
89 (*) : ---1-1--1------
89     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
90     : ---11--1-------
90     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
91     : ----11-----1---
91     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
92     : ---11----1-----
92     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
93     : ----11-------1-
93     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
94     : ---1-1------1--
94     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 1
num_suborbits: 1
95 (*) : 111------------
95     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
96 (*) : --1-0--0-1-----
96     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
97     : -1---0--0---1--
97     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
98     : --10---1-0-----
98     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
99     : 1----0-----0-1-
99     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
100     : -1-0----1---0--
100     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
101     : 1---0------1-0-
101     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
102 (*) : --1----0-1-0---
102     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
103     : -1------0---10-
103     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
104     : --1----100-----
104     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
105     : 1----------001-
105     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
106     : -1-----01---0--
106     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
107     : 1--------0-1-0-
107     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 18
num_suborbits: 3
108 (*) : -01------1-0---
108     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
109     : -10---------10-
109     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
110     : 0-1----10------
110     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
111     : 1-0---------01-
111     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
112     : 01-----01------
112     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
113     : 10-------0-1---
113     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
168 (*) : 0-1----0-1-----
168     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
169     : 01------0---1--
169     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
170     : -01----1-0-----
170     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
171     : 10---------0-1-
171     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
172     : -10-----1---0--
172     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
173     : 1-0--------1-0-
173     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
174 (*) : 0-1-----01-----
174     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
175     : 01-----0----1--
175     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
176     : -01----1---0---
176     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
177     : 10-------0---1-
177     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
178     : -10-----1----0-
178     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
179     : 1-0--------10--
179     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 18
num_suborbits: 3
114 (*) : --1-1----1-0---
114     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
115     : -1---1------10-
115     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
116     : --11---10------
116     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
117     : 1----1------01-
117     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
118     : -1-1---01------
118     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
119     : 1---1----0-1---
119     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
192 (*) : --11---0-1-----
192     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
193     : -1-1----0---1--
193     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
194     : --1-1--1-0-----
194     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
195     : 1---1------0-1-
195     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
196     : -1---1--1---0--
196     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
197     : 1----1-----1-0-
197     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
198 (*) : --11----01-----
198     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
199     : -1-1---0----1--
199     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
200     : --1-1--1---0---
200     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
201     : 1---1----0---1-
201     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
202     : -1---1--1----0-
202     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
203     : 1----1-----10--
203     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 24
num_suborbits: 4
120 (*) : --1------1-0-1-
120     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
121     : -1---------110-
121     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
122     : --1----10---1--
122     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
123     : 1-------1---01-
123     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
124     : -1-----011-----
124     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
125     : 1------1-0-1---
125     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
126 (*) : --1----0-1--1--
126     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
127     : -1------01--1--
127     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
128     : --1----1-0---1-
128     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
129     : 1------1---0-1-
129     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
130     : -1------1--10--
130     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
131     : 1-------1--1-0-
131     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
132 (*) : --1-----01--1--
132     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
133     : -1-----0-1--1--
133     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
134     : --1----1---0-1-
134     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
135     : 1------1-0---1-
135     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
136     : -1------1--1-0-
136     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
137     : 1-------1--10--
137     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
150 (*) : --1----011-----
150     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
151     : -1-----10---1--
151     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
152     : --1----1-0-1---
152     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
153     : 1--------1-0-1-
153     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
154     : -1------1---01-
154     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
155     : 1----------110-
155     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
138 (*) : -01------1--1--
138     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
139     : -10------1--1--
139     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
140     : 0-1----1-----1-
140     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
141     : 1-0----1-----1-
141     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
142     : 01------1--1---
142     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
143     : 10------1--1---
143     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
156 (*) : -01-----11-----
156     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
157     : -10----1----1--
157     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
158     : 0-1----1---1---
158     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
159     : 1-0------1---1-
159     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
160     : 01------1----1-
160     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
161     : 10---------11--
161     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
180 (*) : 0-1------1---1-
180     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
181     : 01---------11--
181     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
182     : -01----1----1--
182     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
183     : 10------1----1-
183     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
184     : -10-----11-----
184     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
185     : 1-0----1---1---
185     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
186 (*) : 0-1------1-1---
186     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
187     : 01----------11-
187     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
188     : -01----11------
188     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
189     : 10----------11-
189     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
190     : -10----11------
190     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
191     : 1-0------1-1---
191     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
144 (*) : --1-1----1--1--
144     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
145     : -1---1---1--1--
145     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
146     : --11---1-----1-
146     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
147     : 1----1-1-----1-
147     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
148     : -1-1----1--1---
148     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
149     : 1---1---1--1---
149     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
162 (*) : --1-1---11-----
162     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
163     : -1---1-1----1--
163     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
164     : --11---1---1---
164     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
165     : 1----1---1---1-
165     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
166     : -1-1----1----1-
166     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
167     : 1---1------11--
167     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
204 (*) : --11-----1---1-
204     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
205     : -1-1-------11--
205     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
206     : --1-1--1----1--
206     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
207     : 1---1---1----1-
207     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
208     : -1---1--11-----
208     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
209     : 1----1-1---1---
209     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
210 (*) : --11-----1-1---
210     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
211     : -1-1--------11-
211     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
212     : --1-1--11------
212     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
213     : 1---1-------11-
213     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
214     : -1---1-11------
214     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
215     : 1----1---1-1---
215     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
216 (*) : ---0-1-1-----1-
216     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
217     : ---01---1--1---
217     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
218     : ----01---1--1--
218     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
219     : ---10---1--1---
219     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
220     : ----10---1--1--
220     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
221     : ---1-0-1-----1-
221     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
222 (*) : ----01-1----1--
222     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
223     : ----10--11-----
223     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
224     : ---0-1---1---1-
224     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
225     : ---1-0-1---1---
225     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
226     : ---01------11--
226     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
227     : ---10---1----1-
227     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
228 (*) : ----01-11------
228     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
229     : ----10-11------
229     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
230     : ---0-1---1-1---
230     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
231     : ---1-0---1-1---
231     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
232     : ---01-------11-
232     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
233     : ---10-------11-
233     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
324 (*) : ---0-1-1---1---
324     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
325     : ---01---1----1-
325     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
326     : ----01--11-----
326     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
327     : ---10------11--
327     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
328     : ----10-1----1--
328     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
329     : ---1-0---1---1-
329     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 12
num_suborbits: 2
234 (*) : ---1---10---1--
234     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
235     : ---1---011-----
235     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
236     : ----1----1-0-1-
236     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
237     : ----1--1-0-1---
237     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
238     : -----1-----110-
238     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
239     : -----1--1---01-
239     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
258 (*) : ----1--1---0-1-
258     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
259     : -----1--1--1-0-
259     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
260     : ---1----01--1--
260     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
261     : -----1--1--10--
261     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
262     : ---1---0-1--1--
262     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
263     : ----1--1-0---1-
263     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 24
num_suborbits: 4
240 (*) : ---0---1---0-1-
240     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
241     : ---0----1--1-0-
241     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
242     : ----0---01--1--
242     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
243     : ----0---1--10--
243     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
244     : -----0-0-1--1--
244     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
245     : -----0-1-0---1-
245     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
246 (*) : ---0---1-0---1-
246     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
247     : ---0----1--10--
247     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
248     : ----0--0-1--1--
248     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
249     : ----0---1--1-0-
249     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
250     : -----0--01--1--
250     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
251     : -----0-1---0-1-
251     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
294 (*) : ----0--10---1--
294     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
295     : -----0-011-----
295     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
296     : ---0-----1-0-1-
296     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
297     : -----0-1-0-1---
297     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
298     : ---0-------110-
298     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
299     : ----0---1---01-
299     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
312 (*) : ---0---1-0-1---
312     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
313     : ---0----1---01-
313     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
314     : ----0--011-----
314     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
315     : ----0------110-
315     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
316     : -----0-10---1--
316     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
317     : -----0---1-0-1-
317     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 24
num_suborbits: 4
252 (*) : --00---1-----1-
252     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
253     : -0-0----1--1---
253     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
254     : --0-0----1--1--
254     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
255     : 0---0---1--1---
255     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
256     : -0---0---1--1--
256     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
257     : 0----0-1-----1-
257     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
288 (*) : --0-0--11------
288     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
289     : -0---0-11------
289     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
290     : --00-----1-1---
290     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
291     : 0----0---1-1---
291     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
292     : -0-0--------11-
292     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
293     : 0---0-------11-
293     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
300 (*) : --0-0--1----1--
300     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
301     : -0---0--11-----
301     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
302     : --00-----1---1-
302     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
303     : 0----0-1---1---
303     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
304     : -0-0-------11--
304     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
305     : 0---0---1----1-
305     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
318 (*) : --00---1---1---
318     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
319     : -0-0----1----1-
319     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
320     : --0-0---11-----
320     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
321     : 0---0------11--
321     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
322     : -0---0-1----1--
322     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
323     : 0----0---1---1-
323     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 12
num_suborbits: 2
264 (*) : -0-----1---0-1-
264     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
265     : --0-----1--1-0-
265     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
266     : 0-------01--1--
266     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
267     : --0-----1--10--
267     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
268     : 0------0-1--1--
268     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
269     : -0-----1-0---1-
269     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
306 (*) : 0------10---1--
306     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
307     : 0------011-----
307     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
308     : -0-------1-0-1-
308     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
309     : -0-----1-0-1---
309     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
310     : --0--------110-
310     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
311     : --0-----1---01-
311     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
270 (*) : -0-----1-0--0--
270     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
271     : --0-----10--0--
271     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
272     : 0------0-1---0-
272     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
273     : --0----0---1-0-
273     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
274     : 0-------0--01--
274     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
275     : -0------0--0-1-
275     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
276 (*) : ---0---1-0--0--
276     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
277     : ---0----10--0--
277     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
278     : ----0--0-1---0-
278     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
279     : ----0--0---1-0-
279     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
280     : -----0--0--01--
280     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
281     : -----0--0--0-1-
281     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
282 (*) : ----1--1-0--0--
282     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
283     : -----1--10--0--
283     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
284     : ---1---0-1---0-
284     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
285     : -----1-0---1-0-
285     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
286     : ---1----0--01--
286     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
287     : ----1---0--0-1-
287     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
330 (*) : ---0-1-----1-0-
330     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
331     : ---01------0-1-
331     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
332     : ----01--1---0--
332     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
333     : ---10---0---1--
333     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
334     : ----10-1-0-----
334     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
335     : ---1-0-0-1-----
335     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
336 (*) : --00-------1-0-
336     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
337     : -0-0-------0-1-
337     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
338     : --0-0---1---0--
338     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
339     : 0---0---0---1--
339     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
340     : -0---0-1-0-----
340     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
341     : 0----0-0-1-----
341     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
342 (*) : ---00------1-0-
342     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
343     : ---0-0-----0-1-
343     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
344     : ---00---1---0--
344     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
345     : ----00--0---1--
345     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
346     : ---0-0-1-0-----
346     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
347     : ----00-0-1-----
347     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 34

[PRIME NOTE]: number of orbits before merging: 62

[PRIME NOTE]: number of primes: 348

[QRM NOTE]: Time elapsed since start: 0.087 seconds

[QRM NOTE]: Time elapsed since last: 0.072 seconds

[QRM NOTE]: Peak memory: 1377746 bytes


================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall.ivy: node=3]

================================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : []

Essensial at level 0 : {0, 5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, 768), (11, 512), (12, 640), (13, 512), (14, 512), (15, 512), (16, 256), (17, 128), (18, 384), (19, 384), (20, 448), (21, 424), (22, 544), (23, 480), (24, 384), (25, 456), (26, 640), (27, 384), (28, 128), (29, 128), (30, 128), (31, 256), (32, 256), (33, 256)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 5]


Before reduction : 
 pending  : [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 5]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, 768), (11, 512), (12, 640), (13, 512), (14, 512), (15, 512), (16, 256), (17, 128), (18, 384), (19, 384), (20, 448), (21, 424), (22, 544), (23, 480), (24, 384), (25, 456), (26, 640), (27, 384), (28, 128), (29, 128), (30, 128), (31, 256), (32, 256), (33, 256)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, 768), (11, 512), (12, 640), (13, 512), (14, 512), (15, 512), (16, 256), (17, 128), (18, 384), (19, 384), (20, 448), (21, 424), (22, 544), (23, 480), (24, 384), (25, 456), (26, 640), (27, 384), (28, 128), (29, 128), (30, 128), (31, 256), (32, 256), (33, 256)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 5]

[QRM NOTE]: Time elapsed since start: 0.103 seconds

[QRM NOTE]: Time elapsed since last: 0.015 seconds

[QRM NOTE]: Peak memory: 317605 bytes


====================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall.ivy: node=3]

====================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node2,node2)']

sign_func_name2args: {'0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node2,node2)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 5 =====================
size : 3
num_suborbits: 1
18 (*) : --1-----0--0---
18     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
19     : -1-----0-----0-
19     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
20     : 1--------0--0--
20     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1}

	identical_multi_classes: {'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : -1--1----------
3     : ['allowed_in(node1)', 'internal(node1)']
4     : --1--1---------
4     : ['allowed_in(node2)', 'internal(node2)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$internal$0': [node$0$allowed_in$0$0; node$0$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$internal$0': node$0$allowed_in$0$0; node$0$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)


=== Prime Orbit 2 =====================
size : 6
num_suborbits: 1
6 (*) : --10-------0---
6     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
7     : -1-0---------0-
7     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
8     : --1-0---0------
8     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
9     : 1---0-------0--
9     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
10     : -1---0-0-------
10     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
11     : 1----0---0-----
11     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', '~sent(NODE2,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. internal(NODE1) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
12 (*) : --100----------
12     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
13     : -1-0-0---------
13     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
14     : 1---00---------
14     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

part_sig: ('node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0}

	identical_multi_classes: {'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', '~internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
15 (*) : -110-----------
15     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
16     : 1-1-0----------
16     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
17     : 11---0---------
17     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 2, '1$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 6 =====================
size : 12
num_suborbits: 2
21 (*) : --1-0------1---
21     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
22     : -1---0-------1-
22     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
23     : --10----1------
23     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
24     : 1----0------1--
24     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
25     : -1-0---1-------
25     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
26     : 1---0----1-----
26     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
27 (*) : --1-0--------1-
27     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
28     : -1---0-----1---
28     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
29     : --10--------1--
29     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
30     : 1----0--1------
30     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
31     : -1-0-----1-----
31     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
32     : 1---0--1-------
32     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node1)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node1)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node1)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~internal(NODE3)', 'allowed_in(NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE1,NODE0,NODE3. ~sent(NODE1,NODE2) | internal(NODE3) | ~allowed_in(NODE0) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))


=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
33 (*) : -11-----0------
33     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
34     : -11----0-------
34     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
35     : 1-1--------0---
35     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
36     : 1-1------0-----
36     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
37     : 11-----------0-
37     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
38     : 11----------0--
38     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$1; node$1$sent$1$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$1; node$1$sent$1$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE1)', 'allowed_in(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. sent(NODE2,NODE1) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
39 (*) : -11--------1---
39     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
40     : -11----------1-
40     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
41     : 1-1-----1------
41     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
42     : 1-1---------1--
42     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
43     : 11-----1-------
43     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
44     : 11-------1-----
44     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$allowed_in$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$allowed_in$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$allowed_in$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$allowed_in$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$allowed_in$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$0], 'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$0, 'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', 'sent(NODE0,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~allowed_in(NODE1) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 9 =====================
size : 8
num_suborbits: 2
45 (*) : -------1----11-
45     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
46     : --------11-1---
46     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
47     : ---------1--11-
47     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
48     : -------11--1---
48     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
49     : ---------1-11--
49     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
50     : -------11----1-
50     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
51 (*) : -------1---11--
51     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
52     : --------11---1-
52     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$2], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$0$sent$0$2]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$0$2, node$0$sent$1$0; node$0$sent$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$0$2 | node$0$sent$1$0; node$0$sent$1$2}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$0$2 | node$0$sent$1$0; node$0$sent$1$2',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$2], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1, node$0$sent$0$2]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$2, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$0$2; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$2 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$0$2; node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$0$sent$1$2 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$0$2; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2, node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$0$2 | node$0$sent$1$0 | node$0$sent$1$1 | node$0$sent$1$2}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE5)', 'sent(NODE1,NODE4)', 'sent(NODE0,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE2,NODE5) | ~sent(NODE1,NODE4) | ~sent(NODE0,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE5 | NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))


=== Prime Orbit 10 =====================
size : 12
num_suborbits: 2
53 (*) : -0-1-----1-----
53     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
54     : --01--------1--
54     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
55     : 0---1--1-------
55     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
56     : --0-1--------1-
56     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
57     : 0----1--1------
57     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
58     : -0---1-----1---
58     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
65 (*) : -0-1---1-------
65     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
66     : --01----1------
66     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
67     : 0---1----1-----
67     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
68     : --0-1------1---
68     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
69     : 0----1------1--
69     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
70     : -0---1-------1-
70     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'internal(node0)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'internal(node0)', 'sent(node0,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'internal(node0)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE3)', 'internal(NODE0)', 'sent(NODE1,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE1,NODE0,NODE3. allowed_in(NODE3) | ~internal(NODE0) | ~sent(NODE1,NODE2) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))


=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
59 (*) : 00-------1-----
59     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
60     : 0-0---------1--
60     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
61     : 00-----1-------
61     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
62     : -00----------1-
62     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
63     : 0-0-----1------
63     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
64     : -00--------1---
64     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~allowed_in(node1)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$1, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~allowed_in(node1)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$1], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$1, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE0)', '~allowed_in(NODE1)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. allowed_in(NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 12 =====================
size : 12
num_suborbits: 2
71 (*) : 0--0-----1-----
71     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
72     : 0--0--------1--
72     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
73     : -0--0--1-------
73     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
74     : -0--0--------1-
74     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
75     : --0--0--1------
75     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
76     : --0--0-----1---
76     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
77 (*) : --0--0-------1-
77     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
78     : -0--0------1---
78     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
79     : --0--0------1--
79     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
80     : 0--0----1------
80     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
81     : -0--0----1-----
81     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
82     : 0--0---1-------
82     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node0)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~internal(node0)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$internal$0': [node$1$allowed_in$0$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$internal$0': node$1$allowed_in$0$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE2)', '~allowed_in(NODE2)', 'sent(NODE0,NODE1)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. internal(NODE2) | allowed_in(NODE2) | ~sent(NODE0,NODE1) | ((NODE1 ~= NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE0 = NODE1))


=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
83 (*) : ---0-0------1--
83     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
84     : ---00----1-----
84     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
85     : ----00-------1-
85     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
86     : ---00--1-------
86     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
87     : ----00-----1---
87     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
88     : ---0-0--1------
88     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1, node$0$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node2)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$1], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$1, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', 'sent(NODE0,NODE1)', '~internal(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE0) | ~sent(NODE0,NODE1) | internal(NODE1) | NODE0 = NODE1


=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
89 (*) : ---1-1--1------
89     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
90     : ---11--1-------
90     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
91     : ----11-----1---
91     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
92     : ---11----1-----
92     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
93     : ----11-------1-
93     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
94     : ---1-1------1--
94     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$1, node$0$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$internal$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$internal$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$0], 'node$0$internal$0; node$0$sent$1': [node$0$internal$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$0, 'node$0$internal$0; node$0$sent$1': node$0$internal$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'sent(NODE0,NODE1)', 'internal(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~internal(NODE0) | ~sent(NODE0,NODE1) | ~internal(NODE1) | NODE0 = NODE1


=== Prime Orbit 15 =====================
size : 1
num_suborbits: 1
95 (*) : 111------------
95     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$2]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: exists NODE0. ~allowed_in(NODE0)


=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
96 (*) : --1-0--0-1-----
96     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
97     : -1---0--0---1--
97     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
98     : --10---1-0-----
98     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
99     : 1----0-----0-1-
99     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
100     : -1-0----1---0--
100     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
101     : 1---0------1-0-
101     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node1)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$1$sent$1$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node1)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'sent(NODE1,NODE2)', '~sent(NODE2,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. internal(NODE1) | ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
102 (*) : --1----0-1-0---
102     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
103     : -1------0---10-
103     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
104     : --1----100-----
104     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
105     : 1----------001-
105     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
106     : -1-----01---0--
106     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
107     : 1--------0-1-0-
107     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~sent(node0,node1)', 'sent(node1,node0)', '~sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$1$sent$0$1, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$1, node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$1 | node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$1 | node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~sent(node0,node1)', 'sent(node1,node0)', '~sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$1, node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$1 | node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$1], 'node$0$sent$0; node$1$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$1, 'node$0$sent$0; node$1$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE1)', 'sent(NODE1,NODE2)', '~sent(NODE1,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 18 =====================
size : 18
num_suborbits: 3
108 (*) : -01------1-0---
108     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
109     : -10---------10-
109     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
110     : 0-1----10------
110     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
111     : 1-0---------01-
111     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
112     : 01-----01------
112     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
113     : 10-------0-1---
113     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
168 (*) : 0-1----0-1-----
168     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
169     : 01------0---1--
169     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
170     : -01----1-0-----
170     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
171     : 10---------0-1-
171     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
172     : -10-----1---0--
172     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
173     : 1-0--------1-0-
173     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
174 (*) : 0-1-----01-----
174     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
175     : 01-----0----1--
175     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
176     : -01----1---0---
176     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
177     : 10-------0---1-
177     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
178     : -10-----1----0-
178     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
179     : 1-0--------10--
179     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node0)', '~sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node2)', '~sent(node0,node1)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node2)', '~sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node0)', '~sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$sent$0': [node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$sent$0': node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE3)', '~sent(NODE3,NODE4)', 'sent(NODE1,NODE2)', 'allowed_in(NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE4,NODE1,NODE2. allowed_in(NODE3) | sent(NODE3,NODE4) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | ((NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))


=== Prime Orbit 19 =====================
size : 18
num_suborbits: 3
114 (*) : --1-1----1-0---
114     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
115     : -1---1------10-
115     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
116     : --11---10------
116     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
117     : 1----1------01-
117     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
118     : -1-1---01------
118     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
119     : 1---1----0-1---
119     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
192 (*) : --11---0-1-----
192     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
193     : -1-1----0---1--
193     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
194     : --1-1--1-0-----
194     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
195     : 1---1------0-1-
195     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
196     : -1---1--1---0--
196     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
197     : 1----1-----1-0-
197     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
198 (*) : --11----01-----
198     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
199     : -1-1---0----1--
199     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
200     : --1-1--1---0---
200     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
201     : 1---1----0---1-
201     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
202     : -1---1--1----0-
202     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
203     : 1----1-----10--
203     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node0)', '~sent(node0,node1)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node0)', '~sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$1$sent$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0; node$1$sent$0': [node$0$internal$0$0; node$1$sent$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0; node$1$sent$0': node$0$internal$0$0; node$1$sent$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE4)', 'allowed_in(NODE0)', 'sent(NODE2,NODE3)', 'internal(NODE1)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE4,NODE1,NODE2. sent(NODE1,NODE4) | ~allowed_in(NODE0) | ~sent(NODE2,NODE3) | ~internal(NODE1) | ((NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))


=== Prime Orbit 20 =====================
size : 24
num_suborbits: 4
120 (*) : --1------1-0-1-
120     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
121     : -1---------110-
121     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
122     : --1----10---1--
122     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
123     : 1-------1---01-
123     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
124     : -1-----011-----
124     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
125     : 1------1-0-1---
125     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
126 (*) : --1----0-1--1--
126     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
127     : -1------01--1--
127     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
128     : --1----1-0---1-
128     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
129     : 1------1---0-1-
129     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
130     : -1------1--10--
130     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
131     : 1-------1--1-0-
131     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
132 (*) : --1-----01--1--
132     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
133     : -1-----0-1--1--
133     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
134     : --1----1---0-1-
134     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
135     : 1------1-0---1-
135     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
136     : -1------1--1-0-
136     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
137     : 1-------1--10--
137     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
150 (*) : --1----011-----
150     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
151     : -1-----10---1--
151     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
152     : --1----1-0-1---
152     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
153     : 1--------1-0-1-
153     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
154     : -1------1---01-
154     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
155     : 1----------110-
155     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0, node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~sent(node0,node1)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0, node$0$sent$0$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node1,node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1; node$1$sent$0$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1; node$1$sent$0$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$1; node$1$sent$0$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$1; node$1$sent$0$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE3)', 'sent(NODE2,NODE4)', 'allowed_in(NODE0)', '~sent(NODE4,NODE5)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE1,NODE3) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | sent(NODE4,NODE5) | ((NODE0 ~= NODE2 | NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE2 | NODE0 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))


=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
138 (*) : -01------1--1--
138     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
139     : -10------1--1--
139     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
140     : 0-1----1-----1-
140     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
141     : 1-0----1-----1-
141     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
142     : 01------1--1---
142     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
143     : 10------1--1---
143     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
156 (*) : -01-----11-----
156     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
157     : -10----1----1--
157     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
158     : 0-1----1---1---
158     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
159     : 1-0------1---1-
159     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
160     : 01------1----1-
160     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
161     : 10---------11--
161     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
180 (*) : 0-1------1---1-
180     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
181     : 01---------11--
181     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
182     : -01----1----1--
182     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
183     : 10------1----1-
183     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
184     : -10-----11-----
184     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
185     : 1-0----1---1---
185     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
186 (*) : 0-1------1-1---
186     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
187     : 01----------11-
187     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
188     : -01----11------
188     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
189     : 10----------11-
189     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
190     : -10----11------
190     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
191     : 1-0------1-1---
191     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$0$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE3)', '~allowed_in(NODE5)', 'sent(NODE2,NODE4)', 'allowed_in(NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE1,NODE3) | allowed_in(NODE5) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE4 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))


=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
144 (*) : --1-1----1--1--
144     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
145     : -1---1---1--1--
145     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
146     : --11---1-----1-
146     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
147     : 1----1-1-----1-
147     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
148     : -1-1----1--1---
148     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
149     : 1---1---1--1---
149     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
162 (*) : --1-1---11-----
162     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
163     : -1---1-1----1--
163     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
164     : --11---1---1---
164     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
165     : 1----1---1---1-
165     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
166     : -1-1----1----1-
166     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
167     : 1---1------11--
167     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
204 (*) : --11-----1---1-
204     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
205     : -1-1-------11--
205     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
206     : --1-1--1----1--
206     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
207     : 1---1---1----1-
207     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
208     : -1---1--11-----
208     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
209     : 1----1-1---1---
209     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
210 (*) : --11-----1-1---
210     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
211     : -1-1--------11-
211     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
212     : --1-1--11------
212     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
213     : 1---1-------11-
213     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
214     : -1---1-11------
214     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
215     : 1----1---1-1---
215     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$internal$0$0; node$0$sent$0$1, node$0$sent$0$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0': node$0$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE4)', 'allowed_in(NODE0)', 'sent(NODE3,NODE5)', 'internal(NODE1)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ~sent(NODE3,NODE5) | ~internal(NODE1) | ((NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE1 = NODE4 | NODE0 = NODE1 | NODE0 = NODE4) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))


=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
216 (*) : ---0-1-1-----1-
216     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
217     : ---01---1--1---
217     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
218     : ----01---1--1--
218     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
219     : ---10---1--1---
219     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
220     : ----10---1--1--
220     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
221     : ---1-0-1-----1-
221     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
222 (*) : ----01-1----1--
222     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
223     : ----10--11-----
223     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
224     : ---0-1---1---1-
224     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
225     : ---1-0-1---1---
225     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
226     : ---01------11--
226     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
227     : ---10---1----1-
227     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
228 (*) : ----01-11------
228     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
229     : ----10-11------
229     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
230     : ---0-1---1-1---
230     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
231     : ---1-0---1-1---
231     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
232     : ---01-------11-
232     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
233     : ---10-------11-
233     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
324 (*) : ---0-1-1---1---
324     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
325     : ---01---1----1-
325     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
326     : ----01--11-----
326     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
327     : ---10------11--
327     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
328     : ----10-1----1--
328     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
329     : ---1-0---1---1-
329     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$1, node$0$sent$0$0; node$0$sent$1$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$1$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE3)', 'internal(NODE0)', 'sent(NODE2,NODE4)', '~internal(NODE5)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE1,NODE3) | ~internal(NODE0) | ~sent(NODE2,NODE4) | internal(NODE5) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE2 | NODE1 ~= NODE4 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))


=== Prime Orbit 24 =====================
size : 12
num_suborbits: 2
234 (*) : ---1---10---1--
234     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
235     : ---1---011-----
235     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
236     : ----1----1-0-1-
236     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
237     : ----1--1-0-1---
237     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
238     : -----1-----110-
238     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
239     : -----1--1---01-
239     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
258 (*) : ----1--1---0-1-
258     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
259     : -----1--1--1-0-
259     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
260     : ---1----01--1--
260     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
261     : -----1--1--10--
261     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
262     : ---1---0-1--1--
262     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
263     : ----1--1-0---1-
263     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$1; node$1$sent$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$1; node$1$sent$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE3)', 'internal(NODE0)', '~sent(NODE0,NODE2)', 'sent(NODE2,NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE1,NODE0,NODE3. ~sent(NODE1,NODE3) | ~internal(NODE0) | sent(NODE0,NODE2) | ~sent(NODE2,NODE0) | ((NODE0 ~= NODE1 | NODE0 = NODE2 | NODE0 = NODE3 | NODE2 = NODE3) & (NODE0 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))


=== Prime Orbit 25 =====================
size : 24
num_suborbits: 4
240 (*) : ---0---1---0-1-
240     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
241     : ---0----1--1-0-
241     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
242     : ----0---01--1--
242     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
243     : ----0---1--10--
243     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
244     : -----0-0-1--1--
244     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
245     : -----0-1-0---1-
245     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
246 (*) : ---0---1-0---1-
246     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
247     : ---0----1--10--
247     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
248     : ----0--0-1--1--
248     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
249     : ----0---1--1-0-
249     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
250     : -----0--01--1--
250     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
251     : -----0-1---0-1-
251     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
294 (*) : ----0--10---1--
294     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
295     : -----0-011-----
295     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
296     : ---0-----1-0-1-
296     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
297     : -----0-1-0-1---
297     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
298     : ---0-------110-
298     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
299     : ----0---1---01-
299     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
312 (*) : ---0---1-0-1---
312     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
313     : ---0----1---01-
313     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
314     : ----0--011-----
314     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
315     : ----0------110-
315     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
316     : -----0-10---1--
316     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
317     : -----0---1-0-1-
317     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', 'sent(node0,node1)', '~sent(node0,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node2)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$internal$0$0, node$1$sent$0$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$internal$0$0 | node$1$sent$0$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$internal$0': [node$1$internal$0$0], 'node$1$sent$0': [node$1$sent$0$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$1$internal$0': node$1$internal$0$0, 'node$1$sent$0': node$1$sent$0$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE6', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE6', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE3)', 'sent(NODE0,NODE2)', '~internal(NODE4)', '~sent(NODE5,NODE6)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE6,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE1,NODE3) | ~sent(NODE0,NODE2) | internal(NODE4) | sent(NODE5,NODE6) | ((NODE0 ~= NODE4 | NODE1 ~= NODE6 | NODE2 ~= NODE3 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE6 | NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE0 ~= NODE5 | NODE1 ~= NODE6 | NODE2 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE6 | NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE1 ~= NODE2 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))


=== Prime Orbit 26 =====================
size : 24
num_suborbits: 4
252 (*) : --00---1-----1-
252     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
253     : -0-0----1--1---
253     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
254     : --0-0----1--1--
254     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
255     : 0---0---1--1---
255     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
256     : -0---0---1--1--
256     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
257     : 0----0-1-----1-
257     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
288 (*) : --0-0--11------
288     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
289     : -0---0-11------
289     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
290     : --00-----1-1---
290     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
291     : 0----0---1-1---
291     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
292     : -0-0--------11-
292     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
293     : 0---0-------11-
293     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
300 (*) : --0-0--1----1--
300     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
301     : -0---0--11-----
301     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
302     : --00-----1---1-
302     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
303     : 0----0-1---1---
303     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
304     : -0-0-------11--
304     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
305     : 0---0---1----1-
305     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
318 (*) : --00---1---1---
318     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
319     : -0-0----1----1-
319     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
320     : --0-0---11-----
320     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
321     : 0---0------11--
321     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
322     : -0---0-1----1--
322     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
323     : 0----0---1---1-
323     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$internal$0$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$allowed_in$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$allowed_in$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$allowed_in$0': [node$1$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$allowed_in$0': node$1$allowed_in$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE3)', 'sent(NODE0,NODE2)', '~allowed_in(NODE4)', '~internal(NODE5)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE1,NODE3) | ~sent(NODE0,NODE2) | allowed_in(NODE4) | internal(NODE5) | ((NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE2 | NODE0 = NODE3 | NODE2 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))


=== Prime Orbit 27 =====================
size : 12
num_suborbits: 2
264 (*) : -0-----1---0-1-
264     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
265     : --0-----1--1-0-
265     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
266     : 0-------01--1--
266     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
267     : --0-----1--10--
267     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
268     : 0------0-1--1--
268     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
269     : -0-----1-0---1-
269     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
306 (*) : 0------10---1--
306     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
307     : 0------011-----
307     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
308     : -0-------1-0-1-
308     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
309     : -0-----1-0-1---
309     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
310     : --0--------110-
310     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
311     : --0-----1---01-
311     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'sent(node0,node1)', '~sent(node0,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$1': node$0$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE3)', 'sent(NODE0,NODE2)', '~sent(NODE3,NODE1)', 'sent(NODE1,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE1,NODE0,NODE3. allowed_in(NODE3) | ~sent(NODE0,NODE2) | sent(NODE3,NODE1) | ~sent(NODE1,NODE3) | ((NODE2 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
270 (*) : -0-----1-0--0--
270     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
271     : --0-----10--0--
271     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
272     : 0------0-1---0-
272     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
273     : --0----0---1-0-
273     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
274     : 0-------0--01--
274     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
275     : -0------0--0-1-
275     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)', '~sent(NODE2,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. allowed_in(NODE1) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | sent(NODE2,NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
276 (*) : ---0---1-0--0--
276     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
277     : ---0----10--0--
277     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
278     : ----0--0-1---0-
278     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
279     : ----0--0---1-0-
279     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
280     : -----0--0--01--
280     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
281     : -----0--0--0-1-
281     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~sent(NODE2,NODE0)', 'sent(NODE0,NODE1)', '~internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | internal(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
282 (*) : ----1--1-0--0--
282     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
283     : -----1--10--0--
283     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
284     : ---1---0-1---0-
284     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
285     : -----1-0---1-0-
285     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
286     : ---1----0--01--
286     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
287     : ----1---0--0-1-
287     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE1)', 'internal(NODE0)', 'sent(NODE1,NODE0)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. sent(NODE2,NODE1) | ~internal(NODE0) | ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
330 (*) : ---0-1-----1-0-
330     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
331     : ---01------0-1-
331     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
332     : ----01--1---0--
332     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
333     : ---10---0---1--
333     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
334     : ----10-1-0-----
334     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
335     : ---1-0-0-1-----
335     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', '~internal(NODE2)', '~sent(NODE0,NODE1)', 'sent(NODE1,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. ~internal(NODE0) | internal(NODE2) | sent(NODE0,NODE1) | ~sent(NODE1,NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
336 (*) : --00-------1-0-
336     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
337     : -0-0-------0-1-
337     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
338     : --0-0---1---0--
338     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
339     : 0---0---0---1--
339     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
340     : -0---0-1-0-----
340     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
341     : 0----0-0-1-----
341     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node0)', 'sent(node1,node2)', '~sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', '~internal(node0)', 'sent(node1,node2)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~internal(NODE2)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. allowed_in(NODE1) | internal(NODE2) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
342 (*) : ---00------1-0-
342     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
343     : ---0-0-----0-1-
343     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
344     : ---00---1---0--
344     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
345     : ----00--0---1--
345     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
346     : ---0-0-1-0-----
346     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
347     : ----00-0-1-----
347     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node1)', 'sent(node1,node2)', '~sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1, node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node1)', 'sent(node1,node2)', '~sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~internal(NODE2)', 'sent(NODE0,NODE1)', '~internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. sent(NODE1,NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | internal(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)


==============================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

==============================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 5 =====================
size : 3
num_suborbits: 1
18 (*) : --1-----0--0---
18     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
19     : -1-----0-----0-
19     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
20     : 1--------0--0--
20     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : -1--1----------
3     : ['allowed_in(node1)', 'internal(node1)']
4     : --1--1---------
4     : ['allowed_in(node2)', 'internal(node2)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)
qcost : 3




=== Prime Orbit 2 =====================
size : 6
num_suborbits: 1
6 (*) : --10-------0---
6     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
7     : -1-0---------0-
7     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
8     : --1-0---0------
8     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
9     : 1---0-------0--
9     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
10     : -1---0-0-------
10     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
11     : 1----0---0-----
11     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE2,NODE0,NODE1. internal(NODE1) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 9




=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
12 (*) : --100----------
12     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
13     : -1-0-0---------
13     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
14     : 1---00---------
14     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
15 (*) : -110-----------
15     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
16     : 1-1-0----------
16     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
17     : 11---0---------
17     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 6 =====================
size : 12
num_suborbits: 2
21 (*) : --1-0------1---
21     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
22     : -1---0-------1-
22     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
23     : --10----1------
23     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
24     : 1----0------1--
24     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
25     : -1-0---1-------
25     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
26     : 1---0----1-----
26     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
27 (*) : --1-0--------1-
27     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
28     : -1---0-----1---
28     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
29     : --10--------1--
29     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
30     : 1----0--1------
30     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
31     : -1-0-----1-----
31     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
32     : 1---0--1-------
32     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE2,NODE1,NODE0,NODE3. ~sent(NODE1,NODE2) | internal(NODE3) | ~allowed_in(NODE0) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))
qcost : 13




=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
33 (*) : -11-----0------
33     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
34     : -11----0-------
34     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
35     : 1-1--------0---
35     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
36     : 1-1------0-----
36     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
37     : 11-----------0-
37     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
38     : 11----------0--
38     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE2,NODE0,NODE1. sent(NODE2,NODE1) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 9




=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
39 (*) : -11--------1---
39     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
40     : -11----------1-
40     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
41     : 1-1-----1------
41     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
42     : 1-1---------1--
42     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
43     : 11-----1-------
43     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
44     : 11-------1-----
44     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~allowed_in(NODE1) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 9 =====================
size : 8
num_suborbits: 2
45 (*) : -------1----11-
45     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
46     : --------11-1---
46     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
47     : ---------1--11-
47     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
48     : -------11--1---
48     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
49     : ---------1-11--
49     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
50     : -------11----1-
50     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
51 (*) : -------1---11--
51     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
52     : --------11---1-
52     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
num_forall :   6
num_exists :   0
num_literals : 15
quantified form : forall NODE3,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE2,NODE5) | ~sent(NODE1,NODE4) | ~sent(NODE0,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE5 | NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))
qcost : 21




=== Prime Orbit 10 =====================
size : 12
num_suborbits: 2
53 (*) : -0-1-----1-----
53     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
54     : --01--------1--
54     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
55     : 0---1--1-------
55     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
56     : --0-1--------1-
56     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
57     : 0----1--1------
57     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
58     : -0---1-----1---
58     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
65 (*) : -0-1---1-------
65     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
66     : --01----1------
66     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
67     : 0---1----1-----
67     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
68     : --0-1------1---
68     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
69     : 0----1------1--
69     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
70     : -0---1-------1-
70     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE2,NODE1,NODE0,NODE3. allowed_in(NODE3) | ~internal(NODE0) | ~sent(NODE1,NODE2) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))
qcost : 13




=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
59 (*) : 00-------1-----
59     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
60     : 0-0---------1--
60     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
61     : 00-----1-------
61     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
62     : -00----------1-
62     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
63     : 0-0-----1------
63     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
64     : -00--------1---
64     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. allowed_in(NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 12 =====================
size : 12
num_suborbits: 2
71 (*) : 0--0-----1-----
71     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
72     : 0--0--------1--
72     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
73     : -0--0--1-------
73     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
74     : -0--0--------1-
74     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
75     : --0--0--1------
75     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
76     : --0--0-----1---
76     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
77 (*) : --0--0-------1-
77     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
78     : -0--0------1---
78     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
79     : --0--0------1--
79     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
80     : 0--0----1------
80     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
81     : -0--0----1-----
81     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
82     : 0--0---1-------
82     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. internal(NODE2) | allowed_in(NODE2) | ~sent(NODE0,NODE1) | ((NODE1 ~= NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE0 = NODE1))
qcost : 10




=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
83 (*) : ---0-0------1--
83     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
84     : ---00----1-----
84     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
85     : ----00-------1-
85     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
86     : ---00--1-------
86     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
87     : ----00-----1---
87     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
88     : ---0-0--1------
88     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. internal(NODE0) | ~sent(NODE0,NODE1) | internal(NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
89 (*) : ---1-1--1------
89     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
90     : ---11--1-------
90     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
91     : ----11-----1---
91     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
92     : ---11----1-----
92     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
93     : ----11-------1-
93     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
94     : ---1-1------1--
94     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~internal(NODE0) | ~sent(NODE0,NODE1) | ~internal(NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 15 =====================
size : 1
num_suborbits: 1
95 (*) : 111------------
95     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists NODE0. ~allowed_in(NODE0)
qcost : 2




=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
96 (*) : --1-0--0-1-----
96     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
97     : -1---0--0---1--
97     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
98     : --10---1-0-----
98     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
99     : 1----0-----0-1-
99     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
100     : -1-0----1---0--
100     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
101     : 1---0------1-0-
101     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. internal(NODE1) | ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
102 (*) : --1----0-1-0---
102     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
103     : -1------0---10-
103     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
104     : --1----100-----
104     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
105     : 1----------001-
105     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
106     : -1-----01---0--
106     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
107     : 1--------0-1-0-
107     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 18 =====================
size : 18
num_suborbits: 3
108 (*) : -01------1-0---
108     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
109     : -10---------10-
109     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
110     : 0-1----10------
110     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
111     : 1-0---------01-
111     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
112     : 01-----01------
112     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
113     : 10-------0-1---
113     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
168 (*) : 0-1----0-1-----
168     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
169     : 01------0---1--
169     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
170     : -01----1-0-----
170     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
171     : 10---------0-1-
171     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
172     : -10-----1---0--
172     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
173     : 1-0--------1-0-
173     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
174 (*) : 0-1-----01-----
174     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
175     : 01-----0----1--
175     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
176     : -01----1---0---
176     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
177     : 10-------0---1-
177     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
178     : -10-----1----0-
178     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
179     : 1-0--------10--
179     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   5
num_exists :   0
num_literals : 19
quantified form : forall NODE3,NODE0,NODE4,NODE1,NODE2. allowed_in(NODE3) | sent(NODE3,NODE4) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | ((NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))
qcost : 24




=== Prime Orbit 19 =====================
size : 18
num_suborbits: 3
114 (*) : --1-1----1-0---
114     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
115     : -1---1------10-
115     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
116     : --11---10------
116     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
117     : 1----1------01-
117     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
118     : -1-1---01------
118     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
119     : 1---1----0-1---
119     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
192 (*) : --11---0-1-----
192     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
193     : -1-1----0---1--
193     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
194     : --1-1--1-0-----
194     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
195     : 1---1------0-1-
195     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
196     : -1---1--1---0--
196     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
197     : 1----1-----1-0-
197     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
198 (*) : --11----01-----
198     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
199     : -1-1---0----1--
199     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
200     : --1-1--1---0---
200     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
201     : 1---1----0---1-
201     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
202     : -1---1--1----0-
202     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
203     : 1----1-----10--
203     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
num_forall :   5
num_exists :   0
num_literals : 19
quantified form : forall NODE3,NODE0,NODE4,NODE1,NODE2. sent(NODE1,NODE4) | ~allowed_in(NODE0) | ~sent(NODE2,NODE3) | ~internal(NODE1) | ((NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))
qcost : 24




=== Prime Orbit 20 =====================
size : 24
num_suborbits: 4
120 (*) : --1------1-0-1-
120     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
121     : -1---------110-
121     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
122     : --1----10---1--
122     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
123     : 1-------1---01-
123     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
124     : -1-----011-----
124     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
125     : 1------1-0-1---
125     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
126 (*) : --1----0-1--1--
126     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
127     : -1------01--1--
127     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
128     : --1----1-0---1-
128     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
129     : 1------1---0-1-
129     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
130     : -1------1--10--
130     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
131     : 1-------1--1-0-
131     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
132 (*) : --1-----01--1--
132     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
133     : -1-----0-1--1--
133     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
134     : --1----1---0-1-
134     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
135     : 1------1-0---1-
135     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
136     : -1------1--1-0-
136     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
137     : 1-------1--10--
137     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
150 (*) : --1----011-----
150     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
151     : -1-----10---1--
151     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
152     : --1----1-0-1---
152     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
153     : 1--------1-0-1-
153     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
154     : -1------1---01-
154     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
155     : 1----------110-
155     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE3,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE1,NODE3) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | sent(NODE4,NODE5) | ((NODE0 ~= NODE2 | NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE2 | NODE0 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))
qcost : 34




=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
138 (*) : -01------1--1--
138     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
139     : -10------1--1--
139     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
140     : 0-1----1-----1-
140     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
141     : 1-0----1-----1-
141     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
142     : 01------1--1---
142     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
143     : 10------1--1---
143     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
156 (*) : -01-----11-----
156     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
157     : -10----1----1--
157     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
158     : 0-1----1---1---
158     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
159     : 1-0------1---1-
159     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
160     : 01------1----1-
160     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
161     : 10---------11--
161     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
180 (*) : 0-1------1---1-
180     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
181     : 01---------11--
181     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
182     : -01----1----1--
182     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
183     : 10------1----1-
183     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
184     : -10-----11-----
184     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
185     : 1-0----1---1---
185     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
186 (*) : 0-1------1-1---
186     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
187     : 01----------11-
187     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
188     : -01----11------
188     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
189     : 10----------11-
189     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
190     : -10----11------
190     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
191     : 1-0------1-1---
191     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE3,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE1,NODE3) | allowed_in(NODE5) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE4 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))
qcost : 34




=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
144 (*) : --1-1----1--1--
144     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
145     : -1---1---1--1--
145     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
146     : --11---1-----1-
146     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
147     : 1----1-1-----1-
147     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
148     : -1-1----1--1---
148     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
149     : 1---1---1--1---
149     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
162 (*) : --1-1---11-----
162     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
163     : -1---1-1----1--
163     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
164     : --11---1---1---
164     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
165     : 1----1---1---1-
165     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
166     : -1-1----1----1-
166     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
167     : 1---1------11--
167     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
204 (*) : --11-----1---1-
204     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
205     : -1-1-------11--
205     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
206     : --1-1--1----1--
206     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
207     : 1---1---1----1-
207     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
208     : -1---1--11-----
208     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
209     : 1----1-1---1---
209     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
210 (*) : --11-----1-1---
210     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
211     : -1-1--------11-
211     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
212     : --1-1--11------
212     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
213     : 1---1-------11-
213     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
214     : -1---1-11------
214     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
215     : 1----1---1-1---
215     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE3,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ~sent(NODE3,NODE5) | ~internal(NODE1) | ((NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE1 = NODE4 | NODE0 = NODE1 | NODE0 = NODE4) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))
qcost : 34




=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
216 (*) : ---0-1-1-----1-
216     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
217     : ---01---1--1---
217     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
218     : ----01---1--1--
218     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
219     : ---10---1--1---
219     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
220     : ----10---1--1--
220     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
221     : ---1-0-1-----1-
221     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
222 (*) : ----01-1----1--
222     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
223     : ----10--11-----
223     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
224     : ---0-1---1---1-
224     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
225     : ---1-0-1---1---
225     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
226     : ---01------11--
226     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
227     : ---10---1----1-
227     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
228 (*) : ----01-11------
228     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
229     : ----10-11------
229     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
230     : ---0-1---1-1---
230     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
231     : ---1-0---1-1---
231     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
232     : ---01-------11-
232     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
233     : ---10-------11-
233     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
324 (*) : ---0-1-1---1---
324     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
325     : ---01---1----1-
325     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
326     : ----01--11-----
326     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
327     : ---10------11--
327     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
328     : ----10-1----1--
328     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
329     : ---1-0---1---1-
329     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE3,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE1,NODE3) | ~internal(NODE0) | ~sent(NODE2,NODE4) | internal(NODE5) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE2 | NODE1 ~= NODE4 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))
qcost : 34




=== Prime Orbit 24 =====================
size : 12
num_suborbits: 2
234 (*) : ---1---10---1--
234     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
235     : ---1---011-----
235     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
236     : ----1----1-0-1-
236     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
237     : ----1--1-0-1---
237     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
238     : -----1-----110-
238     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
239     : -----1--1---01-
239     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
258 (*) : ----1--1---0-1-
258     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
259     : -----1--1--1-0-
259     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
260     : ---1----01--1--
260     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
261     : -----1--1--10--
261     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
262     : ---1---0-1--1--
262     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
263     : ----1--1-0---1-
263     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
num_forall :   4
num_exists :   0
num_literals : 12
quantified form : forall NODE2,NODE1,NODE0,NODE3. ~sent(NODE1,NODE3) | ~internal(NODE0) | sent(NODE0,NODE2) | ~sent(NODE2,NODE0) | ((NODE0 ~= NODE1 | NODE0 = NODE2 | NODE0 = NODE3 | NODE2 = NODE3) & (NODE0 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))
qcost : 16




=== Prime Orbit 25 =====================
size : 24
num_suborbits: 4
240 (*) : ---0---1---0-1-
240     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
241     : ---0----1--1-0-
241     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
242     : ----0---01--1--
242     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
243     : ----0---1--10--
243     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
244     : -----0-0-1--1--
244     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
245     : -----0-1-0---1-
245     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
246 (*) : ---0---1-0---1-
246     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
247     : ---0----1--10--
247     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
248     : ----0--0-1--1--
248     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
249     : ----0---1--1-0-
249     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
250     : -----0--01--1--
250     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
251     : -----0-1---0-1-
251     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
294 (*) : ----0--10---1--
294     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
295     : -----0-011-----
295     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
296     : ---0-----1-0-1-
296     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
297     : -----0-1-0-1---
297     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
298     : ---0-------110-
298     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
299     : ----0---1---01-
299     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
312 (*) : ---0---1-0-1---
312     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
313     : ---0----1---01-
313     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
314     : ----0--011-----
314     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
315     : ----0------110-
315     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
316     : -----0-10---1--
316     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
317     : -----0---1-0-1-
317     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   7
num_exists :   0
num_literals : 32
quantified form : forall NODE3,NODE6,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE1,NODE3) | ~sent(NODE0,NODE2) | internal(NODE4) | sent(NODE5,NODE6) | ((NODE0 ~= NODE4 | NODE1 ~= NODE6 | NODE2 ~= NODE3 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE6 | NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE0 ~= NODE5 | NODE1 ~= NODE6 | NODE2 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE6 | NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE1 ~= NODE2 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))
qcost : 39




=== Prime Orbit 26 =====================
size : 24
num_suborbits: 4
252 (*) : --00---1-----1-
252     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
253     : -0-0----1--1---
253     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
254     : --0-0----1--1--
254     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
255     : 0---0---1--1---
255     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
256     : -0---0---1--1--
256     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
257     : 0----0-1-----1-
257     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
288 (*) : --0-0--11------
288     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
289     : -0---0-11------
289     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
290     : --00-----1-1---
290     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
291     : 0----0---1-1---
291     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
292     : -0-0--------11-
292     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
293     : 0---0-------11-
293     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
300 (*) : --0-0--1----1--
300     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
301     : -0---0--11-----
301     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
302     : --00-----1---1-
302     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
303     : 0----0-1---1---
303     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
304     : -0-0-------11--
304     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
305     : 0---0---1----1-
305     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
318 (*) : --00---1---1---
318     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
319     : -0-0----1----1-
319     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
320     : --0-0---11-----
320     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
321     : 0---0------11--
321     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
322     : -0---0-1----1--
322     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
323     : 0----0---1---1-
323     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE3,NODE0,NODE4,NODE1,NODE2,NODE5. ~sent(NODE1,NODE3) | ~sent(NODE0,NODE2) | allowed_in(NODE4) | internal(NODE5) | ((NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE2 | NODE0 = NODE3 | NODE2 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))
qcost : 34




=== Prime Orbit 27 =====================
size : 12
num_suborbits: 2
264 (*) : -0-----1---0-1-
264     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
265     : --0-----1--1-0-
265     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
266     : 0-------01--1--
266     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
267     : --0-----1--10--
267     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
268     : 0------0-1--1--
268     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
269     : -0-----1-0---1-
269     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
306 (*) : 0------10---1--
306     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
307     : 0------011-----
307     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
308     : -0-------1-0-1-
308     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
309     : -0-----1-0-1---
309     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
310     : --0--------110-
310     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
311     : --0-----1---01-
311     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   4
num_exists :   0
num_literals : 12
quantified form : forall NODE2,NODE1,NODE0,NODE3. allowed_in(NODE3) | ~sent(NODE0,NODE2) | sent(NODE3,NODE1) | ~sent(NODE1,NODE3) | ((NODE2 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2))
qcost : 16




=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
270 (*) : -0-----1-0--0--
270     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
271     : --0-----10--0--
271     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
272     : 0------0-1---0-
272     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
273     : --0----0---1-0-
273     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
274     : 0-------0--01--
274     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
275     : -0------0--0-1-
275     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. allowed_in(NODE1) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | sent(NODE2,NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
276 (*) : ---0---1-0--0--
276     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
277     : ---0----10--0--
277     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
278     : ----0--0-1---0-
278     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
279     : ----0--0---1-0-
279     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
280     : -----0--0--01--
280     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
281     : -----0--0--0-1-
281     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | internal(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
282 (*) : ----1--1-0--0--
282     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
283     : -----1--10--0--
283     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
284     : ---1---0-1---0-
284     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
285     : -----1-0---1-0-
285     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
286     : ---1----0--01--
286     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
287     : ----1---0--0-1-
287     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. sent(NODE2,NODE1) | ~internal(NODE0) | ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
330 (*) : ---0-1-----1-0-
330     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
331     : ---01------0-1-
331     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
332     : ----01--1---0--
332     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
333     : ---10---0---1--
333     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
334     : ----10-1-0-----
334     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
335     : ---1-0-0-1-----
335     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. ~internal(NODE0) | internal(NODE2) | sent(NODE0,NODE1) | ~sent(NODE1,NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
336 (*) : --00-------1-0-
336     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
337     : -0-0-------0-1-
337     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
338     : --0-0---1---0--
338     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
339     : 0---0---0---1--
339     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
340     : -0---0-1-0-----
340     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
341     : 0----0-0-1-----
341     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. allowed_in(NODE1) | internal(NODE2) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
342 (*) : ---00------1-0-
342     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
343     : ---0-0-----0-1-
343     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
344     : ---00---1---0--
344     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
345     : ----00--0---1--
345     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
346     : ---0-0-1-0-----
346     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
347     : ----00-0-1-----
347     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. sent(NODE1,NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | internal(NODE0) | (NODE0 = NODE1 | NODE1 = NODE2 | NODE0 = NODE2)
qcost : 10



[QRM NOTE]: Time elapsed since start: 1.608 seconds

[QRM NOTE]: Time elapsed since last: 1.505 seconds

[QRM NOTE]: Peak memory: 2260952 bytes


=============================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall.ivy: node=3]

=============================================================================


New level: 1
 pending : [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 5]


Before reduction : 
 pending  : [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 5]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, 768), (11, 512), (12, 640), (13, 512), (14, 512), (15, 512), (16, 256), (17, 128), (18, 384), (19, 384), (20, 448), (21, 424), (22, 544), (23, 480), (24, 384), (25, 456), (26, 640), (27, 384), (28, 128), (29, 128), (30, 128), (31, 256), (32, 256), (33, 256)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, 768), (11, 512), (12, 640), (13, 512), (14, 512), (15, 512), (16, 256), (17, 128), (18, 384), (19, 384), (20, 448), (21, 424), (22, 544), (23, 480), (24, 384), (25, 456), (26, 640), (27, 384), (28, 128), (29, 128), (30, 128), (31, 256), (32, 256), (33, 256)]

Covered at level 1 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 5]


Solution : [0, 5] has cost 7.


Decide in level 1 among pending : [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, 1024), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, 768), (11, 512), (12, 640), (13, 512), (14, 512), (15, 512), (16, 256), (17, 128), (18, 384), (19, 384), (20, 448), (21, 424), (22, 544), (23, 480), (24, 384), (25, 456), (26, 640), (27, 384), (28, 128), (29, 128), (30, 128), (31, 256), (32, 256), (33, 256)]

Decide 1 with phase True at level 1

After decision at level 1
 pending : [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 5, 1]


New level: 2
 pending : [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 5, 1]


Before reduction : 
 pending  : [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 5, 1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, 768), (11, 512), (12, 640), (13, 512), (14, 512), (15, 512), (16, 256), (17, 128), (18, 384), (19, 384), (20, 448), (21, 424), (22, 544), (23, 480), (24, 384), (25, 456), (26, 640), (27, 384), (28, 128), (29, 128), (30, 128), (31, 256), (32, 256), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 264), (7, 64), (8, 128), (9, 576), (10, 320), (11, 512), (12, 640), (13, 512), (14, 128), (15, 64), (16, 128), (17, 64), (18, 192), (19, 96), (20, 224), (21, 212), (22, 136), (23, 240), (24, 192), (25, 420), (26, 640), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Covered at level 2 : set()

After reduction : 
 pending  : [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 5, 1]


Solution : [0, 5, 1] has cost 10.


Decide in level 2 among pending : [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 264), (7, 64), (8, 128), (9, 576), (10, 320), (11, 512), (12, 640), (13, 512), (14, 128), (15, 64), (16, 128), (17, 64), (18, 192), (19, 96), (20, 224), (21, 212), (22, 136), (23, 240), (24, 192), (25, 420), (26, 640), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Decide 12 with phase True at level 2

After decision at level 2
 pending : [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 5, 1, 12]


New level: 3
 pending : [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 5, 1, 12]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 264), (7, 64), (8, 128), (9, 576), (10, 320), (11, 512), (12, 640), (13, 512), (14, 128), (15, 64), (16, 128), (17, 64), (18, 192), (19, 96), (20, 224), (21, 212), (22, 136), (23, 240), (24, 192), (25, 420), (26, 640), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, 576), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 144), (27, 192), (28, 32), (29, 0), (30, 32), (31, 128), (32, 128), (33, 32)]

Covered at level 3 : {29}

After reduction : 
 pending  : [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, 576), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 144), (27, 192), (28, 32), (29, 0), (30, 32), (31, 128), (32, 128), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, 576), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 144), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 3 among pending : [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, 576), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 144), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Decide 9 with phase True at level 3

After decision at level 3
 pending : [2, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12, 9]


New level: 4
 pending : [2, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12, 9]


Before reduction : 
 pending  : [2, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12, 9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, 576), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 144), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 4)]

Covered at level 4 : set()

After reduction : 
 pending  : [2, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12, 9]


Solution : [0, 5, 1, 12, 9] has cost 41.


Decide in level 4 among pending : [2, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 4)]

Decide 3 with phase True at level 4

After decision at level 4
 pending : [2, 4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3]


New level: 5
 pending : [2, 4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3]


Before reduction : 
 pending  : [2, 4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 0), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, 0), (16, 1), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 1)]

Covered at level 5 : {4, 15}

After reduction : 
 pending  : [2, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3]


Before reduction : 
 pending  : [2, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 0), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, 0), (16, 1), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 1)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3]


Solution : [0, 5, 1, 12, 9, 3] has cost 46.


Decide in level 5 among pending : [2, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 1)]

Decide 10 with phase True at level 5

After decision at level 5
 pending : [2, 6, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]


New level: 6
 pending : [2, 6, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]


Before reduction : 
 pending  : [2, 6, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, 0), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, 0), (25, 2), (26, 7), (27, 0), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

Covered at level 6 : {11, 14, 24, 27, 28, 30}

After reduction : 
 pending  : [2, 6, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]


Before reduction : 
 pending  : [2, 6, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, 0), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, 0), (25, 2), (26, 7), (27, 0), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 6, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]


Solution : [0, 5, 1, 12, 9, 3, 10] has cost 59.


Decide in level 6 among pending : [2, 6, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 6 with phase True at level 6

After decision at level 6
 pending : [2, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 6]


New level: 7
 pending : [2, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 6]


Before reduction : 
 pending  : [2, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 7 : {32, 33, 2, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 6]


Solution : [0, 5, 1, 12, 9, 3, 10, 6] has cost 72.


Before backtrack at level 7
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 10, 6]

After backtrack at level 7
 pending : [2, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 6]


Invert decision for 6 at level 6


New level: 7
 pending : [2, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]


Before reduction : 
 pending  : [2, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]


Solution : [0, 5, 1, 12, 9, 3, 10] has cost 59.


Decide in level 7 among pending : [2, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [2, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 8]


New level: 8
 pending : [2, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 8]


Before reduction : 
 pending  : [2, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 8 : {32, 33, 2, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 8]


Solution : [0, 5, 1, 12, 9, 3, 10, 8] has cost 65.


Before backtrack at level 8
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 10, 8]

After backtrack at level 8
 pending : [2, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [2, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]


Before reduction : 
 pending  : [2, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]


Solution : [0, 5, 1, 12, 9, 3, 10] has cost 59.


Decide in level 8 among pending : [2, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [2, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 13]


New level: 9
 pending : [2, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 13]


Before reduction : 
 pending  : [2, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 9 : {32, 33, 2, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 13]


Solution : [0, 5, 1, 12, 9, 3, 10, 13] has cost 65.


Before backtrack at level 9
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 10, 13]

After backtrack at level 9
 pending : [2, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [2, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]


Before reduction : 
 pending  : [2, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]


Solution : [0, 5, 1, 12, 9, 3, 10] has cost 59.


Decide in level 9 among pending : [2, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 2 with phase True at level 9

After decision at level 9
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 2]


New level: 10
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 2]


Before reduction : 
 pending  : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 10 : {32, 33, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 2]


Solution : [0, 5, 1, 12, 9, 3, 10, 2] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 10, 2]

After backtrack at level 10
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10, 2]


Invert decision for 2 at level 9


New level: 10
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]


Before reduction : 
 pending  : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]

Essensial at level 10 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 10 : {32, 33, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 10, 7]


Solution : [0, 5, 1, 12, 9, 3, 10, 7] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 10, 7]

After backtrack at level 10
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]


Before backtrack at level 9
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 10]

After backtrack at level 9
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 2]
 solution : [0, 5, 1, 12, 9, 3, 10]


Before backtrack at level 8
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 2]
 solution : [0, 5, 1, 12, 9, 3, 10]

After backtrack at level 8
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 2, 13]
 solution : [0, 5, 1, 12, 9, 3, 10]


Before backtrack at level 7
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 2, 13]
 solution : [0, 5, 1, 12, 9, 3, 10]

After backtrack at level 7
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 2, 13, 8]
 solution : [0, 5, 1, 12, 9, 3, 10]


Before backtrack at level 6
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 2, 13, 8]
 solution : [0, 5, 1, 12, 9, 3, 10]

After backtrack at level 6
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 2, 13, 8, 11, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3, 10]


Invert decision for 10 at level 5


New level: 6
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 2, 13, 8, 11, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3]


Before reduction : 
 pending  : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 2, 13, 8, 11, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 2, 13, 8, 11, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3]


Solution : [0, 5, 1, 12, 9, 3] has cost 46.


Decide in level 6 among pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31, 32, 33, 2, 13, 8, 11, 14, 24, 27, 28, 30, 6]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 1)]

Decide 31 with phase True at level 6

After decision at level 6
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 32, 33, 2, 13, 8, 11, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3, 31]


New level: 7
 pending : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 32, 33, 2, 13, 8, 11, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3, 31]


Before reduction : 
 pending  : [7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 32, 33, 2, 13, 8, 11, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3, 31]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 0), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, 0), (33, 0)]

Covered at level 7 : {16, 33, 32}

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 11, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3, 31]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 11, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3, 31]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 0), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 11, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3, 31]


Solution : [0, 5, 1, 12, 9, 3, 31] has cost 56.


Decide in level 7 among pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 11, 14, 24, 27, 28, 30, 6]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 7

After decision at level 7
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


New level: 8
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {14, 24, 27, 28, 30}

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Solution : [0, 5, 1, 12, 9, 3, 31, 11] has cost 62.


Decide in level 8 among pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 6]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 13]


New level: 9
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 13]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {2, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 13]


Solution : [0, 5, 1, 12, 9, 3, 31, 11, 13] has cost 68.


Before backtrack at level 9
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 13]

After backtrack at level 9
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Solution : [0, 5, 1, 12, 9, 3, 31, 11] has cost 62.


Decide in level 9 among pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 8]


New level: 10
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 8]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {2, 6, 7, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 8]


Solution : [0, 5, 1, 12, 9, 3, 31, 11, 8] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 8]

After backtrack at level 10
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Solution : [0, 5, 1, 12, 9, 3, 31, 11] has cost 62.


Decide in level 10 among pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 6]


New level: 11
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 6]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {2, 7, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 6]


Solution : [0, 5, 1, 12, 9, 3, 31, 11, 6] has cost 75.


Before backtrack at level 11
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 6]

After backtrack at level 11
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Solution : [0, 5, 1, 12, 9, 3, 31, 11] has cost 62.


Decide in level 11 among pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 11

After decision at level 11
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 7]


New level: 12
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 7]


Before reduction : 
 pending  : [17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {2, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 7]


Solution : [0, 5, 1, 12, 9, 3, 31, 11, 7] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 7]

After backtrack at level 12
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 7]


Invert decision for 7 at level 11


New level: 12
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Before reduction : 
 pending  : [17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]

Essensial at level 12 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 2]


Solution : [0, 5, 1, 12, 9, 3, 31, 11, 2] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 31, 11, 2]

After backtrack at level 12
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Before backtrack at level 11
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]

After backtrack at level 11
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Before backtrack at level 10
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]

After backtrack at level 10
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Before backtrack at level 9
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 6]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]

After backtrack at level 9
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 6, 8]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Before backtrack at level 8
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 6, 8]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]

After backtrack at level 8
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 6, 8, 14, 24, 27, 28, 30, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 11]


Invert decision for 11 at level 7


New level: 8
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 6, 8, 14, 24, 27, 28, 30, 13]
 solution : [0, 5, 1, 12, 9, 3, 31]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 6, 8, 14, 24, 27, 28, 30, 13]
 solution : [0, 5, 1, 12, 9, 3, 31]

Essensial at level 8 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {24, 27, 28, 30}

After reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 6, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 6, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 6, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]


Solution : [0, 5, 1, 12, 9, 3, 31, 14] has cost 62.


Decide in level 8 among pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 6, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 8

After decision at level 8
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 6]


New level: 9
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 6]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {2, 7, 8, 13, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 6]


Solution : [0, 5, 1, 12, 9, 3, 31, 14, 6] has cost 75.


Before backtrack at level 9
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 6]

After backtrack at level 9
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 6]


Invert decision for 6 at level 8


New level: 9
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]


Solution : [0, 5, 1, 12, 9, 3, 31, 14] has cost 62.


Decide in level 9 among pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 8]


New level: 10
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 8]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {2, 7, 13, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 8]


Solution : [0, 5, 1, 12, 9, 3, 31, 14, 8] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 8]

After backtrack at level 10
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]


Solution : [0, 5, 1, 12, 9, 3, 31, 14] has cost 62.


Decide in level 10 among pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7, 13]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 13]


New level: 11
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 13]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {2, 7, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 13]


Solution : [0, 5, 1, 12, 9, 3, 31, 14, 13] has cost 68.


Before backtrack at level 11
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 13]

After backtrack at level 11
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]


Solution : [0, 5, 1, 12, 9, 3, 31, 14] has cost 62.


Decide in level 11 among pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 7]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 2]


New level: 12
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 2]


Before reduction : 
 pending  : [17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {7, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 2]


Solution : [0, 5, 1, 12, 9, 3, 31, 14, 2] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 2]

After backtrack at level 12
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]


Before reduction : 
 pending  : [17, 18, 19, 20, 21, 22, 23, 25, 26, 7]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]

Essensial at level 12 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 7]


Solution : [0, 5, 1, 12, 9, 3, 31, 14, 7] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 31, 14, 7]

After backtrack at level 12
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]


Before backtrack at level 11
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]

After backtrack at level 11
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]


Before backtrack at level 10
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]

After backtrack at level 10
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]


Before backtrack at level 9
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]

After backtrack at level 9
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]


Before backtrack at level 8
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8]
 solution : [0, 5, 1, 12, 9, 3, 31, 14]

After backtrack at level 8
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3, 31]


Before backtrack at level 7
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 14, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3, 31]

After backtrack at level 7
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 14, 24, 27, 28, 30, 6, 16, 32, 33, 11]
 solution : [0, 5, 1, 12, 9, 3, 31]


Invert decision for 31 at level 6


New level: 7
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 14, 24, 27, 28, 30, 6, 16, 32, 33, 11]
 solution : [0, 5, 1, 12, 9, 3]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 14, 24, 27, 28, 30, 6, 16, 32, 33, 11]
 solution : [0, 5, 1, 12, 9, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, 128), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 14, 24, 27, 28, 30, 6, 16, 32, 33, 11]
 solution : [0, 5, 1, 12, 9, 3]


Solution : [0, 5, 1, 12, 9, 3] has cost 46.


Decide in level 7 among pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 14, 24, 27, 28, 30, 6, 16, 32, 33, 11]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, 128), (33, 1)]

Decide 14 with phase True at level 7

After decision at level 7
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 24, 27, 28, 30, 6, 16, 32, 33, 11]
 solution : [0, 5, 1, 12, 9, 3, 14]


New level: 8
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 24, 27, 28, 30, 6, 16, 32, 33, 11]
 solution : [0, 5, 1, 12, 9, 3, 14]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 24, 27, 28, 30, 6, 16, 32, 33, 11]
 solution : [0, 5, 1, 12, 9, 3, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, 128), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, 0), (25, 2), (26, 7), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, 1), (33, 1)]

Covered at level 8 : {11, 24, 27, 28, 30}

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, 0), (25, 2), (26, 7), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]


Solution : [0, 5, 1, 12, 9, 3, 14] has cost 52.


Decide in level 8 among pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 13, 8, 6, 16, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 13]


New level: 9
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 13]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 9 : {32, 33, 2, 6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 13]


Solution : [0, 5, 1, 12, 9, 3, 14, 13] has cost 58.


Before backtrack at level 9
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 14, 13]

After backtrack at level 9
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]


Solution : [0, 5, 1, 12, 9, 3, 14] has cost 52.


Decide in level 9 among pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 8, 6, 16, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 8]


New level: 10
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 8]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 10 : {32, 33, 2, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 8]


Solution : [0, 5, 1, 12, 9, 3, 14, 8] has cost 58.


Before backtrack at level 10
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 14, 8]

After backtrack at level 10
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]


Solution : [0, 5, 1, 12, 9, 3, 14] has cost 52.


Decide in level 10 among pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 6, 16, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 6]


New level: 11
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 6]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 11 : {32, 33, 2, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 6]


Solution : [0, 5, 1, 12, 9, 3, 14, 6] has cost 65.


Before backtrack at level 11
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 14, 6]

After backtrack at level 11
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]


Solution : [0, 5, 1, 12, 9, 3, 14] has cost 52.


Decide in level 11 among pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Decide 7 with phase True at level 11

After decision at level 11
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 7]


New level: 12
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 7]


Before reduction : 
 pending  : [17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 12 : {32, 33, 2, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 7]


Solution : [0, 5, 1, 12, 9, 3, 14, 7] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 14, 7]

After backtrack at level 12
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14, 7]


Invert decision for 7 at level 11


New level: 12
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]


Before reduction : 
 pending  : [17, 18, 19, 20, 21, 22, 23, 25, 26, 2, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]

Essensial at level 12 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 12 : {32, 33, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 14, 2]


Solution : [0, 5, 1, 12, 9, 3, 14, 2] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 14, 2]

After backtrack at level 12
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]


Before backtrack at level 11
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 14]

After backtrack at level 11
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 14]


Before backtrack at level 10
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 14]

After backtrack at level 10
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 6]
 solution : [0, 5, 1, 12, 9, 3, 14]


Before backtrack at level 9
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 6]
 solution : [0, 5, 1, 12, 9, 3, 14]

After backtrack at level 9
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 6, 8]
 solution : [0, 5, 1, 12, 9, 3, 14]


Before backtrack at level 8
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 6, 8]
 solution : [0, 5, 1, 12, 9, 3, 14]

After backtrack at level 8
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 6, 8, 24, 27, 28, 30, 11, 13]
 solution : [0, 5, 1, 12, 9, 3, 14]


Invert decision for 14 at level 7


New level: 8
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 6, 8, 24, 27, 28, 30, 11, 13]
 solution : [0, 5, 1, 12, 9, 3]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 6, 8, 24, 27, 28, 30, 11, 13]
 solution : [0, 5, 1, 12, 9, 3]

Essensial at level 8 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, 0), (25, 2), (26, 7), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, 1), (33, 1)]

Covered at level 8 : {24, 27, 28, 30}

After reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 6, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 11]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 6, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, 0), (25, 2), (26, 7), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 6, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 11]


Solution : [0, 5, 1, 12, 9, 3, 11] has cost 52.


Decide in level 8 among pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 6, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Decide 6 with phase True at level 8

After decision at level 8
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 11, 6]


New level: 9
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 11, 6]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 11, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 9 : {32, 33, 2, 7, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 6]


Solution : [0, 5, 1, 12, 9, 3, 11, 6] has cost 65.


Before backtrack at level 9
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 11, 6]

After backtrack at level 9
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 11, 6]


Invert decision for 6 at level 8


New level: 9
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 11]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 8, 13]
 solution : [0, 5, 1, 12, 9, 3, 11]


Solution : [0, 5, 1, 12, 9, 3, 11] has cost 52.


Decide in level 9 among pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 11, 8]


New level: 10
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 11, 8]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 11, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 10 : {32, 33, 2, 7, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 8]


Solution : [0, 5, 1, 12, 9, 3, 11, 8] has cost 58.


Before backtrack at level 10
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 11, 8]

After backtrack at level 10
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 11, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 11]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 13]
 solution : [0, 5, 1, 12, 9, 3, 11]


Solution : [0, 5, 1, 12, 9, 3, 11] has cost 52.


Decide in level 10 among pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 11, 13]


New level: 11
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 11, 13]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 11, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 11 : {32, 33, 2, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 13]


Solution : [0, 5, 1, 12, 9, 3, 11, 13] has cost 58.


Before backtrack at level 11
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 11, 13]

After backtrack at level 11
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 11, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 11]


Before reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 11]


Solution : [0, 5, 1, 12, 9, 3, 11] has cost 52.


Decide in level 11 among pending : [2, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 11, 2]


New level: 12
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 11, 2]


Before reduction : 
 pending  : [17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 11, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 12 : {32, 33, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 2]


Solution : [0, 5, 1, 12, 9, 3, 11, 2] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 11, 2]

After backtrack at level 12
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 11, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 11]


Before reduction : 
 pending  : [17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 7]
 solution : [0, 5, 1, 12, 9, 3, 11]

Essensial at level 12 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 12 : {32, 33, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 3, 11, 7]


Solution : [0, 5, 1, 12, 9, 3, 11, 7] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 9, 3, 11, 7]

After backtrack at level 12
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 11]


Before backtrack at level 11
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33]
 solution : [0, 5, 1, 12, 9, 3, 11]

After backtrack at level 11
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2]
 solution : [0, 5, 1, 12, 9, 3, 11]


Before backtrack at level 10
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2]
 solution : [0, 5, 1, 12, 9, 3, 11]

After backtrack at level 10
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13]
 solution : [0, 5, 1, 12, 9, 3, 11]


Before backtrack at level 9
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13]
 solution : [0, 5, 1, 12, 9, 3, 11]

After backtrack at level 9
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13, 8]
 solution : [0, 5, 1, 12, 9, 3, 11]


Before backtrack at level 8
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13, 8]
 solution : [0, 5, 1, 12, 9, 3, 11]

After backtrack at level 8
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3]


Before backtrack at level 7
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6]
 solution : [0, 5, 1, 12, 9, 3]

After backtrack at level 7
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14]
 solution : [0, 5, 1, 12, 9, 3]


Before backtrack at level 6
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14]
 solution : [0, 5, 1, 12, 9, 3]

After backtrack at level 6
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 31]
 solution : [0, 5, 1, 12, 9, 3]


Before backtrack at level 5
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 31]
 solution : [0, 5, 1, 12, 9, 3]

After backtrack at level 5
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 31, 4, 15, 10]
 solution : [0, 5, 1, 12, 9, 3]


Invert decision for 3 at level 4


New level: 5
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 31, 4, 15, 10]
 solution : [0, 5, 1, 12, 9]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 31, 4, 15, 10]
 solution : [0, 5, 1, 12, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 4)]

Covered at level 5 : set()

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 31, 4, 15, 10]
 solution : [0, 5, 1, 12, 9]


Solution : [0, 5, 1, 12, 9] has cost 41.


Decide in level 5 among pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 32, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 31, 4, 15, 10]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 4)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 31, 4, 15, 10]
 solution : [0, 5, 1, 12, 9, 32]


New level: 6
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 31, 4, 15, 10]
 solution : [0, 5, 1, 12, 9, 32]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 31, 4, 15, 10]
 solution : [0, 5, 1, 12, 9, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 1)]

Covered at level 6 : {31}

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 4, 15, 10]
 solution : [0, 5, 1, 12, 9, 32]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 4, 15, 10]
 solution : [0, 5, 1, 12, 9, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 4, 15, 10]
 solution : [0, 5, 1, 12, 9, 32]


Solution : [0, 5, 1, 12, 9, 32] has cost 51.


Decide in level 6 among pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 33, 2, 13, 8, 11, 24, 27, 28, 30, 6, 14, 4, 15, 10]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

Decide 13 with phase True at level 6

After decision at level 6
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 33, 2, 8, 11, 24, 27, 28, 30, 6, 14, 4, 15, 10]
 solution : [0, 5, 1, 12, 9, 32, 13]


New level: 7
 pending : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 33, 2, 8, 11, 24, 27, 28, 30, 6, 14, 4, 15, 10]
 solution : [0, 5, 1, 12, 9, 32, 13]


Before reduction : 
 pending  : [7, 17, 18, 19, 20, 21, 22, 23, 25, 26, 16, 33, 2, 8, 11, 24, 27, 28, 30, 6, 14, 4, 15, 10]
 solution : [0, 5, 1, 12, 9, 32, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 2), (19, 2), (20, 0), (21, 2), (22, 2), (23, 2), (24, 3), (25, 0), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

Covered at level 7 : {33, 2, 4, 6, 7, 8, 15, 16, 17, 20, 25}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 11, 24, 27, 28, 30, 14, 10]
 solution : [0, 5, 1, 12, 9, 32, 13]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 11, 24, 27, 28, 30, 14, 10]
 solution : [0, 5, 1, 12, 9, 32, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 2), (19, 2), (20, 0), (21, 2), (22, 2), (23, 2), (24, 3), (25, 0), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, 2), (24, 3), (25, -1), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 11, 24, 27, 28, 30, 14, 10]
 solution : [0, 5, 1, 12, 9, 32, 13]


Solution : [0, 5, 1, 12, 9, 32, 13] has cost 57.


Decide in level 7 among pending : [18, 19, 21, 22, 23, 26, 11, 24, 27, 28, 30, 14, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, 2), (24, 3), (25, -1), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 7

After decision at level 7
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 10]
 solution : [0, 5, 1, 12, 9, 32, 13, 11]


New level: 8
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 10]
 solution : [0, 5, 1, 12, 9, 32, 13, 11]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 10]
 solution : [0, 5, 1, 12, 9, 32, 13, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, 2), (24, 3), (25, -1), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {10, 14, 18, 19, 21, 22, 23, 24, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 13, 11]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 13, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 13, 11]


Solution : [0, 5, 1, 12, 9, 32, 13, 11] has cost 63.


Before backtrack at level 8
 pending : []
 solution : [0, 5, 1, 12, 9, 32, 13, 11]

After backtrack at level 8
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 10]
 solution : [0, 5, 1, 12, 9, 32, 13, 11]


Invert decision for 11 at level 7


New level: 8
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 10]
 solution : [0, 5, 1, 12, 9, 32, 13]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 10]
 solution : [0, 5, 1, 12, 9, 32, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, 2), (24, 3), (25, -1), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 10]
 solution : [0, 5, 1, 12, 9, 32, 13]


Solution : [0, 5, 1, 12, 9, 32, 13] has cost 57.


Decide in level 8 among pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, 2), (24, 3), (25, -1), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 14 with phase True at level 8

After decision at level 8
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 10]
 solution : [0, 5, 1, 12, 9, 32, 13, 14]


New level: 9
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 10]
 solution : [0, 5, 1, 12, 9, 32, 13, 14]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 10]
 solution : [0, 5, 1, 12, 9, 32, 13, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, 2), (24, 3), (25, -1), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {10, 18, 19, 21, 22, 23, 24, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 13, 14]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 13, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 13, 14]


Solution : [0, 5, 1, 12, 9, 32, 13, 14] has cost 63.


Before backtrack at level 9
 pending : []
 solution : [0, 5, 1, 12, 9, 32, 13, 14]

After backtrack at level 9
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 10]
 solution : [0, 5, 1, 12, 9, 32, 13, 14]


Invert decision for 14 at level 8


New level: 9
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 10]
 solution : [0, 5, 1, 12, 9, 32, 13]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 10]
 solution : [0, 5, 1, 12, 9, 32, 13]

Essensial at level 9 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {18, 19, 21, 22, 23, 24, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 13, 10]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 13, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 13, 10]


Solution : [0, 5, 1, 12, 9, 32, 13, 10] has cost 70.


Before backtrack at level 9
 pending : []
 solution : [0, 5, 1, 12, 9, 32, 13, 10]

After backtrack at level 9
 pending : [10, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30]
 solution : [0, 5, 1, 12, 9, 32, 13]


Before backtrack at level 8
 pending : [10, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30]
 solution : [0, 5, 1, 12, 9, 32, 13]

After backtrack at level 8
 pending : [10, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 32, 13]


Before backtrack at level 7
 pending : [10, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 32, 13]

After backtrack at level 7
 pending : [10, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15, 11]
 solution : [0, 5, 1, 12, 9, 32, 13]


Invert decision for 13 at level 6


New level: 7
 pending : [10, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15, 11]
 solution : [0, 5, 1, 12, 9, 32]


Before reduction : 
 pending  : [10, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15, 11]
 solution : [0, 5, 1, 12, 9, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15, 11]
 solution : [0, 5, 1, 12, 9, 32]


Solution : [0, 5, 1, 12, 9, 32] has cost 51.


Decide in level 7 among pending : [10, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15, 11]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15, 11]
 solution : [0, 5, 1, 12, 9, 32, 10]


New level: 8
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15, 11]
 solution : [0, 5, 1, 12, 9, 32, 10]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15, 11]
 solution : [0, 5, 1, 12, 9, 32, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 1)]

Covered at level 8 : {11, 14, 24, 27, 28, 30}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 10]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 10]


Solution : [0, 5, 1, 12, 9, 32, 10] has cost 64.


Before backtrack at level 8
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 10]

After backtrack at level 8
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15, 24, 27, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 9, 32, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15, 24, 27, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 9, 32]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15, 24, 27, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 9, 32]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15, 24, 27, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 9, 32]


Solution : [0, 5, 1, 12, 9, 32] has cost 51.


Decide in level 8 among pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 8, 6, 4, 15, 24, 27, 28, 30, 14, 11]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

Decide 8 with phase True at level 8

After decision at level 8
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15, 24, 27, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 9, 32, 8]


New level: 9
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15, 24, 27, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 9, 32, 8]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15, 24, 27, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 9, 32, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 2), (19, 2), (20, 0), (21, 2), (22, 2), (23, 2), (24, 3), (25, 0), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

Covered at level 9 : {33, 2, 4, 6, 7, 15, 16, 17, 20, 25}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 9, 32, 8]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 9, 32, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 2), (19, 2), (20, 0), (21, 2), (22, 2), (23, 2), (24, 3), (25, 0), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, 2), (24, 3), (25, -1), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 9, 32, 8]


Solution : [0, 5, 1, 12, 9, 32, 8] has cost 57.


Decide in level 9 among pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, 2), (24, 3), (25, -1), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 14 with phase True at level 9

After decision at level 9
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 11]
 solution : [0, 5, 1, 12, 9, 32, 8, 14]


New level: 10
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 11]
 solution : [0, 5, 1, 12, 9, 32, 8, 14]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 11]
 solution : [0, 5, 1, 12, 9, 32, 8, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, 2), (24, 3), (25, -1), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {11, 18, 19, 21, 22, 23, 24, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 8, 14]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 8, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 8, 14]


Solution : [0, 5, 1, 12, 9, 32, 8, 14] has cost 63.


Before backtrack at level 10
 pending : []
 solution : [0, 5, 1, 12, 9, 32, 8, 14]

After backtrack at level 10
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 11]
 solution : [0, 5, 1, 12, 9, 32, 8, 14]


Invert decision for 14 at level 9


New level: 10
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 11]
 solution : [0, 5, 1, 12, 9, 32, 8]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 11]
 solution : [0, 5, 1, 12, 9, 32, 8]

Essensial at level 10 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {18, 19, 21, 22, 23, 24, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 8, 11]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 8, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 8, 11]


Solution : [0, 5, 1, 12, 9, 32, 8, 11] has cost 63.


Before backtrack at level 10
 pending : []
 solution : [0, 5, 1, 12, 9, 32, 8, 11]

After backtrack at level 10
 pending : [11, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30]
 solution : [0, 5, 1, 12, 9, 32, 8]


Before backtrack at level 9
 pending : [11, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30]
 solution : [0, 5, 1, 12, 9, 32, 8]

After backtrack at level 9
 pending : [11, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15, 14]
 solution : [0, 5, 1, 12, 9, 32, 8]


Invert decision for 8 at level 8


New level: 9
 pending : [11, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15, 14]
 solution : [0, 5, 1, 12, 9, 32]


Before reduction : 
 pending  : [11, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15, 14]
 solution : [0, 5, 1, 12, 9, 32]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [11, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15, 14]
 solution : [0, 5, 1, 12, 9, 32]


Solution : [0, 5, 1, 12, 9, 32] has cost 51.


Decide in level 9 among pending : [11, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

Decide 11 with phase True at level 9

After decision at level 9
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15, 14]
 solution : [0, 5, 1, 12, 9, 32, 11]


New level: 10
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15, 14]
 solution : [0, 5, 1, 12, 9, 32, 11]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15, 14]
 solution : [0, 5, 1, 12, 9, 32, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 1)]

Covered at level 10 : {14, 24, 27, 28, 30}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 11]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 11]


Solution : [0, 5, 1, 12, 9, 32, 11] has cost 57.


Decide in level 10 among pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 6, 4, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 11, 6]


New level: 11
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 11, 6]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 11, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 11 : {33, 2, 4, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 11, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 11, 6]


Solution : [0, 5, 1, 12, 9, 32, 11, 6] has cost 70.


Before backtrack at level 11
 pending : []
 solution : [0, 5, 1, 12, 9, 32, 11, 6]

After backtrack at level 11
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 11, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 11]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 4, 15]
 solution : [0, 5, 1, 12, 9, 32, 11]


Solution : [0, 5, 1, 12, 9, 32, 11] has cost 57.


Decide in level 11 among pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 4, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 4 with phase True at level 11

After decision at level 11
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 32, 11, 4]


New level: 12
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 32, 11, 4]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 32, 11, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 12 : {16, 33, 15}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 2]
 solution : [0, 5, 1, 12, 9, 32, 11, 4]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 2]
 solution : [0, 5, 1, 12, 9, 32, 11, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 2]
 solution : [0, 5, 1, 12, 9, 32, 11, 4]


Solution : [0, 5, 1, 12, 9, 32, 11, 4] has cost 62.


Before backtrack at level 12
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 2]
 solution : [0, 5, 1, 12, 9, 32, 11, 4]

After backtrack at level 12
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 11, 4]


Invert decision for 4 at level 11


New level: 12
 pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 11]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 11]


Solution : [0, 5, 1, 12, 9, 32, 11] has cost 57.


Decide in level 12 among pending : [18, 19, 21, 22, 23, 26, 7, 17, 20, 25, 2, 16, 33, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 7 with phase True at level 12

After decision at level 12
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 11, 7]


New level: 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 11, 7]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 11, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 13 : {33, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 11, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 11, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 11, 7]


Solution : [0, 5, 1, 12, 9, 32, 11, 7] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 5, 1, 12, 9, 32, 11, 7]

After backtrack at level 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 11, 7]


Invert decision for 7 at level 12


New level: 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 11]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 11]

Essensial at level 13 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 13 : {33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 11, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 11, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 11, 2]


Solution : [0, 5, 1, 12, 9, 32, 11, 2] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 5, 1, 12, 9, 32, 11, 2]

After backtrack at level 13
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 11]


Before backtrack at level 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 11]

After backtrack at level 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 32, 11]


Before backtrack at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 32, 11]

After backtrack at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 32, 11]


Before backtrack at level 10
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 32, 11]

After backtrack at level 10
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 24, 27, 28, 30, 14, 6]
 solution : [0, 5, 1, 12, 9, 32, 11]


Invert decision for 11 at level 9


New level: 10
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 24, 27, 28, 30, 14, 6]
 solution : [0, 5, 1, 12, 9, 32]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 24, 27, 28, 30, 14, 6]
 solution : [0, 5, 1, 12, 9, 32]

Essensial at level 10 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 1)]

Covered at level 10 : {24, 27, 28, 30}

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 6]
 solution : [0, 5, 1, 12, 9, 32, 14]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 6]
 solution : [0, 5, 1, 12, 9, 32, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 6]
 solution : [0, 5, 1, 12, 9, 32, 14]


Solution : [0, 5, 1, 12, 9, 32, 14] has cost 57.


Decide in level 10 among pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 6]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 4 with phase True at level 10

After decision at level 10
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 6]
 solution : [0, 5, 1, 12, 9, 32, 14, 4]


New level: 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 6]
 solution : [0, 5, 1, 12, 9, 32, 14, 4]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 6]
 solution : [0, 5, 1, 12, 9, 32, 14, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 11 : {16, 33, 15}

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 6]
 solution : [0, 5, 1, 12, 9, 32, 14, 4]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 6]
 solution : [0, 5, 1, 12, 9, 32, 14, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 6]
 solution : [0, 5, 1, 12, 9, 32, 14, 4]


Solution : [0, 5, 1, 12, 9, 32, 14, 4] has cost 62.


Before backtrack at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 6]
 solution : [0, 5, 1, 12, 9, 32, 14, 4]

After backtrack at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 6, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14, 4]


Invert decision for 4 at level 10


New level: 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 6, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 6, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 6, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14]


Solution : [0, 5, 1, 12, 9, 32, 14] has cost 57.


Decide in level 11 among pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 6, 16, 33, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 6 with phase True at level 11

After decision at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14, 6]


New level: 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14, 6]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 12 : {33, 2, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 14, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 14, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 14, 6]


Solution : [0, 5, 1, 12, 9, 32, 14, 6] has cost 70.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 9, 32, 14, 6]

After backtrack at level 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14, 6]


Invert decision for 6 at level 11


New level: 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14]


Solution : [0, 5, 1, 12, 9, 32, 14] has cost 57.


Decide in level 12 among pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 2 with phase True at level 12

After decision at level 12
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14, 2]


New level: 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14, 2]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 13 : {33, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 14, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 14, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 14, 2]


Solution : [0, 5, 1, 12, 9, 32, 14, 2] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 5, 1, 12, 9, 32, 14, 2]

After backtrack at level 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14, 2]


Invert decision for 2 at level 12


New level: 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14]

Essensial at level 13 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 13 : {33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 14, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 14, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 32, 14, 7]


Solution : [0, 5, 1, 12, 9, 32, 14, 7] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 5, 1, 12, 9, 32, 14, 7]

After backtrack at level 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14]


Before backtrack at level 12
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 32, 14]

After backtrack at level 12
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 32, 14]


Before backtrack at level 11
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 32, 14]

After backtrack at level 11
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6]
 solution : [0, 5, 1, 12, 9, 32, 14]


Before backtrack at level 10
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6]
 solution : [0, 5, 1, 12, 9, 32, 14]

After backtrack at level 10
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6, 14, 24, 27, 28, 30, 4]
 solution : [0, 5, 1, 12, 9, 32]


Before backtrack at level 9
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6, 14, 24, 27, 28, 30, 4]
 solution : [0, 5, 1, 12, 9, 32]

After backtrack at level 9
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6, 14, 24, 27, 28, 30, 4, 11]
 solution : [0, 5, 1, 12, 9, 32]


Before backtrack at level 8
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6, 14, 24, 27, 28, 30, 4, 11]
 solution : [0, 5, 1, 12, 9, 32]

After backtrack at level 8
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6, 14, 24, 27, 28, 30, 4, 11, 8]
 solution : [0, 5, 1, 12, 9, 32]


Before backtrack at level 7
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6, 14, 24, 27, 28, 30, 4, 11, 8]
 solution : [0, 5, 1, 12, 9, 32]

After backtrack at level 7
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6, 14, 24, 27, 28, 30, 4, 11, 8, 10]
 solution : [0, 5, 1, 12, 9, 32]


Before backtrack at level 6
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6, 14, 24, 27, 28, 30, 4, 11, 8, 10]
 solution : [0, 5, 1, 12, 9, 32]

After backtrack at level 6
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6, 14, 24, 27, 28, 30, 4, 11, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 9, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6, 14, 24, 27, 28, 30, 4, 11, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 9]


Before reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6, 14, 24, 27, 28, 30, 4, 11, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 4)]

Covered at level 6 : set()

After reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6, 14, 24, 27, 28, 30, 4, 11, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 9]


Solution : [0, 5, 1, 12, 9] has cost 41.


Decide in level 6 among pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 6, 14, 24, 27, 28, 30, 4, 11, 8, 10, 31, 13]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 4)]

Decide 6 with phase True at level 6

After decision at level 6
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 14, 24, 27, 28, 30, 4, 11, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 9, 6]


New level: 7
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 14, 24, 27, 28, 30, 4, 11, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 9, 6]


Before reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 14, 24, 27, 28, 30, 4, 11, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 9, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 128), (11, 128), (12, -1), (13, 0), (14, 128), (15, 0), (16, 0), (17, 2), (18, 68), (19, 68), (20, 2), (21, 6), (22, 6), (23, 6), (24, 9), (25, 2), (26, 7), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 0)]

Covered at level 7 : {33, 2, 4, 7, 8, 13, 15, 16}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 14, 24, 27, 28, 30, 11, 10, 31]
 solution : [0, 5, 1, 12, 9, 6]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 14, 24, 27, 28, 30, 11, 10, 31]
 solution : [0, 5, 1, 12, 9, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 128), (11, 128), (12, -1), (13, 0), (14, 128), (15, 0), (16, 0), (17, 2), (18, 68), (19, 68), (20, 2), (21, 6), (22, 6), (23, 6), (24, 9), (25, 2), (26, 7), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, 68), (19, 68), (20, 2), (21, 6), (22, 6), (23, 6), (24, 9), (25, 2), (26, 7), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 14, 24, 27, 28, 30, 11, 10, 31]
 solution : [0, 5, 1, 12, 9, 6]


Solution : [0, 5, 1, 12, 9, 6] has cost 54.


Decide in level 7 among pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 14, 24, 27, 28, 30, 11, 10, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, 68), (19, 68), (20, 2), (21, 6), (22, 6), (23, 6), (24, 9), (25, 2), (26, 7), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, -1)]

Decide 14 with phase True at level 7

After decision at level 7
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 11, 10, 31]
 solution : [0, 5, 1, 12, 9, 6, 14]


New level: 8
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 11, 10, 31]
 solution : [0, 5, 1, 12, 9, 6, 14]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 11, 10, 31]
 solution : [0, 5, 1, 12, 9, 6, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, 68), (19, 68), (20, 2), (21, 6), (22, 6), (23, 6), (24, 9), (25, 2), (26, 7), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 8 : {10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 6, 14]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 6, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 6, 14]


Solution : [0, 5, 1, 12, 9, 6, 14] has cost 60.


Before backtrack at level 8
 pending : []
 solution : [0, 5, 1, 12, 9, 6, 14]

After backtrack at level 8
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 11, 10, 31]
 solution : [0, 5, 1, 12, 9, 6, 14]


Invert decision for 14 at level 7


New level: 8
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 11, 10, 31]
 solution : [0, 5, 1, 12, 9, 6]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 11, 10, 31]
 solution : [0, 5, 1, 12, 9, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 6), (24, 9), (25, 2), (26, 7), (27, 12), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 11, 10, 31]
 solution : [0, 5, 1, 12, 9, 6]


Solution : [0, 5, 1, 12, 9, 6] has cost 54.


Decide in level 8 among pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 11, 10, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 6), (24, 9), (25, 2), (26, 7), (27, 12), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, -1)]

Decide 11 with phase True at level 8

After decision at level 8
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 10, 31]
 solution : [0, 5, 1, 12, 9, 6, 11]


New level: 9
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 10, 31]
 solution : [0, 5, 1, 12, 9, 6, 11]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 10, 31]
 solution : [0, 5, 1, 12, 9, 6, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 6), (19, 6), (20, 2), (21, 6), (22, 6), (23, 6), (24, 9), (25, 2), (26, 7), (27, 12), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 9 : {10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 6, 11]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 6, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 6, 11]


Solution : [0, 5, 1, 12, 9, 6, 11] has cost 60.


Before backtrack at level 9
 pending : []
 solution : [0, 5, 1, 12, 9, 6, 11]

After backtrack at level 9
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 10, 31]
 solution : [0, 5, 1, 12, 9, 6, 11]


Invert decision for 11 at level 8


New level: 9
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 10, 31]
 solution : [0, 5, 1, 12, 9, 6]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 10, 31]
 solution : [0, 5, 1, 12, 9, 6]

Essensial at level 9 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 9 : {17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 6, 10]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 6, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 6, 10]


Solution : [0, 5, 1, 12, 9, 6, 10] has cost 67.


Before backtrack at level 9
 pending : []
 solution : [0, 5, 1, 12, 9, 6, 10]

After backtrack at level 9
 pending : [10, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 31]
 solution : [0, 5, 1, 12, 9, 6]


Before backtrack at level 8
 pending : [10, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 31]
 solution : [0, 5, 1, 12, 9, 6]

After backtrack at level 8
 pending : [10, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 31, 11]
 solution : [0, 5, 1, 12, 9, 6]


Before backtrack at level 7
 pending : [10, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 31, 11]
 solution : [0, 5, 1, 12, 9, 6]

After backtrack at level 7
 pending : [10, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 31, 11, 7, 16, 33, 15, 2, 4, 8, 13, 14]
 solution : [0, 5, 1, 12, 9, 6]


Invert decision for 6 at level 6


New level: 7
 pending : [10, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 31, 11, 7, 16, 33, 15, 2, 4, 8, 13, 14]
 solution : [0, 5, 1, 12, 9]


Before reduction : 
 pending  : [10, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 31, 11, 7, 16, 33, 15, 2, 4, 8, 13, 14]
 solution : [0, 5, 1, 12, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 4)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 31, 11, 7, 16, 33, 15, 2, 4, 8, 13, 14]
 solution : [0, 5, 1, 12, 9]


Solution : [0, 5, 1, 12, 9] has cost 41.


Decide in level 7 among pending : [10, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 31, 11, 7, 16, 33, 15, 2, 4, 8, 13, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 4)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 31, 11, 7, 16, 33, 15, 2, 4, 8, 13, 14]
 solution : [0, 5, 1, 12, 9, 10]


New level: 8
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 31, 11, 7, 16, 33, 15, 2, 4, 8, 13, 14]
 solution : [0, 5, 1, 12, 9, 10]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 31, 11, 7, 16, 33, 15, 2, 4, 8, 13, 14]
 solution : [0, 5, 1, 12, 9, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 0), (12, -1), (13, 128), (14, 0), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, 0), (25, 2), (26, 7), (27, 0), (28, 0), (29, -1), (30, 0), (31, 1), (32, -1), (33, 4)]

Covered at level 8 : {11, 14, 24, 27, 28, 30}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 15, 2, 4, 8, 13]
 solution : [0, 5, 1, 12, 9, 10]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 15, 2, 4, 8, 13]
 solution : [0, 5, 1, 12, 9, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 0), (12, -1), (13, 128), (14, 0), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, 0), (25, 2), (26, 7), (27, 0), (28, 0), (29, -1), (30, 0), (31, 1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 4)]

Covered at level 8 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 15, 2, 4, 8, 13]
 solution : [0, 5, 1, 12, 9, 10]


Solution : [0, 5, 1, 12, 9, 10] has cost 54.


Decide in level 8 among pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 15, 2, 4, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 4)]

Decide 4 with phase True at level 8

After decision at level 8
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 15, 2, 8, 13]
 solution : [0, 5, 1, 12, 9, 10, 4]


New level: 9
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 15, 2, 8, 13]
 solution : [0, 5, 1, 12, 9, 10, 4]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 15, 2, 8, 13]
 solution : [0, 5, 1, 12, 9, 10, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, 0), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : {15}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 8, 13]
 solution : [0, 5, 1, 12, 9, 10, 4]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 8, 13]
 solution : [0, 5, 1, 12, 9, 10, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, 0), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 8, 13]
 solution : [0, 5, 1, 12, 9, 10, 4]


Solution : [0, 5, 1, 12, 9, 10, 4] has cost 59.


Before backtrack at level 9
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 8, 13]
 solution : [0, 5, 1, 12, 9, 10, 4]

After backtrack at level 9
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 8, 13, 15]
 solution : [0, 5, 1, 12, 9, 10, 4]


Invert decision for 4 at level 8


New level: 9
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 8, 13, 15]
 solution : [0, 5, 1, 12, 9, 10]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 8, 13, 15]
 solution : [0, 5, 1, 12, 9, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 4)]

Covered at level 9 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 8, 13, 15]
 solution : [0, 5, 1, 12, 9, 10]


Solution : [0, 5, 1, 12, 9, 10] has cost 54.


Decide in level 9 among pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 8, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 4)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 13, 15]
 solution : [0, 5, 1, 12, 9, 10, 8]


New level: 10
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 13, 15]
 solution : [0, 5, 1, 12, 9, 10, 8]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 13, 15]
 solution : [0, 5, 1, 12, 9, 10, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 2, 7, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 10, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 10, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 10, 8]


Solution : [0, 5, 1, 12, 9, 10, 8] has cost 60.


Before backtrack at level 10
 pending : []
 solution : [0, 5, 1, 12, 9, 10, 8]

After backtrack at level 10
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 13, 15]
 solution : [0, 5, 1, 12, 9, 10, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 13, 15]
 solution : [0, 5, 1, 12, 9, 10]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 13, 15]
 solution : [0, 5, 1, 12, 9, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 4)]

Covered at level 10 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 13, 15]
 solution : [0, 5, 1, 12, 9, 10]


Solution : [0, 5, 1, 12, 9, 10] has cost 54.


Decide in level 10 among pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 4)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 10, 13]


New level: 11
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 10, 13]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 10, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 2, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 10, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 10, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 10, 13]


Solution : [0, 5, 1, 12, 9, 10, 13] has cost 60.


Before backtrack at level 11
 pending : []
 solution : [0, 5, 1, 12, 9, 10, 13]

After backtrack at level 11
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 10, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 10]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 4)]

Covered at level 11 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 10]


Solution : [0, 5, 1, 12, 9, 10] has cost 54.


Decide in level 11 among pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 7, 16, 33, 2, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 4)]

Decide 7 with phase True at level 11

After decision at level 11
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 10, 7]


New level: 12
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 10, 7]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 10, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 10, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 10, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 10, 7]


Solution : [0, 5, 1, 12, 9, 10, 7] has cost 63.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 9, 10, 7]

After backtrack at level 12
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 10, 7]


Invert decision for 7 at level 11


New level: 12
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 10]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 10]

Essensial at level 12 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 10, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 10, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 10, 2]


Solution : [0, 5, 1, 12, 9, 10, 2] has cost 63.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 9, 10, 2]

After backtrack at level 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 10]


Before backtrack at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 10]

After backtrack at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 10]


Before backtrack at level 10
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 10]

After backtrack at level 10
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 15, 7, 13]
 solution : [0, 5, 1, 12, 9, 10]


Before backtrack at level 9
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 15, 7, 13]
 solution : [0, 5, 1, 12, 9, 10]

After backtrack at level 9
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 15, 7, 13, 8]
 solution : [0, 5, 1, 12, 9, 10]


Before backtrack at level 8
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 15, 7, 13, 8]
 solution : [0, 5, 1, 12, 9, 10]

After backtrack at level 8
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 15, 7, 13, 8, 24, 27, 28, 30, 11, 14, 4]
 solution : [0, 5, 1, 12, 9, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 15, 7, 13, 8, 24, 27, 28, 30, 11, 14, 4]
 solution : [0, 5, 1, 12, 9]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 15, 7, 13, 8, 24, 27, 28, 30, 11, 14, 4]
 solution : [0, 5, 1, 12, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 4)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 15, 7, 13, 8, 24, 27, 28, 30, 11, 14, 4]
 solution : [0, 5, 1, 12, 9]


Solution : [0, 5, 1, 12, 9] has cost 41.


Decide in level 8 among pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 31, 16, 33, 15, 7, 13, 8, 24, 27, 28, 30, 11, 14, 4]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 4)]

Decide 31 with phase True at level 8

After decision at level 8
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13, 8, 24, 27, 28, 30, 11, 14, 4]
 solution : [0, 5, 1, 12, 9, 31]


New level: 9
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13, 8, 24, 27, 28, 30, 11, 14, 4]
 solution : [0, 5, 1, 12, 9, 31]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13, 8, 24, 27, 28, 30, 11, 14, 4]
 solution : [0, 5, 1, 12, 9, 31]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13, 8, 24, 27, 28, 30, 11, 14, 4]
 solution : [0, 5, 1, 12, 9, 31]


Solution : [0, 5, 1, 12, 9, 31] has cost 51.


Decide in level 9 among pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13, 8, 24, 27, 28, 30, 11, 14, 4]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

Decide 13 with phase True at level 9

After decision at level 9
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8, 24, 27, 28, 30, 11, 14, 4]
 solution : [0, 5, 1, 12, 9, 31, 13]


New level: 10
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8, 24, 27, 28, 30, 11, 14, 4]
 solution : [0, 5, 1, 12, 9, 31, 13]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8, 24, 27, 28, 30, 11, 14, 4]
 solution : [0, 5, 1, 12, 9, 31, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 2), (19, 2), (20, 0), (21, 2), (22, 2), (23, 2), (24, 3), (25, 0), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

Covered at level 10 : {33, 2, 4, 7, 8, 15, 16, 17, 20, 25}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 9, 31, 13]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 9, 31, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 2), (19, 2), (20, 0), (21, 2), (22, 2), (23, 2), (24, 3), (25, 0), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, 2), (24, 3), (25, -1), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 9, 31, 13]


Solution : [0, 5, 1, 12, 9, 31, 13] has cost 57.


Decide in level 10 among pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 11, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, 2), (24, 3), (25, -1), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 10

After decision at level 10
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 31, 13, 11]


New level: 11
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 31, 13, 11]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 31, 13, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 2), (19, 2), (20, -1), (21, 2), (22, 2), (23, 2), (24, 3), (25, -1), (26, 2), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {14, 18, 19, 21, 22, 23, 24, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 13, 11]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 13, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 13, 11]


Solution : [0, 5, 1, 12, 9, 31, 13, 11] has cost 63.


Before backtrack at level 11
 pending : []
 solution : [0, 5, 1, 12, 9, 31, 13, 11]

After backtrack at level 11
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 31, 13, 11]


Invert decision for 11 at level 10


New level: 11
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 31, 13]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 31, 13]

Essensial at level 11 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {18, 19, 21, 22, 23, 24, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 13, 14]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 13, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 13, 14]


Solution : [0, 5, 1, 12, 9, 31, 13, 14] has cost 63.


Before backtrack at level 11
 pending : []
 solution : [0, 5, 1, 12, 9, 31, 13, 14]

After backtrack at level 11
 pending : [14, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30]
 solution : [0, 5, 1, 12, 9, 31, 13]


Before backtrack at level 10
 pending : [14, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30]
 solution : [0, 5, 1, 12, 9, 31, 13]

After backtrack at level 10
 pending : [14, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 2, 17, 20, 25, 16, 33, 15, 7, 8, 4, 11]
 solution : [0, 5, 1, 12, 9, 31, 13]


Invert decision for 13 at level 9


New level: 10
 pending : [14, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 2, 17, 20, 25, 16, 33, 15, 7, 8, 4, 11]
 solution : [0, 5, 1, 12, 9, 31]


Before reduction : 
 pending  : [14, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 2, 17, 20, 25, 16, 33, 15, 7, 8, 4, 11]
 solution : [0, 5, 1, 12, 9, 31]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [14, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 2, 17, 20, 25, 16, 33, 15, 7, 8, 4, 11]
 solution : [0, 5, 1, 12, 9, 31]


Solution : [0, 5, 1, 12, 9, 31] has cost 51.


Decide in level 10 among pending : [14, 18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 2, 17, 20, 25, 16, 33, 15, 7, 8, 4, 11]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 2, 17, 20, 25, 16, 33, 15, 7, 8, 4, 11]
 solution : [0, 5, 1, 12, 9, 31, 14]


New level: 11
 pending : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 2, 17, 20, 25, 16, 33, 15, 7, 8, 4, 11]
 solution : [0, 5, 1, 12, 9, 31, 14]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 24, 27, 28, 30, 2, 17, 20, 25, 16, 33, 15, 7, 8, 4, 11]
 solution : [0, 5, 1, 12, 9, 31, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 1), (17, 2), (18, 16), (19, 16), (20, 2), (21, 16), (22, 16), (23, 16), (24, 3), (25, 2), (26, 13), (27, 3), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 1)]

Covered at level 11 : {11, 24, 27, 28, 30}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7, 8, 4]
 solution : [0, 5, 1, 12, 9, 31, 14]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7, 8, 4]
 solution : [0, 5, 1, 12, 9, 31, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7, 8, 4]
 solution : [0, 5, 1, 12, 9, 31, 14]


Solution : [0, 5, 1, 12, 9, 31, 14] has cost 57.


Decide in level 11 among pending : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7, 8, 4]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 8 with phase True at level 11

After decision at level 11
 pending : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 31, 14, 8]


New level: 12
 pending : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 31, 14, 8]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 31, 14, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 12 : {33, 2, 4, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 14, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 14, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 14, 8]


Solution : [0, 5, 1, 12, 9, 31, 14, 8] has cost 63.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 9, 31, 14, 8]

After backtrack at level 12
 pending : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 31, 14, 8]


Invert decision for 8 at level 11


New level: 12
 pending : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 31, 14]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 31, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 31, 14]


Solution : [0, 5, 1, 12, 9, 31, 14] has cost 57.


Decide in level 12 among pending : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7, 4]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 4 with phase True at level 12

After decision at level 12
 pending : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 31, 14, 4]


New level: 13
 pending : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 31, 14, 4]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 31, 14, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 13 : {16, 33, 15}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 7]
 solution : [0, 5, 1, 12, 9, 31, 14, 4]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 7]
 solution : [0, 5, 1, 12, 9, 31, 14, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 7]
 solution : [0, 5, 1, 12, 9, 31, 14, 4]


Solution : [0, 5, 1, 12, 9, 31, 14, 4] has cost 62.


Before backtrack at level 13
 pending : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 7]
 solution : [0, 5, 1, 12, 9, 31, 14, 4]

After backtrack at level 13
 pending : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 14, 4]


Invert decision for 4 at level 12


New level: 13
 pending : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 14]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 14]


Solution : [0, 5, 1, 12, 9, 31, 14] has cost 57.


Decide in level 13 among pending : [18, 19, 21, 22, 23, 26, 2, 17, 20, 25, 7, 16, 33, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 2 with phase True at level 13

After decision at level 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 14, 2]


New level: 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 14, 2]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 14, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {33, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 14, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 14, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 14, 2]


Solution : [0, 5, 1, 12, 9, 31, 14, 2] has cost 66.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 9, 31, 14, 2]

After backtrack at level 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 14, 2]


Invert decision for 2 at level 13


New level: 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 14]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 14]

Essensial at level 14 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 14, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 14, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 14, 7]


Solution : [0, 5, 1, 12, 9, 31, 14, 7] has cost 66.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 9, 31, 14, 7]

After backtrack at level 14
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 14]


Before backtrack at level 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 14]

After backtrack at level 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 31, 14]


Before backtrack at level 12
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 31, 14]

After backtrack at level 12
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 4]
 solution : [0, 5, 1, 12, 9, 31, 14]


Before backtrack at level 11
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 4]
 solution : [0, 5, 1, 12, 9, 31, 14]

After backtrack at level 11
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 4, 24, 27, 28, 30, 11, 8]
 solution : [0, 5, 1, 12, 9, 31, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 4, 24, 27, 28, 30, 11, 8]
 solution : [0, 5, 1, 12, 9, 31]


Before reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 4, 24, 27, 28, 30, 11, 8]
 solution : [0, 5, 1, 12, 9, 31]

Essensial at level 11 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 1)]

Covered at level 11 : {24, 27, 28, 30}

After reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 4, 8]
 solution : [0, 5, 1, 12, 9, 31, 11]


Before reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 4, 8]
 solution : [0, 5, 1, 12, 9, 31, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, 0), (25, 2), (26, 4), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 4, 8]
 solution : [0, 5, 1, 12, 9, 31, 11]


Solution : [0, 5, 1, 12, 9, 31, 11] has cost 57.


Decide in level 11 among pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 4, 8]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 4 with phase True at level 11

After decision at level 11
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 8]
 solution : [0, 5, 1, 12, 9, 31, 11, 4]


New level: 12
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 8]
 solution : [0, 5, 1, 12, 9, 31, 11, 4]


Before reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2, 8]
 solution : [0, 5, 1, 12, 9, 31, 11, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 12 : {16, 33, 15}

After reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 8]
 solution : [0, 5, 1, 12, 9, 31, 11, 4]


Before reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 8]
 solution : [0, 5, 1, 12, 9, 31, 11, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 8]
 solution : [0, 5, 1, 12, 9, 31, 11, 4]


Solution : [0, 5, 1, 12, 9, 31, 11, 4] has cost 62.


Before backtrack at level 12
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 8]
 solution : [0, 5, 1, 12, 9, 31, 11, 4]

After backtrack at level 12
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 8, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11, 4]


Invert decision for 4 at level 11


New level: 12
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 8, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11]


Before reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 8, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 8, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11]


Solution : [0, 5, 1, 12, 9, 31, 11] has cost 57.


Decide in level 12 among pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 8, 16, 33, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 8 with phase True at level 12

After decision at level 12
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11, 8]


New level: 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11, 8]


Before reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 13 : {33, 2, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 11, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 11, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 11, 8]


Solution : [0, 5, 1, 12, 9, 31, 11, 8] has cost 63.


Before backtrack at level 13
 pending : []
 solution : [0, 5, 1, 12, 9, 31, 11, 8]

After backtrack at level 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11, 8]


Invert decision for 8 at level 12


New level: 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11]


Before reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11]


Solution : [0, 5, 1, 12, 9, 31, 11] has cost 57.


Decide in level 13 among pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 7 with phase True at level 13

After decision at level 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11, 7]


New level: 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11, 7]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 1), (17, 2), (18, 4), (19, 4), (20, 2), (21, 4), (22, 4), (23, 4), (24, -1), (25, 2), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {33, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 11, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 11, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 11, 7]


Solution : [0, 5, 1, 12, 9, 31, 11, 7] has cost 66.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 9, 31, 11, 7]

After backtrack at level 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11, 7]


Invert decision for 7 at level 13


New level: 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11]

Essensial at level 14 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 11, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 11, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 31, 11, 2]


Solution : [0, 5, 1, 12, 9, 31, 11, 2] has cost 66.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 9, 31, 11, 2]

After backtrack at level 14
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11]


Before backtrack at level 13
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 31, 11]

After backtrack at level 13
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 31, 11]


Before backtrack at level 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 31, 11]

After backtrack at level 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8]
 solution : [0, 5, 1, 12, 9, 31, 11]


Before backtrack at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8]
 solution : [0, 5, 1, 12, 9, 31, 11]

After backtrack at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8, 11, 24, 27, 28, 30, 4]
 solution : [0, 5, 1, 12, 9, 31]


Before backtrack at level 10
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8, 11, 24, 27, 28, 30, 4]
 solution : [0, 5, 1, 12, 9, 31]

After backtrack at level 10
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8, 11, 24, 27, 28, 30, 4, 14]
 solution : [0, 5, 1, 12, 9, 31]


Before backtrack at level 9
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8, 11, 24, 27, 28, 30, 4, 14]
 solution : [0, 5, 1, 12, 9, 31]

After backtrack at level 9
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8, 11, 24, 27, 28, 30, 4, 14, 13]
 solution : [0, 5, 1, 12, 9, 31]


Invert decision for 31 at level 8


New level: 9
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8, 11, 24, 27, 28, 30, 4, 14, 13]
 solution : [0, 5, 1, 12, 9]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8, 11, 24, 27, 28, 30, 4, 14, 13]
 solution : [0, 5, 1, 12, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 4)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8, 11, 24, 27, 28, 30, 4, 14, 13]
 solution : [0, 5, 1, 12, 9]


Solution : [0, 5, 1, 12, 9] has cost 41.


Decide in level 9 among pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 8, 11, 24, 27, 28, 30, 4, 14, 13]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 4)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 11, 24, 27, 28, 30, 4, 14, 13]
 solution : [0, 5, 1, 12, 9, 8]


New level: 10
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 11, 24, 27, 28, 30, 4, 14, 13]
 solution : [0, 5, 1, 12, 9, 8]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 11, 24, 27, 28, 30, 4, 14, 13]
 solution : [0, 5, 1, 12, 9, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 0), (14, 128), (15, 0), (16, 0), (17, 2), (18, 68), (19, 68), (20, 2), (21, 6), (22, 6), (23, 6), (24, 9), (25, 2), (26, 7), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 0)]

Covered at level 10 : {33, 2, 4, 7, 13, 15, 16}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 11, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 8]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 11, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 0), (14, 128), (15, 0), (16, 0), (17, 2), (18, 68), (19, 68), (20, 2), (21, 6), (22, 6), (23, 6), (24, 9), (25, 2), (26, 7), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, 68), (19, 68), (20, 2), (21, 6), (22, 6), (23, 6), (24, 9), (25, 2), (26, 7), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 11, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 8]


Solution : [0, 5, 1, 12, 9, 8] has cost 47.


Decide in level 10 among pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 11, 24, 27, 28, 30, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, 68), (19, 68), (20, 2), (21, 6), (22, 6), (23, 6), (24, 9), (25, 2), (26, 7), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 10

After decision at level 10
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 8, 11]


New level: 11
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 8, 11]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 8, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, 68), (19, 68), (20, 2), (21, 6), (22, 6), (23, 6), (24, 9), (25, 2), (26, 7), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 8, 11]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 8, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 8, 11]


Solution : [0, 5, 1, 12, 9, 8, 11] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 5, 1, 12, 9, 8, 11]

After backtrack at level 11
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 8, 11]


Invert decision for 11 at level 10


New level: 11
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 8]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 14]
 solution : [0, 5, 1, 12, 9, 8]

Essensial at level 11 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 8, 14]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 8, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 8, 14]


Solution : [0, 5, 1, 12, 9, 8, 14] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 5, 1, 12, 9, 8, 14]

After backtrack at level 11
 pending : [14, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30]
 solution : [0, 5, 1, 12, 9, 8]


Before backtrack at level 10
 pending : [14, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30]
 solution : [0, 5, 1, 12, 9, 8]

After backtrack at level 10
 pending : [14, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 2, 16, 33, 15, 7, 4, 13, 11]
 solution : [0, 5, 1, 12, 9, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [14, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 2, 16, 33, 15, 7, 4, 13, 11]
 solution : [0, 5, 1, 12, 9]


Before reduction : 
 pending  : [14, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 2, 16, 33, 15, 7, 4, 13, 11]
 solution : [0, 5, 1, 12, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 4)]

Covered at level 10 : set()

After reduction : 
 pending  : [14, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 2, 16, 33, 15, 7, 4, 13, 11]
 solution : [0, 5, 1, 12, 9]


Solution : [0, 5, 1, 12, 9] has cost 41.


Decide in level 10 among pending : [14, 18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 2, 16, 33, 15, 7, 4, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 4)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 2, 16, 33, 15, 7, 4, 13, 11]
 solution : [0, 5, 1, 12, 9, 14]


New level: 11
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 2, 16, 33, 15, 7, 4, 13, 11]
 solution : [0, 5, 1, 12, 9, 14]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 24, 27, 28, 30, 2, 16, 33, 15, 7, 4, 13, 11]
 solution : [0, 5, 1, 12, 9, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 8), (18, 80), (19, 80), (20, 8), (21, 21), (22, 21), (23, 24), (24, 9), (25, 8), (26, 28), (27, 12), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, 0), (25, 2), (26, 7), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 4)]

Covered at level 11 : {11, 24, 27, 28, 30}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15, 7, 4, 13]
 solution : [0, 5, 1, 12, 9, 14]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15, 7, 4, 13]
 solution : [0, 5, 1, 12, 9, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, 0), (25, 2), (26, 7), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 11 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15, 7, 4, 13]
 solution : [0, 5, 1, 12, 9, 14]


Solution : [0, 5, 1, 12, 9, 14] has cost 47.


Decide in level 11 among pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15, 7, 4, 13]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Decide 4 with phase True at level 11

After decision at level 11
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15, 7, 13]
 solution : [0, 5, 1, 12, 9, 14, 4]


New level: 12
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15, 7, 13]
 solution : [0, 5, 1, 12, 9, 14, 4]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 15, 7, 13]
 solution : [0, 5, 1, 12, 9, 14, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, 0), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 12 : {15}

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 7, 13]
 solution : [0, 5, 1, 12, 9, 14, 4]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 7, 13]
 solution : [0, 5, 1, 12, 9, 14, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, 0), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 7, 13]
 solution : [0, 5, 1, 12, 9, 14, 4]


Solution : [0, 5, 1, 12, 9, 14, 4] has cost 52.


Decide in level 12 among pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 7, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 14, 4, 13]


New level: 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 14, 4, 13]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 14, 4, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 13 : {33, 2, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 4, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 4, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 4, 13]


Solution : [0, 5, 1, 12, 9, 14, 4, 13] has cost 58.


Before backtrack at level 13
 pending : []
 solution : [0, 5, 1, 12, 9, 14, 4, 13]

After backtrack at level 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 14, 4, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 14, 4]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 14, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 14, 4]


Solution : [0, 5, 1, 12, 9, 14, 4] has cost 52.


Decide in level 13 among pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 2, 16, 33, 7]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 2 with phase True at level 13

After decision at level 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 14, 4, 2]


New level: 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 14, 4, 2]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 14, 4, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {33, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 4, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 4, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 4, 2]


Solution : [0, 5, 1, 12, 9, 14, 4, 2] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 9, 14, 4, 2]

After backtrack at level 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 14, 4, 2]


Invert decision for 2 at level 13


New level: 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 14, 4]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 14, 4]

Essensial at level 14 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {33, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 4, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 4, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 4, 7]


Solution : [0, 5, 1, 12, 9, 14, 4, 7] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 9, 14, 4, 7]

After backtrack at level 14
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33]
 solution : [0, 5, 1, 12, 9, 14, 4]


Before backtrack at level 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33]
 solution : [0, 5, 1, 12, 9, 14, 4]

After backtrack at level 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2]
 solution : [0, 5, 1, 12, 9, 14, 4]


Before backtrack at level 12
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2]
 solution : [0, 5, 1, 12, 9, 14, 4]

After backtrack at level 12
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15, 13]
 solution : [0, 5, 1, 12, 9, 14, 4]


Invert decision for 4 at level 11


New level: 12
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15, 13]
 solution : [0, 5, 1, 12, 9, 14]


Before reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15, 13]
 solution : [0, 5, 1, 12, 9, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 12 : set()

After reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15, 13]
 solution : [0, 5, 1, 12, 9, 14]


Solution : [0, 5, 1, 12, 9, 14] has cost 47.


Decide in level 12 among pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 14, 13]


New level: 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 14, 13]


Before reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 14, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 13 : {33, 2, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 13]


Solution : [0, 5, 1, 12, 9, 14, 13] has cost 53.


Before backtrack at level 13
 pending : []
 solution : [0, 5, 1, 12, 9, 14, 13]

After backtrack at level 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 14, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 14]


Before reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 13 : set()

After reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 14]


Solution : [0, 5, 1, 12, 9, 14] has cost 47.


Decide in level 13 among pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Decide 7 with phase True at level 13

After decision at level 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 14, 7]


New level: 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 14, 7]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 14, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {33, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 7]


Solution : [0, 5, 1, 12, 9, 14, 7] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 9, 14, 7]

After backtrack at level 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 14, 7]


Invert decision for 7 at level 13


New level: 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 14]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 9, 14]

Essensial at level 14 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 14, 2]


Solution : [0, 5, 1, 12, 9, 14, 2] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 9, 14, 2]

After backtrack at level 14
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 14]


Before backtrack at level 13
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 14]

After backtrack at level 13
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 14]


Before backtrack at level 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 14]

After backtrack at level 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13]
 solution : [0, 5, 1, 12, 9, 14]


Before backtrack at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13]
 solution : [0, 5, 1, 12, 9, 14]

After backtrack at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13, 24, 27, 28, 30, 11, 4]
 solution : [0, 5, 1, 12, 9, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13, 24, 27, 28, 30, 11, 4]
 solution : [0, 5, 1, 12, 9]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13, 24, 27, 28, 30, 11, 4]
 solution : [0, 5, 1, 12, 9]

Essensial at level 11 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, 0), (25, 2), (26, 7), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 4)]

Covered at level 11 : {24, 27, 28, 30}

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13, 4]
 solution : [0, 5, 1, 12, 9, 11]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13, 4]
 solution : [0, 5, 1, 12, 9, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, 0), (25, 2), (26, 7), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13, 4]
 solution : [0, 5, 1, 12, 9, 11]


Solution : [0, 5, 1, 12, 9, 11] has cost 47.


Decide in level 11 among pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 13, 4]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 11, 13]


New level: 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 11, 13]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 11, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 12 : {33, 2, 4, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 13]


Solution : [0, 5, 1, 12, 9, 11, 13] has cost 53.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 9, 11, 13]

After backtrack at level 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 11, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 11]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 11]


Solution : [0, 5, 1, 12, 9, 11] has cost 47.


Decide in level 12 among pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Decide 4 with phase True at level 12

After decision at level 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 11, 4]


New level: 13
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 11, 4]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 11, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 13 : {15}

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 11, 4]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 11, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 11, 4]


Solution : [0, 5, 1, 12, 9, 11, 4] has cost 52.


Decide in level 13 among pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Decide 2 with phase True at level 13

After decision at level 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 11, 4, 2]


New level: 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 11, 4, 2]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 11, 4, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {33, 7, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 4, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 4, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 4, 2]


Solution : [0, 5, 1, 12, 9, 11, 4, 2] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 9, 11, 4, 2]

After backtrack at level 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 11, 4, 2]


Invert decision for 2 at level 13


New level: 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 11, 4]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7]
 solution : [0, 5, 1, 12, 9, 11, 4]

Essensial at level 14 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {33, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 4, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 4, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 4, 7]


Solution : [0, 5, 1, 12, 9, 11, 4, 7] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 9, 11, 4, 7]

After backtrack at level 14
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33]
 solution : [0, 5, 1, 12, 9, 11, 4]


Before backtrack at level 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33]
 solution : [0, 5, 1, 12, 9, 11, 4]

After backtrack at level 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 11, 4]


Invert decision for 4 at level 12


New level: 13
 pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 11]


Before reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 13 : set()

After reduction : 
 pending  : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 11]


Solution : [0, 5, 1, 12, 9, 11] has cost 47.


Decide in level 13 among pending : [7, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Decide 7 with phase True at level 13

After decision at level 13
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 11, 7]


New level: 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 11, 7]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 11, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 4), (17, 2), (18, 5), (19, 5), (20, 2), (21, 5), (22, 5), (23, 5), (24, -1), (25, 2), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {33, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 7]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 7]


Solution : [0, 5, 1, 12, 9, 11, 7] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 9, 11, 7]

After backtrack at level 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 11, 7]


Invert decision for 7 at level 13


New level: 14
 pending : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 11]


Before reduction : 
 pending  : [18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 2]
 solution : [0, 5, 1, 12, 9, 11]

Essensial at level 14 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 2]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 9, 11, 2]


Solution : [0, 5, 1, 12, 9, 11, 2] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 9, 11, 2]

After backtrack at level 14
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 11]


Before backtrack at level 13
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15]
 solution : [0, 5, 1, 12, 9, 11]

After backtrack at level 13
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 11]


Before backtrack at level 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7]
 solution : [0, 5, 1, 12, 9, 11]

After backtrack at level 12
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 11]


Before backtrack at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4]
 solution : [0, 5, 1, 12, 9, 11]

After backtrack at level 11
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13]
 solution : [0, 5, 1, 12, 9]


Before backtrack at level 10
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13]
 solution : [0, 5, 1, 12, 9]

After backtrack at level 10
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14]
 solution : [0, 5, 1, 12, 9]


Before backtrack at level 9
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14]
 solution : [0, 5, 1, 12, 9]

After backtrack at level 9
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8]
 solution : [0, 5, 1, 12, 9]


Before backtrack at level 8
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8]
 solution : [0, 5, 1, 12, 9]

After backtrack at level 8
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31]
 solution : [0, 5, 1, 12, 9]


Before backtrack at level 7
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31]
 solution : [0, 5, 1, 12, 9]

After backtrack at level 7
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10]
 solution : [0, 5, 1, 12, 9]


Before backtrack at level 6
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10]
 solution : [0, 5, 1, 12, 9]

After backtrack at level 6
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6]
 solution : [0, 5, 1, 12, 9]


Before backtrack at level 5
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6]
 solution : [0, 5, 1, 12, 9]

After backtrack at level 5
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 9]


Before backtrack at level 4
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 9]

After backtrack at level 4
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 3]
 solution : [0, 5, 1, 12, 9]


Invert decision for 9 at level 3


New level: 4
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 3]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 3]
 solution : [0, 5, 1, 12]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Covered at level 4 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 3]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 4 among pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 3]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Decide 3 with phase True at level 4

After decision at level 4
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3]


New level: 5
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 15, 7, 4, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 0), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, 0), (16, 8), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

Covered at level 5 : {4, 15}

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, 0), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, 0), (16, 8), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3]


Solution : [0, 5, 1, 12, 3] has cost 25.


Decide in level 5 among pending : [2, 18, 19, 21, 22, 23, 26, 17, 20, 25, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

Decide 20 with phase True at level 5

After decision at level 5
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 25, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 20]


New level: 6
 pending : [2, 18, 19, 21, 22, 23, 26, 17, 25, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 20]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 17, 25, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 20]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 0), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, 0), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 1)]

Covered at level 6 : {17, 25}

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 20]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 20]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 0), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, 0), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, -1), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, -1), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 20]


Solution : [0, 5, 1, 12, 3, 20] has cost 59.


Before backtrack at level 6
 pending : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 20]

After backtrack at level 6
 pending : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17, 25]
 solution : [0, 5, 1, 12, 3, 20]


Invert decision for 20 at level 5


New level: 6
 pending : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17, 25]
 solution : [0, 5, 1, 12, 3]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17, 25]
 solution : [0, 5, 1, 12, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, -1), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, -1), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17, 25]
 solution : [0, 5, 1, 12, 3]


Solution : [0, 5, 1, 12, 3] has cost 25.


Decide in level 6 among pending : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17, 25]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3, 25]


New level: 7
 pending : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3, 25]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 0), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, -1), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 32), (32, 32), (33, 1)]

Covered at level 7 : {17}

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 25]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 0), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, -1), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 32), (32, 32), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, -1), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, -1), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 32), (32, 32), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 25]


Solution : [0, 5, 1, 12, 3, 25] has cost 64.


Before backtrack at level 7
 pending : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 25]

After backtrack at level 7
 pending : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, -1), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, -1), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 32), (32, 32), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, -1), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3]


Solution : [0, 5, 1, 12, 3] has cost 25.


Decide in level 7 among pending : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 24, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, -1), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3, 24]


New level: 8
 pending : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3, 24]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 27, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, -1), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, 0), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Covered at level 8 : {27}

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3, 24]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, 0), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3, 24]


Solution : [0, 5, 1, 12, 3, 24] has cost 41.


Decide in level 8 among pending : [2, 18, 19, 21, 22, 23, 26, 16, 33, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [2, 18, 19, 21, 22, 23, 16, 33, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3, 24, 26]


New level: 9
 pending : [2, 18, 19, 21, 22, 23, 16, 33, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3, 24, 26]


Before reduction : 
 pending  : [2, 18, 19, 21, 22, 23, 16, 33, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32, 17]
 solution : [0, 5, 1, 12, 3, 24, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 1), (8, 1), (9, -1), (10, 128), (11, 128), (12, -1), (13, 1), (14, 128), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, 0)]

Covered at level 9 : {33, 16, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : [2, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 24, 26]


Before reduction : 
 pending  : [2, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 24, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 1), (8, 1), (9, -1), (10, 128), (11, 128), (12, -1), (13, 1), (14, 128), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 1), (8, 1), (9, -1), (10, 128), (11, 128), (12, -1), (13, 1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 24, 26]


Solution : [0, 5, 1, 12, 3, 24, 26] has cost 75.


Before backtrack at level 9
 pending : [2, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32]
 solution : [0, 5, 1, 12, 3, 24, 26]

After backtrack at level 9
 pending : [2, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [2, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24]


Before reduction : 
 pending  : [2, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 1), (8, 1), (9, -1), (10, 128), (11, 128), (12, -1), (13, 1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24]


Solution : [0, 5, 1, 12, 3, 24] has cost 41.


Decide in level 9 among pending : [2, 7, 11, 28, 30, 13, 14, 8, 31, 10, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Decide 11 with phase True at level 9

After decision at level 9
 pending : [2, 7, 28, 30, 13, 14, 8, 31, 10, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


New level: 10
 pending : [2, 7, 28, 30, 13, 14, 8, 31, 10, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


Before reduction : 
 pending  : [2, 7, 28, 30, 13, 14, 8, 31, 10, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 0), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

Covered at level 10 : {10, 28, 30, 14}

After reduction : 
 pending  : [2, 7, 13, 8, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


Before reduction : 
 pending  : [2, 7, 13, 8, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 0), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 7, 13, 8, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


Solution : [0, 5, 1, 12, 3, 24, 11] has cost 47.


Decide in level 10 among pending : [2, 7, 13, 8, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [2, 7, 8, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 13]


New level: 11
 pending : [2, 7, 8, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 13]


Before reduction : 
 pending  : [2, 7, 8, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 11 : {32, 33, 2, 6, 7, 8, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 11, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 11, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 11, 13]


Solution : [0, 5, 1, 12, 3, 24, 11, 13] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 5, 1, 12, 3, 24, 11, 13]

After backtrack at level 11
 pending : [2, 7, 8, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [2, 7, 8, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


Before reduction : 
 pending  : [2, 7, 8, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 7, 8, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


Solution : [0, 5, 1, 12, 3, 24, 11] has cost 47.


Decide in level 11 among pending : [2, 7, 8, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 8 with phase True at level 11

After decision at level 11
 pending : [2, 7, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 8]


New level: 12
 pending : [2, 7, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 8]


Before reduction : 
 pending  : [2, 7, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 12 : {32, 33, 2, 6, 7, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 11, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 11, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 11, 8]


Solution : [0, 5, 1, 12, 3, 24, 11, 8] has cost 53.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 3, 24, 11, 8]

After backtrack at level 12
 pending : [2, 7, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 8]


Invert decision for 8 at level 11


New level: 12
 pending : [2, 7, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


Before reduction : 
 pending  : [2, 7, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 7, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


Solution : [0, 5, 1, 12, 3, 24, 11] has cost 47.


Decide in level 12 among pending : [2, 7, 31, 6, 32, 18, 19, 21, 22, 23, 16, 33, 17]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 6 with phase True at level 12

After decision at level 12
 pending : [2, 7, 31, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 6]


New level: 13
 pending : [2, 7, 31, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 6]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 13 : {32, 33, 2, 7, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 11, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 11, 6]


Solution : [0, 5, 1, 12, 3, 24, 11, 6] has cost 60.


Before backtrack at level 13
 pending : []
 solution : [0, 5, 1, 12, 3, 24, 11, 6]

After backtrack at level 13
 pending : [2, 7, 31, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 6]


Invert decision for 6 at level 12


New level: 13
 pending : [2, 7, 31, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 21, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


Solution : [0, 5, 1, 12, 3, 24, 11] has cost 47.


Decide in level 13 among pending : [2, 7, 31, 32, 18, 19, 21, 22, 23, 16, 33, 17]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 21 with phase True at level 13

After decision at level 13
 pending : [2, 7, 31, 32, 18, 19, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 21]


New level: 14
 pending : [2, 7, 31, 32, 18, 19, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 21]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 14 : {32, 33, 16, 17, 18, 19, 22, 23, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 11, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 11, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 11, 21]


Solution : [0, 5, 1, 12, 3, 24, 11, 21] has cost 81.


Before backtrack at level 14
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 11, 21]

After backtrack at level 14
 pending : [2, 7, 31, 32, 18, 19, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 21]


Invert decision for 21 at level 13


New level: 14
 pending : [2, 7, 31, 32, 18, 19, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, -1), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 22, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


Solution : [0, 5, 1, 12, 3, 24, 11] has cost 47.


Decide in level 14 among pending : [2, 7, 31, 32, 18, 19, 22, 23, 16, 33, 17]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, -1), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 22 with phase True at level 14

After decision at level 14
 pending : [2, 7, 31, 32, 18, 19, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 22]


New level: 15
 pending : [2, 7, 31, 32, 18, 19, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 22]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, -1), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 15 : {32, 33, 16, 17, 18, 19, 23, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 11, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 11, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 11, 22]


Solution : [0, 5, 1, 12, 3, 24, 11, 22] has cost 81.


Before backtrack at level 15
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 11, 22]

After backtrack at level 15
 pending : [2, 7, 31, 32, 18, 19, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11, 22]


Invert decision for 22 at level 14


New level: 15
 pending : [2, 7, 31, 32, 18, 19, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 23, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]

Essensial at level 15 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 15 : {32, 33, 16, 17, 18, 19, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 11, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 11, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 11, 23]


Solution : [0, 5, 1, 12, 3, 24, 11, 23] has cost 81.


Before backtrack at level 15
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 11, 23]

After backtrack at level 15
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]


Before backtrack at level 14
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 11]

After backtrack at level 14
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22]
 solution : [0, 5, 1, 12, 3, 24, 11]


Before backtrack at level 13
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22]
 solution : [0, 5, 1, 12, 3, 24, 11]

After backtrack at level 13
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 11]


Before backtrack at level 12
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 11]

After backtrack at level 12
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6]
 solution : [0, 5, 1, 12, 3, 24, 11]


Before backtrack at level 11
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6]
 solution : [0, 5, 1, 12, 3, 24, 11]

After backtrack at level 11
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8]
 solution : [0, 5, 1, 12, 3, 24, 11]


Before backtrack at level 10
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8]
 solution : [0, 5, 1, 12, 3, 24, 11]

After backtrack at level 10
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 28, 30, 14, 10, 13]
 solution : [0, 5, 1, 12, 3, 24, 11]


Invert decision for 11 at level 9


New level: 10
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 28, 30, 14, 10, 13]
 solution : [0, 5, 1, 12, 3, 24]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 28, 30, 14, 10, 13]
 solution : [0, 5, 1, 12, 3, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 28, 30, 14, 10, 13]
 solution : [0, 5, 1, 12, 3, 24]


Solution : [0, 5, 1, 12, 3, 24] has cost 41.


Decide in level 10 among pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 28, 30, 14, 10, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 28, 30, 10, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]


New level: 11
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 28, 30, 10, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 28, 30, 10, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 0), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

Covered at level 11 : {10, 28, 30}

After reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 0), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]


Solution : [0, 5, 1, 12, 3, 24, 14] has cost 47.


Decide in level 11 among pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 6 with phase True at level 11

After decision at level 11
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 24, 14, 6]


New level: 12
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 24, 14, 6]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 24, 14, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 12 : {32, 33, 2, 7, 8, 13, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 14, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 14, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 14, 6]


Solution : [0, 5, 1, 12, 3, 24, 14, 6] has cost 60.


Before backtrack at level 12
 pending : []
 solution : [0, 5, 1, 12, 3, 24, 14, 6]

After backtrack at level 12
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 24, 14, 6]


Invert decision for 6 at level 11


New level: 12
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]


Solution : [0, 5, 1, 12, 3, 24, 14] has cost 47.


Decide in level 12 among pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 8 with phase True at level 12

After decision at level 12
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 24, 14, 8]


New level: 13
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 24, 14, 8]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 24, 14, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 13 : {32, 33, 2, 7, 13, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 14, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 14, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 14, 8]


Solution : [0, 5, 1, 12, 3, 24, 14, 8] has cost 53.


Before backtrack at level 13
 pending : []
 solution : [0, 5, 1, 12, 3, 24, 14, 8]

After backtrack at level 13
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 24, 14, 8]


Invert decision for 8 at level 12


New level: 13
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]


Solution : [0, 5, 1, 12, 3, 24, 14] has cost 47.


Decide in level 13 among pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14, 13]


New level: 14
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14, 13]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 14 : {32, 33, 2, 7, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 14, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 14, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 24, 14, 13]


Solution : [0, 5, 1, 12, 3, 24, 14, 13] has cost 53.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 3, 24, 14, 13]

After backtrack at level 14
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14]


Solution : [0, 5, 1, 12, 3, 24, 14] has cost 47.


Decide in level 14 among pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 23 with phase True at level 14

After decision at level 14
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14, 23]


New level: 15
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14, 23]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 15 : {32, 33, 16, 17, 18, 19, 21, 22, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 14, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 14, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 14, 23]


Solution : [0, 5, 1, 12, 3, 24, 14, 23] has cost 81.


Before backtrack at level 15
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 14, 23]

After backtrack at level 15
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14, 23]


Invert decision for 23 at level 14


New level: 15
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 24, 14]


Solution : [0, 5, 1, 12, 3, 24, 14] has cost 47.


Decide in level 15 among pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 22 with phase True at level 15

After decision at level 15
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 21]
 solution : [0, 5, 1, 12, 3, 24, 14, 22]


New level: 16
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 21]
 solution : [0, 5, 1, 12, 3, 24, 14, 22]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 21]
 solution : [0, 5, 1, 12, 3, 24, 14, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 16 : {32, 33, 16, 17, 18, 19, 21, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 14, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 14, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 14, 22]


Solution : [0, 5, 1, 12, 3, 24, 14, 22] has cost 81.


Before backtrack at level 16
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 14, 22]

After backtrack at level 16
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 21]
 solution : [0, 5, 1, 12, 3, 24, 14, 22]


Invert decision for 22 at level 15


New level: 16
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 21]
 solution : [0, 5, 1, 12, 3, 24, 14]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 21]
 solution : [0, 5, 1, 12, 3, 24, 14]

Essensial at level 16 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 16 : {32, 33, 16, 17, 18, 19, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 14, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 14, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 14, 21]


Solution : [0, 5, 1, 12, 3, 24, 14, 21] has cost 81.


Before backtrack at level 16
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 24, 14, 21]

After backtrack at level 16
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 14]


Before backtrack at level 15
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 24, 14]

After backtrack at level 15
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22]
 solution : [0, 5, 1, 12, 3, 24, 14]


Before backtrack at level 14
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22]
 solution : [0, 5, 1, 12, 3, 24, 14]

After backtrack at level 14
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 24, 14]


Before backtrack at level 13
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 24, 14]

After backtrack at level 13
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]


Before backtrack at level 12
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13]
 solution : [0, 5, 1, 12, 3, 24, 14]

After backtrack at level 12
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8]
 solution : [0, 5, 1, 12, 3, 24, 14]


Before backtrack at level 11
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8]
 solution : [0, 5, 1, 12, 3, 24, 14]

After backtrack at level 11
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 28, 30, 10, 6]
 solution : [0, 5, 1, 12, 3, 24, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 28, 30, 10, 6]
 solution : [0, 5, 1, 12, 3, 24]


Before reduction : 
 pending  : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 28, 30, 10, 6]
 solution : [0, 5, 1, 12, 3, 24]

Essensial at level 11 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

Covered at level 11 : {28, 30}

After reduction : 
 pending  : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 24, 10]


Before reduction : 
 pending  : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 24, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 24, 10]


Solution : [0, 5, 1, 12, 3, 24, 10] has cost 54.


Before backtrack at level 11
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 24, 10]

After backtrack at level 11
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30]
 solution : [0, 5, 1, 12, 3, 24]


Before backtrack at level 10
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30]
 solution : [0, 5, 1, 12, 3, 24]

After backtrack at level 10
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14]
 solution : [0, 5, 1, 12, 3, 24]


Before backtrack at level 9
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14]
 solution : [0, 5, 1, 12, 3, 24]

After backtrack at level 9
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 3, 24]


Before backtrack at level 8
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 3, 24]

After backtrack at level 8
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11, 27, 26]
 solution : [0, 5, 1, 12, 3, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11, 27, 26]
 solution : [0, 5, 1, 12, 3]


Before reduction : 
 pending  : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11, 27, 26]
 solution : [0, 5, 1, 12, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11, 27, 26]
 solution : [0, 5, 1, 12, 3]


Solution : [0, 5, 1, 12, 3] has cost 25.


Decide in level 8 among pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11, 27, 26]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11, 26]
 solution : [0, 5, 1, 12, 3, 27]


New level: 9
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11, 26]
 solution : [0, 5, 1, 12, 3, 27]


Before reduction : 
 pending  : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11, 26]
 solution : [0, 5, 1, 12, 3, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11, 26]
 solution : [0, 5, 1, 12, 3, 27]


Solution : [0, 5, 1, 12, 3, 27] has cost 41.


Decide in level 9 among pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11, 26]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Decide 26 with phase True at level 9

After decision at level 9
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 3, 27, 26]


New level: 10
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 3, 27, 26]


Before reduction : 
 pending  : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 3, 27, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 1), (8, 1), (9, -1), (10, 128), (11, 128), (12, -1), (13, 1), (14, 128), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, 0)]

Covered at level 10 : {33, 16, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 10, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 3, 27, 26]


Before reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 10, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 3, 27, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 1), (8, 1), (9, -1), (10, 128), (11, 128), (12, -1), (13, 1), (14, 128), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 1), (8, 1), (9, -1), (10, 128), (11, 128), (12, -1), (13, 1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 10, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 3, 27, 26]


Solution : [0, 5, 1, 12, 3, 27, 26] has cost 75.


Before backtrack at level 10
 pending : [2, 7, 31, 32, 13, 8, 6, 10, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 3, 27, 26]

After backtrack at level 10
 pending : [2, 7, 31, 32, 13, 8, 6, 10, 28, 30, 14, 11, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 26]


Invert decision for 26 at level 9


New level: 10
 pending : [2, 7, 31, 32, 13, 8, 6, 10, 28, 30, 14, 11, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27]


Before reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 10, 28, 30, 14, 11, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 1), (8, 1), (9, -1), (10, 128), (11, 128), (12, -1), (13, 1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 10, 28, 30, 14, 11, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27]


Solution : [0, 5, 1, 12, 3, 27] has cost 41.


Decide in level 10 among pending : [2, 7, 31, 32, 13, 8, 6, 10, 28, 30, 14, 11, 21, 18, 19, 16, 33, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [2, 7, 31, 32, 13, 8, 6, 28, 30, 14, 11, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 10]


New level: 11
 pending : [2, 7, 31, 32, 13, 8, 6, 28, 30, 14, 11, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 10]


Before reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 28, 30, 14, 11, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, 0), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

Covered at level 11 : {11, 28, 30, 14}

After reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 10]


Before reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, 0), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 10]


Solution : [0, 5, 1, 12, 3, 27, 10] has cost 54.


Before backtrack at level 11
 pending : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 10]

After backtrack at level 11
 pending : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 3, 27, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 3, 27]


Before reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 3, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23, 28, 30, 14, 11]
 solution : [0, 5, 1, 12, 3, 27]


Solution : [0, 5, 1, 12, 3, 27] has cost 41.


Decide in level 11 among pending : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23, 28, 30, 14, 11]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23, 28, 30, 11]
 solution : [0, 5, 1, 12, 3, 27, 14]


New level: 12
 pending : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23, 28, 30, 11]
 solution : [0, 5, 1, 12, 3, 27, 14]


Before reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23, 28, 30, 11]
 solution : [0, 5, 1, 12, 3, 27, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

Covered at level 12 : {11, 28, 30}

After reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]


Before reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]


Solution : [0, 5, 1, 12, 3, 27, 14] has cost 47.


Decide in level 12 among pending : [2, 7, 31, 32, 13, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [2, 7, 31, 32, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 13]


New level: 13
 pending : [2, 7, 31, 32, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 13]


Before reduction : 
 pending  : [2, 7, 31, 32, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 13 : {32, 33, 2, 6, 7, 8, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 14, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 14, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 14, 13]


Solution : [0, 5, 1, 12, 3, 27, 14, 13] has cost 53.


Before backtrack at level 13
 pending : []
 solution : [0, 5, 1, 12, 3, 27, 14, 13]

After backtrack at level 13
 pending : [2, 7, 31, 32, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [2, 7, 31, 32, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]


Before reduction : 
 pending  : [2, 7, 31, 32, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]


Solution : [0, 5, 1, 12, 3, 27, 14] has cost 47.


Decide in level 13 among pending : [2, 7, 31, 32, 8, 6, 21, 18, 19, 16, 33, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 8 with phase True at level 13

After decision at level 13
 pending : [2, 7, 31, 32, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 8]


New level: 14
 pending : [2, 7, 31, 32, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 8]


Before reduction : 
 pending  : [2, 7, 31, 32, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 14 : {32, 33, 2, 6, 7, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 14, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 14, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 14, 8]


Solution : [0, 5, 1, 12, 3, 27, 14, 8] has cost 53.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 3, 27, 14, 8]

After backtrack at level 14
 pending : [2, 7, 31, 32, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 8]


Invert decision for 8 at level 13


New level: 14
 pending : [2, 7, 31, 32, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]


Before reduction : 
 pending  : [2, 7, 31, 32, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 6, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]


Solution : [0, 5, 1, 12, 3, 27, 14] has cost 47.


Decide in level 14 among pending : [2, 7, 31, 32, 6, 21, 18, 19, 16, 33, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 6 with phase True at level 14

After decision at level 14
 pending : [2, 7, 31, 32, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 6]


New level: 15
 pending : [2, 7, 31, 32, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 6]


Before reduction : 
 pending  : [2, 7, 31, 32, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 15 : {32, 33, 2, 7, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 14, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 14, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 14, 6]


Solution : [0, 5, 1, 12, 3, 27, 14, 6] has cost 60.


Before backtrack at level 15
 pending : []
 solution : [0, 5, 1, 12, 3, 27, 14, 6]

After backtrack at level 15
 pending : [2, 7, 31, 32, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 6]


Invert decision for 6 at level 14


New level: 15
 pending : [2, 7, 31, 32, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]


Before reduction : 
 pending  : [2, 7, 31, 32, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]


Solution : [0, 5, 1, 12, 3, 27, 14] has cost 47.


Decide in level 15 among pending : [2, 7, 31, 32, 21, 18, 19, 16, 33, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 21 with phase True at level 15

After decision at level 15
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 21]


New level: 16
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 21]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 16 : {32, 33, 16, 17, 18, 19, 22, 23, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 14, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 14, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 14, 21]


Solution : [0, 5, 1, 12, 3, 27, 14, 21] has cost 81.


Before backtrack at level 16
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 14, 21]

After backtrack at level 16
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 21]


Invert decision for 21 at level 15


New level: 16
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, -1), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]


Solution : [0, 5, 1, 12, 3, 27, 14] has cost 47.


Decide in level 16 among pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, -1), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 22 with phase True at level 16

After decision at level 16
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 22]


New level: 17
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 22]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 22]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, -1), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 17 : {32, 33, 16, 17, 18, 19, 23, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 14, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 14, 22]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 14, 22]


Solution : [0, 5, 1, 12, 3, 27, 14, 22] has cost 81.


Before backtrack at level 17
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 14, 22]

After backtrack at level 17
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 23]
 solution : [0, 5, 1, 12, 3, 27, 14, 22]


Invert decision for 22 at level 16


New level: 17
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 23]
 solution : [0, 5, 1, 12, 3, 27, 14]

Essensial at level 17 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 17 : {32, 33, 16, 17, 18, 19, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 14, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 14, 23]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 14, 23]


Solution : [0, 5, 1, 12, 3, 27, 14, 23] has cost 81.


Before backtrack at level 17
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 14, 23]

After backtrack at level 17
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 27, 14]


Before backtrack at level 16
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 27, 14]

After backtrack at level 16
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22]
 solution : [0, 5, 1, 12, 3, 27, 14]


Before backtrack at level 15
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22]
 solution : [0, 5, 1, 12, 3, 27, 14]

After backtrack at level 15
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 14]


Before backtrack at level 14
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 14]

After backtrack at level 14
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6]
 solution : [0, 5, 1, 12, 3, 27, 14]


Before backtrack at level 13
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6]
 solution : [0, 5, 1, 12, 3, 27, 14]

After backtrack at level 13
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8]
 solution : [0, 5, 1, 12, 3, 27, 14]


Before backtrack at level 12
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8]
 solution : [0, 5, 1, 12, 3, 27, 14]

After backtrack at level 12
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 28, 30, 11, 13]
 solution : [0, 5, 1, 12, 3, 27, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 28, 30, 11, 13]
 solution : [0, 5, 1, 12, 3, 27]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 28, 30, 11, 13]
 solution : [0, 5, 1, 12, 3, 27]

Essensial at level 12 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

Covered at level 12 : {28, 30}

After reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 27, 11]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 27, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 27, 11]


Solution : [0, 5, 1, 12, 3, 27, 11] has cost 47.


Decide in level 12 among pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 6, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 6 with phase True at level 12

After decision at level 12
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 27, 11, 6]


New level: 13
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 27, 11, 6]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 27, 11, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 13 : {32, 33, 2, 7, 8, 13, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 11, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 11, 6]


Solution : [0, 5, 1, 12, 3, 27, 11, 6] has cost 60.


Before backtrack at level 13
 pending : []
 solution : [0, 5, 1, 12, 3, 27, 11, 6]

After backtrack at level 13
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 27, 11, 6]


Invert decision for 6 at level 12


New level: 13
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 27, 11]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 27, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 27, 11]


Solution : [0, 5, 1, 12, 3, 27, 11] has cost 47.


Decide in level 13 among pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 8 with phase True at level 13

After decision at level 13
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 27, 11, 8]


New level: 14
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 27, 11, 8]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 27, 11, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 14 : {32, 33, 2, 7, 13, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 11, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 11, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 11, 8]


Solution : [0, 5, 1, 12, 3, 27, 11, 8] has cost 53.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 3, 27, 11, 8]

After backtrack at level 14
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 27, 11, 8]


Invert decision for 8 at level 13


New level: 14
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 27, 11]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 27, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 27, 11]


Solution : [0, 5, 1, 12, 3, 27, 11] has cost 47.


Decide in level 14 among pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11, 13]


New level: 15
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11, 13]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 15 : {32, 33, 2, 7, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 11, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 11, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 27, 11, 13]


Solution : [0, 5, 1, 12, 3, 27, 11, 13] has cost 53.


Before backtrack at level 15
 pending : []
 solution : [0, 5, 1, 12, 3, 27, 11, 13]

After backtrack at level 15
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11]


Before reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11]


Solution : [0, 5, 1, 12, 3, 27, 11] has cost 47.


Decide in level 15 among pending : [2, 7, 23, 31, 32, 18, 19, 16, 33, 17, 22, 21]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 23 with phase True at level 15

After decision at level 15
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11, 23]


New level: 16
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11, 23]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11, 23]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 16 : {32, 33, 16, 17, 18, 19, 21, 22, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 11, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 11, 23]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 11, 23]


Solution : [0, 5, 1, 12, 3, 27, 11, 23] has cost 81.


Before backtrack at level 16
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 11, 23]

After backtrack at level 16
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11, 23]


Invert decision for 23 at level 15


New level: 16
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 27, 11]


Solution : [0, 5, 1, 12, 3, 27, 11] has cost 47.


Decide in level 16 among pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 22, 21]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

Decide 22 with phase True at level 16

After decision at level 16
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 21]
 solution : [0, 5, 1, 12, 3, 27, 11, 22]


New level: 17
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 21]
 solution : [0, 5, 1, 12, 3, 27, 11, 22]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 21]
 solution : [0, 5, 1, 12, 3, 27, 11, 22]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 2), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 17 : {32, 33, 16, 17, 18, 19, 21, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 11, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 11, 22]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 11, 22]


Solution : [0, 5, 1, 12, 3, 27, 11, 22] has cost 81.


Before backtrack at level 17
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 11, 22]

After backtrack at level 17
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 21]
 solution : [0, 5, 1, 12, 3, 27, 11, 22]


Invert decision for 22 at level 16


New level: 17
 pending : [2, 7, 31, 32, 18, 19, 16, 33, 17, 21]
 solution : [0, 5, 1, 12, 3, 27, 11]


Before reduction : 
 pending  : [2, 7, 31, 32, 18, 19, 16, 33, 17, 21]
 solution : [0, 5, 1, 12, 3, 27, 11]

Essensial at level 17 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 17 : {32, 33, 16, 17, 18, 19, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 11, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 11, 21]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 11, 21]


Solution : [0, 5, 1, 12, 3, 27, 11, 21] has cost 81.


Before backtrack at level 17
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 27, 11, 21]

After backtrack at level 17
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 27, 11]


Before backtrack at level 16
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17]
 solution : [0, 5, 1, 12, 3, 27, 11]

After backtrack at level 16
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22]
 solution : [0, 5, 1, 12, 3, 27, 11]


Before backtrack at level 15
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22]
 solution : [0, 5, 1, 12, 3, 27, 11]

After backtrack at level 15
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 11]


Before backtrack at level 14
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 27, 11]

After backtrack at level 14
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13]
 solution : [0, 5, 1, 12, 3, 27, 11]


Before backtrack at level 13
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13]
 solution : [0, 5, 1, 12, 3, 27, 11]

After backtrack at level 13
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8]
 solution : [0, 5, 1, 12, 3, 27, 11]


Before backtrack at level 12
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8]
 solution : [0, 5, 1, 12, 3, 27, 11]

After backtrack at level 12
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6]
 solution : [0, 5, 1, 12, 3, 27]


Before backtrack at level 11
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6]
 solution : [0, 5, 1, 12, 3, 27]

After backtrack at level 11
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6, 14]
 solution : [0, 5, 1, 12, 3, 27]


Before backtrack at level 10
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6, 14]
 solution : [0, 5, 1, 12, 3, 27]

After backtrack at level 10
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6, 14, 10]
 solution : [0, 5, 1, 12, 3, 27]


Before backtrack at level 9
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6, 14, 10]
 solution : [0, 5, 1, 12, 3, 27]

After backtrack at level 9
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6, 14, 10, 26]
 solution : [0, 5, 1, 12, 3, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6, 14, 10, 26]
 solution : [0, 5, 1, 12, 3]


Before reduction : 
 pending  : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6, 14, 10, 26]
 solution : [0, 5, 1, 12, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, 136), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6, 14, 10, 26]
 solution : [0, 5, 1, 12, 3]


Solution : [0, 5, 1, 12, 3] has cost 25.


Decide in level 9 among pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6, 14, 10, 26]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, 136), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

Decide 26 with phase True at level 9

After decision at level 9
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6, 14, 10]
 solution : [0, 5, 1, 12, 3, 26]


New level: 10
 pending : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6, 14, 10]
 solution : [0, 5, 1, 12, 3, 26]


Before reduction : 
 pending  : [2, 7, 21, 31, 32, 18, 19, 16, 33, 17, 22, 23, 13, 8, 11, 28, 30, 6, 14, 10]
 solution : [0, 5, 1, 12, 3, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, 136), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 1), (8, 1), (9, -1), (10, 128), (11, 128), (12, -1), (13, 1), (14, 128), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 1), (32, 1), (33, 0)]

Covered at level 10 : {33, 16, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 11, 28, 30, 6, 14, 10]
 solution : [0, 5, 1, 12, 3, 26]


Before reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 11, 28, 30, 6, 14, 10]
 solution : [0, 5, 1, 12, 3, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 1), (8, 1), (9, -1), (10, 128), (11, 128), (12, -1), (13, 1), (14, 128), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 1), (32, 1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 1), (8, 1), (9, -1), (10, 128), (11, 128), (12, -1), (13, 1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 11, 28, 30, 6, 14, 10]
 solution : [0, 5, 1, 12, 3, 26]


Solution : [0, 5, 1, 12, 3, 26] has cost 59.


Before backtrack at level 10
 pending : [2, 7, 31, 32, 13, 8, 11, 28, 30, 6, 14, 10]
 solution : [0, 5, 1, 12, 3, 26]

After backtrack at level 10
 pending : [2, 7, 31, 32, 13, 8, 11, 28, 30, 6, 14, 10, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 26]


Invert decision for 26 at level 9


New level: 10
 pending : [2, 7, 31, 32, 13, 8, 11, 28, 30, 6, 14, 10, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3]


Before reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 11, 28, 30, 6, 14, 10, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, 1), (7, 1), (8, 1), (9, -1), (10, 128), (11, 128), (12, -1), (13, 1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 7, 31, 32, 13, 8, 11, 28, 30, 6, 14, 10, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3]


Solution : [0, 5, 1, 12, 3] has cost 25.


Decide in level 10 among pending : [2, 7, 31, 32, 13, 8, 11, 28, 30, 6, 14, 10, 21, 18, 19, 16, 33, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

Decide 31 with phase True at level 10

After decision at level 10
 pending : [2, 7, 32, 13, 8, 11, 28, 30, 6, 14, 10, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31]


New level: 11
 pending : [2, 7, 32, 13, 8, 11, 28, 30, 6, 14, 10, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31]


Before reduction : 
 pending  : [2, 7, 32, 13, 8, 11, 28, 30, 6, 14, 10, 21, 18, 19, 16, 33, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 0), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, 0), (33, 0)]

Covered at level 11 : {32, 16, 33}

After reduction : 
 pending  : [2, 7, 13, 8, 11, 28, 30, 6, 14, 10, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31]


Before reduction : 
 pending  : [2, 7, 13, 8, 11, 28, 30, 6, 14, 10, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 0), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 7, 13, 8, 11, 28, 30, 6, 14, 10, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31]


Solution : [0, 5, 1, 12, 3, 31] has cost 35.


Decide in level 11 among pending : [2, 7, 13, 8, 11, 28, 30, 6, 14, 10, 21, 18, 19, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 11

After decision at level 11
 pending : [2, 7, 13, 8, 28, 30, 6, 14, 10, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]


New level: 12
 pending : [2, 7, 13, 8, 28, 30, 6, 14, 10, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]


Before reduction : 
 pending  : [2, 7, 13, 8, 28, 30, 6, 14, 10, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 0), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {10, 28, 30, 14}

After reduction : 
 pending  : [2, 7, 13, 8, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]


Before reduction : 
 pending  : [2, 7, 13, 8, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 0), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 7, 13, 8, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]


Solution : [0, 5, 1, 12, 3, 31, 11] has cost 41.


Decide in level 12 among pending : [2, 7, 13, 8, 6, 21, 18, 19, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [2, 7, 8, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 13]


New level: 13
 pending : [2, 7, 8, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 13]


Before reduction : 
 pending  : [2, 7, 8, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {2, 6, 7, 8, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 11, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 11, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 11, 13]


Solution : [0, 5, 1, 12, 3, 31, 11, 13] has cost 47.


Before backtrack at level 13
 pending : []
 solution : [0, 5, 1, 12, 3, 31, 11, 13]

After backtrack at level 13
 pending : [2, 7, 8, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [2, 7, 8, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]


Before reduction : 
 pending  : [2, 7, 8, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 7, 8, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]


Solution : [0, 5, 1, 12, 3, 31, 11] has cost 41.


Decide in level 13 among pending : [2, 7, 8, 6, 21, 18, 19, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 13

After decision at level 13
 pending : [2, 7, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 8]


New level: 14
 pending : [2, 7, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 8]


Before reduction : 
 pending  : [2, 7, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {2, 6, 7, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 11, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 11, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 11, 8]


Solution : [0, 5, 1, 12, 3, 31, 11, 8] has cost 47.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 3, 31, 11, 8]

After backtrack at level 14
 pending : [2, 7, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 8]


Invert decision for 8 at level 13


New level: 14
 pending : [2, 7, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]


Before reduction : 
 pending  : [2, 7, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7, 6, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]


Solution : [0, 5, 1, 12, 3, 31, 11] has cost 41.


Decide in level 14 among pending : [2, 7, 6, 21, 18, 19, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 14

After decision at level 14
 pending : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 6]


New level: 15
 pending : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 6]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {2, 7, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 11, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 11, 6]


Solution : [0, 5, 1, 12, 3, 31, 11, 6] has cost 54.


Before backtrack at level 15
 pending : []
 solution : [0, 5, 1, 12, 3, 31, 11, 6]

After backtrack at level 15
 pending : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 6]


Invert decision for 6 at level 14


New level: 15
 pending : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]


Solution : [0, 5, 1, 12, 3, 31, 11] has cost 41.


Decide in level 15 among pending : [2, 7, 21, 18, 19, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 21 with phase True at level 15

After decision at level 15
 pending : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 21]


New level: 16
 pending : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 21]


Before reduction : 
 pending  : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {17, 18, 19, 22, 23}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 11, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 11, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 11, 21]


Solution : [0, 5, 1, 12, 3, 31, 11, 21] has cost 75.


Before backtrack at level 16
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 11, 21]

After backtrack at level 16
 pending : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 21]


Invert decision for 21 at level 15


New level: 16
 pending : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]


Before reduction : 
 pending  : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, -1), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]


Solution : [0, 5, 1, 12, 3, 31, 11] has cost 41.


Decide in level 16 among pending : [2, 7, 18, 19, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, -1), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 22 with phase True at level 16

After decision at level 16
 pending : [2, 7, 18, 19, 17, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 22]


New level: 17
 pending : [2, 7, 18, 19, 17, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 22]


Before reduction : 
 pending  : [2, 7, 18, 19, 17, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 22]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, -1), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {17, 18, 19, 23}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 11, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 11, 22]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 11, 22]


Solution : [0, 5, 1, 12, 3, 31, 11, 22] has cost 75.


Before backtrack at level 17
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 11, 22]

After backtrack at level 17
 pending : [2, 7, 18, 19, 17, 23]
 solution : [0, 5, 1, 12, 3, 31, 11, 22]


Invert decision for 22 at level 16


New level: 17
 pending : [2, 7, 18, 19, 17, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]


Before reduction : 
 pending  : [2, 7, 18, 19, 17, 23]
 solution : [0, 5, 1, 12, 3, 31, 11]

Essensial at level 17 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {17, 18, 19}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 11, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 11, 23]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 11, 23]


Solution : [0, 5, 1, 12, 3, 31, 11, 23] has cost 75.


Before backtrack at level 17
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 11, 23]

After backtrack at level 17
 pending : [2, 7, 23, 18, 19, 17]
 solution : [0, 5, 1, 12, 3, 31, 11]


Before backtrack at level 16
 pending : [2, 7, 23, 18, 19, 17]
 solution : [0, 5, 1, 12, 3, 31, 11]

After backtrack at level 16
 pending : [2, 7, 23, 18, 19, 17, 22]
 solution : [0, 5, 1, 12, 3, 31, 11]


Before backtrack at level 15
 pending : [2, 7, 23, 18, 19, 17, 22]
 solution : [0, 5, 1, 12, 3, 31, 11]

After backtrack at level 15
 pending : [2, 7, 23, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 11]


Before backtrack at level 14
 pending : [2, 7, 23, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 11]

After backtrack at level 14
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6]
 solution : [0, 5, 1, 12, 3, 31, 11]


Before backtrack at level 13
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6]
 solution : [0, 5, 1, 12, 3, 31, 11]

After backtrack at level 13
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8]
 solution : [0, 5, 1, 12, 3, 31, 11]


Before backtrack at level 12
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8]
 solution : [0, 5, 1, 12, 3, 31, 11]

After backtrack at level 12
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 28, 30, 14, 10, 13]
 solution : [0, 5, 1, 12, 3, 31, 11]


Invert decision for 11 at level 11


New level: 12
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 28, 30, 14, 10, 13]
 solution : [0, 5, 1, 12, 3, 31]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 28, 30, 14, 10, 13]
 solution : [0, 5, 1, 12, 3, 31]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 28, 30, 14, 10, 13]
 solution : [0, 5, 1, 12, 3, 31]


Solution : [0, 5, 1, 12, 3, 31] has cost 35.


Decide in level 12 among pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 28, 30, 14, 10, 13]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 28, 30, 10, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]


New level: 13
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 28, 30, 10, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 28, 30, 10, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 0), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {10, 28, 30}

After reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 0), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]


Solution : [0, 5, 1, 12, 3, 31, 14] has cost 41.


Decide in level 13 among pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 13

After decision at level 13
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 31, 14, 6]


New level: 14
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 31, 14, 6]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 31, 14, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {2, 7, 8, 13, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 14, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 14, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 14, 6]


Solution : [0, 5, 1, 12, 3, 31, 14, 6] has cost 54.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 3, 31, 14, 6]

After backtrack at level 14
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 31, 14, 6]


Invert decision for 6 at level 13


New level: 14
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]


Solution : [0, 5, 1, 12, 3, 31, 14] has cost 41.


Decide in level 14 among pending : [2, 7, 23, 18, 19, 17, 22, 21, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 14

After decision at level 14
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 31, 14, 8]


New level: 15
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 31, 14, 8]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 31, 14, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {2, 7, 13, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 14, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 14, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 14, 8]


Solution : [0, 5, 1, 12, 3, 31, 14, 8] has cost 47.


Before backtrack at level 15
 pending : []
 solution : [0, 5, 1, 12, 3, 31, 14, 8]

After backtrack at level 15
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 31, 14, 8]


Invert decision for 8 at level 14


New level: 15
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]


Solution : [0, 5, 1, 12, 3, 31, 14] has cost 41.


Decide in level 15 among pending : [2, 7, 23, 18, 19, 17, 22, 21, 13]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 13 with phase True at level 15

After decision at level 15
 pending : [2, 7, 23, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14, 13]


New level: 16
 pending : [2, 7, 23, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14, 13]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {2, 7, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 14, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 14, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 31, 14, 13]


Solution : [0, 5, 1, 12, 3, 31, 14, 13] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 5, 1, 12, 3, 31, 14, 13]

After backtrack at level 16
 pending : [2, 7, 23, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14, 13]


Invert decision for 13 at level 15


New level: 16
 pending : [2, 7, 23, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14]


Solution : [0, 5, 1, 12, 3, 31, 14] has cost 41.


Decide in level 16 among pending : [2, 7, 23, 18, 19, 17, 22, 21]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 23 with phase True at level 16

After decision at level 16
 pending : [2, 7, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14, 23]


New level: 17
 pending : [2, 7, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14, 23]


Before reduction : 
 pending  : [2, 7, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14, 23]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {17, 18, 19, 21, 22}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 14, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 14, 23]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 14, 23]


Solution : [0, 5, 1, 12, 3, 31, 14, 23] has cost 75.


Before backtrack at level 17
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 14, 23]

After backtrack at level 17
 pending : [2, 7, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14, 23]


Invert decision for 23 at level 16


New level: 17
 pending : [2, 7, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14]


Before reduction : 
 pending  : [2, 7, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 31, 14]


Solution : [0, 5, 1, 12, 3, 31, 14] has cost 41.


Decide in level 17 among pending : [2, 7, 18, 19, 17, 22, 21]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 22 with phase True at level 17

After decision at level 17
 pending : [2, 7, 18, 19, 17, 21]
 solution : [0, 5, 1, 12, 3, 31, 14, 22]


New level: 18
 pending : [2, 7, 18, 19, 17, 21]
 solution : [0, 5, 1, 12, 3, 31, 14, 22]


Before reduction : 
 pending  : [2, 7, 18, 19, 17, 21]
 solution : [0, 5, 1, 12, 3, 31, 14, 22]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {17, 18, 19, 21}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 14, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 14, 22]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 14, 22]


Solution : [0, 5, 1, 12, 3, 31, 14, 22] has cost 75.


Before backtrack at level 18
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 14, 22]

After backtrack at level 18
 pending : [2, 7, 18, 19, 17, 21]
 solution : [0, 5, 1, 12, 3, 31, 14, 22]


Invert decision for 22 at level 17


New level: 18
 pending : [2, 7, 18, 19, 17, 21]
 solution : [0, 5, 1, 12, 3, 31, 14]


Before reduction : 
 pending  : [2, 7, 18, 19, 17, 21]
 solution : [0, 5, 1, 12, 3, 31, 14]

Essensial at level 18 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {17, 18, 19}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 14, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 14, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 14, 21]


Solution : [0, 5, 1, 12, 3, 31, 14, 21] has cost 75.


Before backtrack at level 18
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 31, 14, 21]

After backtrack at level 18
 pending : [2, 7, 21, 18, 19, 17]
 solution : [0, 5, 1, 12, 3, 31, 14]


Before backtrack at level 17
 pending : [2, 7, 21, 18, 19, 17]
 solution : [0, 5, 1, 12, 3, 31, 14]

After backtrack at level 17
 pending : [2, 7, 21, 18, 19, 17, 22]
 solution : [0, 5, 1, 12, 3, 31, 14]


Before backtrack at level 16
 pending : [2, 7, 21, 18, 19, 17, 22]
 solution : [0, 5, 1, 12, 3, 31, 14]

After backtrack at level 16
 pending : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 14]


Before backtrack at level 15
 pending : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 31, 14]

After backtrack at level 15
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]


Before backtrack at level 14
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13]
 solution : [0, 5, 1, 12, 3, 31, 14]

After backtrack at level 14
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8]
 solution : [0, 5, 1, 12, 3, 31, 14]


Before backtrack at level 13
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8]
 solution : [0, 5, 1, 12, 3, 31, 14]

After backtrack at level 13
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 28, 30, 10, 6]
 solution : [0, 5, 1, 12, 3, 31, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 28, 30, 10, 6]
 solution : [0, 5, 1, 12, 3, 31]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 28, 30, 10, 6]
 solution : [0, 5, 1, 12, 3, 31]

Essensial at level 13 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {28, 30}

After reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 31, 10]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 31, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 31, 10]


Solution : [0, 5, 1, 12, 3, 31, 10] has cost 48.


Before backtrack at level 13
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 31, 10]

After backtrack at level 13
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 10, 28, 30]
 solution : [0, 5, 1, 12, 3, 31]


Before backtrack at level 12
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 10, 28, 30]
 solution : [0, 5, 1, 12, 3, 31]

After backtrack at level 12
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14]
 solution : [0, 5, 1, 12, 3, 31]


Before backtrack at level 11
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14]
 solution : [0, 5, 1, 12, 3, 31]

After backtrack at level 11
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 32, 16, 33, 11]
 solution : [0, 5, 1, 12, 3, 31]


Invert decision for 31 at level 10


New level: 11
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 32, 16, 33, 11]
 solution : [0, 5, 1, 12, 3]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 32, 16, 33, 11]
 solution : [0, 5, 1, 12, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, 128), (33, 8)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 32, 16, 33, 11]
 solution : [0, 5, 1, 12, 3]


Solution : [0, 5, 1, 12, 3] has cost 25.


Decide in level 11 among pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 10, 28, 30, 14, 32, 16, 33, 11]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, 128), (33, 8)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 28, 30, 14, 32, 16, 33, 11]
 solution : [0, 5, 1, 12, 3, 10]


New level: 12
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 28, 30, 14, 32, 16, 33, 11]
 solution : [0, 5, 1, 12, 3, 10]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 28, 30, 14, 32, 16, 33, 11]
 solution : [0, 5, 1, 12, 3, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, 128), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, 0), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, 8), (33, 8)]

Covered at level 12 : {11, 28, 30, 14}

After reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, 0), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, 8), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Solution : [0, 5, 1, 12, 3, 10] has cost 38.


Decide in level 12 among pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6, 32, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [2, 7, 21, 18, 19, 22, 23, 13, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 17]


New level: 13
 pending : [2, 7, 21, 18, 19, 22, 23, 13, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 17]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 22, 23, 13, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 4), (33, 4)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 22, 23, 13, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 17]


Solution : [0, 5, 1, 12, 3, 10, 17] has cost 48.


Before backtrack at level 13
 pending : [2, 7, 21, 18, 19, 22, 23, 13, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 17]

After backtrack at level 13
 pending : [2, 7, 21, 18, 19, 22, 23, 13, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [2, 7, 21, 18, 19, 22, 23, 13, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 22, 23, 13, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 4), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 22, 23, 13, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Solution : [0, 5, 1, 12, 3, 10] has cost 38.


Decide in level 13 among pending : [2, 7, 21, 18, 19, 22, 23, 13, 8, 6, 32, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [2, 7, 21, 18, 19, 22, 23, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 13]


New level: 14
 pending : [2, 7, 21, 18, 19, 22, 23, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 13]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 22, 23, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 14 : {32, 33, 2, 6, 7, 8, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 10, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 10, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 10, 13]


Solution : [0, 5, 1, 12, 3, 10, 13] has cost 44.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 3, 10, 13]

After backtrack at level 14
 pending : [2, 7, 21, 18, 19, 22, 23, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [2, 7, 21, 18, 19, 22, 23, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 22, 23, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 22, 23, 8, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Solution : [0, 5, 1, 12, 3, 10] has cost 38.


Decide in level 14 among pending : [2, 7, 21, 18, 19, 22, 23, 8, 6, 32, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

Decide 8 with phase True at level 14

After decision at level 14
 pending : [2, 7, 21, 18, 19, 22, 23, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 8]


New level: 15
 pending : [2, 7, 21, 18, 19, 22, 23, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 8]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 22, 23, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 15 : {32, 33, 2, 6, 7, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 10, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 10, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 10, 8]


Solution : [0, 5, 1, 12, 3, 10, 8] has cost 44.


Before backtrack at level 15
 pending : []
 solution : [0, 5, 1, 12, 3, 10, 8]

After backtrack at level 15
 pending : [2, 7, 21, 18, 19, 22, 23, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 8]


Invert decision for 8 at level 14


New level: 15
 pending : [2, 7, 21, 18, 19, 22, 23, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 22, 23, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 22, 23, 6, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Solution : [0, 5, 1, 12, 3, 10] has cost 38.


Decide in level 15 among pending : [2, 7, 21, 18, 19, 22, 23, 6, 32, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

Decide 6 with phase True at level 15

After decision at level 15
 pending : [2, 7, 21, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 6]


New level: 16
 pending : [2, 7, 21, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 6]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 16 : {32, 33, 2, 7, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 10, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 10, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 10, 6]


Solution : [0, 5, 1, 12, 3, 10, 6] has cost 51.


Before backtrack at level 16
 pending : []
 solution : [0, 5, 1, 12, 3, 10, 6]

After backtrack at level 16
 pending : [2, 7, 21, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 6]


Invert decision for 6 at level 15


New level: 16
 pending : [2, 7, 21, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Solution : [0, 5, 1, 12, 3, 10] has cost 38.


Decide in level 16 among pending : [2, 7, 21, 18, 19, 22, 23, 32, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

Decide 21 with phase True at level 16

After decision at level 16
 pending : [2, 7, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 21]


New level: 17
 pending : [2, 7, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 21]


Before reduction : 
 pending  : [2, 7, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 21]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 17 : {32, 33, 16, 18, 19, 22, 23}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 10, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 10, 21]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 10, 21]


Solution : [0, 5, 1, 12, 3, 10, 21] has cost 72.


Before backtrack at level 17
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 10, 21]

After backtrack at level 17
 pending : [2, 7, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 21]


Invert decision for 21 at level 16


New level: 17
 pending : [2, 7, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Before reduction : 
 pending  : [2, 7, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, -1), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7, 18, 19, 22, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Solution : [0, 5, 1, 12, 3, 10] has cost 38.


Decide in level 17 among pending : [2, 7, 18, 19, 22, 23, 32, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, -1), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

Decide 22 with phase True at level 17

After decision at level 17
 pending : [2, 7, 18, 19, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 22]


New level: 18
 pending : [2, 7, 18, 19, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 22]


Before reduction : 
 pending  : [2, 7, 18, 19, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 22]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, -1), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 18 : {32, 33, 16, 18, 19, 23}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 10, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 10, 22]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 10, 22]


Solution : [0, 5, 1, 12, 3, 10, 22] has cost 72.


Before backtrack at level 18
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 10, 22]

After backtrack at level 18
 pending : [2, 7, 18, 19, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10, 22]


Invert decision for 22 at level 17


New level: 18
 pending : [2, 7, 18, 19, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Before reduction : 
 pending  : [2, 7, 18, 19, 23, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]

Essensial at level 18 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 18 : {32, 33, 16, 18, 19}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 10, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 10, 23]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 10, 23]


Solution : [0, 5, 1, 12, 3, 10, 23] has cost 72.


Before backtrack at level 18
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 10, 23]

After backtrack at level 18
 pending : [2, 7, 23, 18, 19, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]


Before backtrack at level 17
 pending : [2, 7, 23, 18, 19, 32, 16, 33]
 solution : [0, 5, 1, 12, 3, 10]

After backtrack at level 17
 pending : [2, 7, 23, 18, 19, 32, 16, 33, 22]
 solution : [0, 5, 1, 12, 3, 10]


Before backtrack at level 16
 pending : [2, 7, 23, 18, 19, 32, 16, 33, 22]
 solution : [0, 5, 1, 12, 3, 10]

After backtrack at level 16
 pending : [2, 7, 23, 18, 19, 32, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 10]


Before backtrack at level 15
 pending : [2, 7, 23, 18, 19, 32, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 10]

After backtrack at level 15
 pending : [2, 7, 23, 18, 19, 32, 16, 33, 22, 21, 6]
 solution : [0, 5, 1, 12, 3, 10]


Before backtrack at level 14
 pending : [2, 7, 23, 18, 19, 32, 16, 33, 22, 21, 6]
 solution : [0, 5, 1, 12, 3, 10]

After backtrack at level 14
 pending : [2, 7, 23, 18, 19, 32, 16, 33, 22, 21, 6, 8]
 solution : [0, 5, 1, 12, 3, 10]


Before backtrack at level 13
 pending : [2, 7, 23, 18, 19, 32, 16, 33, 22, 21, 6, 8]
 solution : [0, 5, 1, 12, 3, 10]

After backtrack at level 13
 pending : [2, 7, 23, 18, 19, 32, 16, 33, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 10]


Before backtrack at level 12
 pending : [2, 7, 23, 18, 19, 32, 16, 33, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 10]

After backtrack at level 12
 pending : [2, 7, 23, 18, 19, 32, 16, 33, 22, 21, 6, 8, 13, 28, 30, 14, 11, 17]
 solution : [0, 5, 1, 12, 3, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [2, 7, 23, 18, 19, 32, 16, 33, 22, 21, 6, 8, 13, 28, 30, 14, 11, 17]
 solution : [0, 5, 1, 12, 3]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 32, 16, 33, 22, 21, 6, 8, 13, 28, 30, 14, 11, 17]
 solution : [0, 5, 1, 12, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, 128), (33, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 32, 16, 33, 22, 21, 6, 8, 13, 28, 30, 14, 11, 17]
 solution : [0, 5, 1, 12, 3]


Solution : [0, 5, 1, 12, 3] has cost 25.


Decide in level 12 among pending : [2, 7, 23, 18, 19, 32, 16, 33, 22, 21, 6, 8, 13, 28, 30, 14, 11, 17]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, 128), (33, 8)]

Decide 32 with phase True at level 12

After decision at level 12
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13, 28, 30, 14, 11, 17]
 solution : [0, 5, 1, 12, 3, 32]


New level: 13
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13, 28, 30, 14, 11, 17]
 solution : [0, 5, 1, 12, 3, 32]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13, 28, 30, 14, 11, 17]
 solution : [0, 5, 1, 12, 3, 32]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, 128), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 0), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

Covered at level 13 : {16, 33}

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 28, 30, 14, 11, 17]
 solution : [0, 5, 1, 12, 3, 32]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 28, 30, 14, 11, 17]
 solution : [0, 5, 1, 12, 3, 32]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 0), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 28, 30, 14, 11, 17]
 solution : [0, 5, 1, 12, 3, 32]


Solution : [0, 5, 1, 12, 3, 32] has cost 35.


Decide in level 13 among pending : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 28, 30, 14, 11, 17]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 28, 30, 11, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


New level: 14
 pending : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 28, 30, 11, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 28, 30, 11, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {11, 28, 30}

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, 0), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


Solution : [0, 5, 1, 12, 3, 32, 14] has cost 41.


Decide in level 14 among pending : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 17]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 14

After decision at level 14
 pending : [2, 7, 23, 18, 19, 22, 21, 8, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 6]


New level: 15
 pending : [2, 7, 23, 18, 19, 22, 21, 8, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 6]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 8, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {2, 7, 8, 13, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 14, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 14, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 14, 6]


Solution : [0, 5, 1, 12, 3, 32, 14, 6] has cost 54.


Before backtrack at level 15
 pending : []
 solution : [0, 5, 1, 12, 3, 32, 14, 6]

After backtrack at level 15
 pending : [2, 7, 23, 18, 19, 22, 21, 8, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 6]


Invert decision for 6 at level 14


New level: 15
 pending : [2, 7, 23, 18, 19, 22, 21, 8, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 8, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 8, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


Solution : [0, 5, 1, 12, 3, 32, 14] has cost 41.


Decide in level 15 among pending : [2, 7, 23, 18, 19, 22, 21, 8, 13, 17]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 15

After decision at level 15
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 8]


New level: 16
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 8]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {2, 7, 13, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 14, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 14, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 14, 8]


Solution : [0, 5, 1, 12, 3, 32, 14, 8] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 5, 1, 12, 3, 32, 14, 8]

After backtrack at level 16
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 8]


Invert decision for 8 at level 15


New level: 16
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


Solution : [0, 5, 1, 12, 3, 32, 14] has cost 41.


Decide in level 16 among pending : [2, 7, 23, 18, 19, 22, 21, 13, 17]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 13 with phase True at level 16

After decision at level 16
 pending : [2, 7, 23, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 13]


New level: 17
 pending : [2, 7, 23, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 13]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 13]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {2, 7, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 14, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 14, 13]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 14, 13]


Solution : [0, 5, 1, 12, 3, 32, 14, 13] has cost 47.


Before backtrack at level 17
 pending : []
 solution : [0, 5, 1, 12, 3, 32, 14, 13]

After backtrack at level 17
 pending : [2, 7, 23, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 13]


Invert decision for 13 at level 16


New level: 17
 pending : [2, 7, 23, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


Solution : [0, 5, 1, 12, 3, 32, 14] has cost 41.


Decide in level 17 among pending : [2, 7, 23, 18, 19, 22, 21, 17]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 23 with phase True at level 17

After decision at level 17
 pending : [2, 7, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 23]


New level: 18
 pending : [2, 7, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 23]


Before reduction : 
 pending  : [2, 7, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 23]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {17, 18, 19, 21, 22}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 14, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 14, 23]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 14, 23]


Solution : [0, 5, 1, 12, 3, 32, 14, 23] has cost 75.


Before backtrack at level 18
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 14, 23]

After backtrack at level 18
 pending : [2, 7, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 23]


Invert decision for 23 at level 17


New level: 18
 pending : [2, 7, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


Before reduction : 
 pending  : [2, 7, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7, 18, 19, 22, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


Solution : [0, 5, 1, 12, 3, 32, 14] has cost 41.


Decide in level 18 among pending : [2, 7, 18, 19, 22, 21, 17]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 22 with phase True at level 18

After decision at level 18
 pending : [2, 7, 18, 19, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 22]


New level: 19
 pending : [2, 7, 18, 19, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 22]


Before reduction : 
 pending  : [2, 7, 18, 19, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 22]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {17, 18, 19, 21}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 14, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 14, 22]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 14, 22]


Solution : [0, 5, 1, 12, 3, 32, 14, 22] has cost 75.


Before backtrack at level 19
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 14, 22]

After backtrack at level 19
 pending : [2, 7, 18, 19, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14, 22]


Invert decision for 22 at level 18


New level: 19
 pending : [2, 7, 18, 19, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


Before reduction : 
 pending  : [2, 7, 18, 19, 21, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]

Essensial at level 19 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {17, 18, 19}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 14, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 14, 21]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 14, 21]


Solution : [0, 5, 1, 12, 3, 32, 14, 21] has cost 75.


Before backtrack at level 19
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 14, 21]

After backtrack at level 19
 pending : [2, 7, 21, 18, 19, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]


Before backtrack at level 18
 pending : [2, 7, 21, 18, 19, 17]
 solution : [0, 5, 1, 12, 3, 32, 14]

After backtrack at level 18
 pending : [2, 7, 21, 18, 19, 17, 22]
 solution : [0, 5, 1, 12, 3, 32, 14]


Before backtrack at level 17
 pending : [2, 7, 21, 18, 19, 17, 22]
 solution : [0, 5, 1, 12, 3, 32, 14]

After backtrack at level 17
 pending : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 14]


Before backtrack at level 16
 pending : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 14]

After backtrack at level 16
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13]
 solution : [0, 5, 1, 12, 3, 32, 14]


Before backtrack at level 15
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13]
 solution : [0, 5, 1, 12, 3, 32, 14]

After backtrack at level 15
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8]
 solution : [0, 5, 1, 12, 3, 32, 14]


Before backtrack at level 14
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8]
 solution : [0, 5, 1, 12, 3, 32, 14]

After backtrack at level 14
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 28, 30, 11, 6]
 solution : [0, 5, 1, 12, 3, 32, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 28, 30, 11, 6]
 solution : [0, 5, 1, 12, 3, 32]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 28, 30, 11, 6]
 solution : [0, 5, 1, 12, 3, 32]

Essensial at level 14 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {28, 30}

After reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 32, 11]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 32, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 32, 11]


Solution : [0, 5, 1, 12, 3, 32, 11] has cost 41.


Decide in level 14 among pending : [2, 7, 21, 18, 19, 17, 22, 23, 13, 8, 6]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 32, 11, 13]


New level: 15
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 32, 11, 13]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 32, 11, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {2, 6, 7, 8, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 11, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 11, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 11, 13]


Solution : [0, 5, 1, 12, 3, 32, 11, 13] has cost 47.


Before backtrack at level 15
 pending : []
 solution : [0, 5, 1, 12, 3, 32, 11, 13]

After backtrack at level 15
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 32, 11, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 32, 11]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 32, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 32, 11]


Solution : [0, 5, 1, 12, 3, 32, 11] has cost 41.


Decide in level 15 among pending : [2, 7, 21, 18, 19, 17, 22, 23, 8, 6]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 15

After decision at level 15
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 32, 11, 8]


New level: 16
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 32, 11, 8]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 32, 11, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {2, 6, 7, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 11, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 11, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 11, 8]


Solution : [0, 5, 1, 12, 3, 32, 11, 8] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 5, 1, 12, 3, 32, 11, 8]

After backtrack at level 16
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 32, 11, 8]


Invert decision for 8 at level 15


New level: 16
 pending : [2, 7, 21, 18, 19, 17, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 32, 11]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 32, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 32, 11]


Solution : [0, 5, 1, 12, 3, 32, 11] has cost 41.


Decide in level 16 among pending : [2, 7, 21, 18, 19, 17, 22, 23, 6]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 16

After decision at level 16
 pending : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11, 6]


New level: 17
 pending : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11, 6]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {2, 7, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 11, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 32, 11, 6]


Solution : [0, 5, 1, 12, 3, 32, 11, 6] has cost 54.


Before backtrack at level 17
 pending : []
 solution : [0, 5, 1, 12, 3, 32, 11, 6]

After backtrack at level 17
 pending : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11, 6]


Invert decision for 6 at level 16


New level: 17
 pending : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11]


Solution : [0, 5, 1, 12, 3, 32, 11] has cost 41.


Decide in level 17 among pending : [2, 7, 21, 18, 19, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 21 with phase True at level 17

After decision at level 17
 pending : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11, 21]


New level: 18
 pending : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11, 21]


Before reduction : 
 pending  : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {17, 18, 19, 22, 23}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 11, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 11, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 11, 21]


Solution : [0, 5, 1, 12, 3, 32, 11, 21] has cost 75.


Before backtrack at level 18
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 11, 21]

After backtrack at level 18
 pending : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11, 21]


Invert decision for 21 at level 17


New level: 18
 pending : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11]


Before reduction : 
 pending  : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, -1), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7, 18, 19, 17, 22, 23]
 solution : [0, 5, 1, 12, 3, 32, 11]


Solution : [0, 5, 1, 12, 3, 32, 11] has cost 41.


Decide in level 18 among pending : [2, 7, 18, 19, 17, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, -1), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 22 with phase True at level 18

After decision at level 18
 pending : [2, 7, 18, 19, 17, 23]
 solution : [0, 5, 1, 12, 3, 32, 11, 22]


New level: 19
 pending : [2, 7, 18, 19, 17, 23]
 solution : [0, 5, 1, 12, 3, 32, 11, 22]


Before reduction : 
 pending  : [2, 7, 18, 19, 17, 23]
 solution : [0, 5, 1, 12, 3, 32, 11, 22]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, -1), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {17, 18, 19, 23}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 11, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 11, 22]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 11, 22]


Solution : [0, 5, 1, 12, 3, 32, 11, 22] has cost 75.


Before backtrack at level 19
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 11, 22]

After backtrack at level 19
 pending : [2, 7, 18, 19, 17, 23]
 solution : [0, 5, 1, 12, 3, 32, 11, 22]


Invert decision for 22 at level 18


New level: 19
 pending : [2, 7, 18, 19, 17, 23]
 solution : [0, 5, 1, 12, 3, 32, 11]


Before reduction : 
 pending  : [2, 7, 18, 19, 17, 23]
 solution : [0, 5, 1, 12, 3, 32, 11]

Essensial at level 19 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {17, 18, 19}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 11, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 11, 23]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 11, 23]


Solution : [0, 5, 1, 12, 3, 32, 11, 23] has cost 75.


Before backtrack at level 19
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 32, 11, 23]

After backtrack at level 19
 pending : [2, 7, 23, 18, 19, 17]
 solution : [0, 5, 1, 12, 3, 32, 11]


Before backtrack at level 18
 pending : [2, 7, 23, 18, 19, 17]
 solution : [0, 5, 1, 12, 3, 32, 11]

After backtrack at level 18
 pending : [2, 7, 23, 18, 19, 17, 22]
 solution : [0, 5, 1, 12, 3, 32, 11]


Before backtrack at level 17
 pending : [2, 7, 23, 18, 19, 17, 22]
 solution : [0, 5, 1, 12, 3, 32, 11]

After backtrack at level 17
 pending : [2, 7, 23, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 32, 11]


Before backtrack at level 16
 pending : [2, 7, 23, 18, 19, 17, 22, 21]
 solution : [0, 5, 1, 12, 3, 32, 11]

After backtrack at level 16
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6]
 solution : [0, 5, 1, 12, 3, 32, 11]


Before backtrack at level 15
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6]
 solution : [0, 5, 1, 12, 3, 32, 11]

After backtrack at level 15
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8]
 solution : [0, 5, 1, 12, 3, 32, 11]


Before backtrack at level 14
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8]
 solution : [0, 5, 1, 12, 3, 32, 11]

After backtrack at level 14
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 11, 28, 30, 13]
 solution : [0, 5, 1, 12, 3, 32]


Before backtrack at level 13
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 11, 28, 30, 13]
 solution : [0, 5, 1, 12, 3, 32]

After backtrack at level 13
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 11, 28, 30, 13, 16, 33, 14]
 solution : [0, 5, 1, 12, 3, 32]


Invert decision for 32 at level 12


New level: 13
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 11, 28, 30, 13, 16, 33, 14]
 solution : [0, 5, 1, 12, 3]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 11, 28, 30, 13, 16, 33, 14]
 solution : [0, 5, 1, 12, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 11, 28, 30, 13, 16, 33, 14]
 solution : [0, 5, 1, 12, 3]


Solution : [0, 5, 1, 12, 3] has cost 25.


Decide in level 13 among pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 11, 28, 30, 13, 16, 33, 14]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 8)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 28, 30, 13, 16, 33, 14]
 solution : [0, 5, 1, 12, 3, 11]


New level: 14
 pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 28, 30, 13, 16, 33, 14]
 solution : [0, 5, 1, 12, 3, 11]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 28, 30, 13, 16, 33, 14]
 solution : [0, 5, 1, 12, 3, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

Covered at level 14 : {28, 30, 14}

After reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11]


Solution : [0, 5, 1, 12, 3, 11] has cost 31.


Decide in level 14 among pending : [2, 7, 23, 18, 19, 17, 22, 21, 6, 8, 13, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 17 with phase True at level 14

After decision at level 14
 pending : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]


New level: 15
 pending : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]


Solution : [0, 5, 1, 12, 3, 11, 17] has cost 41.


Decide in level 15 among pending : [2, 7, 23, 18, 19, 22, 21, 6, 8, 13, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Decide 6 with phase True at level 15

After decision at level 15
 pending : [2, 7, 23, 18, 19, 22, 21, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 6]


New level: 16
 pending : [2, 7, 23, 18, 19, 22, 21, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 6]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 16 : {33, 2, 7, 8, 13, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 17, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 17, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 17, 6]


Solution : [0, 5, 1, 12, 3, 11, 17, 6] has cost 54.


Before backtrack at level 16
 pending : []
 solution : [0, 5, 1, 12, 3, 11, 17, 6]

After backtrack at level 16
 pending : [2, 7, 23, 18, 19, 22, 21, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 6]


Invert decision for 6 at level 15


New level: 16
 pending : [2, 7, 23, 18, 19, 22, 21, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 8, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]


Solution : [0, 5, 1, 12, 3, 11, 17] has cost 41.


Decide in level 16 among pending : [2, 7, 23, 18, 19, 22, 21, 8, 13, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Decide 8 with phase True at level 16

After decision at level 16
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 8]


New level: 17
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 8]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 17 : {33, 2, 7, 13, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 17, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 17, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 17, 8]


Solution : [0, 5, 1, 12, 3, 11, 17, 8] has cost 47.


Before backtrack at level 17
 pending : []
 solution : [0, 5, 1, 12, 3, 11, 17, 8]

After backtrack at level 17
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 8]


Invert decision for 8 at level 16


New level: 17
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]


Solution : [0, 5, 1, 12, 3, 11, 17] has cost 41.


Decide in level 17 among pending : [2, 7, 23, 18, 19, 22, 21, 13, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Decide 13 with phase True at level 17

After decision at level 17
 pending : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 13]


New level: 18
 pending : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 13]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 13]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 18 : {33, 2, 7, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 17, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 17, 13]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 17, 13]


Solution : [0, 5, 1, 12, 3, 11, 17, 13] has cost 47.


Before backtrack at level 18
 pending : []
 solution : [0, 5, 1, 12, 3, 11, 17, 13]

After backtrack at level 18
 pending : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 13]


Invert decision for 13 at level 17


New level: 18
 pending : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]


Solution : [0, 5, 1, 12, 3, 11, 17] has cost 41.


Decide in level 18 among pending : [2, 7, 23, 18, 19, 22, 21, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Decide 23 with phase True at level 18

After decision at level 18
 pending : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 23]


New level: 19
 pending : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 23]


Before reduction : 
 pending  : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 23]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 19 : {33, 16, 18, 19, 21, 22}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 17, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 17, 23]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 17, 23]


Solution : [0, 5, 1, 12, 3, 11, 17, 23] has cost 75.


Before backtrack at level 19
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 17, 23]

After backtrack at level 19
 pending : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 23]


Invert decision for 23 at level 18


New level: 19
 pending : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]


Before reduction : 
 pending  : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 19 : set()

After reduction : 
 pending  : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]


Solution : [0, 5, 1, 12, 3, 11, 17] has cost 41.


Decide in level 19 among pending : [2, 7, 18, 19, 22, 21, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Decide 22 with phase True at level 19

After decision at level 19
 pending : [2, 7, 18, 19, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 22]


New level: 20
 pending : [2, 7, 18, 19, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 22]


Before reduction : 
 pending  : [2, 7, 18, 19, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 22]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 20 : {33, 16, 18, 19, 21}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 17, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 17, 22]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 17, 22]


Solution : [0, 5, 1, 12, 3, 11, 17, 22] has cost 75.


Before backtrack at level 20
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 17, 22]

After backtrack at level 20
 pending : [2, 7, 18, 19, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17, 22]


Invert decision for 22 at level 19


New level: 20
 pending : [2, 7, 18, 19, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]


Before reduction : 
 pending  : [2, 7, 18, 19, 21, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]

Essensial at level 20 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 20 : {16, 33, 18, 19}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 17, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 17, 21]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 17, 21]


Solution : [0, 5, 1, 12, 3, 11, 17, 21] has cost 75.


Before backtrack at level 20
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 17, 21]

After backtrack at level 20
 pending : [2, 7, 21, 18, 19, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]


Before backtrack at level 19
 pending : [2, 7, 21, 18, 19, 16, 33]
 solution : [0, 5, 1, 12, 3, 11, 17]

After backtrack at level 19
 pending : [2, 7, 21, 18, 19, 16, 33, 22]
 solution : [0, 5, 1, 12, 3, 11, 17]


Before backtrack at level 18
 pending : [2, 7, 21, 18, 19, 16, 33, 22]
 solution : [0, 5, 1, 12, 3, 11, 17]

After backtrack at level 18
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11, 17]


Before backtrack at level 17
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11, 17]

After backtrack at level 17
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13]
 solution : [0, 5, 1, 12, 3, 11, 17]


Before backtrack at level 16
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13]
 solution : [0, 5, 1, 12, 3, 11, 17]

After backtrack at level 16
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8]
 solution : [0, 5, 1, 12, 3, 11, 17]


Before backtrack at level 15
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8]
 solution : [0, 5, 1, 12, 3, 11, 17]

After backtrack at level 15
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 11, 17]


Invert decision for 17 at level 14


New level: 15
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 11]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 11]


Solution : [0, 5, 1, 12, 3, 11] has cost 31.


Decide in level 15 among pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 13 with phase True at level 15

After decision at level 15
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 11, 13]


New level: 16
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 11, 13]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 11, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 16 : {33, 2, 6, 7, 8, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 13]


Solution : [0, 5, 1, 12, 3, 11, 13] has cost 37.


Before backtrack at level 16
 pending : []
 solution : [0, 5, 1, 12, 3, 11, 13]

After backtrack at level 16
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 11, 13]


Invert decision for 13 at level 15


New level: 16
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 11]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 8, 6]
 solution : [0, 5, 1, 12, 3, 11]


Solution : [0, 5, 1, 12, 3, 11] has cost 31.


Decide in level 16 among pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 8, 6]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 8 with phase True at level 16

After decision at level 16
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 11, 8]


New level: 17
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 11, 8]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 11, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 17 : {33, 2, 6, 7, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 8]


Solution : [0, 5, 1, 12, 3, 11, 8] has cost 37.


Before backtrack at level 17
 pending : []
 solution : [0, 5, 1, 12, 3, 11, 8]

After backtrack at level 17
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 11, 8]


Invert decision for 8 at level 16


New level: 17
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 11]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6]
 solution : [0, 5, 1, 12, 3, 11]


Solution : [0, 5, 1, 12, 3, 11] has cost 31.


Decide in level 17 among pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 6 with phase True at level 17

After decision at level 17
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11, 6]


New level: 18
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11, 6]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 18 : {33, 2, 7, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 11, 6]


Solution : [0, 5, 1, 12, 3, 11, 6] has cost 44.


Before backtrack at level 18
 pending : []
 solution : [0, 5, 1, 12, 3, 11, 6]

After backtrack at level 18
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11, 6]


Invert decision for 6 at level 17


New level: 18
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11]


Solution : [0, 5, 1, 12, 3, 11] has cost 31.


Decide in level 18 among pending : [2, 7, 21, 18, 19, 16, 33, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 21 with phase True at level 18

After decision at level 18
 pending : [2, 7, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11, 21]


New level: 19
 pending : [2, 7, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11, 21]


Before reduction : 
 pending  : [2, 7, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11, 21]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 19 : {33, 16, 18, 19, 22, 23}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 21]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 21]


Solution : [0, 5, 1, 12, 3, 11, 21] has cost 65.


Before backtrack at level 19
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 21]

After backtrack at level 19
 pending : [2, 7, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11, 21]


Invert decision for 21 at level 18


New level: 19
 pending : [2, 7, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11]


Before reduction : 
 pending  : [2, 7, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, -1), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [2, 7, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 11]


Solution : [0, 5, 1, 12, 3, 11] has cost 31.


Decide in level 19 among pending : [2, 7, 18, 19, 16, 33, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, -1), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 22 with phase True at level 19

After decision at level 19
 pending : [2, 7, 18, 19, 16, 33, 23]
 solution : [0, 5, 1, 12, 3, 11, 22]


New level: 20
 pending : [2, 7, 18, 19, 16, 33, 23]
 solution : [0, 5, 1, 12, 3, 11, 22]


Before reduction : 
 pending  : [2, 7, 18, 19, 16, 33, 23]
 solution : [0, 5, 1, 12, 3, 11, 22]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, -1), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 20 : {33, 16, 18, 19, 23}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 22]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 22]


Solution : [0, 5, 1, 12, 3, 11, 22] has cost 65.


Before backtrack at level 20
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 22]

After backtrack at level 20
 pending : [2, 7, 18, 19, 16, 33, 23]
 solution : [0, 5, 1, 12, 3, 11, 22]


Invert decision for 22 at level 19


New level: 20
 pending : [2, 7, 18, 19, 16, 33, 23]
 solution : [0, 5, 1, 12, 3, 11]


Before reduction : 
 pending  : [2, 7, 18, 19, 16, 33, 23]
 solution : [0, 5, 1, 12, 3, 11]

Essensial at level 20 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 20 : {16, 33, 18, 19}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 23]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 23]


Solution : [0, 5, 1, 12, 3, 11, 23] has cost 65.


Before backtrack at level 20
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 11, 23]

After backtrack at level 20
 pending : [2, 7, 23, 18, 19, 16, 33]
 solution : [0, 5, 1, 12, 3, 11]


Before backtrack at level 19
 pending : [2, 7, 23, 18, 19, 16, 33]
 solution : [0, 5, 1, 12, 3, 11]

After backtrack at level 19
 pending : [2, 7, 23, 18, 19, 16, 33, 22]
 solution : [0, 5, 1, 12, 3, 11]


Before backtrack at level 18
 pending : [2, 7, 23, 18, 19, 16, 33, 22]
 solution : [0, 5, 1, 12, 3, 11]

After backtrack at level 18
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 11]


Before backtrack at level 17
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 11]

After backtrack at level 17
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6]
 solution : [0, 5, 1, 12, 3, 11]


Before backtrack at level 16
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6]
 solution : [0, 5, 1, 12, 3, 11]

After backtrack at level 16
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8]
 solution : [0, 5, 1, 12, 3, 11]


Before backtrack at level 15
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8]
 solution : [0, 5, 1, 12, 3, 11]

After backtrack at level 15
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 11]


Before backtrack at level 14
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 11]

After backtrack at level 14
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13, 28, 30, 14, 17]
 solution : [0, 5, 1, 12, 3, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13, 28, 30, 14, 17]
 solution : [0, 5, 1, 12, 3]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13, 28, 30, 14, 17]
 solution : [0, 5, 1, 12, 3]

Essensial at level 14 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

Covered at level 14 : {28, 30}

After reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13, 17]
 solution : [0, 5, 1, 12, 3, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13, 17]
 solution : [0, 5, 1, 12, 3, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13, 17]
 solution : [0, 5, 1, 12, 3, 14]


Solution : [0, 5, 1, 12, 3, 14] has cost 31.


Decide in level 14 among pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13, 17]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 17 with phase True at level 14

After decision at level 14
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 14, 17]


New level: 15
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 14, 17]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 14, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 14, 17]


Solution : [0, 5, 1, 12, 3, 14, 17] has cost 41.


Before backtrack at level 15
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 14, 17]

After backtrack at level 15
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 14, 17]


Invert decision for 17 at level 14


New level: 15
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13]
 solution : [0, 5, 1, 12, 3, 14]


Solution : [0, 5, 1, 12, 3, 14] has cost 31.


Decide in level 15 among pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 6, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 6 with phase True at level 15

After decision at level 15
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 14, 6]


New level: 16
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 14, 6]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 14, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 16 : {33, 2, 7, 8, 13, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 14, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 14, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 14, 6]


Solution : [0, 5, 1, 12, 3, 14, 6] has cost 44.


Before backtrack at level 16
 pending : []
 solution : [0, 5, 1, 12, 3, 14, 6]

After backtrack at level 16
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 14, 6]


Invert decision for 6 at level 15


New level: 16
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 8, 13]
 solution : [0, 5, 1, 12, 3, 14]


Solution : [0, 5, 1, 12, 3, 14] has cost 31.


Decide in level 16 among pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 8 with phase True at level 16

After decision at level 16
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 14, 8]


New level: 17
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 14, 8]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 14, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 17 : {33, 2, 7, 13, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 14, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 14, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 14, 8]


Solution : [0, 5, 1, 12, 3, 14, 8] has cost 37.


Before backtrack at level 17
 pending : []
 solution : [0, 5, 1, 12, 3, 14, 8]

After backtrack at level 17
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 14, 8]


Invert decision for 8 at level 16


New level: 17
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 13]
 solution : [0, 5, 1, 12, 3, 14]


Solution : [0, 5, 1, 12, 3, 14] has cost 31.


Decide in level 17 among pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 13 with phase True at level 17

After decision at level 17
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14, 13]


New level: 18
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14, 13]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14, 13]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 18 : {33, 2, 7, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 14, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 14, 13]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 3, 14, 13]


Solution : [0, 5, 1, 12, 3, 14, 13] has cost 37.


Before backtrack at level 18
 pending : []
 solution : [0, 5, 1, 12, 3, 14, 13]

After backtrack at level 18
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14, 13]


Invert decision for 13 at level 17


New level: 18
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14]


Solution : [0, 5, 1, 12, 3, 14] has cost 31.


Decide in level 18 among pending : [2, 7, 23, 18, 19, 16, 33, 22, 21]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 23 with phase True at level 18

After decision at level 18
 pending : [2, 7, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14, 23]


New level: 19
 pending : [2, 7, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14, 23]


Before reduction : 
 pending  : [2, 7, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14, 23]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 19 : {33, 16, 18, 19, 21, 22}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 14, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 14, 23]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 14, 23]


Solution : [0, 5, 1, 12, 3, 14, 23] has cost 65.


Before backtrack at level 19
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 14, 23]

After backtrack at level 19
 pending : [2, 7, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14, 23]


Invert decision for 23 at level 18


New level: 19
 pending : [2, 7, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14]


Before reduction : 
 pending  : [2, 7, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [2, 7, 18, 19, 16, 33, 22, 21]
 solution : [0, 5, 1, 12, 3, 14]


Solution : [0, 5, 1, 12, 3, 14] has cost 31.


Decide in level 19 among pending : [2, 7, 18, 19, 16, 33, 22, 21]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 22 with phase True at level 19

After decision at level 19
 pending : [2, 7, 18, 19, 16, 33, 21]
 solution : [0, 5, 1, 12, 3, 14, 22]


New level: 20
 pending : [2, 7, 18, 19, 16, 33, 21]
 solution : [0, 5, 1, 12, 3, 14, 22]


Before reduction : 
 pending  : [2, 7, 18, 19, 16, 33, 21]
 solution : [0, 5, 1, 12, 3, 14, 22]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 20 : {33, 16, 18, 19, 21}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 14, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 14, 22]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 14, 22]


Solution : [0, 5, 1, 12, 3, 14, 22] has cost 65.


Before backtrack at level 20
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 14, 22]

After backtrack at level 20
 pending : [2, 7, 18, 19, 16, 33, 21]
 solution : [0, 5, 1, 12, 3, 14, 22]


Invert decision for 22 at level 19


New level: 20
 pending : [2, 7, 18, 19, 16, 33, 21]
 solution : [0, 5, 1, 12, 3, 14]


Before reduction : 
 pending  : [2, 7, 18, 19, 16, 33, 21]
 solution : [0, 5, 1, 12, 3, 14]

Essensial at level 20 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 20 : {16, 33, 18, 19}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 14, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 14, 21]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 3, 14, 21]


Solution : [0, 5, 1, 12, 3, 14, 21] has cost 65.


Before backtrack at level 20
 pending : [2, 7]
 solution : [0, 5, 1, 12, 3, 14, 21]

After backtrack at level 20
 pending : [2, 7, 21, 18, 19, 16, 33]
 solution : [0, 5, 1, 12, 3, 14]


Before backtrack at level 19
 pending : [2, 7, 21, 18, 19, 16, 33]
 solution : [0, 5, 1, 12, 3, 14]

After backtrack at level 19
 pending : [2, 7, 21, 18, 19, 16, 33, 22]
 solution : [0, 5, 1, 12, 3, 14]


Before backtrack at level 18
 pending : [2, 7, 21, 18, 19, 16, 33, 22]
 solution : [0, 5, 1, 12, 3, 14]

After backtrack at level 18
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 14]


Before backtrack at level 17
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 3, 14]

After backtrack at level 17
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13]
 solution : [0, 5, 1, 12, 3, 14]


Before backtrack at level 16
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13]
 solution : [0, 5, 1, 12, 3, 14]

After backtrack at level 16
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8]
 solution : [0, 5, 1, 12, 3, 14]


Before backtrack at level 15
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8]
 solution : [0, 5, 1, 12, 3, 14]

After backtrack at level 15
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 14]


Before backtrack at level 14
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6]
 solution : [0, 5, 1, 12, 3, 14]

After backtrack at level 14
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17]
 solution : [0, 5, 1, 12, 3]


Before backtrack at level 13
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17]
 solution : [0, 5, 1, 12, 3]

After backtrack at level 13
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11]
 solution : [0, 5, 1, 12, 3]


Before backtrack at level 12
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11]
 solution : [0, 5, 1, 12, 3]

After backtrack at level 12
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32]
 solution : [0, 5, 1, 12, 3]


Before backtrack at level 11
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32]
 solution : [0, 5, 1, 12, 3]

After backtrack at level 11
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10]
 solution : [0, 5, 1, 12, 3]


Before backtrack at level 10
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10]
 solution : [0, 5, 1, 12, 3]

After backtrack at level 10
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31]
 solution : [0, 5, 1, 12, 3]


Before backtrack at level 9
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31]
 solution : [0, 5, 1, 12, 3]

After backtrack at level 9
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26]
 solution : [0, 5, 1, 12, 3]


Before backtrack at level 8
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26]
 solution : [0, 5, 1, 12, 3]

After backtrack at level 8
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27]
 solution : [0, 5, 1, 12, 3]


Before backtrack at level 7
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27]
 solution : [0, 5, 1, 12, 3]

After backtrack at level 7
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27, 24]
 solution : [0, 5, 1, 12, 3]


Before backtrack at level 6
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27, 24]
 solution : [0, 5, 1, 12, 3]

After backtrack at level 6
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27, 24, 25]
 solution : [0, 5, 1, 12, 3]


Before backtrack at level 5
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27, 24, 25]
 solution : [0, 5, 1, 12, 3]

After backtrack at level 5
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27, 24, 25, 15, 4, 20]
 solution : [0, 5, 1, 12, 3]


Invert decision for 3 at level 4


New level: 5
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27, 24, 25, 15, 4, 20]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27, 24, 25, 15, 4, 20]
 solution : [0, 5, 1, 12]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27, 24, 25, 15, 4, 20]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 5 among pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27, 24, 25, 15, 4, 20]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Decide 20 with phase True at level 5

After decision at level 5
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27, 24, 25, 15, 4]
 solution : [0, 5, 1, 12, 20]


New level: 6
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27, 24, 25, 15, 4]
 solution : [0, 5, 1, 12, 20]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 17, 11, 32, 10, 31, 26, 27, 24, 25, 15, 4]
 solution : [0, 5, 1, 12, 20]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, 208), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 0), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, 0), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 4)]

Covered at level 6 : {17, 25}

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4]
 solution : [0, 5, 1, 12, 20]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4]
 solution : [0, 5, 1, 12, 20]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 0), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, 0), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, -1), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, -1), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 4)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4]
 solution : [0, 5, 1, 12, 20]


Solution : [0, 5, 1, 12, 20] has cost 54.


Before backtrack at level 6
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4]
 solution : [0, 5, 1, 12, 20]

After backtrack at level 6
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4, 17, 25]
 solution : [0, 5, 1, 12, 20]


Invert decision for 20 at level 5


New level: 6
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4, 17, 25]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4, 17, 25]
 solution : [0, 5, 1, 12]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, -1), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, -1), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4, 17, 25]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 6 among pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4, 17, 25]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4, 17]
 solution : [0, 5, 1, 12, 25]


New level: 7
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4, 17]
 solution : [0, 5, 1, 12, 25]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4, 17]
 solution : [0, 5, 1, 12, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, 200), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 0), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, -1), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 32), (32, 32), (33, 4)]

Covered at level 7 : {17}

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4]
 solution : [0, 5, 1, 12, 25]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4]
 solution : [0, 5, 1, 12, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, 0), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, -1), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 32), (32, 32), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, -1), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, -1), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 32), (32, 32), (33, 4)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4]
 solution : [0, 5, 1, 12, 25]


Solution : [0, 5, 1, 12, 25] has cost 59.


Before backtrack at level 7
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4]
 solution : [0, 5, 1, 12, 25]

After backtrack at level 7
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4, 17]
 solution : [0, 5, 1, 12, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4, 17]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4, 17]
 solution : [0, 5, 1, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 4), (17, -1), (18, 16), (19, 16), (20, -1), (21, 37), (22, 37), (23, 40), (24, 12), (25, -1), (26, 80), (27, 10), (28, 32), (29, -1), (30, 32), (31, 32), (32, 32), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, -1), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4, 17]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 7 among pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 27, 24, 15, 4, 17]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, -1), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Decide 27 with phase True at level 7

After decision at level 7
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 24, 15, 4, 17]
 solution : [0, 5, 1, 12, 27]


New level: 8
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 24, 15, 4, 17]
 solution : [0, 5, 1, 12, 27]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 24, 15, 4, 17]
 solution : [0, 5, 1, 12, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, -1), (26, 136), (27, 192), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, 0), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Covered at level 8 : {24}

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 15, 4, 17]
 solution : [0, 5, 1, 12, 27]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 15, 4, 17]
 solution : [0, 5, 1, 12, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, 0), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 15, 4, 17]
 solution : [0, 5, 1, 12, 27]


Solution : [0, 5, 1, 12, 27] has cost 36.


Decide in level 8 among pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 26, 15, 4, 17]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 26]


New level: 9
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 26]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 2), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, 8)]

Covered at level 9 : {18, 19, 21, 22, 23}

After reduction : 
 pending  : [2, 7, 16, 33, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 26]


Before reduction : 
 pending  : [2, 7, 16, 33, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 2), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 2), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, 8)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 7, 16, 33, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 26]


Solution : [0, 5, 1, 12, 27, 26] has cost 70.


Before backtrack at level 9
 pending : [2, 7, 16, 33, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 26]

After backtrack at level 9
 pending : [2, 7, 16, 33, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 27, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [2, 7, 16, 33, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 27]


Before reduction : 
 pending  : [2, 7, 16, 33, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 2), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 7, 16, 33, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 27]


Solution : [0, 5, 1, 12, 27] has cost 36.


Decide in level 9 among pending : [2, 7, 16, 33, 13, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17, 21, 18, 19, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Decide 13 with phase True at level 9

After decision at level 9
 pending : [2, 7, 16, 33, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 27, 13]


New level: 10
 pending : [2, 7, 16, 33, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 27, 13]


Before reduction : 
 pending  : [2, 7, 16, 33, 8, 6, 14, 28, 30, 11, 32, 10, 31, 15, 4, 17, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 27, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 0)]

Covered at level 10 : {33, 2, 4, 6, 7, 8, 15, 16, 17}

After reduction : 
 pending  : [14, 28, 30, 11, 32, 10, 31, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 27, 13]


Before reduction : 
 pending  : [14, 28, 30, 11, 32, 10, 31, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 27, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [14, 28, 30, 11, 32, 10, 31, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 27, 13]


Solution : [0, 5, 1, 12, 27, 13] has cost 42.


Before backtrack at level 10
 pending : [14, 28, 30, 11, 32, 10, 31, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 27, 13]

After backtrack at level 10
 pending : [14, 28, 30, 11, 32, 10, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 13]


Invert decision for 13 at level 9


New level: 10
 pending : [14, 28, 30, 11, 32, 10, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27]


Before reduction : 
 pending  : [14, 28, 30, 11, 32, 10, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [14, 28, 30, 11, 32, 10, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27]


Solution : [0, 5, 1, 12, 27] has cost 36.


Decide in level 10 among pending : [14, 28, 30, 11, 32, 10, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [28, 30, 11, 32, 10, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 14]


New level: 11
 pending : [28, 30, 11, 32, 10, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 14]


Before reduction : 
 pending  : [28, 30, 11, 32, 10, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 32)]

Covered at level 11 : {10, 11, 28, 30}

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 14]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 14]


Solution : [0, 5, 1, 12, 27, 14] has cost 42.


Before backtrack at level 11
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 14]

After backtrack at level 11
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17, 28, 30, 11, 10]
 solution : [0, 5, 1, 12, 27, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17, 28, 30, 11, 10]
 solution : [0, 5, 1, 12, 27]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17, 28, 30, 11, 10]
 solution : [0, 5, 1, 12, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17, 28, 30, 11, 10]
 solution : [0, 5, 1, 12, 27]


Solution : [0, 5, 1, 12, 27] has cost 36.


Decide in level 11 among pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 6, 15, 4, 17, 28, 30, 11, 10]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Decide 8 with phase True at level 11

After decision at level 11
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 28, 30, 11, 10]
 solution : [0, 5, 1, 12, 27, 8]


New level: 12
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 28, 30, 11, 10]
 solution : [0, 5, 1, 12, 27, 8]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 28, 30, 11, 10]
 solution : [0, 5, 1, 12, 27, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 0)]

Covered at level 12 : {33, 2, 4, 6, 7, 15, 16, 17}

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 10]
 solution : [0, 5, 1, 12, 27, 8]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 10]
 solution : [0, 5, 1, 12, 27, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 10]
 solution : [0, 5, 1, 12, 27, 8]


Solution : [0, 5, 1, 12, 27, 8] has cost 42.


Before backtrack at level 12
 pending : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 10]
 solution : [0, 5, 1, 12, 27, 8]

After backtrack at level 12
 pending : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 10, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 8]


Invert decision for 8 at level 11


New level: 12
 pending : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 10, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 10, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 10, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27]


Solution : [0, 5, 1, 12, 27] has cost 36.


Decide in level 12 among pending : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 10, 2, 7, 16, 33, 6, 15, 4, 17]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [32, 31, 21, 18, 19, 22, 23, 28, 30, 10, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 11]


New level: 13
 pending : [32, 31, 21, 18, 19, 22, 23, 28, 30, 10, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 11]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 28, 30, 10, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 32)]

Covered at level 13 : {10, 28, 30}

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 11]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 11]


Solution : [0, 5, 1, 12, 27, 11] has cost 42.


Before backtrack at level 13
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 11]

After backtrack at level 13
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 28, 30, 10]
 solution : [0, 5, 1, 12, 27, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 28, 30, 10]
 solution : [0, 5, 1, 12, 27]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 28, 30, 10]
 solution : [0, 5, 1, 12, 27]

Essensial at level 13 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 32)]

Covered at level 13 : {28, 30}

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 10]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 10]


Solution : [0, 5, 1, 12, 27, 10] has cost 49.


Before backtrack at level 13
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17]
 solution : [0, 5, 1, 12, 27, 10]

After backtrack at level 13
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30]
 solution : [0, 5, 1, 12, 27]


Before backtrack at level 12
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30]
 solution : [0, 5, 1, 12, 27]

After backtrack at level 12
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11]
 solution : [0, 5, 1, 12, 27]


Before backtrack at level 11
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11]
 solution : [0, 5, 1, 12, 27]

After backtrack at level 11
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8]
 solution : [0, 5, 1, 12, 27]


Before backtrack at level 10
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8]
 solution : [0, 5, 1, 12, 27]

After backtrack at level 10
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14]
 solution : [0, 5, 1, 12, 27]


Before backtrack at level 9
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14]
 solution : [0, 5, 1, 12, 27]

After backtrack at level 9
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13]
 solution : [0, 5, 1, 12, 27]


Before backtrack at level 8
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13]
 solution : [0, 5, 1, 12, 27]

After backtrack at level 8
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 24, 26]
 solution : [0, 5, 1, 12, 27]


Invert decision for 27 at level 7


New level: 8
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 24, 26]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 24, 26]
 solution : [0, 5, 1, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, -1), (26, 136), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 24, 26]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 8 among pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 24, 26]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, -1), (26, 136), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 26]
 solution : [0, 5, 1, 12, 24]


New level: 9
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 26]
 solution : [0, 5, 1, 12, 24]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 26]
 solution : [0, 5, 1, 12, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, 192), (25, -1), (26, 136), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 26]
 solution : [0, 5, 1, 12, 24]


Solution : [0, 5, 1, 12, 24] has cost 36.


Decide in level 9 among pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 26]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Decide 26 with phase True at level 9

After decision at level 9
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13]
 solution : [0, 5, 1, 12, 24, 26]


New level: 10
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13]
 solution : [0, 5, 1, 12, 24, 26]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13]
 solution : [0, 5, 1, 12, 24, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, 129), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 2), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, 8)]

Covered at level 10 : {18, 19, 21, 22, 23}

After reduction : 
 pending  : [32, 31, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13]
 solution : [0, 5, 1, 12, 24, 26]


Before reduction : 
 pending  : [32, 31, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13]
 solution : [0, 5, 1, 12, 24, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 2), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 2), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, 8)]

Covered at level 10 : set()

After reduction : 
 pending  : [32, 31, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13]
 solution : [0, 5, 1, 12, 24, 26]


Solution : [0, 5, 1, 12, 24, 26] has cost 70.


Before backtrack at level 10
 pending : [32, 31, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13]
 solution : [0, 5, 1, 12, 24, 26]

After backtrack at level 10
 pending : [32, 31, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 24, 26]


Invert decision for 26 at level 9


New level: 10
 pending : [32, 31, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 24]


Before reduction : 
 pending  : [32, 31, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 2), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, 1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [32, 31, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 24]


Solution : [0, 5, 1, 12, 24] has cost 36.


Decide in level 10 among pending : [32, 31, 2, 7, 16, 33, 6, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 21, 18, 19, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [32, 31, 2, 7, 16, 33, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 24, 6]


New level: 11
 pending : [32, 31, 2, 7, 16, 33, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 24, 6]


Before reduction : 
 pending  : [32, 31, 2, 7, 16, 33, 15, 4, 17, 10, 28, 30, 11, 8, 14, 13, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 24, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 128), (11, 128), (12, -1), (13, 0), (14, 128), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, 8), (33, 0)]

Covered at level 11 : {33, 2, 4, 7, 8, 13, 15, 16, 17}

After reduction : 
 pending  : [32, 31, 10, 28, 30, 11, 14, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 24, 6]


Before reduction : 
 pending  : [32, 31, 10, 28, 30, 11, 14, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 24, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 128), (11, 128), (12, -1), (13, 0), (14, 128), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, 8), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, 8), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [32, 31, 10, 28, 30, 11, 14, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 24, 6]


Solution : [0, 5, 1, 12, 24, 6] has cost 49.


Before backtrack at level 11
 pending : [32, 31, 10, 28, 30, 11, 14, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 24, 6]

After backtrack at level 11
 pending : [32, 31, 10, 28, 30, 11, 14, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13]
 solution : [0, 5, 1, 12, 24, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [32, 31, 10, 28, 30, 11, 14, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13]
 solution : [0, 5, 1, 12, 24]


Before reduction : 
 pending  : [32, 31, 10, 28, 30, 11, 14, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13]
 solution : [0, 5, 1, 12, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [32, 31, 10, 28, 30, 11, 14, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13]
 solution : [0, 5, 1, 12, 24]


Solution : [0, 5, 1, 12, 24] has cost 36.


Decide in level 11 among pending : [32, 31, 10, 28, 30, 11, 14, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [32, 31, 28, 30, 11, 14, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13]
 solution : [0, 5, 1, 12, 24, 10]


New level: 12
 pending : [32, 31, 28, 30, 11, 14, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13]
 solution : [0, 5, 1, 12, 24, 10]


Before reduction : 
 pending  : [32, 31, 28, 30, 11, 14, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13]
 solution : [0, 5, 1, 12, 24, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 0), (12, -1), (13, 128), (14, 0), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 32)]

Covered at level 12 : {11, 28, 30, 14}

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13]
 solution : [0, 5, 1, 12, 24, 10]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13]
 solution : [0, 5, 1, 12, 24, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 0), (12, -1), (13, 128), (14, 0), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13]
 solution : [0, 5, 1, 12, 24, 10]


Solution : [0, 5, 1, 12, 24, 10] has cost 49.


Before backtrack at level 12
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13]
 solution : [0, 5, 1, 12, 24, 10]

After backtrack at level 12
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24]


Solution : [0, 5, 1, 12, 24] has cost 36.


Decide in level 12 among pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 4, 17, 8, 13, 28, 30, 11, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Decide 4 with phase True at level 12

After decision at level 12
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 17, 8, 13, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24, 4]


New level: 13
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 17, 8, 13, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24, 4]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 15, 17, 8, 13, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, 0), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Covered at level 13 : {15}

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 8, 13, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24, 4]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 8, 13, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, 0), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 8, 13, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24, 4]


Solution : [0, 5, 1, 12, 24, 4] has cost 41.


Before backtrack at level 13
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 8, 13, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24, 4]

After backtrack at level 13
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 8, 13, 28, 30, 11, 14, 15]
 solution : [0, 5, 1, 12, 24, 4]


Invert decision for 4 at level 12


New level: 13
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 8, 13, 28, 30, 11, 14, 15]
 solution : [0, 5, 1, 12, 24]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 8, 13, 28, 30, 11, 14, 15]
 solution : [0, 5, 1, 12, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 1), (17, 2), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 8, 13, 28, 30, 11, 14, 15]
 solution : [0, 5, 1, 12, 24]


Solution : [0, 5, 1, 12, 24] has cost 36.


Decide in level 13 among pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 8, 13, 28, 30, 11, 14, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Decide 8 with phase True at level 13

After decision at level 13
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 28, 30, 11, 14, 15]
 solution : [0, 5, 1, 12, 24, 8]


New level: 14
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 28, 30, 11, 14, 15]
 solution : [0, 5, 1, 12, 24, 8]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 28, 30, 11, 14, 15]
 solution : [0, 5, 1, 12, 24, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 0), (14, 128), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 0)]

Covered at level 14 : {33, 2, 7, 13, 15, 16, 17}

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24, 8]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 0), (14, 128), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24, 8]


Solution : [0, 5, 1, 12, 24, 8] has cost 42.


Before backtrack at level 14
 pending : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 24, 8]

After backtrack at level 14
 pending : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 14, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24, 8]


Invert decision for 8 at level 13


New level: 14
 pending : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 14, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 14, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 14, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24]


Solution : [0, 5, 1, 12, 24] has cost 36.


Decide in level 14 among pending : [32, 31, 21, 18, 19, 22, 23, 28, 30, 11, 14, 2, 7, 16, 33, 17, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

Decide 11 with phase True at level 14

After decision at level 14
 pending : [32, 31, 21, 18, 19, 22, 23, 28, 30, 14, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24, 11]


New level: 15
 pending : [32, 31, 21, 18, 19, 22, 23, 28, 30, 14, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24, 11]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 28, 30, 14, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 16), (18, 24), (19, 24), (20, -1), (21, 101), (22, 101), (23, 104), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 32), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, 0), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 32)]

Covered at level 15 : {28, 30, 14}

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24, 11]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, 0), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24, 11]


Solution : [0, 5, 1, 12, 24, 11] has cost 42.


Before backtrack at level 15
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24, 11]

After backtrack at level 15
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 28, 30, 14]
 solution : [0, 5, 1, 12, 24, 11]


Invert decision for 11 at level 14


New level: 15
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 28, 30, 14]
 solution : [0, 5, 1, 12, 24]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 28, 30, 14]
 solution : [0, 5, 1, 12, 24]

Essensial at level 15 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 32)]

Covered at level 15 : {28, 30}

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24, 14]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, 1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24, 14]


Solution : [0, 5, 1, 12, 24, 14] has cost 42.


Before backtrack at level 15
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15]
 solution : [0, 5, 1, 12, 24, 14]

After backtrack at level 15
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30]
 solution : [0, 5, 1, 12, 24]


Before backtrack at level 14
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30]
 solution : [0, 5, 1, 12, 24]

After backtrack at level 14
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11]
 solution : [0, 5, 1, 12, 24]


Before backtrack at level 13
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11]
 solution : [0, 5, 1, 12, 24]

After backtrack at level 13
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8]
 solution : [0, 5, 1, 12, 24]


Before backtrack at level 12
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8]
 solution : [0, 5, 1, 12, 24]

After backtrack at level 12
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4]
 solution : [0, 5, 1, 12, 24]


Before backtrack at level 11
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4]
 solution : [0, 5, 1, 12, 24]

After backtrack at level 11
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10]
 solution : [0, 5, 1, 12, 24]


Before backtrack at level 10
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10]
 solution : [0, 5, 1, 12, 24]

After backtrack at level 10
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6]
 solution : [0, 5, 1, 12, 24]


Before backtrack at level 9
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6]
 solution : [0, 5, 1, 12, 24]

After backtrack at level 9
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 26]
 solution : [0, 5, 1, 12, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 26]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 26]
 solution : [0, 5, 1, 12]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 16), (18, 5), (19, 5), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, 1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, 136), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 26]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 9 among pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 26]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, 136), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Decide 26 with phase True at level 9

After decision at level 9
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6]
 solution : [0, 5, 1, 12, 26]


New level: 10
 pending : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6]
 solution : [0, 5, 1, 12, 26]


Before reduction : 
 pending  : [32, 31, 21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6]
 solution : [0, 5, 1, 12, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, 136), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 2), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 1), (32, 1), (33, 8)]

Covered at level 10 : {18, 19, 21, 22, 23}

After reduction : 
 pending  : [32, 31, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6]
 solution : [0, 5, 1, 12, 26]


Before reduction : 
 pending  : [32, 31, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6]
 solution : [0, 5, 1, 12, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 2), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 1), (32, 1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 2), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 1), (32, 1), (33, 8)]

Covered at level 10 : set()

After reduction : 
 pending  : [32, 31, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6]
 solution : [0, 5, 1, 12, 26]


Solution : [0, 5, 1, 12, 26] has cost 54.


Before backtrack at level 10
 pending : [32, 31, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6]
 solution : [0, 5, 1, 12, 26]

After backtrack at level 10
 pending : [32, 31, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 26]


Invert decision for 26 at level 9


New level: 10
 pending : [32, 31, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [32, 31, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 2), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 1), (32, 1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [32, 31, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 10 among pending : [32, 31, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

Decide 32 with phase True at level 10

After decision at level 10
 pending : [31, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32]


New level: 11
 pending : [31, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32]


Before reduction : 
 pending  : [31, 2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, 128), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 8)]

Covered at level 11 : {31}

After reduction : 
 pending  : [2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32]


Before reduction : 
 pending  : [2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32]


Solution : [0, 5, 1, 12, 32] has cost 30.


Decide in level 11 among pending : [2, 7, 16, 33, 17, 13, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [2, 7, 16, 33, 17, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13]


New level: 12
 pending : [2, 7, 16, 33, 17, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13]


Before reduction : 
 pending  : [2, 7, 16, 33, 17, 15, 14, 28, 30, 11, 8, 4, 10, 6, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

Covered at level 12 : {33, 2, 4, 6, 7, 8, 15, 16, 17}

After reduction : 
 pending  : [14, 28, 30, 11, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13]


Before reduction : 
 pending  : [14, 28, 30, 11, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [14, 28, 30, 11, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13]


Solution : [0, 5, 1, 12, 32, 13] has cost 36.


Decide in level 12 among pending : [14, 28, 30, 11, 10, 21, 18, 19, 22, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [28, 30, 11, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13, 14]


New level: 13
 pending : [28, 30, 11, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13, 14]


Before reduction : 
 pending  : [28, 30, 11, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {10, 11, 18, 19, 21, 22, 23, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 13, 14]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 13, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 13, 14]


Solution : [0, 5, 1, 12, 32, 13, 14] has cost 42.


Before backtrack at level 13
 pending : []
 solution : [0, 5, 1, 12, 32, 13, 14]

After backtrack at level 13
 pending : [28, 30, 11, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [28, 30, 11, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13]


Before reduction : 
 pending  : [28, 30, 11, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [28, 30, 11, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13]


Solution : [0, 5, 1, 12, 32, 13] has cost 36.


Decide in level 13 among pending : [28, 30, 11, 10, 21, 18, 19, 22, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [28, 30, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13, 11]


New level: 14
 pending : [28, 30, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13, 11]


Before reduction : 
 pending  : [28, 30, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {10, 18, 19, 21, 22, 23, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 13, 11]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 13, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 13, 11]


Solution : [0, 5, 1, 12, 32, 13, 11] has cost 42.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 32, 13, 11]

After backtrack at level 14
 pending : [28, 30, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [28, 30, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13]


Before reduction : 
 pending  : [28, 30, 10, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13]

Essensial at level 14 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {18, 19, 21, 22, 23, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 13, 10]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 13, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 13, 10]


Solution : [0, 5, 1, 12, 32, 13, 10] has cost 49.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 32, 13, 10]

After backtrack at level 14
 pending : [10, 28, 30, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13]


Before backtrack at level 13
 pending : [10, 28, 30, 21, 18, 19, 22, 23]
 solution : [0, 5, 1, 12, 32, 13]

After backtrack at level 13
 pending : [10, 28, 30, 21, 18, 19, 22, 23, 11]
 solution : [0, 5, 1, 12, 32, 13]


Before backtrack at level 12
 pending : [10, 28, 30, 21, 18, 19, 22, 23, 11]
 solution : [0, 5, 1, 12, 32, 13]

After backtrack at level 12
 pending : [10, 28, 30, 21, 18, 19, 22, 23, 11, 2, 7, 16, 33, 17, 15, 8, 4, 6, 14]
 solution : [0, 5, 1, 12, 32, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [10, 28, 30, 21, 18, 19, 22, 23, 11, 2, 7, 16, 33, 17, 15, 8, 4, 6, 14]
 solution : [0, 5, 1, 12, 32]


Before reduction : 
 pending  : [10, 28, 30, 21, 18, 19, 22, 23, 11, 2, 7, 16, 33, 17, 15, 8, 4, 6, 14]
 solution : [0, 5, 1, 12, 32]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 28, 30, 21, 18, 19, 22, 23, 11, 2, 7, 16, 33, 17, 15, 8, 4, 6, 14]
 solution : [0, 5, 1, 12, 32]


Solution : [0, 5, 1, 12, 32] has cost 30.


Decide in level 12 among pending : [10, 28, 30, 21, 18, 19, 22, 23, 11, 2, 7, 16, 33, 17, 15, 8, 4, 6, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

Decide 10 with phase True at level 12

After decision at level 12
 pending : [28, 30, 21, 18, 19, 22, 23, 11, 2, 7, 16, 33, 17, 15, 8, 4, 6, 14]
 solution : [0, 5, 1, 12, 32, 10]


New level: 13
 pending : [28, 30, 21, 18, 19, 22, 23, 11, 2, 7, 16, 33, 17, 15, 8, 4, 6, 14]
 solution : [0, 5, 1, 12, 32, 10]


Before reduction : 
 pending  : [28, 30, 21, 18, 19, 22, 23, 11, 2, 7, 16, 33, 17, 15, 8, 4, 6, 14]
 solution : [0, 5, 1, 12, 32, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

Covered at level 13 : {11, 28, 30, 14}

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 8, 4, 6]
 solution : [0, 5, 1, 12, 32, 10]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 8, 4, 6]
 solution : [0, 5, 1, 12, 32, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 8, 4, 6]
 solution : [0, 5, 1, 12, 32, 10]


Solution : [0, 5, 1, 12, 32, 10] has cost 43.


Before backtrack at level 13
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 8, 4, 6]
 solution : [0, 5, 1, 12, 32, 10]

After backtrack at level 13
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 8, 4, 6, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 32, 10]


Invert decision for 10 at level 12


New level: 13
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 8, 4, 6, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 32]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 8, 4, 6, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 32]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 8, 4, 6, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 32]


Solution : [0, 5, 1, 12, 32] has cost 30.


Decide in level 13 among pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 8, 4, 6, 28, 30, 11, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

Decide 8 with phase True at level 13

After decision at level 13
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 4, 6, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 32, 8]


New level: 14
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 4, 6, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 32, 8]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 4, 6, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 32, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {33, 2, 4, 6, 7, 15, 16, 17}

After reduction : 
 pending  : [21, 18, 19, 22, 23, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 32, 8]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 32, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 28, 30, 11, 14]
 solution : [0, 5, 1, 12, 32, 8]


Solution : [0, 5, 1, 12, 32, 8] has cost 36.


Decide in level 14 among pending : [21, 18, 19, 22, 23, 28, 30, 11, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 14

After decision at level 14
 pending : [21, 18, 19, 22, 23, 28, 30, 14]
 solution : [0, 5, 1, 12, 32, 8, 11]


New level: 15
 pending : [21, 18, 19, 22, 23, 28, 30, 14]
 solution : [0, 5, 1, 12, 32, 8, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 28, 30, 14]
 solution : [0, 5, 1, 12, 32, 8, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {14, 18, 19, 21, 22, 23, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 8, 11]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 8, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 8, 11]


Solution : [0, 5, 1, 12, 32, 8, 11] has cost 42.


Before backtrack at level 15
 pending : []
 solution : [0, 5, 1, 12, 32, 8, 11]

After backtrack at level 15
 pending : [21, 18, 19, 22, 23, 28, 30, 14]
 solution : [0, 5, 1, 12, 32, 8, 11]


Invert decision for 11 at level 14


New level: 15
 pending : [21, 18, 19, 22, 23, 28, 30, 14]
 solution : [0, 5, 1, 12, 32, 8]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 28, 30, 14]
 solution : [0, 5, 1, 12, 32, 8]

Essensial at level 15 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {18, 19, 21, 22, 23, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 8, 14]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 8, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 8, 14]


Solution : [0, 5, 1, 12, 32, 8, 14] has cost 42.


Before backtrack at level 15
 pending : []
 solution : [0, 5, 1, 12, 32, 8, 14]

After backtrack at level 15
 pending : [14, 21, 18, 19, 22, 23, 28, 30]
 solution : [0, 5, 1, 12, 32, 8]


Before backtrack at level 14
 pending : [14, 21, 18, 19, 22, 23, 28, 30]
 solution : [0, 5, 1, 12, 32, 8]

After backtrack at level 14
 pending : [14, 21, 18, 19, 22, 23, 28, 30, 2, 7, 16, 33, 17, 15, 4, 6, 11]
 solution : [0, 5, 1, 12, 32, 8]


Invert decision for 8 at level 13


New level: 14
 pending : [14, 21, 18, 19, 22, 23, 28, 30, 2, 7, 16, 33, 17, 15, 4, 6, 11]
 solution : [0, 5, 1, 12, 32]


Before reduction : 
 pending  : [14, 21, 18, 19, 22, 23, 28, 30, 2, 7, 16, 33, 17, 15, 4, 6, 11]
 solution : [0, 5, 1, 12, 32]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [14, 21, 18, 19, 22, 23, 28, 30, 2, 7, 16, 33, 17, 15, 4, 6, 11]
 solution : [0, 5, 1, 12, 32]


Solution : [0, 5, 1, 12, 32] has cost 30.


Decide in level 14 among pending : [14, 21, 18, 19, 22, 23, 28, 30, 2, 7, 16, 33, 17, 15, 4, 6, 11]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [21, 18, 19, 22, 23, 28, 30, 2, 7, 16, 33, 17, 15, 4, 6, 11]
 solution : [0, 5, 1, 12, 32, 14]


New level: 15
 pending : [21, 18, 19, 22, 23, 28, 30, 2, 7, 16, 33, 17, 15, 4, 6, 11]
 solution : [0, 5, 1, 12, 32, 14]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 28, 30, 2, 7, 16, 33, 17, 15, 4, 6, 11]
 solution : [0, 5, 1, 12, 32, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

Covered at level 15 : {11, 28, 30}

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 4, 6]
 solution : [0, 5, 1, 12, 32, 14]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 4, 6]
 solution : [0, 5, 1, 12, 32, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 4, 6]
 solution : [0, 5, 1, 12, 32, 14]


Solution : [0, 5, 1, 12, 32, 14] has cost 36.


Decide in level 15 among pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 4, 6]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 4 with phase True at level 15

After decision at level 15
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 6]
 solution : [0, 5, 1, 12, 32, 14, 4]


New level: 16
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 6]
 solution : [0, 5, 1, 12, 32, 14, 4]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 17, 15, 6]
 solution : [0, 5, 1, 12, 32, 14, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 16 : {16, 33, 15}

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 6]
 solution : [0, 5, 1, 12, 32, 14, 4]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 6]
 solution : [0, 5, 1, 12, 32, 14, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 6]
 solution : [0, 5, 1, 12, 32, 14, 4]


Solution : [0, 5, 1, 12, 32, 14, 4] has cost 41.


Before backtrack at level 16
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 6]
 solution : [0, 5, 1, 12, 32, 14, 4]

After backtrack at level 16
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 6, 16, 33, 15]
 solution : [0, 5, 1, 12, 32, 14, 4]


Invert decision for 4 at level 15


New level: 16
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 6, 16, 33, 15]
 solution : [0, 5, 1, 12, 32, 14]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 6, 16, 33, 15]
 solution : [0, 5, 1, 12, 32, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 6, 16, 33, 15]
 solution : [0, 5, 1, 12, 32, 14]


Solution : [0, 5, 1, 12, 32, 14] has cost 36.


Decide in level 16 among pending : [21, 18, 19, 22, 23, 2, 7, 17, 6, 16, 33, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 6 with phase True at level 16

After decision at level 16
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 15]
 solution : [0, 5, 1, 12, 32, 14, 6]


New level: 17
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 15]
 solution : [0, 5, 1, 12, 32, 14, 6]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 15]
 solution : [0, 5, 1, 12, 32, 14, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 17 : {33, 2, 7, 15, 16, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 14, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 14, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 14, 6]


Solution : [0, 5, 1, 12, 32, 14, 6] has cost 49.


Before backtrack at level 17
 pending : []
 solution : [0, 5, 1, 12, 32, 14, 6]

After backtrack at level 17
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 15]
 solution : [0, 5, 1, 12, 32, 14, 6]


Invert decision for 6 at level 16


New level: 17
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 15]
 solution : [0, 5, 1, 12, 32, 14]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 15]
 solution : [0, 5, 1, 12, 32, 14]

Essensial at level 17 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 17 : {16, 33}

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17]
 solution : [0, 5, 1, 12, 32, 14, 15]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17]
 solution : [0, 5, 1, 12, 32, 14, 15]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17]
 solution : [0, 5, 1, 12, 32, 14, 15]


Solution : [0, 5, 1, 12, 32, 14, 15] has cost 38.


Before backtrack at level 17
 pending : [21, 18, 19, 22, 23, 2, 7, 17]
 solution : [0, 5, 1, 12, 32, 14, 15]

After backtrack at level 17
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33]
 solution : [0, 5, 1, 12, 32, 14]


Before backtrack at level 16
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33]
 solution : [0, 5, 1, 12, 32, 14]

After backtrack at level 16
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 6]
 solution : [0, 5, 1, 12, 32, 14]


Before backtrack at level 15
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 6]
 solution : [0, 5, 1, 12, 32, 14]

After backtrack at level 15
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 6, 28, 30, 11, 4]
 solution : [0, 5, 1, 12, 32, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 6, 28, 30, 11, 4]
 solution : [0, 5, 1, 12, 32]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 6, 28, 30, 11, 4]
 solution : [0, 5, 1, 12, 32]

Essensial at level 15 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

Covered at level 15 : {28, 30}

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 6, 4]
 solution : [0, 5, 1, 12, 32, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 6, 4]
 solution : [0, 5, 1, 12, 32, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 6, 4]
 solution : [0, 5, 1, 12, 32, 11]


Solution : [0, 5, 1, 12, 32, 11] has cost 36.


Decide in level 15 among pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 6, 4]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 6 with phase True at level 15

After decision at level 15
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4]
 solution : [0, 5, 1, 12, 32, 11, 6]


New level: 16
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4]
 solution : [0, 5, 1, 12, 32, 11, 6]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4]
 solution : [0, 5, 1, 12, 32, 11, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 16 : {33, 2, 4, 7, 15, 16, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 11, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 32, 11, 6]


Solution : [0, 5, 1, 12, 32, 11, 6] has cost 49.


Before backtrack at level 16
 pending : []
 solution : [0, 5, 1, 12, 32, 11, 6]

After backtrack at level 16
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4]
 solution : [0, 5, 1, 12, 32, 11, 6]


Invert decision for 6 at level 15


New level: 16
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4]
 solution : [0, 5, 1, 12, 32, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4]
 solution : [0, 5, 1, 12, 32, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4]
 solution : [0, 5, 1, 12, 32, 11]


Solution : [0, 5, 1, 12, 32, 11] has cost 36.


Decide in level 16 among pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 4 with phase True at level 16

After decision at level 16
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33]
 solution : [0, 5, 1, 12, 32, 11, 4]


New level: 17
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33]
 solution : [0, 5, 1, 12, 32, 11, 4]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33]
 solution : [0, 5, 1, 12, 32, 11, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 17 : {16, 33, 15}

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17]
 solution : [0, 5, 1, 12, 32, 11, 4]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17]
 solution : [0, 5, 1, 12, 32, 11, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17]
 solution : [0, 5, 1, 12, 32, 11, 4]


Solution : [0, 5, 1, 12, 32, 11, 4] has cost 41.


Before backtrack at level 17
 pending : [21, 18, 19, 22, 23, 2, 7, 17]
 solution : [0, 5, 1, 12, 32, 11, 4]

After backtrack at level 17
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33]
 solution : [0, 5, 1, 12, 32, 11, 4]


Invert decision for 4 at level 16


New level: 17
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33]
 solution : [0, 5, 1, 12, 32, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33]
 solution : [0, 5, 1, 12, 32, 11]

Essensial at level 17 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, -1), (7, 8), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 17 : {16, 33}

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17]
 solution : [0, 5, 1, 12, 32, 11, 15]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17]
 solution : [0, 5, 1, 12, 32, 11, 15]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17]
 solution : [0, 5, 1, 12, 32, 11, 15]


Solution : [0, 5, 1, 12, 32, 11, 15] has cost 38.


Before backtrack at level 17
 pending : [21, 18, 19, 22, 23, 2, 7, 17]
 solution : [0, 5, 1, 12, 32, 11, 15]

After backtrack at level 17
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33]
 solution : [0, 5, 1, 12, 32, 11]


Before backtrack at level 16
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33]
 solution : [0, 5, 1, 12, 32, 11]

After backtrack at level 16
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4]
 solution : [0, 5, 1, 12, 32, 11]


Before backtrack at level 15
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4]
 solution : [0, 5, 1, 12, 32, 11]

After backtrack at level 15
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4, 11, 28, 30, 6]
 solution : [0, 5, 1, 12, 32]


Before backtrack at level 14
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4, 11, 28, 30, 6]
 solution : [0, 5, 1, 12, 32]

After backtrack at level 14
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4, 11, 28, 30, 6, 14]
 solution : [0, 5, 1, 12, 32]


Before backtrack at level 13
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4, 11, 28, 30, 6, 14]
 solution : [0, 5, 1, 12, 32]

After backtrack at level 13
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4, 11, 28, 30, 6, 14, 8]
 solution : [0, 5, 1, 12, 32]


Before backtrack at level 12
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4, 11, 28, 30, 6, 14, 8]
 solution : [0, 5, 1, 12, 32]

After backtrack at level 12
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4, 11, 28, 30, 6, 14, 8, 10]
 solution : [0, 5, 1, 12, 32]


Before backtrack at level 11
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4, 11, 28, 30, 6, 14, 8, 10]
 solution : [0, 5, 1, 12, 32]

After backtrack at level 11
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4, 11, 28, 30, 6, 14, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 32]


Invert decision for 32 at level 10


New level: 11
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4, 11, 28, 30, 6, 14, 8, 10, 31, 13]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4, 11, 28, 30, 6, 14, 8, 10, 31, 13]
 solution : [0, 5, 1, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4, 11, 28, 30, 6, 14, 8, 10, 31, 13]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 11 among pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 4, 11, 28, 30, 6, 14, 8, 10, 31, 13]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 32)]

Decide 4 with phase True at level 11

After decision at level 11
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 11, 28, 30, 6, 14, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 4]


New level: 12
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 11, 28, 30, 6, 14, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 4]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 15, 16, 33, 11, 28, 30, 6, 14, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 128), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, 0), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 8)]

Covered at level 12 : {15}

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 11, 28, 30, 6, 14, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 4]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 11, 28, 30, 6, 14, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, 0), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 11, 28, 30, 6, 14, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 4]


Solution : [0, 5, 1, 12, 4] has cost 25.


Decide in level 12 among pending : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 11, 28, 30, 6, 14, 8, 10, 31, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 8)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 28, 30, 6, 14, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]


New level: 13
 pending : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 28, 30, 6, 14, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 28, 30, 6, 14, 8, 10, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, 128), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 0), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : {10, 28, 30, 14}

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 6, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 6, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 0), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 6, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]


Solution : [0, 5, 1, 12, 4, 11] has cost 31.


Decide in level 13 among pending : [21, 18, 19, 22, 23, 2, 7, 17, 16, 33, 6, 8, 31, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 17]


New level: 14
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 17]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 14 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 17]


Solution : [0, 5, 1, 12, 4, 11, 17] has cost 41.


Before backtrack at level 14
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 17]

After backtrack at level 14
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]


Solution : [0, 5, 1, 12, 4, 11] has cost 31.


Decide in level 14 among pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 6, 8, 31, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 6 with phase True at level 14

After decision at level 14
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 6]


New level: 15
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 6]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 2, 7, 8, 13, 16, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 11, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 11, 6]


Solution : [0, 5, 1, 12, 4, 11, 6] has cost 44.


Before backtrack at level 15
 pending : []
 solution : [0, 5, 1, 12, 4, 11, 6]

After backtrack at level 15
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 6]


Invert decision for 6 at level 14


New level: 15
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]


Solution : [0, 5, 1, 12, 4, 11] has cost 31.


Decide in level 15 among pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 8, 31, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 8 with phase True at level 15

After decision at level 15
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 8]


New level: 16
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 8]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 16 : {33, 2, 7, 13, 16, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 11, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 11, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 11, 8]


Solution : [0, 5, 1, 12, 4, 11, 8] has cost 37.


Before backtrack at level 16
 pending : []
 solution : [0, 5, 1, 12, 4, 11, 8]

After backtrack at level 16
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31, 13]
 solution : [0, 5, 1, 12, 4, 11, 8]


Invert decision for 8 at level 15


New level: 16
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31, 13]
 solution : [0, 5, 1, 12, 4, 11]


Solution : [0, 5, 1, 12, 4, 11] has cost 31.


Decide in level 16 among pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31, 13]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 13 with phase True at level 16

After decision at level 16
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11, 13]


New level: 17
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11, 13]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11, 13]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 2, 7, 16, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 11, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 11, 13]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 11, 13]


Solution : [0, 5, 1, 12, 4, 11, 13] has cost 37.


Before backtrack at level 17
 pending : []
 solution : [0, 5, 1, 12, 4, 11, 13]

After backtrack at level 17
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11, 13]


Invert decision for 13 at level 16


New level: 17
 pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11]


Solution : [0, 5, 1, 12, 4, 11] has cost 31.


Decide in level 17 among pending : [21, 18, 19, 22, 23, 2, 7, 16, 33, 31]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 21 with phase True at level 17

After decision at level 17
 pending : [18, 19, 22, 23, 2, 7, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11, 21]


New level: 18
 pending : [18, 19, 22, 23, 2, 7, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11, 21]


Before reduction : 
 pending  : [18, 19, 22, 23, 2, 7, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 16, 18, 19, 22, 23, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 11, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 11, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 11, 21]


Solution : [0, 5, 1, 12, 4, 11, 21] has cost 65.


Before backtrack at level 18
 pending : [2, 7]
 solution : [0, 5, 1, 12, 4, 11, 21]

After backtrack at level 18
 pending : [2, 7, 18, 19, 22, 23, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11, 21]


Invert decision for 21 at level 17


New level: 18
 pending : [2, 7, 18, 19, 22, 23, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11]


Before reduction : 
 pending  : [2, 7, 18, 19, 22, 23, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, -1), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7, 18, 19, 22, 23, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11]


Solution : [0, 5, 1, 12, 4, 11] has cost 31.


Decide in level 18 among pending : [2, 7, 18, 19, 22, 23, 16, 33, 31]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, -1), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 22 with phase True at level 18

After decision at level 18
 pending : [2, 7, 18, 19, 23, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11, 22]


New level: 19
 pending : [2, 7, 18, 19, 23, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11, 22]


Before reduction : 
 pending  : [2, 7, 18, 19, 23, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11, 22]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, -1), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 16, 18, 19, 23, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 11, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 11, 22]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 11, 22]


Solution : [0, 5, 1, 12, 4, 11, 22] has cost 65.


Before backtrack at level 19
 pending : [2, 7]
 solution : [0, 5, 1, 12, 4, 11, 22]

After backtrack at level 19
 pending : [2, 7, 18, 19, 23, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11, 22]


Invert decision for 22 at level 18


New level: 19
 pending : [2, 7, 18, 19, 23, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11]


Before reduction : 
 pending  : [2, 7, 18, 19, 23, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11]

Essensial at level 19 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 16, 18, 19, 31}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 11, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 11, 23]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 11, 23]


Solution : [0, 5, 1, 12, 4, 11, 23] has cost 65.


Before backtrack at level 19
 pending : [2, 7]
 solution : [0, 5, 1, 12, 4, 11, 23]

After backtrack at level 19
 pending : [2, 7, 23, 18, 19, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11]


Before backtrack at level 18
 pending : [2, 7, 23, 18, 19, 16, 33, 31]
 solution : [0, 5, 1, 12, 4, 11]

After backtrack at level 18
 pending : [2, 7, 23, 18, 19, 16, 33, 31, 22]
 solution : [0, 5, 1, 12, 4, 11]


Before backtrack at level 17
 pending : [2, 7, 23, 18, 19, 16, 33, 31, 22]
 solution : [0, 5, 1, 12, 4, 11]

After backtrack at level 17
 pending : [2, 7, 23, 18, 19, 16, 33, 31, 22, 21]
 solution : [0, 5, 1, 12, 4, 11]


Before backtrack at level 16
 pending : [2, 7, 23, 18, 19, 16, 33, 31, 22, 21]
 solution : [0, 5, 1, 12, 4, 11]

After backtrack at level 16
 pending : [2, 7, 23, 18, 19, 16, 33, 31, 22, 21, 13]
 solution : [0, 5, 1, 12, 4, 11]


Before backtrack at level 15
 pending : [2, 7, 23, 18, 19, 16, 33, 31, 22, 21, 13]
 solution : [0, 5, 1, 12, 4, 11]

After backtrack at level 15
 pending : [2, 7, 23, 18, 19, 16, 33, 31, 22, 21, 13, 8]
 solution : [0, 5, 1, 12, 4, 11]


Before backtrack at level 14
 pending : [2, 7, 23, 18, 19, 16, 33, 31, 22, 21, 13, 8]
 solution : [0, 5, 1, 12, 4, 11]

After backtrack at level 14
 pending : [2, 7, 23, 18, 19, 16, 33, 31, 22, 21, 13, 8, 6]
 solution : [0, 5, 1, 12, 4, 11]


Before backtrack at level 13
 pending : [2, 7, 23, 18, 19, 16, 33, 31, 22, 21, 13, 8, 6]
 solution : [0, 5, 1, 12, 4, 11]

After backtrack at level 13
 pending : [2, 7, 23, 18, 19, 16, 33, 31, 22, 21, 13, 8, 6, 28, 30, 14, 10, 17]
 solution : [0, 5, 1, 12, 4, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [2, 7, 23, 18, 19, 16, 33, 31, 22, 21, 13, 8, 6, 28, 30, 14, 10, 17]
 solution : [0, 5, 1, 12, 4]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 31, 22, 21, 13, 8, 6, 28, 30, 14, 10, 17]
 solution : [0, 5, 1, 12, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 31, 22, 21, 13, 8, 6, 28, 30, 14, 10, 17]
 solution : [0, 5, 1, 12, 4]


Solution : [0, 5, 1, 12, 4] has cost 25.


Decide in level 13 among pending : [2, 7, 23, 18, 19, 16, 33, 31, 22, 21, 13, 8, 6, 28, 30, 14, 10, 17]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 8)]

Decide 31 with phase True at level 13

After decision at level 13
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 13, 8, 6, 28, 30, 14, 10, 17]
 solution : [0, 5, 1, 12, 4, 31]


New level: 14
 pending : [2, 7, 23, 18, 19, 16, 33, 22, 21, 13, 8, 6, 28, 30, 14, 10, 17]
 solution : [0, 5, 1, 12, 4, 31]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 16, 33, 22, 21, 13, 8, 6, 28, 30, 14, 10, 17]
 solution : [0, 5, 1, 12, 4, 31]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, 0), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

Covered at level 14 : {16, 33}

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 28, 30, 14, 10, 17]
 solution : [0, 5, 1, 12, 4, 31]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 28, 30, 14, 10, 17]
 solution : [0, 5, 1, 12, 4, 31]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, 0), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 28, 30, 14, 10, 17]
 solution : [0, 5, 1, 12, 4, 31]


Solution : [0, 5, 1, 12, 4, 31] has cost 35.


Decide in level 14 among pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 28, 30, 14, 10, 17]

Coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 28, 30, 10, 17]
 solution : [0, 5, 1, 12, 4, 31, 14]


New level: 15
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 28, 30, 10, 17]
 solution : [0, 5, 1, 12, 4, 31, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 28, 30, 10, 17]
 solution : [0, 5, 1, 12, 4, 31, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, -1), (17, 2), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 0), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {10, 28, 30}

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17]
 solution : [0, 5, 1, 12, 4, 31, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17]
 solution : [0, 5, 1, 12, 4, 31, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, 0), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17]
 solution : [0, 5, 1, 12, 4, 31, 14]


Solution : [0, 5, 1, 12, 4, 31, 14] has cost 41.


Before backtrack at level 15
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17]
 solution : [0, 5, 1, 12, 4, 31, 14]

After backtrack at level 15
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 28, 30, 10]
 solution : [0, 5, 1, 12, 4, 31, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 28, 30, 10]
 solution : [0, 5, 1, 12, 4, 31]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 28, 30, 10]
 solution : [0, 5, 1, 12, 4, 31]

Essensial at level 15 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {28, 30}

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17]
 solution : [0, 5, 1, 12, 4, 31, 10]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17]
 solution : [0, 5, 1, 12, 4, 31, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17]
 solution : [0, 5, 1, 12, 4, 31, 10]


Solution : [0, 5, 1, 12, 4, 31, 10] has cost 48.


Before backtrack at level 15
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17]
 solution : [0, 5, 1, 12, 4, 31, 10]

After backtrack at level 15
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 10, 28, 30]
 solution : [0, 5, 1, 12, 4, 31]


Before backtrack at level 14
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 10, 28, 30]
 solution : [0, 5, 1, 12, 4, 31]

After backtrack at level 14
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 10, 28, 30, 16, 33, 14]
 solution : [0, 5, 1, 12, 4, 31]


Invert decision for 31 at level 13


New level: 14
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 10, 28, 30, 16, 33, 14]
 solution : [0, 5, 1, 12, 4]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 10, 28, 30, 16, 33, 14]
 solution : [0, 5, 1, 12, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, -1), (4, -1), (5, -1), (6, 32), (7, 8), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, -1), (17, 2), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 10, 28, 30, 16, 33, 14]
 solution : [0, 5, 1, 12, 4]


Solution : [0, 5, 1, 12, 4] has cost 25.


Decide in level 14 among pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 10, 28, 30, 16, 33, 14]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 8)]

Decide 10 with phase True at level 14

After decision at level 14
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 28, 30, 16, 33, 14]
 solution : [0, 5, 1, 12, 4, 10]


New level: 15
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 28, 30, 16, 33, 14]
 solution : [0, 5, 1, 12, 4, 10]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 28, 30, 16, 33, 14]
 solution : [0, 5, 1, 12, 4, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, 128), (11, -1), (12, -1), (13, 32), (14, 128), (15, -1), (16, 8), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

Covered at level 15 : {28, 30, 14}

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 16, 33]
 solution : [0, 5, 1, 12, 4, 10]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 16, 33]
 solution : [0, 5, 1, 12, 4, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, 0), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 16, 33]
 solution : [0, 5, 1, 12, 4, 10]


Solution : [0, 5, 1, 12, 4, 10] has cost 38.


Before backtrack at level 15
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 16, 33]
 solution : [0, 5, 1, 12, 4, 10]

After backtrack at level 15
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 16, 33, 28, 30, 14]
 solution : [0, 5, 1, 12, 4, 10]


Invert decision for 10 at level 14


New level: 15
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 16, 33, 28, 30, 14]
 solution : [0, 5, 1, 12, 4]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 16, 33, 28, 30, 14]
 solution : [0, 5, 1, 12, 4]

Essensial at level 15 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

Covered at level 15 : {28, 30}

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Solution : [0, 5, 1, 12, 4, 14] has cost 31.


Decide in level 15 among pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 17, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 17 with phase True at level 15

After decision at level 15
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 17]


New level: 16
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 17]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 17]


Solution : [0, 5, 1, 12, 4, 14, 17] has cost 41.


Before backtrack at level 16
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 17]

After backtrack at level 16
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 17]


Invert decision for 17 at level 15


New level: 16
 pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Solution : [0, 5, 1, 12, 4, 14] has cost 31.


Decide in level 16 among pending : [2, 7, 23, 18, 19, 22, 21, 13, 8, 6, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 13 with phase True at level 16

After decision at level 16
 pending : [2, 7, 23, 18, 19, 22, 21, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 13]


New level: 17
 pending : [2, 7, 23, 18, 19, 22, 21, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 13]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 13]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 17 : {33, 2, 6, 7, 8, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 14, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 14, 13]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 14, 13]


Solution : [0, 5, 1, 12, 4, 14, 13] has cost 37.


Before backtrack at level 17
 pending : []
 solution : [0, 5, 1, 12, 4, 14, 13]

After backtrack at level 17
 pending : [2, 7, 23, 18, 19, 22, 21, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 13]


Invert decision for 13 at level 16


New level: 17
 pending : [2, 7, 23, 18, 19, 22, 21, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 8, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Solution : [0, 5, 1, 12, 4, 14] has cost 31.


Decide in level 17 among pending : [2, 7, 23, 18, 19, 22, 21, 8, 6, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 8 with phase True at level 17

After decision at level 17
 pending : [2, 7, 23, 18, 19, 22, 21, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 8]


New level: 18
 pending : [2, 7, 23, 18, 19, 22, 21, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 8]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 8]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, 32), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 18 : {33, 2, 6, 7, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 14, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 14, 8]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 14, 8]


Solution : [0, 5, 1, 12, 4, 14, 8] has cost 37.


Before backtrack at level 18
 pending : []
 solution : [0, 5, 1, 12, 4, 14, 8]

After backtrack at level 18
 pending : [2, 7, 23, 18, 19, 22, 21, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 8]


Invert decision for 8 at level 17


New level: 18
 pending : [2, 7, 23, 18, 19, 22, 21, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 6, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Solution : [0, 5, 1, 12, 4, 14] has cost 31.


Decide in level 18 among pending : [2, 7, 23, 18, 19, 22, 21, 6, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 6 with phase True at level 18

After decision at level 18
 pending : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 6]


New level: 19
 pending : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 6]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, 32), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 19 : {33, 2, 7, 16, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 14, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 14, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 4, 14, 6]


Solution : [0, 5, 1, 12, 4, 14, 6] has cost 44.


Before backtrack at level 19
 pending : []
 solution : [0, 5, 1, 12, 4, 14, 6]

After backtrack at level 19
 pending : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 6]


Invert decision for 6 at level 18


New level: 19
 pending : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Before reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [2, 7, 23, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Solution : [0, 5, 1, 12, 4, 14] has cost 31.


Decide in level 19 among pending : [2, 7, 23, 18, 19, 22, 21, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 23 with phase True at level 19

After decision at level 19
 pending : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 23]


New level: 20
 pending : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 23]


Before reduction : 
 pending  : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 23]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 20 : {33, 16, 18, 19, 21, 22}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 14, 23]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 14, 23]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 14, 23]


Solution : [0, 5, 1, 12, 4, 14, 23] has cost 65.


Before backtrack at level 20
 pending : [2, 7]
 solution : [0, 5, 1, 12, 4, 14, 23]

After backtrack at level 20
 pending : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 23]


Invert decision for 23 at level 19


New level: 20
 pending : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Before reduction : 
 pending  : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 20 : set()

After reduction : 
 pending  : [2, 7, 18, 19, 22, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Solution : [0, 5, 1, 12, 4, 14] has cost 31.


Decide in level 20 among pending : [2, 7, 18, 19, 22, 21, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 22 with phase True at level 20

After decision at level 20
 pending : [2, 7, 18, 19, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 22]


New level: 21
 pending : [2, 7, 18, 19, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 22]


Before reduction : 
 pending  : [2, 7, 18, 19, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 22]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, -1), (4, -1), (5, -1), (6, -1), (7, 16), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 21 : {33, 16, 18, 19, 21}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 14, 22]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 14, 22]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 14, 22]


Solution : [0, 5, 1, 12, 4, 14, 22] has cost 65.


Before backtrack at level 21
 pending : [2, 7]
 solution : [0, 5, 1, 12, 4, 14, 22]

After backtrack at level 21
 pending : [2, 7, 18, 19, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14, 22]


Invert decision for 22 at level 20


New level: 21
 pending : [2, 7, 18, 19, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Before reduction : 
 pending  : [2, 7, 18, 19, 21, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]

Essensial at level 21 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 21 : {16, 33, 18, 19}

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 14, 21]


Before reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 14, 21]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [2, 7]
 solution : [0, 5, 1, 12, 4, 14, 21]


Solution : [0, 5, 1, 12, 4, 14, 21] has cost 65.


Before backtrack at level 21
 pending : [2, 7]
 solution : [0, 5, 1, 12, 4, 14, 21]

After backtrack at level 21
 pending : [2, 7, 21, 18, 19, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]


Before backtrack at level 20
 pending : [2, 7, 21, 18, 19, 16, 33]
 solution : [0, 5, 1, 12, 4, 14]

After backtrack at level 20
 pending : [2, 7, 21, 18, 19, 16, 33, 22]
 solution : [0, 5, 1, 12, 4, 14]


Before backtrack at level 19
 pending : [2, 7, 21, 18, 19, 16, 33, 22]
 solution : [0, 5, 1, 12, 4, 14]

After backtrack at level 19
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 4, 14]


Before backtrack at level 18
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23]
 solution : [0, 5, 1, 12, 4, 14]

After backtrack at level 18
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6]
 solution : [0, 5, 1, 12, 4, 14]


Before backtrack at level 17
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6]
 solution : [0, 5, 1, 12, 4, 14]

After backtrack at level 17
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8]
 solution : [0, 5, 1, 12, 4, 14]


Before backtrack at level 16
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8]
 solution : [0, 5, 1, 12, 4, 14]

After backtrack at level 16
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8, 13]
 solution : [0, 5, 1, 12, 4, 14]


Before backtrack at level 15
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8, 13]
 solution : [0, 5, 1, 12, 4, 14]

After backtrack at level 15
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8, 13, 14, 28, 30, 17]
 solution : [0, 5, 1, 12, 4]


Before backtrack at level 14
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8, 13, 14, 28, 30, 17]
 solution : [0, 5, 1, 12, 4]

After backtrack at level 14
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8, 13, 14, 28, 30, 17, 10]
 solution : [0, 5, 1, 12, 4]


Before backtrack at level 13
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8, 13, 14, 28, 30, 17, 10]
 solution : [0, 5, 1, 12, 4]

After backtrack at level 13
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8, 13, 14, 28, 30, 17, 10, 31]
 solution : [0, 5, 1, 12, 4]


Before backtrack at level 12
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8, 13, 14, 28, 30, 17, 10, 31]
 solution : [0, 5, 1, 12, 4]

After backtrack at level 12
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8, 13, 14, 28, 30, 17, 10, 31, 15, 11]
 solution : [0, 5, 1, 12, 4]


Invert decision for 4 at level 11


New level: 12
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8, 13, 14, 28, 30, 17, 10, 31, 15, 11]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8, 13, 14, 28, 30, 17, 10, 31, 15, 11]
 solution : [0, 5, 1, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8, 13, 14, 28, 30, 17, 10, 31, 15, 11]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 12 among pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 6, 8, 13, 14, 28, 30, 17, 10, 31, 15, 11]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 32)]

Decide 6 with phase True at level 12

After decision at level 12
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 8, 13, 14, 28, 30, 17, 10, 31, 15, 11]
 solution : [0, 5, 1, 12, 6]


New level: 13
 pending : [2, 7, 21, 18, 19, 16, 33, 22, 23, 8, 13, 14, 28, 30, 17, 10, 31, 15, 11]
 solution : [0, 5, 1, 12, 6]


Before reduction : 
 pending  : [2, 7, 21, 18, 19, 16, 33, 22, 23, 8, 13, 14, 28, 30, 17, 10, 31, 15, 11]
 solution : [0, 5, 1, 12, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, 128), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 128), (11, 128), (12, -1), (13, 0), (14, 128), (15, 0), (16, 0), (17, 4), (18, 16), (19, 16), (20, -1), (21, 26), (22, 26), (23, 26), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 0)]

Covered at level 13 : {33, 2, 7, 8, 13, 15, 16}

After reduction : 
 pending  : [21, 18, 19, 22, 23, 14, 28, 30, 17, 10, 31, 11]
 solution : [0, 5, 1, 12, 6]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 14, 28, 30, 17, 10, 31, 11]
 solution : [0, 5, 1, 12, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 128), (11, 128), (12, -1), (13, 0), (14, 128), (15, 0), (16, 0), (17, 4), (18, 16), (19, 16), (20, -1), (21, 26), (22, 26), (23, 26), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 4), (18, 16), (19, 16), (20, -1), (21, 26), (22, 26), (23, 26), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 14, 28, 30, 17, 10, 31, 11]
 solution : [0, 5, 1, 12, 6]


Solution : [0, 5, 1, 12, 6] has cost 33.


Decide in level 13 among pending : [21, 18, 19, 22, 23, 14, 28, 30, 17, 10, 31, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 4), (18, 16), (19, 16), (20, -1), (21, 26), (22, 26), (23, 26), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [21, 18, 19, 22, 23, 28, 30, 17, 10, 31, 11]
 solution : [0, 5, 1, 12, 6, 14]


New level: 14
 pending : [21, 18, 19, 22, 23, 28, 30, 17, 10, 31, 11]
 solution : [0, 5, 1, 12, 6, 14]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 28, 30, 17, 10, 31, 11]
 solution : [0, 5, 1, 12, 6, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 4), (18, 16), (19, 16), (20, -1), (21, 26), (22, 26), (23, 26), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {10, 11, 17, 18, 19, 21, 22, 23, 28, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 6, 14]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 6, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 6, 14]


Solution : [0, 5, 1, 12, 6, 14] has cost 39.


Before backtrack at level 14
 pending : []
 solution : [0, 5, 1, 12, 6, 14]

After backtrack at level 14
 pending : [21, 18, 19, 22, 23, 28, 30, 17, 10, 31, 11]
 solution : [0, 5, 1, 12, 6, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [21, 18, 19, 22, 23, 28, 30, 17, 10, 31, 11]
 solution : [0, 5, 1, 12, 6]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 28, 30, 17, 10, 31, 11]
 solution : [0, 5, 1, 12, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 16), (19, 16), (20, -1), (21, 26), (22, 26), (23, 26), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 28, 30, 17, 10, 31, 11]
 solution : [0, 5, 1, 12, 6]


Solution : [0, 5, 1, 12, 6] has cost 33.


Decide in level 14 among pending : [21, 18, 19, 22, 23, 28, 30, 17, 10, 31, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 16), (19, 16), (20, -1), (21, 26), (22, 26), (23, 26), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, -1)]

Decide 10 with phase True at level 14

After decision at level 14
 pending : [21, 18, 19, 22, 23, 28, 30, 17, 31, 11]
 solution : [0, 5, 1, 12, 6, 10]


New level: 15
 pending : [21, 18, 19, 22, 23, 28, 30, 17, 31, 11]
 solution : [0, 5, 1, 12, 6, 10]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 28, 30, 17, 31, 11]
 solution : [0, 5, 1, 12, 6, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 16), (19, 16), (20, -1), (21, 26), (22, 26), (23, 26), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 15 : {11, 17, 18, 19, 21, 22, 23, 28, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 6, 10]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 6, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 6, 10]


Solution : [0, 5, 1, 12, 6, 10] has cost 46.


Before backtrack at level 15
 pending : []
 solution : [0, 5, 1, 12, 6, 10]

After backtrack at level 15
 pending : [21, 18, 19, 22, 23, 28, 30, 17, 31, 11]
 solution : [0, 5, 1, 12, 6, 10]


Invert decision for 10 at level 14


New level: 15
 pending : [21, 18, 19, 22, 23, 28, 30, 17, 31, 11]
 solution : [0, 5, 1, 12, 6]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 28, 30, 17, 31, 11]
 solution : [0, 5, 1, 12, 6]

Essensial at level 15 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 15 : {17, 18, 19, 21, 22, 23, 28, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 6, 11]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 6, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 6, 11]


Solution : [0, 5, 1, 12, 6, 11] has cost 39.


Before backtrack at level 15
 pending : []
 solution : [0, 5, 1, 12, 6, 11]

After backtrack at level 15
 pending : [11, 21, 18, 19, 22, 23, 28, 30, 17, 31]
 solution : [0, 5, 1, 12, 6]


Before backtrack at level 14
 pending : [11, 21, 18, 19, 22, 23, 28, 30, 17, 31]
 solution : [0, 5, 1, 12, 6]

After backtrack at level 14
 pending : [11, 21, 18, 19, 22, 23, 28, 30, 17, 31, 10]
 solution : [0, 5, 1, 12, 6]


Before backtrack at level 13
 pending : [11, 21, 18, 19, 22, 23, 28, 30, 17, 31, 10]
 solution : [0, 5, 1, 12, 6]

After backtrack at level 13
 pending : [11, 21, 18, 19, 22, 23, 28, 30, 17, 31, 10, 2, 7, 16, 33, 8, 13, 15, 14]
 solution : [0, 5, 1, 12, 6]


Invert decision for 6 at level 12


New level: 13
 pending : [11, 21, 18, 19, 22, 23, 28, 30, 17, 31, 10, 2, 7, 16, 33, 8, 13, 15, 14]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [11, 21, 18, 19, 22, 23, 28, 30, 17, 31, 10, 2, 7, 16, 33, 8, 13, 15, 14]
 solution : [0, 5, 1, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [11, 21, 18, 19, 22, 23, 28, 30, 17, 31, 10, 2, 7, 16, 33, 8, 13, 15, 14]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 13 among pending : [11, 21, 18, 19, 22, 23, 28, 30, 17, 31, 10, 2, 7, 16, 33, 8, 13, 15, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 32)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [21, 18, 19, 22, 23, 28, 30, 17, 31, 10, 2, 7, 16, 33, 8, 13, 15, 14]
 solution : [0, 5, 1, 12, 11]


New level: 14
 pending : [21, 18, 19, 22, 23, 28, 30, 17, 31, 10, 2, 7, 16, 33, 8, 13, 15, 14]
 solution : [0, 5, 1, 12, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 28, 30, 17, 31, 10, 2, 7, 16, 33, 8, 13, 15, 14]
 solution : [0, 5, 1, 12, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 0), (11, -1), (12, -1), (13, 128), (14, 0), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 32)]

Covered at level 14 : {10, 28, 30, 14}

After reduction : 
 pending  : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 8, 13, 15]
 solution : [0, 5, 1, 12, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 8, 13, 15]
 solution : [0, 5, 1, 12, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 0), (11, -1), (12, -1), (13, 128), (14, 0), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 8, 13, 15]
 solution : [0, 5, 1, 12, 11]


Solution : [0, 5, 1, 12, 11] has cost 26.


Decide in level 14 among pending : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 8, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 32)]

Decide 8 with phase True at level 14

After decision at level 14
 pending : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 13, 15]
 solution : [0, 5, 1, 12, 11, 8]


New level: 15
 pending : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 13, 15]
 solution : [0, 5, 1, 12, 11, 8]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 13, 15]
 solution : [0, 5, 1, 12, 11, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 2, 7, 13, 15, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 11, 8]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 11, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 11, 8]


Solution : [0, 5, 1, 12, 11, 8] has cost 32.


Before backtrack at level 15
 pending : []
 solution : [0, 5, 1, 12, 11, 8]

After backtrack at level 15
 pending : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 13, 15]
 solution : [0, 5, 1, 12, 11, 8]


Invert decision for 8 at level 14


New level: 15
 pending : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 13, 15]
 solution : [0, 5, 1, 12, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 13, 15]
 solution : [0, 5, 1, 12, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 13, 15]
 solution : [0, 5, 1, 12, 11]


Solution : [0, 5, 1, 12, 11] has cost 26.


Decide in level 15 among pending : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 32)]

Decide 13 with phase True at level 15

After decision at level 15
 pending : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 11, 13]


New level: 16
 pending : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 11, 13]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 11, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 16 : {33, 2, 7, 15, 16, 17, 18, 19, 21, 22, 23, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 11, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 11, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 11, 13]


Solution : [0, 5, 1, 12, 11, 13] has cost 32.


Before backtrack at level 16
 pending : []
 solution : [0, 5, 1, 12, 11, 13]

After backtrack at level 16
 pending : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 11, 13]


Invert decision for 13 at level 15


New level: 16
 pending : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 11]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33, 15]
 solution : [0, 5, 1, 12, 11]

Essensial at level 16 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15]


Solution : [0, 5, 1, 12, 11, 15] has cost 28.


Decide in level 16 among pending : [21, 18, 19, 22, 23, 17, 31, 2, 7, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 17 with phase True at level 16

After decision at level 16
 pending : [21, 18, 19, 22, 23, 31, 2, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15, 17]


New level: 17
 pending : [21, 18, 19, 22, 23, 31, 2, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15, 17]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 31, 2, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15, 17]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 17 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 31, 2, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15, 17]


Solution : [0, 5, 1, 12, 11, 15, 17] has cost 38.


Before backtrack at level 17
 pending : [21, 18, 19, 22, 23, 31, 2, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15, 17]

After backtrack at level 17
 pending : [21, 18, 19, 22, 23, 31, 2, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15, 17]


Invert decision for 17 at level 16


New level: 17
 pending : [21, 18, 19, 22, 23, 31, 2, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 31, 2, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [21, 18, 19, 22, 23, 31, 2, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15]


Solution : [0, 5, 1, 12, 11, 15] has cost 28.


Decide in level 17 among pending : [21, 18, 19, 22, 23, 31, 2, 7, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 2 with phase True at level 17

After decision at level 17
 pending : [21, 18, 19, 22, 23, 31, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15, 2]


New level: 18
 pending : [21, 18, 19, 22, 23, 31, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15, 2]


Before reduction : 
 pending  : [21, 18, 19, 22, 23, 31, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15, 2]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 7, 16, 18, 19, 31}

After reduction : 
 pending  : [21, 22, 23]
 solution : [0, 5, 1, 12, 11, 15, 2]


Before reduction : 
 pending  : [21, 22, 23]
 solution : [0, 5, 1, 12, 11, 15, 2]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [21, 22, 23]
 solution : [0, 5, 1, 12, 11, 15, 2]


Solution : [0, 5, 1, 12, 11, 15, 2] has cost 37.


Before backtrack at level 18
 pending : [21, 22, 23]
 solution : [0, 5, 1, 12, 11, 15, 2]

After backtrack at level 18
 pending : [21, 22, 23, 18, 19, 31, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15, 2]


Invert decision for 2 at level 17


New level: 18
 pending : [21, 22, 23, 18, 19, 31, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 31, 7, 16, 33]
 solution : [0, 5, 1, 12, 11, 15]

Essensial at level 18 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 16, 18, 19, 31}

After reduction : 
 pending  : [21, 22, 23]
 solution : [0, 5, 1, 12, 11, 15, 7]


Before reduction : 
 pending  : [21, 22, 23]
 solution : [0, 5, 1, 12, 11, 15, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [21, 22, 23]
 solution : [0, 5, 1, 12, 11, 15, 7]


Solution : [0, 5, 1, 12, 11, 15, 7] has cost 37.


Before backtrack at level 18
 pending : [21, 22, 23]
 solution : [0, 5, 1, 12, 11, 15, 7]

After backtrack at level 18
 pending : [21, 22, 23, 7, 18, 19, 31, 16, 33]
 solution : [0, 5, 1, 12, 11, 15]


Before backtrack at level 17
 pending : [21, 22, 23, 7, 18, 19, 31, 16, 33]
 solution : [0, 5, 1, 12, 11, 15]

After backtrack at level 17
 pending : [21, 22, 23, 7, 18, 19, 31, 16, 33, 2]
 solution : [0, 5, 1, 12, 11, 15]


Before backtrack at level 16
 pending : [21, 22, 23, 7, 18, 19, 31, 16, 33, 2]
 solution : [0, 5, 1, 12, 11, 15]

After backtrack at level 16
 pending : [21, 22, 23, 7, 18, 19, 31, 16, 33, 2, 15, 17]
 solution : [0, 5, 1, 12, 11]


Before backtrack at level 15
 pending : [21, 22, 23, 7, 18, 19, 31, 16, 33, 2, 15, 17]
 solution : [0, 5, 1, 12, 11]

After backtrack at level 15
 pending : [21, 22, 23, 7, 18, 19, 31, 16, 33, 2, 15, 17, 13]
 solution : [0, 5, 1, 12, 11]


Before backtrack at level 14
 pending : [21, 22, 23, 7, 18, 19, 31, 16, 33, 2, 15, 17, 13]
 solution : [0, 5, 1, 12, 11]

After backtrack at level 14
 pending : [21, 22, 23, 7, 18, 19, 31, 16, 33, 2, 15, 17, 13, 28, 30, 10, 14, 8]
 solution : [0, 5, 1, 12, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [21, 22, 23, 7, 18, 19, 31, 16, 33, 2, 15, 17, 13, 28, 30, 10, 14, 8]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [21, 22, 23, 7, 18, 19, 31, 16, 33, 2, 15, 17, 13, 28, 30, 10, 14, 8]
 solution : [0, 5, 1, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [21, 22, 23, 7, 18, 19, 31, 16, 33, 2, 15, 17, 13, 28, 30, 10, 14, 8]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 14 among pending : [21, 22, 23, 7, 18, 19, 31, 16, 33, 2, 15, 17, 13, 28, 30, 10, 14, 8]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 32)]

Decide 31 with phase True at level 14

After decision at level 14
 pending : [21, 22, 23, 7, 18, 19, 16, 33, 2, 15, 17, 13, 28, 30, 10, 14, 8]
 solution : [0, 5, 1, 12, 31]


New level: 15
 pending : [21, 22, 23, 7, 18, 19, 16, 33, 2, 15, 17, 13, 28, 30, 10, 14, 8]
 solution : [0, 5, 1, 12, 31]


Before reduction : 
 pending  : [21, 22, 23, 7, 18, 19, 16, 33, 2, 15, 17, 13, 28, 30, 10, 14, 8]
 solution : [0, 5, 1, 12, 31]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, 128), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [21, 22, 23, 7, 18, 19, 16, 33, 2, 15, 17, 13, 28, 30, 10, 14, 8]
 solution : [0, 5, 1, 12, 31]


Solution : [0, 5, 1, 12, 31] has cost 30.


Decide in level 15 among pending : [21, 22, 23, 7, 18, 19, 16, 33, 2, 15, 17, 13, 28, 30, 10, 14, 8]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

Decide 13 with phase True at level 15

After decision at level 15
 pending : [21, 22, 23, 7, 18, 19, 16, 33, 2, 15, 17, 28, 30, 10, 14, 8]
 solution : [0, 5, 1, 12, 31, 13]


New level: 16
 pending : [21, 22, 23, 7, 18, 19, 16, 33, 2, 15, 17, 28, 30, 10, 14, 8]
 solution : [0, 5, 1, 12, 31, 13]


Before reduction : 
 pending  : [21, 22, 23, 7, 18, 19, 16, 33, 2, 15, 17, 28, 30, 10, 14, 8]
 solution : [0, 5, 1, 12, 31, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, 128), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

Covered at level 16 : {33, 2, 7, 8, 15, 16, 17}

After reduction : 
 pending  : [21, 22, 23, 18, 19, 28, 30, 10, 14]
 solution : [0, 5, 1, 12, 31, 13]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 28, 30, 10, 14]
 solution : [0, 5, 1, 12, 31, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 128), (15, 0), (16, 0), (17, 0), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 28, 30, 10, 14]
 solution : [0, 5, 1, 12, 31, 13]


Solution : [0, 5, 1, 12, 31, 13] has cost 36.


Before backtrack at level 16
 pending : [21, 22, 23, 18, 19, 28, 30, 10, 14]
 solution : [0, 5, 1, 12, 31, 13]

After backtrack at level 16
 pending : [21, 22, 23, 18, 19, 28, 30, 10, 14, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31, 13]


Invert decision for 13 at level 15


New level: 16
 pending : [21, 22, 23, 18, 19, 28, 30, 10, 14, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 28, 30, 10, 14, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 4), (19, 4), (20, -1), (21, 10), (22, 10), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 28, 30, 10, 14, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31]


Solution : [0, 5, 1, 12, 31] has cost 30.


Decide in level 16 among pending : [21, 22, 23, 18, 19, 28, 30, 10, 14, 7, 16, 33, 2, 15, 17, 8]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

Decide 10 with phase True at level 16

After decision at level 16
 pending : [21, 22, 23, 18, 19, 28, 30, 14, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31, 10]


New level: 17
 pending : [21, 22, 23, 18, 19, 28, 30, 14, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31, 10]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 28, 30, 14, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 128), (15, 64), (16, 8), (17, 16), (18, 32), (19, 32), (20, -1), (21, 96), (22, 96), (23, 96), (24, -1), (25, -1), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

Covered at level 17 : {28, 30, 14}

After reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31, 10]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31, 10]


Solution : [0, 5, 1, 12, 31, 10] has cost 43.


Before backtrack at level 17
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31, 10]

After backtrack at level 17
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8, 28, 30, 14]
 solution : [0, 5, 1, 12, 31, 10]


Invert decision for 10 at level 16


New level: 17
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8, 28, 30, 14]
 solution : [0, 5, 1, 12, 31]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8, 28, 30, 14]
 solution : [0, 5, 1, 12, 31]

Essensial at level 17 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

Covered at level 17 : {28, 30}

After reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31, 14]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31, 14]


Solution : [0, 5, 1, 12, 31, 14] has cost 36.


Before backtrack at level 17
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8]
 solution : [0, 5, 1, 12, 31, 14]

After backtrack at level 17
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8, 14, 28, 30]
 solution : [0, 5, 1, 12, 31]


Before backtrack at level 16
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8, 14, 28, 30]
 solution : [0, 5, 1, 12, 31]

After backtrack at level 16
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8, 14, 28, 30, 10]
 solution : [0, 5, 1, 12, 31]


Before backtrack at level 15
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8, 14, 28, 30, 10]
 solution : [0, 5, 1, 12, 31]

After backtrack at level 15
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8, 14, 28, 30, 10, 13]
 solution : [0, 5, 1, 12, 31]


Invert decision for 31 at level 14


New level: 15
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8, 14, 28, 30, 10, 13]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8, 14, 28, 30, 10, 13]
 solution : [0, 5, 1, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 8), (17, 16), (18, 4), (19, 4), (20, -1), (21, 18), (22, 18), (23, 18), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8, 14, 28, 30, 10, 13]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 15 among pending : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 8, 14, 28, 30, 10, 13]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 32)]

Decide 8 with phase True at level 15

After decision at level 15
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 14, 28, 30, 10, 13]
 solution : [0, 5, 1, 12, 8]


New level: 16
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 14, 28, 30, 10, 13]
 solution : [0, 5, 1, 12, 8]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2, 15, 17, 14, 28, 30, 10, 13]
 solution : [0, 5, 1, 12, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, 0), (14, 128), (15, 0), (16, 0), (17, 4), (18, 16), (19, 16), (20, -1), (21, 26), (22, 26), (23, 26), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 0)]

Covered at level 16 : {33, 2, 7, 13, 15, 16}

After reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 14, 28, 30, 10]
 solution : [0, 5, 1, 12, 8]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 14, 28, 30, 10]
 solution : [0, 5, 1, 12, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, 0), (14, 128), (15, 0), (16, 0), (17, 4), (18, 16), (19, 16), (20, -1), (21, 26), (22, 26), (23, 26), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 4), (18, 16), (19, 16), (20, -1), (21, 26), (22, 26), (23, 26), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 14, 28, 30, 10]
 solution : [0, 5, 1, 12, 8]


Solution : [0, 5, 1, 12, 8] has cost 26.


Decide in level 16 among pending : [21, 22, 23, 18, 19, 17, 14, 28, 30, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 4), (18, 16), (19, 16), (20, -1), (21, 26), (22, 26), (23, 26), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Decide 14 with phase True at level 16

After decision at level 16
 pending : [21, 22, 23, 18, 19, 17, 28, 30, 10]
 solution : [0, 5, 1, 12, 8, 14]


New level: 17
 pending : [21, 22, 23, 18, 19, 17, 28, 30, 10]
 solution : [0, 5, 1, 12, 8, 14]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 28, 30, 10]
 solution : [0, 5, 1, 12, 8, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 4), (18, 16), (19, 16), (20, -1), (21, 26), (22, 26), (23, 26), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {10, 17, 18, 19, 21, 22, 23, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 8, 14]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 8, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 8, 14]


Solution : [0, 5, 1, 12, 8, 14] has cost 32.


Before backtrack at level 17
 pending : []
 solution : [0, 5, 1, 12, 8, 14]

After backtrack at level 17
 pending : [21, 22, 23, 18, 19, 17, 28, 30, 10]
 solution : [0, 5, 1, 12, 8, 14]


Invert decision for 14 at level 16


New level: 17
 pending : [21, 22, 23, 18, 19, 17, 28, 30, 10]
 solution : [0, 5, 1, 12, 8]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 28, 30, 10]
 solution : [0, 5, 1, 12, 8]

Essensial at level 17 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {17, 18, 19, 21, 22, 23, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 8, 10]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 8, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 8, 10]


Solution : [0, 5, 1, 12, 8, 10] has cost 39.


Before backtrack at level 17
 pending : []
 solution : [0, 5, 1, 12, 8, 10]

After backtrack at level 17
 pending : [10, 21, 22, 23, 18, 19, 17, 28, 30]
 solution : [0, 5, 1, 12, 8]


Before backtrack at level 16
 pending : [10, 21, 22, 23, 18, 19, 17, 28, 30]
 solution : [0, 5, 1, 12, 8]

After backtrack at level 16
 pending : [10, 21, 22, 23, 18, 19, 17, 28, 30, 7, 16, 33, 2, 15, 13, 14]
 solution : [0, 5, 1, 12, 8]


Invert decision for 8 at level 15


New level: 16
 pending : [10, 21, 22, 23, 18, 19, 17, 28, 30, 7, 16, 33, 2, 15, 13, 14]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [10, 21, 22, 23, 18, 19, 17, 28, 30, 7, 16, 33, 2, 15, 13, 14]
 solution : [0, 5, 1, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 21, 22, 23, 18, 19, 17, 28, 30, 7, 16, 33, 2, 15, 13, 14]
 solution : [0, 5, 1, 12]


Solution : [0, 5, 1, 12] has cost 20.


Decide in level 16 among pending : [10, 21, 22, 23, 18, 19, 17, 28, 30, 7, 16, 33, 2, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 32)]

Decide 10 with phase True at level 16

After decision at level 16
 pending : [21, 22, 23, 18, 19, 17, 28, 30, 7, 16, 33, 2, 15, 13, 14]
 solution : [0, 5, 1, 12, 10]


New level: 17
 pending : [21, 22, 23, 18, 19, 17, 28, 30, 7, 16, 33, 2, 15, 13, 14]
 solution : [0, 5, 1, 12, 10]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 28, 30, 7, 16, 33, 2, 15, 13, 14]
 solution : [0, 5, 1, 12, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, 128), (14, 128), (15, 64), (16, 32), (17, 64), (18, 96), (19, 96), (20, -1), (21, 105), (22, 105), (23, 112), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, 0), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 32)]

Covered at level 17 : {28, 30, 14}

After reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15, 13]
 solution : [0, 5, 1, 12, 10]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15, 13]
 solution : [0, 5, 1, 12, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, 0), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32)]

Covered at level 17 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15, 13]
 solution : [0, 5, 1, 12, 10]


Solution : [0, 5, 1, 12, 10] has cost 33.


Before backtrack at level 17
 pending : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15, 13]
 solution : [0, 5, 1, 12, 10]

After backtrack at level 17
 pending : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15, 13, 28, 30, 14]
 solution : [0, 5, 1, 12, 10]


Invert decision for 10 at level 16


New level: 17
 pending : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15, 13, 28, 30, 14]
 solution : [0, 5, 1, 12]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15, 13, 28, 30, 14]
 solution : [0, 5, 1, 12]

Essensial at level 17 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 32)]

Covered at level 17 : {28, 30}

After reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15, 13]
 solution : [0, 5, 1, 12, 14]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15, 13]
 solution : [0, 5, 1, 12, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32)]

Covered at level 17 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15, 13]
 solution : [0, 5, 1, 12, 14]


Solution : [0, 5, 1, 12, 14] has cost 26.


Decide in level 17 among pending : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32)]

Decide 13 with phase True at level 17

After decision at level 17
 pending : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 14, 13]


New level: 18
 pending : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 14, 13]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 14, 13]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, 32), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 18 : {33, 2, 7, 15, 16, 17, 18, 19, 21, 22, 23}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 14, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 14, 13]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 12, 14, 13]


Solution : [0, 5, 1, 12, 14, 13] has cost 32.


Before backtrack at level 18
 pending : []
 solution : [0, 5, 1, 12, 14, 13]

After backtrack at level 18
 pending : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 14, 13]


Invert decision for 13 at level 17


New level: 18
 pending : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 14]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2, 15]
 solution : [0, 5, 1, 12, 14]

Essensial at level 18 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15]


Solution : [0, 5, 1, 12, 14, 15] has cost 28.


Decide in level 18 among pending : [21, 22, 23, 18, 19, 17, 7, 16, 33, 2]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 17 with phase True at level 18

After decision at level 18
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15, 17]


New level: 19
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15, 17]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 64), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

Covered at level 19 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15, 17]


Solution : [0, 5, 1, 12, 14, 15, 17] has cost 38.


Before backtrack at level 19
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15, 17]

After backtrack at level 19
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15, 17]


Invert decision for 17 at level 18


New level: 19
 pending : [21, 22, 23, 18, 19, 7, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4), (17, -1), (18, 6), (19, 6), (20, -1), (21, 19), (22, 19), (23, 19), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 7, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15]


Solution : [0, 5, 1, 12, 14, 15] has cost 28.


Decide in level 19 among pending : [21, 22, 23, 18, 19, 7, 16, 33, 2]

Coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

Decide 7 with phase True at level 19

After decision at level 19
 pending : [21, 22, 23, 18, 19, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15, 7]


New level: 20
 pending : [21, 22, 23, 18, 19, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15, 7]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15, 7]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, -1), (18, 10), (19, 10), (20, -1), (21, 22), (22, 22), (23, 22), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 20 : {33, 2, 16, 18, 19}

After reduction : 
 pending  : [21, 22, 23]
 solution : [0, 5, 1, 12, 14, 15, 7]


Before reduction : 
 pending  : [21, 22, 23]
 solution : [0, 5, 1, 12, 14, 15, 7]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [21, 22, 23]
 solution : [0, 5, 1, 12, 14, 15, 7]


Solution : [0, 5, 1, 12, 14, 15, 7] has cost 37.


Before backtrack at level 20
 pending : [21, 22, 23]
 solution : [0, 5, 1, 12, 14, 15, 7]

After backtrack at level 20
 pending : [21, 22, 23, 18, 19, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15, 7]


Invert decision for 7 at level 19


New level: 20
 pending : [21, 22, 23, 18, 19, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 16, 33, 2]
 solution : [0, 5, 1, 12, 14, 15]

Essensial at level 20 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

Covered at level 20 : {16, 33, 18, 19}

After reduction : 
 pending  : [21, 22, 23]
 solution : [0, 5, 1, 12, 14, 15, 2]


Before reduction : 
 pending  : [21, 22, 23]
 solution : [0, 5, 1, 12, 14, 15, 2]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [21, 22, 23]
 solution : [0, 5, 1, 12, 14, 15, 2]


Solution : [0, 5, 1, 12, 14, 15, 2] has cost 37.


Before backtrack at level 20
 pending : [21, 22, 23]
 solution : [0, 5, 1, 12, 14, 15, 2]

After backtrack at level 20
 pending : [21, 22, 23, 2, 18, 19, 16, 33]
 solution : [0, 5, 1, 12, 14, 15]


Before backtrack at level 19
 pending : [21, 22, 23, 2, 18, 19, 16, 33]
 solution : [0, 5, 1, 12, 14, 15]

After backtrack at level 19
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7]
 solution : [0, 5, 1, 12, 14, 15]


Before backtrack at level 18
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7]
 solution : [0, 5, 1, 12, 14, 15]

After backtrack at level 18
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17]
 solution : [0, 5, 1, 12, 14]


Before backtrack at level 17
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17]
 solution : [0, 5, 1, 12, 14]

After backtrack at level 17
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13]
 solution : [0, 5, 1, 12]


Before backtrack at level 16
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13]
 solution : [0, 5, 1, 12]

After backtrack at level 16
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10]
 solution : [0, 5, 1, 12]


Before backtrack at level 15
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10]
 solution : [0, 5, 1, 12]

After backtrack at level 15
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8]
 solution : [0, 5, 1, 12]


Before backtrack at level 14
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8]
 solution : [0, 5, 1, 12]

After backtrack at level 14
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31]
 solution : [0, 5, 1, 12]


Before backtrack at level 13
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31]
 solution : [0, 5, 1, 12]

After backtrack at level 13
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11]
 solution : [0, 5, 1, 12]


Before backtrack at level 12
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11]
 solution : [0, 5, 1, 12]

After backtrack at level 12
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6]
 solution : [0, 5, 1, 12]


Before backtrack at level 11
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6]
 solution : [0, 5, 1, 12]

After backtrack at level 11
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4]
 solution : [0, 5, 1, 12]


Before backtrack at level 10
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4]
 solution : [0, 5, 1, 12]

After backtrack at level 10
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32]
 solution : [0, 5, 1, 12]


Before backtrack at level 9
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32]
 solution : [0, 5, 1, 12]

After backtrack at level 9
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26]
 solution : [0, 5, 1, 12]


Before backtrack at level 8
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26]
 solution : [0, 5, 1, 12]

After backtrack at level 8
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24]
 solution : [0, 5, 1, 12]


Before backtrack at level 7
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24]
 solution : [0, 5, 1, 12]

After backtrack at level 7
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27]
 solution : [0, 5, 1, 12]


Before backtrack at level 6
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27]
 solution : [0, 5, 1, 12]

After backtrack at level 6
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25]
 solution : [0, 5, 1, 12]


Before backtrack at level 5
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25]
 solution : [0, 5, 1, 12]

After backtrack at level 5
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20]
 solution : [0, 5, 1, 12]


Before backtrack at level 4
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20]
 solution : [0, 5, 1, 12]

After backtrack at level 4
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3]
 solution : [0, 5, 1, 12]


Before backtrack at level 3
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3]
 solution : [0, 5, 1, 12]

After backtrack at level 3
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3, 29, 9]
 solution : [0, 5, 1, 12]


Invert decision for 12 at level 2


New level: 3
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3, 29, 9]
 solution : [0, 5, 1]


Before reduction : 
 pending  : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3, 29, 9]
 solution : [0, 5, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8), (22, 8), (23, 8), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 264), (7, 64), (8, 128), (9, 576), (10, 320), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 64), (18, 192), (19, 96), (20, 224), (21, 212), (22, 136), (23, 228), (24, 192), (25, 420), (26, 552), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Covered at level 3 : set()

After reduction : 
 pending  : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3, 29, 9]
 solution : [0, 5, 1]


Solution : [0, 5, 1] has cost 10.


Decide in level 3 among pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3, 29, 9]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 264), (7, 64), (8, 128), (9, 576), (10, 320), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 64), (18, 192), (19, 96), (20, 224), (21, 212), (22, 136), (23, 228), (24, 192), (25, 420), (26, 552), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Decide 9 with phase True at level 3

After decision at level 3
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3, 29]
 solution : [0, 5, 1, 9]


New level: 4
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3, 29]
 solution : [0, 5, 1, 9]


Before reduction : 
 pending  : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3, 29]
 solution : [0, 5, 1, 9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 264), (7, 64), (8, 128), (9, 576), (10, 320), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 64), (18, 192), (19, 96), (20, 224), (21, 212), (22, 136), (23, 228), (24, 192), (25, 420), (26, 552), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, 320), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 16), (18, 160), (19, 80), (20, 16), (21, 44), (22, 22), (23, 68), (24, 20), (25, 56), (26, 148), (27, 48), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Covered at level 4 : set()

After reduction : 
 pending  : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3, 29]
 solution : [0, 5, 1, 9]


Solution : [0, 5, 1, 9] has cost 31.


Decide in level 4 among pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 13, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3, 29]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, 320), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 16), (18, 160), (19, 80), (20, 16), (21, 44), (22, 22), (23, 68), (24, 20), (25, 56), (26, 148), (27, 48), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Decide 13 with phase True at level 4

After decision at level 4
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3, 29]
 solution : [0, 5, 1, 9, 13]


New level: 5
 pending : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3, 29]
 solution : [0, 5, 1, 9, 13]


Before reduction : 
 pending  : [21, 22, 23, 2, 18, 19, 16, 33, 7, 15, 17, 14, 28, 30, 10, 8, 31, 11, 6, 4, 32, 26, 24, 27, 25, 20, 3, 29]
 solution : [0, 5, 1, 9, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, 320), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 16), (18, 160), (19, 80), (20, 16), (21, 44), (22, 22), (23, 68), (24, 20), (25, 56), (26, 148), (27, 48), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, 320), (11, 512), (12, -1), (13, -1), (14, 128), (15, 0), (16, 2), (17, 4), (18, 136), (19, 68), (20, 4), (21, 12), (22, 6), (23, 17), (24, 20), (25, 14), (26, 37), (27, 48), (28, 128), (29, 32), (30, 64), (31, 64), (32, 128), (33, 8)]

Covered at level 5 : {2, 3, 4, 6, 7, 8, 15}

After reduction : 
 pending  : [21, 22, 23, 18, 19, 16, 33, 17, 14, 28, 30, 10, 31, 11, 32, 26, 24, 27, 25, 20, 29]
 solution : [0, 5, 1, 9, 13]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 16, 33, 17, 14, 28, 30, 10, 31, 11, 32, 26, 24, 27, 25, 20, 29]
 solution : [0, 5, 1, 9, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, 320), (11, 512), (12, -1), (13, -1), (14, 128), (15, 0), (16, 2), (17, 4), (18, 136), (19, 68), (20, 4), (21, 12), (22, 6), (23, 17), (24, 20), (25, 14), (26, 37), (27, 48), (28, 128), (29, 32), (30, 64), (31, 64), (32, 128), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 320), (11, 512), (12, -1), (13, -1), (14, 128), (15, -1), (16, 2), (17, 4), (18, 136), (19, 68), (20, 4), (21, 12), (22, 6), (23, 17), (24, 20), (25, 14), (26, 37), (27, 48), (28, 128), (29, 32), (30, 64), (31, 64), (32, 128), (33, 8)]

Covered at level 5 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 16, 33, 17, 14, 28, 30, 10, 31, 11, 32, 26, 24, 27, 25, 20, 29]
 solution : [0, 5, 1, 9, 13]


Solution : [0, 5, 1, 9, 13] has cost 37.


Before backtrack at level 5
 pending : [21, 22, 23, 18, 19, 16, 33, 17, 14, 28, 30, 10, 31, 11, 32, 26, 24, 27, 25, 20, 29]
 solution : [0, 5, 1, 9, 13]

After backtrack at level 5
 pending : [21, 22, 23, 18, 19, 16, 33, 17, 14, 28, 30, 10, 31, 11, 32, 26, 24, 27, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3]
 solution : [0, 5, 1, 9, 13]


Invert decision for 13 at level 4


New level: 5
 pending : [21, 22, 23, 18, 19, 16, 33, 17, 14, 28, 30, 10, 31, 11, 32, 26, 24, 27, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3]
 solution : [0, 5, 1, 9]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 16, 33, 17, 14, 28, 30, 10, 31, 11, 32, 26, 24, 27, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3]
 solution : [0, 5, 1, 9]

Essensial at level 5 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 320), (11, 512), (12, -1), (13, -1), (14, 128), (15, -1), (16, 2), (17, 4), (18, 136), (19, 68), (20, 4), (21, 12), (22, 6), (23, 17), (24, 20), (25, 14), (26, 37), (27, 48), (28, 128), (29, 32), (30, 64), (31, 64), (32, 128), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, 64), (16, 128), (17, 4), (18, 10), (19, 5), (20, 4), (21, 10), (22, 5), (23, 15), (24, 0), (25, 14), (26, 37), (27, 0), (28, 0), (29, 32), (30, 0), (31, 4), (32, 8), (33, 256)]

Covered at level 5 : {10, 14, 24, 27, 28, 30}

After reduction : 
 pending  : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 26, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3]
 solution : [0, 5, 1, 9, 11]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 26, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3]
 solution : [0, 5, 1, 9, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, 64), (16, 128), (17, 4), (18, 10), (19, 5), (20, 4), (21, 10), (22, 5), (23, 15), (24, 0), (25, 14), (26, 37), (27, 0), (28, 0), (29, 32), (30, 0), (31, 4), (32, 8), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 128), (17, 4), (18, 10), (19, 5), (20, 4), (21, 10), (22, 5), (23, 15), (24, -1), (25, 14), (26, 37), (27, -1), (28, -1), (29, 32), (30, -1), (31, 4), (32, 8), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 26, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3]
 solution : [0, 5, 1, 9, 11]


Solution : [0, 5, 1, 9, 11] has cost 37.


Before backtrack at level 5
 pending : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 26, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3]
 solution : [0, 5, 1, 9, 11]

After backtrack at level 5
 pending : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 26, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27]
 solution : [0, 5, 1, 9]


Before backtrack at level 4
 pending : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 26, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27]
 solution : [0, 5, 1, 9]

After backtrack at level 4
 pending : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 26, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13]
 solution : [0, 5, 1, 9]


Invert decision for 9 at level 3


New level: 4
 pending : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 26, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13]
 solution : [0, 5, 1]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 26, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13]
 solution : [0, 5, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 128), (17, 4), (18, 10), (19, 5), (20, 4), (21, 10), (22, 5), (23, 15), (24, -1), (25, 14), (26, 37), (27, -1), (28, -1), (29, 32), (30, -1), (31, 4), (32, 8), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 264), (7, 64), (8, 128), (9, -1), (10, 320), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 64), (18, 192), (19, 96), (20, 224), (21, 212), (22, 136), (23, 228), (24, 192), (25, 420), (26, 552), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Covered at level 4 : set()

After reduction : 
 pending  : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 26, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13]
 solution : [0, 5, 1]


Solution : [0, 5, 1] has cost 10.


Decide in level 4 among pending : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 26, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 264), (7, 64), (8, 128), (9, -1), (10, 320), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 64), (18, 192), (19, 96), (20, 224), (21, 212), (22, 136), (23, 228), (24, 192), (25, 420), (26, 552), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Decide 26 with phase True at level 4

After decision at level 4
 pending : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13]
 solution : [0, 5, 1, 26]


New level: 5
 pending : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13]
 solution : [0, 5, 1, 26]


Before reduction : 
 pending  : [21, 22, 23, 18, 19, 16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13]
 solution : [0, 5, 1, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 264), (7, 64), (8, 128), (9, -1), (10, 320), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 64), (18, 192), (19, 96), (20, 224), (21, 212), (22, 136), (23, 228), (24, 192), (25, 420), (26, 552), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 256), (7, 64), (8, 128), (9, -1), (10, 288), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 2), (18, 0), (19, 0), (20, 5), (21, 0), (22, 0), (23, 0), (24, 192), (25, 5), (26, -1), (27, 384), (28, 128), (29, 128), (30, 64), (31, 2), (32, 4), (33, 256)]

Covered at level 5 : {18, 19, 21, 22, 23}

After reduction : 
 pending  : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13]
 solution : [0, 5, 1, 26]


Before reduction : 
 pending  : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13]
 solution : [0, 5, 1, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 256), (7, 64), (8, 128), (9, -1), (10, 288), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 2), (18, 0), (19, 0), (20, 5), (21, 0), (22, 0), (23, 0), (24, 192), (25, 5), (26, -1), (27, 384), (28, 128), (29, 128), (30, 64), (31, 2), (32, 4), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 256), (7, 64), (8, 128), (9, -1), (10, 288), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 2), (18, -1), (19, -1), (20, 5), (21, -1), (22, -1), (23, -1), (24, 192), (25, 5), (26, -1), (27, 260), (28, 128), (29, 128), (30, 64), (31, 2), (32, 4), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13]
 solution : [0, 5, 1, 26]


Solution : [0, 5, 1, 26] has cost 44.


Before backtrack at level 5
 pending : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13]
 solution : [0, 5, 1, 26]

After backtrack at level 5
 pending : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 26]


Invert decision for 26 at level 4


New level: 5
 pending : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13, 21, 22, 23, 18, 19]
 solution : [0, 5, 1]


Before reduction : 
 pending  : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13, 21, 22, 23, 18, 19]
 solution : [0, 5, 1]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 256), (7, 64), (8, 128), (9, -1), (10, 288), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 2), (18, -1), (19, -1), (20, 5), (21, -1), (22, -1), (23, -1), (24, 192), (25, 5), (26, -1), (27, 260), (28, 128), (29, 128), (30, 64), (31, 2), (32, 4), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 264), (7, 64), (8, 128), (9, -1), (10, 320), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 64), (18, 192), (19, 96), (20, 224), (21, 212), (22, 136), (23, 228), (24, 192), (25, 420), (26, -1), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13, 21, 22, 23, 18, 19]
 solution : [0, 5, 1]


Solution : [0, 5, 1] has cost 10.


Decide in level 5 among pending : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 11, 14, 28, 30, 10, 24, 27, 13, 21, 22, 23, 18, 19]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 264), (7, 64), (8, 128), (9, -1), (10, 320), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 64), (18, 192), (19, 96), (20, 224), (21, 212), (22, 136), (23, 228), (24, 192), (25, 420), (26, -1), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Decide 11 with phase True at level 5

After decision at level 5
 pending : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 14, 28, 30, 10, 24, 27, 13, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11]


New level: 6
 pending : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 14, 28, 30, 10, 24, 27, 13, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11]


Before reduction : 
 pending  : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 14, 28, 30, 10, 24, 27, 13, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 264), (7, 64), (8, 128), (9, -1), (10, 320), (11, 512), (12, -1), (13, 512), (14, 128), (15, 64), (16, 128), (17, 64), (18, 192), (19, 96), (20, 224), (21, 212), (22, 136), (23, 228), (24, 192), (25, 420), (26, -1), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, 0), (11, -1), (12, -1), (13, 512), (14, 0), (15, 64), (16, 128), (17, 64), (18, 20), (19, 10), (20, 194), (21, 44), (22, 22), (23, 45), (24, 5), (25, 393), (26, -1), (27, 12), (28, 0), (29, 32), (30, 0), (31, 16), (32, 32), (33, 256)]

Covered at level 6 : {10, 28, 14, 30}

After reduction : 
 pending  : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 13, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11]


Before reduction : 
 pending  : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 13, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, 0), (11, -1), (12, -1), (13, 512), (14, 0), (15, 64), (16, 128), (17, 64), (18, 20), (19, 10), (20, 194), (21, 44), (22, 22), (23, 45), (24, 5), (25, 393), (26, -1), (27, 12), (28, 0), (29, 32), (30, 0), (31, 16), (32, 32), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 64), (16, 128), (17, 64), (18, 20), (19, 10), (20, 194), (21, 44), (22, 22), (23, 45), (24, 5), (25, 393), (26, -1), (27, 12), (28, -1), (29, 32), (30, -1), (31, 16), (32, 32), (33, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 13, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11]


Solution : [0, 5, 1, 11] has cost 16.


Decide in level 6 among pending : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 13, 21, 22, 23, 18, 19]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 64), (16, 128), (17, 64), (18, 20), (19, 10), (20, 194), (21, 44), (22, 22), (23, 45), (24, 5), (25, 393), (26, -1), (27, 12), (28, -1), (29, 32), (30, -1), (31, 16), (32, 32), (33, 256)]

Decide 13 with phase True at level 6

After decision at level 6
 pending : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11, 13]


New level: 7
 pending : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11, 13]


Before reduction : 
 pending  : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 64), (16, 128), (17, 64), (18, 20), (19, 10), (20, 194), (21, 44), (22, 22), (23, 45), (24, 5), (25, 393), (26, -1), (27, 12), (28, -1), (29, 32), (30, -1), (31, 16), (32, 32), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 7 : {2, 3, 4, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 11, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 11, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 11, 13]


Solution : [0, 5, 1, 11, 13] has cost 22.


Before backtrack at level 7
 pending : []
 solution : [0, 5, 1, 11, 13]

After backtrack at level 7
 pending : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11, 13]


Invert decision for 13 at level 6


New level: 7
 pending : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11]


Before reduction : 
 pending  : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 128), (17, 64), (18, 20), (19, 10), (20, 194), (21, 44), (22, 22), (23, 45), (24, 5), (25, 393), (26, -1), (27, 12), (28, -1), (29, 32), (30, -1), (31, 16), (32, 32), (33, 256)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11]


Solution : [0, 5, 1, 11] has cost 16.


Decide in level 7 among pending : [16, 33, 17, 31, 32, 25, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 21, 22, 23, 18, 19]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 128), (17, 64), (18, 20), (19, 10), (20, 194), (21, 44), (22, 22), (23, 45), (24, 5), (25, 393), (26, -1), (27, 12), (28, -1), (29, 32), (30, -1), (31, 16), (32, 32), (33, 256)]

Decide 25 with phase True at level 7

After decision at level 7
 pending : [16, 33, 17, 31, 32, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11, 25]


New level: 8
 pending : [16, 33, 17, 31, 32, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11, 25]


Before reduction : 
 pending  : [16, 33, 17, 31, 32, 20, 29, 2, 7, 15, 8, 6, 4, 3, 24, 27, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 128), (17, 64), (18, 20), (19, 10), (20, 194), (21, 44), (22, 22), (23, 45), (24, 5), (25, 393), (26, -1), (27, 12), (28, -1), (29, 32), (30, -1), (31, 16), (32, 32), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 257), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 16), (17, 0), (18, 6), (19, 3), (20, 0), (21, 12), (22, 6), (23, 12), (24, 0), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, -1), (31, 2), (32, 4), (33, 64)]

Covered at level 8 : {24, 17, 27, 20}

After reduction : 
 pending  : [16, 33, 31, 32, 29, 2, 7, 15, 8, 6, 4, 3, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11, 25]


Before reduction : 
 pending  : [16, 33, 31, 32, 29, 2, 7, 15, 8, 6, 4, 3, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 257), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 16), (17, 0), (18, 6), (19, 3), (20, 0), (21, 12), (22, 6), (23, 12), (24, 0), (25, -1), (26, -1), (27, 0), (28, -1), (29, 8), (30, -1), (31, 2), (32, 4), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 257), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 16), (17, -1), (18, 6), (19, 3), (20, -1), (21, 12), (22, 6), (23, 12), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 2), (32, 4), (33, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 33, 31, 32, 29, 2, 7, 15, 8, 6, 4, 3, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11, 25]


Solution : [0, 5, 1, 11, 25] has cost 55.


Before backtrack at level 8
 pending : [16, 33, 31, 32, 29, 2, 7, 15, 8, 6, 4, 3, 21, 22, 23, 18, 19]
 solution : [0, 5, 1, 11, 25]

After backtrack at level 8
 pending : [16, 33, 31, 32, 29, 2, 7, 15, 8, 6, 4, 3, 21, 22, 23, 18, 19, 17, 20, 24, 27]
 solution : [0, 5, 1, 11, 25]


Invert decision for 25 at level 7


New level: 8
 pending : [16, 33, 31, 32, 29, 2, 7, 15, 8, 6, 4, 3, 21, 22, 23, 18, 19, 17, 20, 24, 27]
 solution : [0, 5, 1, 11]


Before reduction : 
 pending  : [16, 33, 31, 32, 29, 2, 7, 15, 8, 6, 4, 3, 21, 22, 23, 18, 19, 17, 20, 24, 27]
 solution : [0, 5, 1, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 257), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 16), (17, -1), (18, 6), (19, 3), (20, -1), (21, 12), (22, 6), (23, 12), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 2), (32, 4), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 128), (17, 64), (18, 20), (19, 10), (20, 194), (21, 44), (22, 22), (23, 45), (24, 5), (25, -1), (26, -1), (27, 12), (28, -1), (29, 32), (30, -1), (31, 16), (32, 32), (33, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 33, 31, 32, 29, 2, 7, 15, 8, 6, 4, 3, 21, 22, 23, 18, 19, 17, 20, 24, 27]
 solution : [0, 5, 1, 11]


Solution : [0, 5, 1, 11] has cost 16.


Decide in level 8 among pending : [16, 33, 31, 32, 29, 2, 7, 15, 8, 6, 4, 3, 21, 22, 23, 18, 19, 17, 20, 24, 27]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 128), (17, 64), (18, 20), (19, 10), (20, 194), (21, 44), (22, 22), (23, 45), (24, 5), (25, -1), (26, -1), (27, 12), (28, -1), (29, 32), (30, -1), (31, 16), (32, 32), (33, 256)]

Decide 6 with phase True at level 8

After decision at level 8
 pending : [16, 33, 31, 32, 29, 2, 7, 15, 8, 4, 3, 21, 22, 23, 18, 19, 17, 20, 24, 27]
 solution : [0, 5, 1, 11, 6]


New level: 9
 pending : [16, 33, 31, 32, 29, 2, 7, 15, 8, 4, 3, 21, 22, 23, 18, 19, 17, 20, 24, 27]
 solution : [0, 5, 1, 11, 6]


Before reduction : 
 pending  : [16, 33, 31, 32, 29, 2, 7, 15, 8, 4, 3, 21, 22, 23, 18, 19, 17, 20, 24, 27]
 solution : [0, 5, 1, 11, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 128), (5, -1), (6, 258), (7, 64), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 64), (16, 128), (17, 64), (18, 20), (19, 10), (20, 194), (21, 44), (22, 22), (23, 45), (24, 5), (25, -1), (26, -1), (27, 12), (28, -1), (29, 32), (30, -1), (31, 16), (32, 32), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, -1), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 9 : {2, 3, 4, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 11, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, -1), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 11, 6]


Solution : [0, 5, 1, 11, 6] has cost 29.


Before backtrack at level 9
 pending : []
 solution : [0, 5, 1, 11, 6]

After backtrack at level 9
 pending : [16, 33, 31, 32, 29, 2, 7, 15, 8, 4, 3, 21, 22, 23, 18, 19, 17, 20, 24, 27]
 solution : [0, 5, 1, 11, 6]


Invert decision for 6 at level 8


New level: 9
 pending : [16, 33, 31, 32, 29, 2, 7, 15, 8, 4, 3, 21, 22, 23, 18, 19, 17, 20, 24, 27]
 solution : [0, 5, 1, 11]


Before reduction : 
 pending  : [16, 33, 31, 32, 29, 2, 7, 15, 8, 4, 3, 21, 22, 23, 18, 19, 17, 20, 24, 27]
 solution : [0, 5, 1, 11]

Essensial at level 9 : {2, 3, 23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 9 : {32, 33, 4, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 11, 2, 3, 23]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 11, 2, 3, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 11, 2, 3, 23]


Solution : [0, 5, 1, 11, 2, 3, 23] has cost 64.


Before backtrack at level 9
 pending : []
 solution : [0, 5, 1, 11, 2, 3, 23]

After backtrack at level 9
 pending : [2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27]
 solution : [0, 5, 1, 11]


Before backtrack at level 8
 pending : [2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27]
 solution : [0, 5, 1, 11]

After backtrack at level 8
 pending : [2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6]
 solution : [0, 5, 1, 11]


Before backtrack at level 7
 pending : [2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6]
 solution : [0, 5, 1, 11]

After backtrack at level 7
 pending : [2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25]
 solution : [0, 5, 1, 11]


Before backtrack at level 6
 pending : [2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25]
 solution : [0, 5, 1, 11]

After backtrack at level 6
 pending : [2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 10, 13]
 solution : [0, 5, 1, 11]


Invert decision for 11 at level 5


New level: 6
 pending : [2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 10, 13]
 solution : [0, 5, 1]


Before reduction : 
 pending  : [2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 10, 13]
 solution : [0, 5, 1]

Essensial at level 6 : {10, 13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 6 : {2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 5, 1, 10, 13]


Before reduction : 
 pending  : []
 solution : [0, 5, 1, 10, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 1, 10, 13]


Solution : [0, 5, 1, 10, 13] has cost 29.


Before backtrack at level 6
 pending : []
 solution : [0, 5, 1, 10, 13]

After backtrack at level 6
 pending : [10, 13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30]
 solution : [0, 5, 1]


Before backtrack at level 5
 pending : [10, 13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30]
 solution : [0, 5, 1]

After backtrack at level 5
 pending : [10, 13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11]
 solution : [0, 5, 1]


Before backtrack at level 4
 pending : [10, 13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11]
 solution : [0, 5, 1]

After backtrack at level 4
 pending : [10, 13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11, 26]
 solution : [0, 5, 1]


Before backtrack at level 3
 pending : [10, 13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11, 26]
 solution : [0, 5, 1]

After backtrack at level 3
 pending : [10, 13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11, 26, 9]
 solution : [0, 5, 1]


Before backtrack at level 2
 pending : [10, 13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11, 26, 9]
 solution : [0, 5, 1]

After backtrack at level 2
 pending : [10, 13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11, 26, 9, 12]
 solution : [0, 5, 1]


Invert decision for 1 at level 1


New level: 2
 pending : [10, 13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11, 26, 9, 12]
 solution : [0, 5]


Before reduction : 
 pending  : [10, 13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11, 26, 9, 12]
 solution : [0, 5]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, 768), (11, 512), (12, 640), (13, 512), (14, 512), (15, 512), (16, 256), (17, 128), (18, 256), (19, 384), (20, 448), (21, 424), (22, 544), (23, 456), (24, 384), (25, 456), (26, 640), (27, 384), (28, 128), (29, 128), (30, 128), (31, 256), (32, 256), (33, 256)]

Covered at level 2 : set()

After reduction : 
 pending  : [10, 13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11, 26, 9, 12]
 solution : [0, 5]


Solution : [0, 5] has cost 7.


Decide in level 2 among pending : [10, 13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11, 26, 9, 12]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, 768), (11, 512), (12, 640), (13, 512), (14, 512), (15, 512), (16, 256), (17, 128), (18, 256), (19, 384), (20, 448), (21, 424), (22, 544), (23, 456), (24, 384), (25, 456), (26, 640), (27, 384), (28, 128), (29, 128), (30, 128), (31, 256), (32, 256), (33, 256)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11, 26, 9, 12]
 solution : [0, 5, 10]


New level: 3
 pending : [13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11, 26, 9, 12]
 solution : [0, 5, 10]


Before reduction : 
 pending  : [13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 30, 11, 26, 9, 12]
 solution : [0, 5, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, 768), (11, 512), (12, 640), (13, 512), (14, 512), (15, 512), (16, 256), (17, 128), (18, 256), (19, 384), (20, 448), (21, 424), (22, 544), (23, 456), (24, 384), (25, 456), (26, 640), (27, 384), (28, 128), (29, 128), (30, 128), (31, 256), (32, 256), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, 0), (31, 64), (32, 128), (33, 256)]

Covered at level 3 : {30}

After reduction : 
 pending  : [13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 11, 26, 9, 12]
 solution : [0, 5, 10]


Before reduction : 
 pending  : [13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 11, 26, 9, 12]
 solution : [0, 5, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, 0), (31, 64), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Covered at level 3 : set()

After reduction : 
 pending  : [13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 11, 26, 9, 12]
 solution : [0, 5, 10]


Solution : [0, 5, 10] has cost 20.


Decide in level 3 among pending : [13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 6, 25, 14, 28, 11, 26, 9, 12]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Decide 6 with phase True at level 3

After decision at level 3
 pending : [13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 9, 12]
 solution : [0, 5, 10, 6]


New level: 4
 pending : [13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 9, 12]
 solution : [0, 5, 10, 6]


Before reduction : 
 pending  : [13, 2, 3, 23, 16, 33, 31, 32, 29, 7, 15, 8, 4, 21, 22, 18, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 9, 12]
 solution : [0, 5, 10, 6]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 576), (7, 256), (8, 512), (9, 576), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 1), (5, -1), (6, -1), (7, 64), (8, 128), (9, 576), (10, -1), (11, 64), (12, 64), (13, 128), (14, 128), (15, 256), (16, 0), (17, 2), (18, 0), (19, 9), (20, 5), (21, 0), (22, 20), (23, 0), (24, 5), (25, 24), (26, 22), (27, 40), (28, 16), (29, 16), (30, -1), (31, 0), (32, 32), (33, 32)]

Covered at level 4 : {2, 3, 16, 18, 21, 23, 31}

After reduction : 
 pending  : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 9, 12]
 solution : [0, 5, 10, 6]


Before reduction : 
 pending  : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 9, 12]
 solution : [0, 5, 10, 6]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 1), (5, -1), (6, -1), (7, 64), (8, 128), (9, 576), (10, -1), (11, 64), (12, 64), (13, 128), (14, 128), (15, 256), (16, 0), (17, 2), (18, 0), (19, 9), (20, 5), (21, 0), (22, 20), (23, 0), (24, 5), (25, 24), (26, 22), (27, 40), (28, 16), (29, 16), (30, -1), (31, 0), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, 64), (8, 128), (9, 576), (10, -1), (11, 64), (12, 64), (13, 128), (14, 128), (15, 256), (16, -1), (17, 2), (18, -1), (19, 9), (20, 5), (21, -1), (22, 20), (23, -1), (24, 5), (25, 24), (26, 22), (27, 40), (28, 16), (29, 16), (30, -1), (31, -1), (32, 32), (33, 32)]

Covered at level 4 : set()

After reduction : 
 pending  : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 9, 12]
 solution : [0, 5, 10, 6]


Solution : [0, 5, 10, 6] has cost 33.


Before backtrack at level 4
 pending : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 9, 12]
 solution : [0, 5, 10, 6]

After backtrack at level 4
 pending : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 9, 12, 2, 3, 23, 16, 31, 21, 18]
 solution : [0, 5, 10, 6]


Invert decision for 6 at level 3


New level: 4
 pending : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 9, 12, 2, 3, 23, 16, 31, 21, 18]
 solution : [0, 5, 10]


Before reduction : 
 pending  : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 9, 12, 2, 3, 23, 16, 31, 21, 18]
 solution : [0, 5, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, 64), (8, 128), (9, 576), (10, -1), (11, 64), (12, 64), (13, 128), (14, 128), (15, 256), (16, -1), (17, 2), (18, -1), (19, 9), (20, 5), (21, -1), (22, 20), (23, -1), (24, 5), (25, 24), (26, 22), (27, 40), (28, 16), (29, 16), (30, -1), (31, -1), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, 576), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Covered at level 4 : set()

After reduction : 
 pending  : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 9, 12, 2, 3, 23, 16, 31, 21, 18]
 solution : [0, 5, 10]


Solution : [0, 5, 10] has cost 20.


Decide in level 4 among pending : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 9, 12, 2, 3, 23, 16, 31, 21, 18]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, 576), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Decide 9 with phase True at level 4

After decision at level 4
 pending : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18]
 solution : [0, 5, 10, 9]


New level: 5
 pending : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18]
 solution : [0, 5, 10, 9]


Before reduction : 
 pending  : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 24, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18]
 solution : [0, 5, 10, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, 576), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 16), (18, 48), (19, 40), (20, 16), (21, 41), (22, 40), (23, 58), (24, 0), (25, 28), (26, 73), (27, 6), (28, 32), (29, 64), (30, -1), (31, 16), (32, 128), (33, 256)]

Covered at level 5 : {24}

After reduction : 
 pending  : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18]
 solution : [0, 5, 10, 9]


Before reduction : 
 pending  : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18]
 solution : [0, 5, 10, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 16), (18, 48), (19, 40), (20, 16), (21, 41), (22, 40), (23, 58), (24, 0), (25, 28), (26, 73), (27, 6), (28, 32), (29, 64), (30, -1), (31, 16), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 16), (18, 48), (19, 40), (20, 16), (21, 41), (22, 40), (23, 58), (24, -1), (25, 28), (26, 73), (27, 6), (28, 32), (29, 64), (30, -1), (31, 16), (32, 128), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18]
 solution : [0, 5, 10, 9]


Solution : [0, 5, 10, 9] has cost 41.


Before backtrack at level 5
 pending : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18]
 solution : [0, 5, 10, 9]

After backtrack at level 5
 pending : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18, 24]
 solution : [0, 5, 10, 9]


Invert decision for 9 at level 4


New level: 5
 pending : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18, 24]
 solution : [0, 5, 10]


Before reduction : 
 pending  : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18, 24]
 solution : [0, 5, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 16), (18, 48), (19, 40), (20, 16), (21, 41), (22, 40), (23, 58), (24, -1), (25, 28), (26, 73), (27, 6), (28, 32), (29, 64), (30, -1), (31, 16), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18, 24]
 solution : [0, 5, 10]


Solution : [0, 5, 10] has cost 20.


Decide in level 5 among pending : [13, 33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18, 24]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Decide 13 with phase True at level 5

After decision at level 5
 pending : [33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18, 24]
 solution : [0, 5, 10, 13]


New level: 6
 pending : [33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18, 24]
 solution : [0, 5, 10, 13]


Before reduction : 
 pending  : [33, 32, 29, 7, 15, 8, 4, 22, 19, 17, 20, 27, 25, 14, 28, 11, 26, 12, 2, 3, 23, 16, 31, 21, 18, 24]
 solution : [0, 5, 10, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 128), (12, 288), (13, 512), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 128), (15, 512), (16, 16), (17, 128), (18, 5), (19, 80), (20, 385), (21, 5), (22, 176), (23, 25), (24, 40), (25, 8), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, 8), (32, 0), (33, 0)]

Covered at level 6 : {32, 33, 11, 12, 26, 27, 28, 29}

After reduction : 
 pending  : [7, 15, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24]
 solution : [0, 5, 10, 13]


Before reduction : 
 pending  : [7, 15, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24]
 solution : [0, 5, 10, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 128), (15, 512), (16, 16), (17, 128), (18, 5), (19, 80), (20, 385), (21, 5), (22, 176), (23, 25), (24, 40), (25, 8), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, 8), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 128), (15, 512), (16, 16), (17, 128), (18, 5), (19, 80), (20, 385), (21, 5), (22, 176), (23, 25), (24, 40), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [7, 15, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24]
 solution : [0, 5, 10, 13]


Solution : [0, 5, 10, 13] has cost 26.


Before backtrack at level 6
 pending : [7, 15, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24]
 solution : [0, 5, 10, 13]

After backtrack at level 6
 pending : [7, 15, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 13]


Invert decision for 13 at level 5


New level: 6
 pending : [7, 15, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10]


Before reduction : 
 pending  : [7, 15, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 128), (15, 512), (16, 16), (17, 128), (18, 5), (19, 80), (20, 385), (21, 5), (22, 176), (23, 25), (24, 40), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [7, 15, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10]


Solution : [0, 5, 10] has cost 20.


Decide in level 6 among pending : [7, 15, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Decide 15 with phase True at level 6

After decision at level 6
 pending : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15]


New level: 7
 pending : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15]


Before reduction : 
 pending  : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 128), (15, 512), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 256), (17, 128), (18, 128), (19, 20), (20, 416), (21, 209), (22, 44), (23, 210), (24, 5), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15]


Solution : [0, 5, 10, 15] has cost 22.


Decide in level 7 among pending : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 3, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 256), (17, 128), (18, 128), (19, 20), (20, 416), (21, 209), (22, 44), (23, 210), (24, 5), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Decide 3 with phase True at level 7

After decision at level 7
 pending : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15, 3]


New level: 8
 pending : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15, 3]


Before reduction : 
 pending  : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 256), (17, 128), (18, 128), (19, 20), (20, 416), (21, 209), (22, 44), (23, 210), (24, 5), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 1), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 64), (12, 132), (13, -1), (14, 2), (15, -1), (16, 16), (17, 128), (18, 20), (19, 20), (20, 386), (21, 44), (22, 44), (23, 113), (24, 5), (25, 393), (26, 209), (27, 96), (28, 16), (29, 32), (30, -1), (31, 16), (32, 128), (33, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15, 3]


Solution : [0, 5, 10, 15, 3] has cost 27.


Before backtrack at level 8
 pending : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15, 3]

After backtrack at level 8
 pending : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15, 3]


Invert decision for 3 at level 7


New level: 8
 pending : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15]


Before reduction : 
 pending  : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 1), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 64), (12, 132), (13, -1), (14, 2), (15, -1), (16, 16), (17, 128), (18, 20), (19, 20), (20, 386), (21, 44), (22, 44), (23, 113), (24, 5), (25, 393), (26, 209), (27, 96), (28, 16), (29, 32), (30, -1), (31, 16), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 256), (17, 128), (18, 128), (19, 20), (20, 416), (21, 209), (22, 44), (23, 210), (24, 5), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15]


Solution : [0, 5, 10, 15] has cost 22.


Decide in level 8 among pending : [7, 8, 4, 22, 19, 17, 20, 25, 14, 2, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 256), (17, 128), (18, 128), (19, 20), (20, 416), (21, 209), (22, 44), (23, 210), (24, 5), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Decide 25 with phase True at level 8

After decision at level 8
 pending : [7, 8, 4, 22, 19, 17, 20, 14, 2, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15, 25]


New level: 9
 pending : [7, 8, 4, 22, 19, 17, 20, 14, 2, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15, 25]


Before reduction : 
 pending  : [7, 8, 4, 22, 19, 17, 20, 14, 2, 23, 16, 31, 21, 18, 24, 33, 32, 29, 27, 28, 11, 26, 12]
 solution : [0, 5, 10, 15, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 256), (17, 128), (18, 128), (19, 20), (20, 416), (21, 209), (22, 44), (23, 210), (24, 5), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 264), (13, -1), (14, 2), (15, -1), (16, 32), (17, 2), (18, 48), (19, 10), (20, 2), (21, 153), (22, 38), (23, 72), (24, 0), (25, -1), (26, 64), (27, 0), (28, 8), (29, 16), (30, -1), (31, 8), (32, 32), (33, 64)]

Covered at level 9 : {24, 27}

After reduction : 
 pending  : [7, 8, 4, 22, 19, 17, 20, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12]
 solution : [0, 5, 10, 15, 25]


Before reduction : 
 pending  : [7, 8, 4, 22, 19, 17, 20, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12]
 solution : [0, 5, 10, 15, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 264), (13, -1), (14, 2), (15, -1), (16, 32), (17, 2), (18, 48), (19, 10), (20, 2), (21, 153), (22, 38), (23, 72), (24, 0), (25, -1), (26, 64), (27, 0), (28, 8), (29, 16), (30, -1), (31, 8), (32, 32), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 264), (13, -1), (14, 2), (15, -1), (16, 32), (17, 2), (18, 48), (19, 10), (20, 2), (21, 153), (22, 38), (23, 72), (24, -1), (25, -1), (26, 64), (27, -1), (28, 8), (29, 16), (30, -1), (31, 8), (32, 32), (33, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 8, 4, 22, 19, 17, 20, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12]
 solution : [0, 5, 10, 15, 25]


Solution : [0, 5, 10, 15, 25] has cost 61.


Before backtrack at level 9
 pending : [7, 8, 4, 22, 19, 17, 20, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12]
 solution : [0, 5, 10, 15, 25]

After backtrack at level 9
 pending : [7, 8, 4, 22, 19, 17, 20, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 24, 27]
 solution : [0, 5, 10, 15, 25]


Invert decision for 25 at level 8


New level: 9
 pending : [7, 8, 4, 22, 19, 17, 20, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 24, 27]
 solution : [0, 5, 10, 15]


Before reduction : 
 pending  : [7, 8, 4, 22, 19, 17, 20, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 24, 27]
 solution : [0, 5, 10, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 264), (13, -1), (14, 2), (15, -1), (16, 32), (17, 2), (18, 48), (19, 10), (20, 2), (21, 153), (22, 38), (23, 72), (24, -1), (25, -1), (26, 64), (27, -1), (28, 8), (29, 16), (30, -1), (31, 8), (32, 32), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 256), (17, 128), (18, 128), (19, 20), (20, 416), (21, 209), (22, 44), (23, 210), (24, 5), (25, -1), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 8, 4, 22, 19, 17, 20, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 24, 27]
 solution : [0, 5, 10, 15]


Solution : [0, 5, 10, 15] has cost 22.


Decide in level 9 among pending : [7, 8, 4, 22, 19, 17, 20, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 24, 27]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 256), (17, 128), (18, 128), (19, 20), (20, 416), (21, 209), (22, 44), (23, 210), (24, 5), (25, -1), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Decide 20 with phase True at level 9

After decision at level 9
 pending : [7, 8, 4, 22, 19, 17, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 24, 27]
 solution : [0, 5, 10, 15, 20]


New level: 10
 pending : [7, 8, 4, 22, 19, 17, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 24, 27]
 solution : [0, 5, 10, 15, 20]


Before reduction : 
 pending  : [7, 8, 4, 22, 19, 17, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 24, 27]
 solution : [0, 5, 10, 15, 20]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 256), (17, 128), (18, 128), (19, 20), (20, 416), (21, 209), (22, 44), (23, 210), (24, 5), (25, -1), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 32), (17, 0), (18, 32), (19, 6), (20, -1), (21, 73), (22, 12), (23, 153), (24, 0), (25, -1), (26, 201), (27, 10), (28, 32), (29, 64), (30, -1), (31, 16), (32, 128), (33, 256)]

Covered at level 10 : {24, 17}

After reduction : 
 pending  : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 27]
 solution : [0, 5, 10, 15, 20]


Before reduction : 
 pending  : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 27]
 solution : [0, 5, 10, 15, 20]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 32), (17, 0), (18, 32), (19, 6), (20, -1), (21, 73), (22, 12), (23, 153), (24, 0), (25, -1), (26, 201), (27, 10), (28, 32), (29, 64), (30, -1), (31, 16), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 32), (17, -1), (18, 32), (19, 6), (20, -1), (21, 73), (22, 12), (23, 153), (24, -1), (25, -1), (26, 201), (27, 10), (28, 32), (29, 64), (30, -1), (31, 16), (32, 128), (33, 256)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 27]
 solution : [0, 5, 10, 15, 20]


Solution : [0, 5, 10, 15, 20] has cost 56.


Before backtrack at level 10
 pending : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 27]
 solution : [0, 5, 10, 15, 20]

After backtrack at level 10
 pending : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 27, 17, 24]
 solution : [0, 5, 10, 15, 20]


Invert decision for 20 at level 9


New level: 10
 pending : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 27, 17, 24]
 solution : [0, 5, 10, 15]


Before reduction : 
 pending  : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 27, 17, 24]
 solution : [0, 5, 10, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 32), (17, -1), (18, 32), (19, 6), (20, -1), (21, 73), (22, 12), (23, 153), (24, -1), (25, -1), (26, 201), (27, 10), (28, 32), (29, 64), (30, -1), (31, 16), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 256), (17, 128), (18, 128), (19, 20), (20, -1), (21, 209), (22, 44), (23, 210), (24, 5), (25, -1), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 27, 17, 24]
 solution : [0, 5, 10, 15]


Solution : [0, 5, 10, 15] has cost 22.


Decide in level 10 among pending : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 12, 27, 17, 24]

Coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 256), (17, 128), (18, 128), (19, 20), (20, -1), (21, 209), (22, 44), (23, 210), (24, 5), (25, -1), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Decide 12 with phase True at level 10

After decision at level 10
 pending : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 27, 17, 24]
 solution : [0, 5, 10, 15, 12]


New level: 11
 pending : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 27, 17, 24]
 solution : [0, 5, 10, 15, 12]


Before reduction : 
 pending  : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 29, 28, 11, 26, 27, 17, 24]
 solution : [0, 5, 10, 15, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, -1), (4, 256), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 2), (15, -1), (16, 256), (17, 128), (18, 128), (19, 20), (20, -1), (21, 209), (22, 44), (23, 210), (24, 5), (25, -1), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 4), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 2), (15, -1), (16, 16), (17, 128), (18, 20), (19, 20), (20, -1), (21, 44), (22, 44), (23, 22), (24, 5), (25, -1), (26, 26), (27, 6), (28, 0), (29, 0), (30, -1), (31, 8), (32, 8), (33, 8)]

Covered at level 11 : {11, 28, 29}

After reduction : 
 pending  : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 26, 27, 17, 24]
 solution : [0, 5, 10, 15, 12]


Before reduction : 
 pending  : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 26, 27, 17, 24]
 solution : [0, 5, 10, 15, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 4), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 2), (15, -1), (16, 16), (17, 128), (18, 20), (19, 20), (20, -1), (21, 44), (22, 44), (23, 22), (24, 5), (25, -1), (26, 26), (27, 6), (28, 0), (29, 0), (30, -1), (31, 8), (32, 8), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 4), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 16), (17, 128), (18, 20), (19, 20), (20, -1), (21, 44), (22, 44), (23, 22), (24, 5), (25, -1), (26, 26), (27, 6), (28, -1), (29, -1), (30, -1), (31, 8), (32, 8), (33, 8)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 26, 27, 17, 24]
 solution : [0, 5, 10, 15, 12]


Solution : [0, 5, 10, 15, 12] has cost 32.


Before backtrack at level 11
 pending : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 26, 27, 17, 24]
 solution : [0, 5, 10, 15, 12]

After backtrack at level 11
 pending : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 26, 27, 17, 24, 29, 28, 11]
 solution : [0, 5, 10, 15, 12]


Invert decision for 12 at level 10


New level: 11
 pending : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 26, 27, 17, 24, 29, 28, 11]
 solution : [0, 5, 10, 15]


Before reduction : 
 pending  : [7, 8, 4, 22, 19, 14, 2, 23, 16, 31, 21, 18, 33, 32, 26, 27, 17, 24, 29, 28, 11]
 solution : [0, 5, 10, 15]

Essensial at level 11 : {11, 2, 26}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, 4), (5, -1), (6, -1), (7, 128), (8, 256), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 16), (17, 128), (18, 20), (19, 20), (20, -1), (21, 44), (22, 44), (23, 22), (24, 5), (25, -1), (26, 26), (27, 6), (28, -1), (29, -1), (30, -1), (31, 8), (32, 8), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 2), (8, 256), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 11 : {32, 33, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 31}

After reduction : 
 pending  : [7, 8, 4, 14]
 solution : [0, 5, 10, 15, 11, 2, 26]


Before reduction : 
 pending  : [7, 8, 4, 14]
 solution : [0, 5, 10, 15, 11, 2, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 2), (8, 256), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, 2), (8, 256), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 8, 4, 14]
 solution : [0, 5, 10, 15, 11, 2, 26]


Solution : [0, 5, 10, 15, 11, 2, 26] has cost 71.


Before backtrack at level 11
 pending : [7, 8, 4, 14]
 solution : [0, 5, 10, 15, 11, 2, 26]

After backtrack at level 11
 pending : [7, 8, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28]
 solution : [0, 5, 10, 15]


Before backtrack at level 10
 pending : [7, 8, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28]
 solution : [0, 5, 10, 15]

After backtrack at level 10
 pending : [7, 8, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12]
 solution : [0, 5, 10, 15]


Before backtrack at level 9
 pending : [7, 8, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12]
 solution : [0, 5, 10, 15]

After backtrack at level 9
 pending : [7, 8, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12, 20]
 solution : [0, 5, 10, 15]


Before backtrack at level 8
 pending : [7, 8, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12, 20]
 solution : [0, 5, 10, 15]

After backtrack at level 8
 pending : [7, 8, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12, 20, 25]
 solution : [0, 5, 10, 15]


Before backtrack at level 7
 pending : [7, 8, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12, 20, 25]
 solution : [0, 5, 10, 15]

After backtrack at level 7
 pending : [7, 8, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12, 20, 25, 3]
 solution : [0, 5, 10, 15]


Invert decision for 15 at level 6


New level: 7
 pending : [7, 8, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12, 20, 25, 3]
 solution : [0, 5, 10]


Before reduction : 
 pending  : [7, 8, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12, 20, 25, 3]
 solution : [0, 5, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, 2), (8, 256), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 128), (15, -1), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 8, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12, 20, 25, 3]
 solution : [0, 5, 10]


Solution : [0, 5, 10] has cost 20.


Decide in level 7 among pending : [7, 8, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12, 20, 25, 3]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 128), (15, -1), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [7, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12, 20, 25, 3]
 solution : [0, 5, 10, 8]


New level: 8
 pending : [7, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12, 20, 25, 3]
 solution : [0, 5, 10, 8]


Before reduction : 
 pending  : [7, 4, 14, 2, 26, 11, 22, 19, 23, 16, 31, 21, 18, 33, 32, 27, 17, 24, 29, 28, 12, 20, 25, 3]
 solution : [0, 5, 10, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 128), (15, -1), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 4), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 0), (15, -1), (16, 32), (17, 4), (18, 16), (19, 0), (20, 16), (21, 26), (22, 0), (23, 8), (24, 0), (25, 386), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 2), (32, 128), (33, 256)]

Covered at level 8 : {7, 14, 19, 22, 24}

After reduction : 
 pending  : [4, 2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3]
 solution : [0, 5, 10, 8]


Before reduction : 
 pending  : [4, 2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3]
 solution : [0, 5, 10, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 4), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 0), (15, -1), (16, 32), (17, 4), (18, 16), (19, 0), (20, 16), (21, 26), (22, 0), (23, 8), (24, 0), (25, 386), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 2), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 4), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, -1), (15, -1), (16, 32), (17, 4), (18, 16), (19, -1), (20, 16), (21, 26), (22, -1), (23, 8), (24, -1), (25, 386), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 2), (32, 128), (33, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [4, 2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3]
 solution : [0, 5, 10, 8]


Solution : [0, 5, 10, 8] has cost 26.


Before backtrack at level 8
 pending : [4, 2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3]
 solution : [0, 5, 10, 8]

After backtrack at level 8
 pending : [4, 2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3, 7, 14, 22, 19, 24]
 solution : [0, 5, 10, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [4, 2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3, 7, 14, 22, 19, 24]
 solution : [0, 5, 10]


Before reduction : 
 pending  : [4, 2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3, 7, 14, 22, 19, 24]
 solution : [0, 5, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 256), (4, 4), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, -1), (15, -1), (16, 32), (17, 4), (18, 16), (19, -1), (20, 16), (21, 26), (22, -1), (23, 8), (24, -1), (25, 386), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 2), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 128), (15, -1), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [4, 2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3, 7, 14, 22, 19, 24]
 solution : [0, 5, 10]


Solution : [0, 5, 10] has cost 20.


Decide in level 8 among pending : [4, 2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3, 7, 14, 22, 19, 24]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 128), (15, -1), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

Decide 4 with phase True at level 8

After decision at level 8
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3, 7, 14, 22, 19, 24]
 solution : [0, 5, 10, 4]


New level: 9
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3, 7, 14, 22, 19, 24]
 solution : [0, 5, 10, 4]


Before reduction : 
 pending  : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3, 7, 14, 22, 19, 24]
 solution : [0, 5, 10, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 128), (12, 288), (13, -1), (14, 128), (15, -1), (16, 256), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 210), (24, 40), (25, 418), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 64), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, 272), (13, -1), (14, 64), (15, -1), (16, 128), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 45), (24, 40), (25, 393), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 16), (32, 128), (33, 256)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3, 7, 14, 22, 19, 24]
 solution : [0, 5, 10, 4]


Solution : [0, 5, 10, 4] has cost 25.


Before backtrack at level 9
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3, 7, 14, 22, 19, 24]
 solution : [0, 5, 10, 4]

After backtrack at level 9
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3, 7, 14, 22, 19, 24]
 solution : [0, 5, 10, 4]


Invert decision for 4 at level 8


New level: 9
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3, 7, 14, 22, 19, 24]
 solution : [0, 5, 10]


Before reduction : 
 pending  : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 3, 7, 14, 22, 19, 24]
 solution : [0, 5, 10]

Essensial at level 9 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, 272), (13, -1), (14, 64), (15, -1), (16, 128), (17, 128), (18, 128), (19, 80), (20, 416), (21, 209), (22, 176), (23, 45), (24, 40), (25, 393), (26, 209), (27, 96), (28, 32), (29, 64), (30, -1), (31, 16), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 64), (12, 132), (13, -1), (14, 128), (15, -1), (16, 32), (17, 128), (18, 20), (19, 80), (20, 386), (21, 44), (22, 176), (23, 209), (24, 40), (25, 417), (26, 209), (27, 96), (28, 16), (29, 32), (30, -1), (31, 64), (32, 128), (33, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24]
 solution : [0, 5, 10, 3]


Before reduction : 
 pending  : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24]
 solution : [0, 5, 10, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 64), (12, 132), (13, -1), (14, 128), (15, -1), (16, 32), (17, 128), (18, 20), (19, 80), (20, 386), (21, 44), (22, 176), (23, 209), (24, 40), (25, 417), (26, 209), (27, 96), (28, 16), (29, 32), (30, -1), (31, 64), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 64), (12, 132), (13, -1), (14, 128), (15, -1), (16, 32), (17, 128), (18, 20), (19, 80), (20, 386), (21, 44), (22, 176), (23, 209), (24, 40), (25, 417), (26, 209), (27, 96), (28, 16), (29, 32), (30, -1), (31, 64), (32, 128), (33, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24]
 solution : [0, 5, 10, 3]


Solution : [0, 5, 10, 3] has cost 25.


Before backtrack at level 9
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24]
 solution : [0, 5, 10, 3]

After backtrack at level 9
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3]
 solution : [0, 5, 10]


Before backtrack at level 8
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3]
 solution : [0, 5, 10]

After backtrack at level 8
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3, 4]
 solution : [0, 5, 10]


Before backtrack at level 7
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3, 4]
 solution : [0, 5, 10]

After backtrack at level 7
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3, 4, 8]
 solution : [0, 5, 10]


Before backtrack at level 6
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3, 4, 8]
 solution : [0, 5, 10]

After backtrack at level 6
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3, 4, 8, 15]
 solution : [0, 5, 10]


Before backtrack at level 5
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3, 4, 8, 15]
 solution : [0, 5, 10]

After backtrack at level 5
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3, 4, 8, 15, 13]
 solution : [0, 5, 10]


Before backtrack at level 4
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3, 4, 8, 15, 13]
 solution : [0, 5, 10]

After backtrack at level 4
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3, 4, 8, 15, 13, 9]
 solution : [0, 5, 10]


Before backtrack at level 3
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3, 4, 8, 15, 13, 9]
 solution : [0, 5, 10]

After backtrack at level 3
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5]


Before reduction : 
 pending  : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 14, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5]

Essensial at level 3 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 64), (12, 132), (13, -1), (14, 128), (15, -1), (16, 32), (17, 128), (18, 20), (19, 80), (20, 386), (21, 44), (22, 176), (23, 209), (24, 40), (25, 417), (26, 209), (27, 96), (28, 16), (29, 32), (30, -1), (31, 64), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 528), (7, 256), (8, 512), (9, 576), (10, -1), (11, 512), (12, 640), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 256), (19, 192), (20, 448), (21, 424), (22, 272), (23, 196), (24, 96), (25, 420), (26, 640), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14]


Before reduction : 
 pending  : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 528), (7, 256), (8, 512), (9, 576), (10, -1), (11, 512), (12, 640), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 256), (19, 192), (20, 448), (21, 424), (22, 272), (23, 196), (24, 96), (25, 420), (26, 640), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 528), (7, 256), (8, 512), (9, 576), (10, -1), (11, 512), (12, 640), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 256), (19, 192), (20, 448), (21, 424), (22, 272), (23, 196), (24, 96), (25, 420), (26, 640), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14]


Solution : [0, 5, 14] has cost 13.


Decide in level 3 among pending : [2, 26, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 528), (7, 256), (8, 512), (9, 576), (10, -1), (11, 512), (12, 640), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 256), (19, 192), (20, 448), (21, 424), (22, 272), (23, 196), (24, 96), (25, 420), (26, 640), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [2, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14, 26]


New level: 4
 pending : [2, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14, 26]


Before reduction : 
 pending  : [2, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 528), (7, 256), (8, 512), (9, 576), (10, -1), (11, 512), (12, 640), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 256), (19, 192), (20, 448), (21, 424), (22, 272), (23, 196), (24, 96), (25, 420), (26, 640), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 512), (7, 256), (8, 512), (9, 576), (10, -1), (11, 512), (12, 640), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 24), (19, 192), (20, 388), (21, 22), (22, 272), (23, 98), (24, 5), (25, 66), (26, -1), (27, 288), (28, 128), (29, 128), (30, 64), (31, 128), (32, 4), (33, 256)]

Covered at level 4 : set()

After reduction : 
 pending  : [2, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14, 26]


Solution : [0, 5, 14, 26] has cost 47.


Before backtrack at level 4
 pending : [2, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14, 26]

After backtrack at level 4
 pending : [2, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [2, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14]


Before reduction : 
 pending  : [2, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 512), (7, 256), (8, 512), (9, 576), (10, -1), (11, 512), (12, 640), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 24), (19, 192), (20, 388), (21, 22), (22, 272), (23, 98), (24, 5), (25, 66), (26, -1), (27, 288), (28, 128), (29, 128), (30, 64), (31, 128), (32, 4), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 528), (7, 256), (8, 512), (9, 576), (10, -1), (11, 512), (12, 640), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 256), (19, 192), (20, 448), (21, 424), (22, 272), (23, 196), (24, 96), (25, 420), (26, -1), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Covered at level 4 : set()

After reduction : 
 pending  : [2, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14]


Solution : [0, 5, 14] has cost 13.


Decide in level 4 among pending : [2, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 12, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 528), (7, 256), (8, 512), (9, 576), (10, -1), (11, 512), (12, 640), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 256), (19, 192), (20, 448), (21, 424), (22, 272), (23, 196), (24, 96), (25, 420), (26, -1), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

Decide 12 with phase True at level 4

After decision at level 4
 pending : [2, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14, 12]


New level: 5
 pending : [2, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14, 12]


Before reduction : 
 pending  : [2, 11, 23, 16, 31, 21, 18, 33, 32, 27, 17, 29, 28, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 30, 6]
 solution : [0, 5, 14, 12]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 528), (7, 256), (8, 512), (9, 576), (10, -1), (11, 512), (12, 640), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 256), (19, 192), (20, 448), (21, 424), (22, 272), (23, 196), (24, 96), (25, 420), (26, -1), (27, 384), (28, 128), (29, 128), (30, 64), (31, 128), (32, 256), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 512), (4, 512), (5, -1), (6, 256), (7, 256), (8, 512), (9, 576), (10, -1), (11, 0), (12, -1), (13, 128), (14, -1), (15, 512), (16, 64), (17, 128), (18, 20), (19, 40), (20, 386), (21, 44), (22, 88), (23, 44), (24, 10), (25, 196), (26, -1), (27, 6), (28, 0), (29, 0), (30, 0), (31, 16), (32, 8), (33, 32)]

Covered at level 5 : {11, 28, 29, 30}

After reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 6]
 solution : [0, 5, 14, 12]


Before reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 6]
 solution : [0, 5, 14, 12]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 512), (4, 512), (5, -1), (6, 256), (7, 256), (8, 512), (9, 576), (10, -1), (11, 0), (12, -1), (13, 128), (14, -1), (15, 512), (16, 64), (17, 128), (18, 20), (19, 40), (20, 386), (21, 44), (22, 88), (23, 44), (24, 10), (25, 196), (26, -1), (27, 6), (28, 0), (29, 0), (30, 0), (31, 16), (32, 8), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 512), (4, 512), (5, -1), (6, 256), (7, 256), (8, 512), (9, 576), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 512), (16, 64), (17, 128), (18, 20), (19, 40), (20, 386), (21, 44), (22, 88), (23, 44), (24, 10), (25, 196), (26, -1), (27, 6), (28, -1), (29, -1), (30, -1), (31, 16), (32, 8), (33, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 6]
 solution : [0, 5, 14, 12]


Solution : [0, 5, 14, 12] has cost 23.


Before backtrack at level 5
 pending : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 6]
 solution : [0, 5, 14, 12]

After backtrack at level 5
 pending : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 6, 11, 29, 28, 30]
 solution : [0, 5, 14, 12]


Invert decision for 12 at level 4


New level: 5
 pending : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 6, 11, 29, 28, 30]
 solution : [0, 5, 14]


Before reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 6, 11, 29, 28, 30]
 solution : [0, 5, 14]

Essensial at level 5 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 512), (4, 512), (5, -1), (6, 256), (7, 256), (8, 512), (9, 576), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 512), (16, 64), (17, 128), (18, 20), (19, 40), (20, 386), (21, 44), (22, 88), (23, 44), (24, 10), (25, 196), (26, -1), (27, 6), (28, -1), (29, -1), (30, -1), (31, 16), (32, 8), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 514), (7, 256), (8, 512), (9, 576), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 80), (19, 192), (20, 392), (21, 176), (22, 264), (23, 194), (24, 96), (25, 418), (26, -1), (27, 48), (28, 0), (29, 64), (30, 32), (31, 128), (32, 64), (33, 256)]

Covered at level 5 : {28}

After reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 6, 29, 30]
 solution : [0, 5, 14, 11]


Before reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 6, 29, 30]
 solution : [0, 5, 14, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 514), (7, 256), (8, 512), (9, 576), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 80), (19, 192), (20, 392), (21, 176), (22, 264), (23, 194), (24, 96), (25, 418), (26, -1), (27, 48), (28, 0), (29, 64), (30, 32), (31, 128), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 514), (7, 256), (8, 512), (9, 576), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 80), (19, 192), (20, 392), (21, 176), (22, 264), (23, 194), (24, 96), (25, 418), (26, -1), (27, 48), (28, -1), (29, 64), (30, 32), (31, 128), (32, 64), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 6, 29, 30]
 solution : [0, 5, 14, 11]


Solution : [0, 5, 14, 11] has cost 19.


Decide in level 5 among pending : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 9, 6, 29, 30]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 514), (7, 256), (8, 512), (9, 576), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 80), (19, 192), (20, 392), (21, 176), (22, 264), (23, 194), (24, 96), (25, 418), (26, -1), (27, 48), (28, -1), (29, 64), (30, 32), (31, 128), (32, 64), (33, 256)]

Decide 9 with phase True at level 5

After decision at level 5
 pending : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 6, 29, 30]
 solution : [0, 5, 14, 11, 9]


New level: 6
 pending : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 6, 29, 30]
 solution : [0, 5, 14, 11, 9]


Before reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 27, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 6, 29, 30]
 solution : [0, 5, 14, 11, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 514), (7, 256), (8, 512), (9, 576), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 80), (19, 192), (20, 392), (21, 176), (22, 264), (23, 194), (24, 96), (25, 418), (26, -1), (27, 48), (28, -1), (29, 64), (30, 32), (31, 128), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 514), (7, 256), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 512), (16, 256), (17, 16), (18, 40), (19, 160), (20, 16), (21, 40), (22, 42), (23, 66), (24, 5), (25, 28), (26, -1), (27, 0), (28, -1), (29, 64), (30, 32), (31, 128), (32, 16), (33, 256)]

Covered at level 6 : {27}

After reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 6, 29, 30]
 solution : [0, 5, 14, 11, 9]


Before reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 6, 29, 30]
 solution : [0, 5, 14, 11, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 514), (7, 256), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 512), (16, 256), (17, 16), (18, 40), (19, 160), (20, 16), (21, 40), (22, 42), (23, 66), (24, 5), (25, 28), (26, -1), (27, 0), (28, -1), (29, 64), (30, 32), (31, 128), (32, 16), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 514), (7, 256), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 512), (16, 256), (17, 16), (18, 40), (19, 160), (20, 16), (21, 40), (22, 42), (23, 66), (24, 5), (25, 28), (26, -1), (27, -1), (28, -1), (29, 64), (30, 32), (31, 128), (32, 16), (33, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 6, 29, 30]
 solution : [0, 5, 14, 11, 9]


Solution : [0, 5, 14, 11, 9] has cost 40.


Before backtrack at level 6
 pending : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 6, 29, 30]
 solution : [0, 5, 14, 11, 9]

After backtrack at level 6
 pending : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 6, 29, 30, 27]
 solution : [0, 5, 14, 11, 9]


Invert decision for 9 at level 5


New level: 6
 pending : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 6, 29, 30, 27]
 solution : [0, 5, 14, 11]


Before reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 6, 29, 30, 27]
 solution : [0, 5, 14, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 514), (7, 256), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 512), (16, 256), (17, 16), (18, 40), (19, 160), (20, 16), (21, 40), (22, 42), (23, 66), (24, 5), (25, 28), (26, -1), (27, -1), (28, -1), (29, 64), (30, 32), (31, 128), (32, 16), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 514), (7, 256), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 80), (19, 192), (20, 392), (21, 176), (22, 264), (23, 194), (24, 96), (25, 418), (26, -1), (27, 48), (28, -1), (29, 64), (30, 32), (31, 128), (32, 64), (33, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 6, 29, 30, 27]
 solution : [0, 5, 14, 11]


Solution : [0, 5, 14, 11] has cost 19.


Decide in level 6 among pending : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 6, 29, 30, 27]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 514), (7, 256), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 80), (19, 192), (20, 392), (21, 176), (22, 264), (23, 194), (24, 96), (25, 418), (26, -1), (27, 48), (28, -1), (29, 64), (30, 32), (31, 128), (32, 64), (33, 256)]

Decide 6 with phase True at level 6

After decision at level 6
 pending : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 29, 30, 27]
 solution : [0, 5, 14, 11, 6]


New level: 7
 pending : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 29, 30, 27]
 solution : [0, 5, 14, 11, 6]


Before reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 29, 30, 27]
 solution : [0, 5, 14, 11, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 512), (4, 512), (5, -1), (6, 514), (7, 256), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, 512), (16, 256), (17, 128), (18, 80), (19, 192), (20, 392), (21, 176), (22, 264), (23, 194), (24, 96), (25, 418), (26, -1), (27, 48), (28, -1), (29, 64), (30, 32), (31, 128), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 7 : {2, 3, 4, 7, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 5, 14, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 5, 14, 11, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, 0), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 5, 14, 11, 6]


Solution : [0, 5, 14, 11, 6] has cost 32.


Before backtrack at level 7
 pending : []
 solution : [0, 5, 14, 11, 6]

After backtrack at level 7
 pending : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 29, 30, 27]
 solution : [0, 5, 14, 11, 6]


Invert decision for 6 at level 6


New level: 7
 pending : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 29, 30, 27]
 solution : [0, 5, 14, 11]


Before reduction : 
 pending  : [2, 23, 16, 31, 21, 18, 33, 32, 17, 20, 25, 7, 22, 19, 24, 3, 4, 8, 15, 13, 29, 30, 27]
 solution : [0, 5, 14, 11]

Essensial at level 7 : {2, 3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 6), (21, 128), (22, 8), (23, 34), (24, 0), (25, 25), (26, -1), (27, 0), (28, -1), (29, 2), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 7 : {32, 33, 4, 7, 15, 16, 17, 18, 19, 24, 27, 30, 31}

After reduction : 
 pending  : [23, 21, 20, 25, 22, 8, 13, 29]
 solution : [0, 5, 14, 11, 2, 3]


Before reduction : 
 pending  : [23, 21, 20, 25, 22, 8, 13, 29]
 solution : [0, 5, 14, 11, 2, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 6), (21, 128), (22, 8), (23, 34), (24, 0), (25, 25), (26, -1), (27, 0), (28, -1), (29, 2), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 256), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 6), (21, 8), (22, 8), (23, 34), (24, -1), (25, 25), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 21, 20, 25, 22, 8, 13, 29]
 solution : [0, 5, 14, 11, 2, 3]


Solution : [0, 5, 14, 11, 2, 3] has cost 33.


Before backtrack at level 7
 pending : [23, 21, 20, 25, 22, 8, 13, 29]
 solution : [0, 5, 14, 11, 2, 3]

After backtrack at level 7
 pending : [23, 21, 20, 25, 22, 8, 13, 29, 2, 3, 16, 31, 18, 33, 32, 17, 7, 19, 24, 4, 15, 30, 27]
 solution : [0, 5, 14, 11]


Before backtrack at level 6
 pending : [23, 21, 20, 25, 22, 8, 13, 29, 2, 3, 16, 31, 18, 33, 32, 17, 7, 19, 24, 4, 15, 30, 27]
 solution : [0, 5, 14, 11]

After backtrack at level 6
 pending : [23, 21, 20, 25, 22, 8, 13, 29, 2, 3, 16, 31, 18, 33, 32, 17, 7, 19, 24, 4, 15, 30, 27, 6]
 solution : [0, 5, 14, 11]


Before backtrack at level 5
 pending : [23, 21, 20, 25, 22, 8, 13, 29, 2, 3, 16, 31, 18, 33, 32, 17, 7, 19, 24, 4, 15, 30, 27, 6]
 solution : [0, 5, 14, 11]

After backtrack at level 5
 pending : [23, 21, 20, 25, 22, 8, 13, 29, 2, 3, 16, 31, 18, 33, 32, 17, 7, 19, 24, 4, 15, 30, 27, 6, 11, 28, 9]
 solution : [0, 5, 14]


Before backtrack at level 4
 pending : [23, 21, 20, 25, 22, 8, 13, 29, 2, 3, 16, 31, 18, 33, 32, 17, 7, 19, 24, 4, 15, 30, 27, 6, 11, 28, 9]
 solution : [0, 5, 14]

After backtrack at level 4
 pending : [23, 21, 20, 25, 22, 8, 13, 29, 2, 3, 16, 31, 18, 33, 32, 17, 7, 19, 24, 4, 15, 30, 27, 6, 11, 28, 9, 12]
 solution : [0, 5, 14]


Before backtrack at level 3
 pending : [23, 21, 20, 25, 22, 8, 13, 29, 2, 3, 16, 31, 18, 33, 32, 17, 7, 19, 24, 4, 15, 30, 27, 6, 11, 28, 9, 12]
 solution : [0, 5, 14]

After backtrack at level 3
 pending : [23, 21, 20, 25, 22, 8, 13, 29, 2, 3, 16, 31, 18, 33, 32, 17, 7, 19, 24, 4, 15, 30, 27, 6, 11, 28, 9, 12, 14, 26]
 solution : [0, 5]


Before backtrack at level 2
 pending : [23, 21, 20, 25, 22, 8, 13, 29, 2, 3, 16, 31, 18, 33, 32, 17, 7, 19, 24, 4, 15, 30, 27, 6, 11, 28, 9, 12, 14, 26]
 solution : [0, 5]

After backtrack at level 2
 pending : [23, 21, 20, 25, 22, 8, 13, 29, 2, 3, 16, 31, 18, 33, 32, 17, 7, 19, 24, 4, 15, 30, 27, 6, 11, 28, 9, 12, 14, 26, 10]
 solution : [0, 5]


Before backtrack at level 1
 pending : [23, 21, 20, 25, 22, 8, 13, 29, 2, 3, 16, 31, 18, 33, 32, 17, 7, 19, 24, 4, 15, 30, 27, 6, 11, 28, 9, 12, 14, 26, 10]
 solution : [0, 5]

After backtrack at level 1
 pending : [23, 21, 20, 25, 22, 8, 13, 29, 2, 3, 16, 31, 18, 33, 32, 17, 7, 19, 24, 4, 15, 30, 27, 6, 11, 28, 9, 12, 14, 26, 10, 1]
 solution : [0, 5]


============================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall.ivy: node=3]

============================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 22

[MIN NOTE]: maximum branch and bound depth: 21

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 5, 1, 11, 13]

[MIN NOTE]: solution length: 5

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_5] forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1)) # qcost: 5

invariant [invar_1] forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0) # qcost: 3

invariant [invar_11] forall NODE0,NODE1. allowed_in(NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1 # qcost: 6

invariant [invar_13] forall NODE0,NODE1. internal(NODE0) | ~sent(NODE0,NODE1) | internal(NODE1) | NODE0 = NODE1 # qcost: 6

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 22




[QRM NOTE]: Time elapsed since start: 4.029 seconds

[QRM NOTE]: Time elapsed since last: 2.421 seconds

[QRM NOTE]: Peak memory: 2229150 bytes


*********************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym/ivy/firewall.ivy: node=3]

*********************************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.node_3.0.ivy -s node=4 -f 2 -g -w -r -b -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall.node_3.0.ivy: node=4]

=============================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 24

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 24

[QRM NOTE]: Time elapsed since start: 0.240 seconds

[QRM NOTE]: Time elapsed since last: 0.240 seconds

[QRM NOTE]: Peak memory: 470904 bytes


===================================

	Forward reachability

===================================

building bdd for atoms

building bdd for initial action

building bdd for axioms

building bdd for actions

building bdd for action: send_from_internal(fml:src,fml:dst)

building bdd for action: send_to_internal(fml:src,fml:dst)

building bdd for abstractions

start symbolic image computation

start extracting cubes

[FW NOTE]: number of reachable cubes: 89


=======================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall: node=4]

=======================================================================================

sort: node=['node0', 'node1', 'node2', 'node3']
predicate: internal('node',)
predicate: sent('node', 'node')
predicate: allowed_in('node',)
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)', 'allowed_in(node3)', 'internal(node0)', 'internal(node1)', 'internal(node2)', 'internal(node3)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node0,node2)', 'sent(node0,node3)', 'sent(node1,node0)', 'sent(node1,node1)', 'sent(node1,node2)', 'sent(node1,node3)', 'sent(node2,node0)', 'sent(node2,node1)', 'sent(node2,node2)', 'sent(node2,node3)', 'sent(node3,node0)', 'sent(node3,node1)', 'sent(node3,node2)', 'sent(node3,node3)']

0000----0000000000000000
0001001000000000000100-0
000101000000000100000-00
000101100000000000010--0
0001011000000001000-0--0
00011000000100000000-000
00011010000000000001-0-0
0001101000010000000--0-0
00011100000000010000--00
000111000001000-0000--00
00011110000000000001---0
0001111000000001000----0
000111100001000-000----0
0010000100000000000-0010
00100100000000100-000000
00100101000000000-0-0010
00100101000000100-0-00-0
0010100000100000-0000000
0010100100000000-00-0010
0010100100100000-00-00-0
0010110000000010--000000
00101100001000-0--000000
0010110100000000--0-0010
0010110100000010--0-00-0
00101101001000-0--0-00-0
00110100000000110-000-00
0011100000110000-000-000
0011110000000011--00--00
001111000001001---00--00
00111100001000-1--00--00
00111100001100----00--00
010000010000000-00000100
01000010000000-001000000
01000011000000--00000100
01000011000000--01000-00
010010000100-00000000000
010010010000-00-00000100
010010010100-00-00000-00
010010100000-0-001000000
010010100100-0-00-000000
010010110000-0--00000100
010010110000-0--01000-00
010010110100-0--0-000-00
01010010000000-0010100-0
010110000101-0000000-000
010110100000-0-00101-0-0
010110100001-0-0010--0-0
010110100100-0-00-01-0-0
010110100101-0-00-0--0-0
011000010000000-000-0110
011010000110-000-0000000
011010010000-00--00-0110
011010010010-00--00-01-0
011010010100-00--00-0-10
011010010110-00--00-0--0
011110000111-000-000-000
10000001000-000000001000
1000001000-0000010000000
1000001100--000000001000
1000001100--00001000-000
100001000-00100000000000
100001010-0-000000001000
100001010-0-10000000-000
100001100--0000010000000
100001100--01000-0000000
100001110---000000001000
100001110---00001000-000
100001110---1000-000-000
1001001000-00000100100-0
100101000-00100100000-00
100101100--0000010010--0
100101100--00001100-0--0
100101100--01000-0010--0
100101100--01001-00-0--0
10100001000-0000000-1010
101001000-0010100-000000
101001010-0-00000-0-1010
101001010-0-00100-0-10-0
101001010-0-10000-0--010
101001010-0-10100-0--0-0
101101000-0010110-000-00
11000001000-000-00001100
1100001000-000-011000000
1100001100--00--00001100
1100001100--00--01001-00
1100001100--00--1000-100
1100001100--00--1100--00
1101001000-000-0110100-0
11100001000-000-000-1110

[QRM NOTE]: Time elapsed since start: 2.434 seconds

[QRM NOTE]: Time elapsed since last: 2.194 seconds

[QRM NOTE]: Peak memory: 1742691 bytes


=========================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym/ivy/firewall.node_3.0.ivy: node=4]

=========================================================================================================================

[REACH_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 3.251 seconds

[QRM NOTE]: Time elapsed since last: 0.817 seconds

[QRM NOTE]: Peak memory: 1518009 bytes


*********************************************************************

	[IVY_CHECK]: Ivy Check for Reachability Invariant

*********************************************************************


=================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym/ivy/firewall.node_3.0.ivy]

=================================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_3.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_5
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_13

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_5 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_13 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_5 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_13 ... PASS
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_5 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_13 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 26: assumption

OK
[IVY_CHECK RESULT]: PASS


*****************************************************************

	[QRM]: ivybench/sym/ivy/firewall.node_3.0.ivy

*****************************************************************

[RMIN NUM]: 1

[RMIN RESULT]: ['ivybench/sym/ivy/firewall.node_3.0.ivy']

[CUTOFF]: node=3

[QRM RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 29.954 seconds

[QRM NOTE]: Time elapsed since last: 29.954 seconds

