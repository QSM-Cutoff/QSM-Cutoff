#lang ivy1.7

# Source: https://github.com/sat-group/cfg-enum/blob/master/examples/quorum-leader-election.ivy

type node
type nset

relation isleader(N:node)
relation voted(N:node, M:node)
relation member(N: node, Q: nset)
individual quorum : nset

axiom forall S1:nset, S2:nset. exists N . member(N, S1) & member(N, S2)

after init {
	voted(N, M) := false;
	isleader(N) := false;
}

action vote(v : node , n : node) = {
    require (forall M:node . ~voted(v, M));
    voted(v, n) := true;
}

action become_leader(n : node , s : nset) = {
	require forall M:node . member(M, s) -> voted(M, n);
	isleader(n) := true;
	quorum := s;
}

export vote
export become_leader

#invariant (isleader(N) & isleader(M)) -> N = M

##invariant [manual_1] voted(N,M) & voted(N,O) -> M = O
##invariant [manual_2] isleader(N) -> (majority(quorum) & (member(M,quorum) -> voted(M, N)))

invariant [invar_0] forall NODE2,NODE1,NODE0. ~voted(NODE0,NODE1) | ~voted(NODE0,NODE2) | ((NODE1 = NODE2 & NODE0 ~= NODE1) | (NODE0 = NODE1 & NODE0 = NODE2)) # qcost: 9
invariant [invar_8] forall NSET0,NODE1,NODE0. ~isleader(NODE0) | voted(NODE1,NODE0) | quorum = NSET0 | ((NODE0 ~= NODE1 | member(NODE0,NSET0)) & (NODE0 = NODE1 | ~member(NODE0,NSET0) | member(NODE1,NSET0))) # qcost: 11
