
=== Prime Orbit 0 =====================
size : 24
num_suborbits: 1
0 (*) : ---------------1-1------
0     : ['message(node2,node3)', 'message(node3,node1)']
1     : -------------1----1-----
1     : ['message(node2,node1)', 'message(node3,node2)']
2     : -----------1------1-----
2     : ['message(node1,node3)', 'message(node3,node2)']
3     : ----------1------1------
3     : ['message(node1,node2)', 'message(node3,node1)']
4     : ----------1----1--------
4     : ['message(node1,node2)', 'message(node2,node3)']
5     : -----------1-1----------
5     : ['message(node1,node3)', 'message(node2,node1)']
6     : ---------------11-------
6     : ['message(node2,node3)', 'message(node3,node0)']
7     : ------------1-----1-----
7     : ['message(node2,node0)', 'message(node3,node2)']
8     : -------1----------1-----
8     : ['message(node0,node3)', 'message(node3,node2)']
9     : ------1---------1-------
9     : ['message(node0,node2)', 'message(node3,node0)']
10     : ------1--------1--------
10     : ['message(node0,node2)', 'message(node2,node3)']
11     : -------1----1-----------
11     : ['message(node0,node3)', 'message(node2,node0)']
12     : -----------1----1-------
12     : ['message(node1,node3)', 'message(node3,node0)']
13     : --------1--------1------
13     : ['message(node1,node0)', 'message(node3,node1)']
14     : -------1---------1------
14     : ['message(node0,node3)', 'message(node3,node1)']
15     : -----1----------1-------
15     : ['message(node0,node1)', 'message(node3,node0)']
16     : -----1-----1------------
16     : ['message(node0,node1)', 'message(node1,node3)']
17     : -------11---------------
17     : ['message(node0,node3)', 'message(node1,node0)']
18     : ----------1-1-----------
18     : ['message(node1,node2)', 'message(node2,node0)']
19     : --------1----1----------
19     : ['message(node1,node0)', 'message(node2,node1)']
20     : ------1------1----------
20     : ['message(node0,node2)', 'message(node2,node1)']
21     : -----1------1-----------
21     : ['message(node0,node1)', 'message(node2,node0)']
22     : -----1----1-------------
22     : ['message(node0,node1)', 'message(node1,node2)']
23     : ------1-1---------------
23     : ['message(node0,node2)', 'message(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 5
quantified form : forall NODE1,NODE0,NODE2. ~message(NODE1,NODE2) | ~message(NODE0,NODE1) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 8


=== Prime Orbit 1 =====================
size : 24
num_suborbits: 1
24 (*) : 1--------------1--------
24     : ['has_lock(node0)', 'message(node2,node3)']
25     : 1-----------------1-----
25     : ['has_lock(node0)', 'message(node3,node2)']
26     : 1----------1------------
26     : ['has_lock(node0)', 'message(node1,node3)']
27     : 1----------------1------
27     : ['has_lock(node0)', 'message(node3,node1)']
28     : 1---------1-------------
28     : ['has_lock(node0)', 'message(node1,node2)']
29     : 1------------1----------
29     : ['has_lock(node0)', 'message(node2,node1)']
30     : -1-------------1--------
30     : ['has_lock(node1)', 'message(node2,node3)']
31     : -1----------------1-----
31     : ['has_lock(node1)', 'message(node3,node2)']
32     : -1-----1----------------
32     : ['has_lock(node1)', 'message(node0,node3)']
33     : -1--------------1-------
33     : ['has_lock(node1)', 'message(node3,node0)']
34     : -1----1-----------------
34     : ['has_lock(node1)', 'message(node0,node2)']
35     : -1----------1-----------
35     : ['has_lock(node1)', 'message(node2,node0)']
36     : --1--------1------------
36     : ['has_lock(node2)', 'message(node1,node3)']
37     : --1--------------1------
37     : ['has_lock(node2)', 'message(node3,node1)']
38     : --1----1----------------
38     : ['has_lock(node2)', 'message(node0,node3)']
39     : --1-------------1-------
39     : ['has_lock(node2)', 'message(node3,node0)']
40     : --1--1------------------
40     : ['has_lock(node2)', 'message(node0,node1)']
41     : --1-----1---------------
41     : ['has_lock(node2)', 'message(node1,node0)']
42     : ---1------1-------------
42     : ['has_lock(node3)', 'message(node1,node2)']
43     : ---1---------1----------
43     : ['has_lock(node3)', 'message(node2,node1)']
44     : ---1--1-----------------
44     : ['has_lock(node3)', 'message(node0,node2)']
45     : ---1--------1-----------
45     : ['has_lock(node3)', 'message(node2,node0)']
46     : ---1-1------------------
46     : ['has_lock(node3)', 'message(node0,node1)']
47     : ---1----1---------------
47     : ['has_lock(node3)', 'message(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 5
quantified form : forall NODE1,NODE0,NODE2. ~has_lock(NODE0) | ~message(NODE1,NODE2) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 8


=== Prime Orbit 2 =====================
size : 12
num_suborbits: 1
48 (*) : --1------------1--------
48     : ['has_lock(node2)', 'message(node2,node3)']
49     : ---1--------------1-----
49     : ['has_lock(node3)', 'message(node3,node2)']
50     : -1---------1------------
50     : ['has_lock(node1)', 'message(node1,node3)']
51     : ---1-------------1------
51     : ['has_lock(node3)', 'message(node3,node1)']
52     : -1--------1-------------
52     : ['has_lock(node1)', 'message(node1,node2)']
53     : --1----------1----------
53     : ['has_lock(node2)', 'message(node2,node1)']
54     : 1------1----------------
54     : ['has_lock(node0)', 'message(node0,node3)']
55     : ---1------------1-------
55     : ['has_lock(node3)', 'message(node3,node0)']
56     : 1-----1-----------------
56     : ['has_lock(node0)', 'message(node0,node2)']
57     : --1---------1-----------
57     : ['has_lock(node2)', 'message(node2,node0)']
58     : 1----1------------------
58     : ['has_lock(node0)', 'message(node0,node1)']
59     : -1------1---------------
59     : ['has_lock(node1)', 'message(node1,node0)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~has_lock(NODE0) | ~message(NODE0,NODE1) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 3 =====================
size : 12
num_suborbits: 1
60 (*) : ---1-----------1--------
60     : ['has_lock(node3)', 'message(node2,node3)']
61     : --1---------------1-----
61     : ['has_lock(node2)', 'message(node3,node2)']
62     : ---1-------1------------
62     : ['has_lock(node3)', 'message(node1,node3)']
63     : -1---------------1------
63     : ['has_lock(node1)', 'message(node3,node1)']
64     : --1-------1-------------
64     : ['has_lock(node2)', 'message(node1,node2)']
65     : -1-----------1----------
65     : ['has_lock(node1)', 'message(node2,node1)']
66     : ---1---1----------------
66     : ['has_lock(node3)', 'message(node0,node3)']
67     : 1---------------1-------
67     : ['has_lock(node0)', 'message(node3,node0)']
68     : --1---1-----------------
68     : ['has_lock(node2)', 'message(node0,node2)']
69     : 1-----------1-----------
69     : ['has_lock(node0)', 'message(node2,node0)']
70     : -1---1------------------
70     : ['has_lock(node1)', 'message(node0,node1)']
71     : 1-------1---------------
71     : ['has_lock(node0)', 'message(node1,node0)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~has_lock(NODE0) | ~message(NODE1,NODE0) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 4 =====================
size : 24
num_suborbits: 1
72 (*) : ----1----------1--------
72     : ['message(node0,node0)', 'message(node2,node3)']
73     : ----1-------------1-----
73     : ['message(node0,node0)', 'message(node3,node2)']
74     : ----1------1------------
74     : ['message(node0,node0)', 'message(node1,node3)']
75     : ----1------------1------
75     : ['message(node0,node0)', 'message(node3,node1)']
76     : ----1-----1-------------
76     : ['message(node0,node0)', 'message(node1,node2)']
77     : ----1--------1----------
77     : ['message(node0,node0)', 'message(node2,node1)']
78     : ---------1-----1--------
78     : ['message(node1,node1)', 'message(node2,node3)']
79     : ---------1--------1-----
79     : ['message(node1,node1)', 'message(node3,node2)']
80     : -------1-1--------------
80     : ['message(node0,node3)', 'message(node1,node1)']
81     : ---------1------1-------
81     : ['message(node1,node1)', 'message(node3,node0)']
82     : ------1--1--------------
82     : ['message(node0,node2)', 'message(node1,node1)']
83     : ---------1--1-----------
83     : ['message(node1,node1)', 'message(node2,node0)']
84     : -----------1--1---------
84     : ['message(node1,node3)', 'message(node2,node2)']
85     : --------------1--1------
85     : ['message(node2,node2)', 'message(node3,node1)']
86     : -------1------1---------
86     : ['message(node0,node3)', 'message(node2,node2)']
87     : --------------1-1-------
87     : ['message(node2,node2)', 'message(node3,node0)']
88     : -----1--------1---------
88     : ['message(node0,node1)', 'message(node2,node2)']
89     : --------1-----1---------
89     : ['message(node1,node0)', 'message(node2,node2)']
90     : ----------1--------1----
90     : ['message(node1,node2)', 'message(node3,node3)']
91     : -------------1-----1----
91     : ['message(node2,node1)', 'message(node3,node3)']
92     : ------1------------1----
92     : ['message(node0,node2)', 'message(node3,node3)']
93     : ------------1------1----
93     : ['message(node2,node0)', 'message(node3,node3)']
94     : -----1-------------1----
94     : ['message(node0,node1)', 'message(node3,node3)']
95     : --------1----------1----
95     : ['message(node1,node0)', 'message(node3,node3)']
num_forall :   3
num_exists :   0
num_literals : 5
quantified form : forall NODE1,NODE0,NODE2. ~message(NODE1,NODE2) | ~message(NODE0,NODE0) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 8


=== Prime Orbit 5 =====================
size : 12
num_suborbits: 1
96 (*) : -----1---------1--------
96     : ['message(node0,node1)', 'message(node2,node3)']
97     : -----1------------1-----
97     : ['message(node0,node1)', 'message(node3,node2)']
98     : ------1----1------------
98     : ['message(node0,node2)', 'message(node1,node3)']
99     : ------1----------1------
99     : ['message(node0,node2)', 'message(node3,node1)']
100     : -------1--1-------------
100     : ['message(node0,node3)', 'message(node1,node2)']
101     : -------1-----1----------
101     : ['message(node0,node3)', 'message(node2,node1)']
102     : --------1------1--------
102     : ['message(node1,node0)', 'message(node2,node3)']
103     : --------1---------1-----
103     : ['message(node1,node0)', 'message(node3,node2)']
104     : ----------1-----1-------
104     : ['message(node1,node2)', 'message(node3,node0)']
105     : -----------11-----------
105     : ['message(node1,node3)', 'message(node2,node0)']
106     : ------------1----1------
106     : ['message(node2,node0)', 'message(node3,node1)']
107     : -------------1--1-------
107     : ['message(node2,node1)', 'message(node3,node0)']
num_forall :   4
num_exists :   0
num_literals : 8
quantified form : forall NODE1,NODE3,NODE0,NODE2. ~message(NODE0,NODE2) | ~message(NODE1,NODE3) | (NODE0 = NODE3 | NODE1 = NODE3 | NODE0 = NODE2 | NODE2 = NODE3 | NODE0 = NODE1 | NODE1 = NODE2)
qcost : 12


=== Prime Orbit 6 =====================
size : 12
num_suborbits: 1
108 (*) : -------1-------1--------
108     : ['message(node0,node3)', 'message(node2,node3)']
109     : ------1-----------1-----
109     : ['message(node0,node2)', 'message(node3,node2)']
110     : -------1---1------------
110     : ['message(node0,node3)', 'message(node1,node3)']
111     : -----1-----------1------
111     : ['message(node0,node1)', 'message(node3,node1)']
112     : ------1---1-------------
112     : ['message(node0,node2)', 'message(node1,node2)']
113     : -----1-------1----------
113     : ['message(node0,node1)', 'message(node2,node1)']
114     : -----------1---1--------
114     : ['message(node1,node3)', 'message(node2,node3)']
115     : ----------1-------1-----
115     : ['message(node1,node2)', 'message(node3,node2)']
116     : --------1-------1-------
116     : ['message(node1,node0)', 'message(node3,node0)']
117     : --------1---1-----------
117     : ['message(node1,node0)', 'message(node2,node0)']
118     : -------------1---1------
118     : ['message(node2,node1)', 'message(node3,node1)']
119     : ------------1---1-------
119     : ['message(node2,node0)', 'message(node3,node0)']
num_forall :   3
num_exists :   0
num_literals : 5
quantified form : forall NODE1,NODE0,NODE2. ~message(NODE0,NODE2) | ~message(NODE1,NODE2) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 8


=== Prime Orbit 7 =====================
size : 12
num_suborbits: 1
120 (*) : ------------1--1--------
120     : ['message(node2,node0)', 'message(node2,node3)']
121     : ----------------1-1-----
121     : ['message(node3,node0)', 'message(node3,node2)']
122     : --------1--1------------
122     : ['message(node1,node0)', 'message(node1,node3)']
123     : ----------------11------
123     : ['message(node3,node0)', 'message(node3,node1)']
124     : --------1-1-------------
124     : ['message(node1,node0)', 'message(node1,node2)']
125     : ------------11----------
125     : ['message(node2,node0)', 'message(node2,node1)']
126     : -------------1-1--------
126     : ['message(node2,node1)', 'message(node2,node3)']
127     : -----------------11-----
127     : ['message(node3,node1)', 'message(node3,node2)']
128     : -----1-1----------------
128     : ['message(node0,node1)', 'message(node0,node3)']
129     : -----11-----------------
129     : ['message(node0,node1)', 'message(node0,node2)']
130     : ----------11------------
130     : ['message(node1,node2)', 'message(node1,node3)']
131     : ------11----------------
131     : ['message(node0,node2)', 'message(node0,node3)']
num_forall :   3
num_exists :   0
num_literals : 5
quantified form : forall NODE1,NODE0,NODE2. ~message(NODE0,NODE2) | ~message(NODE0,NODE1) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 8


=== Prime Orbit 8 =====================
size : 12
num_suborbits: 1
132 (*) : --------------11--------
132     : ['message(node2,node2)', 'message(node2,node3)']
133     : ------------------11----
133     : ['message(node3,node2)', 'message(node3,node3)']
134     : ---------1-1------------
134     : ['message(node1,node1)', 'message(node1,node3)']
135     : -----------------1-1----
135     : ['message(node3,node1)', 'message(node3,node3)']
136     : ---------11-------------
136     : ['message(node1,node1)', 'message(node1,node2)']
137     : -------------11---------
137     : ['message(node2,node1)', 'message(node2,node2)']
138     : ----1--1----------------
138     : ['message(node0,node0)', 'message(node0,node3)']
139     : ----------------1--1----
139     : ['message(node3,node0)', 'message(node3,node3)']
140     : ----1-1-----------------
140     : ['message(node0,node0)', 'message(node0,node2)']
141     : ------------1-1---------
141     : ['message(node2,node0)', 'message(node2,node2)']
142     : ----11------------------
142     : ['message(node0,node0)', 'message(node0,node1)']
143     : --------11--------------
143     : ['message(node1,node0)', 'message(node1,node1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~message(NODE0,NODE0) | ~message(NODE0,NODE1) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 10 =====================
size : 6
num_suborbits: 1
150 (*) : 11----------------------
150     : ['has_lock(node0)', 'has_lock(node1)']
151     : 1-1---------------------
151     : ['has_lock(node0)', 'has_lock(node2)']
152     : 1--1--------------------
152     : ['has_lock(node0)', 'has_lock(node3)']
153     : -11---------------------
153     : ['has_lock(node1)', 'has_lock(node2)']
154     : -1-1--------------------
154     : ['has_lock(node1)', 'has_lock(node3)']
155     : --11--------------------
155     : ['has_lock(node2)', 'has_lock(node3)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~has_lock(NODE0) | ~has_lock(NODE1) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 11 =====================
size : 12
num_suborbits: 1
156 (*) : ---11-------------------
156     : ['has_lock(node3)', 'message(node0,node0)']
157     : --1-1-------------------
157     : ['has_lock(node2)', 'message(node0,node0)']
158     : -1--1-------------------
158     : ['has_lock(node1)', 'message(node0,node0)']
159     : ---1-----1--------------
159     : ['has_lock(node3)', 'message(node1,node1)']
160     : --1------1--------------
160     : ['has_lock(node2)', 'message(node1,node1)']
161     : 1--------1--------------
161     : ['has_lock(node0)', 'message(node1,node1)']
162     : ---1----------1---------
162     : ['has_lock(node3)', 'message(node2,node2)']
163     : -1------------1---------
163     : ['has_lock(node1)', 'message(node2,node2)']
164     : 1-------------1---------
164     : ['has_lock(node0)', 'message(node2,node2)']
165     : --1----------------1----
165     : ['has_lock(node2)', 'message(node3,node3)']
166     : -1-----------------1----
166     : ['has_lock(node1)', 'message(node3,node3)']
167     : 1------------------1----
167     : ['has_lock(node0)', 'message(node3,node3)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~has_lock(NODE0) | ~message(NODE1,NODE1) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 12 =====================
size : 4
num_suborbits: 1
168 (*) : 1---1-------------------
168     : ['has_lock(node0)', 'message(node0,node0)']
169     : -1-------1--------------
169     : ['has_lock(node1)', 'message(node1,node1)']
170     : --1-----------1---------
170     : ['has_lock(node2)', 'message(node2,node2)']
171     : ---1---------------1----
171     : ['has_lock(node3)', 'message(node3,node3)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~has_lock(NODE0) | ~message(NODE0,NODE0)
qcost : 3


=== Prime Orbit 13 =====================
size : 12
num_suborbits: 1
172 (*) : ----1---1---------------
172     : ['message(node0,node0)', 'message(node1,node0)']
173     : ----1-------1-----------
173     : ['message(node0,node0)', 'message(node2,node0)']
174     : ----1-----------1-------
174     : ['message(node0,node0)', 'message(node3,node0)']
175     : -----1---1--------------
175     : ['message(node0,node1)', 'message(node1,node1)']
176     : ---------1---1----------
176     : ['message(node1,node1)', 'message(node2,node1)']
177     : ---------1-------1------
177     : ['message(node1,node1)', 'message(node3,node1)']
178     : ------1-------1---------
178     : ['message(node0,node2)', 'message(node2,node2)']
179     : ----------1---1---------
179     : ['message(node1,node2)', 'message(node2,node2)']
180     : --------------1---1-----
180     : ['message(node2,node2)', 'message(node3,node2)']
181     : -------1-----------1----
181     : ['message(node0,node3)', 'message(node3,node3)']
182     : -----------1-------1----
182     : ['message(node1,node3)', 'message(node3,node3)']
183     : ---------------1---1----
183     : ['message(node2,node3)', 'message(node3,node3)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~message(NODE0,NODE0) | ~message(NODE1,NODE0) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
184 (*) : -----1--1---------------
184     : ['message(node0,node1)', 'message(node1,node0)']
185     : ------1-----1-----------
185     : ['message(node0,node2)', 'message(node2,node0)']
186     : -------1--------1-------
186     : ['message(node0,node3)', 'message(node3,node0)']
187     : ----------1--1----------
187     : ['message(node1,node2)', 'message(node2,node1)']
188     : -----------1-----1------
188     : ['message(node1,node3)', 'message(node3,node1)']
189     : ---------------1--1-----
189     : ['message(node2,node3)', 'message(node3,node2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~message(NODE1,NODE0) | ~message(NODE0,NODE1) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 15 =====================
size : 6
num_suborbits: 1
190 (*) : ----1----1--------------
190     : ['message(node0,node0)', 'message(node1,node1)']
191     : ----1---------1---------
191     : ['message(node0,node0)', 'message(node2,node2)']
192     : ----1--------------1----
192     : ['message(node0,node0)', 'message(node3,node3)']
193     : ---------1----1---------
193     : ['message(node1,node1)', 'message(node2,node2)']
194     : ---------1---------1----
194     : ['message(node1,node1)', 'message(node3,node3)']
195     : --------------1----1----
195     : ['message(node2,node2)', 'message(node3,node3)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~message(NODE0,NODE0) | ~message(NODE1,NODE1) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 17 =====================
size : 1
num_suborbits: 1
197 (*) : 00000000000000000000----
197     : ['~has_lock(node0)', '~has_lock(node1)', '~has_lock(node2)', '~has_lock(node3)', '~message(node0,node0)', '~message(node0,node1)', '~message(node0,node2)', '~message(node0,node3)', '~message(node1,node0)', '~message(node1,node1)', '~message(node1,node2)', '~message(node1,node3)', '~message(node2,node0)', '~message(node2,node1)', '~message(node2,node2)', '~message(node2,node3)', '~message(node3,node0)', '~message(node3,node1)', '~message(node3,node2)', '~message(node3,node3)']
num_forall :   0
num_exists :   2
num_literals : 2
quantified form : exists NODE1,NODE0. message(NODE0,NODE1) | has_lock(NODE0)
qcost : 4

