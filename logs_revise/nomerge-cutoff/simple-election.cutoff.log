
**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


=================================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=================================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 27

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 36

[FW NOTE]: number of branching actions: 21

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_3.finite.cpp simple-election.acceptor_3_proposer_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_3.finite.o simple-election.acceptor_3_proposer_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 6.932 seconds

[QRM NOTE]: Time elapsed since last: 6.932 seconds

[QRM NOTE]: Peak memory: 1194455 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 7

[FW NOTE]: number of total reachable states:        254

[FW NOTE]: number of dfs representative states:     26

[FW NOTE]: number of dfs non-representative states: 228


========================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

========================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: leader('proposer',)
predicate: member('acceptor', 'quorum')
predicate: promise('acceptor', 'proposer')
predicate: chosenAt('quorum', 'proposer')
predicate: start('proposer',)
predicate: didNotPromise('acceptor',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']
representative states : 117440939, 117441451, 117442475, 117444523, 50597803, 201367467, 9798197163, 9800294315, 134782891, 136880043, 203464619, 17108907, 348075, 50595755, 201365419, 9798195115, 9800292267, 134780843, 136877995, 203462571, 17106859, 50594731, 201364395, 9798194091, 9800291243, 203461547


=== State Orbit 0 =====================
size : 1
repr state: 000000000111000000000000000
lex min decimal: 117440939
states:
000000000111000000000000000




=== State Orbit 1 =====================
size : 3
repr state: 000000000111000000000000100
lex min decimal: 117441451
states:
000000000111000000000000100
000000000111000000000000010
000000000111000000000000001




=== State Orbit 2 =====================
size : 3
repr state: 000000000111000000000000110
lex min decimal: 117442475
states:
000000000111000000000000011
000000000111000000000000101
000000000111000000000000110




=== State Orbit 3 =====================
size : 1
repr state: 000000000111000000000000111
lex min decimal: 117444523
states:
000000000111000000000000111




=== State Orbit 4 =====================
size : 9
repr state: 000000000011000100000000111
lex min decimal: 50597803
states:
000000000011000100000000111
000000000101000000100000111
000000000011000001000000111
000000000101000000001000111
000000000011000010000000111
000000000101000000010000111
000000000110000000000010111
000000000110000000000001111
000000000110000000000100111




=== State Orbit 5 =====================
size : 9
repr state: 100000000001000100100000111
lex min decimal: 201367467
states:
010000000001000010010000111
100000000001000100100000111
000000100100000000100100111
000000010100000000010010111
000010000010000010000010111
000000001100000000001001111
001000000001000001001000111
000100000010000100000100111
000001000010000001000001111




=== State Orbit 6 =====================
size : 3
repr state: 100100100000000100100100111
lex min decimal: 9798197163
states:
100100100000000100100100111
010010010000000010010010111
001001001000000001001001111




=== State Orbit 7 =====================
size : 3
repr state: 100100100000100100100100111
lex min decimal: 9800294315
states:
001001001000001001001001111
010010010000010010010010111
100100100000100100100100111




=== State Orbit 8 =====================
size : 18
repr state: 100000000000000100100010111
lex min decimal: 134782891
states:
000000100000000001100100111
100000000000000100100010111
010000000000000010010001111
000000001000000100001001111
100000000000000100100001111
000010000000000010001010111
000001000000000001010001111
000100000000000100001100111
000010000000000010100010111
000000010000000100010010111
000000001000000010001001111
000100000000000100010100111
001000000000000001001010111
000001000000000001100001111
000000100000000010100100111
000000010000000001010010111
010000000000000010010100111
001000000000000001001100111




=== State Orbit 9 =====================
size : 18
repr state: 100000000000100100100010111
lex min decimal: 136880043
states:
100000000000100100100010111
000001000000001001100001111
010000000000010010010100111
001000000000001001001010111
000000100000100010100100111
000001000000001001010001111
000000001000001010001001111
000000010000010100010010111
000000010000010001010010111
001000000000001001001100111
010000000000010010010001111
000100000000100100010100111
000100000000100100001100111
000010000000010010100010111
100000000000100100100001111
000000001000001100001001111
000000100000100001100100111
000010000000010010001010111




=== State Orbit 10 =====================
size : 9
repr state: 100000000001100100100000111
lex min decimal: 203464619
states:
010000000001010010010000111
000010000010010010000010111
100000000001100100100000111
001000000001001001001000111
000100000010100100000100111
000000010100010000010010111
000000100100100000100100111
000000001100001000001001111
000001000010001001000001111




=== State Orbit 11 =====================
size : 18
repr state: 000000000001000100010000111
lex min decimal: 17108907
states:
000000000100000000100010111
000000000001000010100000111
000000000010000010000001111
000000000100000000010100111
000000000100000000100001111
000000000100000000001010111
000000000001000010001000111
000000000001000100001000111
000000000010000100000001111
000000000010000001000100111
000000000010000100000010111
000000000100000000010001111
000000000001000001100000111
000000000100000000001100111
000000000010000010000100111
000000000001000100010000111
000000000010000001000010111
000000000001000001010000111




=== State Orbit 12 =====================
size : 6
repr state: 000000000000000100010001111
lex min decimal: 348075
states:
000000000000000001100010111
000000000000000100010001111
000000000000000010001100111
000000000000000010100001111
000000000000000001010100111
000000000000000100001010111




=== State Orbit 13 =====================
size : 18
repr state: 000000000011000100000000110
lex min decimal: 50595755
states:
000000000110000000000001011
000000000101000000010000110
000000000011000100000000110
000000000101000000010000011
000000000101000000001000101
000000000110000000000100101
000000000101000000100000110
000000000101000000100000101
000000000110000000000010011
000000000011000100000000101
000000000011000001000000011
000000000101000000001000011
000000000110000000000001101
000000000110000000000010110
000000000110000000000100110
000000000011000001000000101
000000000011000010000000110
000000000011000010000000011




=== State Orbit 14 =====================
size : 18
repr state: 100000000001000100100000110
lex min decimal: 201365419
states:
001000000001000001001000011
000100000010000100000100110
100000000001000100100000101
000010000010000010000010011
010000000001000010010000110
000001000010000001000001011
000000100100000000100100110
000000100100000000100100101
000010000010000010000010110
000000001100000000001001101
000000001100000000001001011
100000000001000100100000110
000100000010000100000100101
000000010100000000010010110
000001000010000001000001101
001000000001000001001000101
010000000001000010010000011
000000010100000000010010011




=== State Orbit 15 =====================
size : 6
repr state: 100100100000000100100100110
lex min decimal: 9798195115
states:
100100100000000100100100110
100100100000000100100100101
001001001000000001001001101
010010010000000010010010011
001001001000000001001001011
010010010000000010010010110




=== State Orbit 16 =====================
size : 6
repr state: 100100100000100100100100110
lex min decimal: 9800292267
states:
100100100000100100100100110
010010010000010010010010110
001001001000001001001001011
010010010000010010010010011
100100100000100100100100101
001001001000001001001001101




=== State Orbit 17 =====================
size : 18
repr state: 100000000000000100100010110
lex min decimal: 134780843
states:
001000000000000001001010011
000100000000000100001100101
000000100000000010100100110
000000100000000001100100101
010000000000000010010001011
000010000000000010001010011
001000000000000001001100101
000000001000000010001001011
000100000000000100010100110
000001000000000001100001101
000000010000000001010010011
100000000000000100100001101
000000001000000100001001101
010000000000000010010100110
000000010000000100010010110
000010000000000010100010110
000001000000000001010001011
100000000000000100100010110




=== State Orbit 18 =====================
size : 18
repr state: 100000000000100100100010110
lex min decimal: 136877995
states:
010000000000010010010001011
000100000000100100001100101
000000100000100010100100110
000010000000010010001010011
000000100000100001100100101
100000000000100100100001101
000000001000001010001001011
000000001000001100001001101
000010000000010010100010110
000000010000010001010010011
000100000000100100010100110
000001000000001001010001011
000001000000001001100001101
001000000000001001001010011
100000000000100100100010110
001000000000001001001100101
000000010000010100010010110
010000000000010010010100110




=== State Orbit 19 =====================
size : 18
repr state: 100000000001100100100000110
lex min decimal: 203462571
states:
000001000010001001000001011
000000010100010000010010110
000000010100010000010010011
100000000001100100100000101
010000000001010010010000110
010000000001010010010000011
000010000010010010000010110
000001000010001001000001101
000100000010100100000100110
001000000001001001001000011
000010000010010010000010011
001000000001001001001000101
000000100100100000100100110
000000100100100000100100101
000000001100001000001001101
100000000001100100100000110
000100000010100100000100101
000000001100001000001001011




=== State Orbit 20 =====================
size : 18
repr state: 000000000001000100010000110
lex min decimal: 17106859
states:
000000000010000001000100101
000000000100000000100001101
000000000100000000100010110
000000000100000000010001011
000000000001000001010000011
000000000001000010100000110
000000000001000010001000011
000000000010000010000100110
000000000001000001100000101
000000000100000000001100101
000000000001000100010000110
000000000001000100001000101
000000000010000100000001101
000000000010000001000010011
000000000010000010000001011
000000000010000100000010110
000000000100000000010100110
000000000100000000001010011




=== State Orbit 21 =====================
size : 9
repr state: 000000000011000100000000100
lex min decimal: 50594731
states:
000000000110000000000001001
000000000011000010000000010
000000000101000000100000100
000000000101000000010000010
000000000110000000000010010
000000000011000001000000001
000000000101000000001000001
000000000110000000000100100
000000000011000100000000100




=== State Orbit 22 =====================
size : 9
repr state: 100000000001000100100000100
lex min decimal: 201364395
states:
000010000010000010000010010
100000000001000100100000100
000000100100000000100100100
000001000010000001000001001
000000001100000000001001001
000000010100000000010010010
001000000001000001001000001
010000000001000010010000010
000100000010000100000100100




=== State Orbit 23 =====================
size : 3
repr state: 100100100000000100100100100
lex min decimal: 9798194091
states:
100100100000000100100100100
010010010000000010010010010
001001001000000001001001001




=== State Orbit 24 =====================
size : 3
repr state: 100100100000100100100100100
lex min decimal: 9800291243
states:
100100100000100100100100100
001001001000001001001001001
010010010000010010010010010




=== State Orbit 25 =====================
size : 9
repr state: 100000000001100100100000100
lex min decimal: 203461547
states:
001000000001001001001000001
000100000010100100000100100
000010000010010010000010010
000000100100100000100100100
000000010100010000010010010
000000001100001000001001001
000001000010001001000001001
010000000001010010010000010
100000000001100100100000100



[QRM NOTE]: Time elapsed since start: 7.351 seconds

[QRM NOTE]: Time elapsed since last: 0.418 seconds

[QRM NOTE]: Peak memory: 1301094 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 7.361 seconds

[QRM NOTE]: Time elapsed since last: 0.010 seconds

[QRM NOTE]: Peak memory: 333070 bytes


========================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

========================================================================================================================


===================================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

===================================================================================================================


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ---------------------1-1---
0     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
1     : ---------------------11----
1     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
2     : ----------------------11---
2     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
3     : ------------------1-1------
3     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
4     : ------------------11-------
4     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
5     : -------------------11------
5     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
6     : ---------------1-1---------
6     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
7     : ---------------11----------
7     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
8     : ----------------11---------
8     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 36
num_suborbits: 1
9 (*) : ----1----------------1-----
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
10     : -----1---------------1-----
10     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
11     : ---1------------------1----
11     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
12     : -----1----------------1----
12     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
13     : ---1-------------------1---
13     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
14     : ----1------------------1---
14     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
15     : -1----------------1--------
15     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
16     : --1---------------1--------
16     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer0)']
17     : 1------------------1-------
17     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
18     : --1----------------1-------
18     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer1)']
19     : 1-------------------1------
19     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
20     : -1------------------1------
20     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
21     : -------1-------------1-----
21     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
22     : --------1------------1-----
22     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
23     : ------1---------------1----
23     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
24     : --------1-------------1----
24     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
25     : ------1----------------1---
25     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
26     : -------1---------------1---
26     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
27     : -1-------------1-----------
27     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
28     : --1------------1-----------
28     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer0)']
29     : 1---------------1----------
29     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
30     : --1-------------1----------
30     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer1)']
31     : 1----------------1---------
31     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer2)']
32     : -1---------------1---------
32     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer2)']
33     : -------1----------1--------
33     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
34     : --------1---------1--------
34     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer0)']
35     : ------1------------1-------
35     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
36     : --------1----------1-------
36     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer1)']
37     : ------1-------------1------
37     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer2)']
38     : -------1------------1------
38     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer2)']
39     : ----1----------1-----------
39     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
40     : -----1---------1-----------
40     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer0)']
41     : ---1------------1----------
41     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
42     : -----1----------1----------
42     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer1)']
43     : ---1-------------1---------
43     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer2)']
44     : ----1------------1---------
44     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 9
num_suborbits: 1
45 (*) : ---------------------1--0--
45     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
46     : ----------------------1--0-
46     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
47     : -----------------------1--0
47     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
48     : ------------------1-----0--
48     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
49     : -------------------1-----0-
49     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
50     : --------------------1-----0
50     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
51     : ---------------1--------0--
51     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
52     : ----------------1--------0-
52     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
53     : -----------------1--------0
53     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 9
num_suborbits: 1
54 (*) : -----------1---------1-----
54     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
55     : -----------1----------1----
55     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
56     : -----------1-----------1---
56     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer2)']
57     : ----------1-------1--------
57     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
58     : ----------1--------1-------
58     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
59     : ----------1---------1------
59     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer2)']
60     : ---------1-----1-----------
60     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
61     : ---------1------1----------
61     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
62     : ---------1-------1---------
62     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
63 (*) : --------------1-----------0
63     : ['leader(proposer2)', '~start(proposer2)']
64     : -------------1-----------0-
64     : ['leader(proposer1)', '~start(proposer1)']
65     : ------------1-----------0--
65     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 18
num_suborbits: 1
66 (*) : ---1----------1------------
66     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
67     : ---1---------1-------------
67     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
68     : ----1---------1------------
68     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
69     : ----1-------1--------------
69     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
70     : -----1-------1-------------
70     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
71     : -----1------1--------------
71     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
72     : 1-------------1------------
72     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
73     : 1------------1-------------
73     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
74     : -1------------1------------
74     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
75     : -1----------1--------------
75     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
76     : --1----------1-------------
76     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
77     : --1---------1--------------
77     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
78     : ------1-------1------------
78     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
79     : ------1------1-------------
79     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
80     : -------1------1------------
80     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
81     : -------1----1--------------
81     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
82     : --------1----1-------------
82     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
83     : --------1---1--------------
83     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 3
num_suborbits: 1
84 (*) : -------------11------------
84     : ['leader(proposer1)', 'leader(proposer2)']
85     : ------------1-1------------
85     : ['leader(proposer0)', 'leader(proposer2)']
86     : ------------11-------------
86     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 18
num_suborbits: 1
87 (*) : --------1-1----------------
87     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor1)']
88     : -------1--1----------------
88     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
89     : ------1---1----------------
89     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
90     : --------1--1---------------
90     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
91     : -------1---1---------------
91     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
92     : ------1----1---------------
92     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
93     : -----1---1-----------------
93     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor0)']
94     : ----1----1-----------------
94     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
95     : ---1-----1-----------------
95     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
96     : -----1-----1---------------
96     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
97     : ----1------1---------------
97     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
98     : ---1-------1---------------
98     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
99     : --1------1-----------------
99     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor0)']
100     : -1-------1-----------------
100     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
101     : 1--------1-----------------
101     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
102     : --1-------1----------------
102     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor1)']
103     : -1--------1----------------
103     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
104     : 1---------1----------------
104     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
105 (*) : -------11------------------
105     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
106     : ------1-1------------------
106     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
107     : ------11-------------------
107     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
108     : ----11---------------------
108     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
109     : ---1-1---------------------
109     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
110     : ---11----------------------
110     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
111     : -11------------------------
111     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
112     : 1-1------------------------
112     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
113     : 11-------------------------
113     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 18
num_suborbits: 1
114 (*) : -------1-----------0-------
114     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
115     : --------1-----------0------
115     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
116     : ------1-----------0--------
116     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
117     : -------1--------------0----
117     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
118     : --------1--------------0---
118     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
119     : ------1--------------0-----
119     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
120     : ----1-----------0----------
120     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
121     : -----1-----------0---------
121     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
122     : ---1-----------0-----------
122     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
123     : ----1-----------------0----
123     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
124     : -----1-----------------0---
124     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
125     : ---1-----------------0-----
125     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
126     : -1--------------0----------
126     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
127     : --1--------------0---------
127     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor0,proposer2)']
128     : 1--------------0-----------
128     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
129     : -1-----------------0-------
129     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
130     : --1-----------------0------
130     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor1,proposer2)']
131     : 1-----------------0--------
131     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 9
num_suborbits: 1
132 (*) : -------1-----------------0-
132     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
133     : --------1-----------------0
133     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
134     : ------1-----------------0--
134     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
135     : ----1--------------------0-
135     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
136     : -----1--------------------0
136     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
137     : ---1--------------------0--
137     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
138     : -1-----------------------0-
138     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
139     : --1-----------------------0
139     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
140     : 1-----------------------0--
140     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 18
num_suborbits: 1
141 (*) : -----1-1-------------------
141     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
142     : ----1---1------------------
142     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
143     : -----11--------------------
143     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
144     : ---1----1------------------
144     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
145     : ----1-1--------------------
145     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
146     : ---1---1-------------------
146     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
147     : --1----1-------------------
147     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
148     : -1------1------------------
148     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
149     : --1---1--------------------
149     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
150     : 1-------1------------------
150     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
151     : -1----1--------------------
151     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
152     : 1------1-------------------
152     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
153     : --1-1----------------------
153     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
154     : -1---1---------------------
154     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
155     : --11-----------------------
155     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
156     : 1----1---------------------
156     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
157     : -1-1-----------------------
157     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
158     : 1---1----------------------
158     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 9
num_suborbits: 1
159 (*) : 0----------11--------------
159     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
160     : -0---------1-1-------------
160     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
161     : --0--------1--1------------
161     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
162     : ---0------1-1--------------
162     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
163     : ----0-----1--1-------------
163     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
164     : -----0----1---1------------
164     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
165     : ------0--1--1--------------
165     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
166     : -------0-1---1-------------
166     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
167     : --------01----1------------
167     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 18
num_suborbits: 1
168 (*) : -----------11-----0--------
168     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
169     : -----------1-1-----0-------
169     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
170     : -----------1--1-----0------
170     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
171     : ----------1-1--------0-----
171     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
172     : ----------1--1--------0----
172     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
173     : ----------1---1--------0---
173     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
174     : -----------11--0-----------
174     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
175     : -----------1-1--0----------
175     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
176     : -----------1--1--0---------
176     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
177     : ---------1--1--------0-----
177     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
178     : ---------1---1--------0----
178     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
179     : ---------1----1--------0---
179     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
180     : ----------1-1--0-----------
180     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
181     : ----------1--1--0----------
181     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
182     : ----------1---1--0---------
182     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
183     : ---------1--1-----0--------
183     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
184     : ---------1---1-----0-------
184     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
185     : ---------1----1-----0------
185     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 36
num_suborbits: 1
186 (*) : -----------1--1---1--------
186     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
187     : -----------1-1----1--------
187     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
188     : -----------1--1----1-------
188     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
189     : -----------11------1-------
189     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
190     : -----------1-1------1------
190     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
191     : -----------11-------1------
191     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
192     : ----------1---1------1-----
192     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
193     : ----------1--1-------1-----
193     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
194     : ----------1---1-------1----
194     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
195     : ----------1-1---------1----
195     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
196     : ----------1--1---------1---
196     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
197     : ----------1-1----------1---
197     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
198     : -----------1--11-----------
198     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
199     : -----------1-1-1-----------
199     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
200     : -----------1--1-1----------
200     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
201     : -----------11---1----------
201     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
202     : -----------1-1---1---------
202     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
203     : -----------11----1---------
203     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
204     : ---------1----1------1-----
204     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
205     : ---------1---1-------1-----
205     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
206     : ---------1----1-------1----
206     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
207     : ---------1--1---------1----
207     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
208     : ---------1---1---------1---
208     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
209     : ---------1--1----------1---
209     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
210     : ----------1---11-----------
210     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
211     : ----------1--1-1-----------
211     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
212     : ----------1---1-1----------
212     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
213     : ----------1-1---1----------
213     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
214     : ----------1--1---1---------
214     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
215     : ----------1-1----1---------
215     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
216     : ---------1----1---1--------
216     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
217     : ---------1---1----1--------
217     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
218     : ---------1----1----1-------
218     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
219     : ---------1--1------1-------
219     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
220     : ---------1---1------1------
220     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
221     : ---------1--1-------1------
221     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
222 (*) : ----------11--1------------
222     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
223     : ----------11-1-------------
223     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
224     : ----------111--------------
224     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
225     : ---------1-1--1------------
225     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
226     : ---------1-1-1-------------
226     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
227     : ---------1-11--------------
227     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
228     : ---------11---1------------
228     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
229     : ---------11--1-------------
229     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
230     : ---------11-1--------------
230     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 9
num_suborbits: 1
231 (*) : -0--------------1--1-------
231     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
232     : --0--------------1--1------
232     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
233     : 0--------------1--1--------
233     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
234     : ----0-----------1-----1----
234     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
235     : -----0-----------1-----1---
235     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
236     : ---0-----------1-----1-----
236     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
237     : -------0-----------1--1----
237     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
238     : --------0-----------1--1---
238     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
239     : ------0-----------1--1-----
239     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 18
num_suborbits: 1
240 (*) : ---1--0-----------1--------
240     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
241     : ----1--0-----------1-------
241     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
242     : -----1--0-----------1------
242     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
243     : 1-----0--------------1-----
243     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
244     : -1-----0--------------1----
244     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
245     : --1-----0--------------1---
245     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
246     : ---0--1--------1-----------
246     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
247     : ----0--1--------1----------
247     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
248     : -----0--1--------1---------
248     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
249     : 1--0-----------------1-----
249     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
250     : -1--0-----------------1----
250     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
251     : --1--0-----------------1---
251     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
252     : 0-----1--------1-----------
252     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
253     : -0-----1--------1----------
253     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
254     : --0-----1--------1---------
254     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
255     : 0--1--------------1--------
255     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
256     : -0--1--------------1-------
256     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
257     : --0--1--------------1------
257     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
258 (*) : -1--0--1-------------------
258     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
259     : --1--0--1------------------
259     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
260     : 1--0--1--------------------
260     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
261     : -0--1--1-------------------
261     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
262     : --0--1--1------------------
262     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
263     : 0--1--1--------------------
263     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
264     : -1--1--0-------------------
264     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
265     : --1--1--0------------------
265     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
266     : 1--1--0--------------------
266     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 18
num_suborbits: 1
267 (*) : -0-----------1-------1-----
267     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
268     : --0-----------1------1-----
268     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
269     : 0-----------1---------1----
269     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
270     : --0-----------1-------1----
270     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
271     : 0-----------1----------1---
271     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
272     : -0-----------1---------1---
272     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
273     : ----0--------1----1--------
273     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
274     : -----0--------1---1--------
274     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
275     : ---0--------1------1-------
275     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
276     : -----0--------1----1-------
276     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
277     : ---0--------1-------1------
277     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
278     : ----0--------1------1------
278     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
279     : -------0-----1-1-----------
279     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
280     : --------0-----11-----------
280     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
281     : ------0-----1---1----------
281     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
282     : --------0-----1-1----------
282     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
283     : ------0-----1----1---------
283     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
284     : -------0-----1---1---------
284     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 36
num_suborbits: 1
285 (*) : -------------1--0----1-----
285     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
286     : --------------1--0---1-----
286     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
287     : ------------1--0------1----
287     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
288     : --------------1--0----1----
288     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
289     : ------------1--0-------1---
289     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
290     : -------------1--0------1---
290     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
291     : -------------1--0-1--------
291     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
292     : --------------1--01--------
292     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
293     : ------------1--0---1-------
293     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
294     : --------------1--0-1-------
294     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
295     : ------------1--0----1------
295     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
296     : -------------1--0---1------
296     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
297     : -------------1-----0-1-----
297     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
298     : --------------1-----01-----
298     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
299     : ------------1-----0---1----
299     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
300     : --------------1-----0-1----
300     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
301     : ------------1-----0----1---
301     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
302     : -------------1-----0---1---
302     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
303     : -------------1-1---0-------
303     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
304     : --------------11----0------
304     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
305     : ------------1---1-0--------
305     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
306     : --------------1-1---0------
306     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
307     : ------------1----10--------
307     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
308     : -------------1---1-0-------
308     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
309     : -------------1----1---0----
309     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
310     : --------------1---1----0---
310     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
311     : ------------1------1-0-----
311     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
312     : --------------1----1---0---
312     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
313     : ------------1-------10-----
313     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
314     : -------------1------1-0----
314     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
315     : -------------1-1------0----
315     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
316     : --------------11-------0---
316     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
317     : ------------1---1----0-----
317     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
318     : --------------1-1------0---
318     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
319     : ------------1----1---0-----
319     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
320     : -------------1---1----0----
320     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 18
num_suborbits: 1
321 (*) : -------------1----1--1-----
321     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
322     : --------------1---1--1-----
322     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
323     : ------------1------1--1----
323     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
324     : --------------1----1--1----
324     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
325     : ------------1-------1--1---
325     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
326     : -------------1------1--1---
326     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
327     : -------------1-1-----1-----
327     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
328     : --------------11-----1-----
328     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
329     : ------------1---1-----1----
329     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
330     : --------------1-1-----1----
330     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
331     : ------------1----1-----1---
331     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
332     : -------------1---1-----1---
332     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
333     : -------------1-1--1--------
333     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
334     : --------------11--1--------
334     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
335     : ------------1---1--1-------
335     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
336     : --------------1-1--1-------
336     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
337     : ------------1----1--1------
337     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
338     : -------------1---1--1------
338     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
339 (*) : -------0-----1--0----------
339     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
340     : --------0-----1--0---------
340     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
341     : ------0-----1--0-----------
341     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
342     : ----0--------1-----0-------
342     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
343     : -----0--------1-----0------
343     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
344     : ---0--------1-----0--------
344     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
345     : -0-----------1--------0----
345     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
346     : --0-----------1--------0---
346     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
347     : 0-----------1--------0-----
347     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
348 (*) : -------------1--0--0-------
348     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
349     : --------------1--0--0------
349     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
350     : ------------1--0--0--------
350     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
351     : -------------1--0-----0----
351     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
352     : --------------1--0-----0---
352     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
353     : ------------1--0-----0-----
353     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
354     : -------------1-----0--0----
354     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
355     : --------------1-----0--0---
355     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
356     : ------------1-----0--0-----
356     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 18
num_suborbits: 1
357 (*) : -------------1-1----1------
357     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
358     : --------------11---1-------
358     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
359     : ------------1---1---1------
359     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
360     : --------------1-1-1--------
360     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
361     : ------------1----1-1-------
361     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
362     : -------------1---11--------
362     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
363     : -------------1-1-------1---
363     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
364     : --------------11------1----
364     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
365     : ------------1---1------1---
365     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
366     : --------------1-1----1-----
366     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
367     : ------------1----1----1----
367     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
368     : -------------1---1---1-----
368     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
369     : -------------1----1----1---
369     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
370     : --------------1---1---1----
370     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
371     : ------------1------1---1---
371     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
372     : --------------1----1-1-----
372     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
373     : ------------1-------1-1----
373     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
374     : -------------1------11-----
374     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
375 (*) : ----0--0-----1--------1----
375     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
376     : -----0--0-----1--------1---
376     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
377     : ---0--0-----1--------1-----
377     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
378     : -0-----0-----1-----1-------
378     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
379     : --0-----0-----1-----1------
379     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
380     : 0-----0-----1-----1--------
380     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
381     : -0--0--------1--1----------
381     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
382     : --0--0--------1--1---------
382     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
383     : 0--0--------1--1-----------
383     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
384 (*) : -----------0---------0-0-0-
384     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
385     : -----------0---------00---0
385     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
386     : -----------0----------000--
386     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
387     : ----------0-------0-0----0-
387     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
388     : ----------0-------00------0
388     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
389     : ----------0--------00---0--
389     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
390     : ---------0-----0-0-------0-
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
391     : ---------0-----00---------0
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
392     : ---------0------00------0--
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 3
num_suborbits: 1
393 (*) : -----------0---------000---
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
394     : ----------0-------000------
394     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
395     : ---------0-----000---------
395     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 9
num_suborbits: 1
396 (*) : -----------0---------0---00
396     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
397     : -----------0----------0-0-0
397     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
398     : -----------0-----------000-
398     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
399     : ----------0-------0------00
399     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
400     : ----------0--------0----0-0
400     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ----------0---------0---00-
401     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
402     : ---------0-----0---------00
402     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
403     : ---------0------0-------0-0
403     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : ---------0-------0------00-
404     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 3
num_suborbits: 1
405 (*) : -0--0--0-----1-------------
405     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
406     : --0--0--0-----1------------
406     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
407     : 0--0--0-----1--------------
407     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 36
num_suborbits: 1
411 (*) : --0------0-----0----1----0-
411     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
412     : -0-------0-----0---1------0
412     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
413     : --0------0------0---1---0--
413     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
414     : 0--------0------0-1-------0
414     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
415     : -0-------0-------0-1----0--
415     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
416     : 0--------0-------01------0-
416     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
417     : -----0---0-----0-------1-0-
417     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
418     : ----0----0-----0------1---0
418     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
419     : -----0---0------0------10--
419     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
420     : ---0-----0------0----1----0
420     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
421     : ----0----0-------0----1-0--
421     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
422     : ---0-----0-------0---1---0-
422     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
423     : --0-------0------10------0-
423     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
424     : -0--------0-----1-0-------0
424     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
425     : --0-------0------1-0----0--
425     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
426     : 0---------0----1---0------0
426     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
427     : -0--------0-----1---0---0--
427     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
428     : 0---------0----1----0----0-
428     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
429     : --------0-0-------0----1-0-
429     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
430     : -------0--0-------0---1---0
430     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
431     : --------0-0--------0---10--
431     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
432     : ------0---0--------0-1----0
432     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
433     : -------0--0---------0-1-0--
433     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
434     : ------0---0---------01---0-
434     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
435     : -----0-----0-----1---0---0-
435     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
436     : ----0------0----1----0----0
436     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
437     : -----0-----0-----1----0-0--
437     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
438     : ---0-------0---1------0---0
438     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
439     : ----0------0----1------00--
439     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
440     : ---0-------0---1-------0-0-
440     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
441     : --------0--0--------10---0-
441     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
442     : -------0---0-------1-0----0
442     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
443     : --------0--0--------1-0-0--
443     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
444     : ------0----0------1---0---0
444     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
445     : -------0---0-------1---00--
445     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
446     : ------0----0------1----0-0-
446     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 18
num_suborbits: 1
447 (*) : --------0--0--------1---00-
447     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
448     : -------0---0-------1----0-0
448     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
449     : ------0----0------1------00
449     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
450     : --------0-0------------100-
450     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
451     : -------0--0-----------1-0-0
451     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
452     : ------0---0----------1---00
452     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
453     : -----0-----0-----1------00-
453     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
454     : ----0------0----1-------0-0
454     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
455     : ---0-------0---1---------00
455     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
456     : -----0---0-------------100-
456     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
457     : ----0----0------------1-0-0
457     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
458     : ---0-----0-----------1---00
458     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
459     : --0-------0------1------00-
459     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
460     : -0--------0-----1-------0-0
460     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
461     : 0---------0----1---------00
461     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
462     : --0------0----------1---00-
462     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
463     : -0-------0---------1----0-0
463     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
464     : 0--------0--------1------00
464     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
465 (*) : --0------0-----00---1------
465     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
466     : -0-------0-----0-0-1-------
466     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
467     : 0--------0------001--------
467     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
468     : -----0---0-----00------1---
468     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
469     : ----0----0-----0-0----1----
469     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
470     : ---0-----0------00---1-----
470     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
471     : --0-------0------100-------
471     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
472     : -0--------0-----1-0-0------
472     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
473     : 0---------0----1---00------
473     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
474     : --------0-0-------00---1---
474     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
475     : -------0--0-------0-0-1----
475     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
476     : ------0---0--------001-----
476     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
477     : -----0-----0-----1---00----
477     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
478     : ----0------0----1----0-0---
478     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
479     : ---0-------0---1------00---
479     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
480     : --------0--0--------100----
480     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
481     : -------0---0-------1-0-0---
481     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
482     : ------0----0------1---00---
482     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
483 (*) : 1-----0----0-------------00
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
484     : -1-----0---0------------0-0
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
485     : --1-----0--0------------00-
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
486     : ---1--0---0--------------00
486     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
487     : ----1--0--0-------------0-0
487     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
488     : -----1--0-0-------------00-
488     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
489     : 1--0-------0-------------00
489     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
490     : -1--0------0------------0-0
490     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
491     : --1--0-----0------------00-
491     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
492     : ---0--1--0---------------00
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
493     : ----0--1-0--------------0-0
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
494     : -----0--10--------------00-
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
495     : 0--1------0--------------00
495     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
496     : -0--1-----0-------------0-0
496     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
497     : --0--1----0-------------00-
497     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
498     : 0-----1--0---------------00
498     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
499     : -0-----1-0--------------0-0
499     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
500     : --0-----10--------------00-
500     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 36
num_suborbits: 1
501 (*) : 1-----0----0----------0---0
501     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
502     : 1-----0----0-----------0-0-
502     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
503     : -1-----0---0---------0----0
503     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
504     : -1-----0---0-----------00--
504     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
505     : --1-----0--0---------0---0-
505     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
506     : --1-----0--0----------0-0--
506     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
507     : ---1--0---0--------0------0
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
508     : ---1--0---0---------0----0-
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
509     : ----1--0--0-------0-------0
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
510     : ----1--0--0---------0---0--
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
511     : -----1--0-0-------0------0-
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
512     : -----1--0-0--------0----0--
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
513     : 1--0-------0----------0---0
513     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
514     : 1--0-------0-----------0-0-
514     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
515     : -1--0------0---------0----0
515     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
516     : -1--0------0-----------00--
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
517     : --1--0-----0---------0---0-
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
518     : --1--0-----0----------0-0--
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
519     : ---0--1--0------0---------0
519     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
520     : ---0--1--0-------0-------0-
520     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
521     : ----0--1-0-----0----------0
521     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
522     : ----0--1-0-------0------0--
522     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
523     : -----0--10-----0---------0-
523     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
524     : -----0--10------0-------0--
524     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
525     : 0--1------0--------0------0
525     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
526     : 0--1------0---------0----0-
526     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
527     : -0--1-----0-------0-------0
527     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
528     : -0--1-----0---------0---0--
528     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
529     : --0--1----0-------0------0-
529     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
530     : --0--1----0--------0----0--
530     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
531     : 0-----1--0------0---------0
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
532     : 0-----1--0-------0-------0-
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
533     : -0-----1-0-----0----------0
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
534     : -0-----1-0-------0------0--
534     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
535     : --0-----10-----0---------0-
535     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
536     : --0-----10------0-------0--
536     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
537 (*) : 1-----0----0----------00---
537     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
538     : -1-----0---0---------0-0---
538     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
539     : --1-----0--0---------00----
539     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
540     : ---1--0---0--------00------
540     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
541     : ----1--0--0-------0-0------
541     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
542     : -----1--0-0-------00-------
542     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
543     : 1--0-------0----------00---
543     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
544     : -1--0------0---------0-0---
544     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
545     : --1--0-----0---------00----
545     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
546     : ---0--1--0------00---------
546     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
547     : ----0--1-0-----0-0---------
547     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
548     : -----0--10-----00----------
548     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
549     : 0--1------0--------00------
549     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
550     : -0--1-----0-------0-0------
550     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
551     : --0--1----0-------00-------
551     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
552     : 0-----1--0------00---------
552     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
553     : -0-----1-0-----0-0---------
553     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
554     : --0-----10-----00----------
554     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 9
num_suborbits: 1
555 (*) : 0--------00--------------00
555     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
556     : -0-------00-------------0-0
556     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
557     : --0------00-------------00-
557     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
558     : ---0-----0-0-------------00
558     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
559     : ----0----0-0------------0-0
559     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
560     : -----0---0-0------------00-
560     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
561     : ------0---00-------------00
561     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
562     : -------0--00------------0-0
562     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
563     : --------0-00------------00-
563     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
564 (*) : 0-------0-0----1-------1-0-
564     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
565     : 0------0--0----1------1---0
565     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
566     : -0------0-0-----1------10--
566     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
567     : -0----0---0-----1----1----0
567     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
568     : --0----0--0------1----1-0--
568     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
569     : --0---0---0------1---1---0-
569     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
570     : ---0----0--0---1----1----0-
570     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
571     : ---0---0---0---1---1------0
571     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
572     : ----0---0--0----1---1---0--
572     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
573     : ----0-0----0----1-1-------0
573     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
574     : -----0-0---0-----1-1----0--
574     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
575     : -----00----0-----11------0-
575     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
576     : 0----0---0--------1----1-0-
576     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
577     : 0---0----0--------1---1---0
577     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
578     : -0---0---0---------1---10--
578     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
579     : -0-0-----0---------1-1----0
579     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
580     : --0-0----0----------1-1-0--
580     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
581     : --00-----0----------11---0-
581     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
582 (*) : 0----0---0------0-1----1---
582     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
583     : 0---0----0-------01---1----
583     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
584     : -0---0---0-----0---1---1---
584     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
585     : -0-0-----0-------0-1-1-----
585     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
586     : --0-0----0-----0----1-1----
586     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
587     : --00-----0------0---11-----
587     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
588     : 0-------0-0----1---0---1---
588     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
589     : 0------0--0----1----0-1----
589     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
590     : -0------0-0-----1-0----1---
590     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
591     : -0----0---0-----1---01-----
591     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
592     : --0----0--0------10---1----
592     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
593     : --0---0---0------1-0-1-----
593     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
594     : ---0----0--0---1----1-0----
594     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
595     : ---0---0---0---1---1---0---
595     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
596     : ----0---0--0----1---10-----
596     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
597     : ----0-0----0----1-1----0---
597     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
598     : -----0-0---0-----1-1-0-----
598     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
599     : -----00----0-----11---0----
599     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
600 (*) : ---0--0----01----------0-0-
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
601     : ---0--0----01---------0---0
601     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
602     : ----0--0---0-1---------00--
602     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
603     : ----0--0---0-1-------0----0
603     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
604     : -----0--0--0--1-------0-0--
604     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
605     : -----0--0--0--1------0---0-
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
606     : 0-----0---0-1-------0----0-
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
607     : 0-----0---0-1------0------0
607     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
608     : -0-----0--0--1------0---0--
608     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
609     : -0-----0--0--1----0-------0
609     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
610     : --0-----0-0---1----0----0--
610     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
611     : --0-----0-0---1---0------0-
611     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
612     : 0--0-----0--1----0-------0-
612     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
613     : 0--0-----0--1---0---------0
613     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
614     : -0--0----0---1---0------0--
614     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
615     : -0--0----0---1-0----------0
615     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
616     : --0--0---0----1-0-------0--
616     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
617     : --0--0---0----10---------0-
617     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 9
num_suborbits: 1
618 (*) : ---0--0----01------------00
618     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
619     : ----0--0---0-1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
620     : -----0--0--0--1---------00-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
621     : 0-----0---0-1------------00
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
622     : -0-----0--0--1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
623     : --0-----0-0---1---------00-
623     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
624     : 0--0-----0--1------------00
624     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
625     : -0--0----0---1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
626     : --0--0---0----1---------00-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 9
num_suborbits: 1
627 (*) : 0--0-----0--1---00---------
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
628     : -0--0----0---1-0-0---------
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
629     : --0--0---0----100----------
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
630     : 0-----0---0-1------00------
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
631     : -0-----0--0--1----0-0------
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
632     : --0-----0-0---1---00-------
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
633     : ---0--0----01---------00---
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
634     : ----0--0---0-1-------0-0---
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
635     : -----0--0--0--1------00----
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 18
num_suborbits: 1
636 (*) : --0------00-----0--0----0--
636     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
637     : -0-------00------0--0---0--
637     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
638     : --0------00----0--0------0-
638     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
639     : 0--------00------0--0----0-
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
640     : -0-------00----0--0-------0
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
641     : 0--------00-----0--0------0
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
642     : -----0---0-0----0-----0-0--
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
643     : ----0----0-0-----0-----00--
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
644     : -----0---0-0---0-----0---0-
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
645     : ---0-----0-0-----0-----0-0-
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
646     : ----0----0-0---0-----0----0
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
647     : ---0-----0-0----0-----0---0
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
648     : --------0-00-------0--0-0--
648     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
649     : -------0--00--------0--00--
649     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
650     : --------0-00------0--0---0-
650     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
651     : ------0---00--------0--0-0-
651     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
652     : -------0--00------0--0----0
652     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
653     : ------0---00-------0--0---0
653     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 36
num_suborbits: 1
654 (*) : 0---0----00--------0--1---0
654     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
655     : 0----0---00---------0--1-0-
655     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
656     : -0-0-----00-------0--1----0
656     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
657     : -0---0---00---------0--10--
657     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
658     : --00-----00-------0--1---0-
658     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
659     : --0-0----00--------0--1-0--
659     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
660     : -0-0-----0-0-------1--0---0
660     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
661     : --00-----0-0--------1--0-0-
661     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
662     : 0---0----0-0------1--0----0
662     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
663     : --0-0----0-0--------1--00--
663     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
664     : 0----0---0-0------1--0---0-
664     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
665     : -0---0---0-0-------1--0-0--
665     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
666     : 0------0-00-----0-----1---0
666     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
667     : 0-------000------0-----1-0-
667     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
668     : -0----0--00----0-----1----0
668     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
669     : -0------000------0-----10--
669     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
670     : --0---0--00----0-----1---0-
670     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
671     : --0----0-00-----0-----1-0--
671     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
672     : -0----0---00----1-----0---0
672     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
673     : --0---0---00-----1-----0-0-
673     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
674     : 0------0--00---1-----0----0
674     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
675     : --0----0--00-----1-----00--
675     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
676     : 0-------0-00---1-----0---0-
676     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
677     : -0------0-00----1-----0-0--
677     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
678     : ---0---0-0-0----0--1------0
678     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
679     : ---0----00-0-----0--1----0-
679     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
680     : ----0-0--0-0---0--1-------0
680     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
681     : ----0---00-0-----0--1---0--
681     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
682     : -----00--0-0---0--1------0-
682     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
683     : -----0-0-0-0----0--1----0--
683     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
684     : ----0-0---00----1--0------0
684     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
685     : -----00---00-----1--0----0-
685     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
686     : ---0---0--00---1--0-------0
686     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
687     : -----0-0--00-----1--0---0--
687     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
688     : ---0----0-00---1--0------0-
688     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
689     : ----0---0-00----1--0----0--
689     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
690 (*) : 0---0--0-00-----------1---0
690     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
691     : 0----0--000------------1-0-
691     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
692     : -0-0--0--00----------1----0
692     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
693     : -0---0--000------------10--
693     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
694     : --00--0--00----------1---0-
694     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
695     : --0-0--0-00-----------1-0--
695     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
696     : -0-0---0-0-0-------1------0
696     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
697     : --00----00-0--------1----0-
697     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
698     : 0---0-0--0-0------1-------0
698     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
699     : --0-0---00-0--------1---0--
699     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
700     : 0----00--0-0------1------0-
700     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
701     : -0---0-0-0-0-------1----0--
701     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
702     : -0--0-0---00----1---------0
702     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
703     : --0--00---00-----1-------0-
703     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
704     : 0--0---0--00---1----------0
704     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
705     : --0--0-0--00-----1------0--
705     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
706     : 0--0----0-00---1---------0-
706     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
707     : -0--0---0-00----1-------0--
707     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 9
num_suborbits: 1
708 (*) : -------0--00------0-00-0---
708     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
709     : --------0-00------00-00----
709     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
710     : ------0---00-------00-00---
710     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
711     : ----0----0-0---0-0---0-0---
711     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
712     : -----0---0-0---00----00----
712     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
713     : ---0-----0-0----00----00---
713     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
714     : -0-------00----0-00-0------
714     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
715     : --0------00----00-00-------
715     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
716     : 0--------00-----00-00------
716     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 36
num_suborbits: 1
717 (*) : 0-------000-----00-0---1---
717     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
718     : 0------0-00-----00--0-1----
718     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
719     : -0------000----0-00----1---
719     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
720     : -0----0--00----0-0--01-----
720     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
721     : --0----0-00----00-0---1----
721     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
722     : --0---0--00----00--0-1-----
722     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
723     : ---0----00-0----00--1-0----
723     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
724     : ---0---0-0-0----00-1---0---
724     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
725     : ----0---00-0---0-0--10-----
725     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
726     : ----0-0--0-0---0-01----0---
726     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
727     : -----0-0-0-0---00--1-0-----
727     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
728     : -----00--0-0---00-1---0----
728     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
729     : 0----0---00-----0--00--1---
729     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
730     : 0---0----00------0-00-1----
730     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
731     : -0---0---00----0--0-0--1---
731     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
732     : -0-0-----00------00-01-----
732     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
733     : --0-0----00----0--00--1----
733     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
734     : --00-----00-----0-00-1-----
734     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
735     : -----00---00-----1-00-0----
735     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
736     : ----0-0---00----1--00--0---
736     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
737     : -----0-0--00-----10-00-----
737     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
738     : ---0---0--00---1--0-0--0---
738     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
739     : ----0---0-00----1-00-0-----
739     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
740     : ---0----0-00---1--00--0----
740     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
741     : --00-----0-0----0---1-00---
741     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
742     : -0-0-----0-0-----0-1--00---
742     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
743     : --0-0----0-0---0----10-0---
743     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
744     : 0---0----0-0-----01--0-0---
744     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
745     : -0---0---0-0---0---1-00----
745     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
746     : 0----0---0-0----0-1--00----
746     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
747     : --0---0---00-----1-0--00---
747     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
748     : -0----0---00----1---0-00---
748     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
749     : --0----0--00-----10--0-0---
749     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
750     : 0------0--00---1----00-0---
750     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
751     : -0------0-00----1-0--00----
751     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
752     : 0-------0-00---1---0-00----
752     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
753 (*) : 0----0--000-----0--0---1---
753     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
754     : 0---0--0-00------0--0-1----
754     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
755     : -0---0--000----0--0----1---
755     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
756     : -0-0--0--00------0--01-----
756     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
757     : --0-0--0-00----0--0---1----
757     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
758     : --00--0--00-----0--0-1-----
758     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
759     : --00----00-0----0---1-0----
759     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
760     : -0-0---0-0-0-----0-1---0---
760     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
761     : --0-0---00-0---0----10-----
761     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
762     : 0---0-0--0-0-----01----0---
762     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
763     : -0---0-0-0-0---0---1-0-----
763     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
764     : 0----00--0-0----0-1---0----
764     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
765     : --0--00---00-----1-0--0----
765     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
766     : -0--0-0---00----1---0--0---
766     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
767     : --0--0-0--00-----10--0-----
767     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
768     : 0--0---0--00---1----0--0---
768     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
769     : -0--0---0-00----1-0--0-----
769     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
770     : 0--0----0-00---1---0--0----
770     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 18
num_suborbits: 1
771 (*) : -0-0--0--000----------0---0
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
772     : --00--0--000-----------0-0-
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
773     : 0---0--0-000---------0----0
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
774     : --0-0--0-000-----------00--
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
775     : 0----0--0000---------0---0-
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
776     : -0---0--0000----------0-0--
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
777     : 0---0-0--000-------0------0
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
778     : 0----00--000--------0----0-
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
779     : -0-0---0-000------0-------0
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
780     : -0---0-0-000--------0---0--
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
781     : --00----0000------0------0-
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
782     : --0-0---0000-------0----0--
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
783     : 0--0---0-000----0---------0
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
784     : 0--0----0000-----0-------0-
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
785     : -0--0-0--000---0----------0
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
786     : -0--0---0000-----0------0--
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
787     : --0--00--000---0---------0-
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
788     : --0--0-0-000----0-------0--
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
789 (*) : -0----0--000---0------0---0
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
790     : --0---0--000---0-------0-0-
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
791     : 0------0-000----0----0----0
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
792     : --0----0-000----0------00--
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
793     : 0-------0000-----0---0---0-
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
794     : -0------0000-----0----0-0--
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
795     : ----0-0--000---0---0------0
795     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
796     : -----00--000---0----0----0-
796     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
797     : ---0---0-000----0-0-------0
797     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
798     : -----0-0-000----0---0---0--
798     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
799     : ---0----0000-----00------0-
799     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
800     : ----0---0000-----0-0----0--
800     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
801     : -0-0-----000------0---0---0
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
802     : --00-----000------0----0-0-
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
803     : 0---0----000-------0-0----0
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
804     : --0-0----000-------0---00--
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
805     : 0----0---000--------00---0-
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
806     : -0---0---000--------0-0-0--
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 18
num_suborbits: 1
810 (*) : 0----00--000----0--00-0----
810     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
811     : 0---0-0--000-----0-00--0---
811     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
812     : -0---0-0-000---0--0-00-----
812     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
813     : -0-0---0-000-----00-0--0---
813     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
814     : --0-0---0000---0--00-0-----
814     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
815     : --00----0000----0-00--0----
815     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
816     : --00--0--000----0--0--00---
816     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
817     : -0-0--0--000-----0--0-00---
817     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
818     : --0-0--0-000---0--0--0-0---
818     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
819     : 0---0--0-000-----0--00-0---
819     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
820     : -0---0--0000---0--0--00----
820     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
821     : 0----0--0000----0--0-00----
821     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
822     : 0--0----0000----00-0--0----
822     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
823     : 0--0---0-000----00--0--0---
823     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
824     : -0--0---0000---0-00--0-----
824     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
825     : -0--0-0--000---0-0--0--0---
825     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
826     : --0--0-0-000---00-0--0-----
826     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
827     : --0--00--000---00--0--0----
827     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 53 =====================
size : 18
num_suborbits: 1
828 (*) : --00-----000----0-00--00---
828     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
829     : -0-0-----000-----00-0-00---
829     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
830     : --0-0----000---0--00-0-0---
830     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
831     : 0---0----000-----0-000-0---
831     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
832     : -0---0---000---0--0-000----
832     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
833     : 0----0---000----0--0000----
833     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
834     : --0---0--000---00--0--00---
834     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
835     : -0----0--000---0-0--0-00---
835     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
836     : --0----0-000---00-0--0-0---
836     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
837     : 0------0-000----00--00-0---
837     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
838     : -0------0000---0-00--00----
838     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
839     : 0-------0000----00-0-00----
839     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
840     : -----00--000---00--00-0----
840     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
841     : ----0-0--000---0-0-00--0---
841     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
842     : -----0-0-000---00-0-00-----
842     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
843     : ---0---0-000----000-0--0---
843     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
844     : ----0---0000---0-000-0-----
844     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
845     : ---0----0000----0000--0----
845     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 54 =====================
size : 3
num_suborbits: 1
846 (*) : 0-00-00-0000----0--0--0----
846     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
847     : 00-00-00-000-----0--0--0---
847     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
848     : -00-00-00000---0--0--0-----
848     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 55

[PRIME NOTE]: number of orbits before merging: 55

[PRIME NOTE]: number of primes: 849

[QRM NOTE]: Time elapsed since start: 7.779 seconds

[QRM NOTE]: Time elapsed since last: 0.418 seconds

[QRM NOTE]: Peak memory: 2528729 bytes


=============================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=============================================================================================================

definition primes: {33, 3, 36, 7, 39, 9, 46, 47, 16, 17, 18, 48, 52, 53, 54, 27}


New level: 0
 pending : [0, 1, 2, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : []

Essensial at level 0 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, 134217728), (3, -1), (4, 17179869184), (5, 1048576), (6, 17179869184), (7, -1), (8, 0), (9, -1), (10, 1048576), (11, 0), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, 4294967296), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 0 : {8, 1, 11}

After reduction : 
 pending  : [2, 4, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0]


Before reduction : 
 pending  : [2, 4, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, 134217728), (3, -1), (4, 17179869184), (5, 1048576), (6, 17179869184), (7, -1), (8, 0), (9, -1), (10, 1048576), (11, 0), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, 4294967296), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, 17179869184), (5, 1048576), (6, 17179869184), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, 4294967296), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [2, 4, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0]

[QRM NOTE]: Time elapsed since start: 7.897 seconds

[QRM NOTE]: Time elapsed since last: 0.119 seconds

[QRM NOTE]: Peak memory: 1305710 bytes


=================================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=================================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ---------------------1-1---
0     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
1     : ---------------------11----
1     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
2     : ----------------------11---
2     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
3     : ------------------1-1------
3     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
4     : ------------------11-------
4     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
5     : -------------------11------
5     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
6     : ---------------1-1---------
6     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
7     : ---------------11----------
7     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
8     : ----------------11---------
8     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 2 =====================
size : 9
num_suborbits: 1
45 (*) : ---------------------1--0--
45     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
46     : ----------------------1--0-
46     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
47     : -----------------------1--0
47     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
48     : ------------------1-----0--
48     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
49     : -------------------1-----0-
49     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
50     : --------------------1-----0
50     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
51     : ---------------1--------0--
51     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
52     : ----------------1--------0-
52     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
53     : -----------------1--------0
53     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer0)', '~start(proposer0)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
63 (*) : --------------1-----------0
63     : ['leader(proposer2)', '~start(proposer2)']
64     : -------------1-----------0-
64     : ['leader(proposer1)', '~start(proposer1)']
65     : ------------1-----------0--
65     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', '~start(proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer2)', '~start(proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)


=== Prime Orbit 5 =====================
size : 18
num_suborbits: 1
66 (*) : ---1----------1------------
66     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
67     : ---1---------1-------------
67     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
68     : ----1---------1------------
68     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
69     : ----1-------1--------------
69     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
70     : -----1-------1-------------
70     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
71     : -----1------1--------------
71     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
72     : 1-------------1------------
72     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
73     : 1------------1-------------
73     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
74     : -1------------1------------
74     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
75     : -1----------1--------------
75     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
76     : --1----------1-------------
76     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
77     : --1---------1--------------
77     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
78     : ------1-------1------------
78     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
79     : ------1------1-------------
79     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
80     : -------1------1------------
80     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
81     : -------1----1--------------
81     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
82     : --------1----1-------------
82     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
83     : --------1---1--------------
83     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0,PROPOSER1. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 6 =====================
size : 3
num_suborbits: 1
84 (*) : -------------11------------
84     : ['leader(proposer1)', 'leader(proposer2)']
85     : ------------1-1------------
85     : ['leader(proposer0)', 'leader(proposer2)']
86     : ------------11-------------
86     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'leader(proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer1)', 'leader(proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1. ~leader(PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 10 =====================
size : 9
num_suborbits: 1
132 (*) : -------1-----------------0-
132     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
133     : --------1-----------------0
133     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
134     : ------1-----------------0--
134     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
135     : ----1--------------------0-
135     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
136     : -----1--------------------0
136     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
137     : ---1--------------------0--
137     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
138     : -1-----------------------0-
138     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
139     : --1-----------------------0
139     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
140     : 1-----------------------0--
140     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 12 =====================
size : 9
num_suborbits: 1
159 (*) : 0----------11--------------
159     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
160     : -0---------1-1-------------
160     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
161     : --0--------1--1------------
161     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
162     : ---0------1-1--------------
162     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
163     : ----0-----1--1-------------
163     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
164     : -----0----1---1------------
164     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
165     : ------0--1--1--------------
165     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
166     : -------0-1---1-------------
166     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
167     : --------01----1------------
167     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor2)', 'leader(proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor2)', 'leader(proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', 'didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,QUORUM0. member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0)


=== Prime Orbit 13 =====================
size : 18
num_suborbits: 1
168 (*) : -----------11-----0--------
168     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
169     : -----------1-1-----0-------
169     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
170     : -----------1--1-----0------
170     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
171     : ----------1-1--------0-----
171     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
172     : ----------1--1--------0----
172     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
173     : ----------1---1--------0---
173     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
174     : -----------11--0-----------
174     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
175     : -----------1-1--0----------
175     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
176     : -----------1--1--0---------
176     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
177     : ---------1--1--------0-----
177     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
178     : ---------1---1--------0----
178     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
179     : ---------1----1--------0---
179     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
180     : ----------1-1--0-----------
180     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
181     : ----------1--1--0----------
181     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
182     : ----------1---1--0---------
182     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
183     : ---------1--1-----0--------
183     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
184     : ---------1---1-----0-------
184     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
185     : ---------1----1-----0------
185     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,ACCEPTOR1,PROPOSER0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 14 =====================
size : 36
num_suborbits: 1
186 (*) : -----------1--1---1--------
186     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
187     : -----------1-1----1--------
187     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
188     : -----------1--1----1-------
188     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
189     : -----------11------1-------
189     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
190     : -----------1-1------1------
190     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
191     : -----------11-------1------
191     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
192     : ----------1---1------1-----
192     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
193     : ----------1--1-------1-----
193     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
194     : ----------1---1-------1----
194     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
195     : ----------1-1---------1----
195     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
196     : ----------1--1---------1---
196     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
197     : ----------1-1----------1---
197     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
198     : -----------1--11-----------
198     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
199     : -----------1-1-1-----------
199     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
200     : -----------1--1-1----------
200     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
201     : -----------11---1----------
201     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
202     : -----------1-1---1---------
202     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
203     : -----------11----1---------
203     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
204     : ---------1----1------1-----
204     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
205     : ---------1---1-------1-----
205     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
206     : ---------1----1-------1----
206     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
207     : ---------1--1---------1----
207     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
208     : ---------1---1---------1---
208     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
209     : ---------1--1----------1---
209     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
210     : ----------1---11-----------
210     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
211     : ----------1--1-1-----------
211     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
212     : ----------1---1-1----------
212     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
213     : ----------1-1---1----------
213     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
214     : ----------1--1---1---------
214     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
215     : ----------1-1----1---------
215     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
216     : ---------1----1---1--------
216     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
217     : ---------1---1----1--------
217     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
218     : ---------1----1----1-------
218     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
219     : ---------1--1------1-------
219     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
220     : ---------1---1------1------
220     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
221     : ---------1--1-------1------
221     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER1)', 'didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,ACCEPTOR1,PROPOSER1. ~promise(ACCEPTOR1,PROPOSER1) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
222 (*) : ----------11--1------------
222     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
223     : ----------11-1-------------
223     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
224     : ----------111--------------
224     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
225     : ---------1-1--1------------
225     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
226     : ---------1-1-1-------------
226     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
227     : ---------1-11--------------
227     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
228     : ---------11---1------------
228     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
229     : ---------11--1-------------
229     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
230     : ---------11-1--------------
230     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR1)', 'didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,ACCEPTOR1,PROPOSER0. ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 19 =====================
size : 18
num_suborbits: 1
267 (*) : -0-----------1-------1-----
267     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
268     : --0-----------1------1-----
268     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
269     : 0-----------1---------1----
269     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
270     : --0-----------1-------1----
270     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
271     : 0-----------1----------1---
271     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
272     : -0-----------1---------1---
272     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
273     : ----0--------1----1--------
273     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
274     : -----0--------1---1--------
274     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
275     : ---0--------1------1-------
275     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
276     : -----0--------1----1-------
276     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
277     : ---0--------1-------1------
277     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
278     : ----0--------1------1------
278     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
279     : -------0-----1-1-----------
279     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
280     : --------0-----11-----------
280     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
281     : ------0-----1---1----------
281     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
282     : --------0-----1-1----------
282     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
283     : ------0-----1----1---------
283     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
284     : -------0-----1---1---------
284     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,ACCEPTOR0,PROPOSER0,PROPOSER1. member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 20 =====================
size : 36
num_suborbits: 1
285 (*) : -------------1--0----1-----
285     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
286     : --------------1--0---1-----
286     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
287     : ------------1--0------1----
287     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
288     : --------------1--0----1----
288     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
289     : ------------1--0-------1---
289     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
290     : -------------1--0------1---
290     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
291     : -------------1--0-1--------
291     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
292     : --------------1--01--------
292     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
293     : ------------1--0---1-------
293     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
294     : --------------1--0-1-------
294     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
295     : ------------1--0----1------
295     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
296     : -------------1--0---1------
296     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
297     : -------------1-----0-1-----
297     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
298     : --------------1-----01-----
298     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
299     : ------------1-----0---1----
299     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
300     : --------------1-----0-1----
300     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
301     : ------------1-----0----1---
301     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
302     : -------------1-----0---1---
302     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
303     : -------------1-1---0-------
303     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
304     : --------------11----0------
304     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
305     : ------------1---1-0--------
305     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
306     : --------------1-1---0------
306     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
307     : ------------1----10--------
307     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
308     : -------------1---1-0-------
308     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
309     : -------------1----1---0----
309     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
310     : --------------1---1----0---
310     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
311     : ------------1------1-0-----
311     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
312     : --------------1----1---0---
312     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
313     : ------------1-------10-----
313     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
314     : -------------1------1-0----
314     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
315     : -------------1-1------0----
315     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
316     : --------------11-------0---
316     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
317     : ------------1---1----0-----
317     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
318     : --------------1-1------0---
318     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
319     : ------------1----1---0-----
319     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
320     : -------------1---1----0----
320     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,ACCEPTOR1,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 21 =====================
size : 18
num_suborbits: 1
321 (*) : -------------1----1--1-----
321     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
322     : --------------1---1--1-----
322     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
323     : ------------1------1--1----
323     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
324     : --------------1----1--1----
324     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
325     : ------------1-------1--1---
325     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
326     : -------------1------1--1---
326     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
327     : -------------1-1-----1-----
327     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
328     : --------------11-----1-----
328     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
329     : ------------1---1-----1----
329     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
330     : --------------1-1-----1----
330     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
331     : ------------1----1-----1---
331     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
332     : -------------1---1-----1---
332     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
333     : -------------1-1--1--------
333     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
334     : --------------11--1--------
334     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
335     : ------------1---1--1-------
335     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
336     : --------------1-1--1-------
336     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
337     : ------------1----1--1------
337     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
338     : -------------1---1--1------
338     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1; proposer$0$promise$1': [proposer$0$promise$1$0; proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1; proposer$0$promise$1': proposer$0$promise$1$0; proposer$0$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,ACCEPTOR1,PROPOSER1. ~promise(ACCEPTOR1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
339 (*) : -------0-----1--0----------
339     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
340     : --------0-----1--0---------
340     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
341     : ------0-----1--0-----------
341     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
342     : ----0--------1-----0-------
342     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
343     : -----0--------1-----0------
343     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
344     : ---0--------1-----0--------
344     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
345     : -0-----------1--------0----
345     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
346     : --0-----------1--------0---
346     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
347     : 0-----------1--------0-----
347     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', '~promise(ACCEPTOR0,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,QUORUM0. member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0)


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
348 (*) : -------------1--0--0-------
348     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
349     : --------------1--0--0------
349     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
350     : ------------1--0--0--------
350     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
351     : -------------1--0-----0----
351     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
352     : --------------1--0-----0---
352     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
353     : ------------1--0-----0-----
353     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
354     : -------------1-----0--0----
354     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
355     : --------------1-----0--0---
355     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
356     : ------------1-----0--0-----
356     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,ACCEPTOR1,PROPOSER0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 24 =====================
size : 18
num_suborbits: 1
357 (*) : -------------1-1----1------
357     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
358     : --------------11---1-------
358     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
359     : ------------1---1---1------
359     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
360     : --------------1-1-1--------
360     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
361     : ------------1----1-1-------
361     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
362     : -------------1---11--------
362     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
363     : -------------1-1-------1---
363     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
364     : --------------11------1----
364     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
365     : ------------1---1------1---
365     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
366     : --------------1-1----1-----
366     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
367     : ------------1----1----1----
367     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
368     : -------------1---1---1-----
368     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
369     : -------------1----1----1---
369     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
370     : --------------1---1---1----
370     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
371     : ------------1------1---1---
371     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
372     : --------------1----1-1-----
372     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
373     : ------------1-------1-1----
373     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
374     : -------------1------11-----
374     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER2) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
375 (*) : ----0--0-----1--------1----
375     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
376     : -----0--0-----1--------1---
376     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
377     : ---0--0-----1--------1-----
377     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
378     : -0-----0-----1-----1-------
378     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
379     : --0-----0-----1-----1------
379     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
380     : 0-----0-----1-----1--------
380     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
381     : -0--0--------1--1----------
381     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
382     : --0--0--------1--1---------
382     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
383     : 0--0--------1--1-----------
383     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor2,proposer1)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor2,proposer1)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,QUORUM1,PROPOSER0,QUORUM0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | QUORUM0 = QUORUM1


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
384 (*) : -----------0---------0-0-0-
384     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
385     : -----------0---------00---0
385     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
386     : -----------0----------000--
386     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
387     : ----------0-------0-0----0-
387     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
388     : ----------0-------00------0
388     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
389     : ----------0--------00---0--
389     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
390     : ---------0-----0-0-------0-
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
391     : ---------0-----00---------0
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
392     : ---------0------00------0--
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 2, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 28 =====================
size : 9
num_suborbits: 1
396 (*) : -----------0---------0---00
396     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
397     : -----------0----------0-0-0
397     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
398     : -----------0-----------000-
398     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
399     : ----------0-------0------00
399     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
400     : ----------0--------0----0-0
400     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ----------0---------0---00-
401     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
402     : ---------0-----0---------00
402     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
403     : ---------0------0-------0-0
403     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : ---------0-------0------00-
404     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 29 =====================
size : 3
num_suborbits: 1
405 (*) : -0--0--0-----1-------------
405     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
406     : --0--0--0-----1------------
406     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
407     : 0--0--0-----1--------------
407     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))


=== Prime Orbit 30 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$2]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))


=== Prime Orbit 31 =====================
size : 36
num_suborbits: 1
411 (*) : --0------0-----0----1----0-
411     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
412     : -0-------0-----0---1------0
412     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
413     : --0------0------0---1---0--
413     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
414     : 0--------0------0-1-------0
414     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
415     : -0-------0-------0-1----0--
415     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
416     : 0--------0-------01------0-
416     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
417     : -----0---0-----0-------1-0-
417     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
418     : ----0----0-----0------1---0
418     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
419     : -----0---0------0------10--
419     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
420     : ---0-----0------0----1----0
420     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
421     : ----0----0-------0----1-0--
421     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
422     : ---0-----0-------0---1---0-
422     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
423     : --0-------0------10------0-
423     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
424     : -0--------0-----1-0-------0
424     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
425     : --0-------0------1-0----0--
425     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
426     : 0---------0----1---0------0
426     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
427     : -0--------0-----1---0---0--
427     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
428     : 0---------0----1----0----0-
428     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
429     : --------0-0-------0----1-0-
429     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
430     : -------0--0-------0---1---0
430     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
431     : --------0-0--------0---10--
431     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
432     : ------0---0--------0-1----0
432     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
433     : -------0--0---------0-1-0--
433     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
434     : ------0---0---------01---0-
434     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
435     : -----0-----0-----1---0---0-
435     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
436     : ----0------0----1----0----0
436     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
437     : -----0-----0-----1----0-0--
437     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
438     : ---0-------0---1------0---0
438     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
439     : ----0------0----1------00--
439     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
440     : ---0-------0---1-------0-0-
440     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
441     : --------0--0--------10---0-
441     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
442     : -------0---0-------1-0----0
442     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
443     : --------0--0--------1-0-0--
443     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
444     : ------0----0------1---0---0
444     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
445     : -------0---0-------1---00--
445     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
446     : ------0----0------1----0-0-
446     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER2)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR1,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 32 =====================
size : 18
num_suborbits: 1
447 (*) : --------0--0--------1---00-
447     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
448     : -------0---0-------1----0-0
448     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
449     : ------0----0------1------00
449     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
450     : --------0-0------------100-
450     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
451     : -------0--0-----------1-0-0
451     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
452     : ------0---0----------1---00
452     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
453     : -----0-----0-----1------00-
453     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
454     : ----0------0----1-------0-0
454     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
455     : ---0-------0---1---------00
455     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
456     : -----0---0-------------100-
456     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
457     : ----0----0------------1-0-0
457     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
458     : ---0-----0-----------1---00
458     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
459     : --0-------0------1------00-
459     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
460     : -0--------0-----1-------0-0
460     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
461     : 0---------0----1---------00
461     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
462     : --0------0----------1---00-
462     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
463     : -0-------0---------1----0-0
463     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
464     : 0--------0--------1------00
464     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$promise$0$0, 'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER1)', '~start(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,ACCEPTOR0,ACCEPTOR1,PROPOSER1. didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
483 (*) : 1-----0----0-------------00
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
484     : -1-----0---0------------0-0
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
485     : --1-----0--0------------00-
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
486     : ---1--0---0--------------00
486     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
487     : ----1--0--0-------------0-0
487     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
488     : -----1--0-0-------------00-
488     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
489     : 1--0-------0-------------00
489     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
490     : -1--0------0------------0-0
490     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
491     : --1--0-----0------------00-
491     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
492     : ---0--1--0---------------00
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
493     : ----0--1-0--------------0-0
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
494     : -----0--10--------------00-
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
495     : 0--1------0--------------00
495     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
496     : -0--1-----0-------------0-0
496     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
497     : --0--1----0-------------00-
497     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
498     : 0-----1--0---------------00
498     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
499     : -0-----1-0--------------0-0
499     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
500     : --0-----10--------------00-
500     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$start': 2, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER1)', '~member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER0)', 'chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,QUORUM0,QUORUM1,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 35 =====================
size : 36
num_suborbits: 1
501 (*) : 1-----0----0----------0---0
501     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
502     : 1-----0----0-----------0-0-
502     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
503     : -1-----0---0---------0----0
503     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
504     : -1-----0---0-----------00--
504     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
505     : --1-----0--0---------0---0-
505     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
506     : --1-----0--0----------0-0--
506     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
507     : ---1--0---0--------0------0
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
508     : ---1--0---0---------0----0-
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
509     : ----1--0--0-------0-------0
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
510     : ----1--0--0---------0---0--
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
511     : -----1--0-0-------0------0-
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
512     : -----1--0-0--------0----0--
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
513     : 1--0-------0----------0---0
513     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
514     : 1--0-------0-----------0-0-
514     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
515     : -1--0------0---------0----0
515     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
516     : -1--0------0-----------00--
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
517     : --1--0-----0---------0---0-
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
518     : --1--0-----0----------0-0--
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
519     : ---0--1--0------0---------0
519     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
520     : ---0--1--0-------0-------0-
520     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
521     : ----0--1-0-----0----------0
521     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
522     : ----0--1-0-------0------0--
522     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
523     : -----0--10-----0---------0-
523     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
524     : -----0--10------0-------0--
524     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
525     : 0--1------0--------0------0
525     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
526     : 0--1------0---------0----0-
526     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
527     : -0--1-----0-------0-------0
527     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
528     : -0--1-----0---------0---0--
528     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
529     : --0--1----0-------0------0-
529     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
530     : --0--1----0--------0----0--
530     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
531     : 0-----1--0------0---------0
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
532     : 0-----1--0-------0-------0-
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
533     : -0-----1-0-----0----------0
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
534     : -0-----1-0-------0------0--
534     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
535     : --0-----10-----0---------0-
535     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
536     : --0-----10------0-------0--
536     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '1$start': 1, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER2)', '~chosenAt(QUORUM1,PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR0,QUORUM0)', 'chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER2,QUORUM0,PROPOSER0,ACCEPTOR0,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 37 =====================
size : 9
num_suborbits: 1
555 (*) : 0--------00--------------00
555     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
556     : -0-------00-------------0-0
556     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
557     : --0------00-------------00-
557     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
558     : ---0-----0-0-------------00
558     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
559     : ----0----0-0------------0-0
559     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
560     : -----0---0-0------------00-
560     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
561     : ------0---00-------------00
561     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
562     : -------0--00------------0-0
562     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
563     : --------0-00------------00-
563     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,ACCEPTOR0,ACCEPTOR1,PROPOSER1. didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
564 (*) : 0-------0-0----1-------1-0-
564     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
565     : 0------0--0----1------1---0
565     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
566     : -0------0-0-----1------10--
566     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
567     : -0----0---0-----1----1----0
567     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
568     : --0----0--0------1----1-0--
568     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
569     : --0---0---0------1---1---0-
569     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
570     : ---0----0--0---1----1----0-
570     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
571     : ---0---0---0---1---1------0
571     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
572     : ----0---0--0----1---1---0--
572     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
573     : ----0-0----0----1-1-------0
573     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
574     : -----0-0---0-----1-1----0--
574     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
575     : -----00----0-----11------0-
575     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
576     : 0----0---0--------1----1-0-
576     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
577     : 0---0----0--------1---1---0
577     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
578     : -0---0---0---------1---10--
578     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
579     : -0-0-----0---------1-1----0
579     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
580     : --0-0----0----------1-1-0--
580     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
581     : --00-----0----------11---0-
581     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$0$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0, proposer$1$chosenAt$1$0, proposer$0$promise$1$1, proposer$1$chosenAt$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$promise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$promise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR1)', '~start(PROPOSER2)', 'member(ACCEPTOR1,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR2,PROPOSER1)', 'member(ACCEPTOR1,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', '~member(ACCEPTOR0,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR1) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR2,PROPOSER1) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
600 (*) : ---0--0----01----------0-0-
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
601     : ---0--0----01---------0---0
601     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
602     : ----0--0---0-1---------00--
602     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
603     : ----0--0---0-1-------0----0
603     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
604     : -----0--0--0--1-------0-0--
604     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
605     : -----0--0--0--1------0---0-
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
606     : 0-----0---0-1-------0----0-
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
607     : 0-----0---0-1------0------0
607     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
608     : -0-----0--0--1------0---0--
608     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
609     : -0-----0--0--1----0-------0
609     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
610     : --0-----0-0---1----0----0--
610     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
611     : --0-----0-0---1---0------0-
611     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
612     : 0--0-----0--1----0-------0-
612     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
613     : 0--0-----0--1---0---------0
613     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
614     : -0--0----0---1---0------0--
614     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
615     : -0--0----0---1-0----------0
615     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
616     : --0--0---0----1-0-------0--
616     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
617     : --0--0---0----10---------0-
617     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER2,QUORUM0,PROPOSER0,ACCEPTOR0,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 41 =====================
size : 9
num_suborbits: 1
618 (*) : ---0--0----01------------00
618     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
619     : ----0--0---0-1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
620     : -----0--0--0--1---------00-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
621     : 0-----0---0-1------------00
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
622     : -0-----0--0--1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
623     : --0-----0-0---1---------00-
623     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
624     : 0--0-----0--1------------00
624     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
625     : -0--0----0---1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
626     : --0--0---0----1---------00-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,QUORUM0,QUORUM1,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 42 =====================
size : 9
num_suborbits: 1
627 (*) : 0--0-----0--1---00---------
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
628     : -0--0----0---1-0-0---------
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
629     : --0--0---0----100----------
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
630     : 0-----0---0-1------00------
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
631     : -0-----0--0--1----0-0------
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
632     : --0-----0-0---1---00-------
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
633     : ---0--0----01---------00---
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
634     : ----0--0---0-1-------0-0---
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
635     : -----0--0--0--1------00----
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~promise(ACCEPTOR0,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,QUORUM0,QUORUM1,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 43 =====================
size : 18
num_suborbits: 1
636 (*) : --0------00-----0--0----0--
636     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
637     : -0-------00------0--0---0--
637     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
638     : --0------00----0--0------0-
638     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
639     : 0--------00------0--0----0-
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
640     : -0-------00----0--0-------0
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
641     : 0--------00-----0--0------0
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
642     : -----0---0-0----0-----0-0--
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
643     : ----0----0-0-----0-----00--
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
644     : -----0---0-0---0-----0---0-
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
645     : ---0-----0-0-----0-----0-0-
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
646     : ----0----0-0---0-----0----0
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
647     : ---0-----0-0----0-----0---0
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
648     : --------0-00-------0--0-0--
648     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
649     : -------0--00--------0--00--
649     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
650     : --------0-00------0--0---0-
650     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
651     : ------0---00--------0--0-0-
651     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
652     : -------0--00------0--0----0
652     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
653     : ------0---00-------0--0---0
653     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0, proposer$1$promise$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$promise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$promise$1; proposer$1$promise$1': [proposer$1$promise$1$0; proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$promise$1; proposer$1$promise$1': proposer$1$promise$1$0; proposer$1$promise$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR1)', '~start(PROPOSER2)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~promise(ACCEPTOR1,PROPOSER1)', '~promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR1) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR1,PROPOSER1) | promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 44 =====================
size : 36
num_suborbits: 1
654 (*) : 0---0----00--------0--1---0
654     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
655     : 0----0---00---------0--1-0-
655     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
656     : -0-0-----00-------0--1----0
656     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
657     : -0---0---00---------0--10--
657     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
658     : --00-----00-------0--1---0-
658     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
659     : --0-0----00--------0--1-0--
659     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
660     : -0-0-----0-0-------1--0---0
660     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
661     : --00-----0-0--------1--0-0-
661     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
662     : 0---0----0-0------1--0----0
662     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
663     : --0-0----0-0--------1--00--
663     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
664     : 0----0---0-0------1--0---0-
664     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
665     : -0---0---0-0-------1--0-0--
665     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
666     : 0------0-00-----0-----1---0
666     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
667     : 0-------000------0-----1-0-
667     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
668     : -0----0--00----0-----1----0
668     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
669     : -0------000------0-----10--
669     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
670     : --0---0--00----0-----1---0-
670     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
671     : --0----0-00-----0-----1-0--
671     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
672     : -0----0---00----1-----0---0
672     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
673     : --0---0---00-----1-----0-0-
673     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
674     : 0------0--00---1-----0----0
674     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
675     : --0----0--00-----1-----00--
675     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
676     : 0-------0-00---1-----0---0-
676     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
677     : -0------0-00----1-----0-0--
677     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
678     : ---0---0-0-0----0--1------0
678     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
679     : ---0----00-0-----0--1----0-
679     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
680     : ----0-0--0-0---0--1-------0
680     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
681     : ----0---00-0-----0--1---0--
681     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
682     : -----00--0-0---0--1------0-
682     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
683     : -----0-0-0-0----0--1----0--
683     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
684     : ----0-0---00----1--0------0
684     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
685     : -----00---00-----1--0----0-
685     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
686     : ---0---0--00---1--0-------0
686     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
687     : -----0-0--00-----1--0---0--
687     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
688     : ---0----0-00---1--0------0-
688     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
689     : ----0---0-00----1--0----0--
689     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1, acceptor$1$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 2, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER2)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR1,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~promise(ACCEPTOR2,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', 'promise(ACCEPTOR1,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
690 (*) : 0---0--0-00-----------1---0
690     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
691     : 0----0--000------------1-0-
691     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
692     : -0-0--0--00----------1----0
692     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
693     : -0---0--000------------10--
693     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
694     : --00--0--00----------1---0-
694     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
695     : --0-0--0-00-----------1-0--
695     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
696     : -0-0---0-0-0-------1------0
696     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
697     : --00----00-0--------1----0-
697     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
698     : 0---0-0--0-0------1-------0
698     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
699     : --0-0---00-0--------1---0--
699     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
700     : 0----00--0-0------1------0-
700     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
701     : -0---0-0-0-0-------1----0--
701     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
702     : -0--0-0---00----1---------0
702     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
703     : --0--00---00-----1-------0-
703     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
704     : 0--0---0--00---1----------0
704     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
705     : --0--0-0--00-----1------0--
705     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
706     : 0--0----0-00---1---------0-
706     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
707     : -0--0---0-00----1-------0--
707     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 2, '0$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER2)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM2,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM2)', '~chosenAt(QUORUM1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR2,QUORUM1)', 'promise(ACCEPTOR1,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER2,ACCEPTOR2,QUORUM2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM2) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | (QUORUM0 = QUORUM2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM1 = QUORUM2 | QUORUM0 = QUORUM1)


=== Prime Orbit 49 =====================
size : 18
num_suborbits: 1
771 (*) : -0-0--0--000----------0---0
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
772     : --00--0--000-----------0-0-
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
773     : 0---0--0-000---------0----0
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
774     : --0-0--0-000-----------00--
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
775     : 0----0--0000---------0---0-
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
776     : -0---0--0000----------0-0--
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
777     : 0---0-0--000-------0------0
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
778     : 0----00--000--------0----0-
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
779     : -0-0---0-000------0-------0
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
780     : -0---0-0-000--------0---0--
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
781     : --00----0000------0------0-
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
782     : --0-0---0000-------0----0--
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
783     : 0--0---0-000----0---------0
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
784     : 0--0----0000-----0-------0-
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
785     : -0--0-0--000---0----------0
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
786     : -0--0---0000-----0------0--
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
787     : --0--00--000---0---------0-
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
788     : --0--0-0-000----0-------0--
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 3, '1$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$0], 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': proposer$1$chosenAt$1$0; proposer$1$promise$1$0, 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR2)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', '~start(PROPOSER2)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR0,QUORUM2)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM2)', '~chosenAt(QUORUM2,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER1)', '~promise(ACCEPTOR1,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER2,ACCEPTOR2,QUORUM2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM2,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | (QUORUM0 = QUORUM2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM1 = QUORUM2 | QUORUM0 = QUORUM1)


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
789 (*) : -0----0--000---0------0---0
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
790     : --0---0--000---0-------0-0-
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
791     : 0------0-000----0----0----0
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
792     : --0----0-000----0------00--
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
793     : 0-------0000-----0---0---0-
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
794     : -0------0000-----0----0-0--
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
795     : ----0-0--000---0---0------0
795     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
796     : -----00--000---0----0----0-
796     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
797     : ---0---0-000----0-0-------0
797     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
798     : -----0-0-000----0---0---0--
798     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
799     : ---0----0000-----00------0-
799     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
800     : ----0---0000-----0-0----0--
800     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
801     : -0-0-----000------0---0---0
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
802     : --00-----000------0----0-0-
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
803     : 0---0----000-------0-0----0
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
804     : --0-0----000-------0---00--
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
805     : 0----0---000--------00---0-
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
806     : -0---0---000--------0-0-0--
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$1, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 3, '1$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0, proposer$1$promise$1$1, proposer$1$chosenAt$1$1, proposer$1$promise$1$0]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR2)', '~didNotPromise(ACCEPTOR1)', '~start(PROPOSER2)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~promise(ACCEPTOR2,PROPOSER0)', 'member(ACCEPTOR1,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', '~member(ACCEPTOR0,QUORUM1)', '~promise(ACCEPTOR0,PROPOSER1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR1) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR0,QUORUM1) | promise(ACCEPTOR0,PROPOSER1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$3': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$4': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$5': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 6, '1$didNotPromise': 3, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER1)', '~didNotPromise(ACCEPTOR2)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM2,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM2)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR2,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR2,QUORUM2,QUORUM0,ACCEPTOR1,ACCEPTOR0,PROPOSER1. start(PROPOSER1) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM0 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM1 = QUORUM2 | QUORUM0 = QUORUM1)


===========================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

===========================================================================================================================


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ---------------------1-1---
0     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
1     : ---------------------11----
1     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
2     : ----------------------11---
2     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
3     : ------------------1-1------
3     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
4     : ------------------11-------
4     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
5     : -------------------11------
5     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
6     : ---------------1-1---------
6     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
7     : ---------------11----------
7     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
8     : ----------------11---------
8     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 2 =====================
size : 9
num_suborbits: 1
45 (*) : ---------------------1--0--
45     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
46     : ----------------------1--0-
46     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
47     : -----------------------1--0
47     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
48     : ------------------1-----0--
48     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
49     : -------------------1-----0-
49     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
50     : --------------------1-----0
50     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
51     : ---------------1--------0--
51     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
52     : ----------------1--------0-
52     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
53     : -----------------1--------0
53     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall ACCEPTOR0,PROPOSER0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)
qcost : 4




=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
63 (*) : --------------1-----------0
63     : ['leader(proposer2)', '~start(proposer2)']
64     : -------------1-----------0-
64     : ['leader(proposer1)', '~start(proposer1)']
65     : ------------1-----------0--
65     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)
qcost : 3




=== Prime Orbit 5 =====================
size : 18
num_suborbits: 1
66 (*) : ---1----------1------------
66     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
67     : ---1---------1-------------
67     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
68     : ----1---------1------------
68     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
69     : ----1-------1--------------
69     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
70     : -----1-------1-------------
70     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
71     : -----1------1--------------
71     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
72     : 1-------------1------------
72     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
73     : 1------------1-------------
73     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
74     : -1------------1------------
74     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
75     : -1----------1--------------
75     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
76     : --1----------1-------------
76     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
77     : --1---------1--------------
77     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
78     : ------1-------1------------
78     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
79     : ------1------1-------------
79     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
80     : -------1------1------------
80     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
81     : -------1----1--------------
81     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
82     : --------1----1-------------
82     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
83     : --------1---1--------------
83     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall QUORUM0,PROPOSER0,PROPOSER1. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 6 =====================
size : 3
num_suborbits: 1
84 (*) : -------------11------------
84     : ['leader(proposer1)', 'leader(proposer2)']
85     : ------------1-1------------
85     : ['leader(proposer0)', 'leader(proposer2)']
86     : ------------11-------------
86     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,PROPOSER1. ~leader(PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 5




=== Prime Orbit 10 =====================
size : 9
num_suborbits: 1
132 (*) : -------1-----------------0-
132     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
133     : --------1-----------------0
133     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
134     : ------1-----------------0--
134     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
135     : ----1--------------------0-
135     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
136     : -----1--------------------0
136     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
137     : ---1--------------------0--
137     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
138     : -1-----------------------0-
138     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
139     : --1-----------------------0
139     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
140     : 1-----------------------0--
140     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 12 =====================
size : 9
num_suborbits: 1
159 (*) : 0----------11--------------
159     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
160     : -0---------1-1-------------
160     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
161     : --0--------1--1------------
161     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
162     : ---0------1-1--------------
162     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
163     : ----0-----1--1-------------
163     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
164     : -----0----1---1------------
164     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
165     : ------0--1--1--------------
165     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
166     : -------0-1---1-------------
166     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
167     : --------01----1------------
167     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER0,QUORUM0. member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0)
qcost : 7




=== Prime Orbit 13 =====================
size : 18
num_suborbits: 1
168 (*) : -----------11-----0--------
168     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
169     : -----------1-1-----0-------
169     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
170     : -----------1--1-----0------
170     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
171     : ----------1-1--------0-----
171     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
172     : ----------1--1--------0----
172     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
173     : ----------1---1--------0---
173     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
174     : -----------11--0-----------
174     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
175     : -----------1-1--0----------
175     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
176     : -----------1--1--0---------
176     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
177     : ---------1--1--------0-----
177     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
178     : ---------1---1--------0----
178     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
179     : ---------1----1--------0---
179     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
180     : ----------1-1--0-----------
180     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
181     : ----------1--1--0----------
181     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
182     : ----------1---1--0---------
182     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
183     : ---------1--1-----0--------
183     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
184     : ---------1---1-----0-------
184     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
185     : ---------1----1-----0------
185     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR0,ACCEPTOR1,PROPOSER0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 14 =====================
size : 36
num_suborbits: 1
186 (*) : -----------1--1---1--------
186     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
187     : -----------1-1----1--------
187     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
188     : -----------1--1----1-------
188     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
189     : -----------11------1-------
189     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
190     : -----------1-1------1------
190     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
191     : -----------11-------1------
191     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
192     : ----------1---1------1-----
192     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
193     : ----------1--1-------1-----
193     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
194     : ----------1---1-------1----
194     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
195     : ----------1-1---------1----
195     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
196     : ----------1--1---------1---
196     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
197     : ----------1-1----------1---
197     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
198     : -----------1--11-----------
198     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
199     : -----------1-1-1-----------
199     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
200     : -----------1--1-1----------
200     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
201     : -----------11---1----------
201     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
202     : -----------1-1---1---------
202     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
203     : -----------11----1---------
203     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
204     : ---------1----1------1-----
204     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
205     : ---------1---1-------1-----
205     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
206     : ---------1----1-------1----
206     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
207     : ---------1--1---------1----
207     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
208     : ---------1---1---------1---
208     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
209     : ---------1--1----------1---
209     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
210     : ----------1---11-----------
210     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
211     : ----------1--1-1-----------
211     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
212     : ----------1---1-1----------
212     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
213     : ----------1-1---1----------
213     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
214     : ----------1--1---1---------
214     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
215     : ----------1-1----1---------
215     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
216     : ---------1----1---1--------
216     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
217     : ---------1---1----1--------
217     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
218     : ---------1----1----1-------
218     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
219     : ---------1--1------1-------
219     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
220     : ---------1---1------1------
220     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
221     : ---------1--1-------1------
221     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall ACCEPTOR0,PROPOSER0,ACCEPTOR1,PROPOSER1. ~promise(ACCEPTOR1,PROPOSER1) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
222 (*) : ----------11--1------------
222     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
223     : ----------11-1-------------
223     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
224     : ----------111--------------
224     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
225     : ---------1-1--1------------
225     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
226     : ---------1-1-1-------------
226     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
227     : ---------1-11--------------
227     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
228     : ---------11---1------------
228     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
229     : ---------11--1-------------
229     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
230     : ---------11-1--------------
230     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR0,ACCEPTOR1,PROPOSER0. ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 19 =====================
size : 18
num_suborbits: 1
267 (*) : -0-----------1-------1-----
267     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
268     : --0-----------1------1-----
268     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
269     : 0-----------1---------1----
269     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
270     : --0-----------1-------1----
270     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
271     : 0-----------1----------1---
271     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
272     : -0-----------1---------1---
272     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
273     : ----0--------1----1--------
273     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
274     : -----0--------1---1--------
274     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
275     : ---0--------1------1-------
275     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
276     : -----0--------1----1-------
276     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
277     : ---0--------1-------1------
277     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
278     : ----0--------1------1------
278     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
279     : -------0-----1-1-----------
279     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
280     : --------0-----11-----------
280     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
281     : ------0-----1---1----------
281     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
282     : --------0-----1-1----------
282     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
283     : ------0-----1----1---------
283     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
284     : -------0-----1---1---------
284     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall QUORUM0,ACCEPTOR0,PROPOSER0,PROPOSER1. member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 20 =====================
size : 36
num_suborbits: 1
285 (*) : -------------1--0----1-----
285     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
286     : --------------1--0---1-----
286     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
287     : ------------1--0------1----
287     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
288     : --------------1--0----1----
288     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
289     : ------------1--0-------1---
289     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
290     : -------------1--0------1---
290     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
291     : -------------1--0-1--------
291     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
292     : --------------1--01--------
292     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
293     : ------------1--0---1-------
293     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
294     : --------------1--0-1-------
294     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
295     : ------------1--0----1------
295     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
296     : -------------1--0---1------
296     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
297     : -------------1-----0-1-----
297     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
298     : --------------1-----01-----
298     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
299     : ------------1-----0---1----
299     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
300     : --------------1-----0-1----
300     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
301     : ------------1-----0----1---
301     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
302     : -------------1-----0---1---
302     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
303     : -------------1-1---0-------
303     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
304     : --------------11----0------
304     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
305     : ------------1---1-0--------
305     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
306     : --------------1-1---0------
306     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
307     : ------------1----10--------
307     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
308     : -------------1---1-0-------
308     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
309     : -------------1----1---0----
309     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
310     : --------------1---1----0---
310     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
311     : ------------1------1-0-----
311     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
312     : --------------1----1---0---
312     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
313     : ------------1-------10-----
313     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
314     : -------------1------1-0----
314     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
315     : -------------1-1------0----
315     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
316     : --------------11-------0---
316     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
317     : ------------1---1----0-----
317     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
318     : --------------1-1------0---
318     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
319     : ------------1----1---0-----
319     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
320     : -------------1---1----0----
320     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall ACCEPTOR0,PROPOSER0,ACCEPTOR1,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 21 =====================
size : 18
num_suborbits: 1
321 (*) : -------------1----1--1-----
321     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
322     : --------------1---1--1-----
322     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
323     : ------------1------1--1----
323     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
324     : --------------1----1--1----
324     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
325     : ------------1-------1--1---
325     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
326     : -------------1------1--1---
326     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
327     : -------------1-1-----1-----
327     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
328     : --------------11-----1-----
328     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
329     : ------------1---1-----1----
329     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
330     : --------------1-1-----1----
330     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
331     : ------------1----1-----1---
331     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
332     : -------------1---1-----1---
332     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
333     : -------------1-1--1--------
333     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
334     : --------------11--1--------
334     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
335     : ------------1---1--1-------
335     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
336     : --------------1-1--1-------
336     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
337     : ------------1----1--1------
337     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
338     : -------------1---1--1------
338     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall ACCEPTOR0,PROPOSER0,ACCEPTOR1,PROPOSER1. ~promise(ACCEPTOR1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
339 (*) : -------0-----1--0----------
339     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
340     : --------0-----1--0---------
340     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
341     : ------0-----1--0-----------
341     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
342     : ----0--------1-----0-------
342     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
343     : -----0--------1-----0------
343     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
344     : ---0--------1-----0--------
344     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
345     : -0-----------1--------0----
345     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
346     : --0-----------1--------0---
346     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
347     : 0-----------1--------0-----
347     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER0,QUORUM0. member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0)
qcost : 7




=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
348 (*) : -------------1--0--0-------
348     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
349     : --------------1--0--0------
349     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
350     : ------------1--0--0--------
350     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
351     : -------------1--0-----0----
351     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
352     : --------------1--0-----0---
352     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
353     : ------------1--0-----0-----
353     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
354     : -------------1-----0--0----
354     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
355     : --------------1-----0--0---
355     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
356     : ------------1-----0--0-----
356     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR0,ACCEPTOR1,PROPOSER0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 24 =====================
size : 18
num_suborbits: 1
357 (*) : -------------1-1----1------
357     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
358     : --------------11---1-------
358     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
359     : ------------1---1---1------
359     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
360     : --------------1-1-1--------
360     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
361     : ------------1----1-1-------
361     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
362     : -------------1---11--------
362     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
363     : -------------1-1-------1---
363     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
364     : --------------11------1----
364     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
365     : ------------1---1------1---
365     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
366     : --------------1-1----1-----
366     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
367     : ------------1----1----1----
367     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
368     : -------------1---1---1-----
368     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
369     : -------------1----1----1---
369     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
370     : --------------1---1---1----
370     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
371     : ------------1------1---1---
371     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
372     : --------------1----1-1-----
372     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
373     : ------------1-------1-1----
373     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
374     : -------------1------11-----
374     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
num_forall :   5
num_exists :   0
num_literals : 7
quantified form : forall PROPOSER2,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER2) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 12




=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
375 (*) : ----0--0-----1--------1----
375     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
376     : -----0--0-----1--------1---
376     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
377     : ---0--0-----1--------1-----
377     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
378     : -0-----0-----1-----1-------
378     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
379     : --0-----0-----1-----1------
379     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
380     : 0-----0-----1-----1--------
380     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
381     : -0--0--------1--1----------
381     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
382     : --0--0--------1--1---------
382     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
383     : 0--0--------1--1-----------
383     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall ACCEPTOR0,QUORUM1,PROPOSER0,QUORUM0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
384 (*) : -----------0---------0-0-0-
384     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
385     : -----------0---------00---0
385     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
386     : -----------0----------000--
386     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
387     : ----------0-------0-0----0-
387     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
388     : ----------0-------00------0
388     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
389     : ----------0--------00---0--
389     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
390     : ---------0-----0-0-------0-
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
391     : ---------0-----00---------0
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
392     : ---------0------00------0--
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER1. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 28 =====================
size : 9
num_suborbits: 1
396 (*) : -----------0---------0---00
396     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
397     : -----------0----------0-0-0
397     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
398     : -----------0-----------000-
398     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
399     : ----------0-------0------00
399     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
400     : ----------0--------0----0-0
400     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ----------0---------0---00-
401     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
402     : ---------0-----0---------00
402     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
403     : ---------0------0-------0-0
403     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : ---------0-------0------00-
404     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 29 =====================
size : 3
num_suborbits: 1
405 (*) : -0--0--0-----1-------------
405     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
406     : --0--0--0-----1------------
406     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
407     : 0--0--0-----1--------------
407     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))
qcost : 4




=== Prime Orbit 30 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))
qcost : 4




=== Prime Orbit 31 =====================
size : 36
num_suborbits: 1
411 (*) : --0------0-----0----1----0-
411     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
412     : -0-------0-----0---1------0
412     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
413     : --0------0------0---1---0--
413     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
414     : 0--------0------0-1-------0
414     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
415     : -0-------0-------0-1----0--
415     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
416     : 0--------0-------01------0-
416     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
417     : -----0---0-----0-------1-0-
417     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
418     : ----0----0-----0------1---0
418     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
419     : -----0---0------0------10--
419     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
420     : ---0-----0------0----1----0
420     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
421     : ----0----0-------0----1-0--
421     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
422     : ---0-----0-------0---1---0-
422     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
423     : --0-------0------10------0-
423     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
424     : -0--------0-----1-0-------0
424     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
425     : --0-------0------1-0----0--
425     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
426     : 0---------0----1---0------0
426     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
427     : -0--------0-----1---0---0--
427     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
428     : 0---------0----1----0----0-
428     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
429     : --------0-0-------0----1-0-
429     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
430     : -------0--0-------0---1---0
430     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
431     : --------0-0--------0---10--
431     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
432     : ------0---0--------0-1----0
432     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
433     : -------0--0---------0-1-0--
433     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
434     : ------0---0---------01---0-
434     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
435     : -----0-----0-----1---0---0-
435     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
436     : ----0------0----1----0----0
436     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
437     : -----0-----0-----1----0-0--
437     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
438     : ---0-------0---1------0---0
438     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
439     : ----0------0----1------00--
439     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
440     : ---0-------0---1-------0-0-
440     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
441     : --------0--0--------10---0-
441     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
442     : -------0---0-------1-0----0
442     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
443     : --------0--0--------1-0-0--
443     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
444     : ------0----0------1---0---0
444     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
445     : -------0---0-------1---00--
445     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
446     : ------0----0------1----0-0-
446     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall PROPOSER2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 17




=== Prime Orbit 32 =====================
size : 18
num_suborbits: 1
447 (*) : --------0--0--------1---00-
447     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
448     : -------0---0-------1----0-0
448     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
449     : ------0----0------1------00
449     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
450     : --------0-0------------100-
450     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
451     : -------0--0-----------1-0-0
451     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
452     : ------0---0----------1---00
452     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
453     : -----0-----0-----1------00-
453     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
454     : ----0------0----1-------0-0
454     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
455     : ---0-------0---1---------00
455     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
456     : -----0---0-------------100-
456     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
457     : ----0----0------------1-0-0
457     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
458     : ---0-----0-----------1---00
458     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
459     : --0-------0------1------00-
459     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
460     : -0--------0-----1-------0-0
460     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
461     : 0---------0----1---------00
461     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
462     : --0------0----------1---00-
462     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
463     : -0-------0---------1----0-0
463     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
464     : 0--------0--------1------00
464     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall QUORUM0,ACCEPTOR0,ACCEPTOR1,PROPOSER1. didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
483 (*) : 1-----0----0-------------00
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
484     : -1-----0---0------------0-0
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
485     : --1-----0--0------------00-
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
486     : ---1--0---0--------------00
486     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
487     : ----1--0--0-------------0-0
487     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
488     : -----1--0-0-------------00-
488     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
489     : 1--0-------0-------------00
489     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
490     : -1--0------0------------0-0
490     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
491     : --1--0-----0------------00-
491     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
492     : ---0--1--0---------------00
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
493     : ----0--1-0--------------0-0
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
494     : -----0--10--------------00-
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
495     : 0--1------0--------------00
495     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
496     : -0--1-----0-------------0-0
496     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
497     : --0--1----0-------------00-
497     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
498     : 0-----1--0---------------00
498     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
499     : -0-----1-0--------------0-0
499     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
500     : --0-----10--------------00-
500     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR0,QUORUM0,QUORUM1,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 13




=== Prime Orbit 35 =====================
size : 36
num_suborbits: 1
501 (*) : 1-----0----0----------0---0
501     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
502     : 1-----0----0-----------0-0-
502     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
503     : -1-----0---0---------0----0
503     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
504     : -1-----0---0-----------00--
504     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
505     : --1-----0--0---------0---0-
505     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
506     : --1-----0--0----------0-0--
506     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
507     : ---1--0---0--------0------0
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
508     : ---1--0---0---------0----0-
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
509     : ----1--0--0-------0-------0
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
510     : ----1--0--0---------0---0--
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
511     : -----1--0-0-------0------0-
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
512     : -----1--0-0--------0----0--
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
513     : 1--0-------0----------0---0
513     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
514     : 1--0-------0-----------0-0-
514     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
515     : -1--0------0---------0----0
515     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
516     : -1--0------0-----------00--
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
517     : --1--0-----0---------0---0-
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
518     : --1--0-----0----------0-0--
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
519     : ---0--1--0------0---------0
519     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
520     : ---0--1--0-------0-------0-
520     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
521     : ----0--1-0-----0----------0
521     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
522     : ----0--1-0-------0------0--
522     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
523     : -----0--10-----0---------0-
523     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
524     : -----0--10------0-------0--
524     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
525     : 0--1------0--------0------0
525     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
526     : 0--1------0---------0----0-
526     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
527     : -0--1-----0-------0-------0
527     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
528     : -0--1-----0---------0---0--
528     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
529     : --0--1----0-------0------0-
529     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
530     : --0--1----0--------0----0--
530     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
531     : 0-----1--0------0---------0
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
532     : 0-----1--0-------0-------0-
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
533     : -0-----1-0-----0----------0
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
534     : -0-----1-0-------0------0--
534     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
535     : --0-----10-----0---------0-
535     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
536     : --0-----10------0-------0--
536     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall QUORUM1,PROPOSER2,QUORUM0,PROPOSER0,ACCEPTOR0,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1)
qcost : 17




=== Prime Orbit 37 =====================
size : 9
num_suborbits: 1
555 (*) : 0--------00--------------00
555     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
556     : -0-------00-------------0-0
556     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
557     : --0------00-------------00-
557     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
558     : ---0-----0-0-------------00
558     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
559     : ----0----0-0------------0-0
559     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
560     : -----0---0-0------------00-
560     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
561     : ------0---00-------------00
561     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
562     : -------0--00------------0-0
562     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
563     : --------0-00------------00-
563     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall QUORUM0,ACCEPTOR0,ACCEPTOR1,PROPOSER1. didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
564 (*) : 0-------0-0----1-------1-0-
564     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
565     : 0------0--0----1------1---0
565     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
566     : -0------0-0-----1------10--
566     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
567     : -0----0---0-----1----1----0
567     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
568     : --0----0--0------1----1-0--
568     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
569     : --0---0---0------1---1---0-
569     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
570     : ---0----0--0---1----1----0-
570     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
571     : ---0---0---0---1---1------0
571     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
572     : ----0---0--0----1---1---0--
572     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
573     : ----0-0----0----1-1-------0
573     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
574     : -----0-0---0-----1-1----0--
574     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
575     : -----00----0-----11------0-
575     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
576     : 0----0---0--------1----1-0-
576     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
577     : 0---0----0--------1---1---0
577     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
578     : -0---0---0---------1---10--
578     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
579     : -0-0-----0---------1-1----0
579     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
580     : --0-0----0----------1-1-0--
580     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
581     : --00-----0----------11---0-
581     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 19
quantified form : forall QUORUM1,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR1) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR2,PROPOSER1) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 27




=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
600 (*) : ---0--0----01----------0-0-
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
601     : ---0--0----01---------0---0
601     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
602     : ----0--0---0-1---------00--
602     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
603     : ----0--0---0-1-------0----0
603     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
604     : -----0--0--0--1-------0-0--
604     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
605     : -----0--0--0--1------0---0-
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
606     : 0-----0---0-1-------0----0-
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
607     : 0-----0---0-1------0------0
607     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
608     : -0-----0--0--1------0---0--
608     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
609     : -0-----0--0--1----0-------0
609     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
610     : --0-----0-0---1----0----0--
610     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
611     : --0-----0-0---1---0------0-
611     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
612     : 0--0-----0--1----0-------0-
612     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
613     : 0--0-----0--1---0---------0
613     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
614     : -0--0----0---1---0------0--
614     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
615     : -0--0----0---1-0----------0
615     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
616     : --0--0---0----1-0-------0--
616     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
617     : --0--0---0----10---------0-
617     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall QUORUM1,PROPOSER2,QUORUM0,PROPOSER0,ACCEPTOR0,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1)
qcost : 18




=== Prime Orbit 41 =====================
size : 9
num_suborbits: 1
618 (*) : ---0--0----01------------00
618     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
619     : ----0--0---0-1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
620     : -----0--0--0--1---------00-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
621     : 0-----0---0-1------------00
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
622     : -0-----0--0--1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
623     : --0-----0-0---1---------00-
623     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
624     : 0--0-----0--1------------00
624     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
625     : -0--0----0---1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
626     : --0--0---0----1---------00-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall ACCEPTOR0,QUORUM0,QUORUM1,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 42 =====================
size : 9
num_suborbits: 1
627 (*) : 0--0-----0--1---00---------
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
628     : -0--0----0---1-0-0---------
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
629     : --0--0---0----100----------
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
630     : 0-----0---0-1------00------
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
631     : -0-----0--0--1----0-0------
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
632     : --0-----0-0---1---00-------
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
633     : ---0--0----01---------00---
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
634     : ----0--0---0-1-------0-0---
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
635     : -----0--0--0--1------00----
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall ACCEPTOR0,QUORUM0,QUORUM1,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 43 =====================
size : 18
num_suborbits: 1
636 (*) : --0------00-----0--0----0--
636     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
637     : -0-------00------0--0---0--
637     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
638     : --0------00----0--0------0-
638     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
639     : 0--------00------0--0----0-
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
640     : -0-------00----0--0-------0
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
641     : 0--------00-----0--0------0
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
642     : -----0---0-0----0-----0-0--
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
643     : ----0----0-0-----0-----00--
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
644     : -----0---0-0---0-----0---0-
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
645     : ---0-----0-0-----0-----0-0-
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
646     : ----0----0-0---0-----0----0
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
647     : ---0-----0-0----0-----0---0
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
648     : --------0-00-------0--0-0--
648     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
649     : -------0--00--------0--00--
649     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
650     : --------0-00------0--0---0-
650     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
651     : ------0---00--------0--0-0-
651     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
652     : -------0--00------0--0----0
652     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
653     : ------0---00-------0--0---0
653     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall PROPOSER2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR1) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR1,PROPOSER1) | promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 18




=== Prime Orbit 44 =====================
size : 36
num_suborbits: 1
654 (*) : 0---0----00--------0--1---0
654     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
655     : 0----0---00---------0--1-0-
655     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
656     : -0-0-----00-------0--1----0
656     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
657     : -0---0---00---------0--10--
657     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
658     : --00-----00-------0--1---0-
658     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
659     : --0-0----00--------0--1-0--
659     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
660     : -0-0-----0-0-------1--0---0
660     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
661     : --00-----0-0--------1--0-0-
661     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
662     : 0---0----0-0------1--0----0
662     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
663     : --0-0----0-0--------1--00--
663     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
664     : 0----0---0-0------1--0---0-
664     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
665     : -0---0---0-0-------1--0-0--
665     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
666     : 0------0-00-----0-----1---0
666     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
667     : 0-------000------0-----1-0-
667     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
668     : -0----0--00----0-----1----0
668     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
669     : -0------000------0-----10--
669     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
670     : --0---0--00----0-----1---0-
670     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
671     : --0----0-00-----0-----1-0--
671     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
672     : -0----0---00----1-----0---0
672     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
673     : --0---0---00-----1-----0-0-
673     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
674     : 0------0--00---1-----0----0
674     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
675     : --0----0--00-----1-----00--
675     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
676     : 0-------0-00---1-----0---0-
676     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
677     : -0------0-00----1-----0-0--
677     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
678     : ---0---0-0-0----0--1------0
678     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
679     : ---0----00-0-----0--1----0-
679     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
680     : ----0-0--0-0---0--1-------0
680     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
681     : ----0---00-0-----0--1---0--
681     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
682     : -----00--0-0---0--1------0-
682     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
683     : -----0-0-0-0----0--1----0--
683     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
684     : ----0-0---00----1--0------0
684     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
685     : -----00---00-----1--0----0-
685     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
686     : ---0---0--00---1--0-------0
686     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
687     : -----0-0--00-----1--0---0--
687     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
688     : ---0----0-00---1--0------0-
688     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
689     : ----0---0-00----1--0----0--
689     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   8
num_exists :   0
num_literals : 20
quantified form : forall QUORUM1,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 28




=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
690 (*) : 0---0--0-00-----------1---0
690     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
691     : 0----0--000------------1-0-
691     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
692     : -0-0--0--00----------1----0
692     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
693     : -0---0--000------------10--
693     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
694     : --00--0--00----------1---0-
694     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
695     : --0-0--0-00-----------1-0--
695     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
696     : -0-0---0-0-0-------1------0
696     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
697     : --00----00-0--------1----0-
697     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
698     : 0---0-0--0-0------1-------0
698     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
699     : --0-0---00-0--------1---0--
699     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
700     : 0----00--0-0------1------0-
700     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
701     : -0---0-0-0-0-------1----0--
701     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
702     : -0--0-0---00----1---------0
702     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
703     : --0--00---00-----1-------0-
703     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
704     : 0--0---0--00---1----------0
704     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
705     : --0--0-0--00-----1------0--
705     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
706     : 0--0----0-00---1---------0-
706     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
707     : -0--0---0-00----1-------0--
707     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   9
num_exists :   0
num_literals : 25
quantified form : forall QUORUM1,PROPOSER2,ACCEPTOR2,QUORUM2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM2) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | (QUORUM0 = QUORUM2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM1 = QUORUM2 | QUORUM0 = QUORUM1)
qcost : 34




=== Prime Orbit 49 =====================
size : 18
num_suborbits: 1
771 (*) : -0-0--0--000----------0---0
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
772     : --00--0--000-----------0-0-
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
773     : 0---0--0-000---------0----0
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
774     : --0-0--0-000-----------00--
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
775     : 0----0--0000---------0---0-
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
776     : -0---0--0000----------0-0--
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
777     : 0---0-0--000-------0------0
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
778     : 0----00--000--------0----0-
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
779     : -0-0---0-000------0-------0
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
780     : -0---0-0-000--------0---0--
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
781     : --00----0000------0------0-
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
782     : --0-0---0000-------0----0--
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
783     : 0--0---0-000----0---------0
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
784     : 0--0----0000-----0-------0-
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
785     : -0--0-0--000---0----------0
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
786     : -0--0---0000-----0------0--
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
787     : --0--00--000---0---------0-
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
788     : --0--0-0-000----0-------0--
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   9
num_exists :   0
num_literals : 26
quantified form : forall QUORUM1,PROPOSER2,ACCEPTOR2,QUORUM2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM2,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | (QUORUM0 = QUORUM2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM1 = QUORUM2 | QUORUM0 = QUORUM1)
qcost : 35




=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
789 (*) : -0----0--000---0------0---0
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
790     : --0---0--000---0-------0-0-
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
791     : 0------0-000----0----0----0
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
792     : --0----0-000----0------00--
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
793     : 0-------0000-----0---0---0-
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
794     : -0------0000-----0----0-0--
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
795     : ----0-0--000---0---0------0
795     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
796     : -----00--000---0----0----0-
796     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
797     : ---0---0-000----0-0-------0
797     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
798     : -----0-0-000----0---0---0--
798     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
799     : ---0----0000-----00------0-
799     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
800     : ----0---0000-----0-0----0--
800     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
801     : -0-0-----000------0---0---0
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
802     : --00-----000------0----0-0-
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
803     : 0---0----000-------0-0----0
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
804     : --0-0----000-------0---00--
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
805     : 0----0---000--------00---0-
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
806     : -0---0---000--------0-0-0--
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   8
num_exists :   0
num_literals : 21
quantified form : forall QUORUM1,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR1) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR0,QUORUM1) | promise(ACCEPTOR0,PROPOSER1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 29




=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   7
num_exists :   1
num_literals : 23
quantified form : forall QUORUM1,ACCEPTOR2,QUORUM2,QUORUM0,ACCEPTOR1,ACCEPTOR0,PROPOSER1. start(PROPOSER1) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM0 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM1 = QUORUM2 | QUORUM0 = QUORUM1)
qcost : 31



[QRM NOTE]: Time elapsed since start: 8.341 seconds

[QRM NOTE]: Time elapsed since last: 0.444 seconds

[QRM NOTE]: Peak memory: 3315305 bytes


==========================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

==========================================================================================================


New level: 1
 pending : [2, 4, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0]


Before reduction : 
 pending  : [2, 4, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, 17179869184), (5, 1048576), (6, 17179869184), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, 4294967296), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, 17179869184), (5, 1048576), (6, 17179869184), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, 4294967296), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [2, 4, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 1 among pending : [2, 4, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, 17179869184), (5, 1048576), (6, 17179869184), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, 4294967296), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 4 with phase True at level 1

After decision at level 1
 pending : [2, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0, 4]


New level: 2
 pending : [2, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0, 4]


Before reduction : 
 pending  : [2, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0, 4]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, 17179869184), (5, 1048576), (6, 17179869184), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, 4294967296), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, 4294967296), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, 1073741824), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, 2147483648), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [2, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0, 4]


Solution : [0, 4] has cost 9.


Decide in level 2 among pending : [2, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, 4294967296), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, 1073741824), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, 2147483648), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 6 with phase True at level 2

After decision at level 2
 pending : [2, 5, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6]


New level: 3
 pending : [2, 5, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6]


Before reduction : 
 pending  : [2, 5, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, 4294967296), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, 1073741824), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, 2147483648), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 268435456), (29, 536870912), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 5, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6]


Solution : [0, 4, 6] has cost 14.


Decide in level 3 among pending : [2, 5, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 268435456), (29, 536870912), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 29 with phase True at level 3

After decision at level 3
 pending : [2, 5, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29]


New level: 4
 pending : [2, 5, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29]


Before reduction : 
 pending  : [2, 5, 10, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 268435456), (29, 536870912), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 4 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25}

After reduction : 
 pending  : [2, 10, 26, 28, 30, 31, 32, 34, 35, 37, 38, 40, 41, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29]


Before reduction : 
 pending  : [2, 10, 26, 28, 30, 31, 32, 34, 35, 37, 38, 40, 41, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [2, 10, 26, 28, 30, 31, 32, 34, 35, 37, 38, 40, 41, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29]


Solution : [0, 4, 6, 29] has cost 18.


Decide in level 4 among pending : [2, 10, 26, 28, 30, 31, 32, 34, 35, 37, 38, 40, 41, 43, 44, 45, 49, 50, 51]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 30 with phase True at level 4

After decision at level 4
 pending : [2, 10, 26, 28, 31, 32, 34, 35, 37, 38, 40, 41, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30]


New level: 5
 pending : [2, 10, 26, 28, 31, 32, 34, 35, 37, 38, 40, 41, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30]


Before reduction : 
 pending  : [2, 10, 26, 28, 31, 32, 34, 35, 37, 38, 40, 41, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 268435456), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 10, 26, 28, 31, 32, 34, 35, 37, 38, 40, 41, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30]


Solution : [0, 4, 6, 29, 30] has cost 22.


Decide in level 5 among pending : [2, 10, 26, 28, 31, 32, 34, 35, 37, 38, 40, 41, 43, 44, 45, 49, 50, 51]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 268435456), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 5

After decision at level 5
 pending : [2, 10, 26, 28, 31, 32, 34, 35, 38, 40, 41, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37]


New level: 6
 pending : [2, 10, 26, 28, 31, 32, 34, 35, 38, 40, 41, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37]


Before reduction : 
 pending  : [2, 10, 26, 28, 31, 32, 34, 35, 38, 40, 41, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 268435456), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 2048), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : {32, 41, 34}

After reduction : 
 pending  : [2, 10, 26, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37]


Before reduction : 
 pending  : [2, 10, 26, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 2048), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 2048), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 10, 26, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37]


Solution : [0, 4, 6, 29, 30, 37] has cost 35.


Decide in level 6 among pending : [2, 10, 26, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 2048), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 6

After decision at level 6
 pending : [10, 26, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37, 2]


New level: 7
 pending : [10, 26, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37, 2]


Before reduction : 
 pending  : [10, 26, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 2048), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 26, 28, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 37, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 37, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 37, 2]


Solution : [0, 4, 6, 29, 30, 37, 2] has cost 39.


Before backtrack at level 7
 pending : []
 solution : [0, 4, 6, 29, 30, 37, 2]

After backtrack at level 7
 pending : [10, 26, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37, 2]


Invert decision for 2 at level 6


New level: 7
 pending : [10, 26, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37]


Before reduction : 
 pending  : [10, 26, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37]

Essensial at level 7 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 28, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 37, 26]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 37, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 37, 26]


Solution : [0, 4, 6, 29, 30, 37, 26] has cost 42.


Before backtrack at level 7
 pending : []
 solution : [0, 4, 6, 29, 30, 37, 26]

After backtrack at level 7
 pending : [26, 10, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37]


Before backtrack at level 6
 pending : [26, 10, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 37]

After backtrack at level 6
 pending : [26, 10, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 6, 29, 30, 37]


Invert decision for 37 at level 5


New level: 6
 pending : [26, 10, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 6, 29, 30]


Before reduction : 
 pending  : [26, 10, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 6, 29, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 10, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 6, 29, 30]


Solution : [0, 4, 6, 29, 30] has cost 22.


Decide in level 6 among pending : [26, 10, 28, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 6, 29, 30, 28]


New level: 7
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 6, 29, 30, 28]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 6, 29, 30, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {32, 41, 34}

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 30, 28]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 30, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 30, 28]


Solution : [0, 4, 6, 29, 30, 28] has cost 29.


Decide in level 7 among pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 30, 28, 26]


New level: 8
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 30, 28, 26]


Before reduction : 
 pending  : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 30, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {2, 35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 28, 26]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 28, 26]


Solution : [0, 4, 6, 29, 30, 28, 26] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 6, 29, 30, 28, 26]

After backtrack at level 8
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 30, 28, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 30, 28]


Before reduction : 
 pending  : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 30, 28]

Essensial at level 8 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 28, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 28, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 28, 2]


Solution : [0, 4, 6, 29, 30, 28, 2] has cost 33.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 6, 29, 30, 28, 2]

After backtrack at level 8
 pending : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 28]


Before backtrack at level 7
 pending : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 30, 28]

After backtrack at level 7
 pending : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 30, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 30]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 30]


Solution : [0, 4, 6, 29, 30] has cost 22.


Decide in level 7 among pending : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 30, 2]


New level: 8
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 30, 2]


Before reduction : 
 pending  : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 30, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 2]


Solution : [0, 4, 6, 29, 30, 2] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 6, 29, 30, 2]

After backtrack at level 8
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 30, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 30]


Before reduction : 
 pending  : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 30]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 26]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 30, 26]


Solution : [0, 4, 6, 29, 30, 26] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 6, 29, 30, 26]

After backtrack at level 8
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 4, 6, 29, 30]


Before backtrack at level 7
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 4, 6, 29, 30]

After backtrack at level 7
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 6, 29, 30]


Before backtrack at level 6
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 6, 29, 30]

After backtrack at level 6
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 6, 29, 30]


Before backtrack at level 5
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 6, 29, 30]

After backtrack at level 5
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]
 solution : [0, 4, 6, 29, 30]


Invert decision for 30 at level 4


New level: 5
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]
 solution : [0, 4, 6, 29]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]
 solution : [0, 4, 6, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]
 solution : [0, 4, 6, 29]


Solution : [0, 4, 6, 29] has cost 18.


Decide in level 5 among pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 5

After decision at level 5
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 6, 29, 37]


New level: 6
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 6, 29, 37]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 6, 29, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : {32, 41, 34}

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28]
 solution : [0, 4, 6, 29, 37]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28]
 solution : [0, 4, 6, 29, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28]
 solution : [0, 4, 6, 29, 37]


Solution : [0, 4, 6, 29, 37] has cost 31.


Before backtrack at level 6
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28]
 solution : [0, 4, 6, 29, 37]

After backtrack at level 6
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 6, 29, 37]


Invert decision for 37 at level 5


New level: 6
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 6, 29]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 6, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 6, 29]


Solution : [0, 4, 6, 29] has cost 18.


Decide in level 6 among pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 6, 29, 28]


New level: 7
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 6, 29, 28]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 6, 29, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {32, 41, 34}

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 28]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 28]


Solution : [0, 4, 6, 29, 28] has cost 25.


Decide in level 7 among pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 28, 26]


New level: 8
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 28, 26]


Before reduction : 
 pending  : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {2, 35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 28, 26]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 28, 26]


Solution : [0, 4, 6, 29, 28, 26] has cost 32.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 6, 29, 28, 26]

After backtrack at level 8
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 28, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 28]


Before reduction : 
 pending  : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 29, 28]

Essensial at level 8 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 28, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 28, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 28, 2]


Solution : [0, 4, 6, 29, 28, 2] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 6, 29, 28, 2]

After backtrack at level 8
 pending : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 28]


Before backtrack at level 7
 pending : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 29, 28]

After backtrack at level 7
 pending : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29]


Solution : [0, 4, 6, 29] has cost 18.


Decide in level 7 among pending : [2, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 2]


New level: 8
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 2]


Before reduction : 
 pending  : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 2]


Solution : [0, 4, 6, 29, 2] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 6, 29, 2]

After backtrack at level 8
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29]


Before reduction : 
 pending  : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 6, 29]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 26]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 29, 26]


Solution : [0, 4, 6, 29, 26] has cost 25.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 6, 29, 26]

After backtrack at level 8
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 4, 6, 29]


Before backtrack at level 7
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 4, 6, 29]

After backtrack at level 7
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 6, 29]


Before backtrack at level 6
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 6, 29]

After backtrack at level 6
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 6, 29]


Before backtrack at level 5
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 6, 29]

After backtrack at level 5
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]
 solution : [0, 4, 6, 29]


Before backtrack at level 4
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]
 solution : [0, 4, 6, 29]

After backtrack at level 4
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30]
 solution : [0, 4, 6, 29]


Invert decision for 29 at level 3


New level: 4
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30]
 solution : [0, 4, 6]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30]
 solution : [0, 4, 6]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30]
 solution : [0, 4, 6]


Solution : [0, 4, 6] has cost 14.


Decide in level 4 among pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 4

After decision at level 4
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30]
 solution : [0, 4, 6, 37]


New level: 5
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30]
 solution : [0, 4, 6, 37]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30]
 solution : [0, 4, 6, 37]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 8192), (29, -1), (30, 524288), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 4096), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : {32, 34}

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30]
 solution : [0, 4, 6, 37]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30]
 solution : [0, 4, 6, 37]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 8192), (29, -1), (30, 524288), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 4096), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 8192), (29, -1), (30, 524288), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 4096), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30]
 solution : [0, 4, 6, 37]


Solution : [0, 4, 6, 37] has cost 27.


Before backtrack at level 5
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30]
 solution : [0, 4, 6, 37]

After backtrack at level 5
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30, 32, 34]
 solution : [0, 4, 6, 37]


Invert decision for 37 at level 4


New level: 5
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30, 32, 34]
 solution : [0, 4, 6]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30, 32, 34]
 solution : [0, 4, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 8192), (29, -1), (30, 524288), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 4096), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30, 32, 34]
 solution : [0, 4, 6]


Solution : [0, 4, 6] has cost 14.


Decide in level 5 among pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 30, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 30 with phase True at level 5

After decision at level 5
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30]


New level: 6
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30]


Solution : [0, 4, 6, 30] has cost 18.


Decide in level 6 among pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 42, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 22 with phase True at level 6

After decision at level 6
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30, 22]


New level: 7
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30, 22]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25}

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 32, 34]
 solution : [0, 4, 6, 30, 22]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 32, 34]
 solution : [0, 4, 6, 30, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 32, 34]
 solution : [0, 4, 6, 30, 22]


Solution : [0, 4, 6, 30, 22] has cost 25.


Before backtrack at level 7
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 32, 34]
 solution : [0, 4, 6, 30, 22]

After backtrack at level 7
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 22]


Invert decision for 22 at level 6


New level: 7
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30]


Solution : [0, 4, 6, 30] has cost 18.


Decide in level 7 among pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 41, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 41 with phase True at level 7

After decision at level 7
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 41]


New level: 8
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 41]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 41]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, 524288), (32, 262144), (33, -1), (34, 2048), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 16777216), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 41]


Solution : [0, 4, 6, 30, 41] has cost 32.


Before backtrack at level 8
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 41]

After backtrack at level 8
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 41]


Invert decision for 41 at level 7


New level: 8
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, 524288), (32, 262144), (33, -1), (34, 2048), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 16777216), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30]


Solution : [0, 4, 6, 30] has cost 18.


Decide in level 8 among pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 8

After decision at level 8
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 28]


New level: 9
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 28]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : {32, 34}

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 28]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 28]


Solution : [0, 4, 6, 30, 28] has cost 25.


Before backtrack at level 9
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42]
 solution : [0, 4, 6, 30, 28]

After backtrack at level 9
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30, 28]


Invert decision for 28 at level 8


New level: 9
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30]


Solution : [0, 4, 6, 30] has cost 18.


Decide in level 9 among pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 5, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 42, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 23 with phase True at level 9

After decision at level 9
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30, 23]


New level: 10
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30, 23]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42, 32, 34]
 solution : [0, 4, 6, 30, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, -1), (42, 0), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 24, 25}

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 4, 6, 30, 23]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 4, 6, 30, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, -1), (42, 0), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, -1), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 4, 6, 30, 23]


Solution : [0, 4, 6, 30, 23] has cost 25.


Before backtrack at level 10
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 4, 6, 30, 23]

After backtrack at level 10
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 23]


Invert decision for 23 at level 9


New level: 10
 pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, -1), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30]


Solution : [0, 4, 6, 30] has cost 18.


Decide in level 10 among pending : [26, 10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 26]


New level: 11
 pending : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 26]


Before reduction : 
 pending  : [10, 31, 35, 38, 40, 43, 44, 45, 49, 50, 51, 2, 32, 34, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 2, 35, 34, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [40, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 26]


Before reduction : 
 pending  : [40, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 26]


Solution : [0, 4, 6, 30, 26] has cost 25.


Before backtrack at level 11
 pending : [40, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 26]

After backtrack at level 11
 pending : [40, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 4, 6, 30, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [40, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 4, 6, 30]


Before reduction : 
 pending  : [40, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 4, 6, 30]

Essensial at level 11 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 34, 35, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [40, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 2]


Before reduction : 
 pending  : [40, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 2]


Solution : [0, 4, 6, 30, 2] has cost 22.


Decide in level 11 among pending : [40, 5, 12, 13, 14, 15, 19, 20, 21, 24, 25, 42]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 19 with phase True at level 11

After decision at level 11
 pending : [40, 5, 12, 13, 14, 15, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 2, 19]


New level: 12
 pending : [40, 5, 12, 13, 14, 15, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 2, 19]


Before reduction : 
 pending  : [40, 5, 12, 13, 14, 15, 20, 21, 24, 25, 42]
 solution : [0, 4, 6, 30, 2, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {5, 14, 20, 21, 24}

After reduction : 
 pending  : [40, 12, 13, 15, 25, 42]
 solution : [0, 4, 6, 30, 2, 19]


Before reduction : 
 pending  : [40, 12, 13, 15, 25, 42]
 solution : [0, 4, 6, 30, 2, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 12, 13, 15, 25, 42]
 solution : [0, 4, 6, 30, 2, 19]


Solution : [0, 4, 6, 30, 2, 19] has cost 31.


Before backtrack at level 12
 pending : [40, 12, 13, 15, 25, 42]
 solution : [0, 4, 6, 30, 2, 19]

After backtrack at level 12
 pending : [40, 12, 13, 15, 25, 42, 5, 14, 20, 21, 24]
 solution : [0, 4, 6, 30, 2, 19]


Invert decision for 19 at level 11


New level: 12
 pending : [40, 12, 13, 15, 25, 42, 5, 14, 20, 21, 24]
 solution : [0, 4, 6, 30, 2]


Before reduction : 
 pending  : [40, 12, 13, 15, 25, 42, 5, 14, 20, 21, 24]
 solution : [0, 4, 6, 30, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 12, 13, 15, 25, 42, 5, 14, 20, 21, 24]
 solution : [0, 4, 6, 30, 2]


Solution : [0, 4, 6, 30, 2] has cost 22.


Decide in level 12 among pending : [40, 12, 13, 15, 25, 42, 5, 14, 20, 21, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [40, 13, 15, 25, 42, 5, 14, 20, 21, 24]
 solution : [0, 4, 6, 30, 2, 12]


New level: 13
 pending : [40, 13, 15, 25, 42, 5, 14, 20, 21, 24]
 solution : [0, 4, 6, 30, 2, 12]


Before reduction : 
 pending  : [40, 13, 15, 25, 42, 5, 14, 20, 21, 24]
 solution : [0, 4, 6, 30, 2, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [40, 25, 42, 5, 20, 21, 24]
 solution : [0, 4, 6, 30, 2, 12]


Before reduction : 
 pending  : [40, 25, 42, 5, 20, 21, 24]
 solution : [0, 4, 6, 30, 2, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 20, 21, 24]
 solution : [0, 4, 6, 30, 2, 12]


Solution : [0, 4, 6, 30, 2, 12] has cost 29.


Before backtrack at level 13
 pending : [40, 25, 42, 5, 20, 21, 24]
 solution : [0, 4, 6, 30, 2, 12]

After backtrack at level 13
 pending : [40, 25, 42, 5, 20, 21, 24, 13, 15, 14]
 solution : [0, 4, 6, 30, 2, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [40, 25, 42, 5, 20, 21, 24, 13, 15, 14]
 solution : [0, 4, 6, 30, 2]


Before reduction : 
 pending  : [40, 25, 42, 5, 20, 21, 24, 13, 15, 14]
 solution : [0, 4, 6, 30, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 20, 21, 24, 13, 15, 14]
 solution : [0, 4, 6, 30, 2]


Solution : [0, 4, 6, 30, 2] has cost 22.


Decide in level 13 among pending : [40, 25, 42, 5, 20, 21, 24, 13, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [40, 25, 42, 5, 21, 24, 13, 15, 14]
 solution : [0, 4, 6, 30, 2, 20]


New level: 14
 pending : [40, 25, 42, 5, 21, 24, 13, 15, 14]
 solution : [0, 4, 6, 30, 2, 20]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 13, 15, 14]
 solution : [0, 4, 6, 30, 2, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {24, 21, 5, 14}

After reduction : 
 pending  : [40, 25, 42, 13, 15]
 solution : [0, 4, 6, 30, 2, 20]


Before reduction : 
 pending  : [40, 25, 42, 13, 15]
 solution : [0, 4, 6, 30, 2, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 42, 13, 15]
 solution : [0, 4, 6, 30, 2, 20]


Solution : [0, 4, 6, 30, 2, 20] has cost 31.


Before backtrack at level 14
 pending : [40, 25, 42, 13, 15]
 solution : [0, 4, 6, 30, 2, 20]

After backtrack at level 14
 pending : [40, 25, 42, 13, 15, 5, 21, 24, 14]
 solution : [0, 4, 6, 30, 2, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [40, 25, 42, 13, 15, 5, 21, 24, 14]
 solution : [0, 4, 6, 30, 2]


Before reduction : 
 pending  : [40, 25, 42, 13, 15, 5, 21, 24, 14]
 solution : [0, 4, 6, 30, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 42, 13, 15, 5, 21, 24, 14]
 solution : [0, 4, 6, 30, 2]


Solution : [0, 4, 6, 30, 2] has cost 22.


Decide in level 14 among pending : [40, 25, 42, 13, 15, 5, 21, 24, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 4, 6, 30, 2, 13]


New level: 15
 pending : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 4, 6, 30, 2, 13]


Before reduction : 
 pending  : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 4, 6, 30, 2, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 6, 30, 2, 13]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 6, 30, 2, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 6, 30, 2, 13]


Solution : [0, 4, 6, 30, 2, 13] has cost 29.


Before backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 6, 30, 2, 13]

After backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 4, 6, 30, 2, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 4, 6, 30, 2]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 4, 6, 30, 2]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 6, 30, 2, 15]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 6, 30, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 6, 30, 2, 15]


Solution : [0, 4, 6, 30, 2, 15] has cost 29.


Before backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 6, 30, 2, 15]

After backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 14, 15]
 solution : [0, 4, 6, 30, 2]


Before backtrack at level 14
 pending : [40, 25, 42, 5, 21, 24, 14, 15]
 solution : [0, 4, 6, 30, 2]

After backtrack at level 14
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 4, 6, 30, 2]


Before backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 4, 6, 30, 2]

After backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 4, 6, 30, 2]


Before backtrack at level 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 4, 6, 30, 2]

After backtrack at level 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 6, 30, 2]


Before backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 6, 30, 2]

After backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19]
 solution : [0, 4, 6, 30]


Before backtrack at level 10
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19]
 solution : [0, 4, 6, 30]

After backtrack at level 10
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26]
 solution : [0, 4, 6, 30]


Before backtrack at level 9
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26]
 solution : [0, 4, 6, 30]

After backtrack at level 9
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23]
 solution : [0, 4, 6, 30]


Before backtrack at level 8
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23]
 solution : [0, 4, 6, 30]

After backtrack at level 8
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 28]
 solution : [0, 4, 6, 30]


Before backtrack at level 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 28]
 solution : [0, 4, 6, 30]

After backtrack at level 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 28, 41]
 solution : [0, 4, 6, 30]


Before backtrack at level 6
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 28, 41]
 solution : [0, 4, 6, 30]

After backtrack at level 6
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 28, 41, 22]
 solution : [0, 4, 6, 30]


Invert decision for 30 at level 5


New level: 6
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 28, 41, 22]
 solution : [0, 4, 6]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 28, 41, 22]
 solution : [0, 4, 6]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 28, 41, 22]
 solution : [0, 4, 6]


Solution : [0, 4, 6] has cost 14.


Decide in level 6 among pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 28, 41, 22]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22]
 solution : [0, 4, 6, 28]


New level: 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22]
 solution : [0, 4, 6, 28]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22]
 solution : [0, 4, 6, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {32, 34}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 23, 41, 22]
 solution : [0, 4, 6, 28]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 23, 41, 22]
 solution : [0, 4, 6, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 23, 41, 22]
 solution : [0, 4, 6, 28]


Solution : [0, 4, 6, 28] has cost 21.


Decide in level 7 among pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 23, 41, 22]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 22 with phase True at level 7

After decision at level 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 23, 41]
 solution : [0, 4, 6, 28, 22]


New level: 8
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 23, 41]
 solution : [0, 4, 6, 28, 22]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 23, 41]
 solution : [0, 4, 6, 28, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {5, 41, 42, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25}

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 6, 28, 22]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 6, 28, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 6, 28, 22]


Solution : [0, 4, 6, 28, 22] has cost 28.


Before backtrack at level 8
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 6, 28, 22]

After backtrack at level 8
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 41]
 solution : [0, 4, 6, 28, 22]


Invert decision for 22 at level 7


New level: 8
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 41]
 solution : [0, 4, 6, 28]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 41]
 solution : [0, 4, 6, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 41]
 solution : [0, 4, 6, 28]


Solution : [0, 4, 6, 28] has cost 21.


Decide in level 8 among pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 41]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 23]


New level: 9
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 23]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : {5, 41, 42, 12, 13, 14, 15, 19, 20, 21, 24, 25}

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 6, 28, 23]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 6, 28, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 6, 28, 23]


Solution : [0, 4, 6, 28, 23] has cost 28.


Before backtrack at level 9
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 6, 28, 23]

After backtrack at level 9
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28]


Solution : [0, 4, 6, 28] has cost 21.


Decide in level 9 among pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 40 with phase True at level 9

After decision at level 9
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 40]


New level: 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 40]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 40]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 33554432), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 131072), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, 512), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 0), (42, 131072), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : {41}

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 6, 28, 40]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 6, 28, 40]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 131072), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, 512), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 0), (42, 131072), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 131072), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, 512), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, -1), (42, 131072), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 6, 28, 40]


Solution : [0, 4, 6, 28, 40] has cost 39.


Before backtrack at level 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 6, 28, 40]

After backtrack at level 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 40]


Invert decision for 40 at level 9


New level: 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 131072), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, 512), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, -1), (42, 131072), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28]


Solution : [0, 4, 6, 28] has cost 21.


Decide in level 10 among pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 10

After decision at level 10
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 2]


New level: 11
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 2]


Before reduction : 
 pending  : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 512), (42, 524288), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 512), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {35, 38, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 2]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 512), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 2]


Solution : [0, 4, 6, 28, 2] has cost 25.


Before backtrack at level 11
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 2]

After backtrack at level 11
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 6, 28, 2]


Invert decision for 2 at level 10


New level: 11
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 6, 28]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 6, 28]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 512), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {35, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 26]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 512), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 26]


Solution : [0, 4, 6, 28, 26] has cost 28.


Before backtrack at level 11
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 6, 28, 26]

After backtrack at level 11
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 28]


Before backtrack at level 10
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 6, 28]

After backtrack at level 10
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 28]


Before backtrack at level 9
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 6, 28]

After backtrack at level 9
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40]
 solution : [0, 4, 6, 28]


Before backtrack at level 8
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40]
 solution : [0, 4, 6, 28]

After backtrack at level 8
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 23]
 solution : [0, 4, 6, 28]


Before backtrack at level 7
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 23]
 solution : [0, 4, 6, 28]

After backtrack at level 7
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 23, 32, 34, 22]
 solution : [0, 4, 6, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 23, 32, 34, 22]
 solution : [0, 4, 6]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 23, 32, 34, 22]
 solution : [0, 4, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 23, 32, 34, 22]
 solution : [0, 4, 6]


Solution : [0, 4, 6] has cost 14.


Decide in level 7 among pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 23, 32, 34, 22]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 22 with phase True at level 7

After decision at level 7
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 23, 32, 34]
 solution : [0, 4, 6, 22]


New level: 8
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 23, 32, 34]
 solution : [0, 4, 6, 22]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 23, 32, 34]
 solution : [0, 4, 6, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, 268435456), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25}

After reduction : 
 pending  : [41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 32, 34]
 solution : [0, 4, 6, 22]


Before reduction : 
 pending  : [41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 32, 34]
 solution : [0, 4, 6, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 32, 34]
 solution : [0, 4, 6, 22]


Solution : [0, 4, 6, 22] has cost 21.


Decide in level 8 among pending : [41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 32, 34]
 solution : [0, 4, 6, 22, 26]


New level: 9
 pending : [41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 32, 34]
 solution : [0, 4, 6, 22, 26]


Before reduction : 
 pending  : [41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 32, 34]
 solution : [0, 4, 6, 22, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : {32, 2, 35, 34, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 22, 26]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 22, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 22, 26]


Solution : [0, 4, 6, 22, 26] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [0, 4, 6, 22, 26]

After backtrack at level 9
 pending : [41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 32, 34]
 solution : [0, 4, 6, 22, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 32, 34]
 solution : [0, 4, 6, 22]


Before reduction : 
 pending  : [41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 32, 34]
 solution : [0, 4, 6, 22]

Essensial at level 9 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 22, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 22, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 22, 2]


Solution : [0, 4, 6, 22, 2] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [0, 4, 6, 22, 2]

After backtrack at level 9
 pending : [2, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34]
 solution : [0, 4, 6, 22]


Before backtrack at level 8
 pending : [2, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34]
 solution : [0, 4, 6, 22]

After backtrack at level 8
 pending : [2, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 4, 6, 22]


Invert decision for 22 at level 7


New level: 8
 pending : [2, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 4, 6]


Before reduction : 
 pending  : [2, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 4, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 4, 6]


Solution : [0, 4, 6] has cost 14.


Decide in level 8 among pending : [2, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 41 with phase True at level 8

After decision at level 8
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 4, 6, 41]


New level: 9
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 4, 6, 41]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 4, 6, 41]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, 134217728), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 16777216), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 4, 6, 41]


Solution : [0, 4, 6, 41] has cost 28.


Before backtrack at level 9
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 4, 6, 41]

After backtrack at level 9
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 4, 6, 41]


Invert decision for 41 at level 8


New level: 9
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 4, 6]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 4, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 16777216), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 4, 6]


Solution : [0, 4, 6] has cost 14.


Decide in level 9 among pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 23 with phase True at level 9

After decision at level 9
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26]
 solution : [0, 4, 6, 23]


New level: 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26]
 solution : [0, 4, 6, 23]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26]
 solution : [0, 4, 6, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, 134217728), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, -1), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 24, 25}

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26]
 solution : [0, 4, 6, 23]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26]
 solution : [0, 4, 6, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, -1), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, -1), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26]
 solution : [0, 4, 6, 23]


Solution : [0, 4, 6, 23] has cost 21.


Decide in level 10 among pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, -1), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 10

After decision at level 10
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26]
 solution : [0, 4, 6, 23, 2]


New level: 11
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26]
 solution : [0, 4, 6, 23, 2]


Before reduction : 
 pending  : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26]
 solution : [0, 4, 6, 23, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, -1), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 34, 35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 23, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 23, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 23, 2]


Solution : [0, 4, 6, 23, 2] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [0, 4, 6, 23, 2]

After backtrack at level 11
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26]
 solution : [0, 4, 6, 23, 2]


Invert decision for 2 at level 10


New level: 11
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26]
 solution : [0, 4, 6, 23]


Before reduction : 
 pending  : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26]
 solution : [0, 4, 6, 23]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 34, 35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 6, 23, 26]


Before reduction : 
 pending  : []
 solution : [0, 4, 6, 23, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 6, 23, 26]


Solution : [0, 4, 6, 23, 26] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [0, 4, 6, 23, 26]

After backtrack at level 11
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34]
 solution : [0, 4, 6, 23]


Before backtrack at level 10
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34]
 solution : [0, 4, 6, 23]

After backtrack at level 10
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 2]
 solution : [0, 4, 6, 23]


Invert decision for 23 at level 9


New level: 10
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 2]
 solution : [0, 4, 6]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 2]
 solution : [0, 4, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 2]
 solution : [0, 4, 6]


Solution : [0, 4, 6] has cost 14.


Decide in level 10 among pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 2]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 2]
 solution : [0, 4, 6, 26]


New level: 11
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 2]
 solution : [0, 4, 6, 26]


Before reduction : 
 pending  : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 2]
 solution : [0, 4, 6, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 524288), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 34, 35, 2, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 6, 26]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 6, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 6, 26]


Solution : [0, 4, 6, 26] has cost 21.


Decide in level 11 among pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 19 with phase True at level 11

After decision at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 6, 26, 19]


New level: 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 6, 26, 19]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 6, 26, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {5, 14, 20, 21, 24}

After reduction : 
 pending  : [40, 25, 42, 15, 13, 12]
 solution : [0, 4, 6, 26, 19]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 12]
 solution : [0, 4, 6, 26, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13, 12]
 solution : [0, 4, 6, 26, 19]


Solution : [0, 4, 6, 26, 19] has cost 30.


Before backtrack at level 12
 pending : [40, 25, 42, 15, 13, 12]
 solution : [0, 4, 6, 26, 19]

After backtrack at level 12
 pending : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 26, 19]


Invert decision for 19 at level 11


New level: 12
 pending : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 26]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 26]


Solution : [0, 4, 6, 26] has cost 21.


Decide in level 12 among pending : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 26, 12]


New level: 13
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 26, 12]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 26, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 4, 6, 26, 12]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 4, 6, 26, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 4, 6, 26, 12]


Solution : [0, 4, 6, 26, 12] has cost 28.


Before backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 4, 6, 26, 12]

After backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 6, 26, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 6, 26]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 6, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 6, 26]


Solution : [0, 4, 6, 26] has cost 21.


Decide in level 13 among pending : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [40, 25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 6, 26, 20]


New level: 14
 pending : [40, 25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 6, 26, 20]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 6, 26, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {24, 21, 5, 14}

After reduction : 
 pending  : [40, 25, 42, 15, 13]
 solution : [0, 4, 6, 26, 20]


Before reduction : 
 pending  : [40, 25, 42, 15, 13]
 solution : [0, 4, 6, 26, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13]
 solution : [0, 4, 6, 26, 20]


Solution : [0, 4, 6, 26, 20] has cost 30.


Before backtrack at level 14
 pending : [40, 25, 42, 15, 13]
 solution : [0, 4, 6, 26, 20]

After backtrack at level 14
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 6, 26, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 6, 26]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 6, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 6, 26]


Solution : [0, 4, 6, 26] has cost 21.


Decide in level 14 among pending : [40, 25, 42, 15, 13, 5, 21, 24, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 4, 6, 26, 13]


New level: 15
 pending : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 4, 6, 26, 13]


Before reduction : 
 pending  : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 4, 6, 26, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 6, 26, 13]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 6, 26, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 6, 26, 13]


Solution : [0, 4, 6, 26, 13] has cost 28.


Before backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 6, 26, 13]

After backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 4, 6, 26, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 4, 6, 26]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 4, 6, 26]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 6, 26, 15]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 6, 26, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 6, 26, 15]


Solution : [0, 4, 6, 26, 15] has cost 28.


Before backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 6, 26, 15]

After backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 14, 15]
 solution : [0, 4, 6, 26]


Before backtrack at level 14
 pending : [40, 25, 42, 5, 21, 24, 14, 15]
 solution : [0, 4, 6, 26]

After backtrack at level 14
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 4, 6, 26]


Before backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 4, 6, 26]

After backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 4, 6, 26]


Before backtrack at level 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 4, 6, 26]

After backtrack at level 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 6, 26]


Before backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 6, 26]

After backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 19]
 solution : [0, 4, 6, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 19]
 solution : [0, 4, 6]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 19]
 solution : [0, 4, 6]

Essensial at level 11 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 34, 35, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 6, 2]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 6, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 6, 2]


Solution : [0, 4, 6, 2] has cost 18.


Decide in level 11 among pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 19 with phase True at level 11

After decision at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 6, 2, 19]


New level: 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 6, 2, 19]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 6, 2, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {5, 14, 20, 21, 24}

After reduction : 
 pending  : [40, 25, 42, 15, 13, 12]
 solution : [0, 4, 6, 2, 19]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 12]
 solution : [0, 4, 6, 2, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13, 12]
 solution : [0, 4, 6, 2, 19]


Solution : [0, 4, 6, 2, 19] has cost 27.


Before backtrack at level 12
 pending : [40, 25, 42, 15, 13, 12]
 solution : [0, 4, 6, 2, 19]

After backtrack at level 12
 pending : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 2, 19]


Invert decision for 19 at level 11


New level: 12
 pending : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 2]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 2]


Solution : [0, 4, 6, 2] has cost 18.


Decide in level 12 among pending : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 2, 12]


New level: 13
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 2, 12]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 4, 6, 2, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 4, 6, 2, 12]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 4, 6, 2, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 4, 6, 2, 12]


Solution : [0, 4, 6, 2, 12] has cost 25.


Before backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 4, 6, 2, 12]

After backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 6, 2, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 6, 2]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 6, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 6, 2]


Solution : [0, 4, 6, 2] has cost 18.


Decide in level 13 among pending : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [40, 25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 6, 2, 20]


New level: 14
 pending : [40, 25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 6, 2, 20]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 6, 2, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {24, 21, 5, 14}

After reduction : 
 pending  : [40, 25, 42, 15, 13]
 solution : [0, 4, 6, 2, 20]


Before reduction : 
 pending  : [40, 25, 42, 15, 13]
 solution : [0, 4, 6, 2, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13]
 solution : [0, 4, 6, 2, 20]


Solution : [0, 4, 6, 2, 20] has cost 27.


Before backtrack at level 14
 pending : [40, 25, 42, 15, 13]
 solution : [0, 4, 6, 2, 20]

After backtrack at level 14
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 6, 2, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 6, 2]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 6, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 6, 2]


Solution : [0, 4, 6, 2] has cost 18.


Decide in level 14 among pending : [40, 25, 42, 15, 13, 5, 21, 24, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 4, 6, 2, 13]


New level: 15
 pending : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 4, 6, 2, 13]


Before reduction : 
 pending  : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 4, 6, 2, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 6, 2, 13]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 6, 2, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 6, 2, 13]


Solution : [0, 4, 6, 2, 13] has cost 25.


Before backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 6, 2, 13]

After backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 4, 6, 2, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 4, 6, 2]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 4, 6, 2]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 16384), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 6, 2, 15]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 6, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 6, 2, 15]


Solution : [0, 4, 6, 2, 15] has cost 25.


Before backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 6, 2, 15]

After backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 14, 15]
 solution : [0, 4, 6, 2]


Before backtrack at level 14
 pending : [40, 25, 42, 5, 21, 24, 14, 15]
 solution : [0, 4, 6, 2]

After backtrack at level 14
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 4, 6, 2]


Before backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 4, 6, 2]

After backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 4, 6, 2]


Before backtrack at level 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 4, 6, 2]

After backtrack at level 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 6, 2]


Before backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 6, 2]

After backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19]
 solution : [0, 4, 6]


Before backtrack at level 10
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19]
 solution : [0, 4, 6]

After backtrack at level 10
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26]
 solution : [0, 4, 6]


Before backtrack at level 9
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26]
 solution : [0, 4, 6]

After backtrack at level 9
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23]
 solution : [0, 4, 6]


Before backtrack at level 8
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23]
 solution : [0, 4, 6]

After backtrack at level 8
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41]
 solution : [0, 4, 6]


Before backtrack at level 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41]
 solution : [0, 4, 6]

After backtrack at level 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22]
 solution : [0, 4, 6]


Before backtrack at level 6
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22]
 solution : [0, 4, 6]

After backtrack at level 6
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28]
 solution : [0, 4, 6]


Before backtrack at level 5
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28]
 solution : [0, 4, 6]

After backtrack at level 5
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28, 30]
 solution : [0, 4, 6]


Before backtrack at level 4
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28, 30]
 solution : [0, 4, 6]

After backtrack at level 4
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28, 30, 37]
 solution : [0, 4, 6]


Before backtrack at level 3
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28, 30, 37]
 solution : [0, 4, 6]

After backtrack at level 3
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28, 30, 37, 29]
 solution : [0, 4, 6]


Invert decision for 6 at level 2


New level: 3
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28, 30, 37, 29]
 solution : [0, 4]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28, 30, 37, 29]
 solution : [0, 4]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, 1073741824), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, 2147483648), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28, 30, 37, 29]
 solution : [0, 4]


Solution : [0, 4] has cost 9.


Decide in level 3 among pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28, 30, 37, 29]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, 1073741824), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, 2147483648), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 29 with phase True at level 3

After decision at level 3
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28, 30, 37]
 solution : [0, 4, 29]


New level: 4
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28, 30, 37]
 solution : [0, 4, 29]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 23, 41, 22, 28, 30, 37]
 solution : [0, 4, 29]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, 1073741824), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, 2147483648), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 4 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25}

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 41, 28, 30, 37]
 solution : [0, 4, 29]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 41, 28, 30, 37]
 solution : [0, 4, 29]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 41, 28, 30, 37]
 solution : [0, 4, 29]


Solution : [0, 4, 29] has cost 13.


Decide in level 4 among pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 41, 28, 30, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 30 with phase True at level 4

After decision at level 4
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 41, 28, 37]
 solution : [0, 4, 29, 30]


New level: 5
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 41, 28, 37]
 solution : [0, 4, 29, 30]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 41, 28, 37]
 solution : [0, 4, 29, 30]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 268435456), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 41, 28, 37]
 solution : [0, 4, 29, 30]


Solution : [0, 4, 29, 30] has cost 17.


Decide in level 5 among pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 41, 28, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 268435456), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 5

After decision at level 5
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 41, 28]
 solution : [0, 4, 29, 30, 37]


New level: 6
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 41, 28]
 solution : [0, 4, 29, 30, 37]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 41, 28]
 solution : [0, 4, 29, 30, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 268435456), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 2048), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : {32, 41, 34}

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28]
 solution : [0, 4, 29, 30, 37]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28]
 solution : [0, 4, 29, 30, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 2048), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 2048), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28]
 solution : [0, 4, 29, 30, 37]


Solution : [0, 4, 29, 30, 37] has cost 30.


Before backtrack at level 6
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28]
 solution : [0, 4, 29, 30, 37]

After backtrack at level 6
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 41]
 solution : [0, 4, 29, 30, 37]


Invert decision for 37 at level 5


New level: 6
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 41]
 solution : [0, 4, 29, 30]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 41]
 solution : [0, 4, 29, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 2048), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 41]
 solution : [0, 4, 29, 30]


Solution : [0, 4, 29, 30] has cost 17.


Decide in level 6 among pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 41]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 4, 29, 30, 28]


New level: 7
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 4, 29, 30, 28]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 4, 29, 30, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 4194304), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {32, 41, 34}

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 29, 30, 28]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 29, 30, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 4194304), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 4194304), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 29, 30, 28]


Solution : [0, 4, 29, 30, 28] has cost 24.


Before backtrack at level 7
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 29, 30, 28]

After backtrack at level 7
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 4, 29, 30, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 4, 29, 30]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 4, 29, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 4194304), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 4, 29, 30]


Solution : [0, 4, 29, 30] has cost 17.


Decide in level 7 among pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 4, 29, 30, 2]


New level: 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 4, 29, 30, 2]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 4, 29, 30, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 29, 30, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 29, 30, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 29, 30, 2]


Solution : [0, 4, 29, 30, 2] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 29, 30, 2]

After backtrack at level 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 4, 29, 30, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 4, 29, 30]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 4, 29, 30]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 29, 30, 26]


Before reduction : 
 pending  : []
 solution : [0, 4, 29, 30, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 29, 30, 26]


Solution : [0, 4, 29, 30, 26] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 29, 30, 26]

After backtrack at level 8
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 4, 29, 30]


Before backtrack at level 7
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 4, 29, 30]

After backtrack at level 7
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 29, 30]


Before backtrack at level 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 29, 30]

After backtrack at level 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 29, 30]


Before backtrack at level 5
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 29, 30]

After backtrack at level 5
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]
 solution : [0, 4, 29, 30]


Invert decision for 30 at level 4


New level: 5
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]
 solution : [0, 4, 29]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]
 solution : [0, 4, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]
 solution : [0, 4, 29]


Solution : [0, 4, 29] has cost 13.


Decide in level 5 among pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 5

After decision at level 5
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 29, 37]


New level: 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 29, 37]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 29, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : {32, 41, 34}

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28]
 solution : [0, 4, 29, 37]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28]
 solution : [0, 4, 29, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28]
 solution : [0, 4, 29, 37]


Solution : [0, 4, 29, 37] has cost 26.


Before backtrack at level 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28]
 solution : [0, 4, 29, 37]

After backtrack at level 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 29, 37]


Invert decision for 37 at level 5


New level: 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 29]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 2097152), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 29]


Solution : [0, 4, 29] has cost 13.


Decide in level 6 among pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 29, 28]


New level: 7
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 29, 28]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 29, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 4194304), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {32, 41, 34}

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 29, 28]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 29, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 4194304), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 4194304), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 29, 28]


Solution : [0, 4, 29, 28] has cost 20.


Decide in level 7 among pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 4194304), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 29, 28, 26]


New level: 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 29, 28, 26]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 29, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 4194304), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {2, 35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 29, 28, 26]


Before reduction : 
 pending  : []
 solution : [0, 4, 29, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 29, 28, 26]


Solution : [0, 4, 29, 28, 26] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 29, 28, 26]

After backtrack at level 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 29, 28, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 29, 28]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 29, 28]

Essensial at level 8 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 29, 28, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 29, 28, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 29, 28, 2]


Solution : [0, 4, 29, 28, 2] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 29, 28, 2]

After backtrack at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 29, 28]


Before backtrack at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 29, 28]

After backtrack at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 29, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 29]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 29]


Solution : [0, 4, 29] has cost 13.


Decide in level 7 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 29, 2]


New level: 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 29, 2]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 29, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 29, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 29, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 29, 2]


Solution : [0, 4, 29, 2] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 29, 2]

After backtrack at level 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 29, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 29]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 29]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 29, 26]


Before reduction : 
 pending  : []
 solution : [0, 4, 29, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 29, 26]


Solution : [0, 4, 29, 26] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [0, 4, 29, 26]

After backtrack at level 8
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 4, 29]


Before backtrack at level 7
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 4, 29]

After backtrack at level 7
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 29]


Before backtrack at level 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 4, 29]

After backtrack at level 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 29]


Before backtrack at level 5
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28]
 solution : [0, 4, 29]

After backtrack at level 5
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]
 solution : [0, 4, 29]


Before backtrack at level 4
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37]
 solution : [0, 4, 29]

After backtrack at level 4
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 30]
 solution : [0, 4, 29]


Invert decision for 29 at level 3


New level: 4
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 30]
 solution : [0, 4]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 30]
 solution : [0, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, 1073741824), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 30]
 solution : [0, 4]


Solution : [0, 4] has cost 9.


Decide in level 4 among pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 30]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, 1073741824), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 22 with phase True at level 4

After decision at level 4
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 30]
 solution : [0, 4, 22]


New level: 5
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 30]
 solution : [0, 4, 22]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 30]
 solution : [0, 4, 22]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, 1073741824), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25}

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 30]
 solution : [0, 4, 22]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 30]
 solution : [0, 4, 22]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 30]
 solution : [0, 4, 22]


Solution : [0, 4, 22] has cost 16.


Decide in level 5 among pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 37, 30]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 5

After decision at level 5
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 30]
 solution : [0, 4, 22, 37]


New level: 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 30]
 solution : [0, 4, 22, 37]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2, 28, 30]
 solution : [0, 4, 22, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 536870912), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, 524288), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : {32, 41, 34}

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 30]
 solution : [0, 4, 22, 37]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 30]
 solution : [0, 4, 22, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, 524288), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, 524288), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 30]
 solution : [0, 4, 22, 37]


Solution : [0, 4, 22, 37] has cost 29.


Before backtrack at level 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 30]
 solution : [0, 4, 22, 37]

After backtrack at level 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 30, 32, 34, 41]
 solution : [0, 4, 22, 37]


Invert decision for 37 at level 5


New level: 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 30, 32, 34, 41]
 solution : [0, 4, 22]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 30, 32, 34, 41]
 solution : [0, 4, 22]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, 524288), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 30, 32, 34, 41]
 solution : [0, 4, 22]


Solution : [0, 4, 22] has cost 16.


Decide in level 6 among pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 30, 32, 34, 41]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 30 with phase True at level 6

After decision at level 6
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 22, 30]


New level: 7
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 22, 30]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 22, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 22, 30]


Solution : [0, 4, 22, 30] has cost 20.


Before backtrack at level 7
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 22, 30]

After backtrack at level 7
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 22, 30]


Invert decision for 30 at level 6


New level: 7
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 22]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 4, 22]


Solution : [0, 4, 22] has cost 16.


Decide in level 7 among pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 22, 28]


New level: 8
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 22, 28]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 22, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 41, 34}

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 22, 28]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 22, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 22, 28]


Solution : [0, 4, 22, 28] has cost 23.


Before backtrack at level 8
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 22, 28]

After backtrack at level 8
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 22, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 22]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 22]


Solution : [0, 4, 22] has cost 16.


Decide in level 8 among pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 22, 26]


New level: 9
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 22, 26]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 22, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : {32, 2, 35, 34, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 22, 26]


Before reduction : 
 pending  : []
 solution : [0, 4, 22, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 22, 26]


Solution : [0, 4, 22, 26] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [0, 4, 22, 26]

After backtrack at level 9
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 22, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 22]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 4, 22]

Essensial at level 9 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 22, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 22, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 22, 2]


Solution : [0, 4, 22, 2] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [0, 4, 22, 2]

After backtrack at level 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 4, 22]


Before backtrack at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 4, 22]

After backtrack at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 22]


Before backtrack at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 4, 22]

After backtrack at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28]
 solution : [0, 4, 22]


Before backtrack at level 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28]
 solution : [0, 4, 22]

After backtrack at level 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 30]
 solution : [0, 4, 22]


Before backtrack at level 5
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 30]
 solution : [0, 4, 22]

After backtrack at level 5
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 30, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 37]
 solution : [0, 4, 22]


Invert decision for 22 at level 4


New level: 5
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 30, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 37]
 solution : [0, 4]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 30, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 37]
 solution : [0, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 30, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 37]
 solution : [0, 4]


Solution : [0, 4] has cost 9.


Decide in level 5 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 30, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 30 with phase True at level 5

After decision at level 5
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 37]
 solution : [0, 4, 30]


New level: 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 37]
 solution : [0, 4, 30]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 37]
 solution : [0, 4, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, 536870912), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, 268435456), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 37]
 solution : [0, 4, 30]


Solution : [0, 4, 30] has cost 13.


Decide in level 6 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, 268435456), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 23 with phase True at level 6

After decision at level 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 37]
 solution : [0, 4, 30, 23]


New level: 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 37]
 solution : [0, 4, 30, 23]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 37]
 solution : [0, 4, 30, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, 268435456), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 268435456), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 24, 25}

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 4, 30, 23]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 4, 30, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 268435456), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 268435456), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 4, 30, 23]


Solution : [0, 4, 30, 23] has cost 20.


Before backtrack at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 4, 30, 23]

After backtrack at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 23]


Invert decision for 23 at level 6


New level: 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 262144), (32, 524288), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 268435456), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, 268435456), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30]


Solution : [0, 4, 30] has cost 13.


Decide in level 7 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, 268435456), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 7

After decision at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 37]


New level: 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 37]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 37]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, 268435456), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, 4096), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 34}

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 37]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 37]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, 4096), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, 4096), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 37]


Solution : [0, 4, 30, 37] has cost 26.


Before backtrack at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 37]

After backtrack at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 37]


Invert decision for 37 at level 7


New level: 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, 4096), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30]


Solution : [0, 4, 30] has cost 13.


Decide in level 8 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 41 with phase True at level 8

After decision at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 41]


New level: 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 41]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 41]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, 524288), (32, 262144), (33, -1), (34, 2048), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 41]


Solution : [0, 4, 30, 41] has cost 27.


Before backtrack at level 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 41]

After backtrack at level 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 41]


Invert decision for 41 at level 8


New level: 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, 524288), (32, 262144), (33, -1), (34, 2048), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, -1), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30]


Solution : [0, 4, 30] has cost 13.


Decide in level 9 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, -1), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 9

After decision at level 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 28]


New level: 10
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 28]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, -1), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, -1), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : {32, 34}

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 28]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, -1), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, -1), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 28]


Solution : [0, 4, 30, 28] has cost 20.


Before backtrack at level 10
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 28]

After backtrack at level 10
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 28]


Invert decision for 28 at level 9


New level: 10
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, -1), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, -1), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30]


Solution : [0, 4, 30] has cost 13.


Decide in level 10 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, -1), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 10

After decision at level 10
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 2]


New level: 11
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 2]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 4, 30, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, -1), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 34, 35, 38, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 2]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 2]


Solution : [0, 4, 30, 2] has cost 17.


Decide in level 11 among pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 19 with phase True at level 11

After decision at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 30, 2, 19]


New level: 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 30, 2, 19]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 30, 2, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {5, 14, 20, 21, 24}

After reduction : 
 pending  : [40, 25, 42, 15, 13, 12]
 solution : [0, 4, 30, 2, 19]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 12]
 solution : [0, 4, 30, 2, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13, 12]
 solution : [0, 4, 30, 2, 19]


Solution : [0, 4, 30, 2, 19] has cost 26.


Before backtrack at level 12
 pending : [40, 25, 42, 15, 13, 12]
 solution : [0, 4, 30, 2, 19]

After backtrack at level 12
 pending : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 30, 2, 19]


Invert decision for 19 at level 11


New level: 12
 pending : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 30, 2]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 30, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 30, 2]


Solution : [0, 4, 30, 2] has cost 17.


Decide in level 12 among pending : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 4, 30, 2, 12]


New level: 13
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 4, 30, 2, 12]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 4, 30, 2, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 4, 30, 2, 12]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 4, 30, 2, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 4, 30, 2, 12]


Solution : [0, 4, 30, 2, 12] has cost 24.


Before backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 4, 30, 2, 12]

After backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 30, 2, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 30, 2]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 30, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 30, 2]


Solution : [0, 4, 30, 2] has cost 17.


Decide in level 13 among pending : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [40, 25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 30, 2, 20]


New level: 14
 pending : [40, 25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 30, 2, 20]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 30, 2, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {24, 21, 5, 14}

After reduction : 
 pending  : [40, 25, 42, 15, 13]
 solution : [0, 4, 30, 2, 20]


Before reduction : 
 pending  : [40, 25, 42, 15, 13]
 solution : [0, 4, 30, 2, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13]
 solution : [0, 4, 30, 2, 20]


Solution : [0, 4, 30, 2, 20] has cost 26.


Before backtrack at level 14
 pending : [40, 25, 42, 15, 13]
 solution : [0, 4, 30, 2, 20]

After backtrack at level 14
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 30, 2, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 30, 2]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 30, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 30, 2]


Solution : [0, 4, 30, 2] has cost 17.


Decide in level 14 among pending : [40, 25, 42, 15, 13, 5, 21, 24, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 4, 30, 2, 13]


New level: 15
 pending : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 4, 30, 2, 13]


Before reduction : 
 pending  : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 4, 30, 2, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 30, 2, 13]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 30, 2, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 30, 2, 13]


Solution : [0, 4, 30, 2, 13] has cost 24.


Before backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24]
 solution : [0, 4, 30, 2, 13]

After backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 4, 30, 2, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 4, 30, 2]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 4, 30, 2]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 30, 2, 15]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 30, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 30, 2, 15]


Solution : [0, 4, 30, 2, 15] has cost 24.


Before backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 4, 30, 2, 15]

After backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 14, 15]
 solution : [0, 4, 30, 2]


Before backtrack at level 14
 pending : [40, 25, 42, 5, 21, 24, 14, 15]
 solution : [0, 4, 30, 2]

After backtrack at level 14
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 4, 30, 2]


Before backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 4, 30, 2]

After backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 4, 30, 2]


Before backtrack at level 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 4, 30, 2]

After backtrack at level 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 30, 2]


Before backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 30, 2]

After backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 19]
 solution : [0, 4, 30, 2]


Invert decision for 2 at level 10


New level: 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 19]
 solution : [0, 4, 30]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 19]
 solution : [0, 4, 30]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 34, 35, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 26]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 26]


Solution : [0, 4, 30, 26] has cost 20.


Before backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 30, 26]

After backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34]
 solution : [0, 4, 30]


Before backtrack at level 10
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34]
 solution : [0, 4, 30]

After backtrack at level 10
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2]
 solution : [0, 4, 30]


Before backtrack at level 9
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2]
 solution : [0, 4, 30]

After backtrack at level 9
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28]
 solution : [0, 4, 30]


Before backtrack at level 8
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28]
 solution : [0, 4, 30]

After backtrack at level 8
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28, 41]
 solution : [0, 4, 30]


Before backtrack at level 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28, 41]
 solution : [0, 4, 30]

After backtrack at level 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28, 41, 37]
 solution : [0, 4, 30]


Before backtrack at level 6
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28, 41, 37]
 solution : [0, 4, 30]

After backtrack at level 6
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28, 41, 37, 23]
 solution : [0, 4, 30]


Invert decision for 30 at level 5


New level: 6
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28, 41, 37, 23]
 solution : [0, 4]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28, 41, 37, 23]
 solution : [0, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28, 41, 37, 23]
 solution : [0, 4]


Solution : [0, 4] has cost 9.


Decide in level 6 among pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28, 41, 37, 23]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 6

After decision at level 6
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28, 41, 23]
 solution : [0, 4, 37]


New level: 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28, 41, 23]
 solution : [0, 4, 37]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 28, 41, 23]
 solution : [0, 4, 37]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, 536870912), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 8192), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, 4096), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {32, 34}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 23]
 solution : [0, 4, 37]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 23]
 solution : [0, 4, 37]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 8192), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, 4096), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 8192), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, 4096), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 23]
 solution : [0, 4, 37]


Solution : [0, 4, 37] has cost 22.


Before backtrack at level 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 23]
 solution : [0, 4, 37]

After backtrack at level 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 23, 32, 34]
 solution : [0, 4, 37]


Invert decision for 37 at level 6


New level: 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 23, 32, 34]
 solution : [0, 4]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 23, 32, 34]
 solution : [0, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 8192), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, 4096), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 23, 32, 34]
 solution : [0, 4]


Solution : [0, 4] has cost 9.


Decide in level 7 among pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 23, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 32, 34]
 solution : [0, 4, 23]


New level: 8
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 32, 34]
 solution : [0, 4, 23]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 32, 34]
 solution : [0, 4, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, 536870912), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 24, 25}

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 32, 34]
 solution : [0, 4, 23]


Before reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 32, 34]
 solution : [0, 4, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, 0), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 32, 34]
 solution : [0, 4, 23]


Solution : [0, 4, 23] has cost 16.


Decide in level 8 among pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 41, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 8

After decision at level 8
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]
 solution : [0, 4, 23, 28]


New level: 9
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]
 solution : [0, 4, 23, 28]


Before reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]
 solution : [0, 4, 23, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : {32, 41, 34}

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 23, 28]


Before reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 23, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 23, 28]


Solution : [0, 4, 23, 28] has cost 23.


Before backtrack at level 9
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 23, 28]

After backtrack at level 9
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]
 solution : [0, 4, 23, 28]


Invert decision for 28 at level 8


New level: 9
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]
 solution : [0, 4, 23]


Before reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]
 solution : [0, 4, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]
 solution : [0, 4, 23]


Solution : [0, 4, 23] has cost 16.


Decide in level 9 among pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 9

After decision at level 9
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]
 solution : [0, 4, 23, 26]


New level: 10
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]
 solution : [0, 4, 23, 26]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]
 solution : [0, 4, 23, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 1048576), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 1024), (41, 2048), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : {32, 2, 35, 34, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 23, 26]


Before reduction : 
 pending  : []
 solution : [0, 4, 23, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 23, 26]


Solution : [0, 4, 23, 26] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [0, 4, 23, 26]

After backtrack at level 10
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]
 solution : [0, 4, 23, 26]


Invert decision for 26 at level 9


New level: 10
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]
 solution : [0, 4, 23]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 41, 32, 34]
 solution : [0, 4, 23]

Essensial at level 10 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 4, 23, 2]


Before reduction : 
 pending  : []
 solution : [0, 4, 23, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 4, 23, 2]


Solution : [0, 4, 23, 2] has cost 20.


Before backtrack at level 10
 pending : []
 solution : [0, 4, 23, 2]

After backtrack at level 10
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 32, 34]
 solution : [0, 4, 23]


Before backtrack at level 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 32, 34]
 solution : [0, 4, 23]

After backtrack at level 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 32, 34, 26]
 solution : [0, 4, 23]


Before backtrack at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 32, 34, 26]
 solution : [0, 4, 23]

After backtrack at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 28]
 solution : [0, 4, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 28]
 solution : [0, 4]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 28]
 solution : [0, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 28]
 solution : [0, 4]


Solution : [0, 4] has cost 9.


Decide in level 8 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 28]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 8

After decision at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 28]


New level: 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 28]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, 512), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : {32, 34}

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 28]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, 512), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, 512), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 28]


Solution : [0, 4, 28] has cost 16.


Decide in level 9 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, 512), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 40 with phase True at level 9

After decision at level 9
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 28, 40]


New level: 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 28, 40]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 28, 40]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 67108864), (41, 512), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, 512), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 0), (42, 524288), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : {41}

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 28, 40]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 28, 40]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, 512), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 0), (42, 524288), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, 512), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, -1), (42, 524288), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 28, 40]


Solution : [0, 4, 28, 40] has cost 34.


Before backtrack at level 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 28, 40]

After backtrack at level 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 28, 40]


Invert decision for 40 at level 9


New level: 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 28]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, 512), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, -1), (42, 524288), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]
 solution : [0, 4, 28]


Solution : [0, 4, 28] has cost 16.


Decide in level 10 among pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 41]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 19 with phase True at level 10

After decision at level 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 41]
 solution : [0, 4, 28, 19]


New level: 11
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 41]
 solution : [0, 4, 28, 19]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 41]
 solution : [0, 4, 28, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 2048), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {5, 14, 20, 21, 24}

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 15, 13, 12, 41]
 solution : [0, 4, 28, 19]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 15, 13, 12, 41]
 solution : [0, 4, 28, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 2048), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 2048), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 15, 13, 12, 41]
 solution : [0, 4, 28, 19]


Solution : [0, 4, 28, 19] has cost 25.


Before backtrack at level 11
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 15, 13, 12, 41]
 solution : [0, 4, 28, 19]

After backtrack at level 11
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28, 19]


Invert decision for 19 at level 10


New level: 11
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32768), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 2048), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28]


Solution : [0, 4, 28] has cost 16.


Decide in level 11 among pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28, 2]


New level: 12
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28, 2]


Before reduction : 
 pending  : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 2048), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {35, 38, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28, 2]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28, 2]


Solution : [0, 4, 28, 2] has cost 20.


Before backtrack at level 12
 pending : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28, 2]

After backtrack at level 12
 pending : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 28, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 28]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 4, 28]

Essensial at level 12 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {35, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28, 26]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28, 26]


Solution : [0, 4, 28, 26] has cost 23.


Before backtrack at level 12
 pending : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20]
 solution : [0, 4, 28, 26]

After backtrack at level 12
 pending : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 28]


Before backtrack at level 11
 pending : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51]
 solution : [0, 4, 28]

After backtrack at level 11
 pending : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 28]


Before backtrack at level 10
 pending : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 4, 28]

After backtrack at level 10
 pending : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19]
 solution : [0, 4, 28]


Before backtrack at level 9
 pending : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19]
 solution : [0, 4, 28]

After backtrack at level 9
 pending : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4, 28]


Invert decision for 28 at level 8


New level: 9
 pending : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4]


Solution : [0, 4] has cost 9.


Decide in level 9 among pending : [25, 42, 15, 13, 12, 41, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 41 with phase True at level 9

After decision at level 9
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4, 41]


New level: 10
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4, 41]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, 134217728), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4, 41]


Solution : [0, 4, 41] has cost 23.


Before backtrack at level 10
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4, 41]

After backtrack at level 10
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4, 41]


Invert decision for 41 at level 9


New level: 10
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 524288), (33, -1), (34, 4096), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 33554432), (41, -1), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, -1), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4]


Solution : [0, 4] has cost 9.


Decide in level 10 among pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, -1), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4, 26]


New level: 11
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4, 26]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 19, 32, 34, 40]
 solution : [0, 4, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 524288), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 524288), (25, 2097152), (26, 67108864), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 1048576), (33, -1), (34, 8192), (35, 8192), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 67108864), (41, -1), (42, 2097152), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 2, 35, 34, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 19, 40]
 solution : [0, 4, 26]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 19, 40]
 solution : [0, 4, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 19, 40]
 solution : [0, 4, 26]


Solution : [0, 4, 26] has cost 16.


Decide in level 11 among pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 19, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 19 with phase True at level 11

After decision at level 11
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 40]
 solution : [0, 4, 26, 19]


New level: 12
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 40]
 solution : [0, 4, 26, 19]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 40]
 solution : [0, 4, 26, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {5, 14, 20, 21, 24}

After reduction : 
 pending  : [25, 42, 15, 13, 12, 40]
 solution : [0, 4, 26, 19]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 40]
 solution : [0, 4, 26, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 40]
 solution : [0, 4, 26, 19]


Solution : [0, 4, 26, 19] has cost 25.


Before backtrack at level 12
 pending : [25, 42, 15, 13, 12, 40]
 solution : [0, 4, 26, 19]

After backtrack at level 12
 pending : [25, 42, 15, 13, 12, 40, 5, 21, 24, 14, 20]
 solution : [0, 4, 26, 19]


Invert decision for 19 at level 11


New level: 12
 pending : [25, 42, 15, 13, 12, 40, 5, 21, 24, 14, 20]
 solution : [0, 4, 26]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 40, 5, 21, 24, 14, 20]
 solution : [0, 4, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 40, 5, 21, 24, 14, 20]
 solution : [0, 4, 26]


Solution : [0, 4, 26] has cost 16.


Decide in level 12 among pending : [25, 42, 15, 13, 12, 40, 5, 21, 24, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [25, 42, 15, 13, 40, 5, 21, 24, 14, 20]
 solution : [0, 4, 26, 12]


New level: 13
 pending : [25, 42, 15, 13, 40, 5, 21, 24, 14, 20]
 solution : [0, 4, 26, 12]


Before reduction : 
 pending  : [25, 42, 15, 13, 40, 5, 21, 24, 14, 20]
 solution : [0, 4, 26, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 20]
 solution : [0, 4, 26, 12]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 20]
 solution : [0, 4, 26, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 20]
 solution : [0, 4, 26, 12]


Solution : [0, 4, 26, 12] has cost 23.


Before backtrack at level 13
 pending : [25, 42, 40, 5, 21, 24, 20]
 solution : [0, 4, 26, 12]

After backtrack at level 13
 pending : [25, 42, 40, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 26, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [25, 42, 40, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 26]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 26]


Solution : [0, 4, 26] has cost 16.


Decide in level 13 among pending : [25, 42, 40, 5, 21, 24, 20, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [25, 42, 40, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 26, 20]


New level: 14
 pending : [25, 42, 40, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 26, 20]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 26, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {24, 21, 5, 14}

After reduction : 
 pending  : [25, 42, 40, 15, 13]
 solution : [0, 4, 26, 20]


Before reduction : 
 pending  : [25, 42, 40, 15, 13]
 solution : [0, 4, 26, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 42, 40, 15, 13]
 solution : [0, 4, 26, 20]


Solution : [0, 4, 26, 20] has cost 25.


Before backtrack at level 14
 pending : [25, 42, 40, 15, 13]
 solution : [0, 4, 26, 20]

After backtrack at level 14
 pending : [25, 42, 40, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 26, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [25, 42, 40, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 26]


Before reduction : 
 pending  : [25, 42, 40, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 42, 40, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 26]


Solution : [0, 4, 26] has cost 16.


Decide in level 14 among pending : [25, 42, 40, 15, 13, 5, 21, 24, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [25, 42, 40, 15, 5, 21, 24, 14]
 solution : [0, 4, 26, 13]


New level: 15
 pending : [25, 42, 40, 15, 5, 21, 24, 14]
 solution : [0, 4, 26, 13]


Before reduction : 
 pending  : [25, 42, 40, 15, 5, 21, 24, 14]
 solution : [0, 4, 26, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24]
 solution : [0, 4, 26, 13]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24]
 solution : [0, 4, 26, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24]
 solution : [0, 4, 26, 13]


Solution : [0, 4, 26, 13] has cost 23.


Before backtrack at level 15
 pending : [25, 42, 40, 5, 21, 24]
 solution : [0, 4, 26, 13]

After backtrack at level 15
 pending : [25, 42, 40, 5, 21, 24, 15, 14]
 solution : [0, 4, 26, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [25, 42, 40, 5, 21, 24, 15, 14]
 solution : [0, 4, 26]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 15, 14]
 solution : [0, 4, 26]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14]
 solution : [0, 4, 26, 15]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14]
 solution : [0, 4, 26, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14]
 solution : [0, 4, 26, 15]


Solution : [0, 4, 26, 15] has cost 23.


Before backtrack at level 15
 pending : [25, 42, 40, 5, 21, 24, 14]
 solution : [0, 4, 26, 15]

After backtrack at level 15
 pending : [25, 42, 40, 5, 21, 24, 14, 15]
 solution : [0, 4, 26]


Before backtrack at level 14
 pending : [25, 42, 40, 5, 21, 24, 14, 15]
 solution : [0, 4, 26]

After backtrack at level 14
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13]
 solution : [0, 4, 26]


Before backtrack at level 13
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13]
 solution : [0, 4, 26]

After backtrack at level 13
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 4, 26]


Before backtrack at level 12
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 4, 26]

After backtrack at level 12
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 26]


Before backtrack at level 11
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 26]

After backtrack at level 11
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 19]
 solution : [0, 4, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 19]
 solution : [0, 4]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 19]
 solution : [0, 4]

Essensial at level 11 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 34, 35, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 2]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 4, 2]


Solution : [0, 4, 2] has cost 13.


Decide in level 11 among pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 19 with phase True at level 11

After decision at level 11
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 2, 19]


New level: 12
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 2, 19]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 2, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {5, 14, 20, 21, 24}

After reduction : 
 pending  : [25, 42, 40, 15, 13, 12]
 solution : [0, 4, 2, 19]


Before reduction : 
 pending  : [25, 42, 40, 15, 13, 12]
 solution : [0, 4, 2, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 42, 40, 15, 13, 12]
 solution : [0, 4, 2, 19]


Solution : [0, 4, 2, 19] has cost 22.


Before backtrack at level 12
 pending : [25, 42, 40, 15, 13, 12]
 solution : [0, 4, 2, 19]

After backtrack at level 12
 pending : [25, 42, 40, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 2, 19]


Invert decision for 19 at level 11


New level: 12
 pending : [25, 42, 40, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 2]


Before reduction : 
 pending  : [25, 42, 40, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 42, 40, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 4, 2]


Solution : [0, 4, 2] has cost 13.


Decide in level 12 among pending : [25, 42, 40, 15, 13, 12, 5, 21, 24, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [25, 42, 40, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 4, 2, 12]


New level: 13
 pending : [25, 42, 40, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 4, 2, 12]


Before reduction : 
 pending  : [25, 42, 40, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 4, 2, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 20]
 solution : [0, 4, 2, 12]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 20]
 solution : [0, 4, 2, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 20]
 solution : [0, 4, 2, 12]


Solution : [0, 4, 2, 12] has cost 20.


Before backtrack at level 13
 pending : [25, 42, 40, 5, 21, 24, 20]
 solution : [0, 4, 2, 12]

After backtrack at level 13
 pending : [25, 42, 40, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 2, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [25, 42, 40, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 2]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 4, 2]


Solution : [0, 4, 2] has cost 13.


Decide in level 13 among pending : [25, 42, 40, 5, 21, 24, 20, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [25, 42, 40, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 2, 20]


New level: 14
 pending : [25, 42, 40, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 2, 20]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 15, 13, 14]
 solution : [0, 4, 2, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {24, 21, 5, 14}

After reduction : 
 pending  : [25, 42, 40, 15, 13]
 solution : [0, 4, 2, 20]


Before reduction : 
 pending  : [25, 42, 40, 15, 13]
 solution : [0, 4, 2, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 42, 40, 15, 13]
 solution : [0, 4, 2, 20]


Solution : [0, 4, 2, 20] has cost 22.


Before backtrack at level 14
 pending : [25, 42, 40, 15, 13]
 solution : [0, 4, 2, 20]

After backtrack at level 14
 pending : [25, 42, 40, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 2, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [25, 42, 40, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 2]


Before reduction : 
 pending  : [25, 42, 40, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 42, 40, 15, 13, 5, 21, 24, 14]
 solution : [0, 4, 2]


Solution : [0, 4, 2] has cost 13.


Decide in level 14 among pending : [25, 42, 40, 15, 13, 5, 21, 24, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [25, 42, 40, 15, 5, 21, 24, 14]
 solution : [0, 4, 2, 13]


New level: 15
 pending : [25, 42, 40, 15, 5, 21, 24, 14]
 solution : [0, 4, 2, 13]


Before reduction : 
 pending  : [25, 42, 40, 15, 5, 21, 24, 14]
 solution : [0, 4, 2, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24]
 solution : [0, 4, 2, 13]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24]
 solution : [0, 4, 2, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24]
 solution : [0, 4, 2, 13]


Solution : [0, 4, 2, 13] has cost 20.


Before backtrack at level 15
 pending : [25, 42, 40, 5, 21, 24]
 solution : [0, 4, 2, 13]

After backtrack at level 15
 pending : [25, 42, 40, 5, 21, 24, 15, 14]
 solution : [0, 4, 2, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [25, 42, 40, 5, 21, 24, 15, 14]
 solution : [0, 4, 2]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 15, 14]
 solution : [0, 4, 2]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14]
 solution : [0, 4, 2, 15]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14]
 solution : [0, 4, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14]
 solution : [0, 4, 2, 15]


Solution : [0, 4, 2, 15] has cost 20.


Before backtrack at level 15
 pending : [25, 42, 40, 5, 21, 24, 14]
 solution : [0, 4, 2, 15]

After backtrack at level 15
 pending : [25, 42, 40, 5, 21, 24, 14, 15]
 solution : [0, 4, 2]


Before backtrack at level 14
 pending : [25, 42, 40, 5, 21, 24, 14, 15]
 solution : [0, 4, 2]

After backtrack at level 14
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13]
 solution : [0, 4, 2]


Before backtrack at level 13
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13]
 solution : [0, 4, 2]

After backtrack at level 13
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 4, 2]


Before backtrack at level 12
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 4, 2]

After backtrack at level 12
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 2]


Before backtrack at level 11
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 4, 2]

After backtrack at level 11
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19]
 solution : [0, 4]


Before backtrack at level 10
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19]
 solution : [0, 4]

After backtrack at level 10
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26]
 solution : [0, 4]


Before backtrack at level 9
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26]
 solution : [0, 4]

After backtrack at level 9
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41]
 solution : [0, 4]


Before backtrack at level 8
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41]
 solution : [0, 4]

After backtrack at level 8
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28]
 solution : [0, 4]


Before backtrack at level 7
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28]
 solution : [0, 4]

After backtrack at level 7
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23]
 solution : [0, 4]


Before backtrack at level 6
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23]
 solution : [0, 4]

After backtrack at level 6
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37]
 solution : [0, 4]


Before backtrack at level 5
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37]
 solution : [0, 4]

After backtrack at level 5
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30]
 solution : [0, 4]


Before backtrack at level 4
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30]
 solution : [0, 4]

After backtrack at level 4
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22]
 solution : [0, 4]


Before backtrack at level 3
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22]
 solution : [0, 4]

After backtrack at level 3
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22, 29]
 solution : [0, 4]


Before backtrack at level 2
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22, 29]
 solution : [0, 4]

After backtrack at level 2
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22, 29, 6]
 solution : [0, 4]


Invert decision for 4 at level 1


New level: 2
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22, 29, 6]
 solution : [0]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22, 29, 6]
 solution : [0]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, 17179869184), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, 4294967296), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22, 29, 6]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 2 among pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22, 29, 6]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, 17179869184), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, 4294967296), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 6 with phase True at level 2

After decision at level 2
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22, 29]
 solution : [0, 6]


New level: 3
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22, 29]
 solution : [0, 6]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22, 29]
 solution : [0, 6]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, 17179869184), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, 4294967296), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 1073741824), (29, 1073741824), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22, 29]
 solution : [0, 6]


Solution : [0, 6] has cost 11.


Decide in level 3 among pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 30, 22, 29]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 1073741824), (29, 1073741824), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 30 with phase True at level 3

After decision at level 3
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 22, 29]
 solution : [0, 6, 30]


New level: 4
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 22, 29]
 solution : [0, 6, 30]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 22, 29]
 solution : [0, 6, 30]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 1073741824), (29, 1073741824), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 536870912), (29, 1073741824), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, 1073741824), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 22, 29]
 solution : [0, 6, 30]


Solution : [0, 6, 30] has cost 15.


Decide in level 4 among pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 37, 22, 29]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 536870912), (29, 1073741824), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, 1073741824), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 4

After decision at level 4
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 22, 29]
 solution : [0, 6, 30, 37]


New level: 5
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 22, 29]
 solution : [0, 6, 30, 37]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 26, 41, 28, 23, 22, 29]
 solution : [0, 6, 30, 37]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 536870912), (29, 1073741824), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, 1073741824), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 16384), (29, 1073741824), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 67108864), (41, 4096), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : {32, 34}

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 41, 28, 23, 22, 29]
 solution : [0, 6, 30, 37]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 41, 28, 23, 22, 29]
 solution : [0, 6, 30, 37]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 16384), (29, 1073741824), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 67108864), (41, 4096), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 16384), (29, 1073741824), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 67108864), (41, 4096), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 41, 28, 23, 22, 29]
 solution : [0, 6, 30, 37]


Solution : [0, 6, 30, 37] has cost 28.


Before backtrack at level 5
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 41, 28, 23, 22, 29]
 solution : [0, 6, 30, 37]

After backtrack at level 5
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 41, 28, 23, 22, 29, 32, 34]
 solution : [0, 6, 30, 37]


Invert decision for 37 at level 4


New level: 5
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 41, 28, 23, 22, 29, 32, 34]
 solution : [0, 6, 30]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 41, 28, 23, 22, 29, 32, 34]
 solution : [0, 6, 30]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 16384), (29, 1073741824), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 67108864), (41, 4096), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 536870912), (29, 1073741824), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 41, 28, 23, 22, 29, 32, 34]
 solution : [0, 6, 30]


Solution : [0, 6, 30] has cost 15.


Decide in level 5 among pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 41, 28, 23, 22, 29, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 536870912), (29, 1073741824), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 29 with phase True at level 5

After decision at level 5
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 41, 28, 23, 22, 32, 34]
 solution : [0, 6, 30, 29]


New level: 6
 pending : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 41, 28, 23, 22, 32, 34]
 solution : [0, 6, 30, 29]


Before reduction : 
 pending  : [25, 42, 40, 5, 21, 24, 14, 15, 13, 20, 12, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 19, 26, 41, 28, 23, 22, 32, 34]
 solution : [0, 6, 30, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 536870912), (29, 1073741824), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25}

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 28, 32, 34]
 solution : [0, 6, 30, 29]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 28, 32, 34]
 solution : [0, 6, 30, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 28, 32, 34]
 solution : [0, 6, 30, 29]


Solution : [0, 6, 30, 29] has cost 19.


Before backtrack at level 6
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 28, 32, 34]
 solution : [0, 6, 30, 29]

After backtrack at level 6
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 6, 30, 29]


Invert decision for 29 at level 5


New level: 6
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 6, 30]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 6, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 6, 30]


Solution : [0, 6, 30] has cost 15.


Decide in level 6 among pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 6, 30, 28]


New level: 7
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 6, 30, 28]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 6, 30, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 33554432), (41, 512), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {32, 34}

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 6, 30, 28]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 6, 30, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 33554432), (41, 512), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 33554432), (41, 512), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 6, 30, 28]


Solution : [0, 6, 30, 28] has cost 22.


Before backtrack at level 7
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 6, 30, 28]

After backtrack at level 7
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 32, 34]
 solution : [0, 6, 30, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 32, 34]
 solution : [0, 6, 30]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 32, 34]
 solution : [0, 6, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 33554432), (41, 512), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 32, 34]
 solution : [0, 6, 30]


Solution : [0, 6, 30] has cost 15.


Decide in level 7 among pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 22 with phase True at level 7

After decision at level 7
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 32, 34]
 solution : [0, 6, 30, 22]


New level: 8
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 32, 34]
 solution : [0, 6, 30, 22]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 32, 34]
 solution : [0, 6, 30, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25}

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34]
 solution : [0, 6, 30, 22]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34]
 solution : [0, 6, 30, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34]
 solution : [0, 6, 30, 22]


Solution : [0, 6, 30, 22] has cost 22.


Before backtrack at level 8
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34]
 solution : [0, 6, 30, 22]

After backtrack at level 8
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6, 30, 22]


Invert decision for 22 at level 7


New level: 8
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6, 30]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6, 30]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6, 30]


Solution : [0, 6, 30] has cost 15.


Decide in level 8 among pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 23]


New level: 9
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 23]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 24, 25}

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34]
 solution : [0, 6, 30, 23]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34]
 solution : [0, 6, 30, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34]
 solution : [0, 6, 30, 23]


Solution : [0, 6, 30, 23] has cost 22.


Before backtrack at level 9
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34]
 solution : [0, 6, 30, 23]

After backtrack at level 9
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30]


Before reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30]


Solution : [0, 6, 30] has cost 15.


Decide in level 9 among pending : [40, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 9

After decision at level 9
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 2]


New level: 10
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 2]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 41, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 134217728), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 32768), (41, 512), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : {32, 34, 35, 38, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 2]


Before reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 32768), (41, 512), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, 512), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 2]


Solution : [0, 6, 30, 2] has cost 19.


Before backtrack at level 10
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 2]

After backtrack at level 10
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34]
 solution : [0, 6, 30, 2]


Invert decision for 2 at level 9


New level: 10
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34]
 solution : [0, 6, 30]


Before reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34]
 solution : [0, 6, 30]

Essensial at level 10 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, 512), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 65536), (41, 4096), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : {32, 34, 35, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 26]


Before reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 65536), (41, 4096), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, 4096), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 26]


Solution : [0, 6, 30, 26] has cost 22.


Before backtrack at level 10
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 30, 26]

After backtrack at level 10
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34]
 solution : [0, 6, 30]


Before backtrack at level 9
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34]
 solution : [0, 6, 30]

After backtrack at level 9
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2]
 solution : [0, 6, 30]


Before backtrack at level 8
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2]
 solution : [0, 6, 30]

After backtrack at level 8
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23]
 solution : [0, 6, 30]


Before backtrack at level 7
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23]
 solution : [0, 6, 30]

After backtrack at level 7
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22]
 solution : [0, 6, 30]


Before backtrack at level 6
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22]
 solution : [0, 6, 30]

After backtrack at level 6
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22, 28]
 solution : [0, 6, 30]


Before backtrack at level 5
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22, 28]
 solution : [0, 6, 30]

After backtrack at level 5
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22, 28, 29]
 solution : [0, 6, 30]


Before backtrack at level 4
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22, 28, 29]
 solution : [0, 6, 30]

After backtrack at level 4
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22, 28, 29, 37]
 solution : [0, 6, 30]


Invert decision for 30 at level 3


New level: 4
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22, 28, 29, 37]
 solution : [0, 6]


Before reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22, 28, 29, 37]
 solution : [0, 6]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, 4096), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 1073741824), (29, 1073741824), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22, 28, 29, 37]
 solution : [0, 6]


Solution : [0, 6] has cost 11.


Decide in level 4 among pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22, 28, 29, 37]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 1073741824), (29, 1073741824), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 4

After decision at level 4
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22, 28, 29]
 solution : [0, 6, 37]


New level: 5
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22, 28, 29]
 solution : [0, 6, 37]


Before reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 22, 28, 29]
 solution : [0, 6, 37]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 1073741824), (29, 1073741824), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 32768), (29, 1073741824), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 67108864), (41, 8192), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : {32, 34}

After reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 28, 29]
 solution : [0, 6, 37]


Before reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 28, 29]
 solution : [0, 6, 37]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 32768), (29, 1073741824), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 67108864), (41, 8192), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 32768), (29, 1073741824), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 67108864), (41, 8192), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 28, 29]
 solution : [0, 6, 37]


Solution : [0, 6, 37] has cost 24.


Before backtrack at level 5
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 28, 29]
 solution : [0, 6, 37]

After backtrack at level 5
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 28, 29, 32, 34]
 solution : [0, 6, 37]


Invert decision for 37 at level 4


New level: 5
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 28, 29, 32, 34]
 solution : [0, 6]


Before reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 28, 29, 32, 34]
 solution : [0, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 32768), (29, 1073741824), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 67108864), (41, 8192), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 1073741824), (29, 1073741824), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 28, 29, 32, 34]
 solution : [0, 6]


Solution : [0, 6] has cost 11.


Decide in level 5 among pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 28, 29, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 1073741824), (29, 1073741824), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 29, 32, 34]
 solution : [0, 6, 28]


New level: 6
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 29, 32, 34]
 solution : [0, 6, 28]


Before reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 29, 32, 34]
 solution : [0, 6, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, 1073741824), (29, 1073741824), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 33554432), (27, -1), (28, -1), (29, 1073741824), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 33554432), (41, 512), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : {32, 34}

After reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 29]
 solution : [0, 6, 28]


Before reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 29]
 solution : [0, 6, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 33554432), (27, -1), (28, -1), (29, 1073741824), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 33554432), (41, 512), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 33554432), (27, -1), (28, -1), (29, 1073741824), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 33554432), (41, 512), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 29]
 solution : [0, 6, 28]


Solution : [0, 6, 28] has cost 18.


Before backtrack at level 6
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 29]
 solution : [0, 6, 28]

After backtrack at level 6
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 29, 32, 34]
 solution : [0, 6, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 29, 32, 34]
 solution : [0, 6]


Before reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 29, 32, 34]
 solution : [0, 6]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 33554432), (27, -1), (28, -1), (29, 1073741824), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 33554432), (41, 512), (42, 1048576), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, 1073741824), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 29, 32, 34]
 solution : [0, 6]


Solution : [0, 6] has cost 11.


Decide in level 6 among pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 29, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, 1073741824), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 29 with phase True at level 6

After decision at level 6
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 32, 34]
 solution : [0, 6, 29]


New level: 7
 pending : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 32, 34]
 solution : [0, 6, 29]


Before reduction : 
 pending  : [40, 41, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 23, 22, 32, 34]
 solution : [0, 6, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, 1073741824), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25}

After reduction : 
 pending  : [40, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 6, 29]


Before reduction : 
 pending  : [40, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 6, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 6, 29]


Solution : [0, 6, 29] has cost 15.


Decide in level 7 among pending : [40, 41, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 6, 29, 26]


New level: 8
 pending : [40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 6, 29, 26]


Before reduction : 
 pending  : [40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 6, 29, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 2, 35, 34, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 6, 29, 26]


Before reduction : 
 pending  : []
 solution : [0, 6, 29, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 6, 29, 26]


Solution : [0, 6, 29, 26] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [0, 6, 29, 26]

After backtrack at level 8
 pending : [40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 6, 29, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 6, 29]


Before reduction : 
 pending  : [40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34]
 solution : [0, 6, 29]

Essensial at level 8 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 6, 29, 2]


Before reduction : 
 pending  : []
 solution : [0, 6, 29, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 6, 29, 2]


Solution : [0, 6, 29, 2] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [0, 6, 29, 2]

After backtrack at level 8
 pending : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34]
 solution : [0, 6, 29]


Before backtrack at level 7
 pending : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34]
 solution : [0, 6, 29]

After backtrack at level 7
 pending : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 26]
 solution : [0, 6, 29]


Invert decision for 29 at level 6


New level: 7
 pending : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 26]
 solution : [0, 6]


Before reduction : 
 pending  : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 26]
 solution : [0, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 26]
 solution : [0, 6]


Solution : [0, 6] has cost 11.


Decide in level 7 among pending : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 26]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 22 with phase True at level 7

After decision at level 7
 pending : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 6, 22]


New level: 8
 pending : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 6, 22]


Before reduction : 
 pending  : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 26]
 solution : [0, 6, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, 536870912), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25}

After reduction : 
 pending  : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26]
 solution : [0, 6, 22]


Before reduction : 
 pending  : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26]
 solution : [0, 6, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26]
 solution : [0, 6, 22]


Solution : [0, 6, 22] has cost 18.


Before backtrack at level 8
 pending : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26]
 solution : [0, 6, 22]

After backtrack at level 8
 pending : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6, 22]


Invert decision for 22 at level 7


New level: 8
 pending : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6]


Before reduction : 
 pending  : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6]


Solution : [0, 6] has cost 11.


Decide in level 8 among pending : [2, 40, 41, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 41 with phase True at level 8

After decision at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6, 41]


New level: 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6, 41]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6, 41]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, 268435456), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 33554432), (41, -1), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6, 41]


Solution : [0, 6, 41] has cost 25.


Before backtrack at level 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6, 41]

After backtrack at level 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6, 41]


Invert decision for 41 at level 8


New level: 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 33554432), (41, -1), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, -1), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 6]


Solution : [0, 6] has cost 11.


Decide in level 9 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, -1), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 23 with phase True at level 9

After decision at level 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 23]


New level: 10
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 23]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, 268435456), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, -1), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 24, 25}

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26]
 solution : [0, 6, 23]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26]
 solution : [0, 6, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26]
 solution : [0, 6, 23]


Solution : [0, 6, 23] has cost 18.


Before backtrack at level 10
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26]
 solution : [0, 6, 23]

After backtrack at level 10
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 23]


Invert decision for 23 at level 9


New level: 10
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, -1), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6]


Solution : [0, 6] has cost 11.


Decide in level 10 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, -1), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 10

After decision at level 10
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 2]


New level: 11
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 2]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 16777216), (20, 8388608), (21, 262144), (22, -1), (23, -1), (24, 262144), (25, 1048576), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 67108864), (41, -1), (42, 1048576), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 34, 35, 38, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 2]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 2]


Solution : [0, 6, 2] has cost 15.


Decide in level 11 among pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 19 with phase True at level 11

After decision at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 6, 2, 19]


New level: 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 6, 2, 19]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 6, 2, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 65536), (13, 16384), (14, 0), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {5, 14, 20, 21, 24}

After reduction : 
 pending  : [40, 25, 42, 15, 13, 12]
 solution : [0, 6, 2, 19]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 12]
 solution : [0, 6, 2, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 65536), (13, 16384), (14, 0), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 65536), (13, 16384), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13, 12]
 solution : [0, 6, 2, 19]


Solution : [0, 6, 2, 19] has cost 24.


Before backtrack at level 12
 pending : [40, 25, 42, 15, 13, 12]
 solution : [0, 6, 2, 19]

After backtrack at level 12
 pending : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 6, 2, 19]


Invert decision for 19 at level 11


New level: 12
 pending : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 6, 2]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 6, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 65536), (13, 16384), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 6, 2]


Solution : [0, 6, 2] has cost 15.


Decide in level 12 among pending : [40, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 6, 2, 12]


New level: 13
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 6, 2, 12]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 6, 2, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1048576), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 6, 2, 12]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 6, 2, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1048576), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1048576), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 6, 2, 12]


Solution : [0, 6, 2, 12] has cost 22.


Before backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 20]
 solution : [0, 6, 2, 12]

After backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 6, 2, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 6, 2]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 6, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1048576), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 6, 2]


Solution : [0, 6, 2] has cost 15.


Decide in level 13 among pending : [40, 25, 42, 5, 21, 24, 20, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [40, 25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 6, 2, 20]


New level: 14
 pending : [40, 25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 6, 2, 20]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 6, 2, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 0), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {24, 21, 5, 14}

After reduction : 
 pending  : [40, 25, 42, 15, 13]
 solution : [0, 6, 2, 20]


Before reduction : 
 pending  : [40, 25, 42, 15, 13]
 solution : [0, 6, 2, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 0), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13]
 solution : [0, 6, 2, 20]


Solution : [0, 6, 2, 20] has cost 24.


Before backtrack at level 14
 pending : [40, 25, 42, 15, 13]
 solution : [0, 6, 2, 20]

After backtrack at level 14
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 6, 2, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 6, 2]


Before reduction : 
 pending  : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 6, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 1024), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 6, 2]


Solution : [0, 6, 2] has cost 15.


Decide in level 14 among pending : [40, 25, 42, 15, 13, 5, 21, 24, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 6, 2, 13]


New level: 15
 pending : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 6, 2, 13]


Before reduction : 
 pending  : [40, 25, 42, 15, 5, 21, 24, 14]
 solution : [0, 6, 2, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 6, 2, 13]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 6, 2, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24]
 solution : [0, 6, 2, 13]


Solution : [0, 6, 2, 13] has cost 22.


Before backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24]
 solution : [0, 6, 2, 13]

After backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 6, 2, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 6, 2]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 15, 14]
 solution : [0, 6, 2]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, 32768), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 512), (41, -1), (42, 131072), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 6, 2, 15]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 6, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 6, 2, 15]


Solution : [0, 6, 2, 15] has cost 22.


Before backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 14]
 solution : [0, 6, 2, 15]

After backtrack at level 15
 pending : [40, 25, 42, 5, 21, 24, 14, 15]
 solution : [0, 6, 2]


Before backtrack at level 14
 pending : [40, 25, 42, 5, 21, 24, 14, 15]
 solution : [0, 6, 2]

After backtrack at level 14
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 6, 2]


Before backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 6, 2]

After backtrack at level 13
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 6, 2]


Before backtrack at level 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 6, 2]

After backtrack at level 12
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 6, 2]


Before backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 6, 2]

After backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 19]
 solution : [0, 6, 2]


Invert decision for 2 at level 10


New level: 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 19]
 solution : [0, 6]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 26, 19]
 solution : [0, 6]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 32768), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 34, 35, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 26]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 26]


Solution : [0, 6, 26] has cost 18.


Before backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 6, 26]

After backtrack at level 11
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34]
 solution : [0, 6]


Before backtrack at level 10
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34]
 solution : [0, 6]

After backtrack at level 10
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2]
 solution : [0, 6]


Before backtrack at level 9
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2]
 solution : [0, 6]

After backtrack at level 9
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23]
 solution : [0, 6]


Before backtrack at level 8
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23]
 solution : [0, 6]

After backtrack at level 8
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41]
 solution : [0, 6]


Before backtrack at level 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41]
 solution : [0, 6]

After backtrack at level 7
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22]
 solution : [0, 6]


Before backtrack at level 6
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22]
 solution : [0, 6]

After backtrack at level 6
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 29]
 solution : [0, 6]


Before backtrack at level 5
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 29]
 solution : [0, 6]

After backtrack at level 5
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 29, 28]
 solution : [0, 6]


Before backtrack at level 4
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 29, 28]
 solution : [0, 6]

After backtrack at level 4
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 29, 28, 37]
 solution : [0, 6]


Before backtrack at level 3
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 29, 28, 37]
 solution : [0, 6]

After backtrack at level 3
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 29, 28, 37, 30]
 solution : [0, 6]


Invert decision for 6 at level 2


New level: 3
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 29, 28, 37, 30]
 solution : [0]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 29, 28, 37, 30]
 solution : [0]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 4194304), (21, 131072), (22, -1), (23, -1), (24, 65536), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 65536), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, 4294967296), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 29, 28, 37, 30]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 3 among pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 29, 28, 37, 30]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, 4294967296), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 29 with phase True at level 3

After decision at level 3
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 28, 37, 30]
 solution : [0, 29]


New level: 4
 pending : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 28, 37, 30]
 solution : [0, 29]


Before reduction : 
 pending  : [40, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 23, 41, 22, 28, 37, 30]
 solution : [0, 29]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, 4294967296), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, 4294967296), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 2147483648), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 4 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25}

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 41, 28, 37, 30]
 solution : [0, 29]


Before reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 41, 28, 37, 30]
 solution : [0, 29]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, 4294967296), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 2147483648), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, 4294967296), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 2147483648), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 41, 28, 37, 30]
 solution : [0, 29]


Solution : [0, 29] has cost 10.


Decide in level 4 among pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 41, 28, 37, 30]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, 4294967296), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 2147483648), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 30 with phase True at level 4

After decision at level 4
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 41, 28, 37]
 solution : [0, 29, 30]


New level: 5
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 41, 28, 37]
 solution : [0, 29, 30]


Before reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 41, 28, 37]
 solution : [0, 29, 30]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, 4294967296), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 2147483648), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 1073741824), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 41, 28, 37]
 solution : [0, 29, 30]


Solution : [0, 29, 30] has cost 14.


Decide in level 5 among pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 41, 28, 37]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 1073741824), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 5

After decision at level 5
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 41, 28]
 solution : [0, 29, 30, 37]


New level: 6
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 41, 28]
 solution : [0, 29, 30, 37]


Before reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 41, 28]
 solution : [0, 29, 30, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 1073741824), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 2048), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 4194304), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : {32, 41, 34}

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28]
 solution : [0, 29, 30, 37]


Before reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28]
 solution : [0, 29, 30, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 2048), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 4194304), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 2048), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 4194304), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28]
 solution : [0, 29, 30, 37]


Solution : [0, 29, 30, 37] has cost 27.


Before backtrack at level 6
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28]
 solution : [0, 29, 30, 37]

After backtrack at level 6
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 29, 30, 37]


Invert decision for 37 at level 5


New level: 6
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 29, 30]


Before reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 29, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 2048), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 4194304), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]
 solution : [0, 29, 30]


Solution : [0, 29, 30] has cost 14.


Decide in level 6 among pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 28, 32, 34, 41]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 29, 30, 28]


New level: 7
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 29, 30, 28]


Before reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 29, 30, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {32, 41, 34}

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 29, 30, 28]


Before reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 29, 30, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 29, 30, 28]


Solution : [0, 29, 30, 28] has cost 21.


Before backtrack at level 7
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 29, 30, 28]

After backtrack at level 7
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 29, 30, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 29, 30]


Before reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 29, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 29, 30]


Solution : [0, 29, 30] has cost 14.


Decide in level 7 among pending : [40, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 29, 30, 26]


New level: 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 29, 30, 26]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 29, 30, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 2, 35, 34, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 29, 30, 26]


Before reduction : 
 pending  : []
 solution : [0, 29, 30, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 29, 30, 26]


Solution : [0, 29, 30, 26] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [0, 29, 30, 26]

After backtrack at level 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 29, 30, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 29, 30]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 32, 34, 41]
 solution : [0, 29, 30]

Essensial at level 8 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 29, 30, 2]


Before reduction : 
 pending  : []
 solution : [0, 29, 30, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 29, 30, 2]


Solution : [0, 29, 30, 2] has cost 18.


Before backtrack at level 8
 pending : []
 solution : [0, 29, 30, 2]

After backtrack at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 29, 30]


Before backtrack at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 29, 30]

After backtrack at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 29, 30]


Before backtrack at level 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 29, 30]

After backtrack at level 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28]
 solution : [0, 29, 30]


Before backtrack at level 5
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28]
 solution : [0, 29, 30]

After backtrack at level 5
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 29, 30]


Invert decision for 30 at level 4


New level: 5
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 29]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 29]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 2147483648), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 29]


Solution : [0, 29] has cost 10.


Decide in level 5 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 2147483648), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 5

After decision at level 5
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28]
 solution : [0, 29, 37]


New level: 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28]
 solution : [0, 29, 37]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28]
 solution : [0, 29, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, 2147483648), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 4194304), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : {32, 41, 34}

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28]
 solution : [0, 29, 37]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28]
 solution : [0, 29, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 4194304), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 4194304), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28]
 solution : [0, 29, 37]


Solution : [0, 29, 37] has cost 23.


Before backtrack at level 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28]
 solution : [0, 29, 37]

After backtrack at level 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 41]
 solution : [0, 29, 37]


Invert decision for 37 at level 5


New level: 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 41]
 solution : [0, 29]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 41]
 solution : [0, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 4096), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, 4194304), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 41]
 solution : [0, 29]


Solution : [0, 29] has cost 10.


Decide in level 6 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 41]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 29, 28]


New level: 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 29, 28]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 41]
 solution : [0, 29, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {32, 41, 34}

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 29, 28]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 29, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 29, 28]


Solution : [0, 29, 28] has cost 17.


Decide in level 7 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 8388608), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 29, 28, 2]


New level: 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 29, 28, 2]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 29, 28, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 8388608), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 29, 28, 2]


Before reduction : 
 pending  : []
 solution : [0, 29, 28, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 29, 28, 2]


Solution : [0, 29, 28, 2] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [0, 29, 28, 2]

After backtrack at level 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 29, 28, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 29, 28]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 29, 28]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 29, 28, 26]


Before reduction : 
 pending  : []
 solution : [0, 29, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 29, 28, 26]


Solution : [0, 29, 28, 26] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [0, 29, 28, 26]

After backtrack at level 8
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51]
 solution : [0, 29, 28]


Before backtrack at level 7
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51]
 solution : [0, 29, 28]

After backtrack at level 7
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 29, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 29]


Before reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 29]


Solution : [0, 29] has cost 10.


Decide in level 7 among pending : [26, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 29, 26]


New level: 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 29, 26]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 29, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 34, 35, 2, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 29, 26]


Before reduction : 
 pending  : []
 solution : [0, 29, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 29, 26]


Solution : [0, 29, 26] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [0, 29, 26]

After backtrack at level 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 29, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 29]


Before reduction : 
 pending  : [40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 2]
 solution : [0, 29]

Essensial at level 8 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 29, 2]


Before reduction : 
 pending  : []
 solution : [0, 29, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 29, 2]


Solution : [0, 29, 2] has cost 14.


Before backtrack at level 8
 pending : []
 solution : [0, 29, 2]

After backtrack at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 29]


Before backtrack at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41]
 solution : [0, 29]

After backtrack at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 29]


Before backtrack at level 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26]
 solution : [0, 29]

After backtrack at level 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28]
 solution : [0, 29]


Before backtrack at level 5
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28]
 solution : [0, 29]

After backtrack at level 5
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 29]


Before backtrack at level 4
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 29]

After backtrack at level 4
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 30]
 solution : [0, 29]


Invert decision for 29 at level 3


New level: 4
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 30]
 solution : [0]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 30]
 solution : [0]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 30]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 4 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22, 30]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 30 with phase True at level 4

After decision at level 4
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 30]


New level: 5
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 30]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 30]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, 4294967296), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, 1073741824), (38, 16384), (39, -1), (40, 268435456), (41, 536870912), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]
 solution : [0, 30]


Solution : [0, 30] has cost 10.


Decide in level 5 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 22]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, 1073741824), (38, 16384), (39, -1), (40, 268435456), (41, 536870912), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 22 with phase True at level 5

After decision at level 5
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30, 22]


New level: 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30, 22]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30, 22]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, 1073741824), (38, 16384), (39, -1), (40, 268435456), (41, 536870912), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 1073741824), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25}

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 30, 22]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 30, 22]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 1073741824), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 1073741824), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 30, 22]


Solution : [0, 30, 22] has cost 17.


Before backtrack at level 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37]
 solution : [0, 30, 22]

After backtrack at level 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30, 22]


Invert decision for 22 at level 5


New level: 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, 1073741824), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, 1073741824), (38, 16384), (39, -1), (40, 268435456), (41, 536870912), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30]


Solution : [0, 30] has cost 10.


Decide in level 6 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 37, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, 1073741824), (38, 16384), (39, -1), (40, 268435456), (41, 536870912), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 6

After decision at level 6
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30, 37]


New level: 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30, 37]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30, 37]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, 1073741824), (38, 16384), (39, -1), (40, 268435456), (41, 536870912), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 16384), (29, -1), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 268435456), (41, 16384), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {32, 34}

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30, 37]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30, 37]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 16384), (29, -1), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 268435456), (41, 16384), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 16384), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 268435456), (41, 16384), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30, 37]


Solution : [0, 30, 37] has cost 23.


Before backtrack at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23]
 solution : [0, 30, 37]

After backtrack at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 32, 34]
 solution : [0, 30, 37]


Invert decision for 37 at level 6


New level: 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 32, 34]
 solution : [0, 30]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 32, 34]
 solution : [0, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 16384), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 268435456), (41, 16384), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, 536870912), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 32, 34]
 solution : [0, 30]


Solution : [0, 30] has cost 10.


Decide in level 7 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, 536870912), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30, 23]


New level: 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30, 23]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, 536870912), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 24, 25}

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 32, 34]
 solution : [0, 30, 23]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 32, 34]
 solution : [0, 30, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 32, 34]
 solution : [0, 30, 23]


Solution : [0, 30, 23] has cost 17.


Before backtrack at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 32, 34]
 solution : [0, 30, 23]

After backtrack at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 524288), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 2048), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, 536870912), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30]


Solution : [0, 30] has cost 10.


Decide in level 8 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 41, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, 536870912), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 41 with phase True at level 8

After decision at level 8
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 41]


New level: 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 41]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 41]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, 536870912), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 1048576), (32, 1048576), (33, -1), (34, 8192), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 134217728), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 41]


Solution : [0, 30, 41] has cost 24.


Before backtrack at level 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 41]

After backtrack at level 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 41]


Invert decision for 41 at level 8


New level: 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 268435456), (29, -1), (30, -1), (31, 1048576), (32, 1048576), (33, -1), (34, 8192), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 134217728), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30]


Solution : [0, 30] has cost 10.


Decide in level 9 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 28, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 9

After decision at level 9
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 28]


New level: 10
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 28]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 134217728), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : {32, 34}

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 28]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 134217728), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 134217728), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 28]


Solution : [0, 30, 28] has cost 17.


Before backtrack at level 10
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 28]

After backtrack at level 10
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30, 28]


Invert decision for 28 at level 9


New level: 10
 pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30]


Before reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 134217728), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30]


Solution : [0, 30] has cost 10.


Decide in level 10 among pending : [2, 40, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 40 with phase True at level 10

After decision at level 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30, 40]


New level: 11
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30, 40]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30, 40]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 1048576), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, -1), (41, -1), (42, 1048576), (43, 134217728), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30, 40]


Solution : [0, 30, 40] has cost 28.


Before backtrack at level 11
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30, 40]

After backtrack at level 11
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30, 40]


Invert decision for 40 at level 10


New level: 11
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 1048576), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 2097152), (33, -1), (34, 4096), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, -1), (41, -1), (42, 1048576), (43, 134217728), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, -1), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30]


Solution : [0, 30] has cost 10.


Decide in level 11 among pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, -1), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30, 2]


New level: 12
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30, 2]


Before reduction : 
 pending  : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 32, 34]
 solution : [0, 30, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, -1), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {32, 34, 35, 38, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 2]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 2]


Solution : [0, 30, 2] has cost 14.


Decide in level 12 among pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 19 with phase True at level 12

After decision at level 12
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 30, 2, 19]


New level: 13
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 30, 2, 19]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 30, 2, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {5, 14, 20, 21, 24}

After reduction : 
 pending  : [25, 42, 15, 13, 12]
 solution : [0, 30, 2, 19]


Before reduction : 
 pending  : [25, 42, 15, 13, 12]
 solution : [0, 30, 2, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12]
 solution : [0, 30, 2, 19]


Solution : [0, 30, 2, 19] has cost 23.


Before backtrack at level 13
 pending : [25, 42, 15, 13, 12]
 solution : [0, 30, 2, 19]

After backtrack at level 13
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 30, 2, 19]


Invert decision for 19 at level 12


New level: 13
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 30, 2]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 30, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 30, 2]


Solution : [0, 30, 2] has cost 14.


Decide in level 13 among pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 30, 2, 12]


New level: 14
 pending : [25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 30, 2, 12]


Before reduction : 
 pending  : [25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 30, 2, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {13, 14, 15}

After reduction : 
 pending  : [25, 42, 5, 21, 24, 20]
 solution : [0, 30, 2, 12]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 20]
 solution : [0, 30, 2, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 20]
 solution : [0, 30, 2, 12]


Solution : [0, 30, 2, 12] has cost 21.


Before backtrack at level 14
 pending : [25, 42, 5, 21, 24, 20]
 solution : [0, 30, 2, 12]

After backtrack at level 14
 pending : [25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 30, 2, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 30, 2]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 30, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 30, 2]


Solution : [0, 30, 2] has cost 14.


Decide in level 14 among pending : [25, 42, 5, 21, 24, 20, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 30, 2, 20]


New level: 15
 pending : [25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 30, 2, 20]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 30, 2, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {24, 21, 5, 14}

After reduction : 
 pending  : [25, 42, 15, 13]
 solution : [0, 30, 2, 20]


Before reduction : 
 pending  : [25, 42, 15, 13]
 solution : [0, 30, 2, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 42, 15, 13]
 solution : [0, 30, 2, 20]


Solution : [0, 30, 2, 20] has cost 23.


Before backtrack at level 15
 pending : [25, 42, 15, 13]
 solution : [0, 30, 2, 20]

After backtrack at level 15
 pending : [25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 30, 2, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 30, 2]


Before reduction : 
 pending  : [25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 30, 2]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 30, 2]


Solution : [0, 30, 2] has cost 14.


Decide in level 15 among pending : [25, 42, 15, 13, 5, 21, 24, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 15

After decision at level 15
 pending : [25, 42, 15, 5, 21, 24, 14]
 solution : [0, 30, 2, 13]


New level: 16
 pending : [25, 42, 15, 5, 21, 24, 14]
 solution : [0, 30, 2, 13]


Before reduction : 
 pending  : [25, 42, 15, 5, 21, 24, 14]
 solution : [0, 30, 2, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : {14, 15}

After reduction : 
 pending  : [25, 42, 5, 21, 24]
 solution : [0, 30, 2, 13]


Before reduction : 
 pending  : [25, 42, 5, 21, 24]
 solution : [0, 30, 2, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24]
 solution : [0, 30, 2, 13]


Solution : [0, 30, 2, 13] has cost 21.


Before backtrack at level 16
 pending : [25, 42, 5, 21, 24]
 solution : [0, 30, 2, 13]

After backtrack at level 16
 pending : [25, 42, 5, 21, 24, 15, 14]
 solution : [0, 30, 2, 13]


Invert decision for 13 at level 15


New level: 16
 pending : [25, 42, 5, 21, 24, 15, 14]
 solution : [0, 30, 2]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 15, 14]
 solution : [0, 30, 2]

Essensial at level 16 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14]
 solution : [0, 30, 2, 15]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14]
 solution : [0, 30, 2, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14]
 solution : [0, 30, 2, 15]


Solution : [0, 30, 2, 15] has cost 21.


Before backtrack at level 16
 pending : [25, 42, 5, 21, 24, 14]
 solution : [0, 30, 2, 15]

After backtrack at level 16
 pending : [25, 42, 5, 21, 24, 14, 15]
 solution : [0, 30, 2]


Before backtrack at level 15
 pending : [25, 42, 5, 21, 24, 14, 15]
 solution : [0, 30, 2]

After backtrack at level 15
 pending : [25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 30, 2]


Before backtrack at level 14
 pending : [25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 30, 2]

After backtrack at level 14
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 30, 2]


Before backtrack at level 13
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 30, 2]

After backtrack at level 13
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 30, 2]


Before backtrack at level 12
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 30, 2]

After backtrack at level 12
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 19]
 solution : [0, 30, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 19]
 solution : [0, 30]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 19]
 solution : [0, 30]

Essensial at level 12 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {32, 34, 35, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 26]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 26]


Solution : [0, 30, 26] has cost 17.


Before backtrack at level 12
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 30, 26]

After backtrack at level 12
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34]
 solution : [0, 30]


Before backtrack at level 11
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34]
 solution : [0, 30]

After backtrack at level 11
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2]
 solution : [0, 30]


Before backtrack at level 10
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2]
 solution : [0, 30]

After backtrack at level 10
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40]
 solution : [0, 30]


Before backtrack at level 9
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40]
 solution : [0, 30]

After backtrack at level 9
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28]
 solution : [0, 30]


Before backtrack at level 8
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28]
 solution : [0, 30]

After backtrack at level 8
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41]
 solution : [0, 30]


Before backtrack at level 7
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41]
 solution : [0, 30]

After backtrack at level 7
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41, 23]
 solution : [0, 30]


Before backtrack at level 6
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41, 23]
 solution : [0, 30]

After backtrack at level 6
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41, 23, 37]
 solution : [0, 30]


Before backtrack at level 5
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41, 23, 37]
 solution : [0, 30]

After backtrack at level 5
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41, 23, 37, 22]
 solution : [0, 30]


Invert decision for 30 at level 4


New level: 5
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41, 23, 37, 22]
 solution : [0]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41, 23, 37, 22]
 solution : [0]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41, 23, 37, 22]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 5 among pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41, 23, 37, 22]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 37 with phase True at level 5

After decision at level 5
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41, 23, 22]
 solution : [0, 37]


New level: 6
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41, 23, 22]
 solution : [0, 37]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 2, 40, 28, 41, 23, 22]
 solution : [0, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, 2147483648), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 268435456), (41, 32768), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : {32, 34}

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 23, 22]
 solution : [0, 37]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 23, 22]
 solution : [0, 37]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 268435456), (41, 32768), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 268435456), (41, 32768), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 23, 22]
 solution : [0, 37]


Solution : [0, 37] has cost 19.


Before backtrack at level 6
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 23, 22]
 solution : [0, 37]

After backtrack at level 6
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 23, 22, 32, 34]
 solution : [0, 37]


Invert decision for 37 at level 5


New level: 6
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 23, 22, 32, 34]
 solution : [0]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 23, 22, 32, 34]
 solution : [0]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 32768), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 268435456), (41, 32768), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, 16777216), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 23, 22, 32, 34]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 6 among pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 23, 22, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 22 with phase True at level 6

After decision at level 6
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 23, 32, 34]
 solution : [0, 22]


New level: 7
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 23, 32, 34]
 solution : [0, 22]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 23, 32, 34]
 solution : [0, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, 2147483648), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25}

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 32, 34]
 solution : [0, 22]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 32, 34]
 solution : [0, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 32, 34]
 solution : [0, 22]


Solution : [0, 22] has cost 13.


Decide in level 7 among pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 28, 41, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]
 solution : [0, 22, 28]


New level: 8
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]
 solution : [0, 22, 28]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]
 solution : [0, 22, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : {32, 41, 34}

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40]
 solution : [0, 22, 28]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40]
 solution : [0, 22, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, 0), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40]
 solution : [0, 22, 28]


Solution : [0, 22, 28] has cost 20.


Before backtrack at level 8
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40]
 solution : [0, 22, 28]

After backtrack at level 8
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]
 solution : [0, 22, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]
 solution : [0, 22]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]
 solution : [0, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]
 solution : [0, 22]


Solution : [0, 22] has cost 13.


Decide in level 8 among pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]
 solution : [0, 22, 26]


New level: 9
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]
 solution : [0, 22, 26]


Before reduction : 
 pending  : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]
 solution : [0, 22, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, 4096), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : {32, 2, 35, 34, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 22, 26]


Before reduction : 
 pending  : []
 solution : [0, 22, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 22, 26]


Solution : [0, 22, 26] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [0, 22, 26]

After backtrack at level 9
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]
 solution : [0, 22, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]
 solution : [0, 22]


Before reduction : 
 pending  : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 40, 41, 32, 34]
 solution : [0, 22]

Essensial at level 9 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : {32, 34, 35, 38, 40, 41, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 22, 2]


Before reduction : 
 pending  : []
 solution : [0, 22, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 22, 2]


Solution : [0, 22, 2] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [0, 22, 2]

After backtrack at level 9
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 41, 32, 34]
 solution : [0, 22]


Before backtrack at level 8
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 41, 32, 34]
 solution : [0, 22]

After backtrack at level 8
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 41, 32, 34, 26]
 solution : [0, 22]


Before backtrack at level 7
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 41, 32, 34, 26]
 solution : [0, 22]

After backtrack at level 7
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 41, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]
 solution : [0, 22]


Invert decision for 22 at level 6


New level: 7
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 41, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]
 solution : [0]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 41, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]
 solution : [0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 41, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 7 among pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 41, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 41 with phase True at level 7

After decision at level 7
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]
 solution : [0, 41]


New level: 8
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]
 solution : [0, 41]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]
 solution : [0, 41]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, 1073741824), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 134217728), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]
 solution : [0, 41]


Solution : [0, 41] has cost 20.


Before backtrack at level 8
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]
 solution : [0, 41]

After backtrack at level 8
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]
 solution : [0, 41]


Invert decision for 41 at level 7


New level: 8
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]
 solution : [0]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]
 solution : [0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 536870912), (29, -1), (30, -1), (31, 1048576), (32, 2097152), (33, -1), (34, 16384), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 134217728), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 8 among pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 23, 28]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 28]
 solution : [0, 23]


New level: 9
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 28]
 solution : [0, 23]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 28]
 solution : [0, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, 1073741824), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : {5, 42, 12, 13, 14, 15, 19, 20, 21, 24, 25}

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 28]
 solution : [0, 23]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 28]
 solution : [0, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 0), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 28]
 solution : [0, 23]


Solution : [0, 23] has cost 13.


Decide in level 9 among pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26, 28]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 9

After decision at level 9
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26]
 solution : [0, 23, 28]


New level: 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26]
 solution : [0, 23, 28]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 26]
 solution : [0, 23, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : {32, 34}

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26]
 solution : [0, 23, 28]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26]
 solution : [0, 23, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 0), (33, -1), (34, 0), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26]
 solution : [0, 23, 28]


Solution : [0, 23, 28] has cost 20.


Before backtrack at level 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26]
 solution : [0, 23, 28]

After backtrack at level 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26, 32, 34]
 solution : [0, 23, 28]


Invert decision for 28 at level 9


New level: 10
 pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26, 32, 34]
 solution : [0, 23]


Before reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26, 32, 34]
 solution : [0, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26, 32, 34]
 solution : [0, 23]


Solution : [0, 23] has cost 13.


Decide in level 10 among pending : [2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 10

After decision at level 10
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26, 32, 34]
 solution : [0, 23, 2]


New level: 11
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26, 32, 34]
 solution : [0, 23, 2]


Before reduction : 
 pending  : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26, 32, 34]
 solution : [0, 23, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 524288), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 34, 35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 23, 2]


Before reduction : 
 pending  : []
 solution : [0, 23, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 23, 2]


Solution : [0, 23, 2] has cost 17.


Before backtrack at level 11
 pending : []
 solution : [0, 23, 2]

After backtrack at level 11
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26, 32, 34]
 solution : [0, 23, 2]


Invert decision for 2 at level 10


New level: 11
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26, 32, 34]
 solution : [0, 23]


Before reduction : 
 pending  : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 26, 32, 34]
 solution : [0, 23]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {32, 34, 35, 38, 40, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : []
 solution : [0, 23, 26]


Before reduction : 
 pending  : []
 solution : [0, 23, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 23, 26]


Solution : [0, 23, 26] has cost 20.


Before backtrack at level 11
 pending : []
 solution : [0, 23, 26]

After backtrack at level 11
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34]
 solution : [0, 23]


Before backtrack at level 10
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34]
 solution : [0, 23]

After backtrack at level 10
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 2]
 solution : [0, 23]


Before backtrack at level 9
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 2]
 solution : [0, 23]

After backtrack at level 9
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 28]
 solution : [0, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 28]
 solution : [0]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 28]
 solution : [0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 28]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 9 among pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19, 28]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 28 with phase True at level 9

After decision at level 9
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28]


New level: 10
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 32, 34, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, 1073741824), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 134217728), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : {32, 34}

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 0), (33, -1), (34, 0), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 134217728), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 134217728), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28]


Solution : [0, 28] has cost 13.


Decide in level 10 among pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 40, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 134217728), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 40 with phase True at level 10

After decision at level 10
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28, 40]


New level: 11
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28, 40]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28, 40]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 134217728), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8388608), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 1048576), (26, 8388608), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 1024), (39, -1), (40, -1), (41, -1), (42, 1048576), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28, 40]


Solution : [0, 28, 40] has cost 31.


Before backtrack at level 11
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28, 40]

After backtrack at level 11
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28, 40]


Invert decision for 40 at level 10


New level: 11
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8388608), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 1048576), (26, 8388608), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 1024), (39, -1), (40, -1), (41, -1), (42, 1048576), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 1048576), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, -1), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 28]


Solution : [0, 28] has cost 13.


Decide in level 11 among pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, -1), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 19 with phase True at level 11

After decision at level 11
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 28, 19]


New level: 12
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 28, 19]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 28, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, -1), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 4096), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, -1), (42, 4096), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {5, 14, 20, 21, 24}

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 15, 13, 12]
 solution : [0, 28, 19]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 15, 13, 12]
 solution : [0, 28, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 4096), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, -1), (42, 4096), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 4096), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, -1), (42, 4096), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 15, 13, 12]
 solution : [0, 28, 19]


Solution : [0, 28, 19] has cost 22.


Before backtrack at level 12
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 15, 13, 12]
 solution : [0, 28, 19]

After backtrack at level 12
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28, 19]


Invert decision for 19 at level 11


New level: 12
 pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28]


Before reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 4096), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, 1024), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, -1), (42, 4096), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, -1), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28]


Solution : [0, 28] has cost 13.


Decide in level 12 among pending : [26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, -1), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

Decide 26 with phase True at level 12

After decision at level 12
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28, 26]


New level: 13
 pending : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28, 26]


Before reduction : 
 pending  : [10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2, 25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, -1), (33, -1), (34, -1), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, -1), (41, -1), (42, 4194304), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 33554432), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {2, 35, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28, 26]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28, 26]


Solution : [0, 28, 26] has cost 20.


Before backtrack at level 13
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28, 26]

After backtrack at level 13
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 28, 26]


Invert decision for 26 at level 12


New level: 13
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 28]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 2]
 solution : [0, 28]

Essensial at level 13 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {35, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28, 2]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28, 2]


Solution : [0, 28, 2] has cost 17.


Before backtrack at level 13
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 28, 2]

After backtrack at level 13
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51]
 solution : [0, 28]


Before backtrack at level 12
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51]
 solution : [0, 28]

After backtrack at level 12
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 28]


Before backtrack at level 11
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26]
 solution : [0, 28]

After backtrack at level 11
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19]
 solution : [0, 28]


Before backtrack at level 10
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19]
 solution : [0, 28]

After backtrack at level 10
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34, 40]
 solution : [0, 28]


Invert decision for 28 at level 9


New level: 10
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34, 40]
 solution : [0]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34, 40]
 solution : [0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34, 40]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 10 among pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34, 40]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 40 with phase True at level 10

After decision at level 10
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34]
 solution : [0, 40]


New level: 11
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34]
 solution : [0, 40]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34]
 solution : [0, 40]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 268435456), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 1048576), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, -1), (41, -1), (42, 1048576), (43, 134217728), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34]
 solution : [0, 40]


Solution : [0, 40] has cost 24.


Before backtrack at level 11
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34]
 solution : [0, 40]

After backtrack at level 11
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34]
 solution : [0, 40]


Invert decision for 40 at level 10


New level: 11
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34]
 solution : [0]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34]
 solution : [0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 262144), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 1048576), (26, 33554432), (27, -1), (28, -1), (29, -1), (30, -1), (31, 262144), (32, 4194304), (33, -1), (34, 8192), (35, 4096), (36, -1), (37, -1), (38, 4096), (39, -1), (40, -1), (41, -1), (42, 1048576), (43, 134217728), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, -1), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 11 among pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 2, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, -1), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34]
 solution : [0, 2]


New level: 12
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34]
 solution : [0, 2]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 19, 32, 34]
 solution : [0, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, -1), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1048576), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 67108864), (20, 33554432), (21, 1048576), (22, -1), (23, -1), (24, 1048576), (25, 4194304), (26, 134217728), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1048576), (32, 4194304), (33, -1), (34, 32768), (35, 16384), (36, -1), (37, -1), (38, 16384), (39, -1), (40, -1), (41, -1), (42, 4194304), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, 67108864), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {32, 34, 35, 38, 10, 43, 44, 45, 49, 50, 51, 26, 31}

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 19]
 solution : [0, 2]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 19]
 solution : [0, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 19]
 solution : [0, 2]


Solution : [0, 2] has cost 10.


Decide in level 12 among pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 19 with phase True at level 12

After decision at level 12
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 2, 19]


New level: 13
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 2, 19]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 2, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {5, 14, 20, 21, 24}

After reduction : 
 pending  : [25, 42, 15, 13, 12]
 solution : [0, 2, 19]


Before reduction : 
 pending  : [25, 42, 15, 13, 12]
 solution : [0, 2, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12]
 solution : [0, 2, 19]


Solution : [0, 2, 19] has cost 19.


Before backtrack at level 13
 pending : [25, 42, 15, 13, 12]
 solution : [0, 2, 19]

After backtrack at level 13
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 2, 19]


Invert decision for 19 at level 12


New level: 13
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 2]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 2]


Solution : [0, 2] has cost 10.


Decide in level 13 among pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 2, 12]


New level: 14
 pending : [25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 2, 12]


Before reduction : 
 pending  : [25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 2, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {13, 14, 15}

After reduction : 
 pending  : [25, 42, 5, 21, 24, 20]
 solution : [0, 2, 12]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 20]
 solution : [0, 2, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 20]
 solution : [0, 2, 12]


Solution : [0, 2, 12] has cost 17.


Before backtrack at level 14
 pending : [25, 42, 5, 21, 24, 20]
 solution : [0, 2, 12]

After backtrack at level 14
 pending : [25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 2, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 2]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 2]


Solution : [0, 2] has cost 10.


Decide in level 14 among pending : [25, 42, 5, 21, 24, 20, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 2, 20]


New level: 15
 pending : [25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 2, 20]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 2, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {24, 21, 5, 14}

After reduction : 
 pending  : [25, 42, 15, 13]
 solution : [0, 2, 20]


Before reduction : 
 pending  : [25, 42, 15, 13]
 solution : [0, 2, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 42, 15, 13]
 solution : [0, 2, 20]


Solution : [0, 2, 20] has cost 19.


Before backtrack at level 15
 pending : [25, 42, 15, 13]
 solution : [0, 2, 20]

After backtrack at level 15
 pending : [25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 2, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 2]


Before reduction : 
 pending  : [25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 2]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 2]


Solution : [0, 2] has cost 10.


Decide in level 15 among pending : [25, 42, 15, 13, 5, 21, 24, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 15

After decision at level 15
 pending : [25, 42, 15, 5, 21, 24, 14]
 solution : [0, 2, 13]


New level: 16
 pending : [25, 42, 15, 5, 21, 24, 14]
 solution : [0, 2, 13]


Before reduction : 
 pending  : [25, 42, 15, 5, 21, 24, 14]
 solution : [0, 2, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : {14, 15}

After reduction : 
 pending  : [25, 42, 5, 21, 24]
 solution : [0, 2, 13]


Before reduction : 
 pending  : [25, 42, 5, 21, 24]
 solution : [0, 2, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24]
 solution : [0, 2, 13]


Solution : [0, 2, 13] has cost 17.


Before backtrack at level 16
 pending : [25, 42, 5, 21, 24]
 solution : [0, 2, 13]

After backtrack at level 16
 pending : [25, 42, 5, 21, 24, 15, 14]
 solution : [0, 2, 13]


Invert decision for 13 at level 15


New level: 16
 pending : [25, 42, 5, 21, 24, 15, 14]
 solution : [0, 2]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 15, 14]
 solution : [0, 2]

Essensial at level 16 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14]
 solution : [0, 2, 15]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14]
 solution : [0, 2, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14]
 solution : [0, 2, 15]


Solution : [0, 2, 15] has cost 17.


Before backtrack at level 16
 pending : [25, 42, 5, 21, 24, 14]
 solution : [0, 2, 15]

After backtrack at level 16
 pending : [25, 42, 5, 21, 24, 14, 15]
 solution : [0, 2]


Before backtrack at level 15
 pending : [25, 42, 5, 21, 24, 14, 15]
 solution : [0, 2]

After backtrack at level 15
 pending : [25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 2]


Before backtrack at level 14
 pending : [25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 2]

After backtrack at level 14
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 2]


Before backtrack at level 13
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 2]

After backtrack at level 13
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 2]


Before backtrack at level 12
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 2]

After backtrack at level 12
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 19]
 solution : [0, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 19]
 solution : [0]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 26, 32, 34, 19]
 solution : [0]

Essensial at level 12 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {32, 34, 35, 38, 10, 43, 44, 45, 49, 50, 51, 31}

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 26]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, 0), (33, -1), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, 0), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]
 solution : [0, 26]


Solution : [0, 26] has cost 13.


Decide in level 12 among pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 19 with phase True at level 12

After decision at level 12
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 26, 19]


New level: 13
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 26, 19]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 26, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 33554432), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {5, 14, 20, 21, 24}

After reduction : 
 pending  : [25, 42, 15, 13, 12]
 solution : [0, 26, 19]


Before reduction : 
 pending  : [25, 42, 15, 13, 12]
 solution : [0, 26, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12]
 solution : [0, 26, 19]


Solution : [0, 26, 19] has cost 22.


Before backtrack at level 13
 pending : [25, 42, 15, 13, 12]
 solution : [0, 26, 19]

After backtrack at level 13
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 26, 19]


Invert decision for 19 at level 12


New level: 13
 pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 26]


Before reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]
 solution : [0, 26]


Solution : [0, 26] has cost 13.


Decide in level 13 among pending : [25, 42, 15, 13, 12, 5, 21, 24, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 26, 12]


New level: 14
 pending : [25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 26, 12]


Before reduction : 
 pending  : [25, 42, 15, 13, 5, 21, 24, 14, 20]
 solution : [0, 26, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {13, 14, 15}

After reduction : 
 pending  : [25, 42, 5, 21, 24, 20]
 solution : [0, 26, 12]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 20]
 solution : [0, 26, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 20]
 solution : [0, 26, 12]


Solution : [0, 26, 12] has cost 20.


Before backtrack at level 14
 pending : [25, 42, 5, 21, 24, 20]
 solution : [0, 26, 12]

After backtrack at level 14
 pending : [25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 26, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 26]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 20, 15, 13, 14]
 solution : [0, 26]


Solution : [0, 26] has cost 13.


Decide in level 14 among pending : [25, 42, 5, 21, 24, 20, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 26, 20]


New level: 15
 pending : [25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 26, 20]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 15, 13, 14]
 solution : [0, 26, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {24, 21, 5, 14}

After reduction : 
 pending  : [25, 42, 15, 13]
 solution : [0, 26, 20]


Before reduction : 
 pending  : [25, 42, 15, 13]
 solution : [0, 26, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 42, 15, 13]
 solution : [0, 26, 20]


Solution : [0, 26, 20] has cost 22.


Before backtrack at level 15
 pending : [25, 42, 15, 13]
 solution : [0, 26, 20]

After backtrack at level 15
 pending : [25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 26, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 26]


Before reduction : 
 pending  : [25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 26]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2048), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 42, 15, 13, 5, 21, 24, 14]
 solution : [0, 26]


Solution : [0, 26] has cost 13.


Decide in level 15 among pending : [25, 42, 15, 13, 5, 21, 24, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 15

After decision at level 15
 pending : [25, 42, 15, 5, 21, 24, 14]
 solution : [0, 26, 13]


New level: 16
 pending : [25, 42, 15, 5, 21, 24, 14]
 solution : [0, 26, 13]


Before reduction : 
 pending  : [25, 42, 15, 5, 21, 24, 14]
 solution : [0, 26, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : {14, 15}

After reduction : 
 pending  : [25, 42, 5, 21, 24]
 solution : [0, 26, 13]


Before reduction : 
 pending  : [25, 42, 5, 21, 24]
 solution : [0, 26, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24]
 solution : [0, 26, 13]


Solution : [0, 26, 13] has cost 20.


Before backtrack at level 16
 pending : [25, 42, 5, 21, 24]
 solution : [0, 26, 13]

After backtrack at level 16
 pending : [25, 42, 5, 21, 24, 15, 14]
 solution : [0, 26, 13]


Invert decision for 13 at level 15


New level: 16
 pending : [25, 42, 5, 21, 24, 15, 14]
 solution : [0, 26]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 15, 14]
 solution : [0, 26]

Essensial at level 16 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 131072), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 524288), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14]
 solution : [0, 26, 15]


Before reduction : 
 pending  : [25, 42, 5, 21, 24, 14]
 solution : [0, 26, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 262144), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2097152), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 42, 5, 21, 24, 14]
 solution : [0, 26, 15]


Solution : [0, 26, 15] has cost 20.


Before backtrack at level 16
 pending : [25, 42, 5, 21, 24, 14]
 solution : [0, 26, 15]

After backtrack at level 16
 pending : [25, 42, 5, 21, 24, 14, 15]
 solution : [0, 26]


Before backtrack at level 15
 pending : [25, 42, 5, 21, 24, 14, 15]
 solution : [0, 26]

After backtrack at level 15
 pending : [25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 26]


Before backtrack at level 14
 pending : [25, 42, 5, 21, 24, 14, 15, 13]
 solution : [0, 26]

After backtrack at level 14
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 26]


Before backtrack at level 13
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20]
 solution : [0, 26]

After backtrack at level 13
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 26]


Before backtrack at level 12
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12]
 solution : [0, 26]

After backtrack at level 12
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19]
 solution : [0]


Before backtrack at level 11
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19]
 solution : [0]

After backtrack at level 11
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2]
 solution : [0]


Before backtrack at level 10
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2]
 solution : [0]

After backtrack at level 10
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40]
 solution : [0]


Before backtrack at level 9
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40]
 solution : [0]

After backtrack at level 9
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28]
 solution : [0]


Before backtrack at level 8
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28]
 solution : [0]

After backtrack at level 8
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23]
 solution : [0]


Before backtrack at level 7
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23]
 solution : [0]

After backtrack at level 7
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23, 41]
 solution : [0]


Before backtrack at level 6
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23, 41]
 solution : [0]

After backtrack at level 6
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23, 41, 22]
 solution : [0]


Before backtrack at level 5
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23, 41, 22]
 solution : [0]

After backtrack at level 5
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23, 41, 22, 37]
 solution : [0]


Before backtrack at level 4
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23, 41, 22, 37]
 solution : [0]

After backtrack at level 4
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23, 41, 22, 37, 30]
 solution : [0]


Before backtrack at level 3
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23, 41, 22, 37, 30]
 solution : [0]

After backtrack at level 3
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23, 41, 22, 37, 30, 29]
 solution : [0]


Before backtrack at level 2
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23, 41, 22, 37, 30, 29]
 solution : [0]

After backtrack at level 2
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23, 41, 22, 37, 30, 29, 6]
 solution : [0]


Before backtrack at level 1
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23, 41, 22, 37, 30, 29, 6]
 solution : [0]

After backtrack at level 1
 pending : [25, 42, 5, 21, 24, 14, 15, 13, 20, 12, 26, 10, 31, 35, 38, 43, 44, 45, 49, 50, 51, 32, 34, 19, 2, 40, 28, 23, 41, 22, 37, 30, 29, 6, 4]
 solution : [0]


=========================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=========================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 14

[MIN NOTE]: maximum branch and bound depth: 16

[MIN NOTE]: number of definitions: 2

invariant [def_didNotPromise] forall A. didNotPromise(A) = (forall P. ~promise(A,P)) # definition, qcost: 4

invariant [def_chosenAt] forall Q,P. chosenAt(Q,P) = (forall A. member(A,Q) -> promise(A,P)) # definition, qcost: 6

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 29, 2]

[MIN NOTE]: solution length: 3

invariant [invar_0] forall ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_29] forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0)) # qcost: 4

invariant [invar_2] forall ACCEPTOR0,PROPOSER0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) # qcost: 4

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 24




[QRM NOTE]: Time elapsed since start: 9.809 seconds

[QRM NOTE]: Time elapsed since last: 1.468 seconds

[QRM NOTE]: Peak memory: 3240017 bytes


=============================================

	[IVY_CHECK] Ivy Check for Rmin

=============================================


==============================================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy]

==============================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_0
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_29
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_0 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_29 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_0 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_29 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_0 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_29 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_0 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_29 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 11.441 seconds

[QRM NOTE]: Time elapsed since last: 1.632 seconds

[QRM NOTE]: Peak memory: 2240898 bytes


**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************

[QRM RESULT]: PASS

