
***************************************************************************

	[QRM]: ivybench/sym_quorum/ivy/toy_consensus_forall.ivy

***************************************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


===============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/toy_consensus_forall.ivy: node=5,value=3]

===============================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 33

[FW NOTE]: number of interpreted atoms (e.g. member,le): 50

[FW NOTE]: symmetric group order: 720

[FW NOTE]: number of branching actions: 45

ivy_to_cpp target=qrm toy_consensus_forall.node_5_value_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o toy_consensus_forall.node_5_value_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 toy_consensus_forall.node_5_value_3.finite.cpp toy_consensus_forall.node_5_value_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared toy_consensus_forall.node_5_value_3.finite.o toy_consensus_forall.node_5_value_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.527 seconds

[QRM NOTE]: Time elapsed since last: 7.527 seconds

[QRM NOTE]: Peak memory: 1265183 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 6

[FW NOTE]: number of total reachable states:        10720

[FW NOTE]: number of dfs representative states:     53

[FW NOTE]: number of dfs non-representative states: 10667


======================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/toy_consensus_forall.ivy: node=5,value=3]

======================================================================================================================

sort: node=['node0', 'node1', 'node2', 'node3', 'node4']
sort: value=['value0', 'value1', 'value2']
sort: quorum=['quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4']
predicate: member('node', 'quorum')
predicate: vote('node', 'value')
predicate: voting_quorum=('quorum',)
predicate: voted('node',)
predicate: decided('value',)
interpreted atoms: {'member(node0,quorum__node0_node1_node2)': '1', 'member(node0,quorum__node0_node1_node3)': '1', 'member(node0,quorum__node0_node1_node4)': '1', 'member(node0,quorum__node0_node2_node3)': '1', 'member(node0,quorum__node0_node2_node4)': '1', 'member(node0,quorum__node0_node3_node4)': '1', 'member(node0,quorum__node1_node2_node3)': '0', 'member(node0,quorum__node1_node2_node4)': '0', 'member(node0,quorum__node1_node3_node4)': '0', 'member(node0,quorum__node2_node3_node4)': '0', 'member(node1,quorum__node0_node1_node2)': '1', 'member(node1,quorum__node0_node1_node3)': '1', 'member(node1,quorum__node0_node1_node4)': '1', 'member(node1,quorum__node0_node2_node3)': '0', 'member(node1,quorum__node0_node2_node4)': '0', 'member(node1,quorum__node0_node3_node4)': '0', 'member(node1,quorum__node1_node2_node3)': '1', 'member(node1,quorum__node1_node2_node4)': '1', 'member(node1,quorum__node1_node3_node4)': '1', 'member(node1,quorum__node2_node3_node4)': '0', 'member(node2,quorum__node0_node1_node2)': '1', 'member(node2,quorum__node0_node1_node3)': '0', 'member(node2,quorum__node0_node1_node4)': '0', 'member(node2,quorum__node0_node2_node3)': '1', 'member(node2,quorum__node0_node2_node4)': '1', 'member(node2,quorum__node0_node3_node4)': '0', 'member(node2,quorum__node1_node2_node3)': '1', 'member(node2,quorum__node1_node2_node4)': '1', 'member(node2,quorum__node1_node3_node4)': '0', 'member(node2,quorum__node2_node3_node4)': '1', 'member(node3,quorum__node0_node1_node2)': '0', 'member(node3,quorum__node0_node1_node3)': '1', 'member(node3,quorum__node0_node1_node4)': '0', 'member(node3,quorum__node0_node2_node3)': '1', 'member(node3,quorum__node0_node2_node4)': '0', 'member(node3,quorum__node0_node3_node4)': '1', 'member(node3,quorum__node1_node2_node3)': '1', 'member(node3,quorum__node1_node2_node4)': '0', 'member(node3,quorum__node1_node3_node4)': '1', 'member(node3,quorum__node2_node3_node4)': '1', 'member(node4,quorum__node0_node1_node2)': '0', 'member(node4,quorum__node0_node1_node3)': '0', 'member(node4,quorum__node0_node1_node4)': '1', 'member(node4,quorum__node0_node2_node3)': '0', 'member(node4,quorum__node0_node2_node4)': '1', 'member(node4,quorum__node0_node3_node4)': '1', 'member(node4,quorum__node1_node2_node3)': '0', 'member(node4,quorum__node1_node2_node4)': '1', 'member(node4,quorum__node1_node3_node4)': '1', 'member(node4,quorum__node2_node3_node4)': '1'}
state atoms: ['decided(value0)', 'decided(value1)', 'decided(value2)', 'vote(node0,value0)', 'vote(node0,value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node1,value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node2,value1)', 'vote(node2,value2)', 'vote(node3,value0)', 'vote(node3,value1)', 'vote(node3,value2)', 'vote(node4,value0)', 'vote(node4,value1)', 'vote(node4,value2)', 'voted(node0)', 'voted(node1)', 'voted(node2)', 'voted(node3)', 'voted(node4)', '(voting_quorum=quorum__node0_node1_node2)', '(voting_quorum=quorum__node0_node1_node3)', '(voting_quorum=quorum__node0_node1_node4)', '(voting_quorum=quorum__node0_node2_node3)', '(voting_quorum=quorum__node0_node2_node4)', '(voting_quorum=quorum__node0_node3_node4)', '(voting_quorum=quorum__node1_node2_node3)', '(voting_quorum=quorum__node1_node2_node4)', '(voting_quorum=quorum__node1_node3_node4)', '(voting_quorum=quorum__node2_node3_node4)']
representative states : 2235185384221879, 38048644837410172087, 335505770725697219767, 2701440309767395699895, 21600003512493264956599, 172734160819897018707127, 1381659980434526193413303, 172771054308044437810359, 1381696881803972960414903, 1230525806238623837023415, 21636897000640684059831, 173066202213223790636215, 1381992597162705361923255, 173139989189518628842679, 1382066384139000200129719, 1230562707608070604025015, 1211627116935108401392823, 2738477913102890658999, 21636951043836212505783, 172771062189343785708727, 173066205590923511164087, 173139992567218349370551, 21932062920218546367671, 175501173556853358292151, 22005849896513384574135, 175501180312252799347895, 2701298446379133529271, 21599986623994662317239, 21636880112142081420471, 2738191934526552632503, 21932028017321434246327, 22005814993616272452791, 372399258873116322999, 2738333797914814803127, 21932044905820036885687, 173066777548076187217079, 175501172430953451449527, 22005831882114875092151, 3107268679389005835447, 22006390328468669033655, 173140564524371025423543, 2738198689925993688247, 21636887993441429318839, 22005818371315992980663, 3107126816000743664823, 335502393025976691895, 2701297320479226686647, 2738190808626645789879, 372395881173395795127, 3107125690100836822199, 38056526136758070455, 336077727878373272759, 372971216025792375991


=== State Orbit 0 =====================
size : 10
repr state: 000000000000000000000000000010000
lex min decimal: 2235185384221879
states:
000000000000000000000000010000000
000000000000000000000000000000010
000000000000000000000001000000000
000000000000000000000000000001000
000000000000000000000000000100000
000000000000000000000000000010000
000000000000000000000000100000000
000000000000000000000000001000000
000000000000000000000000000000100
000000000000000000000000000000001




=== State Orbit 1 =====================
size : 90
repr state: 000100000000000000100000000010000
lex min decimal: 38048644837410172087
states:
000001000000000000100000001000000
000000100000000000010001000000000
000000000000001000000100100000000
000000100000000000010000000000010
000000001000000000010000100000000
000000010000000000010000100000000
000000000000000100000010000000010
000000000000001000000100000000010
000001000000000000100001000000000
000000100000000000010000000001000
000010000000000000100001000000000
000100000000000000100000100000000
000000000000100000000100001000000
000000000001000000001000001000000
000000001000000000010001000000000
000000000000000010000010000000100
000100000000000000100000001000000
000001000000000000100000010000000
000000000100000000001000001000000
000000000000000001000010000010000
000000000000000001000010000000001
000010000000000000100000010000000
000000001000000000010000000001000
000000000001000000001001000000000
000000000000000100000010010000000
000100000000000000100000000100000
000010000000000000100000000010000
000000000000000001000010000000100
000000000000000001000010010000000
000000000010000000001000000100000
000000000000000100000010000010000
000000000010000000001001000000000
000001000000000000100000100000000
000000000000010000000100001000000
000000000100000000001000000000001
000000000000001000000100001000000
000000000001000000001000000000001
000010000000000000100000001000000
000000000010000000001000000001000
000000000000010000000100100000000
000000000000000010000010000100000
000000000010000000001000000000100
000000000000100000000100000001000
000000000000000001000010000000010
000000000000100000000100100000000
000000000000000010000010000000001
000000000000000001000010000100000
000000000001000000001000000000100
000000000100000000001000000001000
000000000000000010000010000000010
000000000000010000000100000000010
000000000100000000001001000000000
000000000001000000001000000100000
000000010000000000010000000000100
000000001000000000010000010000000
000000000000010000000100000000001
000000010000000000010000010000000
000000100000000000010000010000000
000010000000000000100000100000000
000000000100000000001000000100000
000000000000001000000100000001000
000000000010000000001000001000000
000001000000000000100000000010000
000000000001000000001000000001000
000100000000000000100001000000000
000000010000000000010000000000010
000000000000010000000100000001000
000000000000000100000010000000100
000000000000001000000100000000001
000100000000000000100000010000000
000000001000000000010000000000010
000000100000000000010000100000000
000000000000001000000100000010000
000000000000000010000010010000000
000000000010000000001000000000001
000000000000100000000100000000001
000000000000010000000100000010000
000000000000000100000010000100000
000000100000000000010000000000100
000000000000000100000010000000001
000001000000000000100000000100000
000000010000000000010001000000000
000000000000000010000010000010000
000000001000000000010000000000100
000000000000100000000100000010000
000100000000000000100000000010000
000010000000000000100000000100000
000000000000100000000100000000010
000000000100000000001000000000100
000000010000000000010000000001000




=== State Orbit 2 =====================
size : 180
repr state: 000100100000000000110000000010000
lex min decimal: 335505770725697219767
states:
000010000000010000100101000000000
000100000000000100100011000000000
000010000010000000101000000010000
000000000010000010001010000000010
000100100000000000110000000000010
000010010000000000110000000000100
000001000000001000100100000100000
000000001000001000010100000000001
000100100000000000110000000010000
000100000000100000100100000100000
000000010010000000011000001000000
000001000000001000100100000001000
000000000000100100000110000001000
000100000000000100100010000000001
000000000001001000001100000000100
000000000001000001001010010000000
000000001000001000010100000000100
000000000010010000001100000100000
000100000000000100100010000000100
000000010000010000010100000000100
000010010000000000110000000001000
000000100000000100010010000010000
000000000100000100001010000001000
000001000000000001100011000000000
000001001000000000110000000000100
000010000000000010100010100000000
000010010000000000110000000010000
000001001000000000110000000000010
000000000001000001001011000000000
000010000000000010100010000000001
000000001001000000011000001000000
000000100100000000011000000000001
000000100000100000010100001000000
000000010000000010010010100000000
000000000000010010000110000000100
000000001000000001010010000000001
000010000000000010100010000000010
000000000100100000001100000000100
000000000100000100001011000000000
000100000000100000100100000000010
000010000000000010100011000000000
000100000000100000100101000000000
000000100000100000010100000000100
000000100100000000011000000100000
000000000000100100000110010000000
000000000000100100000110000000100
000000000010000010001010010000000
000100000100000000101000000001000
000000000100100000001100000100000
000100000000000100100010100000000
000000001001000000011000100000000
000000000000100100000110000100000
000010000010000000101000100000000
000000001000000001010010000001000
000000000000001001000110001000000
000010000010000000101000000000001
000000000100100000001100000010000
000000001001000000011000000000010
000100000000100000100100010000000
000001000001000000101000010000000
000000010010000000011000100000000
000001000000000001100010000000010
000000010000000010010010000010000
000010000000010000100100000000010
000000000010000010001011000000000
000001000000001000100100010000000
000000010000010000010100000010000
000010000000010000100100010000000
000000001000001000010100000010000
000000000100000100001010010000000
000000010000010000010101000000000
000010000010000000101000000001000
000100100000000000110000000100000
000010010000000000110000001000000
000000000010010000001100000000010
000000000000001001000110000001000
000000000001001000001100000100000
000000000100000100001010000000010
000000000100000100001010000010000
000000000000010010000110001000000
000001001000000000110000001000000
000100000000100000100100000000001
000000100000000100010010000001000
000000000000010010000110010000000
000000001000000001010010000100000
000010000010000000101000010000000
000000001000001000010100001000000
000000000001001000001100100000000
000000000000001001000110000000100
000001000001000000101000000010000
000000100100000000011000000000010
000000100000000100010011000000000
000000000001000001001010001000000
000001000001000000101000100000000
000001000001000000101000000001000
000001000000001000100100000000001
000000100000100000010100000010000
000000010000000010010010000100000
000001000000000001100010001000000
000000001001000000011000000000001
000000010010000000011000010000000
000000000000010010000110000001000
000001001000000000110000000010000
000000010010000000011000000000001
000000000010010000001100000000100
000000000100000100001010001000000
000000000001000001001010000001000
000000000000001001000110010000000
000000000001001000001100000010000
000000100000100000010100000000001
000001000000000001100010100000000
000000001000000001010010100000000
000000010000010000010100001000000
000001000000001000100100000000010
000000100000000100010010000100000
000010000000000010100010001000000
000000010000010000010100000000001
000000001001000000011000000100000
000001000000000001100010000000100
000000010000000010010011000000000
000000100100000000011000010000000
000000100000000100010010100000000
000000000001000001001010000000010
000010010000000000110000000000010
000000000010000010001010000010000
000000000100100000001101000000000
000000000010000010001010000001000
000010000000000010100010000000100
000010000010000000101000000000100
000100000000100000100100000001000
000010000000010000100100000100000
000000000010000010001010001000000
000001000000000001100010000000001
000100000100000000101000100000000
000000000000100100000110001000000
000100000100000000101000010000000
000000000010010000001101000000000
000000000001001000001101000000000
000000000001000001001010000010000
000010000000010000100100000001000
000000100000100000010101000000000
000000100000100000010100010000000
000100000100000000101000000000001
000000000001001000001100000000010
000100000000000100100010001000000
000100100000000000110000001000000
000000000100100000001100000000010
000000001000000001010010000010000
000000000000001001000110000100000
000000010000000010010010000000001
000000000100100000001100100000000
000000000010010000001100100000000
000000010000010000010100010000000
000000100100000000011000001000000
000100000100000000101000000000100
000000000010010000001100000010000
000000000000010010000110100000000
000000001000000001010011000000000
000000010000000010010010000001000
000010010000000000110000000100000
000001001000000000110000000001000
000100100000000000110000000001000
000001000000001000100101000000000
000100000100000000101000000010000
000000000000001001000110100000000
000000100000000100010010000000001
000010000000010000100100000000001
000000000000010010000110000100000
000000010010000000011000000100000
000001000001000000101000000000001
000001001000000000110000000100000
000000001000001000010100010000000
000000100100000000011000100000000
000000000000100100000110100000000
000000001001000000011000010000000
000000001000001000010101000000000
000001000001000000101000000000100
000100000000000100100010000000010
000000010010000000011000000000010
000100100000000000110000000000100




=== State Orbit 3 =====================
size : 90
repr state: 000100100100000000111000000010000
lex min decimal: 2701440309767395699895
states:
000100000100000100101010100000000
000000001001001000011100010000000
000000100100000100011010001000000
000001001001000000111000000000010
000100100000000100110010000000001
000001000001001000101100000000100
000001000000001001100110000001000
000100000100000100101010000000010
000010010000000010110010000000001
000001000000001001100111000000000
000000010010010000011100000100000
000010000000010010100110000001000
000001000001001000101100010000000
000000100000100100010111000000000
000000000100100100001110010000000
000010000010010000101100000000100
000001000001001000101100000000010
000000001001000001011010001000000
000000001001000001011010100000000
000000100100000100011010000010000
000000000001001001001110010000000
000010000010000010101010000000010
000000100100000100011010100000000
000100000000100100100111000000000
000100000100100000101100000000010
000000100100100000011100010000000
000100100000000100110010001000000
000000000010010010001110010000000
000000001000001001010110000100000
000010010000010000110100000100000
000100000100100000101100000000100
000001001000000001110010000000001
000010010000000010110010001000000
000001001001000000111000000000001
000000100100100000011100000100000
000001000001000001101010000000010
000100000000100100100110000001000
000100100000000100110010000001000
000100000100100000101100010000000
000001001000000001110010001000000
000100000000100100100110000000100
000010010010000000111000000000001
000100100000100000110100000000100
000001000001000001101010000001000
000000010010000010011010000010000
000100100100000000111000000000010
000010010000010000110100000000100
000010000010010000101100000000010
000100100000100000110100000000001
000000010010000010011010001000000
000010000000010010100111000000000
000001001000000001110010000001000
000001001000001000110100000000100
000000100100100000011100000010000
000000000100100100001110100000000
000000010000010010010111000000000
000010010010000000111000000000010
000000001001001000011100000100000
000000010010000010011010100000000
000000001000001001010110001000000
000000001001000001011010000010000
000000010010010000011100000010000
000000000001001001001110100000000
000001000000001001100110000000100
000000010000010010010110000100000
000010000000010010100110000000100
000100100100000000111000000010000
000000010000010010010110001000000
000000000100100100001111000000000
000000000010010010001111000000000
000010010000000010110010000001000
000010010000010000110100000000001
000100100100000000111000000000001
000001001000001000110100000100000
000001001001000000111000000010000
000000001000001001010111000000000
000000000001001001001111000000000
000000100000100100010110001000000
000000001001001000011100000010000
000100000100000100101010000001000
000010000010000010101010000001000
000001000001000001101010100000000
000000010010010000011100010000000
000010000010000010101010100000000
000010000010010000101100010000000
000010010010000000111000000010000
000100100000100000110100000100000
000001001000001000110100000000001
000000100000100100010110000100000
000000000010010010001110100000000




=== State Orbit 4 =====================
size : 90
repr state: 000100100100100000111100000010000
lex min decimal: 21600003512493264956599
states:
000010000010010010101110100000000
000000010010010010011111000000000
000010010000010010110110001000000
000001001000001001110110000100000
000000010010010010011110100000000
000100000100100100101110100000000
000100100100000100111010000000001
000001000001001001101110000000010
000100100100000100111010001000000
000100100000100100110110000000001
000100100100100000111100000010000
000001001000001001110110000001000
000000001001001001011110100000000
000000001001001001011110000010000
000000100100100100011110100000000
000100100100100000111100000000100
000100000100100100101110000000010
000000010010010010011110001000000
000001000001001001101110000001000
000000001001001001011110000100000
000010000010010010101110000000100
000000010010010010011110000100000
000000001001001001011110010000000
000000010010010010011110000010000
000010010010010000111100000000010
000001001001001000111100000010000
000010010010000010111010001000000
000001001001001000111100000000010
000001001001000001111010000000010
000010010000010010110110000000100
000100100100100000111100000000010
000010010010010000111100000010000
000010010000010010110110000100000
000100100000100100110111000000000
000000100100100100011110001000000
000010010010010000111100010000000
000010010010000010111010000000010
000000010010010010011110010000000
000010000010010010101111000000000
000010010000010010110111000000000
000001001001000001111010100000000
000100100100000100111010100000000
000001001001000001111010000000001
000000100100100100011111000000000
000010010000010010110110000001000
000001001000001001110110000000001
000100100100100000111100010000000
000010000010010010101110010000000
000001000001001001101110100000000
000001001000001001110111000000000
000100100000100100110110001000000
000001000001001001101110000000100
000000100100100100011110000010000
000000001001001001011111000000000
000010000010010010101110000000010
000001000001001001101110010000000
000010010010000010111010000000001
000010010010000010111010100000000
000100100100000100111010000000010
000100000100100100101110000001000
000000100100100100011110000100000
000010010010010000111100000000100
000010010010000010111010000001000
000010010000010010110110000000001
000001001001000001111010000001000
000100100100100000111100000100000
000001001001001000111100000000001
000001001001001000111100010000000
000001001001000001111010000010000
000100000100100100101111000000000
000100100000100100110110000100000
000000100100100100011110010000000
000010010010010000111100000000001
000001001000001001110110000000100
000001001001001000111100000100000
000001001000001001110110001000000
000100100100000100111010000010000
000001001001001000111100000000100
000000001001001001011110001000000
000010010010000010111010000010000
000001001001000001111010001000000
000100100100100000111100000000001
000100100100000100111010000001000
000100100000100100110110000001000
000100000100100100101110010000000
000010000010010010101110000001000
000100100000100100110110000000100
000001000001001001101111000000000
000010010010010000111100000100000
000100000100100100101110000000100




=== State Orbit 5 =====================
size : 30
repr state: 000100100100100100111110000010000
lex min decimal: 172734160819897018707127
states:
000001001001001001111111000000000
000010010010010010111110000000100
000100100100100100111110100000000
000001001001001001111110000000001
000001001001001001111110100000000
000001001001001001111110000100000
000001001001001001111110010000000
000010010010010010111110000000010
000001001001001001111110001000000
000010010010010010111110000000001
000010010010010010111110000010000
000001001001001001111110000010000
000010010010010010111110000001000
000100100100100100111110000100000
000010010010010010111110100000000
000001001001001001111110000001000
000100100100100100111110001000000
000010010010010010111110000100000
000001001001001001111110000000100
000100100100100100111111000000000
000100100100100100111110000000001
000100100100100100111110000000100
000010010010010010111110001000000
000100100100100100111110010000000
000100100100100100111110000001000
000010010010010010111110010000000
000001001001001001111110000000010
000100100100100100111110000000010
000010010010010010111111000000000
000100100100100100111110000010000




=== State Orbit 6 =====================
size : 30
repr state: 100100100100100100111111000000000
lex min decimal: 1381659980434526193413303
states:
100100100100100100111110000000001
001001001001001001111110000100000
010010010010010010111110000001000
100100100100100100111110010000000
100100100100100100111110100000000
100100100100100100111110000100000
010010010010010010111110000010000
010010010010010010111110000000100
010010010010010010111110000000010
001001001001001001111110000000010
010010010010010010111110001000000
010010010010010010111110000000001
010010010010010010111110010000000
100100100100100100111110000000010
001001001001001001111110000000001
010010010010010010111111000000000
010010010010010010111110000100000
001001001001001001111110100000000
100100100100100100111110000001000
001001001001001001111110010000000
010010010010010010111110100000000
001001001001001001111110000000100
100100100100100100111110000010000
100100100100100100111111000000000
001001001001001001111110000010000
001001001001001001111110000001000
100100100100100100111110000000100
100100100100100100111110001000000
001001001001001001111111000000000
001001001001001001111110001000000




=== State Orbit 7 =====================
size : 180
repr state: 000100100100100010111110000010000
lex min decimal: 172771054308044437810359
states:
000100100100010100111110000000010
000001010010010010111110000010000
000010001010010010111111000000000
000100100001100100111110000100000
000010010010010100111110000100000
000100100100100010111110010000000
000001100001001001111111000000000
000001001001010001111110000000001
000100100010100100111111000000000
000100100100100001111110000010000
000001100001001001111110000000010
000100001100100100111110100000000
000100001001001001111110010000000
000100100100100010111110000010000
000100010100100100111110000000100
000100100100100010111110000100000
000100100100010100111110001000000
000010010100010010111110000100000
000010010100010010111110000000001
000001001001001010111110000100000
000001001001100001111110000010000
000001001010001001111110000000100
000010100100100100111110000100000
000100100100100001111110010000000
000001001001001010111110000010000
000010010010100010111110001000000
000001001001001100111110010000000
000100001100100100111110000000100
000010010010010001111110000000001
000010010010001010111110000000001
000010010010010001111110000010000
000001001001010001111110000000010
000001100001001001111110000001000
000010100100100100111110000010000
000010010010010100111110000010000
000010010010010100111110010000000
000100001001001001111110001000000
000001100100100100111110001000000
000010001001001001111110100000000
000100100010100100111110000000100
000010100100100100111111000000000
000001001001100001111110000000010
000100010010010010111110000010000
000001001010001001111110000100000
000001010010010010111110000100000
000010100100100100111110100000000
000010001010010010111110000001000
000100010100100100111110100000000
000100001001001001111110000100000
000001001010001001111110000001000
000001001001001100111110000010000
000001001100001001111110000100000
000001010001001001111110000001000
000100010010010010111111000000000
000001010010010010111110001000000
000010010010001010111110000001000
000001001001001010111110010000000
000100100100100001111110000000100
000001001001010001111110000001000
000001010010010010111110010000000
000010100100100100111110010000000
000100010010010010111110001000000
000001001100001001111110000001000
000100100010100100111110000000001
000001100100100100111110000010000
000100001001001001111110000010000
000010010100010010111110001000000
000010010001010010111110000001000
000010010100010010111110000001000
000001001010001001111110000000001
000010100100100100111110001000000
000001001001001010111110000000010
000010010100010010111110000000100
000010010010001010111110000010000
000100100100100001111110000100000
000010010001010010111111000000000
000100001001001001111110100000000
000100001001001001111111000000000
000100100001100100111110000001000
000010010010010100111110000000001
000100100100100010111110000000010
000001010001001001111110000000010
000010001001001001111111000000000
000010010010010001111110000000010
000010010010100010111110100000000
000100100100001100111110000000010
000001010001001001111110000000100
000100010100100100111110010000000
000001001001001010111110000000001
000010010010001010111110000000010
000001010001001001111110100000000
000010010010010001111110000000100
000010100010010010111110000000100
000001001001010001111110100000000
000100100100001100111110001000000
000100010100100100111111000000000
000001100100100100111110010000000
000100010010010010111110010000000
000001100100100100111111000000000
000100001100100100111110000000010
000100100100010100111110000010000
000010001010010010111110010000000
000010100010010010111110010000000
000001001001001100111110000000001
000010100010010010111110100000000
000001001001100001111110000001000
000100100100001100111110000010000
000001100100100100111110100000000
000100100100001100111110000000001
000100100100100010111110000000100
000100100100010100111110000001000
000001001001100001111110001000000
000001001001001100111110000000100
000010010010010100111110000000100
000100100100001100111110000001000
000100010100100100111110000001000
000100010010010010111110100000000
000001001100001001111110000000001
000010100010010010111110000001000
000010010010100010111110000001000
000010001010010010111110000000010
000010001010010010111110000000100
000001001001100001111110100000000
000001001001100001111110000000001
000100001100100100111110000001000
000001010001001001111111000000000
000010010010010001111110010000000
000001100001001001111110010000000
000010010010100010111110000000001
000010010010100010111110000010000
000100010010010010111110000100000
000100010100100100111110000000010
000001100100100100111110000100000
000100100001100100111111000000000
000010001001001001111110000100000
000100100100001100111110100000000
000010010010100010111110000000010
000001001100001001111110000000100
000001001001001010111110000000100
000100001100100100111110010000000
000001001001001100111110000100000
000010010100010010111111000000000
000001100001001001111110000000100
000100100100010100111110000000001
000001001010001001111111000000000
000100001100100100111111000000000
000100100001100100111110000000001
000001010010010010111111000000000
000001001010001001111110001000000
000010001001001001111110010000000
000100100010100100111110001000000
000100100001100100111110000000100
000010001010010010111110100000000
000001001001010001111110001000000
000100100100010100111110100000000
000001001100001001111111000000000
000001010010010010111110100000000
000001010001001001111110010000000
000010100010010010111111000000000
000001001100001001111110001000000
000100100010100100111110000001000
000010010001010010111110001000000
000001100001001001111110100000000
000010010001010010111110000100000
000010001001001001111110001000000
000100100010100100111110000100000
000100100100100001111110000000001
000100100100100010111110000000001
000010010001010010111110000000001
000010010010001010111110100000000
000010100010010010111110000000010
000001001001001100111110000000010
000010010010010001111110000100000
000010001001001001111110000010000
000100100001100100111110001000000
000010010010010100111110000000010
000100100100100001111110000000010
000010010010001010111110001000000
000001001001010001111110000010000
000010010001010010111110000000100




=== State Orbit 8 =====================
size : 120
repr state: 100100100100100010111111000000000
lex min decimal: 1381696881803972960414903
states:
100100100001100100111110100000000
100100001100100100111110000010000
100001100100100100111110000000010
010001010010010010111110000000010
010010010010100010111110000000100
010010010001010010111110010000000
100100100100100010111111000000000
001010001001001001111110000000010
100100100100100010111110000001000
100100100010100100111110100000000
001001001001100001111110010000000
100100100010100100111110000000010
001001100001001001111110000000001
010001010010010010111110000000100
001001010001001001111110000000001
010010010010100010111110010000000
100100100100010100111111000000000
100001100100100100111110000001000
100001100100100100111110000000001
001001001001010001111111000000000
100010100100100100111110000000001
010010010010010001111110000001000
010010001010010010111110001000000
010010100010010010111110000100000
100100100100001100111110000100000
010100010010010010111110000000100
100100100001100100111110010000000
001001001001001010111110000001000
001001001010001001111110010000000
010010010001010010111110000010000
001001001001100001111110000000100
010010010010100010111111000000000
001100001001001001111110000000100
010010010010010001111110001000000
001001001010001001111110000000010
001001010001001001111110000100000
001001001001001010111110001000000
010010001010010010111110000000001
001001001100001001111110010000000
100100010100100100111110000000001
001001001001001010111110100000000
100100100100100001111110000001000
010010010100010010111110100000000
001001100001001001111110000100000
100100100001100100111110000000010
001010001001001001111110000000001
010010100010010010111110001000000
001001001001100001111111000000000
001001010001001001111110000010000
010010010010001010111110010000000
100010100100100100111110000000010
001001001001001010111111000000000
001010001001001001111110000000100
010010001010010010111110000100000
001001001001001100111111000000000
010010010010001010111110000100000
100100100100100001111111000000000
001100001001001001111110000000001
010010001010010010111110000010000
001001001010001001111110000010000
001001100001001001111110001000000
100100001100100100111110000000001
010100010010010010111110000001000
100100010100100100111110000010000
001001010001001001111110001000000
001001001100001001111110100000000
001001001001010001111110010000000
001001100001001001111110000010000
010010010010100010111110000100000
100001100100100100111110000000100
100100100100001100111111000000000
010010010100010010111110000000010
001001001001001100111110001000000
001100001001001001111110000000010
010010010010001010111111000000000
010010010010001010111110000000100
010100010010010010111110000000010
010010010001010010111110100000000
100100100100100010111110001000000
100100100100001100111110000000100
100100100100001100111110010000000
100100100100010100111110000100000
100100010100100100111110001000000
010100010010010010111110000000001
010010010100010010111110000010000
100100100100010100111110000000100
010001010010010010111110000000001
100100001100100100111110000100000
001001001100001001111110000000010
010010010010010100111110100000000
001001001001010001111110000000100
010010010010010100111110000001000
001001001001001100111110000001000
100100100100100001111110001000000
100100100100100010111110100000000
100010100100100100111110000001000
100100001100100100111110001000000
010010100010010010111110000000001
001100001001001001111110000001000
100010100100100100111110000000100
010010010010010001111111000000000
010010010010010100111110001000000
001010001001001001111110000001000
100100100100010100111110010000000
010010010010010100111111000000000
010001010010010010111110000001000
001001001001001100111110100000000
010010100010010010111110000010000
010010010001010010111110000000010
100100010100100100111110000100000
010010010100010010111110010000000
100100100100100001111110100000000
001001001001010001111110000100000
001001001100001001111110000010000
100100100010100100111110010000000
010010010010010001111110100000000
100100100001100100111110000010000
100100100010100100111110000010000
001001001001100001111110000100000
001001001010001001111110100000000




=== State Orbit 9 =====================
size : 60
repr state: 100100100100100000111101000000000
lex min decimal: 1230525806238623837023415
states:
010010000010010010101110000010000
010010000010010010101110000000001
010000010010010010011110000000001
001001000001001001101110001000000
001001001000001001110110000000010
010010010000010010110110010000000
010000010010010010011110000000010
100100100000100100110110000010000
001001000001001001101110000010000
001001001001001000111100001000000
001000001001001001011110000000100
100100000100100100101110000000001
010010010000010010110110000010000
100100100100100000111100000001000
100100100000100100110110000000010
001000001001001001011110000000001
100100100100100000111100100000000
010010010000010010110110000000010
001001001000001001110110010000000
010010000010010010101110000100000
001001000001001001101110000000001
100100000100100100101110000100000
010010000010010010101110001000000
001001001001001000111100100000000
010010010000010010110110100000000
100000100100100100011110000000001
010000010010010010011110000000100
100000100100100100011110000000010
100100100100000100111010010000000
100100100100000100111011000000000
100100100000100100110110100000000
001001001000001001110110100000000
010010010010000010111011000000000
010010010010000010111010000100000
100100100100000100111010000000100
001000001001001001011110000001000
100100000100100100101110001000000
001001001001001000111100000001000
001001001000001001110110000010000
001001001001001000111101000000000
001001001001000001111010010000000
001001001001000001111011000000000
100100100100000100111010000100000
100100100000100100110110010000000
001001001001000001111010000100000
100000100100100100011110000001000
010010010010010000111100001000000
010010010010010000111100000001000
010010010010000010111010000000100
100000100100100100011110000000100
100100100100100000111101000000000
010010010010010000111100100000000
100100000100100100101110000010000
001000001001001001011110000000010
010000010010010010011110000001000
010010010010010000111101000000000
100100100100100000111100001000000
001001001001000001111010000000100
010010010010000010111010010000000
001001000001001001101110000100000




=== State Orbit 10 =====================
size : 360
repr state: 000100100100010000111100000010000
lex min decimal: 21636897000640684059831
states:
000001001010000001111010000001000
000000010001001001011110010000000
000010001000010010110110000000100
000001100000001001110111000000000
000000010010100010011110000010000
000100100100000010111010000000010
000100001001000001111010001000000
000001000010001001101110000000100
000010100100000100111010100000000
000010000100100100101111000000000
000100100010000100111010000000001
000100100010100000111100000100000
000001010000010010110111000000000
000010000001001001101111000000000
000010010001000010111010000000001
000010001001000001111010000010000
000000100100100001011110010000000
000000100010010010011110100000000
000001010000010010110110001000000
000100001000001001110110000100000
000010000010010001101110000000100
000010100010010000111100010000000
000100000010100100101110000001000
000100000100100001101110000000100
000001001010001000111100000000100
000001100100000100111010001000000
000001010000001001110111000000000
000100001001001000111100010000000
000000100100100010011110010000000
000000010010010001011110010000000
000100001100100000111100010000000
000000100001001001011111000000000
000010010001010000111100000000001
000010001010010000111100010000000
000010010010100000111100000000010
000000100010100100011111000000000
000001010001001000111100000000010
000001000100001001101110000000100
000001000010010010101110100000000
000000100010100100011110001000000
000000010010010100011110010000000
000000010100100100011110100000000
000001100100100000111100010000000
000100000010010010101110010000000
000100010000010010110111000000000
000000001001001100011110000100000
000001000001010001101110100000000
000010010000010100110110000000001
000010100100100000111100000010000
000001001100000001111010001000000
000001100000001001110110000001000
000000100100100001011110000100000
000010001000001001110111000000000
000000001001100001011110100000000
000100000100100010101110000000100
000100010100100000111100000000010
000000100010010010011110010000000
000000001010001001011110000100000
000001001000001100110110000000100
000100001000100100110110000001000
000000010100100100011110010000000
000000010010100010011110001000000
000000010100010010011110000100000
000000010001010010011111000000000
000010010000001010110110001000000
000000001010010010011111000000000
000100001100000100111010000000010
000001001001000010111010000000010
000001000001100001101110000000010
000001001000001010110110000100000
000001000100001001101111000000000
000001001000100001110110000000001
000100001100000100111010100000000
000010100100000100111010000010000
000000010010010100011110000010000
000000001001001010011110000100000
000100000001001001101110010000000
000100010000100100110111000000000
000100000010100100101111000000000
000010100010000010111010000001000
000100000001100100101111000000000
000100010000010010110110001000000
000010010000001010110110000001000
000100010000010010110110000100000
000001001000001010110110000000100
000001000001001100101110000000010
000100100100001000111100000000010
000000001001010001011110000010000
000100010100000100111010000000010
000000100100001100011110001000000
000001000001010001101110000000010
000001100100100000111100000100000
000001000010001001101111000000000
000010010010100000111100000010000
000010000001001001101110010000000
000100100000010100110110000001000
000001010001000001111010000001000
000100100000001100110110000000001
000001001100000001111010000001000
000100100010000100111010001000000
000100100000100010110110000000001
000000001001001010011110010000000
000100000001001001101111000000000
000000100001100100011111000000000
000010000100100100101110010000000
000010010000010100110110000100000
000010000010001010101110100000000
000001010001001000111100000000100
000000001100100100011111000000000
000100000001100100101110000000100
000001010000001001110110000001000
000000010010010100011110000100000
000001000100001001101110000001000
000100000100100010101110010000000
000010000001010010101111000000000
000010001010010000111100000000100
000100100100000001111010000010000
000000100001100100011110001000000
000001001100001000111100000000100
000001001010000001111010000000001
000000010100010010011111000000000
000000001100001001011111000000000
000100001000100100110111000000000
000001001001000100111010000000010
000100100000100001110110000000100
000010100010010000111100000000010
000010010000010001110110000000100
000001000100100100101110100000000
000010001001000001111010001000000
000010001000010010110110000001000
000100010010000010111010000010000
000000001001100001011110001000000
000010010010000100111010000000010
000001001000100001110110001000000
000001010010010000111100010000000
000000001001010001011110100000000
000100001001001000111100000100000
000100000010010010101110100000000
000001000001100001101110100000000
000010001010010000111100000000010
000010000001010010101110000000100
000100100001100000111100000100000
000010100000010010110111000000000
000000010100100100011111000000000
000001100100000100111010100000000
000010100000010010110110000000100
000001100100100000111100000010000
000000001100100100011110100000000
000010000010010001101110010000000
000000001100100100011110010000000
000100010000100100110110000001000
000100001001001000111100000010000
000001100000100100110111000000000
000010010100010000111100000100000
000010010001010000111100000000100
000010010010000100111010000000001
000001100001000001111010000000010
000010100010010000111100000000100
000001010010000010111010100000000
000100100100000010111010000000001
000001001000010001110110000001000
000010010001010000111100000100000
000100100000100010110110000100000
000010010010000001111010000010000
000010100000010010110110000001000
000001000001100001101110000001000
000000010001001001011110100000000
000000100001001001011110100000000
000000100100010100011110000010000
000000100001001001011110010000000
000010000001001001101110100000000
000010010000100010110110000001000
000000001001001100011110010000000
000010010100000010111010000001000
000010010010100000111100000000001
000100100000010100110110000000001
000100001000100100110110000000100
000010010100010000111100000000001
000001001001000010111010000000001
000001001100000001111010000000001
000001100001000001111010000001000
000001010010000010111010000010000
000000001001010001011110001000000
000010010000100010110110000000001
000100100100010000111100000000001
000100010000100100110110000000100
000001010000010010110110000100000
000010001010000010111010100000000
000000010010010001011110000100000
000001000100100100101110010000000
000010000010010100101110000000100
000100100010100000111100000000001
000000001100001001011110000100000
000001000010001001101110000001000
000010000010100010101110100000000
000001010010010000111100000010000
000001100000001001110110000000100
000010001000010010110111000000000
000000100100100010011110000100000
000100001000001001110111000000000
000000010001010010011110001000000
000100100000010100110110001000000
000100000100010100101110000000010
000000010010001010011110001000000
000100000100001100101110000000010
000001001000100001110110000001000
000010000010001010101110000000010
000001100001000001111010100000000
000100010100100000111100010000000
000001000100100100101111000000000
000010010001000010111010000001000
000100000001001001101110100000000
000000010010001010011110000010000
000010000100100100101110100000000
000001100000100100110110000100000
000001001100001000111100000000001
000010000010010100101110010000000
000100010100100000111100000000100
000010010010001000111100000010000
000100000100010100101110100000000
000000100100100001011110000010000
000100000100100001101110010000000
000001010010010000111100000100000
000010000010001010101110000001000
000010010000010001110110000100000
000001000001001010101110000000010
000100100001000100111010000001000
000100100100010000111100000000010
000010100000100100110111000000000
000010000010100010101110000000010
000000100100001100011110100000000
000010001001001000111100000010000
000000010010100010011110100000000
000010001000001001110110000100000
000100100100000001111010000000001
000010100100100000111100000100000
000010010010000001111010000000001
000100001001000001111010100000000
000001001001000010111010000010000
000100100100010000111100000010000
000100100100001000111100000000001
000001000001001100101110010000000
000100010100000100111010000001000
000100010010010000111100000100000
000100000010100100101110000000100
000100100100000010111010000010000
000010000100010010101110000000100
000001001001010000111100000000001
000010001001001000111100000100000
000001000001001010101110010000000
000100010010010000111100010000000
000100100000100001110110000100000
000001000001001100101110000000100
000100100010100000111100000000100
000000100100010100011110100000000
000001001001010000111100000000010
000001000010010010101111000000000
000001010001000001111010000000010
000010010010000100111010000010000
000100100001100000111100000000001
000100001100100000111100000000010
000100000001100100101110000001000
000010010000010100110110000000100
000010010010001000111100000000001
000001000001010001101110000001000
000100010010000010111010001000000
000010100100100000111100010000000
000000100001100100011110000100000
000100100000001100110110001000000
000001100100000100111010000010000
000100010100000100111010100000000
000010010010000001111010000000010
000100000010010010101111000000000
000000010100010010011110001000000
000000001010001001011111000000000
000001010001000001111010100000000
000100100000100001110110000000001
000010000100010010101110000001000
000001001010001000111100000100000
000001000001001010101110000000100
000100100001100000111100000000100
000010010001000010111010001000000
000010100000100100110110001000000
000010010100010000111100000000100
000000010001001001011111000000000
000010000010010001101110000000010
000100010010000010111010100000000
000000001001100001011110000010000
000100000100010100101110000001000
000001001001000100111010000010000
000000100100100010011110000010000
000001001001100000111100000000010
000001001001000100111010000000001
000010000100010010101111000000000
000010001010000010111010000001000
000001001010001000111100000000001
000010010000001010110110000000001
000001000010010010101110010000000
000100100010000100111010000001000
000010001000001001110110001000000
000000001001001100011110000010000
000001001000001010110110000000001
000010000010100010101110000001000
000100000100100010101110000000010
000010100000100100110110000100000
000001001100001000111100000100000
000000010001010010011110000100000
000010100010000010111010000000010
000001100001001000111100000000100
000000100100001100011110000010000
000100000100100001101110000000010
000010010000100010110110001000000
000001100001001000111100010000000
000100100001000100111010000000001
000000001010010010011110100000000
000001100001001000111100000000010
000001001000010001110110001000000
000001001000001100110110000100000
000100100100000001111010000000010
000010000001010010101110000001000
000010100010000010111010100000000
000000010010001010011110100000000
000010010100000010111010000000001
000000001001001010011110000010000
000001001001100000111100000010000
000010000010010100101110000000010
000001100000100100110110001000000
000010100100000100111010001000000
000000100100010100011110001000000
000010010100000010111010001000000
000001001010000001111010001000000
000001010010000010111010001000000
000100010010010000111100000010000
000001001001100000111100000000001
000100000100001100101110100000000
000000010010010001011110000010000
000100100001000100111010001000000
000010010000010001110110000000001
000001001000001100110110000000001
000000001010001001011110001000000
000100100100001000111100000010000
000010010010001000111100000000010
000010001001000001111010100000000
000000001100001001011110001000000
000100001100100000111100000000100
000001001001010000111100000010000
000001010000001001110110000000100
000000001010010010011110010000000
000100001000001001110110001000000
000100001100000100111010000001000
000100100000001100110110000001000
000001010001001000111100010000000
000010001010000010111010000000010
000100001001000001111010000010000
000000100010010010011111000000000
000000100010100100011110000100000
000100100000100010110110000000100
000010001001001000111100010000000
000001001000010001110110000000001
000100000100001100101110000001000




=== State Orbit 11 =====================
size : 180
repr state: 000100100100010010111110000010000
lex min decimal: 173066202213223790636215
states:
000100010010100010111110100000000
000010100010100010111110000001000
000001100001100100111110001000000
000100100100010010111110000000010
000010001001001010111110000100000
000010010010001001111110000000010
000100001001001100111110000010000
000010010100100010111110000000001
000001001100001100111110000000001
000001001100100100111111000000000
000010010100010100111110000100000
000010010010100100111110000000001
000100001001001100111110010000000
000100001001001100111110000100000
000001010010001010111110001000000
000010001001010001111110001000000
000100100010100010111110000100000
000001010001010010111111000000000
000010100010100100111110001000000
000100100010010100111110000000001
000010100010100100111111000000000
000010010100010100111110000000001
000001100100100001111110000100000
000001010010010001111110000010000
000010001010001010111110000000010
000001100100001100111110100000000
000001010010010001111110010000000
000001010001010010111110000100000
000001001010010010111110010000000
000100001001100100111110000001000
000001001001010010111110000010000
000100100001001001111110010000000
000010001001010001111110100000000
000010100100010010111110000000100
000100100100010010111110000010000
000010100100010010111111000000000
000010100100100010111110000100000
000100100010010010111111000000000
000010010001010001111110000000100
000100010100010100111110100000000
000010010100100100111110100000000
000001010001010001111110000001000
000010010001001001111110010000000
000010010001001001111111000000000
000100010100010100111110000001000
000001100001100100111111000000000
000001001010010010111110100000000
000001001010010001111110000001000
000001010001001010111110010000000
000010001010001010111110100000000
000001001010010001111110000000001
000001100100001001111111000000000
000001001100100100111110100000000
000010010010001001111110000000001
000100001001100001111110100000000
000100001100100001111110000000010
000100100001001001111110100000000
000100010100100010111110000000100
000001010010001001111110000001000
000100100010010010111110010000000
000010100100100010111110000010000
000001010010001010111110000010000
000010010001010001111110000100000
000100100100001001111110000000010
000100001100001100111110000001000
000010001001010010111110000001000
000100100001100001111110000000100
000001001001010010111110000000010
000100100010100010111110000000100
000100001001100100111111000000000
000100100010010100111110000001000
000001010010001001111110000000100
000100100001100001111110000100000
000001100001100001111110000001000
000010010010100100111110000010000
000100001100100001111110000000100
000010010001001010111110000000001
000001100001100001111110100000000
000001100001100100111110000100000
000001001010001010111110000100000
000010100100010010111110000001000
000010100100100010111110010000000
000010010100010100111110000000100
000001010010001010111110100000000
000001001100100001111110000001000
000010100100010100111110100000000
000100001100001001111111000000000
000100010010100010111110000010000
000100100100001001111110000010000
000010001001010010111110000000100
000001010010010001111110000100000
000001001001100100111110000000001
000010100010100010111110000000010
000010010001001010111110001000000
000100100100001001111110000000001
000010010100100010111110000001000
000010010010001001111110000010000
000100010100010010111111000000000
000100010010100100111111000000000
000010010100100100111111000000000
000100100001100001111110000000001
000010100010100010111110100000000
000100100001001100111110000001000
000010100010100100111110000100000
000100010100100010111110000000010
000100100010100010111110000000001
000010010001010001111110000000001
000001100100001100111110001000000
000010001010001001111111000000000
000010001010010001111110000000100
000100100001001001111111000000000
000001100100100001111110000010000
000001100100001100111110000010000
000010001010001001111110000100000
000010001001001010111110000010000
000001001010001010111110000000001
000010001001010010111111000000000
000100001100001100111110000000010
000001001100100001111110000000001
000001100001001100111110000000010
000100001001100100111110000000100
000010010001001001111110100000000
000010001001001010111110010000000
000001001001010010111110000000001
000010010010100100111110000000010
000001001100100001111110001000000
000001001001100100111110000000010
000010001001010001111110000010000
000100001100001001111110000100000
000010100010010100111110000000100
000001001001100100111110000010000
000010001010010001111110010000000
000001100100001001111110000000100
000100001001100001111110000010000
000010010100100100111110010000000
000100001100100001111110010000000
000100010010100100111110000001000
000001001100001100111110000100000
000001100100001001111110000001000
000100010100010010111110000100000
000100001100001001111110001000000
000001010010001001111111000000000
000100010010100100111110000000100
000010010100100010111110001000000
000001010001001010111110000000100
000001001100100100111110010000000
000001100001100001111110000000010
000001010001010001111110000000010
000001100100100001111110010000000
000100001001100001111110001000000
000001001010010010111111000000000
000100010010100010111110001000000
000001010001001010111110000000010
000001010001010010111110001000000
000010100010010100111110000000010
000100100001001100111110001000000
000100010100100010111110010000000
000100010100010100111110000000010
000001100001001100111110010000000
000001001010010001111110001000000
000010001010001001111110001000000
000100100100010010111110000000001
000010100010010100111110010000000
000100010010010100111110010000000
000100010010010100111110000100000
000100100001001100111110000000001
000100100010010100111110001000000
000010001010010001111110000000010
000100010100010010111110001000000
000100100010010010111110100000000
000001001010001010111110000000100
000010100100010100111110000010000
000010100100010100111110001000000
000001001100001100111110000000100
000100010010010100111110000010000
000100001100001100111110100000000
000001010001010001111110100000000
000010001010001010111110000001000
000010010001001010111110000001000
000001100001001100111110000000100




=== State Orbit 12 =====================
size : 60
repr state: 100100100100010010111111000000000
lex min decimal: 1381992597162705361923255
states:
001100001001001100111110000001000
100100100010010100111110010000000
001001010010001001111110000010000
100001001100100100111110000000001
010100010010010100111110000001000
100001100100001100111110000000100
100100001001100100111110000010000
001001001001100100111111000000000
010001010010010001111110000001000
010001010001010010111110000000010
010010100010010100111110001000000
001100100001001001111110000000001
001001001100100001111110010000000
010100100010010010111110000000001
100100100100010010111111000000000
010100010100010010111110000000010
010100010010100010111110000000100
010010010010001001111111000000000
001001001100001100111110100000000
001010010001001001111110000000001
001001100001001100111110001000000
001001001010001010111110100000000
100100010100100010111110001000000
001010001010001001111110000000010
001001001001010010111111000000000
001001010001001010111110001000000
100100010100010100111110000100000
010010010001010001111110100000000
001001100001100001111110000100000
010010010100100010111110010000000
100100100010100010111110100000000
100001100100100001111110000001000
100010100100010100111110000000100
100001100001100100111110000000010
001001100100001001111110000010000
010010100100010010111110000010000
010010001010010001111110001000000
010010100010100010111110000100000
001010001001010001111110000000100
001001001010010001111110010000000
100100010010100100111110000010000
010001010010001010111110000000100
100100100001001100111110010000000
010010001001010010111110000010000
010010010100010100111110100000000
010010010001001010111110010000000
001001010001010001111110000100000
100100001100001100111110000100000
100010010100100100111110000000001
100010100010100100111110000000010
010001001010010010111110000000001
010010001010001010111110000100000
001010001001001010111110000001000
001100001100001001111110000000010
100100001100100001111110001000000
010010010010100100111111000000000
100010100100100010111110000001000
100100100100001001111111000000000
100100100001100001111110100000000
001100001001100001111110000000100




=== State Orbit 13 =====================
size : 180
repr state: 000100100100010001111110000010000
lex min decimal: 173139989189518628842679
states:
000001010010010100111110000100000
000100010001001001111110100000000
000010010001010100111110000100000
000010010001100010111110001000000
000100001100100010111110000000010
000100010100001100111110000000010
000001100100100010111110010000000
000001010010010100111110010000000
000100001100010100111110000001000
000010100001100100111110000100000
000010010010001100111110000000001
000001100001001010111110000000100
000001100001001010111110010000000
000001010001001100111110000000100
000100001010010010111111000000000
000010010100010001111110000000001
000001100010010010111111000000000
000100001001010001111110100000000
000100100100010001111110000000001
000001001001010100111110000000010
000010001010100010111110000001000
000100010001100100111111000000000
000001010100100100111111000000000
000010001001100001111110000010000
000100100001010100111110000001000
000100100001100010111110000000100
000100010001010010111110000100000
000001001001100010111110000000001
000001010001100001111110000000010
000001001100001010111110000000100
000010010100001010111110000001000
000100001010100100111110000000100
000010001010100010111110100000000
000010001010010100111110000000010
000100100100001010111110000000010
000100010100100001111110000000010
000010100001010010111110000000100
000100010001010010111111000000000
000100100100010001111110000010000
000010010100010001111110000000100
000010001001100001111110001000000
000010010001010100111110000000100
000100010010010001111110000100000
000100100001100010111110000000001
000100010010010001111110000010000
000010100100100001111110010000000
000001100010100100111111000000000
000001100100100010111110000010000
000010010001100010111110000000001
000001100010100100111110001000000
000100100010100001111110000100000
000100010001100100111110000001000
000100100100001010111110000010000
000100001001001010111110000100000
000010100010001010111110000001000
000001001100010001111110000000001
000001001001010100111110000000001
000100010010010001111110010000000
000100100001010100111110001000000
000001100001001010111110000000010
000001010001100001111110000001000
000010001010010100111110010000000
000100010100001100111110000001000
000001010100100100111110010000000
000001001100001010111110000100000
000001010001001100111110010000000
000100100010100001111110000000001
000100001010010010111110010000000
000100001010001001111111000000000
000001100100010100111110000010000
000001100001010001111110100000000
000100100100001010111110000000001
000010001100100100111111000000000
000010010010001100111110000010000
000100010100001100111110100000000
000010010001010100111110000000001
000010100010010001111110010000000
000001001100001010111110000000001
000100001100010100111110000000010
000100010010001010111110001000000
000010100010010001111110000000100
000100100010001100111110000000001
000010100001010010111110000001000
000001001010100001111110001000000
000010010010001100111110000000010
000001001010100001111110000001000
000001100001010001111110000000010
000010100100100001111110000010000
000100010100100001111110010000000
000001100010010010111110100000000
000001001010001100111110000000100
000001010100010010111110000100000
000100100010001100111110001000000
000100001010100100111111000000000
000010001100001001111110000100000
000010100010001010111110000000010
000001001001010100111110000010000
000010001010100010111110000000010
000100001010100100111110000001000
000010001100100100111110010000000
000010001100010010111111000000000
000100100001010100111110000000001
000010010010100001111110000010000
000100001001010001111110001000000
000001010010010100111110000010000
000100010010001010111110100000000
000100100001100010111110000100000
000001100010001001111111000000000
000100001010010010111110100000000
000010001010010100111110000000100
000100010001001001111110010000000
000001010100100100111110100000000
000010010100001010111110000000001
000100100100010001111110000000010
000100010001001001111111000000000
000100001001001010111110000010000
000010100001100100111111000000000
000010001001100001111110100000000
000100001010001001111110001000000
000010100100001100111110100000000
000001001100010001111110001000000
000001100010010010111110010000000
000001010010100010111110100000000
000001010100001001111110000000100
000010001001001100111110000010000
000010010100001010111110001000000
000001010100010010111111000000000
000010100100001100111110000010000
000010010010100001111110000000010
000001100100100010111110000100000
000010010100010001111110000100000
000010100100100001111110000100000
000010100010010001111110000000010
000001100001010001111110000001000
000100100010001100111110000001000
000001100100010100111110100000000
000010100010001010111110100000000
000010001100010010111110000000100
000001010001001100111110000000010
000100001100100010111110000000100
000010001001001100111110010000000
000010001100010010111110000001000
000100001001010001111110000010000
000010100001001001111110010000000
000010001001001100111110000100000
000001100010001001111110000001000
000100001001001010111110010000000
000001100100010100111110001000000
000010100100001100111110001000000
000001001001100010111110000010000
000100010010001010111110000010000
000010100001001001111111000000000
000100010001010010111110001000000
000100100010100001111110000000100
000001010010100010111110000010000
000001010100001001111110000001000
000100001100010100111110100000000
000001010010100010111110001000000
000100001100100010111110010000000
000001001010100001111110000000001
000001100010100100111110000100000
000100010001100100111110000000100
000100001010001001111110000100000
000010010001100010111110000001000
000010010010100001111110000000001
000001001001100010111110000000010
000010100001010010111111000000000
000010100001100100111110001000000
000001010100001001111111000000000
000001001010001100111110000000001
000001001010001100111110000100000
000001001100010001111110000001000
000010100001001001111110100000000
000010001100001001111110001000000
000001100010001001111110000000100
000001010001100001111110100000000
000010001100100100111110100000000
000010001100001001111111000000000
000100010100100001111110000000100
000001010100010010111110001000000




=== State Orbit 14 =====================
size : 60
repr state: 100100100100010001111111000000000
lex min decimal: 1382066384139000200129719
states:
100100100001010100111110010000000
010010010001010100111110100000000
010100010010001010111110000000100
100100100001100010111110100000000
001001001100001010111110100000000
100100001010100100111110000010000
001100010001001001111110000000001
100100010100001100111110000100000
010010010001100010111110010000000
001001100001010001111110000100000
010010010010100001111111000000000
010010010010001100111111000000000
010100010010010001111110000001000
100001100010100100111110000000010
010010010100001010111110010000000
001001001100010001111110010000000
001001001010100001111110010000000
001001010100001001111110000010000
001001001001100010111111000000000
001001010001001100111110001000000
010010001100010010111110000010000
001100001010001001111110000000010
001010001100001001111110000000010
010010100010001010111110000100000
001001001010001100111110100000000
010001010010100010111110000000100
100001100100010100111110000000100
010001010100010010111110000000010
100100010100100001111110001000000
010001100010010010111110000000001
100100001100100010111110001000000
001001100001001010111110001000000
100010100100001100111110000000100
010100010001010010111110000000010
100100100010100001111110100000000
010010100010010001111110001000000
010010001010010100111110001000000
010010100001010010111110000010000
100010100100100001111110000001000
100001100100100010111110000001000
001001010001100001111110000100000
001100001001010001111110000000100
010100001010010010111110000000001
001010001001001100111110000001000
100100010001100100111110000010000
100100100100001010111111000000000
010001010010010100111110000001000
010010010100010001111110100000000
100100100100010001111111000000000
001100001001001010111110000001000
100010100001100100111110000000010
001010100001001001111110000000001
001010001001100001111110000000100
100010001100100100111110000000001
100001010100100100111110000000001
001001001001010100111111000000000
001001100010001001111110000010000
100100100010001100111110010000000
100100001100010100111110000100000
010010001010100010111110000100000




=== State Orbit 15 =====================
size : 120
repr state: 100100100100010000111101000000000
lex min decimal: 1230562707608070604025015
states:
100100100000100001110110100000000
001000001001001100011110000001000
001001001100001000111100100000000
010010100010000010111010000100000
100100010100100000111100001000000
100100001100000100111010000100000
010010010010100000111101000000000
010010000010010001101110001000000
010010001000010010110110000010000
010000010001010010011110000000010
010010010010000100111011000000000
010010010000010001110110100000000
010010001010000010111010000100000
001000100001001001011110000000001
010010010010001000111101000000000
001000001001010001011110000000100
001001010001000001111010000100000
010010010001010000111100100000000
001001001001100000111101000000000
100000100100001100011110000000100
001001000100001001101110000010000
100000100100100010011110000001000
100100100010100000111100100000000
001000001010001001011110000000010
100100100100001000111101000000000
100100100100010000111101000000000
010100000010010010101110000000001
001001001010000001111010010000000
010100010010000010111010000000100
001001100000001001110110000010000
001001000010001001101110000010000
100000001100100100011110000000001
010010010010000001111011000000000
001001001000001010110110100000000
100100100000010100110110010000000
100100100100000010111011000000000
100100000010100100101110000010000
100100100000100010110110100000000
100000100001100100011110000000010
010001000010010010101110000000001
010001010010000010111010000000100
010010001010010000111100001000000
100001100100100000111100000001000
100100100010000100111010010000000
100100010100000100111010000100000
001010001001000001111010000000100
100100000100100001101110001000000
100000010100100100011110000000001
001001010001001000111100001000000
001100001001000001111010000000100
100100100001000100111010010000000
010000001010010010011110000000001
010001010010010000111100000001000
100100000100010100101110000100000
100010000100100100101110000000001
010010010100010000111100100000000
001001001100000001111010010000000
010000010010010100011110000001000
010000010010100010011110000000100
001100000001001001101110000000001
010010100010010000111100001000000
100100001100100000111100001000000
001000001001001010011110000001000
010100010000010010110110000000010
100010100100100000111100000001000
010000010100010010011110000000010
001010001000001001110110000000010
010010000010001010101110000100000
001001000001100001101110000100000
010010000001010010101110000010000
001001000001010001101110000100000
001001001010001000111100100000000
001100001000001001110110000000010
010010010000001010110110010000000
001001000001001010101110001000000
001000010001001001011110000000001
100100000001100100101110000010000
010010010000010100110110100000000
010010010001000010111010010000000
100010100100000100111010000000100
001001000001001100101110001000000
001100001001001000111100000001000
100100100001100000111100100000000
010010000010100010101110000100000
010100010010010000111100000001000
001001100001000001111010000100000
010010000010010100101110001000000
100100000100100010101110001000000
001001001000100001110110010000000
100100001000100100110110000010000
100010100000100100110110000000010
100100000100001100101110000100000
010001010000010010110110000000010
010000010010001010011110000000100
100100010000100100110110000010000
100001000100100100101110000000001
100001100100000100111010000000100
010010000100010010101110000010000
001001100001001000111100001000000
010000010010010001011110000001000
001001001001000100111011000000000
001010000001001001101110000000001
100001100000100100110110000000010
001001010000001001110110000010000
100000100010100100011110000000010
001001001001000010111011000000000
010010010000100010110110010000000
001010001001001000111100000001000
010000100010010010011110000000001
001001001000001100110110100000000
001001001001010000111101000000000
001000001100001001011110000000010
010010100000010010110110000010000
100100100100000001111011000000000
100000100100010100011110000000100
001000001001100001011110000000100
001001001000010001110110010000000
010010010100000010111010010000000
100100100000001100110110010000000
100000100100100001011110000001000




=== State Orbit 16 =====================
size : 30
repr state: 100100100100000000111001000000000
lex min decimal: 1211627116935108401392823
states:
001001000000001001100110000010000
100100000100000100101010000100000
001001001001000000111001000000000
001001000001001000101100001000000
001000001001001000011100000001000
001000001000001001010110000000010
010010010000010000110100100000000
010000000010010010001110000000001
100100000100100000101100001000000
001001000001000001101010000100000
100100100100000000111001000000000
001000001001000001011010000000100
010000010010000010011010000000100
100000000100100100001110000000001
001001001000000001110010010000000
100000100000100100010110000000010
010010000010010000101100001000000
100100000000100100100110000010000
010010010010000000111001000000000
010010010000000010110010010000000
100000100100100000011100000001000
100100100000000100110010010000000
010000010010010000011100000001000
100100100000100000110100100000000
001001001000001000110100100000000
100000100100000100011010000000100
001000000001001001001110000000001
010010000000010010100110000010000
010000010000010010010110000000010
010010000010000010101010000100000




=== State Orbit 17 =====================
size : 360
repr state: 000100100010000000111000000010000
lex min decimal: 2738477913102890658999
states:
000000010000010001010110001000000
000100000000010010100110000000100
000010000000010100100111000000000
000000000010100010001111000000000
000000010000100010010111000000000
000000000001001010001111000000000
000001100000000100110010000001000
000000100010010000011100000100000
000100010000000100110010001000000
000000010001000001011010001000000
000100100000010000110100000000100
000001000010010000101100000000100
000000001100001000011100010000000
000100000010010000101100000000100
000010000010000001101010100000000
000000100100000010011010100000000
000001100000001000110100000000001
000100000000100010100110000001000
000000010000100100010110000100000
000100100010000000111000000010000
000001000010001000101100010000000
000000100001100000011100000010000
000000001001000010011010001000000
000001000100000100101010000001000
000100000000010100100110000000100
000000100010100000011100000010000
000000001100001000011100000010000
000010001000000001110010000001000
000001010000000010110010000001000
000001100000000001110010000000001
000010100000000010110010001000000
000100001100000000111000000000001
000010001010000000111000000000001
000010100000010000110100000000001
000010000001001000101100000000100
000000001001100000011100010000000
000000100100010000011100000100000
000100000100000010101010000001000
000001001000000100110010000001000
000100000001000100101010100000000
000100100001000000111000000000010
000010000010100000101100010000000
000100010010000000111000000000001
000000001001010000011100000100000
000000001000001100010110001000000
000010010000100000110100000100000
000000001100100000011100000100000
000100000001001000101100000000010
000000001100000100011010001000000
000100001000001000110100000000001
000000010000001010010111000000000
000100000000001001100110000001000
000000100100000001011010100000000
000010000100000100101010000001000
000000000010001010001110010000000
000100000100010000101100000000100
000100001000000001110010000001000
000010000010001000101100000000100
000001000010000010101010000000010
000010000100100000101100000000010
000000010001001000011100000100000
000000000100010100001110010000000
000000010100100000011100000010000
000010100000010000110100000100000
000000000010010001001110100000000
000001100000000100110010000000001
000000010001001000011100000010000
000000000100100010001111000000000
000001000000100001100111000000000
000100001000100000110100000000001
000000100000010010010110001000000
000000100010000100011010100000000
000001010001000000111000000000001
000010000001000001101010000000010
000100100000000001110010000001000
000000001001000100011010001000000
000000010001010000011100010000000
000010000000010100100110000001000
000100001001000000111000000000001
000000001000100100010110001000000
000000001000010001010110000100000
000001001000000100110010001000000
000100000000100001100110000001000
000001010000010000110100000000001
000000100001000100011010000010000
000000010010000001011010100000000
000100010100000000111000000010000
000010000000001001100110000001000
000000001000001100010111000000000
000100001000000100110010000000001
000000001010001000011100000010000
000000010010001000011100010000000
000000000100100001001111000000000
000001010001000000111000000010000
000001001000100000110100000000100
000010010000000001110010000001000
000000010000010001010111000000000
000010000001010000101100000000010
000000010001000010011010000010000
000001001000010000110100000100000
000100000000001001100110000000100
000100100000001000110100000000100
000010001000001000110100000000001
000100000100010000101100010000000
000000010100000100011010001000000
000000000010100100001110100000000
000000000100100010001110100000000
000000000010100010001110010000000
000000000100001100001110010000000
000000100001000001011010000010000
000001000000010010100110000000100
000000001000100001010110000100000
000000010010000001011010001000000
000000100000010010010110000100000
000010000001001000101100000000010
000001100000001000110100000100000
000000100010010000011100000010000
000010100100000000111000000000010
000000000001100100001110010000000
000000000010010100001111000000000
000001000001000100101010100000000
000010000000010001100110000001000
000000001001100000011100000100000
000000000010001001001110100000000
000010000010000100101010000001000
000000100010000010011010000010000
000100001000000100110010001000000
000000010010100000011100010000000
000001000001100000101100000000100
000010000000001010100110000000100
000100000001100000101100000000010
000010001000000001110010000000001
000010000010001000101100010000000
000010100100000000111000000000001
000001100100000000111000000000010
000000100000001100010111000000000
000100000010000010101010000001000
000000001100000001011010000010000
000010000000100010100110000000100
000001001010000000111000000010000
000100000000001100100110000000100
000000010000001010010110000100000
000000001000100100010110000100000
000010000100000010101010100000000
000001000010010000101100000000010
000000000100001001001110010000000
000100100000000001110010001000000
000010000000001010100111000000000
000100010100000000111000000000001
000001001000000010110010001000000
000001010010000000111000000000001
000100010000000010110010000001000
000010001000010000110100000000001
000000010000100010010110000100000
000100000001000100101010000000010
000100010000010000110100000000100
000100010000100000110100000100000
000000001010010000011100000010000
000000001010010000011100000100000
000000010000010100010111000000000
000010010001000000111000000000010
000010100000000010110010000000001
000000000100010010001110010000000
000000000010010001001111000000000
000000010100010000011100010000000
000000100001001000011100000100000
000100100000000010110010001000000
000001000010000001101010000000010
000000100100001000011100010000000
000000100000100001010110001000000
000010010000001000110100000000100
000001001000100000110100000100000
000000100000100010010111000000000
000000001000010001010111000000000
000100010000010000110100000000001
000000010100010000011100000010000
000010000100010000101100010000000
000000010000001001010110000100000
000000100000100001010111000000000
000000001010000010011010001000000
000000001000001010010110001000000
000001000100001000101100010000000
000000001100100000011100000010000
000000000001010010001110010000000
000100001100000000111000000010000
000001010000010000110100000000100
000001000000010010100110000001000
000001100001000000111000000010000
000001001100000000111000000010000
000100001000100000110100000100000
000100100010000000111000000000010
000100000010010000101100000000010
000001000100000001101010000000010
000000100000010100010111000000000
000010000000100010100111000000000
000100000010000100101010000000010
000000001001000010011010100000000
000010001000000010110010001000000
000100010000000100110010000000001
000000000001100001001111000000000
000010000001000001101010000001000
000010100000100000110100000000001
000001010000001000110100000000001
000000100001001000011100000010000
000000010100000100011010000010000
000100000100000001101010000001000
000100000100000010101010100000000
000000100100001000011100000100000
000001000000001100100110000001000
000000001000001010010111000000000
000000100001000001011010001000000
000100000000001100100111000000000
000001000000100001100110000000100
000001010000000001110010000000001
000001000001000010101010100000000
000010010000001000110100000100000
000010010100000000111000000000010
000000100000010100010110000100000
000010010001000000111000000010000
000010000001000010101010100000000
000001001000000010110010000001000
000010000010100000101100000000100
000000100000001100010110000100000
000000100100010000011100010000000
000001000000001010100111000000000
000100001000001000110100000000100
000100000010100000101100000000010
000100100000010000110100000100000
000000000001010001001110010000000
000001001000010000110100000000100
000000010000010100010110001000000
000100100000001000110100000100000
000001000100100000101100000000100
000000000001001010001110100000000
000000001010000001011010000010000
000010000100010000101100000000010
000010000001000010101010000000010
000000000100001001001110100000000
000001000010000010101010000001000
000000010010000100011010100000000
000001000100000001101010100000000
000010000010000001101010000001000
000000000001010010001110100000000
000000010100100000011100000100000
000001010010000000111000000000010
000000100010100000011100010000000
000001000001000100101010000001000
000010000100100000101100000000100
000000001010001000011100010000000
000000000010010100001110100000000
000100100001000000111000000010000
000000000001100001001110010000000
000100000100000001101010100000000
000000001000010010010110000100000
000000000100001100001111000000000
000001000010000001101010100000000
000010001000001000110100000000100
000000010010100000011100000100000
000010100000100000110100000000100
000010010100000000111000000010000
000100000010000010101010000000010
000000100010000100011010000010000
000001000010001000101100000000010
000010010000000001110010001000000
000010000000100100100110000000100
000010000001010000101100010000000
000001000000010001100111000000000
000001000100001000101100000000010
000000010001000001011010000010000
000010001001000000111000000000010
000001000001010000101100010000000
000000000010100100001110010000000
000100000001100000101100010000000
000100000010000100101010100000000
000000000100010010001110100000000
000000100001100000011100010000000
000000100000100010010110001000000
000000000001001100001110100000000
000001000001010000101100000000100
000001001100000000111000000000010
000001000001000010101010000001000
000010100010000000111000000000001
000001100001000000111000000000001
000100000000100010100111000000000
000001000001100000101100010000000
000010000000010001100111000000000
000010000000001001100110000000100
000000001100000001011010100000000
000001001010000000111000000000010
000000010100000010011010000010000
000000010000001001010110001000000
000010100010000000111000000010000
000001010000000001110010001000000
000000000010001001001110010000000
000000001010000001011010100000000
000000001000100001010111000000000
000010000000100100100110000001000
000100000100001000101100010000000
000010010000000100110010000001000
000010010000000100110010001000000
000000100100000001011010001000000
000000100000001001010110000100000
000001100100000000111000000000001
000000100010000010011010001000000
000000001000010010010110001000000
000000001001000100011010100000000
000100000000010010100110000001000
000000100000001001010110001000000
000000000010001010001111000000000
000000000100100001001110100000000
000001000000100100100110000001000
000100000010100000101100010000000
000100001000000001110010000000001
000001000000001100100111000000000
000010100000000100110010000000001
000001000000010001100110000000100
000100010010000000111000000000010
000001010000000010110010000000001
000100000001000001101010000000010
000000001010000010011010000010000
000000010001000010011010100000000
000100100000000010110010000001000
000100001001000000111000000000010
000000000001100100001110100000000
000001100000100000110100000000100
000100000000010100100111000000000
000000000100010100001111000000000
000010010000100000110100000000100
000000100001000100011010100000000
000000001001010000011100010000000
000001010000001000110100000100000
000000000001001100001111000000000
000010001010000000111000000010000
000010001001000000111000000000001
000000000001010001001111000000000
000001100000100000110100000000001
000010000010000100101010100000000
000100010000100000110100000000001
000100000000100001100111000000000
000001100000000001110010001000000
000000010000100100010110001000000
000000100100000010011010001000000
000000010010000100011010001000000
000010001000000010110010000000001
000000001100000100011010000010000
000000010100000010011010100000000
000100000001000001101010000001000
000010000100000100101010000000010
000010000100000010101010000000010
000000010001010000011100000010000
000010100000000100110010000001000
000001000100000100101010000000010
000100010000000010110010000000001
000010001000010000110100000100000
000100000001001000101100000000100
000001000100100000101100000000010
000001000000100100100110000000100
000000010010001000011100000100000
000001000000001010100110000001000
000100000100001000101100000000100




=== State Orbit 18 =====================
size : 360
repr state: 000100100010100000111100000010000
lex min decimal: 21636951043836212505783
states:
000010100010010000111100000010000
000010010000100010110110000000100
000001100001000001111010001000000
000001010010010000111100000000010
000100100000100010110111000000000
000001010001001000111100000000001
000001000001001100101111000000000
000000010010010100011110001000000
000000100100010100011111000000000
000010100010000010111010000000001
000001000100100100101110000000100
000001001100001000111100010000000
000001001000001100110110000001000
000010000010001010101110010000000
000100000100001100101111000000000
000100000100010100101110010000000
000010001000001001110110000000001
000010000001001001101110000000100
000001000100100100101110000001000
000000001010010010011110001000000
000100000001100100101110000000010
000001000100001001101110010000000
000000010010010100011110100000000
000001000001100001101111000000000
000010000010010001101110000001000
000000010001010010011110010000000
000001000010001001101110000000010
000100100000100001110111000000000
000001001000100001110110000000100
000010100010010000111100000100000
000000010010100010011111000000000
000001000001100001101110000000100
000000001001010001011110010000000
000000010010010001011110100000000
000010010000100010110111000000000
000000010001010010011110000010000
000100000100100001101111000000000
000100001000001001110110000000001
000000100010010010011110001000000
000001000010010010101110000001000
000000010001001001011110000100000
000010000010100010101111000000000
000001000001001010101111000000000
000000100100001100011110000100000
000000001001010001011110000100000
000100000010010010101110000000010
000001001001100000111100000100000
000100100100000010111010100000000
000100001001001000111100000000001
000001000001001010101110000001000
000001000010010010101110000000010
000010010000010001110111000000000
000010010010100000111100000100000
000010100100000100111010000000010
000100100000001100110110000100000
000001010000010010110110000001000
000001100100100000111100000000100
000010001000010010110110001000000
000001010000001001110110001000000
000001001001000100111010100000000
000001010000001001110110000000001
000010000010100010101110010000000
000010100010000010111010000010000
000001001001000010111010100000000
000001001000001010110110000001000
000100100000100010110110001000000
000100100100010000111100000000100
000100100100010000111100000100000
000100010000100100110110000000001
000100001100100000111100000000001
000000010010100010011110010000000
000001010001000001111010000010000
000010001000010010110110000000001
000001100100100000111100000000010
000001010000010010110110000000100
000010100010010000111100000000001
000000100010010010011110000010000
000010100100000100111010000001000
000100001100000100111010000010000
000100001100000100111010000000001
000000100001100100011110100000000
000001010010000010111010000000001
000100100001000100111010000000010
000001001000010001110110000000100
000010001001000001111010000000010
000001000010001001101110100000000
000010001001001000111100000000001
000010000100010010101110100000000
000000001010010010011110000100000
000001100100100000111100000000001
000001010010010000111100000000001
000100010010010000111100000000100
000010100010000010111010001000000
000100000010010010101110000000100
000000001100100100011110001000000
000100100001100000111100000010000
000010000010001010101111000000000
000000100010100100011110100000000
000001010000001001110110000100000
000010010001000010111010000010000
000010000001010010101110010000000
000100100000001100110110000000100
000000001001001100011111000000000
000001001010001000111100000000010
000000100100100010011110100000000
000010001000010010110110000100000
000010001001001000111100000000100
000100000100100010101111000000000
000010000010010100101110100000000
000010000001001001101110000000010
000000001001001100011110100000000
000010010001000010111010100000000
000000001010001001011110010000000
000100100010000100111010100000000
000001000100100100101110000000010
000000010001010010011110100000000
000000001010001001011110100000000
000010000010010001101110100000000
000010100000100100110110000001000
000100100100000001111010001000000
000001100001001000111100000010000
000000010100010010011110000010000
000010000010010100101111000000000
000010100000010010110110001000000
000000010100100100011110000010000
000001100000001001110110001000000
000001001000100001110111000000000
000001010001000001111010000000001
000001001100000001111010000000010
000001100000100100110110000001000
000000001001010001011111000000000
000100010000010010110110000001000
000001100001000001111010000000001
000100010100000100111010000000001
000000010001001001011110001000000
000001001000001100110111000000000
000010100100100000111100000000100
000001001100000001111010100000000
000000001001001010011110100000000
000001001000010001110110000100000
000100001001000001111010000000001
000010100000100100110110000000001
000000100100100010011111000000000
000000100100100010011110001000000
000010010010000100111010000001000
000010010100010000111100000000010
000001001001000100111010001000000
000100100100000010111010000001000
000100000100010100101111000000000
000100000010100100101110010000000
000100100010100000111100010000000
000100010000010010110110000000001
000100000100100001101110000001000
000100100001000100111010100000000
000010010010000001111010001000000
000010010010100000111100010000000
000010000100100100101110000000100
000001100001001000111100000000001
000000010010001010011110000100000
000000001100001001011110100000000
000100001001001000111100000000010
000001010010000010111010000000010
000000100100100001011111000000000
000100010010000010111010000001000
000100100100000010111010001000000
000010001010000010111010000010000
000100010100100000111100000100000
000010001000001001110110000000100
000010010100000010111010100000000
000001100000100100110110000000001
000100000001001001101110000001000
000001010010010000111100000000100
000000010010010100011111000000000
000100000100001100101110000000100
000000100100010100011110010000000
000000001010001001011110000010000
000000001100100100011110000010000
000001100100000100111010000000010
000100010010000010111010000000001
000010000001010010101110000000010
000010000100100100101110000000010
000010000100010010101110010000000
000100001100100000111100000100000
000001000010001001101110010000000
000010100000100100110110000000100
000100100000100001110110001000000
000001001000010001110111000000000
000010001001000001111010000001000
000010010100010000111100000010000
000000010010001010011111000000000
000100100010000100111010000000010
000010000001010010101110100000000
000100010100100000111100000010000
000100010100000100111010000010000
000010010100000010111010000000010
000001100100000100111010000000001
000100001000100100110110000000001
000010010010001000111100000000100
000100000010010010101110000001000
000010010010000001111010100000000
000100100100000001111010100000000
000000100010100100011110010000000
000010010000100010110110000100000
000100100001100000111100010000000
000010100000010010110110000000001
000000100001100100011110000010000
000100010010000010111010000000010
000001000001010001101110010000000
000001000001001100101110100000000
000010010000010100110110000001000
000100001000001001110110000000100
000100001000001001110110000001000
000100100100010000111100010000000
000001100000001001110110000000001
000100001001001000111100000000100
000001100000001001110110000100000
000001001000100001110110000100000
000001001000001100110110001000000
000010010000010001110110001000000
000010000010100010101110000000100
000100000100100001101110100000000
000000001001100001011110000100000
000100100000010100110111000000000
000100001000100100110110001000000
000001001000001010110111000000000
000000010100010010011110100000000
000000001001001100011110001000000
000100000010100100101110000000010
000010000100100100101110000001000
000001010000010010110110000000001
000100100001000100111010000010000
000001010001000001111010001000000
000010000010010001101111000000000
000100000100100010101110100000000
000001001010000001111010000010000
000000001001001010011111000000000
000010001001001000111100000000010
000001001001100000111100000000100
000000010001001001011110000010000
000010010001010000111100000010000
000001001100001000111100000000010
000100100100001000111100000100000
000000010010001010011110010000000
000001001001010000111100000000100
000100100010100000111100000000010
000100100000001100110111000000000
000010100100100000111100000000010
000010001010000010111010001000000
000000100100001100011111000000000
000001001001010000111100010000000
000100000001001001101110000000010
000001100001001000111100000100000
000001000001010001101111000000000
000100000100100010101110000001000
000100010100000100111010001000000
000001001010000001111010100000000
000100100000010100110110000000100
000000001001100001011110010000000
000001000100001001101110000000010
000001001010000001111010000000010
000010010010001000111100000100000
000001001001000010111010001000000
000100001100100000111100000010000
000100100001100000111100000000010
000100100000010100110110000100000
000100001100000100111010001000000
000100100010100000111100000010000
000000001001001010011110001000000
000001100100000100111010000001000
000010010000010100110110001000000
000000010010010001011110001000000
000010001010010000111100000100000
000001000010010010101110000000100
000000010100100100011110000100000
000010010000001010110110000000100
000000010010100010011110000100000
000001010001001000111100000100000
000010000010010100101110000001000
000001001100000001111010000010000
000001001001000100111010000001000
000010010000001010110110000100000
000100100000100010110110000001000
000100001001000001111010000000010
000100100100000001111010000001000
000100010000010010110110000000100
000000100001001001011110000010000
000010010001010000111100010000000
000001000001001100101110000001000
000000100100100001011110001000000
000010000001001001101110000001000
000010010000001010110111000000000
000000100001100100011110010000000
000010001000001001110110000001000
000010000010001010101110000000100
000001010010000010111010000001000
000100010000100100110110001000000
000100001000100100110110000100000
000010010010000100111010100000000
000100000010100100101110100000000
000100000100001100101110010000000
000100100010000100111010000010000
000001100001000001111010000010000
000100000100010100101110000000100
000001001001100000111100010000000
000000100010010010011110000100000
000010010100010000111100010000000
000000010010010001011111000000000
000001001010001000111100010000000
000100010000100100110110000100000
000010010000010001110110000001000
000010010010000100111010001000000
000001001000001010110110001000000
000100010010010000111100000000010
000010001001000001111010000000001
000010001010000010111010000000001
000010001010010000111100000000001
000100100000100001110110000001000
000100010100100000111100000000001
000000001010010010011110000010000
000000001001100001011111000000000
000010010010001000111100010000000
000100010010010000111100000000001
000000010100010010011110010000000
000010010001010000111100000000010
000100001001000001111010000001000
000001000100001001101110100000000
000000100001001001011110000100000
000010100000010010110110000100000
000000001100100100011110000100000
000001000001001010101110100000000
000000001100001001011110010000000
000100100100001000111100000000100
000100100100001000111100010000000
000000010100100100011110001000000
000100000001001001101110000000100
000001001001000010111010000001000
000010010010000001111010000001000
000010010010100000111100000000100
000001010001001000111100000010000
000010010100000010111010000010000
000000100100010100011110000100000
000100000001100100101110010000000
000010000100010010101110000000010
000000100100100001011110100000000
000001000001010001101110000000100
000010001010010000111100000010000
000010100100100000111100000000001
000001001001010000111100000100000
000010100100000100111010000000001
000001001010001000111100000010000
000000100100001100011110010000000
000000100001001001011110001000000
000000100010100100011110000010000
000001001100001000111100000010000
000100000001100100101110100000000
000010010000010100110111000000000
000000001100001001011110000010000
000001100000100100110110000000100
000010010001000010111010000000010
000001000001100001101110010000000




=== State Orbit 19 =====================
size : 120
repr state: 000100100010100100111110000010000
lex min decimal: 172771062189343785708727
states:
000010010001010010111110000000010
000001001001001010111110001000000
000010010010010100111110000001000
000010010010001010111110000100000
000100100001100100111110000000010
000001100001001001111110000100000
000100100100010100111110010000000
000001001001100001111111000000000
000010010100010010111110000000010
000010010010010100111111000000000
000100100100001100111111000000000
000001001001100001111110010000000
000100100100100010111111000000000
000100100100001100111110000100000
000001100001001001111110000000001
000100100100100001111110001000000
000001010001001001111110000010000
000010100010010010111110000010000
000100010100100100111110001000000
000100001100100100111110001000000
000001001010001001111110100000000
000100100100010100111111000000000
000001010001001001111110000100000
000100010100100100111110000010000
000001001010001001111110000000010
000001001001010001111110000000100
000010001001001001111110000001000
000010100100100100111110000000001
000001100001001001111110001000000
000010010010010001111110001000000
000001001001001100111110001000000
000100100010100100111110010000000
000010100010010010111110000000001
000100001001001001111110000000001
000001001001010001111110000100000
000010010010001010111110010000000
000001100001001001111110000010000
000010010001010010111110010000000
000010010010010100111110100000000
000010001010010010111110000100000
000001010010010010111110000000010
000001010010010010111110000000001
000010001010010010111110001000000
000010100100100100111110000000100
000010100100100100111110000001000
000001001001100001111110000100000
000001010001001001111110001000000
000001001100001001111110100000000
000100001100100100111110000000001
000010001010010010111110000010000
000001100100100100111110000000010
000100100001100100111110000010000
000100010010010010111110000001000
000010010010010001111110100000000
000100001001001001111110000000010
000100010010010010111110000000010
000001001001001100111110000001000
000001001001010001111110010000000
000010010010010100111110001000000
000100001100100100111110000100000
000001001001001010111111000000000
000010010010100010111110000000100
000010010100010010111110100000000
000010010010100010111110000100000
000010010010010001111110000001000
000001001001010001111111000000000
000100010100100100111110000100000
000010010001010010111110100000000
000010010100010010111110010000000
000010010010001010111110000000100
000100100100100001111110000001000
000100100001100100111110100000000
000100100001100100111110010000000
000100100010100100111110000000010
000001001001001010111110100000000
000010001001001001111110000000100
000010100100100100111110000000010
000100001001001001111110000001000
000001001001001010111110000001000
000001001001001100111110100000000
000001001010001001111110010000000
000010010010010001111111000000000
000001001100001001111110010000000
000100100100100001111111000000000
000100100100001100111110010000000
000100100100100010111110100000000
000010001001001001111110000000001
000100001100100100111110000010000
000001010010010010111110000000100
000010001010010010111110000000001
000100010010010010111110000000001
000001001001001100111111000000000
000100100010100100111110100000000
000001010010010010111110000001000
000100100100001100111110000000100
000001001100001001111110000010000
000010010100010010111110000010000
000010100010010010111110001000000
000100100100100001111110100000000
000100001001001001111110000000100
000100100100100010111110000001000
000001001001100001111110000000100
000001100100100100111110000000100
000100100100010100111110000100000
000001010001001001111110000000001
000001001010001001111110000010000
000010010010001010111111000000000
000010010010100010111111000000000
000001100100100100111110000000001
000100100010100100111110000010000
000100100100100010111110001000000
000010100010010010111110000100000
000010001001001001111110000000010
000001100100100100111110000001000
000001001100001001111110000000010
000100100100010100111110000000100
000010010010100010111110010000000
000100010010010010111110000000100
000010010001010010111110000010000
000100010100100100111110000000001




=== State Orbit 20 =====================
size : 360
repr state: 000100100010100010111110000010000
lex min decimal: 173066205590923511164087
states:
000010100100010010111110000100000
000001001010010001111110000100000
000100010010010100111110000000001
000001010001010001111110010000000
000010010001001001111110000001000
000001001100100100111110000000010
000010010001001001111110001000000
000100010010100100111110000100000
000100100100001001111110000100000
000100001100001001111110010000000
000100100100001001111110010000000
000001100001100001111110001000000
000100100010010010111110001000000
000010010100100100111110000001000
000100010010100010111110010000000
000001001100100100111110000001000
000001100001001100111110000010000
000100001100001001111110000001000
000100100100001001111110000001000
000010100100010100111110000100000
000100010010100100111110000000001
000100100010010100111110000000100
000001010010010001111110000000010
000010010010001001111110010000000
000010100010100100111110000000100
000001100100100001111110000000100
000010001010010001111111000000000
000010001001010010111110100000000
000001010010001010111110000100000
000100010100010100111110000000100
000001010001010010111110100000000
000100100010100010111110000001000
000100010010010100111110000000010
000010100100010100111110000001000
000010010001010001111110010000000
000010010100010100111110000000010
000001100001100100111110010000000
000001100001100001111110000000100
000100010010010100111110100000000
000100100001001100111110000100000
000100100001001100111110000000010
000010001001010010111110010000000
000001001100100100111110000010000
000001001100100001111110000000100
000010001010001010111110000010000
000010010100100100111110000000010
000010100010100010111110001000000
000100001100001100111110001000000
000010010001001010111111000000000
000001001010010010111110000010000
000001100100001001111110000000010
000010010100100010111110000000100
000010010100010100111110000001000
000001001010001010111110001000000
000010100010100010111110000000001
000010001001001010111110000000001
000100010010100100111110100000000
000001100100001001111110001000000
000100100100001001111110000000100
000010001010001001111110000000001
000001001100001100111110000010000
000001010010001010111110000000010
000010100100010010111110000000010
000010001010001001111110100000000
000100100010010010111110000100000
000001100001001100111110100000000
000100100010010010111110000000100
000100100001100001111110010000000
000001001010001010111110000000010
000100100010010100111110000010000
000100001100001100111110000010000
000100010100100010111111000000000
000100001100100001111110000100000
000001010010010001111110001000000
000010001001010001111111000000000
000001001100100100111110000100000
000001100100001100111110000000001
000010001001010001111110000000010
000001100001100100111110000000001
000001100001100100111110000010000
000100010100010100111110010000000
000001100001100100111110100000000
000010010001010001111111000000000
000100001100001100111110000000100
000001100100001001111110000000001
000001100001100100111110000001000
000010010100100100111110000010000
000100100010100010111111000000000
000010001001010010111110000000010
000001001010001010111110000001000
000001010001010010111110010000000
000001010010001001111110010000000
000001010001001010111110000010000
000010010010001001111110001000000
000001100100001100111110000001000
000100010010100010111110000000010
000100010010100010111110000000001
000100001100100001111110000000001
000001010001001010111110000001000
000001010001010001111110000000001
000100100001001100111110100000000
000001001001010010111110000001000
000100010100100010111110000001000
000001001010010010111110000000010
000010010100100010111110000000010
000010100010010100111110000001000
000100010010010100111110000000100
000100100100010010111110010000000
000010001010001001111110010000000
000100001001001100111110000000001
000100100100010010111110000000100
000010100010010100111111000000000
000100001001001100111110001000000
000010010010100100111110000000100
000100100100001001111110001000000
000100010100010010111110000001000
000001001100100100111110000000100
000100001100001100111110000000001
000100001001100100111110000000010
000001001010010001111110000000100
000010100010100100111110010000000
000100010100010010111110100000000
000001001010001010111110010000000
000010100100010100111111000000000
000001100001100001111110010000000
000001100100100001111110000000001
000010100100100010111111000000000
000010010001010001111110000001000
000100001001100001111110000000001
000100100100010010111110100000000
000010100010100010111110000010000
000010010001001010111110000100000
000100100100010010111110001000000
000001100100001001111110000100000
000100001100100001111110100000000
000100100100001001111110100000000
000100001100001100111110010000000
000100010100010100111110000000001
000010001010001001111110000001000
000001010010001001111110000100000
000010010001010001111110000000010
000010010100010100111110001000000
000100100010010010111110000001000
000010001010010001111110000010000
000001100001100001111111000000000
000100010010100100111110000000010
000010010001001010111110000010000
000010010100100100111110000100000
000001010010001010111110000001000
000001001010001010111111000000000
000010001010001001111110000000100
000100100010100010111110000000010
000001100001100100111110000000100
000010100010100100111110000001000
000100010010100010111110000001000
000001100001001100111111000000000
000001001001100100111110100000000
000010010010100100111110000001000
000001100100001100111110000100000
000001010010010001111110000000001
000001010001010001111110000010000
000100100001001001111110000100000
000010001001010010111110001000000
000001100100001100111110010000000
000001010010001001111110000000001
000010100100010100111110010000000
000010001010001010111110000000001
000100001100001001111110000010000
000010010010001001111110000100000
000010100010010100111110100000000
000100001001100001111110000000010
000100001001100100111110010000000
000010100010010100111110000100000
000010100100100010111110001000000
000100100010100010111110010000000
000010010001001001111110000010000
000100100010100010111110000010000
000010010100100100111110000000100
000100001100001001111110000000001
000010010001010001111110001000000
000010010100100100111110001000000
000010010100010100111110010000000
000010010001001001111110000100000
000100010010010100111110001000000
000010010100100010111110000010000
000001010001010010111110000010000
000010100010100100111110000000001
000001100001001100111110000000001
000010100010010100111110000010000
000010100010010100111110000000001
000010001001010001111110000100000
000001010010001010111110010000000
000010001010010001111110000001000
000010100100010010111110000000001
000001001010010010111110000000100
000010010010001001111110100000000
000010001001010001111110000000001
000010001001001010111110000000010
000001010001001010111110100000000
000100010010010100111111000000000
000001010010010001111110000000100
000100010010100010111111000000000
000010001001010010111110000100000
000001001001010010111110100000000
000010100100100010111110000000010
000001010010001001111110000000010
000001001100100001111111000000000
000100010010100100111110010000000
000001010010001010111110000000001
000010010100100010111110000100000
000010010010100100111110000100000
000100010100010100111111000000000
000100010010100010111110000100000
000100001001100001111110000100000
000100001001100100111110000100000
000001001100100001111110000000010
000010100100100010111110000000100
000100001001001100111110000000100
000010010010100100111110010000000
000010010001001001111110000000010
000001010001010001111110000000100
000010010010001001111110000000100
000010010100100010111110100000000
000001001001100100111110000100000
000100100001001001111110000001000
000100001001100001111110010000000
000001001100001100111110000001000
000001001001100100111110000000100
000010001010001001111110000010000
000001001100001100111110000000010
000001001100001100111110001000000
000100010100010010111110000000001
000010100010100100111110100000000
000001001010010001111110000010000
000100010100100010111110100000000
000001010010001001111110100000000
000001100001001100111110000100000
000010010010001001111110000001000
000001100100100001111110100000000
000001010001001010111110000100000
000010001001010001111110000001000
000100010100100010111110000100000
000100001001100100111110001000000
000010010001001010111110100000000
000100100010100010111110001000000
000100010100010010111110000010000
000001100100100001111110000000010
000001001001010010111110000000100
000100010100010010111110000000100
000100001001001100111111000000000
000001010010001010111111000000000
000001001100100100111110001000000
000100100001100001111110001000000
000001001100001100111110010000000
000010100100100010111110100000000
000001001001010010111110010000000
000100100001001100111111000000000
000100010100100010111110000000001
000100100100010010111110000100000
000001001100100001111110000100000
000001100100100001111111000000000
000100010010100100111110001000000
000100001001100001111110000001000
000001100001100001111110000010000
000010100010100010111110000000100
000001100100001100111111000000000
000010100010100010111111000000000
000001001010001010111110000010000
000010100100100010111110000000001
000010010100100010111111000000000
000010100100010010111110100000000
000001001010010010111110000001000
000010001010010001111110100000000
000010001010001010111110010000000
000001010001010001111111000000000
000100100001001001111110001000000
000010100100010100111110000000010
000100001100100001111111000000000
000100100001001100111110000010000
000010010100010100111110000010000
000001100001001100111110000001000
000010001010001010111110001000000
000100010100010010111110010000000
000100100001100001111110000000010
000010100100010010111110001000000
000100001100001100111111000000000
000010010010100100111110100000000
000010001001001010111110100000000
000100100001100001111111000000000
000100100010010010111110000010000
000001001100100001111110100000000
000100100010010100111110000100000
000010001001010010111110000000001
000100010100010100111110000010000
000100100001100001111110000001000
000010001010001010111110000000100
000100001100001001111110000000100
000010001001010001111110010000000
000001010001001010111110000000001
000001010010010001111110100000000
000001100100100001111110001000000
000001001100001100111111000000000
000100100001001001111110000000010
000010100010100100111110000010000
000100001100001001111110100000000
000001010001001010111111000000000
000010001010010001111110000000001
000010010010100100111110001000000
000001001010010010111110000100000
000001100100001100111110000000010
000010010100010100111111000000000
000010100100010010111110010000000
000010001010010001111110000100000
000001100100001001111110010000000
000100010100010100111110001000000
000100100001001100111110000000100
000010010001010001111110000010000
000001010001010010111110000000100
000100001001100100111110000000001
000010001001001010111110000000100
000001001001100100111110000001000
000100100010010100111110100000000
000100100001100001111110000010000
000001001010010001111110100000000
000010001001001010111111000000000
000100100010010010111110000000010
000100100100010010111110000001000
000001001010010001111110000000010
000100100010010100111110000000010
000001010001010010111110000001000
000010010001001010111110000000010
000001010010001001111110001000000
000001010010010001111111000000000
000001001001010010111110000100000
000001100100001001111110100000000
000100100001001001111110000000100
000100001100100001111110000010000
000010100010100010111110010000000
000100001001100100111110100000000
000010010001001010111110000000100
000001001010010001111111000000000
000100001001001100111110100000000
000010010001001001111110000000100
000001010001010010111110000000001
000001001010010010111110001000000
000100001100100001111110000001000
000100100010010100111111000000000
000001001001100100111110001000000
000100100001001001111110000010000
000100001001001100111110000000010
000010001001001010111110001000000
000001001001100100111110010000000
000010001010001010111111000000000
000001001001010010111110001000000
000001100001100001111110000000001
000100001001100001111111000000000
000001001100100001111110000010000
000100010100100010111110000010000
000001010001010001111110001000000
000010100100010100111110000000001




=== State Orbit 21 =====================
size : 360
repr state: 000100100010100001111110000010000
lex min decimal: 173139992567218349370551
states:
000100001010001001111110100000000
000100001010010010111110000010000
000001100010100100111110000001000
000100100100001010111110000001000
000100100001010100111110000000010
000100010001100100111110100000000
000001010001100001111110000010000
000100010010001010111110000100000
000001010001100001111110000000001
000100001100100010111110000100000
000001001001010100111110000001000
000001010010010100111110100000000
000001100001001010111110000100000
000010100100100001111110001000000
000100001100010100111110000000100
000001100001001010111110100000000
000001001001100010111110001000000
000001001010100001111110000000100
000100010001100100111110000000001
000100001001001010111110100000000
000001001010001100111110010000000
000001001100010001111110000000010
000001100010001001111110000000010
000100001010100100111110100000000
000100001010100100111110000100000
000010100001100100111110100000000
000100010001010010111110000000100
000001100100100010111110100000000
000100001001010001111110000001000
000100001100010100111110010000000
000100010100100001111110000000001
000100010010010001111110000000010
000010010001010100111111000000000
000010001001100001111110000000010
000100001010001001111110000010000
000001010010010100111110000000010
000010100010010001111110000010000
000100010010001010111110010000000
000010100010001010111110001000000
000001100100100010111110000000001
000010100001001001111110001000000
000001010100100100111110000000010
000010010010100001111110100000000
000100010100100001111110000010000
000100001001001010111111000000000
000010001001100001111110010000000
000100001100010100111111000000000
000010010100001010111110000000010
000001010100100100111110000001000
000001010001001100111110000001000
000001010100001001111110010000000
000100001001010001111110010000000
000100001100100010111110000010000
000100100010001100111110000000010
000100010001010010111110010000000
000001100001001010111111000000000
000010100001010010111110000100000
000010001010010100111110100000000
000010100100100001111110100000000
000010010100010001111110001000000
000001010100100100111110000000100
000001010001100001111110001000000
000010001010100010111110001000000
000001001100001010111110010000000
000010010001100010111110000100000
000010100001001001111110000010000
000010001100100100111110000000100
000010010100001010111110000000100
000100010010001010111111000000000
000100100100010001111110010000000
000010100100100001111110000000001
000100001001010001111110000100000
000100100100010001111110000000100
000100001001001010111110000000100
000001010100010010111110100000000
000100010100100001111110000100000
000001001100001010111110001000000
000100100010100001111110010000000
000010001100001001111110000001000
000010100010010001111111000000000
000010010010100001111110000000100
000100100001100010111110000010000
000100010010010001111110001000000
000100001100100010111110000001000
000010100001001001111110000001000
000100001010100100111110000000001
000100100010001100111110000000100
000100010001100100111110010000000
000010001100010010111110001000000
000100100010001100111110000100000
000010100100100001111110000000010
000010001001001100111110000000001
000010001010010100111110000010000
000001100001010001111111000000000
000010100100001100111110000000001
000010100001010010111110000000010
000010001010010100111110000000001
000010010010100001111110001000000
000010010010001100111110100000000
000010001010100010111110000010000
000010001001100001111111000000000
000010010001100010111110000010000
000010001001001100111110100000000
000010100010001010111111000000000
000001001001100010111110000100000
000010100100001100111110000001000
000010100001100100111110000001000
000001010010100010111110000001000
000010100001100100111110000000100
000100001100100010111110000000001
000001010100010010111110010000000
000001010100010010111110000000100
000010010100010001111111000000000
000010010010001100111110001000000
000100001100010100111110001000000
000100010100100001111111000000000
000001100010100100111110000010000
000100100100001010111110001000000
000100010001100100111110000000010
000001001001010100111110001000000
000001010001100001111110010000000
000001100010100100111110010000000
000001010100010010111110000010000
000010100001001001111110000000100
000100001100010100111110000000001
000001100010001001111110000100000
000001010010010100111110001000000
000100100100001010111110000100000
000010010010100001111110010000000
000100001001001010111110000000010
000001001001010100111110100000000
000010001010100010111110000000001
000001010010100010111110010000000
000001001100010001111110000010000
000010010010100001111110000001000
000010100001010010111110000000001
000100100100001010111110100000000
000100001010010010111110000001000
000100010100001100111110000000100
000001010100001001111110000000001
000010100010010001111110100000000
000001010010010100111110000000100
000100100001010100111110000000100
000100100001100010111110001000000
000100010010010001111110100000000
000010010100010001111110000000010
000001001100001010111111000000000
000001100100010100111110000001000
000010100001100100111110000010000
000100010100100001111110000001000
000010010001010100111110010000000
000100100001010100111110100000000
000010010001100010111110000000100
000100100100010001111110100000000
000010010001100010111110100000000
000100100001100010111110010000000
000001001010100001111110000100000
000001100010001001111110000000001
000010100001010010111110100000000
000010100001010010111110010000000
000100010001010010111110100000000
000100010001001001111110001000000
000001010001001100111110100000000
000100100010100001111110000000010
000001010001001100111110000000001
000010001001001100111111000000000
000100100010100001111110000001000
000001100010010010111110000001000
000010100001100100111110010000000
000001001001100010111110010000000
000001100001010001111110010000000
000100010001100100111110001000000
000001010001001100111110000010000
000010100010010001111110000100000
000100100010100001111111000000000
000001010001001100111110000100000
000010100001010010111110001000000
000010100100001100111110010000000
000001100100100010111111000000000
000100010001010010111110000001000
000100001010100100111110000000010
000010001100001001111110000010000
000010010001100010111111000000000
000100100010001100111111000000000
000010001100001001111110100000000
000001100010001001111110100000000
000001100100100010111110000000010
000010010100001010111110100000000
000100010010010001111110000000001
000001001010100001111111000000000
000100010010001010111110000001000
000010001100100100111110000010000
000010100001100100111110000000001
000010010001010100111110000010000
000010010100010001111110000001000
000010010100010001111110010000000
000010010010100001111110000100000
000001100100010100111110000000010
000100010001010010111110000010000
000010001100010010111110010000000
000001001100010001111111000000000
000010100010001010111110000010000
000001010010100010111110000000010
000100100010100001111110001000000
000001001010001100111110000000010
000010100100100001111111000000000
000001100010001001111110001000000
000100010100001100111110010000000
000001001100001010111110000010000
000100010010001010111110000000001
000010100001001001111110000100000
000010001100001001111110010000000
000001010001100001111111000000000
000001001010100001111110000010000
000010001100100100111110000100000
000010010010001100111110010000000
000100001100100010111111000000000
000100010001001001111110000010000
000100100001010100111111000000000
000001100010100100111110000000100
000001100100100010111110000000100
000001010001001100111111000000000
000100001001001010111110001000000
000001100100010100111110000100000
000010010001010100111110000000010
000010001001001100111110001000000
000001001010001100111110001000000
000001010100001001111110000100000
000010001001100001111110000100000
000001010100001001111110001000000
000100100001100010111110000000010
000001010010100010111110000100000
000001010100010010111110000000001
000001001010100001111110100000000
000001001001100010111110100000000
000010001010010100111110000100000
000100100100001010111110000000100
000100010001001001111110000100000
000100001010001001111110010000000
000001001100010001111110000100000
000010100010010001111110000001000
000001010100100100111110000010000
000100001100100010111110100000000
000001100001010001111110000010000
000001001001010100111110010000000
000100001001010001111110000000010
000100100001010100111110000100000
000001100010001001111110010000000
000010001001100001111110000000001
000001001001100010111110000000100
000001001100010001111110000000100
000100010010010001111110000000100
000010100001001001111110000000010
000010010010001100111110000000100
000001001010100001111110000000010
000010100010010001111110000000001
000001010100001001111110000000010
000010100100100001111110000000100
000001001001010100111110000000100
000010001100001001111110000000100
000001010010100010111110000000001
000010001100010010111110000000001
000100100100010001111110000001000
000100001100010100111110000010000
000001010100001001111110100000000
000100010100001100111110000000001
000001010100100100111110000100000
000001100001001010111110000000001
000001010010010100111111000000000
000001100010010010111110001000000
000100010001001001111110000001000
000010001001001100111110000000100
000001100010010010111110000000100
000001001010001100111111000000000
000100001010100100111110010000000
000010001001100001111110000001000
000001100001010001111110000000001
000001001001010100111110000100000
000001001010001100111110000001000
000010001100010010111110000100000
000001100001001010111110000010000
000100100010001100111110100000000
000001100100010100111111000000000
000001100001010001111110001000000
000100001001010001111111000000000
000100010001100100111110000100000
000100100100001010111110010000000
000001100010010010111110000010000
000001001010001100111110000010000
000001001100010001111110100000000
000010001001001100111110000000010
000100001010010010111110000000010
000001010010010100111110000000001
000001001100001010111110000000010
000010010001100010111110000000010
000001010100010010111110000001000
000100010100001100111110000010000
000100001010001001111110000000001
000100100100010001111110001000000
000010001010100010111110010000000
000100010001001001111110000000100
000010001100100100111110000000010
000010100010001010111110000000001
000010001100010010111110100000000
000100001001010001111110000000001
000010010001010100111110001000000
000001100010100100111110100000000
000001100100100010111110001000000
000100100010100001111110000010000
000100100001010100111110000010000
000100001010010010111110000000100
000010001100100100111110001000000
000100001010010010111110001000000
000010010100001010111110000100000
000001001001100010111110000001000
000010100100001100111110000000010
000010100010001010111110000000100
000010001100100100111110000001000
000001010010100010111111000000000
000010001010100010111110000000100
000100010001010010111110000000001
000100010100001100111111000000000
000100001010100100111110001000000
000010001010010100111111000000000
000010001100010010111110000000010
000001100001010001111110000000100
000010100100001100111111000000000
000001100100010100111110000000001
000100100001100010111111000000000
000001100100010100111110010000000
000010001010100010111111000000000
000001100001001010111110000001000
000001100010010010111110000000010
000100010100001100111110001000000
000100010100100001111110100000000
000100010010001010111110000000010
000010010100001010111110000010000
000100001001001010111110000000001
000010001100001001111110000000001
000010100010001010111110010000000
000001001100001010111110000001000
000001100010100100111110000000001
000100010001001001111110000000010
000001010100100100111110001000000
000010010010001100111110000001000
000100100100010001111110000100000
000001100010010010111110000100000
000100001010001001111110000000100
000001010001100001111110000000100
000010010001010100111110000001000
000100001010001001111110000001000
000010010100001010111111000000000
000010001010010100111110000001000
000010010010001100111110000100000
000010100100001100111110000100000
000100100001100010111110000001000
000010010100010001111110000010000
000100001010010010111110000100000
000100010010010001111111000000000
000100100010001100111110000010000




=== State Orbit 22 =====================
size : 360
repr state: 000100100010010000111100000010000
lex min decimal: 21932062920218546367671
states:
000000010010100100011110010000000
000001001000010010110110000001000
000100100001001000111100000010000
000100000001100001101110010000000
000100010010100000111100000100000
000001001000100100110110000000100
000010010000100100110110000100000
000001100000001100110110000001000
000001010010001000111100010000000
000100010000100010110110000100000
000010100000100010110110000000001
000010001000010001110110000000001
000001010001000010111010000001000
000001100100001000111100000100000
000000010010100100011110001000000
000010001000010001110111000000000
000010000100010100101110000000010
000001100000001100110111000000000
000001000001010010101110010000000
000000010100100010011110100000000
000000001010001010011110000010000
000000010100010100011110000010000
000010010100100000111100000000010
000000010001001010011111000000000
000100001100000001111010000000001
000010010001000001111010000010000
000000010001010001011110000010000
000000010001001010011110000010000
000010010001001000111100000000010
000001001100000100111010000001000
000100100010000010111010000001000
000010010100100000111100000100000
000001001000100100110110000001000
000001100001100000111100000010000
000010001001000010111010100000000
000010000001001010101111000000000
000000001010001010011111000000000
000100100000010010110110000000100
000010100010100000111100000000001
000010000001001010101110000000100
000100001000001100110110000000001
000010001000001010110110000000001
000000100010010100011110000010000
000100100000010010110110000100000
000001000010001010101111000000000
000100010010100000111100000000010
000010100100010000111100000000010
000001001010010000111100000000100
000010000010001001101110000000100
000001001010010000111100000010000
000010100000010100110111000000000
000010000100010100101111000000000
000000100100010010011110001000000
000001010001010000111100000000100
000001100100001000111100000000001
000000010001001010011110100000000
000100001001100000111100000000010
000010000001001010101110100000000
000000001100001100011110000010000
000100000010010100101110000000010
000001100100000001111010000000001
000010001001010000111100000000001
000001000100001100101110000000010
000010001010001000111100000000100
000010001010000001111010000001000
000001001010000010111010000001000
000000100010010100011110000100000
000100010010100000111100000000001
000000010010001001011110010000000
000001000001010010101110000001000
000100000100001001101110000001000
000000001010001010011110010000000
000000001001010010011110010000000
000010000100100010101110000000010
000001010000010001110110001000000
000010000100100010101110100000000
000001100000100001110111000000000
000010100000010100110110000000001
000100001001000100111010100000000
000100100001001000111100000000010
000000010001010001011110010000000
000100001100001000111100000000100
000001010001010000111100000000001
000000100100010010011110010000000
000100001000001100110111000000000
000001010000001010110110000100000
000000001100100001011111000000000
000100001000001100110110001000000
000000100001001100011110100000000
000100010000100010110110000000001
000100000001001100101110000000100
000010010100000100111010000001000
000001100001100000111100010000000
000010100100000010111010100000000
000010010000001001110110001000000
000100100001001000111100000000100
000010100010000100111010000001000
000100100010000010111010000010000
000100001100000001111010000010000
000010001010000001111010000010000
000010001010001000111100000010000
000001010000010001110111000000000
000001000010001010101110010000000
000100010010000100111010000000001
000001100000001100110110000100000
000001001000010010110110000100000
000001010010000001111010000000001
000100100000001001110110000100000
000001010001000010111010100000000
000100000010010100101110000000100
000000001001100100011110000100000
000001010001010000111100000010000
000100000010100010101110000000010
000100001001100000111100000000001
000010001000001010110110001000000
000001010000001010110110000001000
000001000010010001101110100000000
000100100001001000111100000100000
000100010100010000111100010000000
000001001000010010110110000000100
000000001010010001011110100000000
000001010001000010111010000000001
000100000001100001101111000000000
000100000001001100101110000000010
000000001001100100011110001000000
000001010000001010110111000000000
000001010010001000111100000000001
000100000001100001101110000001000
000000100100001001011110010000000
000000010100100010011110000010000
000000001100001100011110001000000
000000100100001001011110100000000
000010100010100000111100010000000
000001001010000010111010000010000
000100000100010010101110010000000
000000100001001100011110000010000
000001100000100001110110001000000
000010001001000010111010000000001
000010010100000100111010001000000
000000100010100010011110000010000
000100010010000100111010001000000
000010000100100010101111000000000
000010000010001001101110000001000
000010000001010001101111000000000
000010000100100010101110000000100
000001100001000100111010000010000
000000010100100010011111000000000
000010100100000010111010000000001
000100100010010000111100000010000
000010010100000100111010000010000
000010001001000010111010001000000
000001000001010010101110000000100
000000100100010010011110000100000
000001010010000001111010100000000
000000100100001001011110001000000
000100000010010100101110100000000
000000100001001100011110000100000
000010000001010001101110000001000
000000001010010001011111000000000
000100001100000001111010100000000
000001010010000001111010000000010
000100010010100000111100010000000
000001100000100001110110000000100
000010000010100100101110010000000
000010001010000001111010000000001
000010001001010000111100010000000
000001010010001000111100000100000
000001000010010001101110000000100
000001010000001010110110000000001
000001000001100100101110010000000
000000001100001100011110010000000
000100010100010000111100000010000
000001100000001100110110000000001
000001010001000010111010000010000
000100010010000100111010000000010
000000100010010100011110100000000
000000010010001001011110001000000
000100100001000001111010000010000
000010000010100100101110100000000
000000100010100010011111000000000
000001001100100000111100000000010
000000010100010100011110010000000
000001100100000001111010000000010
000001000010001010101110000001000
000100001100001000111100000000001
000001010001010000111100010000000
000100100010010000111100000000010
000100100010000010111010000000010
000000100010010100011111000000000
000010100010100000111100000000100
000010000100010100101110010000000
000100100001000001111010000000010
000100001000001100110110000000100
000000010010100100011110100000000
000100100001000001111010001000000
000100010010000100111010100000000
000001000100001100101110010000000
000010100100010000111100000100000
000100000010100010101111000000000
000001000100100001101110000000100
000000001010010001011110000010000
000010010001001000111100000100000
000100010100000010111010000001000
000010001000010001110110000001000
000001000010001010101110000000010
000000010100010100011111000000000
000001001100100000111100000010000
000100100010010000111100000100000
000010010000001001110110000001000
000001100001000100111010000001000
000010100100010000111100000000001
000100001000100001110110000000001
000001000001100100101110100000000
000000001010010001011110000100000
000010000001001010101110000000010
000010010100100000111100000000100
000010100000010100110110000001000
000001000100001100101111000000000
000000001001100100011110010000000
000100100010010000111100000000100
000010100100000010111010000000010
000010100000100010110110001000000
000010001010001000111100010000000
000000001100100001011110000100000
000100001001100000111100000100000
000100001001100000111100010000000
000010100010000100111010000000001
000010100100010000111100010000000
000100010000010100110110001000000
000100000010100010101110000001000
000001010010001000111100000000010
000001000001100100101110000000100
000100100000001001110110000000100
000001001000100100110110000100000
000010000010100100101110000001000
000001000100100001101111000000000
000100100000001001110110000001000
000000001100100001011110000010000
000000010001010001011111000000000
000100000001001100101111000000000
000010000010001001101110010000000
000000010100100010011110000100000
000001001100000100111010001000000
000000001010001010011110001000000
000100100000001001110110001000000
000000100001001100011111000000000
000010100000100010110111000000000
000010100010000100111010100000000
000100010100000010111010100000000
000100010000010100110110000000001
000000001100001100011111000000000
000100000100010010101110100000000
000100010000010100110111000000000
000010000010100100101110000000100
000000001001010010011110000100000
000010000001010001101110000000010
000100100010000010111010001000000
000010010001000001111010000000010
000010001010000001111010100000000
000001100000100001110110000000001
000100010000100010110110000001000
000001100100000001111010001000000
000001100100001000111100000000010
000010001000010001110110000100000
000100010000100010110111000000000
000100001001000100111010001000000
000100010100000010111010000000001
000001010000010001110110000000001
000010010100000100111010000000010
000001001000010010110110001000000
000001000100100001101110000000010
000010100100000010111010001000000
000010001000001010110110000000100
000001001100100000111100000000100
000001000001100100101110000001000
000010100010000100111010000010000
000001001010010000111100000100000
000000100001100001011110010000000
000001001100100000111100000100000
000010010001001000111100000010000
000000100001100001011110001000000
000000001001010010011110001000000
000010001000001010110111000000000
000001100100001000111100010000000
000000100010100010011110001000000
000000010010001001011110000100000
000010100000100010110110000000100
000100000100010010101110000001000
000001001010000010111010000000010
000100001100001000111100010000000
000000100001100001011110000010000
000100100000010010110110001000000
000010001001010000111100000100000
000100010100010000111100000000001
000001000010010001101111000000000
000010010001001000111100000000100
000000100001100001011111000000000
000000100100010010011110100000000
000010100010100000111100000010000
000100000001001100101110100000000
000100000100010010101110000000100
000010010001000001111010001000000
000100001100000001111010000001000
000010010001000001111010000001000
000100000100001001101110100000000
000001010000010001110110000000100
000010010000001001110110000100000
000010010000100100110110000000100
000100010100010000111100000000100
000100001001000100111010000000001
000001000100100001101110100000000
000001000100001100101110000001000
000000001100100001011110100000000
000100000010010100101111000000000
000100000010100010101110010000000
000001001100000100111010000010000
000010100000010100110110000100000
000001100001100000111100000000100
000100001001000100111010000000010
000010010000100100110110000001000
000010001001010000111100000000010
000100100001000001111010000001000
000100001100001000111100000010000
000100001000100001110110000100000
000010001010001000111100000000001
000000100100001001011110000100000
000010001001000010111010000000010
000000010001001010011110000100000
000010000100010100101110000001000
000100000001100001101110000000010
000001000010010001101110000000010
000010010100100000111100000010000
000000010010100100011110000100000
000001010010000001111010001000000
000001000001010010101110100000000
000000001001010010011110100000000
000000010100010100011110001000000
000001100100000001111010100000000
000100010100000010111010000010000
000000100010100010011110010000000
000001001000100100110110001000000
000010000001010001101110010000000
000100010000010100110110000000100
000100100000010010110110000001000
000100000100001001101110010000000
000001001010000010111010001000000
000100001000100001110111000000000
000001100001000100111010100000000
000000001001100100011110100000000
000001100001100000111100000000001
000100000100001001101110000000100
000001001010010000111100000000010
000000010010001001011110100000000
000010010000001001110110000000100
000100001000100001110110000001000
000010000010001001101110100000000
000000010001010001011110001000000
000001001100000100111010000000010
000001100001000100111010000000001
000010010000100100110110001000000




=== State Orbit 23 =====================
size : 360
repr state: 000100100010010001111110000010000
lex min decimal: 175501173556853358292151
states:
000010001001100100111110001000000
000001001100100010111110000000100
000001010100010001111111000000000
000100001001010010111110000100000
000100001001010100111110000000010
000001100010100010111110001000000
000100001100010010111110000001000
000100100001010001111110000010000
000010100100001010111110100000000
000001100001100010111110000010000
000010010100100001111110000000100
000100010001010001111110001000000
000001010100100010111110000010000
000010100001001010111110100000000
000001100001010010111110000000100
000100001001010100111110100000000
000100010100010001111110010000000
000010100100010001111110000000010
000001001100010100111110000010000
000010100001001100111110000100000
000100001100010010111110010000000
000001010100010100111110001000000
000100100010001001111110000100000
000010001100100010111111000000000
000100010010001001111110010000000
000100001010100010111110000000010
000001010010100001111110001000000
000100010001001100111110000000100
000100001001010100111110000000001
000100010001100010111111000000000
000010100010001001111110000000100
000010001001010100111110010000000
000100100010010001111110000100000
000001010100001100111111000000000
000100010100001001111110100000000
000010001001010100111110000100000
000010100100010001111110000100000
000010010001100001111110000001000
000100010010001001111110100000000
000010001010100100111110000000100
000100001010010100111111000000000
000010100100001001111110001000000
000010001100001010111110000000001
000010100100001001111110100000000
000001100010010001111110000000010
000010010001100001111110000010000
000100001010010001111111000000000
000001100010001100111111000000000
000010010100001100111110000010000
000100100001001010111110000000010
000001100001010100111110000001000
000001010010100100111110001000000
000001100010001010111110000000010
000001001100100010111110000000010
000100100010001010111110000010000
000001001100010010111110000001000
000010001100001100111110000010000
000001010001100010111110000010000
000010100001010001111110000000010
000100001100010010111110100000000
000100100010001001111110000001000
000010001001100010111110000000001
000001100001100010111110000000001
000010001010100100111110000001000
000100001001100010111110000000010
000100100001010001111110001000000
000001001100010010111110001000000
000100010100001010111110000001000
000001001100100010111110000010000
000100010100010001111110000010000
000100010100001001111110000001000
000010100100001010111110000000001
000100010001010100111110000000001
000001010100001010111110000000001
000001100010001010111110000001000
000010100001001100111110000010000
000001100010010100111110000010000
000010001100100010111110000000010
000010100001010001111111000000000
000001010100001100111110000001000
000010100010001001111110000001000
000100010010001001111110001000000
000100010001100001111111000000000
000010001010100100111110100000000
000100001001100010111110010000000
000100010100010001111110000000001
000010100001100001111110000010000
000100001100001010111110000000001
000001010100001010111110000001000
000010001100001010111110000000100
000001010010100001111110000000010
000010100001100010111111000000000
000001100100010001111110100000000
000010001001010100111110000000010
000010001100100001111111000000000
000100010100001001111110000000100
000010001100010001111111000000000
000100010100001010111110000010000
000001100010100001111110000000001
000001100100010010111110000100000
000010001100001010111111000000000
000010001001100100111110100000000
000001001010010100111110000010000
000010100010100001111110010000000
000100100001001010111110000000100
000100010001010001111110010000000
000100100001010001111110000001000
000100001010100001111110000001000
000010010001100001111110000000010
000010100100010001111110010000000
000100100001010001111110000000010
000001010001100100111110010000000
000100010010001100111110000000010
000001100010100010111111000000000
000001100010001010111111000000000
000010100010001001111110100000000
000010100001001010111110000000100
000100010010100001111110000100000
000010010001100100111110001000000
000001010001100010111110000001000
000001001010010100111110000000100
000010100001100010111110000000100
000010001010100001111110100000000
000010001100100001111110000010000
000100001100001010111110010000000
000100100010001010111110000001000
000010010100001100111110001000000
000010100001100001111110001000000
000100010001001010111111000000000
000001010100010100111110010000000
000100010100010001111110000000100
000100001001010100111110001000000
000001010100001100111110010000000
000010100001010001111110010000000
000001100010001100111110000000001
000001100010010100111110100000000
000010100001001100111111000000000
000100001010001010111110010000000
000100001100010010111110000000100
000010010001001100111110000010000
000100010001010100111111000000000
000001010100001010111110000100000
000010001100010100111111000000000
000010001001100010111110000000010
000001100100001010111110000000001
000010001100010100111110010000000
000010001100010100111110000000010
000010010100001100111110000001000
000001010100100001111110000000100
000100001010100001111111000000000
000001010001100100111110000000100
000100100001010010111110000001000
000001100001010100111110100000000
000010100001001100111110100000000
000010100010100001111110000000001
000001001010100100111110000100000
000100010010001100111110100000000
000010010001100100111110000100000
000100100010010001111110000000010
000010100010001100111110100000000
000010001001010100111110000000001
000001100010100010111110010000000
000010100010001001111110010000000
000001100010010100111111000000000
000100010010100001111110000000001
000100010001100001111110010000000
000010100010001100111110000001000
000001010001100100111110100000000
000010100100001010111110000000010
000100010100001001111110010000000
000100001100010001111110100000000
000100010001001100111110100000000
000100010010100001111110010000000
000100010001001010111110000010000
000001001100010010111110000000100
000100001100010001111110000001000
000001010001010100111110010000000
000001010001100010111110000000001
000010001010001100111110000000100
000001100001010100111110000000001
000001100010001100111110000001000
000001100010100010111110000010000
000001100100001010111110000000010
000010001001100100111110000100000
000001001100010100111110000001000
000100010010001100111110001000000
000001001010100010111110000001000
000010100010100001111110000010000
000001100100001010111110000100000
000100010001001100111111000000000
000100001010001100111110000000100
000100001001100010111110000000001
000010100001001010111110000000010
000100100010001001111110000000100
000001001100010100111110000000010
000100001001010010111110010000000
000100001010100010111110000001000
000010001100001100111110001000000
000010100010001100111110000010000
000100001010001010111110001000000
000010001010100001111110000000001
000010001100010001111110000001000
000100001010100010111111000000000
000100010001100001111110000000010
000001100010100001111111000000000
000001100001010010111110010000000
000001100010010001111110000000100
000100010001010100111110000000100
000010100001001010111111000000000
000100001010001010111110000010000
000010001100100010111110100000000
000001010001010100111110000000001
000001010100100001111110100000000
000001001010010100111110000100000
000100010001001010111110100000000
000100010001100010111110000001000
000001010100010001111110001000000
000001001010100010111110000010000
000100001001010010111110100000000
000010100100010001111110000000001
000001100100010001111110001000000
000001100100010010111110001000000
000100100010010001111110000000100
000100100001010010111110000000100
000001100100010010111110100000000
000001001010010100111110000000010
000010010001100001111110001000000
000100001010100001111110000100000
000010100001100001111111000000000
000100100010001010111110000000010
000100010100001010111110100000000
000010001100001100111110010000000
000100001100001010111110000000100
000001100001010010111110100000000
000010100001010001111110000001000
000001001010100100111110000000100
000010001100100010111110000000100
000010010001001100111110000000100
000001010001010100111110000000100
000100010001001010111110000100000
000100010001010001111111000000000
000100100001001010111110000010000
000001001010100010111110000000010
000001010001100100111110000001000
000010010100001001111110000100000
000010010100100001111110000000010
000001100010100001111110001000000
000010100010100001111110000000100
000010001010100100111110010000000
000001100100001010111110010000000
000001100001010010111110000001000
000010100001100001111110010000000
000001010010100100111110010000000
000001100100010001111110000000010
000100001010100010111110010000000
000010100001100010111110000000001
000001010010001100111110000100000
000010010100001001111110000001000
000100010010001100111110000000001
000010010100100001111110000100000
000001100001010100111110000010000
000010001010100001111110000001000
000100001010001100111110001000000
000010010100001100111110000000010
000010100100001010111110001000000
000100001010100001111110000000001
000010001001100010111110001000000
000001100100010010111110010000000
000001001010100100111110001000000
000010100100001001111110000100000
000100001010010100111110100000000
000001010100100001111111000000000
000010001010001100111110000000001
000001001010100010111110001000000
000010001100010001111110000000001
000010100010001100111110000000001
000010001100100001111110100000000
000001010100010001111110000000100
000010001100010100111110000001000
000001010100001010111111000000000
000010001010100001111110000010000
000100001010010001111110100000000
000010100001010100111110000000001
000010010001001100111110000000010
000001010010100100111110100000000
000001100010100001111110000000100
000100001010001010111111000000000
000010010001100100111110000001000
000001010001010100111110000010000
000010100001010100111110000001000
000001100001100010111110000000100
000010001100001100111111000000000
000001100010010100111110000100000
000001010100100010111110100000000
000100010001100010111110000000001
000001010100100001111110000000010
000010001010001100111110010000000
000010010100100001111110000010000
000001010010100100111110000100000
000100100001010010111110001000000
000100001001100010111110000100000
000100001010010001111110000010000
000010100001010100111110000100000
000100010010100001111110000000010
000100010001100001111110000001000
000001010100010100111111000000000
000001100010001100111110000100000
000010100100001001111110010000000
000100100010010001111110000010000
000010001001100010111110100000000
000010010100001001111110000000100
000100010001010001111110000010000
000100010001001100111110000000010
000010010001001100111110000100000
000001100010010001111110100000000
000100100001001010111110000100000
000100100010001010111110001000000
000001010100100010111111000000000
000001100001100010111110010000000
000001100010010001111111000000000
000001010100010100111110000010000
000010010100001001111110001000000
000100001100010001111110000000001
000001001100010010111110000100000
000100100010001001111110001000000
000001100010001010111110010000000
000100001010010100111110000000100
000001010010001100111110000000001
000100001010010001111110000100000
000001001010100100111110000001000
000100010001010100111110001000000
000010001100010001111110000100000
000100010100001010111110000000001
000001010010001100111110000000010
000010001001100100111110010000000
000100001010001100111111000000000
000100100001010010111110000100000
000100010010001001111110000100000
000100001010001100111110000000001
000001010100001100111110000000010
000100010001100010111110000100000
000010001100001010111110001000000
000001001100010100111110001000000
000100001001010010111110001000000
000100001100010001111110000010000
000001010010100001111110000000001
000010001010001100111110000010000
000001010010001100111110010000000
000010100001100010111110001000000
000001001100100010111110000100000
000010100001010100111111000000000
000001100100010001111110000000001
000010010001100100111110000000100
000001010100010001111110000000001
000100001100001010111110000010000
000001010100100010111110000100000
000001010001100010111110100000000
000010001100100001111110000100000
000100001010010100111110000000010
000001010010100001111110100000000




=== State Orbit 24 =====================
size : 720
repr state: 000100100010001000111100000010000
lex min decimal: 22005849896513384574135
states:
000010001000100001110110000000001
000100000100001010101110010000000
000001000100010001101110000000010
000100001010000100111010000000010
000000010001100001011110001000000
000000001100100010011110100000000
000000001010100010011110001000000
000100010001001000111100000100000
000001010100010000111100000000001
000010100000001010110110000000100
000100000010001010101110000000010
000001100010000001111010001000000
000000100100001010011110100000000
000100010000100001110110000001000
000000100010010001011110100000000
000010000100100001101111000000000
000001100001000010111010000001000
000001000010100001101110000000100
000010010100001000111100000100000
000010001010100000111100000010000
000001010000010100110111000000000
000010100000001010110110001000000
000000001010001100011111000000000
000010001000100100110110000100000
000100010100001000111100010000000
000100000010001001101110100000000
000000001010100100011110010000000
000010001100000100111010000001000
000010000100001010101110000000100
000100001001000010111010000000010
000001100000001010110110000100000
000100001010100000111100000100000
000100000001001010101110000000100
000001010100001000111100000000010
000100001000010010110110000001000
000010010100001000111100000000100
000010010000001100110110000100000
000001100010010000111100000100000
000100001010010000111100000000010
000010000001001100101110100000000
000000001100010001011110100000000
000000100001001010011110100000000
000010010001100000111100000000100
000000001100010010011110010000000
000100010001010000111100000000100
000001100010001000111100010000000
000000100010001001011110010000000
000100010001010000111100000010000
000001000010100100101110010000000
000100001001000010111010000000001
000010001100001000111100000010000
000001100000010001110110000000001
000001100100010000111100010000000
000100001000010001110110000100000
000000010100100001011110000010000
000001000010100010101110000001000
000010001100000001111010100000000
000000001001010100011110000100000
000000100001100010011110010000000
000000100001010010011110001000000
000100000010001100101110000000010
000010000001100001101110000001000
000000001100001010011110000010000
000001010000100010110110000100000
000000001010001100011110001000000
000000010001100001011111000000000
000000100010001010011110001000000
000010100100000001111010000000001
000010001001100000111100010000000
000100100010001000111100000010000
000001010000010100110110001000000
000100001100010000111100010000000
000100100000001010110110000000100
000001001010000100111010000001000
000010010100000001111010001000000
000001001000010100110110000001000
000001000010100100101110100000000
000100100000010001110110000000100
000001010000010100110110000000100
000100010100001000111100000000001
000100010100000001111010100000000
000100010000010001110110000000100
000010100001010000111100000000010
000001000001010100101110000000100
000000001001100010011110001000000
000001010100000010111010100000000
000010000001100001101111000000000
000001001000010100110110001000000
000001100010100000111100010000000
000001000100010010101110100000000
000010001100010000111100000100000
000001010010100000111100000100000
000010100001000100111010000000001
000001010100100000111100000010000
000100010100001000111100000010000
000100010001100000111100000100000
000010000001100100101110010000000
000000001010010100011110100000000
000100000001100010101110010000000
000010100100001000111100010000000
000000010100010001011110001000000
000010010001000100111010000001000
000001001100000010111010001000000
000100010001000001111010000000010
000000100001001010011110000100000
000010100001000001111010001000000
000010100001100000111100000000100
000010000100001001101110100000000
000100001000010010110110001000000
000001001100010000111100000100000
000100010000001001110110001000000
000100000010010001101110000000100
000001100010001000111100000000001
000001000100001010101110000001000
000010000100001001101110000000100
000001010000010100110110000000001
000010100000001100110110000100000
000000100100010001011110100000000
000010001000001100110110000000001
000100010001000100111010000000010
000000010100001001011110000100000
000100001100010000111100000000001
000010001000100010110111000000000
000100100000001010110110000100000
000000100001001010011111000000000
000100000100001010101110000000100
000010100001001000111100000100000
000100001000010100110111000000000
000100010000010001110110000000001
000001010000100010110110000001000
000100000010100001101111000000000
000010000001100001101110000000010
000010100001000100111010000001000
000100010001100000111100000000010
000001010000100100110110000000100
000100001000100010110110000100000
000010001100001000111100000000001
000000001100010001011111000000000
000100001010000010111010000001000
000100000001010001101110000001000
000000010100001001011110001000000
000001100010000100111010000010000
000000010100001010011111000000000
000000100001010100011110000010000
000010100000001100110111000000000
000100010001000010111010000000001
000001000010001100101111000000000
000001010100001000111100000100000
000010000100100001101110000000010
000010000010100001101110000000100
000100000010010001101111000000000
000001100000010100110110000000001
000010000100001001101110000001000
000010000001100100101110000000100
000010001000001100110111000000000
000010001001100000111100000000001
000100000001010010101110000001000
000001001000100010110110000100000
000100001000001010110110001000000
000001001000010100110110000100000
000100010001000100111010001000000
000010000001001100101110000000100
000100010100001000111100000000100
000100000001001010101110000000010
000001100001010000111100000000100
000000001010100100011110000100000
000000010001010100011110000010000
000100010010001000111100000000010
000000001010100001011110000010000
000010100001010000111100000000001
000000001100010010011110100000000
000100000001010100101111000000000
000001010100100000111100000000010
000100000010010001101110100000000
000000001100100010011110000100000
000001010000100100110110000100000
000000001100010100011110000010000
000010100000001001110110000000100
000100001010001000111100000000100
000001010001000100111010000010000
000001000001100010101110100000000
000100010001010000111100000000001
000000010100010001011110010000000
000100000001010100101110000000100
000000010001100001011110010000000
000001100010100000111100000000001
000001010000100010110111000000000
000010100000100001110111000000000
000100010001000100111010000000001
000100100010001000111100000000010
000100010100000001111010000000001
000100010000100001110110000000001
000100000001010001101110000000010
000010010001000100111010000000010
000001100100010000111100000100000
000010001001000100111010001000000
000010100010000001111010000000001
000010100010000001111010100000000
000100100000010001110110000100000
000000100010100001011111000000000
000001000100100010101110100000000
000100001001010000111100000000001
000010001100000010111010000000001
000100001000010100110110001000000
000100001010001000111100000010000
000100000001001010101110100000000
000010010000001100110110000001000
000010100010000001111010000010000
000001100000001010110110000001000
000100100010000001111010000010000
000000010100001100011110010000000
000001001100000010111010000010000
000001010100000100111010000000010
000010001100010000111100010000000
000010100001000010111010100000000
000001000100010010101110000000100
000001010100000010111010000010000
000100001010000100111010000000001
000000100010100001011110000010000
000100010001000100111010100000000
000100001000010001110110000001000
000010010001000100111010001000000
000100000010010001101110000000010
000001010001100000111100000010000
000010100001000010111010000000001
000001010001000100111010100000000
000001010100010000111100000010000
000000001100010001011110000100000
000000100001010100011110100000000
000100001001010000111100000100000
000100010001001000111100000000010
000001100001000010111010100000000
000001010010000100111010000000001
000100010001000001111010001000000
000000001100010001011110000010000
000000010001100010011110000010000
000010000010001100101110000000100
000100001010000100111010100000000
000010000001010100101110000001000
000100000100001010101110000001000
000000001001100010011110010000000
000100010000001001110110000001000
000100001000100010110110000001000
000000100010001100011110000100000
000001001000100010110110000001000
000001000001100010101110010000000
000000010001100100011110010000000
000100001010000010111010000000010
000000001100010100011110001000000
000010001000100010110110000000100
000100001000010001110110000000001
000100010001010000111100010000000
000000100100010001011110001000000
000001100010010000111100000010000
000100000010001100101111000000000
000100010000001010110110000000001
000001100100000010111010100000000
000010100001000100111010100000000
000000010100010001011110000010000
000001100010000010111010000000010
000001000010100001101110100000000
000010010000100001110110000100000
000000100001010001011110010000000
000000100010001001011110000100000
000000010001001100011110100000000
000001100000010100110110000001000
000010001000010100110111000000000
000100001000001010110111000000000
000100100010000001111010001000000
000001100000100010110110000000001
000001100000100010110110000000100
000000010001100100011110001000000
000010100000001010110110000000001
000100001010001000111100010000000
000000100001100010011110001000000
000000010001100010011110000100000
000001010100001000111100000000001
000010010100001000111100000000010
000100100000001010110110000001000
000001001010000100111010000000010
000100001010010000111100000000100
000000010001100010011111000000000
000001100000010100110111000000000
000001100010100000111100000000100
000010100001000001111010000000010
000001000100010100101111000000000
000010001100001000111100000000100
000100001010100000111100010000000
000001100000010001110110001000000
000010001010100000111100000000001
000001001010100000111100000000100
000100000010001010101111000000000
000000100001010001011110000010000
000100100001000010111010000000010
000000100010100001011110010000000
000001010100000100111010000001000
000010100010001000111100010000000
000001001000100010110110001000000
000001010000100001110110001000000
000000001010100010011110010000000
000001000100010001101110000000100
000001000100100010101110000000100
000010000001100010101110000000010
000000100010001001011110100000000
000010100001010000111100010000000
000010001000010100110110000100000
000010100010001000111100000000100
000010000001100010101110000000100
000010000100001010101111000000000
000000100001010100011111000000000
000001100010000001111010000000010
000010000100001010101110000000010
000001000010001100101110000000010
000000100010010001011110000010000
000001001000010100110110000000100
000001100010001000111100000000010
000000010010100001011110010000000
000000100010001010011110010000000
000100000100001010101110100000000
000001000010010100101110100000000
000001010001100000111100010000000
000001000100010100101110000000010
000001001010000100111010000010000
000100000001010001101111000000000
000010000001010100101111000000000
000010001100100000111100000100000
000001000100010001101110100000000
000010000100010001101110000000010
000000010010001100011110100000000
000001100010000001111010100000000
000001000001010100101110010000000
000010000001100100101110100000000
000001000001100010101110000001000
000010000100010001101111000000000
000010100010000001111010000001000
000100100001010000111100000000010
000001100100000010111010001000000
000000010001010100011110001000000
000100010001000010111010000001000
000010001010000100111010000000001
000010000010001100101110100000000
000000001001010100011110100000000
000001100100010000111100000000001
000010100000100001110110000000001
000001000001010100101110000001000
000001010100000001111010000000001
000100010010000001111010100000000
000001100000010100110110000100000
000100001000001010110110000000100
000100010001000001111010000001000
000001000010100001101110000000010
000000100100010001011110000100000
000000001010100001011110100000000
000010001010100000111100000000100
000000100001010100011110000100000
000100000001100010101110000000010
000001001010100000111100000100000
000001001010000100111010001000000
000000001100001010011111000000000
000001010001000100111010000001000
000000010001010100011110010000000
000100000100010001101110010000000
000001000010010100101110000000010
000010100000001001110110000001000
000000100001010010011110000100000
000010001010000100111010100000000
000001100100010000111100000000010
000001000010001100101110000001000
000100000001010100101110000000010
000100100000010001110110001000000
000001000010010100101110000000100
000100001000100010110110000000001
000000010001100100011110100000000
000100000100010001101110100000000
000010001100000010111010001000000
000010001000100100110110001000000
000100001100010000111100000000100
000100010001100000111100000000001
000000100010001100011110000010000
000010000010001100101110000001000
000001010100100000111100000000100
000001100100000010111010000000001
000001100000010010110110000000100
000001100000010001110110000000100
000010000100001010101110100000000
000100001010010000111100000010000
000010001100100000111100000010000
000000001001010100011110001000000
000000100100010001011110010000000
000010001000100100110110000000100
000000001010010100011110000100000
000000010010100001011110100000000
000010001100000100111010001000000
000010010000100001110110000001000
000001000001100010101110000000100
000000010100100001011111000000000
000100001010000010111010000010000
000100001000010010110110000100000
000100000001010010101110010000000
000001100010010000111100000000100
000100001100000010111010100000000
000010100001010000111100000100000
000010010000001100110110000000100
000100001001010000111100000000010
000010001001000100111010100000000
000100001100000010111010000001000
000001100001010000111100000000001
000000010100010001011111000000000
000010000001100010101111000000000
000010000010001100101110010000000
000000010010001100011110010000000
000010010000100001110110000000100
000010001100100000111100000000010
000100001010000100111010001000000
000010100001100000111100010000000
000001001100010000111100000000010
000010001001000100111010000000010
000001010010100000111100000000001
000010001000100010110110000000001
000010010001100000111100000010000
000010001100000001111010000001000
000001000100001010101110000000010
000010001000001100110110000000100
000100010000010001110110001000000
000010000100010001101110010000000
000000100010010001011110000100000
000000001010010100011110000010000
000000010100100001011110000100000
000100001000100010110111000000000
000010001000100001110110000100000
000001000010100010101110000000010
000001010000001100110111000000000
000001010100001000111100010000000
000001001010100000111100000010000
000001000100010100101110000001000
000100010100000001111010000010000
000010010100000001111010000001000
000001100010000100111010000001000
000001010000001100110110000000001
000001010000001100110110000001000
000010100000010001110110000100000
000000010100001010011110000100000
000000100100001010011110010000000
000000010100001010011110100000000
000010001001100000111100000100000
000000001001100010011110100000000
000100001010001000111100000000001
000001010001100000111100000000100
000010100000001001110110000100000
000010100001001000111100000010000
000001010000100010110110000000001
000000010010100001011110001000000
000000010100001001011110010000000
000001010100000100111010001000000
000010001100000100111010000000010
000000100010001100011111000000000
000000010001100100011110000100000
000010010100000001111010000010000
000000100001010001011111000000000
000000001100010100011110010000000
000100100001000010111010001000000
000010001000100001110110000001000
000010100000100001110110001000000
000010001010000100111010000010000
000100100001000010111010000001000
000100010001100000111100010000000
000010000001001100101110000000010
000001100010001000111100000100000
000010100100001000111100000000001
000000100001001010011110000010000
000100100000001010110110001000000
000000001100001010011110010000000
000001100010000100111010100000000
000001000010010100101111000000000
000010000010100001101110100000000
000100001000001010110110000000001
000100000001100010101110000001000
000010001000010100110110000001000
000010000001100100101110000001000
000100100001010000111100000010000
000100100001010000111100000000100
000010100000010001110110000000001
000100001010000001111010000000001
000001100000001010110110000000001
000000001010001100011110010000000
000001000010100010101111000000000
000010100100001000111100000000010
000001000010001100101110010000000
000010001100000010111010100000000
000001001010100000111100000000010
000010100100000001111010100000000
000000001100001010011110001000000
000000001100100010011110000010000
000010001100000001111010000010000
000100000010001001101110010000000
000000010001001100011111000000000
000100001010000001111010000010000
000100010000001001110110000000100
000010010000001100110110001000000
000100001100000010111010000000001
000001100000001010110111000000000
000001001100010000111100000000100
000010100001001000111100000000010
000010000100001100101110000000010
000010000010100001101110010000000
000000010001010100011111000000000
000010001010000100111010000001000
000100010001000010111010000010000
000000001100010010011110001000000
000000100010001001011110001000000
000100010000001100110110001000000
000000100001100010011111000000000
000100000001001010101111000000000
000100001000010100110110000000001
000001001100000010111010000001000
000010001000001100110110001000000
000100100010000001111010000001000
000010010100000001111010000000010
000000010100001100011110001000000
000001010100000010111010000001000
000000001001100010011110000100000
000100000001010100101110100000000
000100010000100001110111000000000
000100100010000001111010000000010
000000010001100001011110000010000
000001000100010010101110000001000
000001100000010010110110000100000
000100000010001100101110100000000
000100010010001000111100000100000
000001010000100001110110000000100
000010001100000010111010000000010
000001010000100100110110000001000
000010100001000010111010000000010
000001000010100001101111000000000
000100010000001010110111000000000
000010001000100001110111000000000
000100000010100001101110000001000
000000100010001010011110000010000
000000010100100001011110100000000
000000001100010010011110000100000
000010100001000001111010000001000
000000001010100010011111000000000
000001001100010000111100000010000
000000010100001010011110000010000
000000010100001100011110000010000
000100000010001010101110010000000
000001100000100010110110001000000
000001000010100100101110000000100
000100001001000010111010001000000
000010001010100000111100010000000
000100001100000010111010000010000
000000100010001010011111000000000
000001100010000001111010000000001
000001010100000001111010100000000
000100100001010000111100000100000
000000010100001001011110100000000
000001100010100000111100000010000
000100000001100010101111000000000
000100010010000001111010000000010
000010000100010001101110000001000
000100001001010000111100010000000
000010100001001000111100000000100
000001010100000001111010000000010
000001010100100000111100000100000
000100000010001010101110000001000
000100010001001000111100000000100
000100000001010001101110010000000
000010000010100001101110000001000
000000010010001100011110001000000
000001100100000010111010000000010
000100010000001100110111000000000
000010000100001100101110010000000
000010010100001000111100000010000
000001010010000100111010000000010
000001010000001100110110000100000
000001000100001010101111000000000
000100001010000001111010100000000
000100000010100001101110010000000
000000010001001100011110000100000
000100000001010010101110000000100
000010100000010001110110000001000
000001010100000100111010000010000
000001100001010000111100010000000
000100001000010001110111000000000
000001010001100000111100000000001
000010001100010000111100000000010
000000100001010010011110100000000
000010001100000001111010000000001
000010010001000100111010000010000
000100010100000001111010000001000
000100010010000001111010000000001
000010000001001100101111000000000
000001010010100000111100000000010
000010001100001000111100010000000
000010100001100000111100000010000
000010100000001100110110000001000
000010001100100000111100000000100
000001010100010000111100000000100
000100001010000001111010000001000
000010100100000001111010001000000
000010100000001001110110001000000
000010100001000100111010000010000
000010001000100010110110001000000
000001100000010010110110000001000
000001010000100001110110000000001
000100010000001100110110000000100
000100010001000001111010000010000
000000100001100010011110000010000
000001000100100010101111000000000
000010000001010100101110000000010
000010100001000001111010000010000
000001100001000010111010000000001
000001010100000010111010000000001
000000010010001100011110000100000
000010000100100001101110000000100
000001000100010100101110010000000
000001010000100100110110001000000
000100010000001010110110000001000
000100000010001001101110000000100
000001100010010000111100000000010
000000001001010100011110010000000
000001000100010001101111000000000
000001010010100000111100010000000
000000001010001100011110000010000
000000100010010001011111000000000
000000010001001100011110000010000
000100001010100000111100000000010
000100001010000010111010001000000
000001000100100010101110000000010
000000001010100001011111000000000
000100100010001000111100000000100
000010000100100001101110100000000
000001100010000010111010000001000
000001100001000010111010000010000
000010001000010100110110000000001
000000010001100010011110100000000
000010100100001000111100000100000
000001100001010000111100000010000
000010000100001100101110000001000
000000100001010010011110010000000
000100010010000001111010001000000
000100001010010000111100000100000
000100000010001001101110000001000
000100000100010001101110000001000
000010010001100000111100000100000
000010000001010100101110010000000
000100000010001100101110000000100
000001010001000100111010000000001
000100010000100001110110000100000
000000100001010001011110001000000
000100010001001000111100000010000
000000001010100010011110000010000
000001100000010010110110001000000
000001000010100010101110010000000
000001100010000010111010001000000
000010100000100001110110000000100
000100001010100000111100000000001
000001010010000100111010001000000
000000100010100001011110001000000
000100001001000010111010100000000
000000100100001010011110000100000
000000010100001100011111000000000
000001001000100010110110000000100
000010100010001000111100000000001
000100100010001000111100000100000
000100010000001010110110000100000
000010100000001010110111000000000
000001001100000010111010000000010
000010010000100001110110001000000
000010100000001100110110000000001
000001010100010000111100010000000
000100010000001001110110000100000
000010000001100001101110010000000
000010010001100000111100000000010
000010001001000100111010000000001
000001100000100010110111000000000
000100001000010100110110000000100
000000100010001100011110100000000
000001010000100001110111000000000
000001100010000100111010000000001
000010100001100000111100000000001
000100001100010000111100000010000
000010001000100100110110000001000
000010000100001001101110010000000
000001010100000001111010001000000
000100010010001000111100010000000
000000001100100010011111000000000
000010001100000100111010000010000
000001010010000100111010100000000
000010100000010001110111000000000
000010100100000001111010000000010
000100010010001000111100000000001
000100010000010001110111000000000
000100001000010010110110000000100
000100010000001100110110000000001
000001000001010100101110100000000
000010100010001000111100000010000
000001000010100100101110000001000
000010000001100010101110100000000
000001100000010001110111000000000
000001000100001010101110010000000
000000001010100100011110001000000
000100000100010001101110000000100
000010100001000010111010001000000
000010001100010000111100000000001
000010001001100000111100000000010
000100000001010010101110100000000
000001000100010010101110010000000
000100010001000010111010100000000
000000010010100001011110000100000
000100100001000010111010000010000
000000100100001010011110001000000
000000001010010100011111000000000
000010000100001100101111000000000
000001100010000010111010000010000
000000001010100001011110000100000
000100100000010001110110000001000
000000001100010100011111000000000
000100000010100001101110000000010
000000001010100100011110100000000




=== State Orbit 25 =====================
size : 360
repr state: 000100100010001001111110000010000
lex min decimal: 175501180312252799347895
states:
000010001100100001111110000000100
000001010001100100111110001000000
000100001100001010111110001000000
000010001001100100111110000000010
000100001010001010111110000000010
000010010001100001111111000000000
000001001010010100111111000000000
000100100001010010111110000000010
000010010100001001111110000010000
000001100100010010111110000000100
000100001010001100111110010000000
000100100001010010111110100000000
000010001001100010111110010000000
000001001100010010111110000010000
000100010001001010111110000001000
000100010001100010111110100000000
000100001010010001111110000000100
000001100010001010111110000000001
000100010010001100111110010000000
000100001010010001111110000000010
000001001010100100111110100000000
000100010100001001111110000100000
000010100001010100111110000000010
000010100001001010111110000100000
000001100010100001111110010000000
000100010100010001111110001000000
000001010100010100111110000000100
000010001010001100111110100000000
000001010100010100111110000001000
000100001100001010111110000001000
000010001001010100111110100000000
000010010001100001111110000000100
000100100010001001111110010000000
000001010010001100111111000000000
000100001010001100111110100000000
000100100010001001111110000000010
000001010100100010111110000000001
000001010100100010111110000001000
000001100010010001111110000010000
000010100010100001111110001000000
000100010001100001111110000100000
000100001010100010111110000000001
000010001001100100111110000000100
000001100010100001111110100000000
000010100001010001111110001000000
000010100001001010111110001000000
000100001001010010111110000000001
000010100010001001111110000010000
000100001001010010111110000001000
000010100001010001111110000010000
000010010100001001111110100000000
000001010100100001111110000000001
000001010001100010111111000000000
000100010100001001111110000010000
000100100001001010111110000001000
000001100100010001111110000000100
000001010001010100111110000001000
000001001010100100111110010000000
000010010001001100111111000000000
000100001001100010111110100000000
000010100001010100111110100000000
000100001001100010111111000000000
000001100001100010111110001000000
000001010010100100111110000000010
000001010010100001111111000000000
000010100100010001111111000000000
000100100001010001111111000000000
000001100010100010111110000001000
000100100010001010111110000000100
000001100010010001111110000000001
000100001010001100111110000010000
000100001010001010111110000001000
000010001100100010111110000010000
000010001100100010111110000100000
000001100010100001111110000010000
000001010010001100111110100000000
000001010100100010111110000000010
000100010001001010111110000000100
000010001100010100111110000010000
000001010001010100111110001000000
000010100001001100111110000001000
000001010100001010111110100000000
000010001010100100111110001000000
000010100001001010111110000010000
000100100010001010111110010000000
000100001010010100111110001000000
000010001100010100111110000000001
000100100010010001111111000000000
000001100001100010111110000001000
000010100010001100111111000000000
000100001010100001111110100000000
000100001100010010111110000100000
000010100001001100111110000000100
000001010010100001111110000100000
000100010100010001111111000000000
000010001100001010111110000000010
000010010100001100111111000000000
000100010100001010111110010000000
000001010100010001111110010000000
000001010010001100111110001000000
000100100010001010111111000000000
000010100100001001111110000000010
000001100100010001111110000100000
000100001010010100111110000100000
000001100010001100111110000000010
000001010100010100111110000000001
000001100001010010111110000100000
000100010001001010111110000000001
000100010001010100111110010000000
000010010100001100111110000100000
000001100100001010111110000001000
000010010001100100111110010000000
000100001001010100111110010000000
000100100010010001111110000001000
000100100010010001111110100000000
000001100100010010111110000000001
000100010001001100111110000000001
000010010100100001111110100000000
000100100001010001111110000000100
000100001010001010111110000000100
000010001010100001111110000100000
000100001010100010111110000010000
000100100001010001111110000100000
000100010001001100111110001000000
000100001010100001111110000010000
000010001010100100111110000000001
000010100001010100111110010000000
000100001010010001111110000000001
000001100100001010111110001000000
000010100001100010111110000000010
000010100001100010111110100000000
000001001010010100111110100000000
000100001001010010111110000000100
000010001010001100111110001000000
000100001001010100111110000000100
000100100010001010111110000100000
000100010001001100111110000010000
000001100001010010111110001000000
000001100001010100111110000100000
000001100001010100111110010000000
000010100001100001111110000000010
000100010010001100111110000000100
000010100001010001111110000100000
000100100010001001111110100000000
000010010100001100111110010000000
000001100100010001111111000000000
000001100010001100111110010000000
000001100010001010111110001000000
000001010100001100111110000000001
000100001100001010111111000000000
000001001100010100111110000100000
000001100010010001111110000100000
000010100001010001111110000000001
000010001010100100111110000010000
000100010100001010111111000000000
000010010100100001111110000001000
000100001100010001111111000000000
000100010010100001111110100000000
000001010001100010111110000000100
000010100100001010111110000000100
000100010001100001111110000000001
000100001100010010111110000000001
000001010100100001111110000010000
000100010100001001111110001000000
000010010100001001111110010000000
000010010001001100111110001000000
000010001100100010111110001000000
000010010001100001111110000100000
000010100100010001111110100000000
000100010001010001111110000000010
000100001010100010111110001000000
000100010001100010111110010000000
000010100001001100111110000000010
000100100001010001111110010000000
000100001010010100111110000010000
000010001001010100111110001000000
000100100001010010111110010000000
000100010001001100111110000100000
000010001100001010111110010000000
000001100001100010111111000000000
000010001100010001111110000000010
000001001100010100111111000000000
000001100010100010111110000000001
000001100010010100111110000000010
000001010100001010111110000010000
000100010100010001111110100000000
000001010100001010111110010000000
000010100001100010111110000010000
000010001001100100111110000001000
000001010100100001111110001000000
000100010100001001111110000000001
000001010100100010111110000000100
000100001100010010111110001000000
000100001100010010111110000010000
000100001010010001111110000001000
000100001010100010111110000100000
000010100010001100111110000100000
000010010001100100111110000010000
000001010010100001111110010000000
000001010001100100111110000010000
000001100010100001111110000000010
000001100100001010111111000000000
000001001010100010111110000100000
000010100001001010111110000000001
000001010100010001111110100000000
000001100100010001111110010000000
000010100010100001111110100000000
000010001010001100111110000001000
000010100100001010111110000100000
000100001100010001111110000100000
000100010100001010111110000100000
000010100100010001111110000001000
000010001100001100111110000000010
000100010010001001111110000000100
000010100010100001111110000001000
000010100100001001111110000000100
000100001100010001111110010000000
000100001100010001111110000000100
000001010100001010111110000000010
000001010100100001111110000100000
000100001010010100111110000000001
000001001100100010111110001000000
000100010100001010111110000000100
000001001010100100111110000000010
000100010001100010111110000000010
000010100100001010111111000000000
000001010100010001111110000010000
000010010100001001111110000000010
000100001001100010111110000001000
000001100010001010111110000010000
000001100010010100111110000000100
000010100100010001111110001000000
000010001010100001111111000000000
000001010010001100111110000001000
000001100010010100111110000000001
000100100010001001111110000010000
000010100100001001111110000000001
000001010001010100111110100000000
000100001001010100111110000100000
000010100010001100111110010000000
000010100001100001111110000000100
000010010001001100111110100000000
000010001001100010111110000000100
000100010001100001111110001000000
000100100001001010111111000000000
000001001100010010111110000000010
000100010100010001111110000001000
000001100010100010111110000000010
000001001010010100111110001000000
000001001010100100111110000010000
000100010010100001111111000000000
000001100100010010111110000001000
000001001100010010111110100000000
000001100010001100111110100000000
000100100001010010111110000010000
000001001100010010111110010000000
000100010001100001111110000010000
000010001010100001111110010000000
000001001100100010111110100000000
000100010001010001111110000001000
000010100010001001111110000100000
000001100100010010111110000000010
000001010001010100111111000000000
000010001010100100111110000100000
000001010100001100111110000010000
000010010001001100111110000001000
000100001010001010111110000000001
000100010010100001111110001000000
000100010010001001111110000000010
000001010001100010111110010000000
000010001010001100111111000000000
000100100001001010111110100000000
000010001001010100111110000001000
000001100001100010111110100000000
000001010010100001111110000000100
000001010001100100111110000100000
000001010100010100111110000000010
000100010010100001111110000001000
000010010100001100111110000000100
000001010100001100111110001000000
000010010001100100111110100000000
000100001010001100111110000000010
000100010010001001111110000000001
000010100001001100111110000000001
000010001100001100111110000000001
000010001100001010111110100000000
000001001100100010111110000001000
000100010010001001111110000001000
000100001010100001111110010000000
000100010010001100111110000100000
000010001100001100111110000001000
000010001100100001111110000000010
000010001100010001111110010000000
000010001100001010111110000010000
000010001100010001111110100000000
000001010001100100111110000000001
000001100001010010111110000000001
000100001100001010111110100000000
000100010001010100111110100000000
000010001100010001111110000010000
000001001010100010111111000000000
000001100100001010111110100000000
000100010001010100111110000010000
000010100010100001111111000000000
000010100010001001111110000000001
000001010010100100111110000000001
000001010010100100111110000000100
000001100001010010111110000010000
000010001010100001111110000000100
000100010001010001111110000000001
000010001100100010111110000000001
000010100010001001111110001000000
000100010001010100111110000000010
000001100010001100111110000010000
000100010010001100111111000000000
000100001001010010111110000000010
000010001100010100111110000100000
000010001001100010111111000000000
000100100001001010111110001000000
000100010001001010111110000000010
000001100010010100111110000001000
000010100001010100111110000010000
000100001001010100111111000000000
000001100001010100111111000000000
000010100010001100111110000000100
000100010001010001111110000000100
000010001100010100111110001000000
000010001100001100111110000000100
000001010001100010111110000100000
000010010001100100111110000000010
000001001100100010111111000000000
000010001001100100111110000000001
000010001001010100111111000000000
000001001010010100111110000001000
000001100010010001111110001000000
000010100001100001111110000001000
000010001001100010111110000100000
000001100010100010111110000000100
000100001001100010111110001000000
000010100001100001111110000000001
000100010001100010111110000010000
000001001100010100111110000000100
000001001010100010111110010000000
000010010001100001111110010000000
000010100001100010111110010000000
000010001100100001111110000000001
000100100010010001111110001000000
000100001010100001111110000000010
000010001100100001111110000001000
000001100010001010111110000100000
000010100100001010111110010000000
000001010100010001111110000000010
000001001100010100111110010000000
000010010100100001111111000000000
000001100001010100111110000000100
000001001010100010111110000000100
000001010100001100111110000100000
000001010010100100111110000001000
000010010100100001111110001000000
000010100100001001111110000001000




=== State Orbit 26 =====================
size : 180
repr state: 000100100000100000110100000010000
lex min decimal: 2701298446379133529271
states:
000001000001001000101101000000000
000001000000001001100110100000000
000000010000010010010110100000000
000001000001001000101100000100000
000001001001000000111000000100000
000001000000001001100110001000000
000000001001001000011100001000000
000000001000001001010110100000000
000010000010010000101100000001000
000000000001001001001110000100000
000100100000100000110100001000000
000100100000100000110100000010000
000000010010010000011100000000010
000000010010000010011010010000000
000000001001001000011100000000100
000001001000001000110100010000000
000100000100100000101100000100000
000010010010000000111000001000000
000010010000000010110010000000100
000000001001000001011010010000000
000010010000010000110100000010000
000010010000000010110010000010000
000000001001000001011010000100000
000000001000001001010110000001000
000000010010000010011011000000000
000100000100100000101100000000001
000000001000001001010110000010000
000001001000001000110100001000000
000100100000100000110100000000010
000100000100000100101010000000001
000000000010010010001110000010000
000010000010010000101100000000001
000000010010010000011100100000000
000010010000010000110100000001000
000010010000010000110100000000010
000001001000000001110010000100000
000000010000010010010110000000100
000000100100100000011100000000001
000100100100000000111000010000000
000000100100100000011100000000010
000000100000100100010110000001000
000010010010000000111000000100000
000100100000000100110010000000100
000001000001001000101100000001000
000000100100000100011010000001000
000000000001001001001110000000010
000000010000010010010110000010000
000000100000100100010110000000100
000000010010000010011010000001000
000001000000001001100110000000010
000100000000100100100110000000010
000000000100100100001110000010000
000010010000010000110100010000000
000100000000100100100110001000000
000001000001000001101010000010000
000100100100000000111000000000100
000010010010000000111000100000000
000100100000000100110010000000010
000000100100000100011010000000001
000010010000000010110010000100000
000001001001000000111000010000000
000100000100100000101100000001000
000010000000010010100110010000000
000000010010000010011010000000001
000000100100000100011010000100000
000000010010010000011100001000000
000100000100000100101010000000100
000000000100100100001110001000000
000000000001001001001110000010000
000001001001000000111000000001000
000000100000100100010110000010000
000000000100100100001110000000010
000100000100100000101101000000000
000000100100100000011101000000000
000001001000001000110100000001000
000000000100100100001110000001000
000001001000000001110011000000000
000100100100000000111000000100000
000001000001000001101010000000001
000100000100100000101100100000000
000100100000100000110100000001000
000000010010010000011101000000000
000001001000001000110101000000000
000000010010000010011010000000010
000000001001001000011100100000000
000000100100000100011011000000000
000010000010000010101010001000000
000001000000001001100110000100000
000000001001000001011010000000001
000010000010010000101100000010000
000000001001000001011010000001000
000001001001000000111000000000100
000010000000010010100110100000000
000000010000010010010110000000001
000100100100000000111000000001000
000001000001000001101010000000100
000001000001001000101100000010000
000000001001001000011100000000010
000100000100000100101010000010000
000000000010010010001110000100000
000010000000010010100110000100000
000001001000001000110100000010000
000001001000001000110100000000010
000010000010010000101100100000000
000100000100000100101010001000000
000000100100100000011100001000000
000001000001000001101010010000000
000001001000000001110010000010000
000000100100100000011100000000100
000010010010000000111000000000100
000100000000100100100110100000000
000100000100000100101011000000000
000000000010010010001110001000000
000010000000010010100110001000000
000001001001000000111000100000000
000010010000010000110101000000000
000100100000000100110010100000000
000000100000100100010110000000001
000100000000100100100110000100000
000100000000100100100110000000001
000000010010010000011100000000100
000100000000100100100110010000000
000000000100100100001110000000100
000001000001001000101100100000000
000010010000000010110010000000010
000010000010000010101010010000000
000001001000000001110010000000010
000001000000001001100110010000000
000001001000000001110010000000100
000000001001001000011101000000000
000000000001001001001110000000100
000001001001000000111000001000000
000010010010000000111000010000000
000000001000001001010110000000001
000010000010000010101010000000001
000001001000000001110010100000000
000010000010000010101010000000100
000100100000000100110010000010000
000010010000000010110011000000000
000000000100100100001110000100000
000001000000001001100110000000001
000010000010000010101010000010000
000001000001000001101011000000000
000000001001001000011100000000001
000100100000100000110101000000000
000000001000001001010110010000000
000100000100100000101100000010000
000100100000100000110100010000000
000000100000100100010110100000000
000000100100000100011010000000010
000000010000010010010110010000000
000000010010000010011010000100000
000010010010000000111000000001000
000000000001001001001110000001000
000000010000010010010110000001000
000000001000001001010110000000100
000000001001000001011010000000010
000100100000000100110011000000000
000010000010010000101100000100000
000010000010010000101101000000000
000000000010010010001110000000010
000100100100000000111000100000000
000100100100000000111000001000000
000100100000000100110010000100000
000010000000010010100110000000010
000000000001001001001110001000000
000010010000010000110100001000000
000000100100000100011010010000000
000000100000100100010110010000000
000010000000010010100110000000001
000010000010000010101011000000000
000000000010010010001110000000100
000100000100000100101010010000000
000000100100100000011100100000000
000001000001000001101010001000000
000010010000000010110010100000000
000000001001000001011011000000000
000000000010010010001110000001000
000001000001001000101100000000001
000000010010010000011100000000001




=== State Orbit 27 =====================
size : 60
repr state: 000100100000100100110110000010000
lex min decimal: 21599986623994662317239
states:
000100100100100000111100001000000
000000010010010010011110000000010
000001001001001000111101000000000
000100000100100100101110000010000
000001000001001001101110000010000
000001000001001001101110001000000
000000001001001001011110000000100
000010010010000010111010000000100
000000001001001001011110000001000
000100000100100100101110000000001
000010010010000010111010010000000
000100100000100100110110010000000
000010000010010010101110001000000
000100100100000100111011000000000
000100100100100000111100100000000
000000100100100100011110000001000
000100100000100100110110000000010
000100000100100100101110001000000
000001001000001001110110100000000
000001001000001001110110000010000
000001000001001001101110000100000
000010010010000010111011000000000
000001001000001001110110010000000
000001000001001001101110000000001
000000001001001001011110000000001
000001001001000001111010000000100
000010010000010010110110100000000
000100100100100000111101000000000
000001001001001000111100000001000
000000100100100100011110000000001
000001001001000001111010010000000
000001001001001000111100100000000
000001001001000001111011000000000
000010010010010000111100000001000
000000100100100100011110000000010
000010010000010010110110000010000
000010010010010000111100100000000
000001001001001000111100001000000
000100100000100100110110000010000
000100000100100100101110000100000
000010000010010010101110000100000
000001001000001001110110000000010
000000001001001001011110000000010
000000010010010010011110000000100
000100100100100000111100000001000
000100100000100100110110100000000
000010010010010000111100001000000
000000010010010010011110000001000
000001001001000001111010000100000
000000010010010010011110000000001
000100100100000100111010000000100
000010010000010010110110010000000
000000100100100100011110000000100
000010000010010010101110000000001
000010010010000010111010000100000
000010010000010010110110000000010
000010000010010010101110000010000
000100100100000100111010000100000
000100100100000100111010010000000
000010010010010000111101000000000




=== State Orbit 28 =====================
size : 360
repr state: 000100100000100010110110000010000
lex min decimal: 21636880112142081420471
states:
000000100010010010011110000001000
000000010010001010011110000000010
000010001001001000111101000000000
000010000100010010101110000000001
000000100100001100011110000000001
000000001001010001011110000000001
000100000010100100101110000100000
000000010001001001011110000000100
000000100010100100011110000000001
000010010100010000111100001000000
000001001001010000111100001000000
000100010100100000111100000001000
000010001000001001110110100000000
000000010001010010011110000000100
000010010000100010110110000010000
000100100001000100111010000100000
000001001001000100111010010000000
000000001010010010011110000000100
000001001000100001110110100000000
000100000010100100101110001000000
000100100000100010110110000010000
000010001010000010111011000000000
000000100100001100011110000000010
000001100100000100111011000000000
000010001001001000111100100000000
000100001001000001111010000100000
000010000010010100101110000000001
000000010100100100011110000000010
000000001001010001011110000001000
000010010010100000111100000001000
000000100010010010011110000000100
000010010000001010110110100000000
000100000100010100101110000010000
000001001000010001110110000010000
000000010100010010011110000000100
000010100000010010110110100000000
000010000010001010101110001000000
000000100010100100011110000001000
000000001100100100011110000000100
000100100010000100111010000000100
000001001001010000111100000001000
000001001100001000111100001000000
000000001100001001011110000000001
000010001010000010111010000000100
000010100000100100110110010000000
000000010010010100011110000000010
000100000001001001101110000100000
000100010000100100110110100000000
000001010001000001111011000000000
000000001010001001011110000000100
000100010010010000111100100000000
000010100000100100110110000010000
000010010100010000111101000000000
000001000010010010101110000010000
000010001001000001111011000000000
000010010010000100111010010000000
000000001001001100011110000000001
000000010001001001011110000000010
000100000100100010101110000000001
000010100000010010110110000000010
000010001001000001111010010000000
000000100100100010011110000000010
000010000001001001101110000010000
000001000100100100101110000100000
000010000010010001101110000100000
000001000001100001101110001000000
000010010000010100110110000000010
000100100000001100110110100000000
000100100100000010111010000000100
000010010001000010111010000100000
000010000010010001101110000000001
000001001100001000111101000000000
000000100010100100011110000000100
000000100100100001011110000000001
000000010100010010011110000000001
000010000001010010101110000000001
000000001001100001011110000000010
000001100000100100110110100000000
000001001010000001111010000100000
000001001000001010110110010000000
000100001100100000111100000001000
000100100100010000111100000001000
000000001010001001011110000000001
000100000001100100101110000100000
000010010000010001110110000010000
000010010000100010110110000000010
000000001001010001011110000000010
000100100001000100111011000000000
000001000100100100101110000010000
000010001000010010110110100000000
000100000100010100101110001000000
000000100010010010011110000000010
000010001001000001111010000100000
000100001000100100110110010000000
000100010100100000111101000000000
000010010010000100111010000000100
000010010000001010110110000010000
000001000100001001101110001000000
000010100010010000111100100000000
000000010001010010011110000001000
000000100100100010011110000000001
000001000010001001101110000000001
000100010000010010110110000010000
000000001100100100011110000001000
000010100100100000111101000000000
000100000001100100101110000000001
000100010000010010110110100000000
000000100100100001011110000000010
000010010010000001111010010000000
000001010010000010111011000000000
000010100100000100111010010000000
000100001100100000111100100000000
000010001001001000111100001000000
000000001001001100011110000000100
000100100100001000111100000001000
000100010100000100111011000000000
000100000010010010101110000010000
000001000001001100101110000000001
000100000001001001101110001000000
000001100000100100110110010000000
000000100100100010011110000000100
000100100000100001110110000010000
000001000010010010101110001000000
000010000010100010101110001000000
000010010010001000111100001000000
000100010000100100110110000000010
000100100000001100110110000000010
000001100000100100110110000010000
000010010000100010110110100000000
000000001010010010011110000000010
000100001000100100110110100000000
000000010010010001011110000000100
000010001010010000111101000000000
000001001100000001111010000000100
000001010001000001111010010000000
000010010010000100111010000100000
000001000001001010101110000010000
000000001001001010011110000000100
000000100001001001011110000001000
000001010000010010110110100000000
000001001000010001110110000000010
000100100010100000111101000000000
000000100100010100011110000000001
000001100100000100111010000100000
000100000010100100101110000000001
000010000010010100101110000100000
000010000001010010101110000100000
000001000001100001101110000000001
000100000100100001101110000000001
000001001000100001110110000010000
000000001001001100011110000000010
000001010000010010110110010000000
000001100000001001110110000000010
000001001001100000111100000001000
000000010010100010011110000001000
000010000100100100101110001000000
000010010000010100110110010000000
000100010010010000111100001000000
000001000001001010101110000000001
000001010010010000111101000000000
000100000100001100101110000010000
000100100000100001110110010000000
000000010010010100011110000000100
000010001000010010110110010000000
000100100010000100111011000000000
000001001001100000111100100000000
000001010010010000111100001000000
000100000100100001101110000010000
000010000010010001101110000010000
000000001010010010011110000001000
000001000001001100101110000010000
000001010010010000111100100000000
000001001000001010110110000000010
000100001001000001111011000000000
000000100100001100011110000001000
000001001010000001111010000000100
000010001000001001110110010000000
000000010010001010011110000000001
000001100001001000111100000001000
000010000001001001101110000100000
000001000001001100101110000100000
000100001100000100111010000000100
000001001010000001111011000000000
000001001000001100110110000010000
000001100001001000111101000000000
000001000001100001101110000010000
000000001100100100011110000000010
000001001100001000111100000001000
000100100000010100110110100000000
000100010010000010111010000100000
000001100001001000111100100000000
000000010010100010011110000000010
000100000100100010101110000010000
000000100100100001011110000000100
000010000001001001101110001000000
000010010100000010111011000000000
000001010000001001110110100000000
000100010100000100111010010000000
000010000010100010101110000000001
000000100100010100011110000001000
000100001100000100111011000000000
000000100100010100011110000000010
000010010010100000111100001000000
000100000010010010101110001000000
000010010001010000111101000000000
000100001001001000111100100000000
000100000100001100101110001000000
000001000010010010101110000100000
000010010100010000111100000001000
000100100100001000111100100000000
000010100100100000111100001000000
000100000100001100101110000000001
000010010100000010111010000100000
000100100001100000111100001000000
000010000100010010101110001000000
000001010000001001110110010000000
000001100001000001111011000000000
000100010000100100110110010000000
000001100001000001111010000000100
000010000010001010101110000000001
000000010010010001011110000000010
000100100010000100111010000100000
000001000001010001101110000000001
000010010010100000111100100000000
000001000001001010101110000100000
000100001000001001110110000010000
000100100010100000111100000001000
000100100100000001111010000100000
000010001000010010110110000000010
000100100001100000111101000000000
000100001100100000111101000000000
000100100100000001111010000000100
000001001001010000111100100000000
000010010100000010111010000000100
000100000010010010101110000100000
000001001000001010110110000010000
000001100000001001110110010000000
000001000100001001101110000000001
000000100001001001011110000000100
000000010001001001011110000001000
000100100100000010111010010000000
000100100000010100110110000010000
000001100100000100111010010000000
000010010000010001110110010000000
000100100100010000111100001000000
000010100010010000111100000001000
000001010001001000111101000000000
000010100010010000111101000000000
000001010000010010110110000010000
000010100010000010111010010000000
000001000001010001101110001000000
000001000010001001101110000100000
000010000001010010101110001000000
000100100100000010111010000100000
000100100100000001111010010000000
000100001001001000111101000000000
000000010001010010011110000000001
000010001010010000111100000001000
000001000001010001101110000010000
000010000010100010101110000010000
000010000100100100101110000100000
000010010001010000111100001000000
000010100100000100111010000100000
000010001010010000111100100000000
000010010010001000111100000001000
000100001000100100110110000000010
000001001001000010111010000100000
000000010010010001011110000000001
000010000010001010101110000010000
000100010100100000111100100000000
000001000100100100101110001000000
000010000100100100101110000010000
000001100001000001111010010000000
000010100100100000111100100000000
000100010010010000111101000000000
000100000100100010101110000100000
000001001001000100111010000100000
000100000100100001101110000100000
000010100010000010111010000000100
000001001000001100110110000000010
000001010000001001110110000000010
000000010010100010011110000000001
000100001000001001110110010000000
000100001001001000111100001000000
000001010010000010111010000100000
000100010010000010111011000000000
000001001001000010111010010000000
000001001000001100110110010000000
000100100000010100110110000000010
000001001000010001110110100000000
000100001100000100111010010000000
000100001001000001111010010000000
000000001001001010011110000000001
000010010010000001111010000000100
000000010100010010011110000001000
000000010010001010011110000001000
000001001001000010111010000000100
000100000001001001101110000010000
000010010001000010111011000000000
000100010010000010111010010000000
000000001001100001011110000000001
000001001100000001111010000100000
000000010010010100011110000000001
000001100100100000111100001000000
000100010000010010110110010000000
000100100001100000111100000001000
000001100100100000111101000000000
000010000100010010101110000100000
000100100001000100111010000000100
000001001010001000111100001000000
000100100000001100110110000010000
000100001000001001110110100000000
000100100100010000111100100000000
000001000100001001101110000100000
000100000001100100101110001000000
000100100010100000111100001000000
000100000100010100101110000000001
000001001000100001110110000000010
000100100000100010110110010000000
000000100001001001011110000000010
000010100100000100111011000000000
000000010100100100011110000000100
000001000010001001101110001000000
000010100000100100110110100000000
000010010000001010110110000000010
000010010010000001111010000100000
000001001001000100111010000000100
000010001010000010111010010000000
000010010001010000111100000001000
000000001001100001011110000001000
000010000010010100101110000010000
000001100000001001110110100000000
000010100000010010110110010000000
000000001100001001011110000001000
000000001001001010011110000000010
000010010000010100110110000010000
000100010100000100111010000000100
000000100001100100011110000000001
000100100100001000111100001000000
000001010001000001111010000000100
000100100000100001110110000000010
000010010000010001110110000000010
000001010010000010111010010000000
000000100001100100011110000000100
000001010001001000111100000001000
000001001001100000111100001000000
000001001100000001111011000000000
000000100001100100011110000001000
000010010010001000111100100000000
000001010001001000111100100000000
000000010100100100011110000001000
000001100100100000111100100000000
000001001010001000111100000001000
000100100000100010110110000000010
000010001000001001110110000010000
000000001010001001011110000001000
000000001100001001011110000000100
000010100010000010111011000000000
000010010001000010111010000000100
000001001010001000111101000000000




=== State Orbit 29 =====================
size : 720
repr state: 000100100000010000110100000010000
lex min decimal: 2738191934526552632503
states:
000001000000100100100110010000000
000000100000010100010110000000001
000000100000001100010110000001000
000000000100001001001110000100000
000000000100100010001110000000100
000000000010100100001110000000100
000000100000001100010110000010000
000000000100001001001110001000000
000000010100100000011100000000010
000000010000001001010110000001000
000000000001001010001110000000010
000000000001010001001110000001000
000100001000000001110011000000000
000100100000010000110100000000010
000000010000001001010110010000000
000000100001100000011100000000001
000000010010000001011010010000000
000001000001010000101100000001000
000000100010000010011011000000000
000001001000010000110100000001000
000010001000000010110010000000100
000000000010010001001110000010000
000010000100000010101010001000000
000001001000010000110100000010000
000000010100100000011101000000000
000100001000000001110010000010000
000000000100001100001110000001000
000001010000010000110100001000000
000000100001001000011100000000100
000000000001010001001110000000010
000000001100000100011010000001000
000100000010000010101010000010000
000001000001000100101010000000100
000001001100000000111000000001000
000001000000010001100110000000010
000000000100010100001110001000000
000000000100100001001110000000100
000000000010100010001110000000010
000010000000010001100110000100000
000001010000001000110101000000000
000100010000100000110100000000010
000000001010010000011100100000000
000000010010000001011010000000001
000001000000100100100110000100000
000100000001001000101101000000000
000100000000010010100110010000000
000001000000001100100110000100000
000000001000001100010110000000100
000001000000001010100110000100000
000000100001001000011101000000000
000000001010010000011100000000100
000000000100010010001110000100000
000000100001000100011010000000001
000001000100100000101100100000000
000000010000001001010110100000000
000001100000000001110010000000100
000010000100000010101011000000000
000010000010001000101100000000001
000000001100100000011101000000000
000001000000001010100110010000000
000000001100000100011010010000000
000000000010001010001110000000010
000000100000010010010110000001000
000000001010000001011010000001000
000100010010000000111000001000000
000100010000000010110010100000000
000100000100001000101100000001000
000000000100100001001110000000010
000001100000000100110010000010000
000100000000001100100110001000000
000000000100010100001110000001000
000010010100000000111000000100000
000001000000001010100110000000010
000000001001000100011010010000000
000001001000100000110100001000000
000000010010100000011100001000000
000000000001010001001110001000000
000001100000000001110011000000000
000000100100001000011100100000000
000000100010000100011011000000000
000000100010100000011100001000000
000000010000100010010110000000001
000100000100000001101010000000001
000001001100000000111000000000100
000100001000100000110100010000000
000010000001000010101010000000001
000100010100000000111000100000000
000001000000100001100110000000001
000000001000100001010110100000000
000000010100000100011010000000010
000000010001000001011010010000000
000000010000100010010110100000000
000000100100000010011010000000010
000010100000000010110010000000100
000000100001000001011010000000010
000000000100100010001110000000010
000001100000100000110100000010000
000000010000010001010110000000100
000000010010001000011100000000001
000010000010100000101100100000000
000001010001000000111000000000100
000000001010010000011101000000000
000001001010000000111000000000100
000010000010100000101100000001000
000000100000100010010110010000000
000000100010000100011010000100000
000001001000100000110100000000010
000010000010100000101100000010000
000001000010000001101011000000000
000000010000001010010110000001000
000100000000010100100110100000000
000001000000100100100110100000000
000010000000010001100110000000001
000001000010000001101010000000001
000100000010010000101101000000000
000000100000010100010110000010000
000100000100000001101010010000000
000000000010001001001110000001000
000000010000010100010110010000000
000010010000001000110100000010000
000000010010000001011010000100000
000100010010000000111000010000000
000100100000010000110100000010000
000000100001000100011011000000000
000010000001000010101011000000000
000100000000010010100110000100000
000000100000010010010110010000000
000001000001000100101010000000001
000001010000000001110011000000000
000001000001000010101010000000001
000000001100001000011100001000000
000100000000100001100110010000000
000000001000100001010110000010000
000010100100000000111000010000000
000001000100000001101011000000000
000000001010000001011010000000001
000100100000001000110100001000000
000001000100001000101100000000001
000000000010010100001110000000010
000000001000010010010110000001000
000000001000001100010110000000001
000001000001000010101010000010000
000010000010000100101010000000100
000100000010100000101100000000001
000010000001010000101100000001000
000010000100010000101100000001000
000100100000001000110100000001000
000100001000000001110010100000000
000010100010000000111000010000000
000000000100001100001110000010000
000000100000001001010110100000000
000010000010000100101010000000001
000001000010000010101010010000000
000001000000001010100110000000001
000100001000000100110011000000000
000000100010000100011010000000001
000000001100001000011100000000100
000000010000010001010110000010000
000001100000001000110100000000010
000010100000000100110010000100000
000001100100000000111000100000000
000010000001000010101010001000000
000000010100000010011010000100000
000001001000000010110010000010000
000010000000010001100110000000010
000001000100000001101010001000000
000010010000000001110010000000100
000000010001001000011100000000010
000100001000000100110010100000000
000010000000001010100110001000000
000000001001000010011010010000000
000100001001000000111000100000000
000010010000001000110100001000000
000000100001000100011010000001000
000000010010001000011100100000000
000000000100100010001110000100000
000001010000001000110100000000010
000001000010000001101010000000100
000000010000001010010110000010000
000100100000010000110100001000000
000000010001001000011100000000100
000001000010000010101010000010000
000100000000010100100110000000010
000001001000010000110100000000010
000010001001000000111000100000000
000000100001100000011100000000100
000000000010010100001110000000100
000010000010000100101010010000000
000010000100010000101100000100000
000001100100000000111000001000000
000010000000001001100110010000000
000100010000100000110101000000000
000000010000010100010110000000001
000010010000001000110100000001000
000000010001010000011100000000001
000000100010010000011100000000100
000001010000010000110100000010000
000001000000100001100110001000000
000100000100010000101100100000000
000010001001000000111000001000000
000001001000000100110010000100000
000001000010001000101101000000000
000001010010000000111000100000000
000100000001001000101100100000000
000010100100000000111000100000000
000010000000100010100110100000000
000000001001100000011100100000000
000010100100000000111000001000000
000010000100100000101100000100000
000100000010100000101100000100000
000100000001000001101011000000000
000010000100000100101010001000000
000000001000100100010110000000100
000100000000100001100110000100000
000001000010001000101100000001000
000000001010000001011011000000000
000001000100001000101100000001000
000100100000000010110010000100000
000010000010000001101010000000100
000000010000100010010110000010000
000000100000001001010110000000100
000010000100000100101010000010000
000000001001000100011010000000010
000000001001000010011010000000010
000000000010010001001110000000010
000100001000000100110010000000100
000001000001000100101010000010000
000001000100000100101010001000000
000010100000000010110011000000000
000000000010100010001110000001000
000000100100010000011100000000010
000000010000100100010110010000000
000001100000000001110010100000000
000001000001000010101010010000000
000000001010000010011011000000000
000100000100000010101010010000000
000000010100000010011010000001000
000000100001001000011100100000000
000000000010001010001110000010000
000000100001100000011101000000000
000100100000001000110100000000010
000000010100010000011101000000000
000000100010010000011100100000000
000000001000001010010110000000001
000000100001000100011010000100000
000001100000100000110100010000000
000010001000001000110100001000000
000100010000010000110100010000000
000001000001100000101100100000000
000100001000001000110100001000000
000010001000000001110010000100000
000100000010100000101100000001000
000000010010100000011100000000010
000000000010001001001110001000000
000000000100001001001110000000100
000010000000100100100110100000000
000001000000010010100110100000000
000000010000010001010110010000000
000100100000000001110010000000010
000000001100000001011011000000000
000001010000000001110010000000010
000000000010001001001110000000100
000100100010000000111000001000000
000010100010000000111000100000000
000000001010000010011010000001000
000010100010000000111000000000100
000100001100000000111000000000100
000001010000010000110101000000000
000000001000001010010110000000100
000000001100100000011100000000100
000100000010010000101100000100000
000001000010010000101101000000000
000001000100001000101100000100000
000000100100010000011100100000000
000100000000100010100110000000010
000000100000010010010110000000100
000010001000010000110100000000010
000010000000010100100110000100000
000001000000010001100110100000000
000000000010100010001110001000000
000001100000100000110100001000000
000001100000100000110101000000000
000000100100001000011100000000010
000000000010010100001110000010000
000100000000010010100110001000000
000100000000010100100110001000000
000010010100000000111000000001000
000001010001000000111000010000000
000010000001000001101010001000000
000000001100000100011011000000000
000000010100000010011010000000001
000010001000000001110010100000000
000010100100000000111000000100000
000001010010000000111000010000000
000000000001010010001110000100000
000000001000001100010110010000000
000000001100100000011100000000010
000100010000000010110011000000000
000000100010100000011100000000100
000000001001010000011100000000001
000100000001000001101010010000000
000001010010000000111000001000000
000000000100100001001110000100000
000100010000010000110101000000000
000000100001000001011010000001000
000100000000100010100110000100000
000001000010000010101010001000000
000001000100000001101010000000100
000100000001001000101100000100000
000000100000001001010110000001000
000010010000100000110100000000010
000010000100010000101101000000000
000010100000000100110011000000000
000010001001000000111000000100000
000001000100000001101010000000001
000001100000000001110010000000010
000001000000010001100110000000001
000100000100000001101010000010000
000000100000010010010110100000000
000010000001010000101101000000000
000100000000001100100110000000010
000000000001001100001110000010000
000010000001000001101011000000000
000001100100000000111000000100000
000000001010000001011010000100000
000001000000010010100110010000000
000100010010000000111000100000000
000100000001000100101010001000000
000000000010001001001110000100000
000100001000100000110100000001000
000000001000001100010110000010000
000001000000100100100110001000000
000001000001000100101010010000000
000100000100000001101010000000100
000000100000001100010110100000000
000100000100000010101010000000100
000100010000000100110010100000000
000100000000001001100110001000000
000100000000001001100110100000000
000000010010001000011100000000010
000000000001100100001110000001000
000100000010000100101010000000100
000000010100000100011010000001000
000001000100000100101011000000000
000100000100000010101010000000001
000000000100001100001110000000010
000000100000001001010110010000000
000100100001000000111000000100000
000010000001001000101101000000000
000000100000100001010110010000000
000001100000000100110010100000000
000000000100100010001110000010000
000010100000100000110100001000000
000100000010000010101010010000000
000100001000100000110101000000000
000000001010001000011100001000000
000100000000010010100110100000000
000000001100000001011010000000001
000000100000010100010110100000000
000010000100100000101101000000000
000000001000010010010110010000000
000001000100001000101101000000000
000000100100000010011010000000001
000100001001000000111000001000000
000010000000010100100110000000001
000000010010100000011100100000000
000000000010100100001110001000000
000010001010000000111000000000100
000010000010000100101010000010000
000010000000001010100110100000000
000000010100100000011100100000000
000100000000001100100110000000001
000001000001100000101100000010000
000010000100000100101010010000000
000000010010000100011010000100000
000000010100000100011011000000000
000000000001100100001110001000000
000000001001010000011100000000010
000001001000000100110010000010000
000000100100010000011100000000001
000010000000100100100110001000000
000100010000000100110010000000010
000010100000000010110010000000010
000100000010010000101100100000000
000010010100000000111000000000100
000000100010010000011100000000010
000000000001001100001110000000010
000000010010001000011100001000000
000100100000001000110100000010000
000000010000100100010110000001000
000010010000000100110010000000100
000000100100001000011100001000000
000000010000010100010110000010000
000001000000001100100110000000010
000010000000001010100110000000010
000001000000010001100110001000000
000001000100100000101101000000000
000000100100000001011010000000001
000001001010000000111000000100000
000010000001001000101100000100000
000000000010100010001110000010000
000010001000000010110010100000000
000100100000000010110010000000010
000100001000001000110100000010000
000000001000010001010110000000001
000001001000100000110100000001000
000001000100000100101010010000000
000010010001000000111000000100000
000100100000000001110010000010000
000100000010000010101010001000000
000100100001000000111000001000000
000001000001010000101100000000001
000000001010010000011100000000010
000000001000100100010110010000000
000100100001000000111000000000100
000001000010010000101100100000000
000000001000100100010110000001000
000000010000001010010110000000001
000000001001000100011010000000001
000100100000000010110010000000100
000100000001100000101100000100000
000000100100000001011010000000010
000000100000100001010110000000100
000001000000010010100110001000000
000010001000001000110101000000000
000000000100010100001110000010000
000000000100010010001110000000100
000001100000000100110010000100000
000000100010000010011010010000000
000001000010010000101100000100000
000000100000100001010110000010000
000000001001010000011100001000000
000000100000100010010110000000100
000000001001000010011010000000001
000001010010000000111000000100000
000010010000100000110100000001000
000010010000000001110010000100000
000010100000010000110100010000000
000000100100010000011100001000000
000001000000100001100110000000010
000001100000001000110101000000000
000000000010001010001110000001000
000000001000010010010110100000000
000010000010001000101100000001000
000010010000000100110010000010000
000001000010000010101011000000000
000000001100000100011010000000010
000100100000010000110100000001000
000000010001000001011010000000010
000100001000000100110010000000010
000100100010000000111000000000100
000001001000000100110010000000100
000010000000010100100110000000010
000100001000000001110010000100000
000100000000100010100110010000000
000001000001000010101010000000100
000000010000100100010110000000100
000010001000010000110101000000000
000100010100000000111000000001000
000010100000000010110010100000000
000010000100000100101011000000000
000001100001000000111000010000000
000100000000010100100110000000001
000000010001000010011010000000001
000010001010000000111000100000000
000010000000001001100110100000000
000100000100010000101100000010000
000100000001000100101010000000100
000010001000000010110010000000010
000100010000100000110100010000000
000100000001100000101100000001000
000000010001000010011011000000000
000000100100000001011010000100000
000010000001010000101100000000001
000000010000010100010110000000100
000001000010001000101100000000001
000001001000000010110010000000100
000000100010000100011010000001000
000010000001010000101100000100000
000100010000100000110100000001000
000001001000000010110010000100000
000000000001001010001110000010000
000000000100010010001110000001000
000010000000100010100110000000001
000100000001100000101101000000000
000001100001000000111000000001000
000100000001001000101100000010000
000000010001010000011100000000100
000000001100001000011101000000000
000100100001000000111000000001000
000010100000010000110100000000010
000100000001000001101010001000000
000000000001001100001110000100000
000000000001100001001110001000000
000010010001000000111000000001000
000100000100001000101100000000001
000100001001000000111000010000000
000001000000100001100110100000000
000000001001000010011010000100000
000000000001010001001110000010000
000001000001010000101100000010000
000001010000000010110011000000000
000100000000100001100110000000001
000001100001000000111000100000000
000001010001000000111000000001000
000000001001000100011010000100000
000000000010010100001110000100000
000010001000000001110010000010000
000000001000010010010110000000100
000010100000100000110101000000000
000100000010000100101011000000000
000010001000010000110100000001000
000001000010010000101100000010000
000010000001000001101010010000000
000000010010000100011010000000010
000000000100010100001110000000010
000000100001000001011011000000000
000001001000010000110100001000000
000001001000000100110010000000010
000010000100010000101100000000001
000000001000010001010110000001000
000001010000001000110100010000000
000000100100000010011010000100000
000001000001100000101100000001000
000100000100001000101100000010000
000100000000001001100110000100000
000000001000100100010110100000000
000000010100000100011010010000000
000100010010000000111000000100000
000010010100000000111000001000000
000001010000000001110010100000000
000100000010000010101011000000000
000000010000010001010110000000001
000000010100010000011100001000000
000100100000000001110010000000100
000010000001000010101010000000100
000010001000010000110100010000000
000000001010000010011010000000010
000010010000100000110100000010000
000100000100010000101100000001000
000000010100100000011100000000100
000001010000010000110100010000000
000001000100100000101100000010000
000001000000001100100110000000001
000000100001001000011100000000010
000001000000010010100110000100000
000010000010001000101100100000000
000001010000000010110010100000000
000010000001000001101010000010000
000010000000100010100110000000010
000000000010100100001110000001000
000010000010000001101010000010000
000000100000100010010110000010000
000100000001000100101011000000000
000010010000000001110010000000010
000001000001100000101100000000001
000010000000001001100110001000000
000000001000010001010110100000000
000000001001010000011100100000000
000000010001000001011011000000000
000000000001010010001110000001000
000010100010000000111000000001000
000010010001000000111000001000000
000001001000100000110100000010000
000000001000001010010110000010000
000100000001100000101100000000001
000100000010100000101101000000000
000010010000001000110100000000010
000000001010001000011100000000001
000001000100000100101010000010000
000000000010001010001110001000000
000000100000001100010110000000001
000100000100010000101100000000001
000001000100100000101100000100000
000010001010000000111000010000000
000001010000000001110010000000100
000001100100000000111000010000000
000000001000010001010110000010000
000000010100010000011100000000100
000010000000100100100110010000000
000000001001100000011100000000001
000010000100100000101100100000000
000001000000001100100110010000000
000010001001000000111000010000000
000100100010000000111000000100000
000000000100010010001110001000000
000000100000100001010110000000001
000000000001001010001110000000100
000001100000000100110011000000000
000001010001000000111000100000000
000000000010010001001110000000100
000010010000000001110010000010000
000000100001100000011100001000000
000010000000100100100110000100000
000000100010010000011101000000000
000000010001000001011010000001000
000100010000000100110010000000100
000010010000000100110010000100000
000100000100001000101100100000000
000100010000000010110010000100000
000100000000001100100110100000000
000000010001000010011010000001000
000000010100000010011011000000000
000000000100001001001110000001000
000010000000100010100110001000000
000000010001010000011100001000000
000010000000010001100110010000000
000000010001001000011100100000000
000100100010000000111000000001000
000100000001000001101010000010000
000100010100000000111000000000100
000000001000100001010110000000001
000000000001001010001110000100000
000000100010100000011100000000001
000000001010001000011100000000100
000000001001100000011100001000000
000001100001000000111000000000100
000100100000000010110010000010000
000010010000000100110010000000010
000000010010000100011010010000000
000000000100001100001110001000000
000000000001100100001110000100000
000100001000100000110100000000010
000010000001001000101100100000000
000001000001010000101100100000000
000000010000100010010110000001000
000010100000010000110100000001000
000010000010001000101100000010000
000100001100000000111000100000000
000000000001100001001110000010000
000000000001010010001110000000100
000000000001010010001110001000000
000010000010000001101010010000000
000000010010000001011010000000010
000010000001001000101100000010000
000100100000000001110010000100000
000000001000001010010110010000000
000000000010010001001110000100000
000100001100000000111000010000000
000001001100000000111000000100000
000000010001000010011010000100000
000000100100001000011100000000001
000000010001010000011101000000000
000000000100100001001110000010000
000000100000100010010110000000001
000000100001000001011010010000000
000010100000010000110101000000000
000010001000000010110011000000000
000001010000001000110100000001000
000001000010000001101010001000000
000000010000100100010110100000000
000010010000100000110100001000000
000010010001000000111000000000100
000001010000000010110010000100000
000010100000100000110100000010000
000100010000010000110100000010000
000000001100000001011010000100000
000010000010000001101010000000001
000001010000000010110010000010000
000010001000001000110100010000000
000010000000001010100110000000001
000010001010000000111000000001000
000010100000100000110100010000000
000100000000001001100110010000000
000100001000001000110101000000000
000010100000000100110010100000000
000000100010100000011101000000000
000100000000100001100110000000010
000000010001001000011101000000000
000100001000001000110100010000000
000010000010100000101100000000001
000000010010100000011100000000001
000010000100000010101010000000100
000001001000000010110010000000010
000100001100000000111000000001000
000100000010000100101010000000001
000000001100001000011100000000001
000001001010000000111000001000000
000010000000010100100110010000000
000000010010000100011010000000001
000000001000100001010110000001000
000000000001100100001110000000100
000000000001001100001110000000100
000000001010001000011101000000000
000000000001100001001110000001000
000010000100100000101100000010000
000001001010000000111000000001000
000100000000100010100110000000001
000000100010000010011010000000010
000001001100000000111000001000000
000000000001100001001110000000010
000010001000001000110100000010000
000100000100000010101010000010000
000000100100000010011010010000000
000100000010010000101100000010000
000000001100100000011100100000000
000010100000000100110010000010000
000000100100000001011010010000000
000010000100000010101010000000001
000001100000001000110100010000000
000000010000001010010110100000000
000000100010000010011010000001000
000100010000010000110100001000000
000100001001000000111000000100000
000001100000001000110100000001000
000000000010100100001110000100000
000010001000000001110011000000000
000000010100010000011100000000001
000100000001000100101010000000001
000100010100000000111000010000000
000000001010000010011010010000000
000100010000000010110010000010000
000100010000000100110011000000000
000000001001100000011100000000010
000010000000001001100110000100000
000001000010001000101100000100000
000000010000001001010110000000100
000000100000010100010110000001000
000000001100000001011010000001000
000100000010000100101010001000000




=== State Orbit 30 =====================
size : 360
repr state: 000100100000010010110110000010000
lex min decimal: 21932028017321434246327
states:
000100100001001000111100001000000
000001100100001000111100001000000
000010100100010000111100001000000
000001000001100100101110000100000
000100001001100000111100100000000
000010001001000010111010000000100
000000100001100001011110000000010
000000100100001001011110000000100
000000010001010001011110000000001
000001000001010010101110000100000
000001001000010010110110100000000
000001010000001010110110000010000
000001100000100001110110010000000
000001100001100000111101000000000
000010100000010100110110100000000
000100001100000001111010010000000
000000100010100010011110000000010
000010100100010000111100100000000
000000100100010010011110000000100
000100100001000001111011000000000
000001001100000100111010010000000
000100100001001000111100000001000
000010010001001000111101000000000
000100010000100010110110010000000
000010010000001001110110010000000
000010001000010001110110010000000
000100010010000100111010000100000
000010001000010001110110000000010
000001100001000100111011000000000
000010010100100000111100001000000
000010100100000010111011000000000
000010010100000100111010010000000
000010100000010100110110000000010
000010100000100010110110100000000
000010000100010100101110001000000
000100010100010000111100000001000
000010001010000001111010000100000
000010000010100100101110000010000
000010000010100100101110000100000
000000010001010001011110000001000
000000001001100100011110000000010
000010010001000001111010010000000
000100001000100001110110000010000
000001000010001010101110000000001
000000010010001001011110000000001
000010000100010100101110000010000
000001000100001100101110000010000
000010000001001010101110001000000
000001001000100100110110010000000
000001001100100000111101000000000
000001001000010010110110000000010
000100010010100000111100000001000
000001000001100100101110000010000
000010001001010000111100100000000
000001000100100001101110000000001
000100000001001100101110001000000
000010010000100100110110100000000
000010010000100100110110010000000
000001001100000100111010000100000
000100001100001000111100000001000
000100100000010010110110000000010
000010100010100000111101000000000
000100100010000010111011000000000
000010010000001001110110000000010
000100100010010000111100000001000
000000001100100001011110000000001
000100001001000100111011000000000
000000100100001001011110000000001
000001100100000001111010000100000
000001000010010001101110000000001
000001000001010010101110000010000
000010000001001010101110000010000
000001001010010000111100001000000
000001001100100000111100000001000
000010001010000001111011000000000
000000001001010010011110000000001
000000010100100010011110000000010
000000001100001100011110000000010
000100000100010010101110001000000
000100001000100001110110000000010
000000010010100100011110000001000
000010010100000100111010000100000
000000001010001010011110000000010
000001001000100100110110000000010
000000001001010010011110000001000
000000010100100010011110000001000
000001001010000010111011000000000
000100000010100010101110000000001
000001001000100100110110100000000
000000010010100100011110000000100
000100100000010010110110010000000
000100000010010100101110000010000
000010000010001001101110001000000
000001010000010001110110000010000
000001000100100001101110000100000
000010100010000100111010010000000
000000100001100001011110000001000
000010000100010100101110000000001
000001001100000100111010000000100
000100000010100010101110000010000
000010001001010000111100001000000
000100001000001100110110010000000
000100010010000100111010010000000
000010001000010001110110100000000
000001010001000010111010000100000
000000010100010100011110000000100
000010100000100010110110010000000
000010000100100010101110000010000
000100001000100001110110010000000
000001001000010010110110000010000
000000100100010010011110000000010
000001010010000001111010000100000
000001100100001000111100100000000
000100000010100010101110001000000
000100010100010000111100100000000
000000010001001010011110000000001
000100010000100010110110000000010
000000010100100010011110000000100
000010010000001001110110000010000
000010010001000001111010000000100
000001010001000010111010000000100
000000001010010001011110000000010
000001100100001000111101000000000
000001000001010010101110001000000
000001010000010001110110010000000
000001100001000100111010000000100
000010010001000001111010000100000
000010001001010000111101000000000
000001000010001010101110001000000
000100000001100001101110000010000
000001100001100000111100100000000
000001000001010010101110000000001
000100010000010100110110000010000
000001001010010000111100100000000
000100001000001100110110000010000
000100001001100000111100000001000
000010000001010001101110000100000
000100100000001001110110000000010
000010100100000010111010010000000
000100100001000001111010000100000
000001100000100001110110000000010
000000001001010010011110000000010
000010010100100000111100000001000
000001010001010000111100100000000
000100001100001000111100100000000
000010000001010001101110000010000
000010100000100010110110000000010
000100100010000010111010000100000
000010100000010100110110010000000
000010001010001000111100100000000
000000001100001100011110000000100
000001100100000001111011000000000
000010010100000100111011000000000
000010001001000010111010010000000
000000001010001010011110000001000
000010010100100000111100100000000
000010010100000100111010000000100
000000001001100100011110000001000
000010010001000001111011000000000
000010000001010001101110000000001
000100000100010010101110000100000
000000010100010100011110000001000
000000100010100010011110000000001
000000100001001100011110000000010
000100010010000100111010000000100
000010010001001000111100001000000
000000100010100010011110000000100
000100010010100000111100001000000
000100001100000001111010000100000
000000100001100001011110000000001
000001000100100001101110001000000
000100001100001000111100001000000
000000001100100001011110000001000
000010000010001001101110000010000
000001001000100100110110000010000
000001100000100001110110100000000
000100000100010010101110000000001
000001000010001010101110000100000
000000010010001001011110000000100
000100000100001001101110000100000
000001010010001000111100000001000
000010001000010001110110000010000
000001000010010001101110000100000
000010000001001010101110000000001
000000100010010100011110000000100
000100010010100000111100100000000
000000100001001100011110000000001
000100001000001100110110000000010
000100100000010010110110000010000
000010100100000010111010000000100
000100010000100010110110000010000
000100000100001001101110001000000
000100001100000001111011000000000
000100000100001001101110000010000
000001010010000001111010010000000
000100100010010000111100100000000
000001010001000010111010010000000
000000100010010100011110000001000
000000100001100001011110000000100
000001010001000010111011000000000
000010100010100000111100001000000
000001010010000001111010000000100
000000001100001100011110000001000
000000100001001100011110000001000
000010001001000010111010000100000
000000010010100100011110000000001
000010000001010001101110001000000
000100010100010000111100001000000
000100010010000100111011000000000
000001000001100100101110000000001
000100000010010100101110001000000
000010001010001000111101000000000
000000010001001010011110000000100
000100000001001100101110000100000
000010000100100010101110000000001
000001000100001100101110000000001
000100100001000001111010010000000
000100100010010000111101000000000
000001100000001100110110000000010
000000010001010001011110000000100
000001001010010000111101000000000
000100001001100000111101000000000
000001010000001010110110100000000
000001100100000001111010010000000
000100100010000010111010010000000
000001100001100000111100001000000
000001100000001100110110100000000
000010010001001000111100100000000
000000010100010100011110000000010
000100010100000010111010010000000
000001100001000100111010000100000
000010100010000100111010000100000
000000100010010100011110000000001
000000100010010100011110000000010
000100100000001001110110010000000
000001100000001100110110010000000
000100010000010100110110010000000
000001001100100000111100100000000
000000001001010010011110000000100
000010001010000001111010000000100
000000100100010010011110000000001
000000010010001001011110000000010
000100010100000010111010000000100
000010100010100000111100000001000
000100000010010100101110000100000
000100000001100001101110000100000
000001001010000010111010000000100
000010000010100100101110001000000
000100001001000100111010000100000
000000010100010100011110000000001
000100001001000100111010010000000
000000001010001010011110000000100
000010100010100000111100100000000
000100100000001001110110000010000
000100100000010010110110100000000
000001100100001000111100000001000
000010100010000100111010000000100
000001100001100000111100000001000
000010100100010000111100000001000
000001010000010001110110000000010
000000001010010001011110000001000
000010000010001001101110000100000
000001000100001100101110001000000
000010000010100100101110000000001
000010001000001010110110000000010
000001100000001100110110000010000
000010000010001001101110000000001
000001001010000010111010000100000
000010001000001010110110000010000
000010001010001000111100001000000
000010000100010100101110000100000
000100010100000010111010000100000
000000100100001001011110000000010
000100010100000010111011000000000
000010010000100100110110000000010
000100010000010100110110000000010
000100001100000001111010000000100
000001000100001100101110000100000
000001001100100000111100001000000
000010001001010000111100000001000
000001001000010010110110010000000
000100000100001001101110000000001
000010001010000001111010010000000
000010100000100010110110000010000
000001010001010000111101000000000
000100100001000001111010000000100
000100000001100001101110000000001
000001010010001000111100100000000
000000001100001100011110000000001
000001010001010000111100000001000
000000010001001010011110000001000
000100010000010100110110100000000
000001010010001000111100001000000
000010000100100010101110000100000
000000100010100010011110000001000
000001010010000001111011000000000
000100000001001100101110000000001
000000100100001001011110000001000
000100000001100001101110001000000
000001001010010000111100000001000
000000010001010001011110000000010
000010100100010000111101000000000
000100010010100000111101000000000
000001100000100001110110000010000
000000001100100001011110000000010
000010100000010100110110000010000
000001100001000100111010010000000
000000001001100100011110000000100
000010001001000010111011000000000
000010001010001000111100000001000
000100000100010010101110000010000
000000001100100001011110000000100
000001010000010001110110100000000
000001000010010001101110000010000
000000001010010001011110000000001
000010010000001001110110100000000
000100100010000010111010000000100
000001001100000100111011000000000
000000010010100100011110000000010
000010001000001010110110010000000
000001010001010000111100001000000
000000001010001010011110000000001
000100010000100010110110100000000
000001010000001010110110000000010
000100100001001000111100100000000
000010100100000010111010000100000
000010001000001010110110100000000
000100001000100001110110100000000
000100001001100000111100001000000
000000010001001010011110000000010
000000010100100010011110000000001
000010100010000100111011000000000
000010000100100010101110001000000
000100000010100010101110000100000
000100100001001000111101000000000
000100000001001100101110000010000
000001000010001010101110000010000
000100100010010000111100001000000
000000100001001100011110000000100
000000001010010001011110000000100
000100100000001001110110100000000
000010010000100100110110000010000
000000010010001001011110000001000
000001100100000001111010000000100
000001010010001000111101000000000
000100001100001000111101000000000
000001010000001010110110010000000
000001000010010001101110001000000
000010010001001000111100000001000
000100001000001100110110100000000
000010000001001010101110000100000
000100000010010100101110000000001
000010010100100000111101000000000
000100001001000100111010000000100
000000001001100100011110000000001
000001000100100001101110000010000
000001000001100100101110001000000
000000100100010010011110000001000
000100010100010000111101000000000
000001001010000010111010010000000




=== State Orbit 31 =====================
size : 360
repr state: 000100100000010001110110000010000
lex min decimal: 22005814993616272452791
states:
000100010000001001110110100000000
000001100010000100111010000100000
000001010000100010110110100000000
000000100100001010011110000000010
000000100100001010011110000000001
000010010001100000111100001000000
000010100000100001110110000010000
000001010001000100111010000000100
000010001000100100110110010000000
000010100010000001111010000000100
000100001000010010110110010000000
000010001000010100110110010000000
000100100010001000111100000001000
000100100001000010111010000000100
000010100000001010110110100000000
000000001100010010011110000000100
000001010001100000111100100000000
000001100010100000111101000000000
000001000100100010101110000010000
000000001010100100011110000001000
000000001100010010011110000001000
000001010000010100110110000010000
000010000100001001101110000100000
000000010100010001011110000000001
000001000010010100101110000010000
000100001010000100111010000000100
000000100010001001011110000001000
000100001010000010111010010000000
000001000001010100101110000000001
000001100010010000111100100000000
000000010001100100011110000000100
000000001100001010011110000000100
000001010000100001110110000000010
000100100000010001110110000010000
000010100010000001111010010000000
000000010001100001011110000001000
000010000100001001101110001000000
000000010001010100011110000000001
000100001000100010110110010000000
000010001000100010110110100000000
000100100001010000111100001000000
000001001010000100111010000000100
000010001100100000111101000000000
000000100010001010011110000001000
000001010100001000111101000000000
000010000001010100101110000100000
000001000001100010101110000000001
000000010100001100011110000000010
000000001100010001011110000001000
000001001100000010111010000100000
000100100010000001111010000100000
000001000010100010101110000010000
000100010010001000111100100000000
000001100000001010110110010000000
000010000100001010101110000000001
000001010100010000111100001000000
000000001001100010011110000000010
000010010100001000111100001000000
000100001001010000111100001000000
000000100010010001011110000000010
000100000001001010101110000100000
000000001001010100011110000000001
000010001000100001110110000010000
000001010100100000111101000000000
000000001100010001011110000000001
000000100001100010011110000000100
000010001001100000111100001000000
000100001000100010110110000000010
000010000100001100101110001000000
000001100010000100111011000000000
000100010000001010110110100000000
000100010100000001111010010000000
000010001000001100110110000010000
000100001100010000111100000001000
000100010000100001110110010000000
000100010001000010111011000000000
000000001100010100011110000000010
000100010001100000111100000001000
000010000010001100101110000000001
000001000100010100101110001000000
000100001001000010111010000100000
000010001100000100111010010000000
000001100100010000111100100000000
000100010010000001111010000100000
000010001100000100111011000000000
000010100001000001111011000000000
000001000010100100101110001000000
000100001010100000111101000000000
000000010010001100011110000000010
000000100001010001011110000000010
000010100010001000111100100000000
000001001100010000111100001000000
000010001100100000111100100000000
000010000010001100101110000010000
000001010100000010111010000100000
000100010000010001110110000010000
000100001000001010110110010000000
000001100010001000111100000001000
000100001010000100111011000000000
000001000100001010101110000100000
000100000010001100101110000000001
000100000100001010101110000010000
000100000010001010101110001000000
000100000010100001101110000100000
000010001000001100110110010000000
000010000001100001101110000010000
000000001100001010011110000000001
000000010100001001011110000000100
000100010000001100110110100000000
000100001010100000111100000001000
000010000100001100101110000010000
000010100100001000111100001000000
000000001100100010011110000000100
000001010000100100110110010000000
000000010001010100011110000000100
000100010001000100111010000000100
000010010100000001111010000000100
000000001010010100011110000000100
000100100010001000111100001000000
000001010100000001111011000000000
000010100001010000111100000001000
000100010001000001111010010000000
000010100001000100111010000100000
000010001010000100111010010000000
000001100000010001110110000000010
000000001010001100011110000000100
000000100001010100011110000001000
000000010100001100011110000001000
000100000010010001101110000100000
000001100000010010110110100000000
000001000010100001101110000000001
000000100010001100011110000000001
000001100000100010110110000010000
000010001100010000111101000000000
000010000001001100101110000010000
000100010000001001110110010000000
000100000001010010101110001000000
000000001010100010011110000000010
000010001000100100110110100000000
000100001010000001111011000000000
000010100001100000111100001000000
000001000100010001101110001000000
000001000010010100101110000100000
000000010100100001011110000000100
000001100000010001110110100000000
000010000001010100101110000000001
000010100000010001110110010000000
000100000001001010101110000010000
000010001100001000111101000000000
000100001001000010111010010000000
000010010001000100111010000000100
000001100010001000111101000000000
000100010001000100111011000000000
000100001010001000111100001000000
000010100001000010111010000000100
000000010100001001011110000001000
000010100000001010110110000000010
000010000001100100101110001000000
000100001000010100110110100000000
000100000100001010101110000000001
000010100001001000111101000000000
000001100010000001111011000000000
000100010010000001111010010000000
000001000100010010101110000100000
000001010010100000111100001000000
000000100010001100011110000001000
000010001100010000111100000001000
000000001010100010011110000001000
000001100001000010111010000000100
000000100100010001011110000000010
000010001001000100111010000100000
000100000010001001101110001000000
000000001010001100011110000000001
000000010001100100011110000001000
000001100010000010111010010000000
000100000001100010101110000100000
000010000001100010101110000000001
000001010000010100110110010000000
000000100001010010011110000001000
000001010000100001110110100000000
000010010000001100110110000000010
000001001000010100110110000000010
000001000001100010101110000010000
000000010010100001011110000000001
000001001010000100111010000100000
000100100001010000111100000001000
000100000100010001101110000010000
000010010100000001111010000100000
000001010100010000111101000000000
000010000100010001101110000100000
000100001010001000111101000000000
000100010000001100110110000000010
000001010000001100110110010000000
000000010001001100011110000000010
000001000010100100101110000100000
000100010000010001110110010000000
000001010010000100111010000100000
000100010000100001110110000000010
000001100000010010110110010000000
000000100010100001011110000000100
000010100001000100111011000000000
000010001010000100111010000000100
000001100000010100110110100000000
000001100010000010111011000000000
000000010001100001011110000000010
000010001100000010111011000000000
000010100001000010111011000000000
000010100000100001110110010000000
000000001001010100011110000000010
000100000100010001101110000000001
000000100010010001011110000000100
000100001010010000111101000000000
000010010001000100111010000100000
000010010000100001110110000000010
000100010001010000111100001000000
000001010001000100111010010000000
000100001010010000111100100000000
000100100001000010111010000100000
000000010100001010011110000000001
000100010100001000111100000001000
000010000001100100101110000100000
000000001100010100011110000001000
000000010010100001011110000000010
000001000100010010101110001000000
000001010000100100110110100000000
000000100001010010011110000000100
000100010001010000111101000000000
000010001100000001111010000100000
000001000100010100101110000010000
000001001010100000111100001000000
000010000010100001101110000000001
000010100001010000111101000000000
000010100001001000111100100000000
000000001100100010011110000000010
000010000100010001101110000000001
000100010010001000111100001000000
000100010000001010110110000010000
000100000001010100101110001000000
000100010100000001111010000000100
000000100001001010011110000000100
000100010001001000111101000000000
000001100000010100110110000010000
000100000001010001101110001000000
000001100000100010110110010000000
000010000100100001101110000100000
000000010001100010011110000000001
000100001010000001111010000100000
000000010010001100011110000000001
000010100001100000111101000000000
000010010000001100110110000010000
000001100100010000111100001000000
000000100010001010011110000000010
000100100010000001111010000000100
000001010000100010110110000010000
000000001001100010011110000000001
000100000010001001101110000100000
000010000001001100101110000100000
000001010100001000111100000001000
000100100000001010110110000010000
000010100100000001111010000100000
000001100001010000111100000001000
000001000100001010101110000000001
000001010100100000111100100000000
000100000010100001101110000000001
000000010001001100011110000000100
000100010100001000111100100000000
000001010010000100111010010000000
000001100001000010111010010000000
000001001100000010111010000000100
000100010001000001111011000000000
000100000010001100101110001000000
000010001000010100110110000000010
000000100001010100011110000000001
000001010000001100110110000000010
000010100000001001110110010000000
000000010100001010011110000001000
000001000010001100101110000000001
000001000010001100101110000100000
000000001010100100011110000000100
000000010001100010011110000001000
000000001010100001011110000001000
000001100010000001111010000000100
000001010100000010111011000000000
000010001000100010110110000000010
000010001010100000111100000001000
000100010001000010111010000100000
000010000100100001101110000010000
000000010100010001011110000000100
000000100010100001011110000000001
000010000010100001101110000010000
000000100001100010011110000000001
000010001100000010111010000000100
000001010010100000111100100000000
000001010100000001111010000000100
000010100100000001111010010000000
000010000001100001101110001000000
000001000010100010101110001000000
000001001000010100110110000010000
000100010001001000111100100000000
000100010001100000111101000000000
000010001000100001110110100000000
000001000100100010101110000100000
000001010100000100111011000000000
000010100001000001111010010000000
000010100010001000111100000001000
000010100000001100110110100000000
000001001000100010110110000010000
000000100010001001011110000000100
000001100010010000111101000000000
000001001000100010110110000000010
000100100000010001110110000000010
000010000001100010101110001000000
000100001100010000111100100000000
000001001010100000111100000001000
000100000001100010101110000000001
000100001000010001110110000010000
000010001100000001111011000000000
000100001010000010111011000000000
000010100100001000111100100000000
000001100001010000111100100000000
000001100000001010110110000000010
000100100000001010110110000000010
000100001100000010111010010000000
000010001001100000111100100000000
000001000010100001101110001000000
000000100100010001011110000000001
000100001001010000111100100000000
000010010000100001110110000010000
000010001001000100111010010000000
000001001100010000111100000001000
000100001000010100110110000000010
000100000010001010101110000010000
000000010100100001011110000000010
000010000100001010101110001000000
000100001000010001110110100000000
000000100001010001011110000001000
000010100000010001110110000000010
000001100010100000111100001000000
000100001000010010110110100000000
000000001010010100011110000000010
000100000001010100101110000000001
000010100000001100110110000010000
000001000100010001101110000000001
000000100001001010011110000000010
000100000001010010101110000100000
000100000001010001101110000010000
000010001010100000111100100000000
000001010001100000111100000001000
000100000010010001101110000010000
000001000001010100101110000010000
000001100100000010111010000100000
000001100100000010111010010000000
000100001100000010111010000000100
000000001010100001011110000000001
000010010001100000111100000001000
000010001100001000111100001000000
000001010100000100111010010000000
000010100000001001110110100000000
000010010100001000111100000001000
000100001000001010110110000010000




=== State Orbit 32 =====================
size : 360
repr state: 000100010000000000110000000010000
lex min decimal: 372399258873116322999
states:
000001000000010000100100000000001
000010000000000001100010100000000
000001100000000000110000000100000
000000000001000100001010000001000
000000000000001100000110010000000
000000000000010001000110000100000
000100000001000000101000000010000
000010000000000001100010000000001
000000010000100000010100000010000
000000000010001000001101000000000
000000100001000000011000100000000
000000000010000100001010001000000
000010000000000001100010000000100
000000100000000001010010100000000
000000000000100010000110000000100
000001000010000000101000000010000
000100000000000010100010001000000
000001000000000100100010000000001
000010001000000000110000000000100
000000000001000010001011000000000
000000001000100000010100010000000
000000100010000000011000010000000
000000001100000000011000100000000
000000100000001000010100000000100
000000000000001010000110010000000
000000010100000000011000000100000
000000000010000100001010000010000
000000010000000100010010000100000
000000010001000000011000000100000
000000000100001000001100000000100
000001000010000000101000000000001
000100000000000001100010000000100
000000100010000000011000000000001
000010000001000000101000000000100
000000100000001000010100000010000
000000000010000001001010000001000
000010000000000001100010001000000
000000000010001000001100000010000
000001000000010000100101000000000
000000000000100001000110010000000
000001000000000010100010001000000
000000000000010001000110010000000
000000100000001000010101000000000
000010000100000000101000000000001
000001010000000000110000000001000
000000010001000000011000010000000
000000000100001000001100000010000
000001000000100000100100000001000
000000000000100001000110000100000
000010000000001000100100000000001
000010100000000000110000000000010
000000000010001000001100100000000
000000000000001010000110001000000
000000000000100010000110000001000
000000010000100000010100000000100
000000000001010000001100000000010
000000000010000001001010010000000
000000100000000001010010000001000
000000000001010000001100000010000
000010000000000100100010000000100
000000010001000000011000100000000
000000100010000000011000000000010
000100000010000000101000000000001
000000000001100000001101000000000
000000000001000100001010000000010
000000001000010000010100000000100
000000010000100000010100010000000
000000000000010001000110000000100
000000001000010000010100000010000
000010001000000000110000001000000
000001000000000100100010000000100
000000000000100001000110001000000
000100000000000001100011000000000
000000010000000100010010000010000
000000000001100000001100000000100
000000010000001000010100010000000
000000000100010000001100100000000
000010100000000000110000000001000
000000001000000010010010000010000
000001000000000100100010001000000
000010000100000000101000100000000
000000100001000000011000000100000
000000000010100000001100000100000
000000000000100001000110000000100
000000000000001100000110000000100
000000010001000000011000000000001
000000000100000010001011000000000
000010000000100000100100000000001
000000000001100000001100100000000
000010100000000000110000000100000
000100010000000000110000001000000
000000010000000001010011000000000
000010100000000000110000000000100
000000000010000001001010000000010
000000100001000000011000000000010
000010000000001000100100010000000
000000010000000100010010000001000
000010000000100000100100000001000
000000001000100000010101000000000
000000001000100000010100000000001
000010000000100000100100000000010
000100001000000000110000000000010
000100000000001000100100000000010
000000000000001100000110001000000
000010000000001000100101000000000
000100000001000000101000000000001
000000100000001000010100000000001
000000000000001100000110100000000
000000000001010000001101000000000
000000000001100000001100000010000
000000001000000010010010000000001
000000001000000100010010000010000
000010000100000000101000000000100
000100000000000001100010000000001
000000000100010000001100000010000
000000000100000010001010001000000
000000000000100010000110100000000
000000000001000010001010001000000
000000001010000000011000010000000
000010001000000000110000000010000
000100000000010000100100000100000
000100001000000000110000000001000
000000100000001000010100001000000
000000000000010100000110001000000
000000001000000100010010000000001
000001000000100000100100000000001
000001000100000000101000000000100
000100000000000001100010100000000
000100000001000000101000100000000
000100000000001000100100000000001
000000000000001100000110000100000
000000010000001000010100000010000
000100000000000010100010000000001
000001010000000000110000000100000
000000001000000010010010000001000
000000100000000001010010000100000
000100000000010000100101000000000
000000010000001000010100001000000
000000001000010000010101000000000
000000001000000010010010000100000
000100001000000000110000001000000
000000010000001000010100000000001
000100000000000010100010100000000
000100000000000001100010001000000
000000001000010000010100000000001
000000000100000010001010000000010
000001000000010000100100010000000
000010000001000000101000000010000
000001100000000000110000001000000
000100000000010000100100000000001
000001000010000000101000100000000
000000100010000000011000001000000
000010100000000000110000000010000
000010001000000000110000000000010
000000000010000100001010000000010
000001000100000000101000000001000
000000100000000010010010000000001
000100001000000000110000000000100
000000000001000010001010000001000
000000001000010000010100001000000
000001000100000000101000000000001
000000010100000000011000100000000
000000100000000001010010000010000
000100000000010000100100010000000
000000000010001000001100000000100
000000000001010000001100100000000
000010000001000000101000010000000
000001000000100000100100010000000
000100000001000000101000000000100
000000000001010000001100000000100
000100000000000010100011000000000
000100000000010000100100000001000
000100001000000000110000000100000
000000000000010001000110100000000
000001100000000000110000000010000
000000001000100000010100000000100
000000010001000000011000000000010
000010001000000000110000000100000
000001000000100000100100000100000
000100000010000000101000010000000
000000001000000010010010100000000
000000001000000100010010000100000
000000100000010000010101000000000
000010000000100000100100000100000
000010000000000100100010000000001
000001000000000100100010000000010
000000000000100010000110010000000
000000000010100000001100000000100
000001000000000010100010000000001
000010000100000000101000010000000
000001000010000000101000010000000
000000001100000000011000000000001
000000000100000001001010000001000
000000001000100000010100000010000
000001000000000100100010100000000
000100000001000000101000000001000
000000000100010000001100000000100
000000000100000001001010000010000
000000010100000000011000000000010
000000000000001010000110000100000
000010000100000000101000000010000
000000000100000001001010000000010
000000010000000100010011000000000
000000000001000100001010001000000
000000100001000000011000001000000
000000000000010001000110001000000
000000001010000000011000001000000
000010000100000000101000000001000
000000001100000000011000001000000
000000010000000001010010000100000
000100010000000000110000000010000
000000100010000000011000100000000
000000100000010000010100001000000
000000001010000000011000000000001
000010000000000100100011000000000
000000100000000001010011000000000
000100000000001000100100000001000
000001000000000100100011000000000
000000000000010100000110000100000
000000000100000001001011000000000
000100000000010000100100000000010
000000100000010000010100000000001
000000000100001000001100000000010
000000010000100000010100001000000
000000000001100000001100000100000
000000000000100001000110100000000
000010001000000000110000000001000
000001010000000000110000000010000
000001000000010000100100000100000
000100000000001000100100010000000
000000000010100000001100000010000
000010000000000100100010001000000
000000001000000100010011000000000
000000000100010000001100000000010
000000100000000010010010000010000
000001000010000000101000000001000
000010000000100000100100010000000
000100000010000000101000000000100
000000001010000000011000000000010
000010000000001000100100000100000
000000000010100000001101000000000
000000010001000000011000001000000
000000100001000000011000000000001
000000000001000100001010000010000
000000000010001000001100000000010
000000000100001000001100100000000
000000010000000001010010000010000
000000000000001010000110000000100
000000000010000100001011000000000
000010000000000100100010100000000
000100010000000000110000000000010
000000001000010000010100010000000
000000000100000010001010010000000
000000000100010000001101000000000
000000010100000000011000000000001
000000010000100000010101000000000
000001000100000000101000100000000
000000000000001010000110100000000
000001000000100000100100000000010
000100000000001000100100000100000
000100000000000010100010000000100
000000001000100000010100001000000
000000010000001000010101000000000
000000100000001000010100010000000
000000000100000001001010001000000
000000100000000010010010100000000
000100000010000000101000000001000
000000010000100000010100000000001
000000000100010000001100000100000
000000000010000001001010001000000
000000000001000010001010000010000
000000001100000000011000010000000
000100000000000001100010000000010
000000100000000010010010000001000
000100000001000000101000010000000
000010000000000100100010000000010
000001010000000000110000000000010
000100010000000000110000000001000
000001000100000000101000000010000
000000000000010100000110010000000
000000000000001100000110000001000
000001010000000000110000000000100
000000000010100000001100100000000
000000000001010000001100000100000
000001100000000000110000000000010
000000100001000000011000010000000
000000000100000010001010000001000
000001000000000010100010000000100
000010000000000001100011000000000
000000010000000100010010100000000
000000100000010000010100000000100
000000001100000000011000000000010
000000001010000000011000100000000
000100000000001000100101000000000
000100010000000000110000000100000
000000100000010000010100010000000
000100000010000000101000000010000
000000000000100001000110000001000
000000010100000000011000001000000
000001100000000000110000000000100
000100000010000000101000100000000
000000001000000100010010100000000
000010000000001000100100000001000
000000000100000001001010010000000
000000000000010001000110000001000
000000010000001000010100000000100
000000100000000010010010000100000
000000000100001000001100000100000
000000010000000100010010000000001
000100010000000000110000000000100
000100000000000010100010000000010
000010000001000000101000100000000
000001000010000000101000000000100
000000000001000100001011000000000
000000010100000000011000010000000
000010000001000000101000000001000
000000000010000100001010000001000
000000001100000000011000000100000
000010000000001000100100000000010
000000000001000010001010000000010
000000000000010100000110000001000
000000000000100010000110000100000
000001000000010000100100000000010
000000100000000001010010000000001
000001000000010000100100000001000
000010000000100000100101000000000
000000001000000100010010000001000
000000000000001010000110000001000
000000100000000010010011000000000
000100001000000000110000000010000
000000100010000000011000000100000
000010000001000000101000000000001
000000010000000001010010000001000
000000000001000010001010010000000
000001100000000000110000000001000
000000100000010000010100000010000
000000000010000001001010000010000
000010000000000001100010000000010
000000010000000001010010000000001
000001000000000010100011000000000
000001000000000010100010000000010
000000000010000001001011000000000
000000000010000100001010010000000
000000000000100010000110001000000
000001000000000010100010100000000
000000000000010100000110000000100
000000000100000010001010000010000
000000000000010100000110100000000
000000000001000100001010010000000
000000000100001000001101000000000
000000000001100000001100000000010
000000000010001000001100000100000
000010100000000000110000001000000
000000001010000000011000000100000
000001000000100000100101000000000
000001000100000000101000010000000
000000001000000010010011000000000
000000010000000001010010100000000
000000000010100000001100000000010
000001010000000000110000001000000




=== State Orbit 33 =====================
size : 180
repr state: 000100010010000000111000000010000
lex min decimal: 2738333797914814803127
states:
000100100000000001110010000000001
000010010000001000110100000000001
000001000100001000101100000000100
000010000010000100101010000000010
000001000000100100100111000000000
000000000001100001001110100000000
000000001000001010010110000100000
000000100010000010011010100000000
000100100001000000111000000000001
000000001000100001010110001000000
000010010100000000111000000000001
000010001000000010110010000001000
000000100000100010010110000100000
000010001000001000110100000100000
000000001000001100010110000100000
000010010000100000110100000000001
000000010100000100011010100000000
000010100010000000111000000000010
000000100000010010010111000000000
000000000010001010001110100000000
000010000100100000101100010000000
000000100100001000011100000010000
000100010000000100110010000001000
000000010000100010010110001000000
000000001001100000011100000010000
000000100010000100011010001000000
000000100100000001011010000010000
000001001000010000110100000000001
000001010010000000111000000010000
000001000001000010101010000000010
000100010000100000110100000000100
000100000010100000101100000000100
000100000100000001101010000000010
000001000000010001100110000001000
000000010000001010010110001000000
000001000010000010101010100000000
000010100000000010110010000001000
000000100001001000011100010000000
000000001010000010011010100000000
000000001001000100011010000010000
000100000010010000101100010000000
000100000000001100100110000001000
000100000100001000101100000000010
000001001000000100110010000000001
000001000010010000101100010000000
000100100000010000110100000000001
000001000000001100100110000000100
000000100001000001011010100000000
000000010010000001011010000010000
000010100000100000110100000100000
000010000100000100101010100000000
000001001010000000111000000000001
000010000000100010100110000001000
000000010100010000011100000100000
000100000000100001100110000000100
000010000000100100100111000000000
000010100000010000110100000000100
000000001001000010011010000010000
000001000100000001101010000001000
000000000100001001001111000000000
000000100000001100010110001000000
000000010001001000011100010000000
000001000100000100101010100000000
000000000001010010001111000000000
000000001000010010010111000000000
000100000010000100101010000001000
000100001000000001110010001000000
000100001000000100110010000001000
000000000100100001001110010000000
000000000100100010001110010000000
000001000000001010100110000000100
000000100100010000011100000010000
000001010000010000110100000100000
000000010100100000011100010000000
000000010010100000011100000010000
000000000100010100001110100000000
000000000010001001001111000000000
000010000100000010101010000001000
000000010000010001010110000100000
000001000100100000101100010000000
000000000001100100001111000000000
000010000000010100100110000000100
000001001100000000111000000000001
000000100001000100011010001000000
000100000100010000101100000000010
000010000000001010100110000001000
000000010000100100010111000000000
000000000010100010001110100000000
000000010010000100011010000010000
000010000001001000101100010000000
000001001000000010110010000000001
000010100000000100110010001000000
000010010000000001110010000000001
000001010000000010110010001000000
000100100000001000110100000000001
000100001000100000110100000000100
000000001001010000011100000010000
000001000001000100101010000000010
000100010000010000110100000100000
000100000001000100101010000001000
000010000001010000101100000000100
000100000001100000101100000000100
000100000010000010101010100000000
000000010001000010011010001000000
000000010001000001011010100000000
000000010010001000011100000010000
000010001000010000110100000000100
000010000010100000101100000000010
000000001000100100010111000000000
000001001000100000110100000000001
000010000010001000101100000000010
000001100000001000110100000000100
000100001001000000111000000010000
000010010000000100110010000000001
000010010001000000111000000000001
000010100100000000111000000010000
000001000001010000101100000000010
000100100010000000111000000000001
000000010100000010011010001000000
000000000001001100001110010000000
000100000000010100100110000001000
000000001100001000011100000100000
000001100000000100110010001000000
000000001000010001010110001000000
000100000000100010100110000000100
000010000000010001100110000000100
000000100010010000011100010000000
000000010000001001010111000000000
000001000010001000101100000000100
000000001010000001011010001000000
000100000000010010100111000000000
000001100001000000111000000000010
000000000001010001001110100000000
000010001001000000111000000010000
000000010001010000011100000100000
000000000010010100001110010000000
000000000010100100001111000000000
000100001100000000111000000000010
000000001100000001011010001000000
000001100100000000111000000010000
000100100000000010110010000000001
000000100000010100010110001000000
000000100010100000011100000100000
000001100000100000110100000100000
000001000000010010100111000000000
000000100100000010011010000010000
000100000100000010101010000000010
000000000010010001001110010000000
000000001010010000011100010000000
000100000000001001100111000000000
000100001000001000110100000100000
000001010000001000110100000000100
000010000001000010101010000001000
000000010000010100010110000100000
000100010100000000111000000000010
000010001010000000111000000000010
000100010000000010110010001000000
000100010010000000111000000010000
000010000010000001101010000000010
000000100000100001010110000100000
000010000000001001100111000000000
000000000100010010001111000000000
000000100000001001010111000000000
000000001100000100011010100000000
000000100001100000011100000100000
000100000001001000101100010000000
000010000001000001101010100000000
000001000010000001101010000001000
000100000001000001101010100000000
000000001010001000011100000100000
000001010000000001110010000001000
000001100000000001110010000001000
000000000001001010001110010000000
000001000001100000101100000000010
000001010001000000111000000000010
000010000100010000101100000000100
000000001100100000011100010000000
000000000100001100001110100000000
000001000000100001100110000001000
000010001000000001110010001000000




=== State Orbit 34 =====================
size : 180
repr state: 000100010010100000111100000010000
lex min decimal: 21932044905820036885687
states:
000010100000100010110110000100000
000010001001010000111100000000100
000010000001001010101110000001000
000001100100000001111010000001000
000100001001000100111010000010000
000000010010100100011111000000000
000100001100001000111100000100000
000010001010001000111100000100000
000001000001100100101111000000000
000001010010001000111100000000100
000001010010000001111010000001000
000001100000100001110110000001000
000010010100000100111010100000000
000010001000010001110110000000100
000100100000010010110111000000000
000001100100000001111010000010000
000000100001001100011110001000000
000000010100100010011110001000000
000010100100000010111010000010000
000000001100001100011110000100000
000010000001001010101110010000000
000001001100000100111010000000001
000000100100001001011110000010000
000010010100000100111010000000001
000100100000001001110110000000001
000001100000001100110110001000000
000100001100001000111100000000010
000100000010010100101110000001000
000010001000001010110110000100000
000000100001100001011110100000000
000001001010000010111010000000001
000010010001000001111010000000001
000001100001000100111010000000010
000001000010010001101110010000000
000001000100100001101110010000000
000001010010000001111010000010000
000001000100001100101110000000100
000001001010000010111010100000000
000010000001010001101110100000000
000010001001010000111100000010000
000100001100000001111010001000000
000001001100100000111100010000000
000010000100100010101110000001000
000001000001010010101110000000010
000010100100000010111010000001000
000010100000010100110110000000100
000001100000001100110110000000100
000000010001010001011110000100000
000000100010010100011110001000000
000100001000001100110110000100000
000010010000100100110111000000000
000100100001000001111010100000000
000010010100100000111100010000000
000100000100001001101110000000010
000100010010100000111100000000100
000100100010010000111100010000000
000010000100010100101110100000000
000100001000100001110110001000000
000100100010000010111010100000000
000000001100100001011110010000000
000100000100001001101111000000000
000001100000100001110110000100000
000010010000001001110111000000000
000000001010010001011110010000000
000100010100010000111100000100000
000000001001100100011111000000000
000010001001000010111010000010000
000100100001001000111100010000000
000001001100000100111010100000000
000100100001000001111010000000001
000000001010001010011110000100000
000100001001100000111100000010000
000010001000010001110110001000000
000001010001000010111010000000010
000001000100001100101110100000000
000001001100100000111100000000001
000000010010100100011110000010000
000100001000100001110110000000100
000010010001001000111100010000000
000010000001010001101110000000100
000100100001001000111100000000001
000000100100010010011110000010000
000001010001010000111100000100000
000001001000010010110110000000001
000001010000001010110110001000000
000000001001010010011110000010000
000100010010000100111010000010000
000010001000001010110110000001000
000100100000010010110110000000001
000100010010100000111100000010000
000001000010010001101110000001000
000100000001100001101110000000100
000000010100010100011110000100000
000000010010001001011110000010000
000000100001001100011110010000000
000001001000010010110111000000000
000100100010000010111010000000001
000000010010001001011111000000000
000010000010100100101111000000000
000000010100100010011110010000000
000001000010001010101110000000100
000010010100100000111100000000001
000010001010001000111100000000010
000000010001001010011110001000000
000010001001000010111010000001000
000100010000100010110110001000000
000001100100001000111100000010000
000100000010100010101110000000100
000100010100000010111010000000010
000010100100010000111100000010000
000010100000010100110110001000000
000010000100100010101110010000000
000010100010100000111100000100000
000100000100010010101110000000010
000001000001100100101110000000010
000000001100100001011110001000000
000100100000001001110111000000000
000100010100010000111100000000010
000010100000100010110110000001000
000000010001001010011110010000000
000100010010000100111010000001000
000010000010001001101110000000010
000100000010100010101110100000000
000000010100010100011110100000000
000001001000100100110111000000000
000000001010010001011110001000000
000001001010010000111100000000001
000010100010100000111100000000010
000001010001010000111100000000010
000001100001100000111100000000010
000000100010010100011110010000000
000001100100001000111100000000100
000100001001000100111010000001000
000010010001001000111100000000001
000001100001100000111100000100000
000010000010001001101111000000000
000100010000010100110110000100000
000001100001000100111010001000000
000000001001100100011110000010000
000010100010000100111010001000000
000010000010100100101110000000010
000000001100001100011110100000000
000100000010010100101110010000000
000010100100010000111100000000100
000100000001001100101110000001000
000001001000100100110110000000001
000001010000010001110110000100000
000010010000001001110110000000001
000100000100010010101111000000000
000001000100100001101110000001000
000100000001001100101110010000000
000001010010001000111100000010000
000000010001010001011110100000000
000001000001010010101111000000000
000000100100001001011111000000000
000000100100010010011111000000000
000000001001010010011111000000000
000000001010001010011110100000000
000001010000010001110110000001000
000100100010010000111100000000001
000000100010100010011110000100000
000100010100000010111010001000000
000100001100000001111010000000010
000100010000100010110110000000100
000100001001100000111100000000100
000001010000001010110110000000100
000100001000001100110110000001000
000100000001100001101110100000000
000010000100010100101110000000100
000000100010100010011110100000000
000010001010000001111010000000010
000100010000010100110110000001000
000000100001100001011110000100000
000010010001000001111010100000000
000001010001000010111010001000000
000010010000100100110110000000001
000010100010000100111010000000010
000001001010010000111100010000000
000010001010000001111010001000000
000001000010001010101110100000000




=== State Orbit 35 =====================
size : 60
repr state: 000100010010100100111110000010000
lex min decimal: 173066777548076187217079
states:
000001100100001001111110000010000
000100010100010010111110000000010
000100001001001100111110000001000
000010001010001010111110000100000
000010100100010100111110000000100
000010001001010010111110000010000
000001100001100001111110000100000
000001010010010001111110000001000
000100100100010010111111000000000
000010010100010100111110100000000
000001010001010001111110000100000
000010001001001010111110000001000
000001010010001010111110000000100
000001001100100100111110000000001
000010010001010001111110100000000
000010010001001010111110010000000
000100100010010100111110010000000
000001001001100100111111000000000
000100001001100001111110000000100
000100001100100001111110001000000
000100010010100010111110000000100
000001010001001010111110001000000
000010100100100010111110000001000
000010001001010001111110000000100
000001100001100100111110000000010
000100100001100001111110100000000
000001001001010010111111000000000
000001100100100001111110000001000
000010010010001001111111000000000
000100010010100100111110000010000
000010010100100010111110010000000
000100010100010100111110000100000
000100001100001100111110000100000
000001100001001100111110001000000
000010001010001001111110000000010
000100100001001100111110010000000
000010100010100100111110000000010
000001001100001100111110100000000
000001010010001001111110000010000
000010010100100100111110000000001
000100100010010010111110000000001
000001001010010010111110000000001
000100100001001001111110000000001
000010100100010010111110000010000
000100100010100010111110100000000
000010100010010100111110001000000
000100001001100100111110000010000
000001001100100001111110010000000
000001100100001100111110000000100
000010001010010001111110001000000
000001001010010001111110010000000
000001010001010010111110000000010
000010010010100100111111000000000
000010010001001001111110000000001
000100100100001001111111000000000
000100001100001001111110000000010
000010100010100010111110000100000
000100010010010100111110000001000
000001001010001010111110100000000
000100010100100010111110001000000




=== State Orbit 36 =====================
size : 180
repr state: 000100010010100001111110000010000
lex min decimal: 175501172430953451449527
states:
000001100001100010111110000000010
000010010001100100111110000000001
000100010100001010111110000000010
000100100010001010111110000000001
000010001010001100111110000100000
000100010100010001111110000000010
000001010010001100111110000000100
000001100010001100111110001000000
000001010001100010111110000000010
000001010100100010111110001000000
000100010001001100111110010000000
000100001010001010111110100000000
000100001010010001111110001000000
000100010001100001111110100000000
000100001100010010111110000000010
000100001001010010111110000010000
000100100010001001111111000000000
000010100001100010111110000001000
000010100001001100111110010000000
000100001100010001111110000000010
000010001100100001111110010000000
000001010100001010111110001000000
000010100001010001111110100000000
000010010001100100111111000000000
000100010001001010111110001000000
000100010100010001111110000100000
000010100100001010111110000001000
000100100001010010111111000000000
000001010010100001111110000010000
000010100010001001111110000000010
000001010001100100111111000000000
000010100001010100111110001000000
000001100010100001111110000001000
000001100100010001111110000010000
000100010001010001111110100000000
000100100010001001111110000000001
000100010010001001111110000010000
000001010001100010111110001000000
000010100010100001111110000000010
000100010001001010111110010000000
000100010001100001111110000000100
000100001001100010111110000000100
000100010001010100111110000100000
000001010100001100111110000000100
000100001100010010111111000000000
000001010010100100111110000010000
000010001100010001111110000000100
000001100010001010111110100000000
000001100100001010111110000010000
000001001010010100111110000000001
000010001010100100111111000000000
000010001001100100111110000010000
000010010100001100111110000000001
000100100010010001111110000000001
000010010100100001111110000000001
000001100100001010111110000000100
000010001100001100111110100000000
000010100100001001111111000000000
000001001010100100111110000000001
000010010100001001111110000000001
000010001100001100111110000100000
000001100001010010111110000000010
000100001010100010111110000000100
000010010001001100111110010000000
000001100001010010111111000000000
000010010001100001111110000000001
000100010100001010111110001000000
000010001100100010111110010000000
000001100010100010111110000100000
000100010010100001111110000010000
000010001010100100111110000000010
000100010001010001111110000100000
000100100001010010111110000000001
000100010001100010111110001000000
000100001100001010111110000100000
000001010100010001111110000001000
000001010100001100111110100000000
000001001100100010111110000000001
000010001100100010111110000001000
000001010100010100111110000100000
000100100010001010111110100000000
000001010100001010111110000000100
000010100001001010111110000001000
000010100001100001111110000100000
000001100001010100111110000000010
000100100010010001111110010000000
000001100010010100111110001000000
000010001010100001111110000000010
000001100010100001111110000100000
000001001010100010111110100000000
000100001010001100111110000001000
000100010010100001111110000000100
000100001001010100111110000010000
000100100001001010111110010000000
000001100010001100111110000000100
000001100001100010111110000100000
000010001001010100111110000000100
000001010001010100111110000100000
000100001001010100111110000001000
000100100001010001111110000000001
000010100100001001111110000010000
000001010100100001111110010000000
000010010001100001111110100000000
000001001100010100111110100000000
000010010001001100111110000000001
000001001010100100111111000000000
000100010001010100111110000001000
000010001001100010111110000010000
000001010010100100111111000000000
000010001010100001111110001000000
000100001010100010111110100000000
000100001010001010111110000100000
000010100001001100111110001000000
000100010100001001111110000000010
000001010001100100111110000000010
000001100100010010111110000010000
000001100100010010111111000000000
000010001010001100111110000000010
000100001001010010111111000000000
000010100010001100111110001000000
000001010100100001111110000001000
000100100001001010111110000000001
000001010010100001111110000001000
000001100010010001111110000001000
000010001100001010111110000001000
000100001010010001111110010000000
000001100010010001111110010000000
000010001100010100111110000000100
000001001010010100111110010000000
000001001100100010111110010000000
000100001010010100111110000001000
000100010001001100111110000001000
000010010100001001111111000000000
000100001010100001111110000000100
000010100001100001111110100000000
000100100001010001111110100000000
000001100100010001111110000001000
000010001100010001111110001000000
000100010010001001111111000000000
000010100010001100111110000000010
000001010100010001111110000100000
000001100010100010111110100000000
000001001100010100111110000000001
000010100100001010111110000010000
000010100100010001111110000010000
000100001100001010111110000000010
000010100001010100111110000000100
000010001100100001111110001000000
000001100010001010111110000000100
000010100001100010111110000100000
000001010001010100111110000000010
000010010100001100111110100000000
000100001100010001111110001000000
000010001100010100111110100000000
000010100100010001111110000000100
000010010100100001111110010000000
000001010100010100111110100000000
000010100010100001111110000100000
000001100001010100111110001000000
000100010001100010111110000000100
000010001100001010111110000100000
000010100001001010111110010000000
000010100010001001111111000000000
000100001010010100111110010000000
000100010010001100111110000010000
000100001010001100111110000100000
000100001001100010111110000010000
000100010100001001111111000000000
000010001001100100111111000000000
000010100001010001111110000000100
000100010010001100111110000001000
000010001001100010111110000001000
000001001100010010111110000000001
000001100010010100111110010000000
000001001010100010111110000000001
000010001001010100111110000010000
000001010100100010111110010000000
000100001010100001111110001000000
000001001100010010111111000000000
000001010010001100111110000010000




=== State Orbit 37 =====================
size : 180
repr state: 000100010010001000111100000010000
lex min decimal: 22005831882114875092151
states:
000010100100001000111100000010000
000100000010010001101110010000000
000001100010001000111100000000100
000010001100000001111010001000000
000000100010001100011110001000000
000001010000010100110110000100000
000100100010001000111100000000001
000000010100010001011110000100000
000001100010000100111010001000000
000010000010001100101110000000010
000100001010010000111100010000000
000000010010001100011110000010000
000100010001010000111100000100000
000100010001001000111100010000000
000001100000100010110110000100000
000100000001010001101110100000000
000001100001000010111010000000010
000010010100000001111010000000001
000001000010100010101110100000000
000100000001010010101111000000000
000001010000100010110110001000000
000010001000100001110110001000000
000000010010100001011110000010000
000001010010100000111100000010000
000010000001010100101110000000100
000100010001000001111010100000000
000010000001100010101110000001000
000000100001010010011111000000000
000010100001100000111100000100000
000001100001010000111100000000010
000010000100001100101110100000000
000001000010100001101110000001000
000001000010010100101110010000000
000001000100010010101111000000000
000000001010100100011111000000000
000010100010000001111010000000010
000100010001000100111010000001000
000000100010010001011110010000000
000000001100001010011110000100000
000000100100001010011110000010000
000001010100000001111010000001000
000010000100001001101111000000000
000100000001001010101110010000000
000001100000010010110111000000000
000010001000100100110111000000000
000001001000100010110110000000001
000001001010000100111010000000001
000000001010001100011110000100000
000010000001001100101110010000000
000100000100010001101110000000010
000100010010000001111010000010000
000100000001010100101110000001000
000100001000010010110111000000000
000000100001001010011110010000000
000001010001000100111010000000010
000100100010000001111010000000001
000000001100010001011110001000000
000000001010100001011110001000000
000100001000100010110110000000100
000001010000001100110110000000100
000000001010100010011110100000000
000010010000001100110110000000001
000000001010010100011110010000000
000100001010000001111010001000000
000000100001010100011110001000000
000000001001010100011110000010000
000010001000010100110110000000100
000100010000001100110110000001000
000100000010100001101110000000100
000001010100000010111010001000000
000010100010001000111100000000010
000010000100001010101110000001000
000010001100000100111010100000000
000001001010100000111100000000001
000010001100000010111010000001000
000000100010001010011110100000000
000100000010001001101111000000000
000001000001100010101110000000010
000000100001010001011110100000000
000100100000001010110110000000001
000000010001010100011110000100000
000001000010100100101111000000000
000000100010100001011110000100000
000001100010000010111010100000000
000010000001100001101110100000000
000010001000001100110110000100000
000001000100010100101110100000000
000010100001000010111010000001000
000010010100001000111100000000001
000001010100010000111100000100000
000010000001100100101111000000000
000010100001001000111100010000000
000010000010100001101110000000010
000100001000010100110110000001000
000100010100001000111100000000010
000001000100001010101110000000100
000000001100100010011110010000000
000000010100001010011110001000000
000100010001100000111100000000100
000100010000010001110110000100000
000000010001100100011111000000000
000001100100010000111100000010000
000010001100010000111100000000100
000100100001000010111010000000001
000010100001010000111100000000100
000001100010000001111010000001000
000000010001100001011110100000000
000010100000001100110110001000000
000100001010000100111010000001000
000010100000001001110111000000000
000001100000010100110110001000000
000100001100010000111100000000010
000010001100001000111100000100000
000100001010100000111100000000100
000010100100000001111010000010000
000001000010001100101110000000100
000010100000100001110110000100000
000000001100010100011110100000000
000000100100010001011110000010000
000001010010000100111010000010000
000010100001000100111010001000000
000100001010001000111100000100000
000000010100100001011110010000000
000010010000100001110110000000001
000100100001010000111100000000001
000001000001010100101110000000010
000001100000001010110110000000100
000010001001100000111100000010000
000100000001100010101110000000100
000001100010100000111100000100000
000100001000001010110110000100000
000001010100001000111100000000100
000010000100010001101110000000100
000001000100010001101110000001000
000100001000010001110110001000000
000000001001100010011110000010000
000000100010001001011111000000000
000100010100000001111010000000010
000100000100001010101110000000010
000000010100001001011111000000000
000100100000010001110110000000001
000100000010001010101110100000000
000100010010001000111100000010000
000100001001010000111100000010000
000010001100100000111100010000000
000010001001000100111010000010000
000100010000001001110111000000000
000001001100000010111010000000001
000010100000010001110110000000100
000100010001000010111010001000000
000100010000001010110110001000000
000010001010100000111100000000010
000000010100001100011110100000000
000001001000010100110110000000001
000100001100000010111010000000010
000000010001001100011110010000000
000100001010000010111010100000000
000001010000100001110110000001000
000001100100000010111010000010000
000010010001100000111100000000001
000001100010010000111100010000000
000001010100000100111010100000000
000001010001100000111100000000010
000010100000001010110110000001000
000010010001000100111010000000001
000000010001100010011110001000000
000001010100100000111100010000000
000001100000010001110110000001000
000100010000100001110110000000100
000100001001000010111010000010000
000001000100100010101110010000000
000001010000100100110111000000000
000010001010000100111010000000010
000010100001000001111010100000000
000010001000100010110110000001000
000001001100010000111100000000001
000100000010001100101110000001000
000000100001100010011110000100000
000010000100100001101110010000000
000000001100010010011111000000000




=== State Orbit 38 =====================
size : 180
repr state: 000100010001000000111000000010000
lex min decimal: 3107268679389005835447
states:
000100000001010000101100000000010
000001000010000100101010000000010
000000100010000001011010001000000
000000010000100001010110000100000
000000100001000010011010001000000
000000001000010100010110001000000
000000000100010001001110100000000
000100010000001000110100000000100
000100001000000010110010000000001
000010100000000001110010001000000
000000001000100010010110001000000
000010100000000001110010000000001
000000100000001010010110001000000
000001010100000000111000000010000
000001000010100000101100000000010
000100000001000010101010000000010
000010000000100001100110000000100
000001010000000100110010000001000
000010001100000000111000000000001
000000001100000010011010001000000
000000001010100000011100000100000
000001100010000000111000000000010
000000000010001100001111000000000
000000001010100000011100010000000
000001010100000000111000000000001
000000100000001010010110000100000
000010100001000000111000000010000
000100000010000001101010000000010
000010000000001100100110000001000
000100001010000000111000000010000
000100010000000001110010001000000
000001100000000010110010001000000
000010100000001000110100000100000
000000000100010001001110010000000
000010000001100000101100000000100
000000010100001000011100010000000
000100000001000010101010000001000
000000010001100000011100000010000
000100000000001010100110000001000
000100001000000010110010000001000
000001100000000010110010000000001
000001010100000000111000000000010
000010001000100000110100000100000
000000100001010000011100010000000
000000100001000010011010100000000
000001010000100000110100000100000
000000001100010000011100000100000
000010000000100001100111000000000
000000001010000100011010000010000
000000000001010100001111000000000
000000000100010001001111000000000
000010001100000000111000000010000
000000100001010000011100000100000
000001000100010000101100010000000
000001000010000100101010100000000
000000001000010100010110000100000
000010000000001100100110000000100
000100001000010000110100000000100
000000100000001010010111000000000
000001100000010000110100000000100
000000000010001100001110100000000
000001100010000000111000000000001
000001000010100000101100000000100
000010001100000000111000000000010
000100000000001010100110000000100
000000000001100010001111000000000
000010100001000000111000000000010
000000010001000100011010000010000
000100000010001000101100000000100
000001010000000100110010000000001
000001010000100000110100000000001
000100010000001000110100000000001
000010001000100000110100000000001
000100010000001000110100000100000
000010000000100001100110000001000
000010000100000001101010000000010
000000010100001000011100000010000
000001100000010000110100000100000
000000100001010000011100000010000
000000001000100010010110000100000
000100010001000000111000000000001
000001000100010000101100000000100
000001000000100010100110000000100
000100001000010000110100000100000
000000100001000010011010000010000
000010001000000100110010001000000
000100000010000001101010100000000
000010000001000100101010100000000
000100010001000000111000000010000
000000001100010000011100010000000
000000001000010100010111000000000
000010000100001000101100000000010
000000001100000010011010100000000
000000100000010001010110001000000
000000000100001010001110010000000
000010001000000100110010000001000
000010000001000100101010000000010
000000010001000100011010001000000
000000000100001010001111000000000
000010001000000100110010000000001
000100001010000000111000000000010
000100000000001010100111000000000
000001000100000010101010000001000
000001000100010000101100000000010
000100000000010001100110000001000
000001000000010100100110000000100
000000010000001100010110001000000
000100000001010000101100010000000
000001000000100010100111000000000
000000010001100000011100000100000
000100000010001000101100000000010
000010000100001000101100000000100
000100000001010000101100000000100
000000000010100001001110100000000
000000100000010001010110000100000
000000001010000100011010001000000
000010000001100000101100000000010
000000000001100010001110100000000
000000010000001100010111000000000
000001100000010000110100000000001
000000010001000100011010100000000
000000001010100000011100000010000
000010100000001000110100000000100
000100010000000001110010000001000
000000100010001000011100000010000
000000000001010100001110010000000
000001000100000010101010000000010
000000000010100001001110010000000
000010000000001100100111000000000
000010000001100000101100010000000
000001000000010100100111000000000
000001010000000100110010001000000
000001000010000100101010000001000
000001100000000010110010000001000
000100000000010001100111000000000
000000010001100000011100010000000
000001000000100010100110000001000
000000001100000010011010000010000
000000010000100001010111000000000
000000010100000001011010100000000
000100000010000001101010000001000
000001000000010100100110000001000
000100000001000010101010100000000
000000000010001100001110010000000
000100001000010000110100000000001
000010100000001000110100000000001
000000100010000001011010100000000
000000000001010100001110100000000
000010000100000001101010000001000
000000010000001100010110000100000
000000000100001010001110100000000
000100000010001000101100010000000
000001100010000000111000000010000
000010100001000000111000000000001
000100001000000010110010001000000
000001000100000010101010100000000
000010000100000001101010100000000
000010100000000001110010000001000
000000100000010001010111000000000
000000000001100010001110010000000
000000010000100001010110001000000
000001010000100000110100000000100
000000100010001000011100010000000
000000100010001000011100000100000
000100000000010001100110000000100
000000010100000001011010001000000
000000100010000001011010000010000
000100010000000001110010000000001
000100010001000000111000000000010
000010001000100000110100000000100
000000001010000100011010100000000
000001000010100000101100010000000
000000010100000001011010000010000
000000001100010000011100000010000
000000001000100010010111000000000
000010000100001000101100010000000
000010000001000100101010000001000
000100001010000000111000000000001
000000000010100001001111000000000
000000010100001000011100000100000




=== State Orbit 39 =====================
size : 180
repr state: 000100010001100000111100000010000
lex min decimal: 22006390328468669033655
states:
000010000100001010101110010000000
000000100100001010011111000000000
000001000100001010101110100000000
000100000010001100101110010000000
000010010100000001111010100000000
000001000001100010101111000000000
000100010100001000111100000100000
000001010100010000111100000000010
000001010000010100110110000001000
000000010001010100011110100000000
000000001010001100011110100000000
000100100010000001111010100000000
000000001100100010011110001000000
000000001100010001011110010000000
000000010001100100011110000010000
000010001100000010111010000010000
000001010001100000111100000100000
000100010000001010110110000000100
000000100010010001011110001000000
000010000001001100101110000001000
000000100010001100011110010000000
000010001000100001110110000000100
000000001100010100011110000100000
000010001100010000111100000010000
000100010001000100111010000010000
000100100001000010111010100000000
000000100001010100011110010000000
000100001001010000111100000000100
000001000100100010101110000001000
000001000010001100101110100000000
000100000001100010101110100000000
000001100100000010111010000001000
000000001010100001011110010000000
000010001000100100110110000000001
000001010100001000111100000010000
000001010001000100111010001000000
000001100000100010110110000001000
000001100000010100110110000000100
000100001010100000111100000010000
000100001000001010110110000001000
000010000010001100101111000000000
000000001010100100011110000010000
000000100001010010011110000010000
000000100010100001011110100000000
000000010100001001011110000010000
000001000100010001101110010000000
000010100010001000111100000100000
000001100001000010111010001000000
000100001000100010110110001000000
000010100000001001110110000000001
000001100010000001111010000010000
000010100000100001110110000001000
000100010000010001110110000001000
000000100010001001011110000010000
000001010000100100110110000000001
000100100000001010110111000000000
000001001010100000111100010000000
000100001100010000111100000100000
000000001010010100011110001000000
000010000100010001101110100000000
000010100001001000111100000000001
000001100010000100111010000000010
000100010010001000111100000000100
000000010010100001011111000000000
000100000010010001101110000001000
000000100010001010011110000100000
000100000100010001101111000000000
000010001010000100111010001000000
000010001100000100111010000000001
000001001100010000111100010000000
000000100001100010011110100000000
000001000010100010101110000000100
000001100000010010110110000000001
000010100001010000111100000010000
000010010001000100111010100000000
000000100100010001011111000000000
000100010000100001110110001000000
000100001010000001111010000000010
000010000100001001101110000000010
000100010001000010111010000000010
000010001000001100110110000001000
000100100010001000111100010000000
000001001000100010110111000000000
000010000001100001101110000000100
000010100000001100110110000000100
000010100001000001111010000000001
000001010100000010111010000000010
000000010001001100011110001000000
000000010100010001011110100000000
000001010010100000111100000000100
000001000010010100101110000001000
000001100100010000111100000000100
000010100001000100111010000000010
000100010010000001111010000001000
000001100000010001110110000100000
000100010001010000111100000000010
000100001010000010111010000000001
000000100001010001011110000100000
000100001000010010110110000000001
000100100001010000111100010000000
000010001100000001111010000000010
000000001100010010011110000010000
000100001000010001110110000000100
000000010010001100011111000000000
000010100001100000111100000000010
000001010100100000111100000000001
000001001000010100110111000000000
000001010000001100110110001000000
000010000001010100101110100000000
000100000010100001101110100000000
000010001100100000111100000000001
000010000100100001101110000001000
000100000001010010101110000000010
000010100010000001111010001000000
000001000010100100101110000000010
000100000001010001101110000000100
000010100000010001110110001000000
000100010001100000111100000010000
000010100100000001111010000001000
000010100001000010111010000010000
000010001100001000111100000000010
000000100001001010011110001000000
000000001010100010011110000100000
000010000100001100101110000000100
000000010100001100011110000100000
000001010000100010110110000000100
000001010000100001110110000100000
000010001001000100111010000001000
000000001100001010011110100000000
000001100010100000111100000000010
000100000100001010101111000000000
000010100100001000111100000000100
000100000010001010101110000000100
000010000010100001101111000000000
000000010100100001011110001000000
000001000100010010101110000000010
000100001010010000111100000000001
000100010000001100110110000100000
000001100010010000111100000000001
000001010010000100111010000001000
000000010100001010011110010000000
000001000100010100101110000000100
000010001001100000111100000000100
000100001001000010111010000001000
000000001001100010011111000000000
000001010100000100111010000000001
000100100000010001110111000000000
000000010001100001011110000100000
000100000010001001101110000000010
000001010100000001111010000010000
000010100000001010110110000100000
000010001010100000111100000100000
000100000001001010101110000001000
000100001010001000111100000000010
000100010000001001110110000000001
000000001001010100011111000000000
000010010001100000111100010000000
000001100010000010111010000000001
000010010000001100110111000000000
000010010100001000111100010000000
000001100001010000111100000100000
000100001100000010111010001000000
000010010000100001110111000000000
000010000001100010101110010000000
000001100010001000111100000010000
000100010100000001111010001000000
000000010001100010011110010000000
000100001010000100111010000010000
000010001000100010110110000100000
000001001100000010111010100000000
000001001010000100111010100000000
000100010001001000111100000000001
000100010001000001111010000000001
000001000010100001101110010000000
000001000001010100101111000000000
000010000001100100101110000000010
000100000001010100101110010000000
000010001000010100110110001000000
000001100000001010110110001000000
000100001000010100110110000100000




=== State Orbit 40 =====================
size : 60
repr state: 000100010001100100111110000010000
lex min decimal: 173140564524371025423543
states:
000001100010001001111110000010000
000010100010001010111110000100000
000001010001100001111110000100000
000100100010001100111110010000000
000001001010001100111110100000000
000010100001001001111110000000001
000100001010010010111110000000001
000001010010100010111110000000100
000001100100010100111110000000100
000010010100010001111110100000000
000001010100010010111110000000010
000001100010010010111110000000001
000001010001001100111110001000000
000001100010100100111110000000010
000100010100001100111110000100000
000100100100010001111111000000000
000100001100010100111110000100000
000001001010100001111110010000000
000100010010001010111110000000100
000100001010100100111110000010000
000001001001010100111111000000000
000100100001010100111110010000000
000001001100010001111110010000000
000010001001100001111110000000100
000100001001001010111110000001000
000010001001001100111110000001000
000010001010010100111110001000000
000100001001010001111110000000100
000100001100100010111110001000000
000010001100001001111110000000010
000010010010001100111111000000000
000001010010010100111110000001000
000001001001100010111111000000000
000100010001001001111110000000001
000001100100100010111110000001000
000100100010100001111110100000000
000100010001010010111110000000010
000100010100100001111110001000000
000100100100001010111111000000000
000001010100100100111110000000001
000001100001001010111110001000000
000010010001010100111110100000000
000001001100001010111110100000000
000010001010100010111110000100000
000100010010010001111110000001000
000010100100100001111110000001000
000010001100100100111110000000001
000010001100010010111110000010000
000100001010001001111110000000010
000010010100001010111110010000000
000010010001100010111110010000000
000010100100001100111110000000100
000010100001100100111110000000010
000001010100001001111110000010000
000010100010010001111110001000000
000100010001100100111110000010000
000001100001010001111110000100000
000010100001010010111110000010000
000100100001100010111110100000000
000010010010100001111111000000000




=== State Orbit 41 =====================
size : 360
repr state: 000100010000100000110100000010000
lex min decimal: 2738198689925993688247
states:
000001000000100001100110010000000
000100000100001000101101000000000
000000001100100000011100001000000
000000100000010010010110000000001
000100010000010000110100000000010
000000001000100100010110000010000
000000000010100100001110000000010
000100000000010100100110000100000
000000000100010100001110000100000
000100010100000000111000001000000
000000100100000001011011000000000
000000001000001100010110000001000
000001010010000000111000000001000
000000010000100010010110010000000
000000100100000010011010000001000
000000001000100100010110000000001
000010100000000100110010000000010
000001000001100000101101000000000
000001000001010000101101000000000
000000100010000010011010000100000
000000100010000100011010000000010
000100000000010100100110010000000
000010100000010000110100001000000
000000100100000001011010000001000
000010000100010000101100100000000
000000010000010100010110100000000
000010001000010000110100001000000
000000000001100001001110000100000
000100001000000001110010000000100
000000001010000001011010000000010
000000100001001000011100000000001
000000001001000100011011000000000
000010010000001000110100010000000
000010100000000010110010000100000
000001001000000100110010100000000
000000000100001001001110000010000
000010000100010000101100000010000
000010001010000000111000000100000
000000010000001010010110010000000
000100000001000001101010000000001
000010000000001001100110000000001
000000010001001000011100001000000
000000000100010100001110000000100
000001010000010000110100000000010
000000010000100010010110000000100
000010001000001000110100000001000
000100100010000000111000010000000
000000000100010010001110000010000
000010100010000000111000001000000
000001000010000010101010000000100
000001000001000100101011000000000
000001000000010001100110010000000
000000100001000100011010010000000
000010010001000000111000010000000
000100100010000000111000100000000
000100000000001100100110010000000
000001000000001010100110100000000
000000001010001000011100000000010
000000010010000001011010000001000
000000010010000100011010000001000
000000000001100100001110000010000
000001000010000001101010010000000
000010100000100000110100000000010
000000010100100000011100000000001
000010010000000001110010100000000
000001000000001100100110001000000
000100001000000100110010000010000
000010000100000100101010000000001
000000010000001001010110000010000
000010100100000000111000000000100
000001100000001000110100001000000
000100100001000000111000010000000
000010000000100010100110000100000
000100010000000100110010000010000
000000100000010010010110000010000
000100000000100010100110001000000
000001010000000010110010000000100
000000000001010001001110000000100
000000010100000010011010010000000
000000001100100000011100000000001
000000000010001010001110000100000
000001100000100000110100000001000
000000100000010100010110010000000
000000000001100001001110000000100
000000010000010001010110100000000
000100000010000100101010000010000
000100000010000100101010010000000
000000001100001000011100100000000
000100000000001001100110000000001
000100100000001000110100010000000
000001001100000000111000100000000
000100100000000010110011000000000
000000000100100010001110001000000
000000010000100100010110000010000
000001000010010000101100000001000
000000001001000010011011000000000
000000100000100001010110100000000
000000000010100100001110000010000
000010100010000000111000000100000
000100001000000001110010000000010
000000100010100000011100000000010
000010010001000000111000100000000
000000100001001000011100001000000
000100000010000010101010000000001
000001000001000010101011000000000
000001000000010001100110000100000
000000100010000010011010000000001
000100100000010000110100010000000
000000010100000100011010000100000
000000100100010000011101000000000
000001001000000010110011000000000
000001000001100000101100000100000
000001000100000001101010010000000
000000010000010001010110000001000
000100000100010000101100000100000
000000001000100001010110010000000
000000000001001010001110001000000
000000100100001000011100000000100
000010000001000001101010000000100
000001100000000001110010000010000
000000000100001100001110000100000
000010000010100000101100000100000
000010001000001000110100000000010
000010000100100000101100000001000
000010000001001000101100000001000
000000001000010001010110000000100
000100010000000010110010000000100
000100000001000100101010010000000
000010001000000010110010000010000
000010000010001000101100000100000
000100000010000010101010000000100
000000000001010001001110000100000
000010000000010100100110100000000
000100001100000000111000001000000
000010000000100010100110010000000
000100100001000000111000100000000
000000000010100010001110000100000
000001000001000010101010001000000
000000010000001010010110000000100
000001100000100000110100000000010
000100000001000001101010000000100
000001001000100000110100010000000
000100000000001001100110000000010
000000000100100001001110000001000
000010001000010000110100000010000
000000100000100010010110000001000
000010100000100000110100000001000
000010000000001001100110000000010
000000010010001000011101000000000
000000001010010000011100000000001
000100000100000001101011000000000
000000100100000010011011000000000
000000000010001010001110000000100
000010010100000000111000100000000
000100000100000001101010001000000
000100000100001000101100000100000
000000010000010100010110000001000
000001000010001000101100000010000
000000010100000010011010000000010
000010000000100100100110000000001
000010000100000100101010000000100
000000100001000100011010000000010
000001000100000001101010000010000
000000000010001001001110000010000
000010000010100000101101000000000
000000010001010000011100000000010
000100100000010000110101000000000
000000010100010000011100000000010
000000001000100001010110000000100
000001000010001000101100100000000
000000100001000001011010000000001
000001000100100000101100000000001
000100100000000001110011000000000
000001000000001100100110100000000
000100001001000000111000000000100
000000001001010000011100000000100
000000100001000001011010000100000
000000000010010100001110000001000
000000001100000100011010000100000
000000100000001001010110000000001
000100001001000000111000000001000
000000001010000001011010010000000
000001010000010000110100000001000
000100000001001000101100000000001
000001000000010010100110000000010
000000001100000001011010000000010
000010100000010000110100000010000
000100010000000010110010000000010
000010000100000010101010000010000
000000000010010001001110001000000
000010000000010001100110001000000
000001000000100100100110000000010
000000000010100010001110000000100
000000001001000010011010000001000
000010100000000010110010000010000
000000010100010000011100100000000
000010001001000000111000000000100
000001100000001000110100000010000
000000000010001001001110000000010
000100000001100000101100100000000
000000000001010010001110000000010
000000000100001001001110000000010
000010000000010001100110100000000
000010000000001010100110000100000
000000010010100000011100000000100
000010000010000100101010001000000
000010001010000000111000001000000
000001000010000001101010000010000
000000010001000010011010010000000
000100000100010000101101000000000
000000001010001000011100100000000
000000100000100010010110100000000
000010000010001000101101000000000
000000010001000001011010000100000
000000100000001100010110000000100
000100001000001000110100000000010
000001010000001000110100001000000
000010000001000010101010010000000
000100100000000010110010100000000
000000100010100000011100100000000
000001100100000000111000000000100
000100000010100000101100000010000
000100010000100000110100000010000
000010010100000000111000010000000
000000001000010001010110010000000
000000000100010010001110000000010
000000001100000100011010000000001
000000100100001000011101000000000
000000000100001100001110000000100
000100000000001100100110000100000
000010000010000001101010001000000
000100000010010000101100000000001
000001000000001010100110001000000
000000100000010100010110000000100
000001010001000000111000001000000
000010000000001010100110010000000
000010000010000001101011000000000
000000100001100000011100100000000
000000000001100100001110000000010
000000001000010010010110000010000
000100001000000100110010000100000
000000001001100000011101000000000
000001000100000100101010000000001
000000001000001010010110000001000
000001010000000010110010000000010
000001010001000000111000000100000
000001000010010000101100000000001
000000001000010010010110000000001
000100000001100000101100000010000
000010000100000010101010010000000
000100000100000010101010001000000
000000001000001100010110100000000
000000010010000100011011000000000
000100001000100000110100001000000
000000001010000010011010000000001
000000100000001001010110000010000
000001000000100001100110000100000
000001001000000010110010100000000
000010010000100000110100010000000
000001000100100000101100000001000
000000000001001010001110000001000
000100010100000000111000000100000
000010000001010000101100100000000
000001000001000100101010001000000
000001001010000000111000100000000
000100010000010000110100000001000
000001010000000001110010000100000
000010001000000001110010000000100
000010100100000000111000000001000
000100000100000010101011000000000
000001010000001000110100000010000
000000000001001100001110000001000
000010000001010000101100000010000
000010010000000100110010100000000
000010001001000000111000000001000
000010010000000001110011000000000
000000010000100100010110000000001
000000010010100000011101000000000
000010000000100100100110000000010
000000001100001000011100000000010
000001010000000001110010000010000
000000001100000001011010010000000
000100001000100000110100000010000
000100001000001000110100000001000
000000100010000100011010010000000
000000010010000001011011000000000
000100000000010010100110000000001
000001100001000000111000001000000
000010000001000010101010000010000
000100100000000001110010100000000
000001001000000100110011000000000
000100000010010000101100000001000
000001000000100100100110000000001
000000010100100000011100001000000
000001010010000000111000000000100
000000001000001010010110100000000
000000000010010001001110000001000
000010100000000100110010000000100
000001000100001000101100000010000
000000000010010100001110001000000
000001000001010000101100000100000
000100001100000000111000000100000
000000001001100000011100000000100
000000000100100010001110000001000
000000100010010000011100001000000
000001001000100000110101000000000
000010010000100000110101000000000
000001100100000000111000000001000
000100000000100010100110100000000
000001001100000000111000010000000
000001100000000100110010000000100
000000010001001000011100000000001
000000100010010000011100000000001
000000000001001100001110001000000
000000010001000001011010000000001
000001001000010000110101000000000
000000100000001100010110010000000
000010000001000001101010000000001
000010010000000100110011000000000
000100100000001000110101000000000
000010000001001000101100000000001
000010010000001000110101000000000
000100000000100001100110100000000
000100000010100000101100100000000
000001001000010000110100010000000
000000100000100001010110000001000
000000100001100000011100000000010
000000001001000100011010000001000
000000010100000100011010000000001
000001100000000001110010000100000
000100000000010010100110000000010
000000010000001001010110000000001
000001000010000010101010000000001
000001100000000100110010000000010
000001001010000000111000010000000
000010000100100000101100000000001
000100010000100000110100001000000
000001000000010010100110000000001
000000100100010000011100000000100
000010000000010100100110001000000
000000000001010010001110000010000
000000010001010000011100100000000
000000010001000010011010000000010
000100010010000000111000000001000
000000001010000010011010000100000
000000010010001000011100000000100
000010001000000001110010000000010
000100000001001000101100000001000
000000001001010000011101000000000
000001000100000100101010000000100
000010000010000100101011000000000
000100010010000000111000000000100
000100000000100001100110001000000
000010001000000010110010000100000
000100010000000100110010000100000
000000001010010000011100001000000
000001100001000000111000000100000
000001000100001000101100100000000
000100000001000100101010000010000
000000000100100001001110001000000




=== State Orbit 42 =====================
size : 120
repr state: 000100010000100100110110000010000
lex min decimal: 21636887993441429318839
states:
000010000010010001101110001000000
000100001100000100111010000100000
000010010001010000111100100000000
000001100100100000111100000001000
000001010010000010111010000000100
000000100100100001011110000001000
000010001000010010110110000010000
000100100000001100110110010000000
000100100000100001110110100000000
000010010000100010110110010000000
000100100100001000111101000000000
000010010010000100111011000000000
000010010100010000111100100000000
000100010100000100111010000100000
000000010100100100011110000000001
000001001010000001111010010000000
000010001001001000111100000001000
000100100010100000111100100000000
000000100100100010011110000001000
000010000001001001101110000000001
000001100000001001110110000010000
000000001010001001011110000000010
000001001100001000111100100000000
000000100100010100011110000000100
000001001000001100110110100000000
000001001001000010111011000000000
000001001100000001111010010000000
000100100000010100110110010000000
000100100001000100111010010000000
000001001000010001110110010000000
000000001100100100011110000000001
000000010010001010011110000000100
000001010001001000111100001000000
000100100100000001111011000000000
000000001001001100011110000001000
000100000100100001101110001000000
000010100010010000111100001000000
000001000100001001101110000010000
000001010000010010110110000000010
000010001010010000111100001000000
000100001001001000111100000001000
000100001100100000111100001000000
000000001100001001011110000000010
000010001000001001110110000000010
000001001001000100111011000000000
000001000010010010101110000000001
000001001010001000111100100000000
000001001000001010110110100000000
000010000010001010101110000100000
000010010100000010111010010000000
000010100100100000111100000001000
000001100000100100110110000000010
000000010001010010011110000000010
000100000100010100101110000100000
000001100100000100111010000000100
000001000001010001101110000100000
000010010010001000111101000000000
000001001000100001110110010000000
000100100100010000111101000000000
000010010000010100110110100000000
000100010100100000111100001000000
000010001001000001111010000000100
000010000010010100101110001000000
000000100001001001011110000000001
000000010010100010011110000000100
000001100001001000111100001000000
000010010000010001110110100000000
000001000001001010101110001000000
000100100010000100111010010000000
000100001000001001110110000000010
000100000001100100101110000010000
000000010001001001011110000000001
000100010000100100110110000010000
000000001001001010011110000001000
000100100100000010111011000000000
000010010000001010110110010000000
000000100010100100011110000000010
000100000010100100101110000010000
000001100001000001111010000100000
000010000100010010101110000010000
000100000001001001101110000000001
000100100001100000111100100000000
000001000100100100101110000000001
000001000001100001101110000100000
000010010001000010111010010000000
000100100000100010110110100000000
000100000100001100101110000100000
000010001010000010111010000100000
000000001010010010011110000000001
000000010010010100011110000001000
000000100001100100011110000000010
000001010010010000111100000001000
000010000001010010101110000010000
000010000100100100101110000000001
000010010010000001111011000000000
000010100100000100111010000000100
000001000010001001101110000010000
000010010010100000111101000000000
000010000010100010101110000100000
000100000010010010101110000000001
000001001001010000111101000000000
000000001001010001011110000000100
000000100010010010011110000000001
000010100000010010110110000010000
000010100010000010111010000100000
000000100100001100011110000000100
000001010000001001110110000010000
000001001001100000111101000000000
000100010010010000111100000001000
000100010000010010110110000000010
000001010001000001111010000100000
000100001000100100110110000010000
000010100000100100110110000000010
000001000001001100101110001000000
000100000100100010101110001000000
000100001001000001111010000000100
000100010010000010111010000000100
000000001001100001011110000000100
000000010100010010011110000000010
000000010010010001011110000001000




=== State Orbit 43 =====================
size : 360
repr state: 000100010000100001110110000010000
lex min decimal: 22005818371315992980663
states:
000100010001000100111010010000000
000001100010010000111100001000000
000000100100010001011110000000100
000001001100000010111010010000000
000001000100010001101110000100000
000001100010000010111010000100000
000100010000010001110110000000010
000010100001000100111010010000000
000001000001010100101110001000000
000000010001010100011110000000010
000000100001010100011110000000100
000000010001100001011110000000100
000010100001010000111100100000000
000000100001010001011110000000001
000100100001000010111010010000000
000000100001010001011110000000100
000000001010001100011110000000010
000000001010100100011110000000010
000010000001100010101110000010000
000010100000100001110110000000010
000000001001010100011110000001000
000001000010100001101110000100000
000000100010001010011110000000001
000000010100100001011110000000001
000100001100000010111011000000000
000010000100001100101110000000001
000100001000010100110110010000000
000010000100100001101110001000000
000000100001100010011110000001000
000001000100010100101110000100000
000010000001010100101110000010000
000010001010100000111100001000000
000000010001100010011110000000100
000001100100010000111101000000000
000001000100001010101110001000000
000010010000100001110110010000000
000001100010000001111010000100000
000100010000001100110110000010000
000001000100010010101110000010000
000001010000100001110110000010000
000010001000100010110110010000000
000100010001000100111010000100000
000100010000001100110110010000000
000100000010100001101110001000000
000000100100001010011110000001000
000000100010100001011110000000010
000001010100001000111100100000000
000100000010001100101110000010000
000001100000100010110110000000010
000010001000001100110110000000010
000010000001001100101110001000000
000100010000100001110110000010000
000100001010000010111010000000100
000100001010010000111100000001000
000100001000001010110110100000000
000001000001100010101110000100000
000000010001010100011110000001000
000100100001010000111101000000000
000001010000100100110110000000010
000000100010001100011110000000100
000010100010000001111011000000000
000001010010000100111010000000100
000010100001100000111100100000000
000001000010100010101110000100000
000100001010100000111100001000000
000010001001100000111100000001000
000100000001010001101110000100000
000100001000010001110110000000010
000100000001100010101110001000000
000001001010100000111101000000000
000010100000001001110110000010000
000001010100000100111010000100000
000000010100100001011110000001000
000100010001000010111010010000000
000100100010001000111101000000000
000000100001010010011110000000010
000010000100001001101110000000001
000010001000100001110110000000010
000001100001010000111101000000000
000010000001010100101110001000000
000001100010100000111100000001000
000010001001000100111011000000000
000100010100000001111011000000000
000100010001001000111100000001000
000010000100001001101110000010000
000000010001100100011110000000010
000010001000100001110110010000000
000010001000100100110110000000010
000100010000001010110110010000000
000001010000100100110110000010000
000010000010001100101110001000000
000001000100001010101110000010000
000001000010001100101110000010000
000100000001100010101110000010000
000010100001010000111100001000000
000001001000010100110110010000000
000100010010000001111010000000100
000100100010000001111011000000000
000010001100010000111100001000000
000100000100001010101110001000000
000000100010001001011110000000001
000001000100010001101110000010000
000010001001100000111101000000000
000100000100010001101110000100000
000000001100100010011110000000001
000100001010100000111100100000000
000000001100100010011110000001000
000001100010000100111010000000100
000100000100001010101110000100000
000001010010000100111011000000000
000000100010001001011110000000010
000000010001001100011110000000001
000010000010100001101110000100000
000000001001010100011110000000100
000100001010000100111010000100000
000010100000010001110110100000000
000010000010100001101110001000000
000100100010000001111010010000000
000000010010100001011110000000100
000000001001100010011110000001000
000010001010100000111101000000000
000010000100010001101110000010000
000100001001010000111100000001000
000000100001010100011110000000010
000001100000010010110110000000010
000001000010001100101110001000000
000001010100000001111010010000000
000100010000010001110110100000000
000000010010001100011110000000100
000010001100000001111010010000000
000000010001001100011110000001000
000000001010001100011110000001000
000010100001000001111010000000100
000001010000001100110110000010000
000100010010000001111011000000000
000010000001100001101110000000001
000000001010100010011110000000100
000000010100010001011110000001000
000100001001000010111011000000000
000001010001000100111010000100000
000010000100001100101110000100000
000000100001010010011110000000001
000001010100100000111100000001000
000001010000100010110110010000000
000000001010100100011110000000001
000001000100100010101110000000001
000010010001000100111010010000000
000001100010000001111010010000000
000001001010100000111100100000000
000000001010100001011110000000010
000000001100001010011110000000010
000100000100010001101110001000000
000001000010100100101110000010000
000010001000010100110110000010000
000100010000100001110110100000000
000001100010010000111100000001000
000100100000001010110110100000000
000010010100000001111011000000000
000001001010000100111011000000000
000001010100100000111100001000000
000001100010100000111100100000000
000100000001001010101110000000001
000100100000001010110110010000000
000010001000100100110110000010000
000010001000001100110110100000000
000001100000010001110110010000000
000010001000010100110110100000000
000001100010001000111100001000000
000100000010001100101110000100000
000001010000001100110110100000000
000001100000010001110110000010000
000001100000001010110110100000000
000010001100001000111100100000000
000010100100000001111011000000000
000010100001000001111010000100000
000100000001010010101110000000001
000000100010010001011110000001000
000001010100010000111100100000000
000010000100010001101110001000000
000010100010001000111100001000000
000010001100001000111100000001000
000000001001100010011110000000100
000100010001000010111010000000100
000001000100010100101110000000001
000100010100001000111101000000000
000000001100001010011110000001000
000000100100010001011110000001000
000001000010100001101110000010000
000100000010010001101110001000000
000100100001010000111100100000000
000001001100000010111011000000000
000001001100010000111100100000000
000001100100000010111010000000100
000010100000001001110110000000010
000001010100010000111100000001000
000001000001100010101110001000000
000010010100001000111101000000000
000000001100010010011110000000010
000010010100001000111100100000000
000000001010100001011110000000100
000000100010010001011110000000001
000000010100001001011110000000001
000100010001010000111100000001000
000100000010001010101110000100000
000010001100000001111010000000100
000001100001000010111011000000000
000100001010000001111010000000100
000001001010000100111010010000000
000100100001000010111011000000000
000001010010100000111101000000000
000010100001000010111010000100000
000100000010010001101110000000001
000100010100001000111100001000000
000010001001000100111010000000100
000001010100000001111010000100000
000100001001010000111101000000000
000001100100000010111011000000000
000001000010010100101110000000001
000001010001100000111101000000000
000010001100010000111100100000000
000000001100010010011110000000001
000001100100010000111100000001000
000001001000100010110110100000000
000010100001001000111100001000000
000001000010100100101110000000001
000001100010001000111100100000000
000010100010001000111101000000000
000010100000001010110110000010000
000000010100001010011110000000010
000001010000100001110110010000000
000001100001000010111010000100000
000100000001010100101110000100000
000001100001010000111100001000000
000010000010001100101110000100000
000000001100010100011110000000001
000001000001010100101110000100000
000001010100000100111010000000100
000001010100001000111100001000000
000100010001001000111100001000000
000100001000010100110110000010000
000001010001100000111100001000000
000010001100100000111100001000000
000100010010001000111100000001000
000100001010001000111100000001000
000000010100001010011110000000100
000100010001000001111010000100000
000100010001010000111100100000000
000010001100000100111010000100000
000000100010100001011110000001000
000010010000001100110110010000000
000100000001010001101110000000001
000010010001100000111101000000000
000000010001100010011110000000010
000000010100010001011110000000010
000100001100010000111101000000000
000100001000001010110110000000010
000000100010001100011110000000010
000001100000010010110110000010000
000010100100000001111010000000100
000010001100000010111010000100000
000100000010001001101110000000001
000010100100001000111100000001000
000010001010000100111011000000000
000010010000001100110110100000000
000100000001010100101110000010000
000100001010010000111100001000000
000100000010001010101110000000001
000000010010100001011110000001000
000000010100001001011110000000010
000010100001000010111010010000000
000000100001100010011110000000010
000100000001010010101110000010000
000000100001001010011110000000001
000100001010000001111010010000000
000010000001100001101110000100000
000100000010001001101110000010000
000001010100000010111010010000000
000010100000001100110110000000010
000100010100000001111010000100000
000100000001001010101110001000000
000001010000010100110110100000000
000010000100001010101110000100000
000010010001100000111100100000000
000100001100010000111100001000000
000001100010000010111010000000100
000010100000010001110110000010000
000010000100100001101110000000001
000010001100100000111100000001000
000001010001000100111011000000000
000000100001001010011110000001000
000010100000001010110110010000000
000100010001100000111100100000000
000001010100000010111010000000100
000000100010001010011110000000100
000000001100010001011110000000010
000010100001001000111100000001000
000000010001100001011110000000001
000100001000010001110110010000000
000100001010000010111010000100000
000100010001100000111100001000000
000010010100000001111010010000000
000001010000010100110110000000010
000001001000010100110110100000000
000010000001100010101110000100000
000001100010000100111010010000000
000100010010001000111101000000000
000010000100001010101110000010000
000001100000100010110110100000000
000100100010001000111100100000000
000010000001100100101110000000001
000100001001000010111010000000100
000000010100001100011110000000001
000001100000001010110110000010000
000100010001000001111010000000100
000001010010100000111100000001000
000100001000010010110110000000010
000001010000100010110110000000010
000010100100001000111101000000000
000000001010100010011110000000001
000010001000100010110110000010000
000100001100000010111010000100000
000100100000010001110110100000000
000010001010000100111010000100000
000100010000001010110110000000010
000010001100000010111010010000000
000001001100010000111101000000000
000001000010100010101110000000001
000100001010000100111010010000000
000100001000010010110110000010000
000000001010010100011110000001000
000010001100000100111010000000100
000000001010010100011110000000001
000100010000001001110110000010000
000000001100010100011110000000100
000010100010000001111010000100000
000100000010100001101110000010000
000010100000001100110110010000000
000100001000100010110110000010000
000001000100010010101110000000001
000010010000100001110110100000000
000010100000100001110110100000000
000001000010010100101110001000000
000000100100001010011110000000100
000001100000010100110110000000010
000100001010001000111100100000000
000100100000010001110110010000000
000000010010001100011110000001000
000010100001100000111100000001000
000100010000001001110110000000010
000010010001000100111011000000000
000000010001100100011110000000001
000000010100001100011110000000100
000000001100010001011110000000100
000001001000100010110110010000000
000100001000100010110110100000000
000010000001100100101110000010000
000010000001001100101110000000001
000010100001000100111010000000100
000001100000010100110110010000000
000001000100100010101110001000000




=== State Orbit 44 =====================
size : 360
repr state: 000100010000001000110100000010000
lex min decimal: 3107126816000743664823
states:
000000001000100010010110000001000
000010100000001000110100010000000
000000000100010001001110001000000
000100010001000000111000100000000
000001000010100000101100000010000
000001000010000100101010001000000
000100010000000001110010000100000
000000100010001000011101000000000
000000000010001100001110000000100
000010000100001000101101000000000
000100000010000001101010000000001
000001100000010000110100000001000
000001000000100010100110001000000
000000010001000100011011000000000
000001000010100000101100000000001
000100001000010000110100010000000
000010000100001000101100000000001
000000100000010001010110000000001
000000001000010100010110000000100
000100001000000010110011000000000
000001000000010100100110000000001
000100000010000001101010000000100
000000001010000100011010000100000
000000010100001000011100100000000
000001000010000100101010010000000
000000100010001000011100001000000
000000000010100001001110001000000
000000010100001000011100000000010
000001100000000010110010000000100
000000010001000100011010000000010
000010100001000000111000000001000
000100000010001000101101000000000
000000001000100010010110000000100
000000001100010000011101000000000
000001010000000100110010100000000
000100000000001010100110000000001
000001000000010100100110010000000
000010000000001100100110100000000
000010000100000001101010000000100
000010000000100001100110001000000
000001010000100000110100000000010
000100000001000010101010000000001
000100010001000000111000010000000
000000100001010000011100001000000
000001000010100000101101000000000
000010000001000100101010000000001
000010000001100000101100000000001
000000010000100001010110010000000
000010000001100000101100000001000
000001010000000100110010000100000
000100000001000010101010001000000
000000100010001000011100100000000
000100000001000010101010010000000
000100000000001010100110010000000
000000010100000001011010000001000
000010000001100000101100100000000
000001010000100000110100000001000
000000100001010000011100000000001
000000001000100010010110100000000
000001000100000010101010000000001
000000010000001100010110000000100
000100001000000010110010000100000
000000010100000001011011000000000
000000100000001010010110010000000
000100000010001000101100000010000
000000001010100000011100000000100
000100000001010000101100000100000
000100000000001010100110100000000
000010100000000001110010100000000
000000001010000100011010010000000
000010001000000100110010100000000
000000000001100010001110000001000
000000100000010001010110000001000
000010100000001000110100000000010
000000010000100001010110100000000
000001000000100010100110100000000
000000000010100001001110000010000
000100001010000000111000001000000
000010001100000000111000000001000
000100001010000000111000000000100
000010001000000100110010000000100
000000010000001100010110010000000
000000001100000010011010010000000
000000010001000100011010000001000
000000000001100010001110000000100
000010001000100000110100010000000
000000010001100000011100000000010
000000100010000001011010000000010
000000010001000100011010000100000
000100000010001000101100000001000
000010100001000000111000010000000
000010001100000000111000000100000
000010000100001000101100000001000
000000000010001100001110000001000
000000000001010100001110000010000
000010100000001000110101000000000
000001010000000100110010000000010
000001000000100010100110000000010
000001000100010000101100100000000
000100001000000010110010100000000
000100000000010001100110010000000
000000001000010100010110010000000
000001000010000100101010000010000
000010001000000100110010000000010
000010000000001100100110010000000
000010000000100001100110000000010
000100001010000000111000100000000
000001000100010000101100000000001
000000000001100010001110000000010
000010001000100000110101000000000
000001000100000010101011000000000
000000001100000010011010000100000
000010000100000001101010001000000
000100000000001010100110000100000
000001100000010000110100010000000
000000000001100010001110000100000
000010001000000100110010000100000
000100000000010001100110000000010
000001000010000100101011000000000
000000000001100010001110001000000
000000001100010000011100100000000
000100000010000001101010001000000
000000100001000010011011000000000
000000000100001010001110000000100
000100000000001010100110001000000
000100010000001000110100010000000
000001000000010100100110000100000
000010000001000100101010000010000
000000100000001010010110000000100
000010001000100000110100000000010
000100000000001010100110000000010
000001100000000010110010000010000
000000000100010001001110000000010
000000001000100010010110000010000
000100000010001000101100100000000
000000100001000010011010000100000
000100000001000010101010000000100
000000001000100010010110010000000
000000001100000010011010000000001
000010001100000000111000100000000
000000010001000100011010000000001
000000001000010100010110000001000
000100010000001000110101000000000
000010100001000000111000001000000
000001010100000000111000000000100
000000001100010000011100000000100
000000000001010100001110000000100
000100010001000000111000001000000
000100010000000001110011000000000
000010000001100000101101000000000
000000000100001010001110001000000
000000010100000001011010000000010
000100000001010000101101000000000
000100010000000001110010000000010
000010000100000001101010000000001
000000000001100010001110000010000
000000100000010001010110000000100
000000001000010100010110000000001
000100010001000000111000000000100
000000001000010100010110100000000
000010000100001000101100100000000
000000001010000100011010000000001
000001000000010100100110100000000
000000010000100001010110000000001
000100000001000010101011000000000
000000001010000100011010000001000
000100001010000000111000000100000
000010000001000100101010001000000
000100001000010000110101000000000
000010001000000100110010000010000
000100000010001000101100000100000
000000100010001000011100000000010
000001010000100000110100000010000
000001010000000100110010000010000
000100000010001000101100000000001
000010100001000000111000100000000
000000100010000001011010010000000
000000010000001100010110000010000
000010000000001100100110000100000
000000010000100001010110000000100
000100010000000001110010100000000
000010001000100000110100000001000
000010000100001000101100000010000
000100000001010000101100000001000
000000000010001100001110001000000
000001000100010000101100000001000
000010001000100000110100000010000
000000001010000100011010000000010
000000001010100000011100000000010
000100010001000000111000000100000
000000010001100000011100000000001
000010100000001000110100001000000
000001010000000100110011000000000
000001000010000100101010000000100
000000100000010001010110100000000
000100001000010000110100000001000
000010000000001100100110000000010
000100000000010001100110000100000
000001000100010000101100000010000
000000010000001100010110000001000
000010000000100001100110000100000
000010100000001000110100000010000
000000000010100001001110000000100
000001000010100000101100000001000
000000001010100000011100001000000
000000000001010100001110000001000
000000001000100010010110000000001
000001010000100000110100010000000
000010000000001100100110001000000
000001000000010100100110000000010
000001000100010000101100000100000
000010000001100000101100000100000
000000000100010001001110000010000
000100001010000000111000000001000
000000100001010000011100100000000
000000010100001000011101000000000
000100010000001000110100000001000
000001000000100010100110000100000
000000001100010000011100000000010
000000100001000010011010010000000
000000000001010100001110000000010
000001010000000100110010000000100
000000010100001000011100001000000
000000000100010001001110000100000
000000010000100001010110000010000
000010001100000000111000000000100
000000100000010001010110000010000
000000000100001010001110000100000
000001100000000010110010100000000
000001000000010100100110001000000
000100001010000000111000010000000
000000010100000001011010010000000
000000001100000010011010000001000
000100001000000010110010000000100
000000000010100001001110000001000
000100010000001000110100000010000
000010100000000001110010000000100
000000100010001000011100000000100
000000000001010100001110001000000
000000000100001010001110000000010
000000000100001010001110000010000
000100010000000001110010000000100
000010000001000100101010000000100
000001100000010000110101000000000
000001000000100010100110000000001
000001100010000000111000010000000
000000000001010100001110000100000
000001010100000000111000100000000
000000010001100000011100100000000
000001100010000000111000000000100
000100010000000001110010000010000
000010100000000001110011000000000
000010000001100000101100000010000
000010100000001000110100000001000
000001100000010000110100000010000
000000100001000010011010000000010
000010001100000000111000010000000
000100000001000010101010000010000
000001100000010000110100000000010
000000010100001000011100000000100
000000100010001000011100000000001
000001000100000010101010001000000
000010100001000000111000000000100
000000100000001010010110000000001
000001010100000000111000000001000
000001000000100010100110010000000
000001000100000010101010000010000
000000001100000010011010000000010
000001010100000000111000001000000
000000000010100001001110000000010
000001100000000010110010000000010
000000001010100000011100100000000
000000010001000100011010010000000
000000010001100000011100000000100
000000001100010000011100000000001
000100000001010000101100000000001
000001000010000100101010000000001
000001100000010000110100001000000
000000100001010000011101000000000
000001100010000000111000000100000
000000001010100000011100000000001
000000010100000001011010000000001
000000000010001100001110000000010
000010100000000001110010000010000
000001010000100000110101000000000
000000001010000100011011000000000
000010000000001100100110000000001
000001100010000000111000100000000
000001100000000010110011000000000
000001010100000000111000000100000
000000010000001100010110100000000
000010000100000001101010010000000
000001100000000010110010000100000
000001010100000000111000010000000
000000100000010001010110010000000
000010100001000000111000000100000
000000100010000001011011000000000
000100000010000001101010010000000
000000000100010001001110000001000
000000000010001100001110000010000
000001000100000010101010000000100
000001100010000000111000001000000
000000100001000010011010000001000
000100000000010001100110000000001
000100000000010001100110100000000
000010100000000001110010000000010
000000010001100000011101000000000
000000100010000001011010000000001
000100001000010000110100000010000
000010000100000001101010000010000
000010000000100001100110010000000
000000000010001100001110000100000
000100001000010000110100000000010
000000001100000010011011000000000
000000000100010001001110000000100
000100000010000001101010000010000
000100010000001000110100000000010
000010000000100001100110000000001
000000000100001010001110000001000
000010001000100000110100001000000
000000010100000001011010000100000
000100010000001000110100001000000
000000010001100000011100001000000
000100000001010000101100000010000
000010000000100001100110100000000
000000010000001100010110000000001
000100000000010001100110001000000
000010001000000100110011000000000
000100001000000010110010000000010
000000100001010000011100000000100
000000100001010000011100000000010
000001100010000000111000000001000
000010000001000100101011000000000
000000001010100000011101000000000
000010000100000001101011000000000
000000001000010100010110000010000
000010100000000001110010000100000
000000010100001000011100000000001
000000100000001010010110000001000
000010000100001000101100000100000
000010001100000000111000001000000
000100000001010000101100100000000
000100010001000000111000000001000
000001000100000010101010010000000
000100001000000010110010000010000
000000100010000001011010000100000
000001010000100000110100001000000
000000001100010000011100001000000
000000100001000010011010000000001
000001000010100000101100100000000
000000100010000001011010000001000
000000100000001010010110100000000
000000000010100001001110000100000
000100000010000001101011000000000
000010000001000100101010010000000
000100001000010000110100001000000
000000010000100001010110000001000
000001000010100000101100000100000
000000100000001010010110000010000
000001000100010000101101000000000




=== State Orbit 45 =====================
size : 90
repr state: 000100000000100000100100000010000
lex min decimal: 335502393025976691895
states:
000001001000000000110000100000000
000010000000010000100100100000000
000000000001001000001100000000001
000000000010000010001010000000001
000000010010000000011000000000100
000010000000010000100100000010000
000010000000000010100010010000000
000000000000100100000110000000001
000000100000100000010100100000000
000000001001000000011001000000000
000100000100000000101000001000000
000000010000000010010010000000100
000010000000010000100100001000000
000000010010000000011000000001000
000000000000001001000110000000010
000010000010000000101001000000000
000000000000001001000110000000001
000000100000100000010100000000010
000000100000000100010010010000000
000000000000100100000110000000010
000100100000000000110000010000000
000000000100100000001100000000001
000000001000000001010010000000100
000010000010000000101000001000000
000001000001000000101000000100000
000100000100000000101000000100000
000000000000100100000110000010000
000000001000000001010010000000010
000000010000000010010010000000010
000000100100000000011001000000000
000001000000000001100010000010000
000000010010000000011001000000000
000010000000000010100010000100000
000001000001000000101000001000000
000000001000000001010010010000000
000000010000010000010100000001000
000000000100100000001100001000000
000000100100000000011000000000100
000100100000000000110000100000000
000000000010000010001010000100000
000001001000000000110000010000000
000001001000000000110001000000000
000100000000100000100100100000000
000100000100000000101001000000000
000000000001000001001010000000100
000010000010000000101000000100000
000010010000000000110000010000000
000000100000000100010010000000010
000000000010010000001100000000001
000000001000001000010100000000010
000000001001000000011000000001000
000001000000000001100010000100000
000001000001000000101001000000000
000000000010010000001100001000000
000000000000010010000110000010000
000000000001000001001010000000001
000000000010000010001010000000100
000000000001001000001100000001000
000000000010010000001100000001000
000000000001001000001100001000000
000010010000000000110000100000000
000100000000100000100100000010000
000000010000000010010010010000000
000001000000000001100010010000000
000000000000001001000110000010000
000010010000000000110001000000000
000000010000010000010100000000010
000000000100000100001010000100000
000000100100000000011000000001000
000100000000100000100100001000000
000000100000000100010010000000100
000100100000000000110001000000000
000000000000010010000110000000010
000000000001000001001010000100000
000000000100000100001010000000100
000001000000001000100100001000000
000001000000001000100100000010000
000100000000000100100010000100000
000001000000001000100100100000000
000000000000010010000110000000001
000000100000100000010100000001000
000000001000001000010100000001000
000000010000010000010100100000000
000000000100100000001100000001000
000100000000000100100010000010000
000010000000000010100010000010000
000100000000000100100010010000000
000000000100000100001010000000001
000000001000001000010100100000000
000000001001000000011000000000100




=== State Orbit 46 =====================
size : 30
repr state: 000100000000100100100110000010000
lex min decimal: 2701297320479226686647
states:
000010010000010000110100100000000
000000000001001001001110000000001
000100000100000100101010000100000
000000100000100100010110000000010
000000100100100000011100000001000
000100100100000000111001000000000
000010000000010010100110000010000
000001001000000001110010010000000
000000001001001000011100000001000
000010010000000010110010010000000
000001000000001001100110000010000
000000010000010010010110000000010
000000001000001001010110000000010
000001001000001000110100100000000
000100100000000100110010010000000
000010000010000010101010000100000
000100000100100000101100001000000
000100100000100000110100100000000
000100000000100100100110000010000
000000010010010000011100000001000
000000000100100100001110000000001
000001000001001000101100001000000
000000010010000010011010000000100
000010010010000000111001000000000
000000000010010010001110000000001
000000100100000100011010000000100
000001001001000000111001000000000
000010000010010000101100001000000
000001000001000001101010000100000
000000001001000001011010000000100




=== State Orbit 47 =====================
size : 180
repr state: 000100000000100010100110000010000
lex min decimal: 2738190808626645789879
states:
000001010000000010110010010000000
000000010100100000011100000001000
000000001100000001011010000000100
000000010010000100011010000000100
000100000010100000101100001000000
000010010100000000111001000000000
000010000010000001101010000100000
000010000001000001101010000100000
000000010000100100010110000000010
000010000000010001100110000010000
000001000000001010100110000010000
000000001010000010011010000000100
000000000010010100001110000000001
000010000000001001100110000010000
000100000100000001101010000100000
000010000100010000101100001000000
000010000000001010100110000010000
000010000000100010100110000010000
000001000010010000101100001000000
000000001001100000011100000001000
000100001000100000110100100000000
000100000010010000101100001000000
000000000010100100001110000000001
000001000000010001100110000010000
000010000010100000101100001000000
000000010010000001011010000000100
000010000100000010101010000100000
000000001000100001010110000000010
000010001001000000111001000000000
000000001100000100011010000000100
000000000001010010001110000000001
000000010001001000011100000001000
000000010000010001010110000000010
000000100100000001011010000000100
000001000000100100100110000010000
000000000100001100001110000000001
000010000100100000101100001000000
000000000100010010001110000000001
000100000000100001100110000010000
000000001010010000011100000001000
000010001000000001110010010000000
000000001100001000011100000001000
000001100000000100110010010000000
000000010001000001011010000000100
000010001000000010110010010000000
000010001000010000110100100000000
000010000010001000101100001000000
000100000100000010101010000100000
000100000001000100101010000100000
000100000100010000101100001000000
000100100000000010110010010000000
000010000100000100101010000100000
000010100000100000110100100000000
000001000001100000101100001000000
000010001000001000110100100000000
000000010001000010011010000000100
000000000100100010001110000000001
000000100000001100010110000000010
000010010000000001110010010000000
000100000010000010101010000100000
000100001100000000111001000000000
000000000100010100001110000000001
000001010000001000110100100000000
000100000100001000101100001000000
000000000001100001001110000000001
000100001001000000111001000000000
000010010000001000110100100000000
000000100001100000011100000001000
000000100000100010010110000000010
000010000001000010101010000100000
000000000010100010001110000000001
000000010000100010010110000000010
000000000010010001001110000000001
000010010000100000110100100000000
000000100010000100011010000000100
000000010100010000011100000001000
000000010010100000011100000001000
000000001010001000011100000001000
000100100000001000110100100000000
000010000000010100100110000010000
000001001000010000110100100000000
000000001000001010010110000000010
000000100001000100011010000000100
000001000001010000101100001000000
000001100000000001110010010000000
000001001000000100110010010000000
000100010000100000110100100000000
000001001100000000111001000000000
000100010000010000110100100000000
000001001010000000111001000000000
000000100010100000011100000001000
000010100000000100110010010000000
000000100001001000011100000001000
000010010000000100110010010000000
000010001010000000111001000000000
000100001000000100110010010000000
000000001000010010010110000000010
000100010100000000111001000000000
000000010000001010010110000000010
000100000001001000101100001000000
000000100000010010010110000000010
000100000000010100100110000010000
000100001000001000110100100000000
000001001000000010110010010000000
000000100100000010011010000000100
000000010000001001010110000000010
000010000001010000101100001000000
000000000100001001001110000000001
000000001000010001010110000000010
000001000001000010101010000100000
000001100100000000111001000000000
000000100100001000011100000001000
000001000100000100101010000100000
000000000001010001001110000000001
000000001000001100010110000000010
000010100100000000111001000000000
000001000010000010101010000100000
000000001001000100011010000000100
000001010001000000111001000000000
000100000000001001100110000010000
000100001000000001110010010000000
000000000010001010001110000000001
000010100000010000110100100000000
000000010001010000011100000001000
000100100000000001110010010000000
000100000001000001101010000100000
000000100000010100010110000000010
000001001000100000110100100000000
000000000010001001001110000000001
000001000000100001100110000010000
000001100000100000110100100000000
000010100010000000111001000000000
000010010001000000111001000000000
000000001001000010011010000000100
000100010000000100110010010000000
000001000100100000101100001000000
000010000000100100100110000010000
000001000100000001101010000100000
000001100000001000110100100000000
000001000000001100100110000010000
000001010010000000111001000000000
000000100001000001011010000000100
000100000000010010100110000010000
000001000001000100101010000100000
000010000010000100101010000100000
000000100010010000011100000001000
000100000001100000101100001000000
000000001001010000011100000001000
000001100001000000111001000000000
000010000001001000101100001000000
000000010000010100010110000000010
000100000000100010100110000010000
000100100010000000111001000000000
000000010010001000011100000001000
000001000100001000101100001000000
000100000000001100100110000010000
000000010100000010011010000000100
000000001000100100010110000000010
000100000010000100101010000100000
000000100000100001010110000000010
000000000001001010001110000000001
000001010000000001110010010000000
000000100010000010011010000000100
000100010010000000111001000000000
000000001100100000011100000001000
000000010100000100011010000000100
000000100000001001010110000000010
000000000100100001001110000000001
000001000010001000101100001000000
000100100001000000111001000000000
000000001010000001011010000000100
000000000001001100001110000000001
000010100000000010110010010000000
000100100000010000110100100000000
000000100100010000011100000001000
000001010000010000110100100000000
000100010000000010110010010000000
000001000000010010100110000010000
000000000001100100001110000000001
000001000010000001101010000100000




=== State Orbit 48 =====================
size : 180
repr state: 000100000000010000100100000010000
lex min decimal: 372395881173395795127
states:
000001000010000000101000000100000
000010000001000000101000001000000
000010000000001000100100000010000
000001000100000000101000000100000
000000000100000010001010000100000
000000001000100000010100000000010
000000010000000001010010000000010
000010000000100000100100001000000
000100000001000000101000000100000
000001000000000100100010000010000
000000010001000000011000000001000
000000000100001000001100000001000
000000000000001010000110000010000
000001000100000000101000001000000
000001000010000000101001000000000
000100010000000000110001000000000
000000000000010100000110000010000
000010000001000000101000000100000
000010100000000000110000010000000
000001000000010000100100100000000
000010000100000000101000001000000
000000000000100010000110000010000
000001000000100000100100100000000
000000000001100000001100000001000
000000100010000000011001000000000
000010000000000001100010000010000
000000010100000000011001000000000
000000000000001100000110000000001
000010000001000000101001000000000
000000000010001000001100000001000
000000000001000010001010000000100
000100000000000010100010000010000
000001000010000000101000001000000
000000000100000010001010000000001
000000000000010001000110000000001
000000100001000000011001000000000
000000000000001010000110000000001
000010000000100000100100000010000
000000000001010000001100001000000
000000000010000100001010000100000
000000000100010000001100000000001
000000100010000000011000000000100
000001000000000100100010000100000
000001000000000100100010010000000
000000100000001000010100000000010
000010001000000000110000010000000
000000001000000100010010010000000
000000001000100000010100100000000
000000100000000001010010000000100
000000010000001000010100000000010
000000000001010000001100000001000
000100000000000001100010010000000
000000001010000000011000000001000
000000100001000000011000000001000
000000000010000001001010000000100
000000000000010001000110000010000
000000000000001100000110000000010
000100000000000010100010010000000
000000100000000010010010010000000
000000000100010000001100001000000
000100000000010000100100001000000
000010100000000000110000100000000
000000100000000010010010000000010
000100000001000000101000001000000
000100000010000000101000000100000
000000000000100001000110000000001
000010000000000100100010010000000
000000010000000100010010000000010
000100001000000000110001000000000
000000100000000001010010010000000
000010000000100000100100100000000
000100000010000000101001000000000
000001100000000000110000100000000
000000100000010000010100000001000
000000000100000001001010000000001
000100010000000000110000010000000
000001010000000000110000010000000
000010000000000100100010000010000
000010001000000000110000100000000
000100001000000000110000010000000
000000010000000100010010010000000
000000010000001000010100000001000
000000001010000000011001000000000
000001000000100000100100000010000
000000010000000001010010000000100
000000001000010000010100000001000
000001000000010000100100001000000
000000000010001000001100000000001
000000000010000100001010000000001
000000100000001000010100000001000
000000000100000010001010000000100
000100000000010000100100000010000
000000010000000100010010000000100
000001000000100000100100001000000
000000001100000000011000000001000
000000001000100000010100000001000
000000000000100001000110000010000
000100000000000010100010000100000
000100000000000001100010000010000
000000001000000010010010010000000
000100000001000000101001000000000
000000001000000100010010000000100
000000010001000000011001000000000
000000000100001000001100000000001
000000010100000000011000000001000
000000100001000000011000000000100
000000000000001010000110000000010
000000001100000000011001000000000
000001000000010000100100000010000
000100000000001000100100000010000
000010000000001000100100100000000
000000100000001000010100100000000
000000000000100001000110000000010
000001000000000010100010000010000
000000001000010000010100000000010
000000010100000000011000000000100
000000000001000010001010000100000
000000010000100000010100000001000
000000001000000100010010000000010
000000010001000000011000000000100
000000000001100000001100000000001
000001000000000010100010000100000
000000001010000000011000000000100
000000000100000001001010000100000
000000000100000001001010000000100
000010000100000000101000000100000
000001000100000000101001000000000
000000000010100000001100000001000
000000001100000000011000000000100
000000000010000001001010000100000
000000000010100000001100001000000
000000100000010000010100100000000
000001000000000010100010010000000
000010000100000000101001000000000
000000000000100010000110000000001
000100000000001000100100001000000
000000010000100000010100100000000
000000001000000010010010000000010
000010100000000000110001000000000
000000000000100010000110000000010
000010000000001000100100001000000
000000000001000100001010000000001
000000000001010000001100000000001
000100000010000000101000001000000
000001100000000000110000010000000
000100000000001000100100100000000
000000001000000010010010000000100
000000100000000001010010000000010
000000000001000100001010000100000
000000000000010100000110000000001
000100000000010000100100100000000
000000010000100000010100000000010
000010001000000000110001000000000
000000000010000001001010000000001
000100000000000001100010000100000
000001010000000000110000100000000
000000010000001000010100100000000
000000000001100000001100001000000
000000000000010001000110000000010
000000100000000010010010000000100
000000000000001100000110000010000
000000100010000000011000000001000
000010000000000001100010000100000
000000000100010000001100000001000
000000001000010000010100100000000
000100010000000000110000100000000
000100001000000000110000100000000
000000000001000010001010000000001
000001100000000000110001000000000
000001010000000000110001000000000
000000000010000100001010000000100
000010000000000100100010000100000
000010000000000001100010010000000
000000000010100000001100000000001
000000000000010100000110000000010
000000000100001000001100001000000
000000100000010000010100000000010
000000000010001000001100001000000
000000010000000001010010010000000
000000000001000100001010000000100




=== State Orbit 49 =====================
size : 60
repr state: 000100000000010001100110000010000
lex min decimal: 3107125690100836822199
states:
000001010000100000110100100000000
000010000001000100101010000100000
000010000000001100100110000010000
000010001000000100110010010000000
000001000000100010100110000010000
000001010100000000111001000000000
000001100010000000111001000000000
000000100010000001011010000000100
000010000000100001100110000010000
000000000010100001001110000000001
000000100010001000011100000001000
000100001000010000110100100000000
000000010000100001010110000000010
000010100000001000110100100000000
000000001010100000011100000001000
000000010000001100010110000000010
000010100001000000111001000000000
000000000001010100001110000000001
000001000000010100100110000010000
000000010100001000011100000001000
000000100001010000011100000001000
000001100000010000110100100000000
000000100001000010011010000000100
000001000010100000101100001000000
000000010001100000011100000001000
000000000100010001001110000000001
000000000010001100001110000000001
000000000001100010001110000000001
000100010001000000111001000000000
000000000100001010001110000000001
000001010000000100110010010000000
000000001010000100011010000000100
000100000001000010101010000100000
000010001100000000111001000000000
000000100000001010010110000000010
000000010100000001011010000000100
000100000001010000101100001000000
000001100000000010110010010000000
000100001010000000111001000000000
000000001000100010010110000000010
000000010001000100011010000000100
000010001000100000110100100000000
000000001100000010011010000000100
000000001000010100010110000000010
000100000010001000101100001000000
000001000010000100101010000100000
000100000000010001100110000010000
000001000100000010101010000100000
000100000010000001101010000100000
000001000100010000101100001000000
000100000000001010100110000010000
000010000100001000101100001000000
000010000001100000101100001000000
000010100000000001110010010000000
000000001100010000011100000001000
000010000100000001101010000100000
000100010000001000110100100000000
000100001000000010110010010000000
000000100000010001010110000000010
000100010000000001110010010000000




=== State Orbit 50 =====================
size : 60
repr state: 000000100000000000010000000010000
lex min decimal: 38056526136758070455
states:
000000000000001000000101000000000
000000000001000000001000100000000
000000000010000000001000000010000
000000010000000000010000000000001
000001000000000000100000000000100
000000000100000000001000010000000
000000100000000000010000001000000
000000000010000000001000100000000
000010000000000000100000000000010
000000000010000000001000010000000
000000000000001000000100010000000
000000001000000000010000000000001
000000000000000100000010100000000
000000000000001000000100000100000
000100000000000000100000000000100
000001000000000000100000000001000
000000000010000000001000000000010
000000010000000000010000000010000
000000000000100000000100000100000
000000000000100000000101000000000
000000000000000001000010000001000
000000000000010000000100010000000
000000000001000000001000010000000
000010000000000000100000000001000
000010000000000000100000000000100
000000000001000000001000000010000
000010000000000000100000000000001
000000001000000000010000001000000
000000000000000001000010001000000
000000000000000010000010100000000
000000100000000000010000000100000
000001000000000000100000000000010
000000000100000000001000100000000
000000000000000100000010000001000
000001000000000000100000000000001
000100000000000000100000000000001
000000000000010000000100000100000
000100000000000000100000000000010
000000000000000100000010001000000
000000000001000000001000000000010
000000000000100000000100000000100
000000000000001000000100000000100
000000100000000000010000000000001
000000000000000010000010000001000
000000000000010000000100000000100
000000100000000000010000000010000
000000000000000010000010001000000
000000000100000000001000000000010
000000000000000100000011000000000
000000000000000010000011000000000
000000010000000000010000000100000
000000001000000000010000000100000
000000010000000000010000001000000
000000000000000001000010100000000
000000000000010000000101000000000
000100000000000000100000000001000
000000001000000000010000000010000
000000000100000000001000000010000
000000000000000001000011000000000
000000000000100000000100010000000




=== State Orbit 51 =====================
size : 30
repr state: 000000100100000000011000000010000
lex min decimal: 336077727878373272759
states:
000000000001000001001010100000000
000000000100000100001010100000000
000000010010000000011000000010000
000001000001000000101000000000010
000000001000001000010100000100000
000000010000000010010010001000000
000000000000001001000111000000000
000001001000000000110000000000001
000001000000001000100100000000100
000000001000000001010010001000000
000000100000100000010100000100000
000000001001000000011000000010000
000000100000000100010010001000000
000010000000000010100010000001000
000100100000000000110000000000001
000001000000000001100010000001000
000100000000000100100010000001000
000100000100000000101000000000010
000100000000100000100100000000100
000000100100000000011000000010000
000000000000100100000111000000000
000010010000000000110000000000001
000000000100100000001100010000000
000000000010010000001100010000000
000000000010000010001010100000000
000000000000010010000111000000000
000000000001001000001100010000000
000010000010000000101000000000010
000010000000010000100100000000100
000000010000010000010100000100000




=== State Orbit 52 =====================
size : 60
repr state: 000000100010000000011000000010000
lex min decimal: 372971216025792375991
states:
000000001000000100010010001000000
000000000000010100000111000000000
000100000000000001100010000001000
000010000100000000101000000000010
000000010000100000010100000100000
000000000001000100001010100000000
000100000001000000101000000000010
000000001100000000011000000010000
000100000000010000100100000000100
000000010000001000010100000100000
000010000001000000101000000000010
000010001000000000110000000000001
000000000100010000001100010000000
000001100000000000110000000000001
000001000010000000101000000000010
000000010000000001010010001000000
000100010000000000110000000000001
000000001000100000010100000100000
000001000000000010100010000001000
000000000100000010001010100000000
000000000100000001001010100000000
000001010000000000110000000000001
000000100001000000011000000010000
000010100000000000110000000000001
000000100000000001010010001000000
000000000000100010000111000000000
000000000100001000001100010000000
000001000000010000100100000000100
000000100000000010010010001000000
000000000000001100000111000000000
000010000000000100100010000001000
000000010000000100010010001000000
000000010100000000011000000010000
000000000000001010000111000000000
000100000000000010100010000001000
000010000000000001100010000001000
000000000001000010001010100000000
000000001000000010010010001000000
000000100000001000010100000100000
000000100000010000010100000100000
000100000010000000101000000000010
000000000010001000001100010000000
000100000000001000100100000000100
000000000001010000001100010000000
000000000010000001001010100000000
000001000000100000100100000000100
000000010001000000011000000010000
000010000000100000100100000000100
000000001010000000011000000010000
000000000010000100001010100000000
000000001000010000010100000100000
000001000100000000101000000000010
000000100010000000011000000010000
000001000000000100100010000001000
000000000000010001000111000000000
000000000010100000001100010000000
000000000001100000001100010000000
000100001000000000110000000000001
000010000000001000100100000000100
000000000000100001000111000000000



[QRM NOTE]: Time elapsed since start: 22.492 seconds

[QRM NOTE]: Time elapsed since last: 14.965 seconds

[QRM NOTE]: Peak memory: 3615417 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 22.767 seconds

[QRM NOTE]: Time elapsed since last: 0.275 seconds

[QRM NOTE]: Peak memory: 7907762 bytes


======================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/toy_consensus_forall.ivy: node=5,value=3]

======================================================================================================================


=================================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/toy_consensus_forall.ivy: node=5,value=3]

=================================================================================================================


=== Prime Orbit 0 =====================
size : 45
num_suborbits: 2
0 (*) : -------------------------1------1
0     : ['(voting_quorum=quorum__node0_node1_node4)', '(voting_quorum=quorum__node2_node3_node4)']
1     : ------------------------1-------1
1     : ['(voting_quorum=quorum__node0_node1_node3)', '(voting_quorum=quorum__node2_node3_node4)']
2     : -----------------------1--------1
2     : ['(voting_quorum=quorum__node0_node1_node2)', '(voting_quorum=quorum__node2_node3_node4)']
3     : ---------------------------1---1-
3     : ['(voting_quorum=quorum__node0_node2_node4)', '(voting_quorum=quorum__node1_node3_node4)']
4     : --------------------------1----1-
4     : ['(voting_quorum=quorum__node0_node2_node3)', '(voting_quorum=quorum__node1_node3_node4)']
5     : -----------------------1-------1-
5     : ['(voting_quorum=quorum__node0_node1_node2)', '(voting_quorum=quorum__node1_node3_node4)']
6     : ----------------------------1-1--
6     : ['(voting_quorum=quorum__node0_node3_node4)', '(voting_quorum=quorum__node1_node2_node4)']
7     : --------------------------1---1--
7     : ['(voting_quorum=quorum__node0_node2_node3)', '(voting_quorum=quorum__node1_node2_node4)']
8     : ------------------------1-----1--
8     : ['(voting_quorum=quorum__node0_node1_node3)', '(voting_quorum=quorum__node1_node2_node4)']
9     : ----------------------------11---
9     : ['(voting_quorum=quorum__node0_node3_node4)', '(voting_quorum=quorum__node1_node2_node3)']
10     : ---------------------------1-1---
10     : ['(voting_quorum=quorum__node0_node2_node4)', '(voting_quorum=quorum__node1_node2_node3)']
11     : -------------------------1---1---
11     : ['(voting_quorum=quorum__node0_node1_node4)', '(voting_quorum=quorum__node1_node2_node3)']
12     : -----------------------1----1----
12     : ['(voting_quorum=quorum__node0_node1_node2)', '(voting_quorum=quorum__node0_node3_node4)']
13     : ------------------------1--1-----
13     : ['(voting_quorum=quorum__node0_node1_node3)', '(voting_quorum=quorum__node0_node2_node4)']
14     : -------------------------11------
14     : ['(voting_quorum=quorum__node0_node1_node4)', '(voting_quorum=quorum__node0_node2_node3)']
15 (*) : ----------------------------1---1
15     : ['(voting_quorum=quorum__node0_node3_node4)', '(voting_quorum=quorum__node2_node3_node4)']
16     : ---------------------------1----1
16     : ['(voting_quorum=quorum__node0_node2_node4)', '(voting_quorum=quorum__node2_node3_node4)']
17     : --------------------------1-----1
17     : ['(voting_quorum=quorum__node0_node2_node3)', '(voting_quorum=quorum__node2_node3_node4)']
18     : ----------------------------1--1-
18     : ['(voting_quorum=quorum__node0_node3_node4)', '(voting_quorum=quorum__node1_node3_node4)']
19     : -------------------------1-----1-
19     : ['(voting_quorum=quorum__node0_node1_node4)', '(voting_quorum=quorum__node1_node3_node4)']
20     : ------------------------1------1-
20     : ['(voting_quorum=quorum__node0_node1_node3)', '(voting_quorum=quorum__node1_node3_node4)']
21     : ---------------------------1--1--
21     : ['(voting_quorum=quorum__node0_node2_node4)', '(voting_quorum=quorum__node1_node2_node4)']
22     : -------------------------1----1--
22     : ['(voting_quorum=quorum__node0_node1_node4)', '(voting_quorum=quorum__node1_node2_node4)']
23     : -----------------------1------1--
23     : ['(voting_quorum=quorum__node0_node1_node2)', '(voting_quorum=quorum__node1_node2_node4)']
24     : --------------------------1--1---
24     : ['(voting_quorum=quorum__node0_node2_node3)', '(voting_quorum=quorum__node1_node2_node3)']
25     : ------------------------1----1---
25     : ['(voting_quorum=quorum__node0_node1_node3)', '(voting_quorum=quorum__node1_node2_node3)']
26     : -----------------------1-----1---
26     : ['(voting_quorum=quorum__node0_node1_node2)', '(voting_quorum=quorum__node1_node2_node3)']
27     : -------------------------------11
27     : ['(voting_quorum=quorum__node1_node3_node4)', '(voting_quorum=quorum__node2_node3_node4)']
28     : ------------------------------1-1
28     : ['(voting_quorum=quorum__node1_node2_node4)', '(voting_quorum=quorum__node2_node3_node4)']
29     : -----------------------------1--1
29     : ['(voting_quorum=quorum__node1_node2_node3)', '(voting_quorum=quorum__node2_node3_node4)']
30     : -------------------------1--1----
30     : ['(voting_quorum=quorum__node0_node1_node4)', '(voting_quorum=quorum__node0_node3_node4)']
31     : ------------------------1---1----
31     : ['(voting_quorum=quorum__node0_node1_node3)', '(voting_quorum=quorum__node0_node3_node4)']
32     : -------------------------1-1-----
32     : ['(voting_quorum=quorum__node0_node1_node4)', '(voting_quorum=quorum__node0_node2_node4)']
33     : -----------------------1---1-----
33     : ['(voting_quorum=quorum__node0_node1_node2)', '(voting_quorum=quorum__node0_node2_node4)']
34     : ------------------------1-1------
34     : ['(voting_quorum=quorum__node0_node1_node3)', '(voting_quorum=quorum__node0_node2_node3)']
35     : -----------------------1--1------
35     : ['(voting_quorum=quorum__node0_node1_node2)', '(voting_quorum=quorum__node0_node2_node3)']
36     : ------------------------------11-
36     : ['(voting_quorum=quorum__node1_node2_node4)', '(voting_quorum=quorum__node1_node3_node4)']
37     : -----------------------------1-1-
37     : ['(voting_quorum=quorum__node1_node2_node3)', '(voting_quorum=quorum__node1_node3_node4)']
38     : ---------------------------11----
38     : ['(voting_quorum=quorum__node0_node2_node4)', '(voting_quorum=quorum__node0_node3_node4)']
39     : --------------------------1-1----
39     : ['(voting_quorum=quorum__node0_node2_node3)', '(voting_quorum=quorum__node0_node3_node4)']
40     : -----------------------1-1-------
40     : ['(voting_quorum=quorum__node0_node1_node2)', '(voting_quorum=quorum__node0_node1_node4)']
41     : -----------------------11--------
41     : ['(voting_quorum=quorum__node0_node1_node2)', '(voting_quorum=quorum__node0_node1_node3)']
42     : -----------------------------11--
42     : ['(voting_quorum=quorum__node1_node2_node3)', '(voting_quorum=quorum__node1_node2_node4)']
43     : --------------------------11-----
43     : ['(voting_quorum=quorum__node0_node2_node3)', '(voting_quorum=quorum__node0_node2_node4)']
44     : ------------------------11-------
44     : ['(voting_quorum=quorum__node0_node1_node3)', '(voting_quorum=quorum__node0_node1_node4)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 15
num_suborbits: 1
45 (*) : ------1-1------------------------
45     : ['vote(node1,value0)', 'vote(node1,value2)']
46     : ------11-------------------------
46     : ['vote(node1,value0)', 'vote(node1,value1)']
47     : -------11------------------------
47     : ['vote(node1,value1)', 'vote(node1,value2)']
48     : ---------1-1---------------------
48     : ['vote(node2,value0)', 'vote(node2,value2)']
49     : ---------11----------------------
49     : ['vote(node2,value0)', 'vote(node2,value1)']
50     : ----------11---------------------
50     : ['vote(node2,value1)', 'vote(node2,value2)']
51     : ------------1-1------------------
51     : ['vote(node3,value0)', 'vote(node3,value2)']
52     : ------------11-------------------
52     : ['vote(node3,value0)', 'vote(node3,value1)']
53     : -------------11------------------
53     : ['vote(node3,value1)', 'vote(node3,value2)']
54     : ---------------1-1---------------
54     : ['vote(node4,value0)', 'vote(node4,value2)']
55     : ---------------11----------------
55     : ['vote(node4,value0)', 'vote(node4,value1)']
56     : ----------------11---------------
56     : ['vote(node4,value1)', 'vote(node4,value2)']
57     : ---1-1---------------------------
57     : ['vote(node0,value0)', 'vote(node0,value2)']
58     : ---11----------------------------
58     : ['vote(node0,value0)', 'vote(node0,value1)']
59     : ----11---------------------------
59     : ['vote(node0,value1)', 'vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 15
num_suborbits: 1
60 (*) : --------1----------0-------------
60     : ['vote(node1,value2)', '~voted(node1)']
61     : -------1-----------0-------------
61     : ['vote(node1,value1)', '~voted(node1)']
62     : ------1------------0-------------
62     : ['vote(node1,value0)', '~voted(node1)']
63     : -----------1--------0------------
63     : ['vote(node2,value2)', '~voted(node2)']
64     : ----------1---------0------------
64     : ['vote(node2,value1)', '~voted(node2)']
65     : ---------1----------0------------
65     : ['vote(node2,value0)', '~voted(node2)']
66     : --------------1------0-----------
66     : ['vote(node3,value2)', '~voted(node3)']
67     : -------------1-------0-----------
67     : ['vote(node3,value1)', '~voted(node3)']
68     : ------------1--------0-----------
68     : ['vote(node3,value0)', '~voted(node3)']
69     : -----------------1----0----------
69     : ['vote(node4,value2)', '~voted(node4)']
70     : ----------------1-----0----------
70     : ['vote(node4,value1)', '~voted(node4)']
71     : ---------------1------0----------
71     : ['vote(node4,value0)', '~voted(node4)']
72     : -----1------------0--------------
72     : ['vote(node0,value2)', '~voted(node0)']
73     : ----1-------------0--------------
73     : ['vote(node0,value1)', '~voted(node0)']
74     : ---1--------------0--------------
74     : ['vote(node0,value0)', '~voted(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
75 (*) : 1-1------------------------------
75     : ['decided(value0)', 'decided(value2)']
76     : 11-------------------------------
76     : ['decided(value0)', 'decided(value1)']
77     : -11------------------------------
77     : ['decided(value1)', 'decided(value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 180
num_suborbits: 1
78 (*) : --1---------1------------------1-
78     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node3,value0)']
79     : -1----------1------------------1-
79     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node3,value0)']
80     : --1----------1-----------------1-
80     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node3,value1)']
81     : 1------------1-----------------1-
81     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node3,value1)']
82     : -1------------1----------------1-
82     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node3,value2)']
83     : 1-------------1----------------1-
83     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node3,value2)']
84     : --1------------1---------------1-
84     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node4,value0)']
85     : -1-------------1---------------1-
85     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node4,value0)']
86     : --1-------------1--------------1-
86     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node4,value1)']
87     : 1---------------1--------------1-
87     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node4,value1)']
88     : -1---------------1-------------1-
88     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node4,value2)']
89     : 1----------------1-------------1-
89     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node4,value2)']
90     : --1------1--------------------1--
90     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node2,value0)']
91     : -1-------1--------------------1--
91     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node2,value0)']
92     : --1-------1-------------------1--
92     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node2,value1)']
93     : 1---------1-------------------1--
93     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node2,value1)']
94     : -1---------1------------------1--
94     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node2,value2)']
95     : 1----------1------------------1--
95     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node2,value2)']
96     : --1------------1--------------1--
96     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node4,value0)']
97     : -1-------------1--------------1--
97     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node4,value0)']
98     : --1-------------1-------------1--
98     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node4,value1)']
99     : 1---------------1-------------1--
99     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node4,value1)']
100     : -1---------------1------------1--
100     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node4,value2)']
101     : 1----------------1------------1--
101     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node4,value2)']
102     : --1------1-------------------1---
102     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node2,value0)']
103     : -1-------1-------------------1---
103     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node2,value0)']
104     : --1-------1------------------1---
104     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node2,value1)']
105     : 1---------1------------------1---
105     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node2,value1)']
106     : -1---------1-----------------1---
106     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node2,value2)']
107     : 1----------1-----------------1---
107     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node2,value2)']
108     : --1---------1----------------1---
108     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node3,value0)']
109     : -1----------1----------------1---
109     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node3,value0)']
110     : --1----------1---------------1---
110     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node3,value1)']
111     : 1------------1---------------1---
111     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node3,value1)']
112     : -1------------1--------------1---
112     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node3,value2)']
113     : 1-------------1--------------1---
113     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node3,value2)']
114     : --1---------1-------------------1
114     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node3,value0)']
115     : -1----------1-------------------1
115     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node3,value0)']
116     : --1----------1------------------1
116     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node3,value1)']
117     : 1------------1------------------1
117     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node3,value1)']
118     : -1------------1-----------------1
118     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node3,value2)']
119     : 1-------------1-----------------1
119     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node3,value2)']
120     : --1------------1----------------1
120     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node4,value0)']
121     : -1-------------1----------------1
121     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node4,value0)']
122     : --1-------------1---------------1
122     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node4,value1)']
123     : 1---------------1---------------1
123     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node4,value1)']
124     : -1---------------1--------------1
124     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node4,value2)']
125     : 1----------------1--------------1
125     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node4,value2)']
126     : --1---1-----------------------1--
126     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node1,value0)']
127     : -1----1-----------------------1--
127     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node1,value0)']
128     : --1----1----------------------1--
128     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node1,value1)']
129     : 1------1----------------------1--
129     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node1,value1)']
130     : -1------1---------------------1--
130     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node1,value2)']
131     : 1-------1---------------------1--
131     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node1,value2)']
132     : --1---1----------------------1---
132     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node1,value0)']
133     : -1----1----------------------1---
133     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node1,value0)']
134     : --1----1---------------------1---
134     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node1,value1)']
135     : 1------1---------------------1---
135     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node1,value1)']
136     : -1------1--------------------1---
136     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node1,value2)']
137     : 1-------1--------------------1---
137     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node1,value2)']
138     : --1------1----------------------1
138     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node2,value0)']
139     : -1-------1----------------------1
139     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node2,value0)']
140     : --1-------1---------------------1
140     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node2,value1)']
141     : 1---------1---------------------1
141     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node2,value1)']
142     : -1---------1--------------------1
142     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node2,value2)']
143     : 1----------1--------------------1
143     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node2,value2)']
144     : --1---1------------------------1-
144     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node1,value0)']
145     : -1----1------------------------1-
145     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node1,value0)']
146     : --1----1-----------------------1-
146     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node1,value1)']
147     : 1------1-----------------------1-
147     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node1,value1)']
148     : -1------1----------------------1-
148     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node1,value2)']
149     : 1-------1----------------------1-
149     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node1,value2)']
150     : --1---------1---------------1----
150     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node3,value0)']
151     : -1----------1---------------1----
151     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node3,value0)']
152     : --1----------1--------------1----
152     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node3,value1)']
153     : 1------------1--------------1----
153     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node3,value1)']
154     : -1------------1-------------1----
154     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node3,value2)']
155     : 1-------------1-------------1----
155     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node3,value2)']
156     : --1------------1------------1----
156     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node4,value0)']
157     : -1-------------1------------1----
157     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node4,value0)']
158     : --1-------------1-----------1----
158     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node4,value1)']
159     : 1---------------1-----------1----
159     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node4,value1)']
160     : -1---------------1----------1----
160     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node4,value2)']
161     : 1----------------1----------1----
161     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node4,value2)']
162     : --1------1-----------------1-----
162     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node2,value0)']
163     : -1-------1-----------------1-----
163     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node2,value0)']
164     : --1-------1----------------1-----
164     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node2,value1)']
165     : 1---------1----------------1-----
165     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node2,value1)']
166     : -1---------1---------------1-----
166     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node2,value2)']
167     : 1----------1---------------1-----
167     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node2,value2)']
168     : --1------------1-----------1-----
168     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node4,value0)']
169     : -1-------------1-----------1-----
169     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node4,value0)']
170     : --1-------------1----------1-----
170     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node4,value1)']
171     : 1---------------1----------1-----
171     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node4,value1)']
172     : -1---------------1---------1-----
172     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node4,value2)']
173     : 1----------------1---------1-----
173     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node4,value2)']
174     : --1------1----------------1------
174     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node2,value0)']
175     : -1-------1----------------1------
175     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node2,value0)']
176     : --1-------1---------------1------
176     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node2,value1)']
177     : 1---------1---------------1------
177     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node2,value1)']
178     : -1---------1--------------1------
178     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node2,value2)']
179     : 1----------1--------------1------
179     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node2,value2)']
180     : --1---------1-------------1------
180     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node3,value0)']
181     : -1----------1-------------1------
181     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node3,value0)']
182     : --1----------1------------1------
182     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node3,value1)']
183     : 1------------1------------1------
183     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node3,value1)']
184     : -1------------1-----------1------
184     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node3,value2)']
185     : 1-------------1-----------1------
185     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node3,value2)']
186     : --11-----------------------1-----
186     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node0,value0)']
187     : -1-1-----------------------1-----
187     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node0,value0)']
188     : --1-1----------------------1-----
188     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node0,value1)']
189     : 1---1----------------------1-----
189     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node0,value1)']
190     : -1---1---------------------1-----
190     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node0,value2)']
191     : 1----1---------------------1-----
191     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node0,value2)']
192     : --11----------------------1------
192     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node0,value0)']
193     : -1-1----------------------1------
193     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node0,value0)']
194     : --1-1---------------------1------
194     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node0,value1)']
195     : 1---1---------------------1------
195     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node0,value1)']
196     : -1---1--------------------1------
196     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node0,value2)']
197     : 1----1--------------------1------
197     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node0,value2)']
198     : --11------------------------1----
198     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node0,value0)']
199     : -1-1------------------------1----
199     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node0,value0)']
200     : --1-1-----------------------1----
200     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node0,value1)']
201     : 1---1-----------------------1----
201     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node0,value1)']
202     : -1---1----------------------1----
202     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node0,value2)']
203     : 1----1----------------------1----
203     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node0,value2)']
204     : --1---1------------------1-------
204     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node1,value0)']
205     : -1----1------------------1-------
205     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node1,value0)']
206     : --1----1-----------------1-------
206     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node1,value1)']
207     : 1------1-----------------1-------
207     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node1,value1)']
208     : -1------1----------------1-------
208     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node1,value2)']
209     : 1-------1----------------1-------
209     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node1,value2)']
210     : --1------------1---------1-------
210     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node4,value0)']
211     : -1-------------1---------1-------
211     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node4,value0)']
212     : --1-------------1--------1-------
212     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node4,value1)']
213     : 1---------------1--------1-------
213     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node4,value1)']
214     : -1---------------1-------1-------
214     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node4,value2)']
215     : 1----------------1-------1-------
215     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node4,value2)']
216     : --1---1-----------------1--------
216     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node1,value0)']
217     : -1----1-----------------1--------
217     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node1,value0)']
218     : --1----1----------------1--------
218     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node1,value1)']
219     : 1------1----------------1--------
219     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node1,value1)']
220     : -1------1---------------1--------
220     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node1,value2)']
221     : 1-------1---------------1--------
221     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node1,value2)']
222     : --1---------1-----------1--------
222     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node3,value0)']
223     : -1----------1-----------1--------
223     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node3,value0)']
224     : --1----------1----------1--------
224     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node3,value1)']
225     : 1------------1----------1--------
225     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node3,value1)']
226     : -1------------1---------1--------
226     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node3,value2)']
227     : 1-------------1---------1--------
227     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node3,value2)']
228     : --11---------------------1-------
228     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node0,value0)']
229     : -1-1---------------------1-------
229     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node0,value0)']
230     : --1-1--------------------1-------
230     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node0,value1)']
231     : 1---1--------------------1-------
231     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node0,value1)']
232     : -1---1-------------------1-------
232     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node0,value2)']
233     : 1----1-------------------1-------
233     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node0,value2)']
234     : --11--------------------1--------
234     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node0,value0)']
235     : -1-1--------------------1--------
235     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node0,value0)']
236     : --1-1-------------------1--------
236     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node0,value1)']
237     : 1---1-------------------1--------
237     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node0,value1)']
238     : -1---1------------------1--------
238     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node0,value2)']
239     : 1----1------------------1--------
239     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node0,value2)']
240     : --1---1----------------1---------
240     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node1,value0)']
241     : -1----1----------------1---------
241     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node1,value0)']
242     : --1----1---------------1---------
242     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node1,value1)']
243     : 1------1---------------1---------
243     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node1,value1)']
244     : -1------1--------------1---------
244     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node1,value2)']
245     : 1-------1--------------1---------
245     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node1,value2)']
246     : --1------1-------------1---------
246     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node2,value0)']
247     : -1-------1-------------1---------
247     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node2,value0)']
248     : --1-------1------------1---------
248     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node2,value1)']
249     : 1---------1------------1---------
249     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node2,value1)']
250     : -1---------1-----------1---------
250     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node2,value2)']
251     : 1----------1-----------1---------
251     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node2,value2)']
252     : --11-------------------1---------
252     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node0,value0)']
253     : -1-1-------------------1---------
253     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node0,value0)']
254     : --1-1------------------1---------
254     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node0,value1)']
255     : 1---1------------------1---------
255     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node0,value1)']
256     : -1---1-----------------1---------
256     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node0,value2)']
257     : 1----1-----------------1---------
257     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 90
num_suborbits: 1
258 (*) : --1-----0----------------------1-
258     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~vote(node1,value2)']
259     : -1-----0-----------------------1-
259     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~vote(node1,value1)']
260     : 1-----0------------------------1-
260     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~vote(node1,value0)']
261     : --1-----0---------------------1--
261     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~vote(node1,value2)']
262     : -1-----0----------------------1--
262     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~vote(node1,value1)']
263     : 1-----0-----------------------1--
263     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~vote(node1,value0)']
264     : --1-----0--------------------1---
264     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~vote(node1,value2)']
265     : -1-----0---------------------1---
265     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~vote(node1,value1)']
266     : 1-----0----------------------1---
266     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~vote(node1,value0)']
267     : --1--------0--------------------1
267     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~vote(node2,value2)']
268     : -1--------0---------------------1
268     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~vote(node2,value1)']
269     : 1--------0----------------------1
269     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~vote(node2,value0)']
270     : --1--------0------------------1--
270     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~vote(node2,value2)']
271     : -1--------0-------------------1--
271     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~vote(node2,value1)']
272     : 1--------0--------------------1--
272     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~vote(node2,value0)']
273     : --1--------0-----------------1---
273     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~vote(node2,value2)']
274     : -1--------0------------------1---
274     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~vote(node2,value1)']
275     : 1--------0-------------------1---
275     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~vote(node2,value0)']
276     : --1-----------0-----------------1
276     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~vote(node3,value2)']
277     : -1-----------0------------------1
277     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~vote(node3,value1)']
278     : 1-----------0-------------------1
278     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~vote(node3,value0)']
279     : --1-----------0----------------1-
279     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~vote(node3,value2)']
280     : -1-----------0-----------------1-
280     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~vote(node3,value1)']
281     : 1-----------0------------------1-
281     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~vote(node3,value0)']
282     : --1-----------0--------------1---
282     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~vote(node3,value2)']
283     : -1-----------0---------------1---
283     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~vote(node3,value1)']
284     : 1-----------0----------------1---
284     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~vote(node3,value0)']
285     : --1--------------0--------------1
285     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~vote(node4,value2)']
286     : -1--------------0---------------1
286     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~vote(node4,value1)']
287     : 1--------------0----------------1
287     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~vote(node4,value0)']
288     : --1--------------0-------------1-
288     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~vote(node4,value2)']
289     : -1--------------0--------------1-
289     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~vote(node4,value1)']
290     : 1--------------0---------------1-
290     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~vote(node4,value0)']
291     : --1--------------0------------1--
291     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~vote(node4,value2)']
292     : -1--------------0-------------1--
292     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~vote(node4,value1)']
293     : 1--------------0--------------1--
293     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~vote(node4,value0)']
294     : --1--0----------------------1----
294     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~vote(node0,value2)']
295     : -1--0-----------------------1----
295     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~vote(node0,value1)']
296     : 1--0------------------------1----
296     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~vote(node0,value0)']
297     : --1--0---------------------1-----
297     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~vote(node0,value2)']
298     : -1--0----------------------1-----
298     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~vote(node0,value1)']
299     : 1--0-----------------------1-----
299     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~vote(node0,value0)']
300     : --1--0--------------------1------
300     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~vote(node0,value2)']
301     : -1--0---------------------1------
301     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~vote(node0,value1)']
302     : 1--0----------------------1------
302     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~vote(node0,value0)']
303     : --1--------0---------------1-----
303     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~vote(node2,value2)']
304     : -1--------0----------------1-----
304     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~vote(node2,value1)']
305     : 1--------0-----------------1-----
305     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~vote(node2,value0)']
306     : --1--------0--------------1------
306     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~vote(node2,value2)']
307     : -1--------0---------------1------
307     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~vote(node2,value1)']
308     : 1--------0----------------1------
308     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~vote(node2,value0)']
309     : --1-----------0-------------1----
309     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~vote(node3,value2)']
310     : -1-----------0--------------1----
310     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~vote(node3,value1)']
311     : 1-----------0---------------1----
311     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~vote(node3,value0)']
312     : --1-----------0-----------1------
312     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~vote(node3,value2)']
313     : -1-----------0------------1------
313     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~vote(node3,value1)']
314     : 1-----------0-------------1------
314     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~vote(node3,value0)']
315     : --1--------------0----------1----
315     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~vote(node4,value2)']
316     : -1--------------0-----------1----
316     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~vote(node4,value1)']
317     : 1--------------0------------1----
317     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~vote(node4,value0)']
318     : --1--------------0---------1-----
318     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~vote(node4,value2)']
319     : -1--------------0----------1-----
319     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~vote(node4,value1)']
320     : 1--------------0-----------1-----
320     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~vote(node4,value0)']
321     : --1--0-------------------1-------
321     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~vote(node0,value2)']
322     : -1--0--------------------1-------
322     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~vote(node0,value1)']
323     : 1--0---------------------1-------
323     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~vote(node0,value0)']
324     : --1--0------------------1--------
324     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~vote(node0,value2)']
325     : -1--0-------------------1--------
325     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~vote(node0,value1)']
326     : 1--0--------------------1--------
326     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~vote(node0,value0)']
327     : --1-----0----------------1-------
327     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~vote(node1,value2)']
328     : -1-----0-----------------1-------
328     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~vote(node1,value1)']
329     : 1-----0------------------1-------
329     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~vote(node1,value0)']
330     : --1-----0---------------1--------
330     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~vote(node1,value2)']
331     : -1-----0----------------1--------
331     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~vote(node1,value1)']
332     : 1-----0-----------------1--------
332     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~vote(node1,value0)']
333     : --1-----------0---------1--------
333     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~vote(node3,value2)']
334     : -1-----------0----------1--------
334     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~vote(node3,value1)']
335     : 1-----------0-----------1--------
335     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~vote(node3,value0)']
336     : --1--------------0-------1-------
336     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~vote(node4,value2)']
337     : -1--------------0--------1-------
337     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~vote(node4,value1)']
338     : 1--------------0---------1-------
338     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~vote(node4,value0)']
339     : --1--0-----------------1---------
339     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~vote(node0,value2)']
340     : -1--0------------------1---------
340     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~vote(node0,value1)']
341     : 1--0-------------------1---------
341     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~vote(node0,value0)']
342     : --1-----0--------------1---------
342     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~vote(node1,value2)']
343     : -1-----0---------------1---------
343     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~vote(node1,value1)']
344     : 1-----0----------------1---------
344     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~vote(node1,value0)']
345     : --1--------0-----------1---------
345     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~vote(node2,value2)']
346     : -1--------0------------1---------
346     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~vote(node2,value1)']
347     : 1--------0-------------1---------
347     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~vote(node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 90
num_suborbits: 1
348 (*) : --1----------------0---------1---
348     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~voted(node1)']
349     : -1-----------------0---------1---
349     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~voted(node1)']
350     : 1------------------0---------1---
350     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~voted(node1)']
351     : --1----------------0----------1--
351     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~voted(node1)']
352     : -1-----------------0----------1--
352     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~voted(node1)']
353     : 1------------------0----------1--
353     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~voted(node1)']
354     : --1----------------0-----------1-
354     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~voted(node1)']
355     : -1-----------------0-----------1-
355     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~voted(node1)']
356     : 1------------------0-----------1-
356     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~voted(node1)']
357     : --1-----------------0--------1---
357     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~voted(node2)']
358     : -1------------------0--------1---
358     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~voted(node2)']
359     : 1-------------------0--------1---
359     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~voted(node2)']
360     : --1-----------------0---------1--
360     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~voted(node2)']
361     : -1------------------0---------1--
361     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~voted(node2)']
362     : 1-------------------0---------1--
362     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~voted(node2)']
363     : --1-----------------0-----------1
363     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~voted(node2)']
364     : -1------------------0-----------1
364     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~voted(node2)']
365     : 1-------------------0-----------1
365     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~voted(node2)']
366     : --1------------------0-------1---
366     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~voted(node3)']
367     : -1-------------------0-------1---
367     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~voted(node3)']
368     : 1--------------------0-------1---
368     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~voted(node3)']
369     : --1------------------0---------1-
369     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~voted(node3)']
370     : -1-------------------0---------1-
370     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~voted(node3)']
371     : 1--------------------0---------1-
371     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~voted(node3)']
372     : --1------------------0----------1
372     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~voted(node3)']
373     : -1-------------------0----------1
373     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~voted(node3)']
374     : 1--------------------0----------1
374     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~voted(node3)']
375     : --1-------------------0-------1--
375     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~voted(node4)']
376     : -1--------------------0-------1--
376     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~voted(node4)']
377     : 1---------------------0-------1--
377     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~voted(node4)']
378     : --1-------------------0--------1-
378     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~voted(node4)']
379     : -1--------------------0--------1-
379     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~voted(node4)']
380     : 1---------------------0--------1-
380     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~voted(node4)']
381     : --1-------------------0---------1
381     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~voted(node4)']
382     : -1--------------------0---------1
382     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~voted(node4)']
383     : 1---------------------0---------1
383     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~voted(node4)']
384     : --1---------------0-------1------
384     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~voted(node0)']
385     : -1----------------0-------1------
385     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~voted(node0)']
386     : 1-----------------0-------1------
386     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~voted(node0)']
387     : --1---------------0--------1-----
387     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~voted(node0)']
388     : -1----------------0--------1-----
388     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~voted(node0)']
389     : 1-----------------0--------1-----
389     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~voted(node0)']
390     : --1---------------0---------1----
390     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~voted(node0)']
391     : -1----------------0---------1----
391     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~voted(node0)']
392     : 1-----------------0---------1----
392     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~voted(node0)']
393     : --1-----------------0-----1------
393     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~voted(node2)']
394     : -1------------------0-----1------
394     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~voted(node2)']
395     : 1-------------------0-----1------
395     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~voted(node2)']
396     : --1-----------------0------1-----
396     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~voted(node2)']
397     : -1------------------0------1-----
397     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~voted(node2)']
398     : 1-------------------0------1-----
398     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~voted(node2)']
399     : --1------------------0----1------
399     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~voted(node3)']
400     : -1-------------------0----1------
400     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~voted(node3)']
401     : 1--------------------0----1------
401     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~voted(node3)']
402     : --1------------------0------1----
402     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~voted(node3)']
403     : -1-------------------0------1----
403     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~voted(node3)']
404     : 1--------------------0------1----
404     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~voted(node3)']
405     : --1-------------------0----1-----
405     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~voted(node4)']
406     : -1--------------------0----1-----
406     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~voted(node4)']
407     : 1---------------------0----1-----
407     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~voted(node4)']
408     : --1-------------------0-----1----
408     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~voted(node4)']
409     : -1--------------------0-----1----
409     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~voted(node4)']
410     : 1---------------------0-----1----
410     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~voted(node4)']
411     : --1---------------0-----1--------
411     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~voted(node0)']
412     : -1----------------0-----1--------
412     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~voted(node0)']
413     : 1-----------------0-----1--------
413     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~voted(node0)']
414     : --1---------------0------1-------
414     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~voted(node0)']
415     : -1----------------0------1-------
415     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~voted(node0)']
416     : 1-----------------0------1-------
416     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~voted(node0)']
417     : --1----------------0----1--------
417     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~voted(node1)']
418     : -1-----------------0----1--------
418     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~voted(node1)']
419     : 1------------------0----1--------
419     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~voted(node1)']
420     : --1----------------0-----1-------
420     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~voted(node1)']
421     : -1-----------------0-----1-------
421     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~voted(node1)']
422     : 1------------------0-----1-------
422     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~voted(node1)']
423     : --1------------------0--1--------
423     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~voted(node3)']
424     : -1-------------------0--1--------
424     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~voted(node3)']
425     : 1--------------------0--1--------
425     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~voted(node3)']
426     : --1-------------------0--1-------
426     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~voted(node4)']
427     : -1--------------------0--1-------
427     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~voted(node4)']
428     : 1---------------------0--1-------
428     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~voted(node4)']
429     : --1---------------0----1---------
429     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~voted(node0)']
430     : -1----------------0----1---------
430     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~voted(node0)']
431     : 1-----------------0----1---------
431     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~voted(node0)']
432     : --1----------------0---1---------
432     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~voted(node1)']
433     : -1-----------------0---1---------
433     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~voted(node1)']
434     : 1------------------0---1---------
434     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~voted(node1)']
435     : --1-----------------0--1---------
435     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~voted(node2)']
436     : -1------------------0--1---------
436     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~voted(node2)']
437     : 1-------------------0--1---------
437     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~voted(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 360
num_suborbits: 1
438 (*) : --11-------0-------0-------------
438     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~voted(node1)']
439     : -1-1------0--------0-------------
439     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~voted(node1)']
440     : --1-1------0-------0-------------
440     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~voted(node1)']
441     : 1---1----0---------0-------------
441     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~voted(node1)']
442     : -1---1----0--------0-------------
442     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~voted(node1)']
443     : 1----1---0---------0-------------
443     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~voted(node1)']
444     : --11----------0----0-------------
444     : ['decided(value2)', 'vote(node0,value0)', '~vote(node3,value2)', '~voted(node1)']
445     : -1-1---------0-----0-------------
445     : ['decided(value1)', 'vote(node0,value0)', '~vote(node3,value1)', '~voted(node1)']
446     : --1-1---------0----0-------------
446     : ['decided(value2)', 'vote(node0,value1)', '~vote(node3,value2)', '~voted(node1)']
447     : 1---1-------0------0-------------
447     : ['decided(value0)', 'vote(node0,value1)', '~vote(node3,value0)', '~voted(node1)']
448     : -1---1-------0-----0-------------
448     : ['decided(value1)', 'vote(node0,value2)', '~vote(node3,value1)', '~voted(node1)']
449     : 1----1------0------0-------------
449     : ['decided(value0)', 'vote(node0,value2)', '~vote(node3,value0)', '~voted(node1)']
450     : --11-------------0-0-------------
450     : ['decided(value2)', 'vote(node0,value0)', '~vote(node4,value2)', '~voted(node1)']
451     : -1-1------------0--0-------------
451     : ['decided(value1)', 'vote(node0,value0)', '~vote(node4,value1)', '~voted(node1)']
452     : --1-1------------0-0-------------
452     : ['decided(value2)', 'vote(node0,value1)', '~vote(node4,value2)', '~voted(node1)']
453     : 1---1----------0---0-------------
453     : ['decided(value0)', 'vote(node0,value1)', '~vote(node4,value0)', '~voted(node1)']
454     : -1---1----------0--0-------------
454     : ['decided(value1)', 'vote(node0,value2)', '~vote(node4,value1)', '~voted(node1)']
455     : 1----1---------0---0-------------
455     : ['decided(value0)', 'vote(node0,value2)', '~vote(node4,value0)', '~voted(node1)']
456     : --11----0-----------0------------
456     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~voted(node2)']
457     : -1-1---0------------0------------
457     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~voted(node2)']
458     : --1-1---0-----------0------------
458     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~voted(node2)']
459     : 1---1-0-------------0------------
459     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~voted(node2)']
460     : -1---1-0------------0------------
460     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~voted(node2)']
461     : 1----10-------------0------------
461     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~voted(node2)']
462     : --11----------0-----0------------
462     : ['decided(value2)', 'vote(node0,value0)', '~vote(node3,value2)', '~voted(node2)']
463     : -1-1---------0------0------------
463     : ['decided(value1)', 'vote(node0,value0)', '~vote(node3,value1)', '~voted(node2)']
464     : --1-1---------0-----0------------
464     : ['decided(value2)', 'vote(node0,value1)', '~vote(node3,value2)', '~voted(node2)']
465     : 1---1-------0-------0------------
465     : ['decided(value0)', 'vote(node0,value1)', '~vote(node3,value0)', '~voted(node2)']
466     : -1---1-------0------0------------
466     : ['decided(value1)', 'vote(node0,value2)', '~vote(node3,value1)', '~voted(node2)']
467     : 1----1------0-------0------------
467     : ['decided(value0)', 'vote(node0,value2)', '~vote(node3,value0)', '~voted(node2)']
468     : --11-------------0--0------------
468     : ['decided(value2)', 'vote(node0,value0)', '~vote(node4,value2)', '~voted(node2)']
469     : -1-1------------0---0------------
469     : ['decided(value1)', 'vote(node0,value0)', '~vote(node4,value1)', '~voted(node2)']
470     : --1-1------------0--0------------
470     : ['decided(value2)', 'vote(node0,value1)', '~vote(node4,value2)', '~voted(node2)']
471     : 1---1----------0----0------------
471     : ['decided(value0)', 'vote(node0,value1)', '~vote(node4,value0)', '~voted(node2)']
472     : -1---1----------0---0------------
472     : ['decided(value1)', 'vote(node0,value2)', '~vote(node4,value1)', '~voted(node2)']
473     : 1----1---------0----0------------
473     : ['decided(value0)', 'vote(node0,value2)', '~vote(node4,value0)', '~voted(node2)']
474     : --11----0------------0-----------
474     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~voted(node3)']
475     : -1-1---0-------------0-----------
475     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~voted(node3)']
476     : --1-1---0------------0-----------
476     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~voted(node3)']
477     : 1---1-0--------------0-----------
477     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~voted(node3)']
478     : -1---1-0-------------0-----------
478     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~voted(node3)']
479     : 1----10--------------0-----------
479     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~voted(node3)']
480     : --11-------0---------0-----------
480     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~voted(node3)']
481     : -1-1------0----------0-----------
481     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~voted(node3)']
482     : --1-1------0---------0-----------
482     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~voted(node3)']
483     : 1---1----0-----------0-----------
483     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~voted(node3)']
484     : -1---1----0----------0-----------
484     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~voted(node3)']
485     : 1----1---0-----------0-----------
485     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~voted(node3)']
486     : --11-------------0---0-----------
486     : ['decided(value2)', 'vote(node0,value0)', '~vote(node4,value2)', '~voted(node3)']
487     : -1-1------------0----0-----------
487     : ['decided(value1)', 'vote(node0,value0)', '~vote(node4,value1)', '~voted(node3)']
488     : --1-1------------0---0-----------
488     : ['decided(value2)', 'vote(node0,value1)', '~vote(node4,value2)', '~voted(node3)']
489     : 1---1----------0-----0-----------
489     : ['decided(value0)', 'vote(node0,value1)', '~vote(node4,value0)', '~voted(node3)']
490     : -1---1----------0----0-----------
490     : ['decided(value1)', 'vote(node0,value2)', '~vote(node4,value1)', '~voted(node3)']
491     : 1----1---------0-----0-----------
491     : ['decided(value0)', 'vote(node0,value2)', '~vote(node4,value0)', '~voted(node3)']
492     : --11----0-------------0----------
492     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~voted(node4)']
493     : -1-1---0--------------0----------
493     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~voted(node4)']
494     : --1-1---0-------------0----------
494     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~voted(node4)']
495     : 1---1-0---------------0----------
495     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~voted(node4)']
496     : -1---1-0--------------0----------
496     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~voted(node4)']
497     : 1----10---------------0----------
497     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~voted(node4)']
498     : --11-------0----------0----------
498     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~voted(node4)']
499     : -1-1------0-----------0----------
499     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~voted(node4)']
500     : --1-1------0----------0----------
500     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~voted(node4)']
501     : 1---1----0------------0----------
501     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~voted(node4)']
502     : -1---1----0-----------0----------
502     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~voted(node4)']
503     : 1----1---0------------0----------
503     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~voted(node4)']
504     : --11----------0-------0----------
504     : ['decided(value2)', 'vote(node0,value0)', '~vote(node3,value2)', '~voted(node4)']
505     : -1-1---------0--------0----------
505     : ['decided(value1)', 'vote(node0,value0)', '~vote(node3,value1)', '~voted(node4)']
506     : --1-1---------0-------0----------
506     : ['decided(value2)', 'vote(node0,value1)', '~vote(node3,value2)', '~voted(node4)']
507     : 1---1-------0---------0----------
507     : ['decided(value0)', 'vote(node0,value1)', '~vote(node3,value0)', '~voted(node4)']
508     : -1---1-------0--------0----------
508     : ['decided(value1)', 'vote(node0,value2)', '~vote(node3,value1)', '~voted(node4)']
509     : 1----1------0---------0----------
509     : ['decided(value0)', 'vote(node0,value2)', '~vote(node3,value0)', '~voted(node4)']
510     : --1---1----0------0--------------
510     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~voted(node0)']
511     : -1----1---0-------0--------------
511     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~voted(node0)']
512     : --1----1---0------0--------------
512     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~voted(node0)']
513     : 1------1-0--------0--------------
513     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~voted(node0)']
514     : -1------1-0-------0--------------
514     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~voted(node0)']
515     : 1-------10--------0--------------
515     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~voted(node0)']
516     : --1---1-------0---0--------------
516     : ['decided(value2)', 'vote(node1,value0)', '~vote(node3,value2)', '~voted(node0)']
517     : -1----1------0----0--------------
517     : ['decided(value1)', 'vote(node1,value0)', '~vote(node3,value1)', '~voted(node0)']
518     : --1----1------0---0--------------
518     : ['decided(value2)', 'vote(node1,value1)', '~vote(node3,value2)', '~voted(node0)']
519     : 1------1----0-----0--------------
519     : ['decided(value0)', 'vote(node1,value1)', '~vote(node3,value0)', '~voted(node0)']
520     : -1------1----0----0--------------
520     : ['decided(value1)', 'vote(node1,value2)', '~vote(node3,value1)', '~voted(node0)']
521     : 1-------1---0-----0--------------
521     : ['decided(value0)', 'vote(node1,value2)', '~vote(node3,value0)', '~voted(node0)']
522     : --1---1----------00--------------
522     : ['decided(value2)', 'vote(node1,value0)', '~vote(node4,value2)', '~voted(node0)']
523     : -1----1---------0-0--------------
523     : ['decided(value1)', 'vote(node1,value0)', '~vote(node4,value1)', '~voted(node0)']
524     : --1----1---------00--------------
524     : ['decided(value2)', 'vote(node1,value1)', '~vote(node4,value2)', '~voted(node0)']
525     : 1------1-------0--0--------------
525     : ['decided(value0)', 'vote(node1,value1)', '~vote(node4,value0)', '~voted(node0)']
526     : -1------1-------0-0--------------
526     : ['decided(value1)', 'vote(node1,value2)', '~vote(node4,value1)', '~voted(node0)']
527     : 1-------1------0--0--------------
527     : ['decided(value0)', 'vote(node1,value2)', '~vote(node4,value0)', '~voted(node0)']
528     : --1--01-------------0------------
528     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~voted(node2)']
529     : -1--0-1-------------0------------
529     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~voted(node2)']
530     : --1--0-1------------0------------
530     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~voted(node2)']
531     : 1--0---1------------0------------
531     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~voted(node2)']
532     : -1--0---1-----------0------------
532     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~voted(node2)']
533     : 1--0----1-----------0------------
533     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~voted(node2)']
534     : --1---1-------0-----0------------
534     : ['decided(value2)', 'vote(node1,value0)', '~vote(node3,value2)', '~voted(node2)']
535     : -1----1------0------0------------
535     : ['decided(value1)', 'vote(node1,value0)', '~vote(node3,value1)', '~voted(node2)']
536     : --1----1------0-----0------------
536     : ['decided(value2)', 'vote(node1,value1)', '~vote(node3,value2)', '~voted(node2)']
537     : 1------1----0-------0------------
537     : ['decided(value0)', 'vote(node1,value1)', '~vote(node3,value0)', '~voted(node2)']
538     : -1------1----0------0------------
538     : ['decided(value1)', 'vote(node1,value2)', '~vote(node3,value1)', '~voted(node2)']
539     : 1-------1---0-------0------------
539     : ['decided(value0)', 'vote(node1,value2)', '~vote(node3,value0)', '~voted(node2)']
540     : --1---1----------0--0------------
540     : ['decided(value2)', 'vote(node1,value0)', '~vote(node4,value2)', '~voted(node2)']
541     : -1----1---------0---0------------
541     : ['decided(value1)', 'vote(node1,value0)', '~vote(node4,value1)', '~voted(node2)']
542     : --1----1---------0--0------------
542     : ['decided(value2)', 'vote(node1,value1)', '~vote(node4,value2)', '~voted(node2)']
543     : 1------1-------0----0------------
543     : ['decided(value0)', 'vote(node1,value1)', '~vote(node4,value0)', '~voted(node2)']
544     : -1------1-------0---0------------
544     : ['decided(value1)', 'vote(node1,value2)', '~vote(node4,value1)', '~voted(node2)']
545     : 1-------1------0----0------------
545     : ['decided(value0)', 'vote(node1,value2)', '~vote(node4,value0)', '~voted(node2)']
546     : --1--01--------------0-----------
546     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~voted(node3)']
547     : -1--0-1--------------0-----------
547     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~voted(node3)']
548     : --1--0-1-------------0-----------
548     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~voted(node3)']
549     : 1--0---1-------------0-----------
549     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~voted(node3)']
550     : -1--0---1------------0-----------
550     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~voted(node3)']
551     : 1--0----1------------0-----------
551     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~voted(node3)']
552     : --1---1----0---------0-----------
552     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~voted(node3)']
553     : -1----1---0----------0-----------
553     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~voted(node3)']
554     : --1----1---0---------0-----------
554     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~voted(node3)']
555     : 1------1-0-----------0-----------
555     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~voted(node3)']
556     : -1------1-0----------0-----------
556     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~voted(node3)']
557     : 1-------10-----------0-----------
557     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~voted(node3)']
558     : --1---1----------0---0-----------
558     : ['decided(value2)', 'vote(node1,value0)', '~vote(node4,value2)', '~voted(node3)']
559     : -1----1---------0----0-----------
559     : ['decided(value1)', 'vote(node1,value0)', '~vote(node4,value1)', '~voted(node3)']
560     : --1----1---------0---0-----------
560     : ['decided(value2)', 'vote(node1,value1)', '~vote(node4,value2)', '~voted(node3)']
561     : 1------1-------0-----0-----------
561     : ['decided(value0)', 'vote(node1,value1)', '~vote(node4,value0)', '~voted(node3)']
562     : -1------1-------0----0-----------
562     : ['decided(value1)', 'vote(node1,value2)', '~vote(node4,value1)', '~voted(node3)']
563     : 1-------1------0-----0-----------
563     : ['decided(value0)', 'vote(node1,value2)', '~vote(node4,value0)', '~voted(node3)']
564     : --1--01---------------0----------
564     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~voted(node4)']
565     : -1--0-1---------------0----------
565     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~voted(node4)']
566     : --1--0-1--------------0----------
566     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~voted(node4)']
567     : 1--0---1--------------0----------
567     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~voted(node4)']
568     : -1--0---1-------------0----------
568     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~voted(node4)']
569     : 1--0----1-------------0----------
569     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~voted(node4)']
570     : --1---1----0----------0----------
570     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~voted(node4)']
571     : -1----1---0-----------0----------
571     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~voted(node4)']
572     : --1----1---0----------0----------
572     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~voted(node4)']
573     : 1------1-0------------0----------
573     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~voted(node4)']
574     : -1------1-0-----------0----------
574     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~voted(node4)']
575     : 1-------10------------0----------
575     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~voted(node4)']
576     : --1---1-------0-------0----------
576     : ['decided(value2)', 'vote(node1,value0)', '~vote(node3,value2)', '~voted(node4)']
577     : -1----1------0--------0----------
577     : ['decided(value1)', 'vote(node1,value0)', '~vote(node3,value1)', '~voted(node4)']
578     : --1----1------0-------0----------
578     : ['decided(value2)', 'vote(node1,value1)', '~vote(node3,value2)', '~voted(node4)']
579     : 1------1----0---------0----------
579     : ['decided(value0)', 'vote(node1,value1)', '~vote(node3,value0)', '~voted(node4)']
580     : -1------1----0--------0----------
580     : ['decided(value1)', 'vote(node1,value2)', '~vote(node3,value1)', '~voted(node4)']
581     : 1-------1---0---------0----------
581     : ['decided(value0)', 'vote(node1,value2)', '~vote(node3,value0)', '~voted(node4)']
582     : --1-----01--------0--------------
582     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~voted(node0)']
583     : -1-----0-1--------0--------------
583     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~voted(node0)']
584     : --1-----0-1-------0--------------
584     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~voted(node0)']
585     : 1-----0---1-------0--------------
585     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~voted(node0)']
586     : -1-----0---1------0--------------
586     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~voted(node0)']
587     : 1-----0----1------0--------------
587     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~voted(node0)']
588     : --1------1----0---0--------------
588     : ['decided(value2)', 'vote(node2,value0)', '~vote(node3,value2)', '~voted(node0)']
589     : -1-------1---0----0--------------
589     : ['decided(value1)', 'vote(node2,value0)', '~vote(node3,value1)', '~voted(node0)']
590     : --1-------1---0---0--------------
590     : ['decided(value2)', 'vote(node2,value1)', '~vote(node3,value2)', '~voted(node0)']
591     : 1---------1-0-----0--------------
591     : ['decided(value0)', 'vote(node2,value1)', '~vote(node3,value0)', '~voted(node0)']
592     : -1---------1-0----0--------------
592     : ['decided(value1)', 'vote(node2,value2)', '~vote(node3,value1)', '~voted(node0)']
593     : 1----------10-----0--------------
593     : ['decided(value0)', 'vote(node2,value2)', '~vote(node3,value0)', '~voted(node0)']
594     : --1------1-------00--------------
594     : ['decided(value2)', 'vote(node2,value0)', '~vote(node4,value2)', '~voted(node0)']
595     : -1-------1------0-0--------------
595     : ['decided(value1)', 'vote(node2,value0)', '~vote(node4,value1)', '~voted(node0)']
596     : --1-------1------00--------------
596     : ['decided(value2)', 'vote(node2,value1)', '~vote(node4,value2)', '~voted(node0)']
597     : 1---------1----0--0--------------
597     : ['decided(value0)', 'vote(node2,value1)', '~vote(node4,value0)', '~voted(node0)']
598     : -1---------1----0-0--------------
598     : ['decided(value1)', 'vote(node2,value2)', '~vote(node4,value1)', '~voted(node0)']
599     : 1----------1---0--0--------------
599     : ['decided(value0)', 'vote(node2,value2)', '~vote(node4,value0)', '~voted(node0)']
600     : --1--0---1---------0-------------
600     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~voted(node1)']
601     : -1--0----1---------0-------------
601     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~voted(node1)']
602     : --1--0----1--------0-------------
602     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~voted(node1)']
603     : 1--0------1--------0-------------
603     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~voted(node1)']
604     : -1--0------1-------0-------------
604     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~voted(node1)']
605     : 1--0-------1-------0-------------
605     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~voted(node1)']
606     : --1------1----0----0-------------
606     : ['decided(value2)', 'vote(node2,value0)', '~vote(node3,value2)', '~voted(node1)']
607     : -1-------1---0-----0-------------
607     : ['decided(value1)', 'vote(node2,value0)', '~vote(node3,value1)', '~voted(node1)']
608     : --1-------1---0----0-------------
608     : ['decided(value2)', 'vote(node2,value1)', '~vote(node3,value2)', '~voted(node1)']
609     : 1---------1-0------0-------------
609     : ['decided(value0)', 'vote(node2,value1)', '~vote(node3,value0)', '~voted(node1)']
610     : -1---------1-0-----0-------------
610     : ['decided(value1)', 'vote(node2,value2)', '~vote(node3,value1)', '~voted(node1)']
611     : 1----------10------0-------------
611     : ['decided(value0)', 'vote(node2,value2)', '~vote(node3,value0)', '~voted(node1)']
612     : --1------1-------0-0-------------
612     : ['decided(value2)', 'vote(node2,value0)', '~vote(node4,value2)', '~voted(node1)']
613     : -1-------1------0--0-------------
613     : ['decided(value1)', 'vote(node2,value0)', '~vote(node4,value1)', '~voted(node1)']
614     : --1-------1------0-0-------------
614     : ['decided(value2)', 'vote(node2,value1)', '~vote(node4,value2)', '~voted(node1)']
615     : 1---------1----0---0-------------
615     : ['decided(value0)', 'vote(node2,value1)', '~vote(node4,value0)', '~voted(node1)']
616     : -1---------1----0--0-------------
616     : ['decided(value1)', 'vote(node2,value2)', '~vote(node4,value1)', '~voted(node1)']
617     : 1----------1---0---0-------------
617     : ['decided(value0)', 'vote(node2,value2)', '~vote(node4,value0)', '~voted(node1)']
618     : --1--0---1-----------0-----------
618     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~voted(node3)']
619     : -1--0----1-----------0-----------
619     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~voted(node3)']
620     : --1--0----1----------0-----------
620     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~voted(node3)']
621     : 1--0------1----------0-----------
621     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~voted(node3)']
622     : -1--0------1---------0-----------
622     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~voted(node3)']
623     : 1--0-------1---------0-----------
623     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~voted(node3)']
624     : --1-----01-----------0-----------
624     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~voted(node3)']
625     : -1-----0-1-----------0-----------
625     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~voted(node3)']
626     : --1-----0-1----------0-----------
626     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~voted(node3)']
627     : 1-----0---1----------0-----------
627     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~voted(node3)']
628     : -1-----0---1---------0-----------
628     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~voted(node3)']
629     : 1-----0----1---------0-----------
629     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~voted(node3)']
630     : --1------1-------0---0-----------
630     : ['decided(value2)', 'vote(node2,value0)', '~vote(node4,value2)', '~voted(node3)']
631     : -1-------1------0----0-----------
631     : ['decided(value1)', 'vote(node2,value0)', '~vote(node4,value1)', '~voted(node3)']
632     : --1-------1------0---0-----------
632     : ['decided(value2)', 'vote(node2,value1)', '~vote(node4,value2)', '~voted(node3)']
633     : 1---------1----0-----0-----------
633     : ['decided(value0)', 'vote(node2,value1)', '~vote(node4,value0)', '~voted(node3)']
634     : -1---------1----0----0-----------
634     : ['decided(value1)', 'vote(node2,value2)', '~vote(node4,value1)', '~voted(node3)']
635     : 1----------1---0-----0-----------
635     : ['decided(value0)', 'vote(node2,value2)', '~vote(node4,value0)', '~voted(node3)']
636     : --1--0---1------------0----------
636     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~voted(node4)']
637     : -1--0----1------------0----------
637     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~voted(node4)']
638     : --1--0----1-----------0----------
638     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~voted(node4)']
639     : 1--0------1-----------0----------
639     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~voted(node4)']
640     : -1--0------1----------0----------
640     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~voted(node4)']
641     : 1--0-------1----------0----------
641     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~voted(node4)']
642     : --1-----01------------0----------
642     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~voted(node4)']
643     : -1-----0-1------------0----------
643     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~voted(node4)']
644     : --1-----0-1-----------0----------
644     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~voted(node4)']
645     : 1-----0---1-----------0----------
645     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~voted(node4)']
646     : -1-----0---1----------0----------
646     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~voted(node4)']
647     : 1-----0----1----------0----------
647     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~voted(node4)']
648     : --1------1----0-------0----------
648     : ['decided(value2)', 'vote(node2,value0)', '~vote(node3,value2)', '~voted(node4)']
649     : -1-------1---0--------0----------
649     : ['decided(value1)', 'vote(node2,value0)', '~vote(node3,value1)', '~voted(node4)']
650     : --1-------1---0-------0----------
650     : ['decided(value2)', 'vote(node2,value1)', '~vote(node3,value2)', '~voted(node4)']
651     : 1---------1-0---------0----------
651     : ['decided(value0)', 'vote(node2,value1)', '~vote(node3,value0)', '~voted(node4)']
652     : -1---------1-0--------0----------
652     : ['decided(value1)', 'vote(node2,value2)', '~vote(node3,value1)', '~voted(node4)']
653     : 1----------10---------0----------
653     : ['decided(value0)', 'vote(node2,value2)', '~vote(node3,value0)', '~voted(node4)']
654     : --1-----0---1-----0--------------
654     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~voted(node0)']
655     : -1-----0----1-----0--------------
655     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~voted(node0)']
656     : --1-----0----1----0--------------
656     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~voted(node0)']
657     : 1-----0------1----0--------------
657     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~voted(node0)']
658     : -1-----0------1---0--------------
658     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~voted(node0)']
659     : 1-----0-------1---0--------------
659     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~voted(node0)']
660     : --1--------01-----0--------------
660     : ['decided(value2)', 'vote(node3,value0)', '~vote(node2,value2)', '~voted(node0)']
661     : -1--------0-1-----0--------------
661     : ['decided(value1)', 'vote(node3,value0)', '~vote(node2,value1)', '~voted(node0)']
662     : --1--------0-1----0--------------
662     : ['decided(value2)', 'vote(node3,value1)', '~vote(node2,value2)', '~voted(node0)']
663     : 1--------0---1----0--------------
663     : ['decided(value0)', 'vote(node3,value1)', '~vote(node2,value0)', '~voted(node0)']
664     : -1--------0---1---0--------------
664     : ['decided(value1)', 'vote(node3,value2)', '~vote(node2,value1)', '~voted(node0)']
665     : 1--------0----1---0--------------
665     : ['decided(value0)', 'vote(node3,value2)', '~vote(node2,value0)', '~voted(node0)']
666     : --1---------1----00--------------
666     : ['decided(value2)', 'vote(node3,value0)', '~vote(node4,value2)', '~voted(node0)']
667     : -1----------1---0-0--------------
667     : ['decided(value1)', 'vote(node3,value0)', '~vote(node4,value1)', '~voted(node0)']
668     : --1----------1---00--------------
668     : ['decided(value2)', 'vote(node3,value1)', '~vote(node4,value2)', '~voted(node0)']
669     : 1------------1-0--0--------------
669     : ['decided(value0)', 'vote(node3,value1)', '~vote(node4,value0)', '~voted(node0)']
670     : -1------------1-0-0--------------
670     : ['decided(value1)', 'vote(node3,value2)', '~vote(node4,value1)', '~voted(node0)']
671     : 1-------------10--0--------------
671     : ['decided(value0)', 'vote(node3,value2)', '~vote(node4,value0)', '~voted(node0)']
672     : --1--0------1------0-------------
672     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~voted(node1)']
673     : -1--0-------1------0-------------
673     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~voted(node1)']
674     : --1--0-------1-----0-------------
674     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~voted(node1)']
675     : 1--0---------1-----0-------------
675     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~voted(node1)']
676     : -1--0---------1----0-------------
676     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~voted(node1)']
677     : 1--0----------1----0-------------
677     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~voted(node1)']
678     : --1--------01------0-------------
678     : ['decided(value2)', 'vote(node3,value0)', '~vote(node2,value2)', '~voted(node1)']
679     : -1--------0-1------0-------------
679     : ['decided(value1)', 'vote(node3,value0)', '~vote(node2,value1)', '~voted(node1)']
680     : --1--------0-1-----0-------------
680     : ['decided(value2)', 'vote(node3,value1)', '~vote(node2,value2)', '~voted(node1)']
681     : 1--------0---1-----0-------------
681     : ['decided(value0)', 'vote(node3,value1)', '~vote(node2,value0)', '~voted(node1)']
682     : -1--------0---1----0-------------
682     : ['decided(value1)', 'vote(node3,value2)', '~vote(node2,value1)', '~voted(node1)']
683     : 1--------0----1----0-------------
683     : ['decided(value0)', 'vote(node3,value2)', '~vote(node2,value0)', '~voted(node1)']
684     : --1---------1----0-0-------------
684     : ['decided(value2)', 'vote(node3,value0)', '~vote(node4,value2)', '~voted(node1)']
685     : -1----------1---0--0-------------
685     : ['decided(value1)', 'vote(node3,value0)', '~vote(node4,value1)', '~voted(node1)']
686     : --1----------1---0-0-------------
686     : ['decided(value2)', 'vote(node3,value1)', '~vote(node4,value2)', '~voted(node1)']
687     : 1------------1-0---0-------------
687     : ['decided(value0)', 'vote(node3,value1)', '~vote(node4,value0)', '~voted(node1)']
688     : -1------------1-0--0-------------
688     : ['decided(value1)', 'vote(node3,value2)', '~vote(node4,value1)', '~voted(node1)']
689     : 1-------------10---0-------------
689     : ['decided(value0)', 'vote(node3,value2)', '~vote(node4,value0)', '~voted(node1)']
690     : --1--0------1-------0------------
690     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~voted(node2)']
691     : -1--0-------1-------0------------
691     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~voted(node2)']
692     : --1--0-------1------0------------
692     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~voted(node2)']
693     : 1--0---------1------0------------
693     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~voted(node2)']
694     : -1--0---------1-----0------------
694     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~voted(node2)']
695     : 1--0----------1-----0------------
695     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~voted(node2)']
696     : --1-----0---1-------0------------
696     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~voted(node2)']
697     : -1-----0----1-------0------------
697     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~voted(node2)']
698     : --1-----0----1------0------------
698     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~voted(node2)']
699     : 1-----0------1------0------------
699     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~voted(node2)']
700     : -1-----0------1-----0------------
700     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~voted(node2)']
701     : 1-----0-------1-----0------------
701     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~voted(node2)']
702     : --1---------1----0--0------------
702     : ['decided(value2)', 'vote(node3,value0)', '~vote(node4,value2)', '~voted(node2)']
703     : -1----------1---0---0------------
703     : ['decided(value1)', 'vote(node3,value0)', '~vote(node4,value1)', '~voted(node2)']
704     : --1----------1---0--0------------
704     : ['decided(value2)', 'vote(node3,value1)', '~vote(node4,value2)', '~voted(node2)']
705     : 1------------1-0----0------------
705     : ['decided(value0)', 'vote(node3,value1)', '~vote(node4,value0)', '~voted(node2)']
706     : -1------------1-0---0------------
706     : ['decided(value1)', 'vote(node3,value2)', '~vote(node4,value1)', '~voted(node2)']
707     : 1-------------10----0------------
707     : ['decided(value0)', 'vote(node3,value2)', '~vote(node4,value0)', '~voted(node2)']
708     : --1--0------1---------0----------
708     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~voted(node4)']
709     : -1--0-------1---------0----------
709     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~voted(node4)']
710     : --1--0-------1--------0----------
710     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~voted(node4)']
711     : 1--0---------1--------0----------
711     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~voted(node4)']
712     : -1--0---------1-------0----------
712     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~voted(node4)']
713     : 1--0----------1-------0----------
713     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~voted(node4)']
714     : --1-----0---1---------0----------
714     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~voted(node4)']
715     : -1-----0----1---------0----------
715     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~voted(node4)']
716     : --1-----0----1--------0----------
716     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~voted(node4)']
717     : 1-----0------1--------0----------
717     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~voted(node4)']
718     : -1-----0------1-------0----------
718     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~voted(node4)']
719     : 1-----0-------1-------0----------
719     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~voted(node4)']
720     : --1--------01---------0----------
720     : ['decided(value2)', 'vote(node3,value0)', '~vote(node2,value2)', '~voted(node4)']
721     : -1--------0-1---------0----------
721     : ['decided(value1)', 'vote(node3,value0)', '~vote(node2,value1)', '~voted(node4)']
722     : --1--------0-1--------0----------
722     : ['decided(value2)', 'vote(node3,value1)', '~vote(node2,value2)', '~voted(node4)']
723     : 1--------0---1--------0----------
723     : ['decided(value0)', 'vote(node3,value1)', '~vote(node2,value0)', '~voted(node4)']
724     : -1--------0---1-------0----------
724     : ['decided(value1)', 'vote(node3,value2)', '~vote(node2,value1)', '~voted(node4)']
725     : 1--------0----1-------0----------
725     : ['decided(value0)', 'vote(node3,value2)', '~vote(node2,value0)', '~voted(node4)']
726     : --1-----0------1--0--------------
726     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~voted(node0)']
727     : -1-----0-------1--0--------------
727     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~voted(node0)']
728     : --1-----0-------1-0--------------
728     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~voted(node0)']
729     : 1-----0---------1-0--------------
729     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~voted(node0)']
730     : -1-----0---------10--------------
730     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~voted(node0)']
731     : 1-----0----------10--------------
731     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~voted(node0)']
732     : --1--------0---1--0--------------
732     : ['decided(value2)', 'vote(node4,value0)', '~vote(node2,value2)', '~voted(node0)']
733     : -1--------0----1--0--------------
733     : ['decided(value1)', 'vote(node4,value0)', '~vote(node2,value1)', '~voted(node0)']
734     : --1--------0----1-0--------------
734     : ['decided(value2)', 'vote(node4,value1)', '~vote(node2,value2)', '~voted(node0)']
735     : 1--------0------1-0--------------
735     : ['decided(value0)', 'vote(node4,value1)', '~vote(node2,value0)', '~voted(node0)']
736     : -1--------0------10--------------
736     : ['decided(value1)', 'vote(node4,value2)', '~vote(node2,value1)', '~voted(node0)']
737     : 1--------0-------10--------------
737     : ['decided(value0)', 'vote(node4,value2)', '~vote(node2,value0)', '~voted(node0)']
738     : --1-----------01--0--------------
738     : ['decided(value2)', 'vote(node4,value0)', '~vote(node3,value2)', '~voted(node0)']
739     : -1-----------0-1--0--------------
739     : ['decided(value1)', 'vote(node4,value0)', '~vote(node3,value1)', '~voted(node0)']
740     : --1-----------0-1-0--------------
740     : ['decided(value2)', 'vote(node4,value1)', '~vote(node3,value2)', '~voted(node0)']
741     : 1-----------0---1-0--------------
741     : ['decided(value0)', 'vote(node4,value1)', '~vote(node3,value0)', '~voted(node0)']
742     : -1-----------0---10--------------
742     : ['decided(value1)', 'vote(node4,value2)', '~vote(node3,value1)', '~voted(node0)']
743     : 1-----------0----10--------------
743     : ['decided(value0)', 'vote(node4,value2)', '~vote(node3,value0)', '~voted(node0)']
744     : --1--0---------1---0-------------
744     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~voted(node1)']
745     : -1--0----------1---0-------------
745     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~voted(node1)']
746     : --1--0----------1--0-------------
746     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~voted(node1)']
747     : 1--0------------1--0-------------
747     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~voted(node1)']
748     : -1--0------------1-0-------------
748     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~voted(node1)']
749     : 1--0-------------1-0-------------
749     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~voted(node1)']
750     : --1--------0---1---0-------------
750     : ['decided(value2)', 'vote(node4,value0)', '~vote(node2,value2)', '~voted(node1)']
751     : -1--------0----1---0-------------
751     : ['decided(value1)', 'vote(node4,value0)', '~vote(node2,value1)', '~voted(node1)']
752     : --1--------0----1--0-------------
752     : ['decided(value2)', 'vote(node4,value1)', '~vote(node2,value2)', '~voted(node1)']
753     : 1--------0------1--0-------------
753     : ['decided(value0)', 'vote(node4,value1)', '~vote(node2,value0)', '~voted(node1)']
754     : -1--------0------1-0-------------
754     : ['decided(value1)', 'vote(node4,value2)', '~vote(node2,value1)', '~voted(node1)']
755     : 1--------0-------1-0-------------
755     : ['decided(value0)', 'vote(node4,value2)', '~vote(node2,value0)', '~voted(node1)']
756     : --1-----------01---0-------------
756     : ['decided(value2)', 'vote(node4,value0)', '~vote(node3,value2)', '~voted(node1)']
757     : -1-----------0-1---0-------------
757     : ['decided(value1)', 'vote(node4,value0)', '~vote(node3,value1)', '~voted(node1)']
758     : --1-----------0-1--0-------------
758     : ['decided(value2)', 'vote(node4,value1)', '~vote(node3,value2)', '~voted(node1)']
759     : 1-----------0---1--0-------------
759     : ['decided(value0)', 'vote(node4,value1)', '~vote(node3,value0)', '~voted(node1)']
760     : -1-----------0---1-0-------------
760     : ['decided(value1)', 'vote(node4,value2)', '~vote(node3,value1)', '~voted(node1)']
761     : 1-----------0----1-0-------------
761     : ['decided(value0)', 'vote(node4,value2)', '~vote(node3,value0)', '~voted(node1)']
762     : --1--0---------1----0------------
762     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~voted(node2)']
763     : -1--0----------1----0------------
763     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~voted(node2)']
764     : --1--0----------1---0------------
764     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~voted(node2)']
765     : 1--0------------1---0------------
765     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~voted(node2)']
766     : -1--0------------1--0------------
766     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~voted(node2)']
767     : 1--0-------------1--0------------
767     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~voted(node2)']
768     : --1-----0------1----0------------
768     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~voted(node2)']
769     : -1-----0-------1----0------------
769     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~voted(node2)']
770     : --1-----0-------1---0------------
770     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~voted(node2)']
771     : 1-----0---------1---0------------
771     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~voted(node2)']
772     : -1-----0---------1--0------------
772     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~voted(node2)']
773     : 1-----0----------1--0------------
773     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~voted(node2)']
774     : --1-----------01----0------------
774     : ['decided(value2)', 'vote(node4,value0)', '~vote(node3,value2)', '~voted(node2)']
775     : -1-----------0-1----0------------
775     : ['decided(value1)', 'vote(node4,value0)', '~vote(node3,value1)', '~voted(node2)']
776     : --1-----------0-1---0------------
776     : ['decided(value2)', 'vote(node4,value1)', '~vote(node3,value2)', '~voted(node2)']
777     : 1-----------0---1---0------------
777     : ['decided(value0)', 'vote(node4,value1)', '~vote(node3,value0)', '~voted(node2)']
778     : -1-----------0---1--0------------
778     : ['decided(value1)', 'vote(node4,value2)', '~vote(node3,value1)', '~voted(node2)']
779     : 1-----------0----1--0------------
779     : ['decided(value0)', 'vote(node4,value2)', '~vote(node3,value0)', '~voted(node2)']
780     : --1--0---------1-----0-----------
780     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~voted(node3)']
781     : -1--0----------1-----0-----------
781     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~voted(node3)']
782     : --1--0----------1----0-----------
782     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~voted(node3)']
783     : 1--0------------1----0-----------
783     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~voted(node3)']
784     : -1--0------------1---0-----------
784     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~voted(node3)']
785     : 1--0-------------1---0-----------
785     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~voted(node3)']
786     : --1-----0------1-----0-----------
786     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~voted(node3)']
787     : -1-----0-------1-----0-----------
787     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~voted(node3)']
788     : --1-----0-------1----0-----------
788     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~voted(node3)']
789     : 1-----0---------1----0-----------
789     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~voted(node3)']
790     : -1-----0---------1---0-----------
790     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~voted(node3)']
791     : 1-----0----------1---0-----------
791     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~voted(node3)']
792     : --1--------0---1-----0-----------
792     : ['decided(value2)', 'vote(node4,value0)', '~vote(node2,value2)', '~voted(node3)']
793     : -1--------0----1-----0-----------
793     : ['decided(value1)', 'vote(node4,value0)', '~vote(node2,value1)', '~voted(node3)']
794     : --1--------0----1----0-----------
794     : ['decided(value2)', 'vote(node4,value1)', '~vote(node2,value2)', '~voted(node3)']
795     : 1--------0------1----0-----------
795     : ['decided(value0)', 'vote(node4,value1)', '~vote(node2,value0)', '~voted(node3)']
796     : -1--------0------1---0-----------
796     : ['decided(value1)', 'vote(node4,value2)', '~vote(node2,value1)', '~voted(node3)']
797     : 1--------0-------1---0-----------
797     : ['decided(value0)', 'vote(node4,value2)', '~vote(node2,value0)', '~voted(node3)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 360
num_suborbits: 2
798 (*) : --11------1--------0-------------
798     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~voted(node1)']
799     : -1-1-------1-------0-------------
799     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~voted(node1)']
800     : --1-1----1---------0-------------
800     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~voted(node1)']
801     : 1---1------1-------0-------------
801     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~voted(node1)']
802     : -1---1---1---------0-------------
802     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~voted(node1)']
803     : 1----1----1--------0-------------
803     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~voted(node1)']
804     : --11---------1-----0-------------
804     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~voted(node1)']
805     : -1-1----------1----0-------------
805     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~voted(node1)']
806     : --1-1-------1------0-------------
806     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~voted(node1)']
807     : 1---1---------1----0-------------
807     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~voted(node1)']
808     : -1---1------1------0-------------
808     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~voted(node1)']
809     : 1----1-------1-----0-------------
809     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~voted(node1)']
810     : --11------------1--0-------------
810     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~voted(node1)']
811     : -1-1-------------1-0-------------
811     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~voted(node1)']
812     : --1-1----------1---0-------------
812     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~voted(node1)']
813     : 1---1------------1-0-------------
813     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~voted(node1)']
814     : -1---1---------1---0-------------
814     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~voted(node1)']
815     : 1----1----------1--0-------------
815     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~voted(node1)']
816     : --11---1------------0------------
816     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~voted(node2)']
817     : -1-1----1-----------0------------
817     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~voted(node2)']
818     : --1-1-1-------------0------------
818     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~voted(node2)']
819     : 1---1---1-----------0------------
819     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~voted(node2)']
820     : -1---11-------------0------------
820     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~voted(node2)']
821     : 1----1-1------------0------------
821     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~voted(node2)']
822     : --11---------1------0------------
822     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~voted(node2)']
823     : -1-1----------1-----0------------
823     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~voted(node2)']
824     : --1-1-------1-------0------------
824     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~voted(node2)']
825     : 1---1---------1-----0------------
825     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~voted(node2)']
826     : -1---1------1-------0------------
826     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~voted(node2)']
827     : 1----1-------1------0------------
827     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~voted(node2)']
828     : --11------------1---0------------
828     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~voted(node2)']
829     : -1-1-------------1--0------------
829     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~voted(node2)']
830     : --1-1----------1----0------------
830     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~voted(node2)']
831     : 1---1------------1--0------------
831     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~voted(node2)']
832     : -1---1---------1----0------------
832     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~voted(node2)']
833     : 1----1----------1---0------------
833     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~voted(node2)']
834     : --11---1-------------0-----------
834     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~voted(node3)']
835     : -1-1----1------------0-----------
835     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~voted(node3)']
836     : --1-1-1--------------0-----------
836     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~voted(node3)']
837     : 1---1---1------------0-----------
837     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~voted(node3)']
838     : -1---11--------------0-----------
838     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~voted(node3)']
839     : 1----1-1-------------0-----------
839     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~voted(node3)']
840     : --11------1----------0-----------
840     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~voted(node3)']
841     : -1-1-------1---------0-----------
841     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~voted(node3)']
842     : --1-1----1-----------0-----------
842     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~voted(node3)']
843     : 1---1------1---------0-----------
843     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~voted(node3)']
844     : -1---1---1-----------0-----------
844     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~voted(node3)']
845     : 1----1----1----------0-----------
845     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~voted(node3)']
846     : --11------------1----0-----------
846     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~voted(node3)']
847     : -1-1-------------1---0-----------
847     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~voted(node3)']
848     : --1-1----------1-----0-----------
848     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~voted(node3)']
849     : 1---1------------1---0-----------
849     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~voted(node3)']
850     : -1---1---------1-----0-----------
850     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~voted(node3)']
851     : 1----1----------1----0-----------
851     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~voted(node3)']
852     : --11---1--------------0----------
852     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~voted(node4)']
853     : -1-1----1-------------0----------
853     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~voted(node4)']
854     : --1-1-1---------------0----------
854     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~voted(node4)']
855     : 1---1---1-------------0----------
855     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~voted(node4)']
856     : -1---11---------------0----------
856     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~voted(node4)']
857     : 1----1-1--------------0----------
857     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~voted(node4)']
858     : --11------1-----------0----------
858     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~voted(node4)']
859     : -1-1-------1----------0----------
859     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~voted(node4)']
860     : --1-1----1------------0----------
860     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~voted(node4)']
861     : 1---1------1----------0----------
861     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~voted(node4)']
862     : -1---1---1------------0----------
862     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~voted(node4)']
863     : 1----1----1-----------0----------
863     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~voted(node4)']
864     : --11---------1--------0----------
864     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~voted(node4)']
865     : -1-1----------1-------0----------
865     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~voted(node4)']
866     : --1-1-------1---------0----------
866     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~voted(node4)']
867     : 1---1---------1-------0----------
867     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~voted(node4)']
868     : -1---1------1---------0----------
868     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~voted(node4)']
869     : 1----1-------1--------0----------
869     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~voted(node4)']
870     : --1---1---1-------0--------------
870     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~voted(node0)']
871     : -1----1----1------0--------------
871     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~voted(node0)']
872     : --1----1-1--------0--------------
872     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~voted(node0)']
873     : 1------1---1------0--------------
873     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~voted(node0)']
874     : -1------11--------0--------------
874     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~voted(node0)']
875     : 1-------1-1-------0--------------
875     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~voted(node0)']
876     : --1---1------1----0--------------
876     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~voted(node0)']
877     : -1----1-------1---0--------------
877     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~voted(node0)']
878     : --1----1----1-----0--------------
878     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~voted(node0)']
879     : 1------1------1---0--------------
879     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~voted(node0)']
880     : -1------1---1-----0--------------
880     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~voted(node0)']
881     : 1-------1----1----0--------------
881     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~voted(node0)']
882     : --1---1---------1-0--------------
882     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~voted(node0)']
883     : -1----1----------10--------------
883     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~voted(node0)']
884     : --1----1-------1--0--------------
884     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~voted(node0)']
885     : 1------1---------10--------------
885     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~voted(node0)']
886     : -1------1------1--0--------------
886     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~voted(node0)']
887     : 1-------1-------1-0--------------
887     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~voted(node0)']
888     : --1---1------1------0------------
888     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~voted(node2)']
889     : -1----1-------1-----0------------
889     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~voted(node2)']
890     : --1----1----1-------0------------
890     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~voted(node2)']
891     : 1------1------1-----0------------
891     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~voted(node2)']
892     : -1------1---1-------0------------
892     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~voted(node2)']
893     : 1-------1----1------0------------
893     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~voted(node2)']
894     : --1---1---------1---0------------
894     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~voted(node2)']
895     : -1----1----------1--0------------
895     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~voted(node2)']
896     : --1----1-------1----0------------
896     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~voted(node2)']
897     : 1------1---------1--0------------
897     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~voted(node2)']
898     : -1------1------1----0------------
898     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~voted(node2)']
899     : 1-------1-------1---0------------
899     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~voted(node2)']
900     : --1---1---1----------0-----------
900     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~voted(node3)']
901     : -1----1----1---------0-----------
901     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~voted(node3)']
902     : --1----1-1-----------0-----------
902     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~voted(node3)']
903     : 1------1---1---------0-----------
903     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~voted(node3)']
904     : -1------11-----------0-----------
904     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~voted(node3)']
905     : 1-------1-1----------0-----------
905     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~voted(node3)']
906     : --1---1---------1----0-----------
906     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~voted(node3)']
907     : -1----1----------1---0-----------
907     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~voted(node3)']
908     : --1----1-------1-----0-----------
908     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~voted(node3)']
909     : 1------1---------1---0-----------
909     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~voted(node3)']
910     : -1------1------1-----0-----------
910     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~voted(node3)']
911     : 1-------1-------1----0-----------
911     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~voted(node3)']
912     : --1---1---1-----------0----------
912     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~voted(node4)']
913     : -1----1----1----------0----------
913     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~voted(node4)']
914     : --1----1-1------------0----------
914     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~voted(node4)']
915     : 1------1---1----------0----------
915     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~voted(node4)']
916     : -1------11------------0----------
916     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~voted(node4)']
917     : 1-------1-1-----------0----------
917     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~voted(node4)']
918     : --1---1------1--------0----------
918     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~voted(node4)']
919     : -1----1-------1-------0----------
919     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~voted(node4)']
920     : --1----1----1---------0----------
920     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~voted(node4)']
921     : 1------1------1-------0----------
921     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~voted(node4)']
922     : -1------1---1---------0----------
922     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~voted(node4)']
923     : 1-------1----1--------0----------
923     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~voted(node4)']
924     : --1------1---1----0--------------
924     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~voted(node0)']
925     : -1-------1----1---0--------------
925     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~voted(node0)']
926     : --1-------1-1-----0--------------
926     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~voted(node0)']
927     : 1---------1---1---0--------------
927     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~voted(node0)']
928     : -1---------11-----0--------------
928     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~voted(node0)']
929     : 1----------1-1----0--------------
929     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~voted(node0)']
930     : --1------1------1-0--------------
930     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~voted(node0)']
931     : -1-------1-------10--------------
931     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~voted(node0)']
932     : --1-------1----1--0--------------
932     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~voted(node0)']
933     : 1---------1------10--------------
933     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~voted(node0)']
934     : -1---------1---1--0--------------
934     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~voted(node0)']
935     : 1----------1----1-0--------------
935     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~voted(node0)']
936     : --1------1---1-----0-------------
936     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~voted(node1)']
937     : -1-------1----1----0-------------
937     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~voted(node1)']
938     : --1-------1-1------0-------------
938     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~voted(node1)']
939     : 1---------1---1----0-------------
939     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~voted(node1)']
940     : -1---------11------0-------------
940     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~voted(node1)']
941     : 1----------1-1-----0-------------
941     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~voted(node1)']
942     : --1------1------1--0-------------
942     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~voted(node1)']
943     : -1-------1-------1-0-------------
943     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~voted(node1)']
944     : --1-------1----1---0-------------
944     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~voted(node1)']
945     : 1---------1------1-0-------------
945     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~voted(node1)']
946     : -1---------1---1---0-------------
946     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~voted(node1)']
947     : 1----------1----1--0-------------
947     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~voted(node1)']
948     : --1------1------1----0-----------
948     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~voted(node3)']
949     : -1-------1-------1---0-----------
949     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~voted(node3)']
950     : --1-------1----1-----0-----------
950     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~voted(node3)']
951     : 1---------1------1---0-----------
951     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~voted(node3)']
952     : -1---------1---1-----0-----------
952     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~voted(node3)']
953     : 1----------1----1----0-----------
953     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~voted(node3)']
954     : --1------1---1--------0----------
954     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~voted(node4)']
955     : -1-------1----1-------0----------
955     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~voted(node4)']
956     : --1-------1-1---------0----------
956     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~voted(node4)']
957     : 1---------1---1-------0----------
957     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~voted(node4)']
958     : -1---------11---------0----------
958     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~voted(node4)']
959     : 1----------1-1--------0----------
959     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~voted(node4)']
960     : --1---------1---1-0--------------
960     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~voted(node0)']
961     : -1----------1----10--------------
961     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~voted(node0)']
962     : --1----------1-1--0--------------
962     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~voted(node0)']
963     : 1------------1---10--------------
963     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~voted(node0)']
964     : -1------------11--0--------------
964     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~voted(node0)']
965     : 1-------------1-1-0--------------
965     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~voted(node0)']
966     : --1---------1---1--0-------------
966     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~voted(node1)']
967     : -1----------1----1-0-------------
967     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~voted(node1)']
968     : --1----------1-1---0-------------
968     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~voted(node1)']
969     : 1------------1---1-0-------------
969     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~voted(node1)']
970     : -1------------11---0-------------
970     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~voted(node1)']
971     : 1-------------1-1--0-------------
971     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~voted(node1)']
972     : --1---------1---1---0------------
972     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~voted(node2)']
973     : -1----------1----1--0------------
973     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~voted(node2)']
974     : --1----------1-1----0------------
974     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~voted(node2)']
975     : 1------------1---1--0------------
975     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~voted(node2)']
976     : -1------------11----0------------
976     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~voted(node2)']
977     : 1-------------1-1---0------------
977     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~voted(node2)']
1758 (*) : --11--------1------0-------------
1758     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node1)']
1759     : -1-1--------1------0-------------
1759     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node1)']
1760     : --1-1--------1-----0-------------
1760     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node1)']
1761     : 1---1--------1-----0-------------
1761     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node1)']
1762     : -1---1--------1----0-------------
1762     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node1)']
1763     : 1----1--------1----0-------------
1763     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node1)']
1764     : --11-----------1---0-------------
1764     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node1)']
1765     : -1-1-----------1---0-------------
1765     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node1)']
1766     : --1-1-----------1--0-------------
1766     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node1)']
1767     : 1---1-----------1--0-------------
1767     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node1)']
1768     : -1---1-----------1-0-------------
1768     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node1)']
1769     : 1----1-----------1-0-------------
1769     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node1)']
1770     : --11-----1---------0-------------
1770     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node1)']
1771     : -1-1-----1---------0-------------
1771     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node1)']
1772     : --1-1-----1--------0-------------
1772     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node1)']
1773     : 1---1-----1--------0-------------
1773     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node1)']
1774     : -1---1-----1-------0-------------
1774     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node1)']
1775     : 1----1-----1-------0-------------
1775     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node1)']
1776     : --11--------1-------0------------
1776     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node2)']
1777     : -1-1--------1-------0------------
1777     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node2)']
1778     : --1-1--------1------0------------
1778     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node2)']
1779     : 1---1--------1------0------------
1779     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node2)']
1780     : -1---1--------1-----0------------
1780     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node2)']
1781     : 1----1--------1-----0------------
1781     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node2)']
1782     : --11-----------1----0------------
1782     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node2)']
1783     : -1-1-----------1----0------------
1783     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node2)']
1784     : --1-1-----------1---0------------
1784     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node2)']
1785     : 1---1-----------1---0------------
1785     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node2)']
1786     : -1---1-----------1--0------------
1786     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node2)']
1787     : 1----1-----------1--0------------
1787     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node2)']
1788     : --11--1-------------0------------
1788     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node2)']
1789     : -1-1--1-------------0------------
1789     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node2)']
1790     : --1-1--1------------0------------
1790     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node2)']
1791     : 1---1--1------------0------------
1791     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node2)']
1792     : -1---1--1-----------0------------
1792     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node2)']
1793     : 1----1--1-----------0------------
1793     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node2)']
1794     : --11-----1-----------0-----------
1794     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node3)']
1795     : -1-1-----1-----------0-----------
1795     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node3)']
1796     : --1-1-----1----------0-----------
1796     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node3)']
1797     : 1---1-----1----------0-----------
1797     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node3)']
1798     : -1---1-----1---------0-----------
1798     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node3)']
1799     : 1----1-----1---------0-----------
1799     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node3)']
1800     : --11-----------1-----0-----------
1800     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node3)']
1801     : -1-1-----------1-----0-----------
1801     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node3)']
1802     : --1-1-----------1----0-----------
1802     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node3)']
1803     : 1---1-----------1----0-----------
1803     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node3)']
1804     : -1---1-----------1---0-----------
1804     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node3)']
1805     : 1----1-----------1---0-----------
1805     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node3)']
1806     : --11--1--------------0-----------
1806     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node3)']
1807     : -1-1--1--------------0-----------
1807     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node3)']
1808     : --1-1--1-------------0-----------
1808     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node3)']
1809     : 1---1--1-------------0-----------
1809     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node3)']
1810     : -1---1--1------------0-----------
1810     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node3)']
1811     : 1----1--1------------0-----------
1811     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node3)']
1812     : --11-----1------------0----------
1812     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node4)']
1813     : -1-1-----1------------0----------
1813     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node4)']
1814     : --1-1-----1-----------0----------
1814     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node4)']
1815     : 1---1-----1-----------0----------
1815     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node4)']
1816     : -1---1-----1----------0----------
1816     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node4)']
1817     : 1----1-----1----------0----------
1817     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node4)']
1818     : --11--------1---------0----------
1818     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node4)']
1819     : -1-1--------1---------0----------
1819     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node4)']
1820     : --1-1--------1--------0----------
1820     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node4)']
1821     : 1---1--------1--------0----------
1821     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node4)']
1822     : -1---1--------1-------0----------
1822     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node4)']
1823     : 1----1--------1-------0----------
1823     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node4)']
1824     : --11--1---------------0----------
1824     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node4)']
1825     : -1-1--1---------------0----------
1825     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node4)']
1826     : --1-1--1--------------0----------
1826     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node4)']
1827     : 1---1--1--------------0----------
1827     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node4)']
1828     : -1---1--1-------------0----------
1828     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node4)']
1829     : 1----1--1-------------0----------
1829     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node4)']
1830     : --1---1-----1-----0--------------
1830     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node0)']
1831     : -1----1-----1-----0--------------
1831     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node0)']
1832     : --1----1-----1----0--------------
1832     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node0)']
1833     : 1------1-----1----0--------------
1833     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node0)']
1834     : -1------1-----1---0--------------
1834     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node0)']
1835     : 1-------1-----1---0--------------
1835     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node0)']
1836     : --1---1--------1--0--------------
1836     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node0)']
1837     : -1----1--------1--0--------------
1837     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node0)']
1838     : --1----1--------1-0--------------
1838     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node0)']
1839     : 1------1--------1-0--------------
1839     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node0)']
1840     : -1------1--------10--------------
1840     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node0)']
1841     : 1-------1--------10--------------
1841     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node0)']
1842     : --1---1--1--------0--------------
1842     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node0)']
1843     : -1----1--1--------0--------------
1843     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node0)']
1844     : --1----1--1-------0--------------
1844     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node0)']
1845     : 1------1--1-------0--------------
1845     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node0)']
1846     : -1------1--1------0--------------
1846     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node0)']
1847     : 1-------1--1------0--------------
1847     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node0)']
1848     : --1---1-----1-------0------------
1848     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node2)']
1849     : -1----1-----1-------0------------
1849     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node2)']
1850     : --1----1-----1------0------------
1850     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node2)']
1851     : 1------1-----1------0------------
1851     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node2)']
1852     : -1------1-----1-----0------------
1852     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node2)']
1853     : 1-------1-----1-----0------------
1853     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node2)']
1854     : --1---1--------1----0------------
1854     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node2)']
1855     : -1----1--------1----0------------
1855     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node2)']
1856     : --1----1--------1---0------------
1856     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node2)']
1857     : 1------1--------1---0------------
1857     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node2)']
1858     : -1------1--------1--0------------
1858     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node2)']
1859     : 1-------1--------1--0------------
1859     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node2)']
1860     : --1---1--1-----------0-----------
1860     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node3)']
1861     : -1----1--1-----------0-----------
1861     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node3)']
1862     : --1----1--1----------0-----------
1862     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node3)']
1863     : 1------1--1----------0-----------
1863     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node3)']
1864     : -1------1--1---------0-----------
1864     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node3)']
1865     : 1-------1--1---------0-----------
1865     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node3)']
1866     : --1---1--------1-----0-----------
1866     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node3)']
1867     : -1----1--------1-----0-----------
1867     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node3)']
1868     : --1----1--------1----0-----------
1868     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node3)']
1869     : 1------1--------1----0-----------
1869     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node3)']
1870     : -1------1--------1---0-----------
1870     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node3)']
1871     : 1-------1--------1---0-----------
1871     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node3)']
1872     : --1---1--1------------0----------
1872     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node4)']
1873     : -1----1--1------------0----------
1873     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node4)']
1874     : --1----1--1-----------0----------
1874     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node4)']
1875     : 1------1--1-----------0----------
1875     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node4)']
1876     : -1------1--1----------0----------
1876     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node4)']
1877     : 1-------1--1----------0----------
1877     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node4)']
1878     : --1---1-----1---------0----------
1878     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node4)']
1879     : -1----1-----1---------0----------
1879     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node4)']
1880     : --1----1-----1--------0----------
1880     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node4)']
1881     : 1------1-----1--------0----------
1881     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node4)']
1882     : -1------1-----1-------0----------
1882     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node4)']
1883     : 1-------1-----1-------0----------
1883     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node4)']
1884     : --1------1--1-----0--------------
1884     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node0)']
1885     : -1-------1--1-----0--------------
1885     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node0)']
1886     : --1-------1--1----0--------------
1886     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node0)']
1887     : 1---------1--1----0--------------
1887     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node0)']
1888     : -1---------1--1---0--------------
1888     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node0)']
1889     : 1----------1--1---0--------------
1889     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node0)']
1890     : --1------1-----1--0--------------
1890     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node0)']
1891     : -1-------1-----1--0--------------
1891     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node0)']
1892     : --1-------1-----1-0--------------
1892     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node0)']
1893     : 1---------1-----1-0--------------
1893     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node0)']
1894     : -1---------1-----10--------------
1894     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node0)']
1895     : 1----------1-----10--------------
1895     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node0)']
1896     : --1------1--1------0-------------
1896     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node1)']
1897     : -1-------1--1------0-------------
1897     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node1)']
1898     : --1-------1--1-----0-------------
1898     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node1)']
1899     : 1---------1--1-----0-------------
1899     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node1)']
1900     : -1---------1--1----0-------------
1900     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node1)']
1901     : 1----------1--1----0-------------
1901     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node1)']
1902     : --1------1-----1---0-------------
1902     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node1)']
1903     : -1-------1-----1---0-------------
1903     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node1)']
1904     : --1-------1-----1--0-------------
1904     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node1)']
1905     : 1---------1-----1--0-------------
1905     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node1)']
1906     : -1---------1-----1-0-------------
1906     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node1)']
1907     : 1----------1-----1-0-------------
1907     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node1)']
1908     : --1------1-----1-----0-----------
1908     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node3)']
1909     : -1-------1-----1-----0-----------
1909     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node3)']
1910     : --1-------1-----1----0-----------
1910     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node3)']
1911     : 1---------1-----1----0-----------
1911     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node3)']
1912     : -1---------1-----1---0-----------
1912     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node3)']
1913     : 1----------1-----1---0-----------
1913     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node3)']
1914     : --1------1--1---------0----------
1914     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node4)']
1915     : -1-------1--1---------0----------
1915     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node4)']
1916     : --1-------1--1--------0----------
1916     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node4)']
1917     : 1---------1--1--------0----------
1917     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node4)']
1918     : -1---------1--1-------0----------
1918     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node4)']
1919     : 1----------1--1-------0----------
1919     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node4)']
1920     : --1---------1--1--0--------------
1920     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node0)']
1921     : -1----------1--1--0--------------
1921     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node0)']
1922     : --1----------1--1-0--------------
1922     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node0)']
1923     : 1------------1--1-0--------------
1923     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node0)']
1924     : -1------------1--10--------------
1924     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node0)']
1925     : 1-------------1--10--------------
1925     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node0)']
1926     : --1---------1--1---0-------------
1926     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node1)']
1927     : -1----------1--1---0-------------
1927     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node1)']
1928     : --1----------1--1--0-------------
1928     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node1)']
1929     : 1------------1--1--0-------------
1929     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node1)']
1930     : -1------------1--1-0-------------
1930     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node1)']
1931     : 1-------------1--1-0-------------
1931     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node1)']
1932     : --1---------1--1----0------------
1932     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node2)']
1933     : -1----------1--1----0------------
1933     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node2)']
1934     : --1----------1--1---0------------
1934     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node2)']
1935     : 1------------1--1---0------------
1935     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node2)']
1936     : -1------------1--1--0------------
1936     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node2)']
1937     : 1-------------1--1--0------------
1937     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 120
num_suborbits: 2
978 (*) : --11------1--------------------0-
978     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)']
979     : -1-1-------1-------------------0-
979     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)']
980     : --1-1----1---------------------0-
980     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)']
981     : 1---1------1-------------------0-
981     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)']
982     : -1---1---1---------------------0-
982     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)']
983     : 1----1----1--------------------0-
983     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)']
984     : --11---------1----------------0--
984     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)']
985     : -1-1----------1---------------0--
985     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)']
986     : --1-1-------1-----------------0--
986     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)']
987     : 1---1---------1---------------0--
987     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)']
988     : -1---1------1-----------------0--
988     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)']
989     : 1----1-------1----------------0--
989     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)']
990     : --11------------1------------0---
990     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)']
991     : -1-1-------------1-----------0---
991     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)']
992     : --1-1----------1-------------0---
992     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)']
993     : 1---1------------1-----------0---
993     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)']
994     : -1---1---------1-------------0---
994     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)']
995     : 1----1----------1------------0---
995     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)']
996     : --11---1------------------------0
996     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)']
997     : -1-1----1-----------------------0
997     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)']
998     : --1-1-1-------------------------0
998     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)']
999     : 1---1---1-----------------------0
999     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)']
1000     : -1---11-------------------------0
1000     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)']
1001     : 1----1-1------------------------0
1001     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)']
1002     : --1---1---1-----------------0----
1002     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)']
1003     : -1----1----1----------------0----
1003     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)']
1004     : --1----1-1------------------0----
1004     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)']
1005     : 1------1---1----------------0----
1005     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)']
1006     : -1------11------------------0----
1006     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)']
1007     : 1-------1-1-----------------0----
1007     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)']
1008     : --1---1------1-------------0-----
1008     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)']
1009     : -1----1-------1------------0-----
1009     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)']
1010     : --1----1----1--------------0-----
1010     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)']
1011     : 1------1------1------------0-----
1011     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)']
1012     : -1------1---1--------------0-----
1012     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)']
1013     : 1-------1----1-------------0-----
1013     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)']
1014     : --1---1---------1---------0------
1014     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)']
1015     : -1----1----------1--------0------
1015     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)']
1016     : --1----1-------1----------0------
1016     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)']
1017     : 1------1---------1--------0------
1017     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)']
1018     : -1------1------1----------0------
1018     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)']
1019     : 1-------1-------1---------0------
1019     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)']
1020     : --1------1---1-----------0-------
1020     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)']
1021     : -1-------1----1----------0-------
1021     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)']
1022     : --1-------1-1------------0-------
1022     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)']
1023     : 1---------1---1----------0-------
1023     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)']
1024     : -1---------11------------0-------
1024     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)']
1025     : 1----------1-1-----------0-------
1025     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)']
1026     : --1------1------1-------0--------
1026     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)']
1027     : -1-------1-------1------0--------
1027     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)']
1028     : --1-------1----1--------0--------
1028     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)']
1029     : 1---------1------1------0--------
1029     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)']
1030     : -1---------1---1--------0--------
1030     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)']
1031     : 1----------1----1-------0--------
1031     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)']
1032     : --1---------1---1------0---------
1032     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)']
1033     : -1----------1----1-----0---------
1033     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)']
1034     : --1----------1-1-------0---------
1034     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)']
1035     : 1------------1---1-----0---------
1035     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)']
1036     : -1------------11-------0---------
1036     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)']
1037     : 1-------------1-1------0---------
1037     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)']
1518 (*) : --11--------1-----------------0--
1518     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)']
1519     : -1-1--------1-----------------0--
1519     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)']
1520     : --1-1--------1----------------0--
1520     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)']
1521     : 1---1--------1----------------0--
1521     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)']
1522     : -1---1--------1---------------0--
1522     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)']
1523     : 1----1--------1---------------0--
1523     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)']
1524     : --11-----------1-------------0---
1524     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)']
1525     : -1-1-----------1-------------0---
1525     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)']
1526     : --1-1-----------1------------0---
1526     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)']
1527     : 1---1-----------1------------0---
1527     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)']
1528     : -1---1-----------1-----------0---
1528     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)']
1529     : 1----1-----------1-----------0---
1529     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)']
1530     : --11-----1---------------------0-
1530     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)']
1531     : -1-1-----1---------------------0-
1531     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)']
1532     : --1-1-----1--------------------0-
1532     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)']
1533     : 1---1-----1--------------------0-
1533     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)']
1534     : -1---1-----1-------------------0-
1534     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)']
1535     : 1----1-----1-------------------0-
1535     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)']
1536     : --11--1-------------------------0
1536     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)']
1537     : -1-1--1-------------------------0
1537     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)']
1538     : --1-1--1------------------------0
1538     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)']
1539     : 1---1--1------------------------0
1539     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)']
1540     : -1---1--1-----------------------0
1540     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)']
1541     : 1----1--1-----------------------0
1541     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)']
1542     : --1---1-----1--------------0-----
1542     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)']
1543     : -1----1-----1--------------0-----
1543     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)']
1544     : --1----1-----1-------------0-----
1544     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)']
1545     : 1------1-----1-------------0-----
1545     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)']
1546     : -1------1-----1------------0-----
1546     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)']
1547     : 1-------1-----1------------0-----
1547     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)']
1548     : --1---1--------1----------0------
1548     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)']
1549     : -1----1--------1----------0------
1549     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)']
1550     : --1----1--------1---------0------
1550     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)']
1551     : 1------1--------1---------0------
1551     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)']
1552     : -1------1--------1--------0------
1552     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)']
1553     : 1-------1--------1--------0------
1553     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)']
1554     : --1---1--1------------------0----
1554     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)']
1555     : -1----1--1------------------0----
1555     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)']
1556     : --1----1--1-----------------0----
1556     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)']
1557     : 1------1--1-----------------0----
1557     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)']
1558     : -1------1--1----------------0----
1558     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)']
1559     : 1-------1--1----------------0----
1559     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)']
1560     : --1------1--1------------0-------
1560     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)']
1561     : -1-------1--1------------0-------
1561     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)']
1562     : --1-------1--1-----------0-------
1562     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)']
1563     : 1---------1--1-----------0-------
1563     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)']
1564     : -1---------1--1----------0-------
1564     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)']
1565     : 1----------1--1----------0-------
1565     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)']
1566     : --1------1-----1--------0--------
1566     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)']
1567     : -1-------1-----1--------0--------
1567     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)']
1568     : --1-------1-----1-------0--------
1568     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)']
1569     : 1---------1-----1-------0--------
1569     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)']
1570     : -1---------1-----1------0--------
1570     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)']
1571     : 1----------1-----1------0--------
1571     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)']
1572     : --1---------1--1-------0---------
1572     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)']
1573     : -1----------1--1-------0---------
1573     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)']
1574     : --1----------1--1------0---------
1574     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)']
1575     : 1------------1--1------0---------
1575     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)']
1576     : -1------------1--1-----0---------
1576     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)']
1577     : 1-------------1--1-----0---------
1577     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 120
num_suborbits: 1
1038 (*) : --11-------0-------------------0-
1038     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value2)']
1039     : -1-1------0--------------------0-
1039     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value1)']
1040     : --1-1------0-------------------0-
1040     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value2)']
1041     : 1---1----0---------------------0-
1041     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value0)']
1042     : -1---1----0--------------------0-
1042     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value1)']
1043     : 1----1---0---------------------0-
1043     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value0)']
1044     : --11----------0---------------0--
1044     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value2)']
1045     : -1-1---------0----------------0--
1045     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value1)']
1046     : --1-1---------0---------------0--
1046     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value2)']
1047     : 1---1-------0-----------------0--
1047     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value0)']
1048     : -1---1-------0----------------0--
1048     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value1)']
1049     : 1----1------0-----------------0--
1049     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value0)']
1050     : --11-------------0-----------0---
1050     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value2)']
1051     : -1-1------------0------------0---
1051     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value1)']
1052     : --1-1------------0-----------0---
1052     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value2)']
1053     : 1---1----------0-------------0---
1053     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value0)']
1054     : -1---1----------0------------0---
1054     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value1)']
1055     : 1----1---------0-------------0---
1055     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value0)']
1056     : --11----0-----------------------0
1056     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value2)']
1057     : -1-1---0------------------------0
1057     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value1)']
1058     : --1-1---0-----------------------0
1058     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value2)']
1059     : 1---1-0-------------------------0
1059     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value0)']
1060     : -1---1-0------------------------0
1060     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value1)']
1061     : 1----10-------------------------0
1061     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value0)']
1062     : --1---1----0----------------0----
1062     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value2)']
1063     : -1----1---0-----------------0----
1063     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value1)']
1064     : --1----1---0----------------0----
1064     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value2)']
1065     : 1------1-0------------------0----
1065     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value0)']
1066     : -1------1-0-----------------0----
1066     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value1)']
1067     : 1-------10------------------0----
1067     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value0)']
1068     : --1---1-------0------------0-----
1068     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value2)']
1069     : -1----1------0-------------0-----
1069     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value1)']
1070     : --1----1------0------------0-----
1070     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value2)']
1071     : 1------1----0--------------0-----
1071     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value0)']
1072     : -1------1----0-------------0-----
1072     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value1)']
1073     : 1-------1---0--------------0-----
1073     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value0)']
1074     : --1---1----------0--------0------
1074     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value2)']
1075     : -1----1---------0---------0------
1075     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value1)']
1076     : --1----1---------0--------0------
1076     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value2)']
1077     : 1------1-------0----------0------
1077     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value0)']
1078     : -1------1-------0---------0------
1078     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value1)']
1079     : 1-------1------0----------0------
1079     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value0)']
1080     : --1--01-------------------------0
1080     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)']
1081     : -1--0-1-------------------------0
1081     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)']
1082     : --1--0-1------------------------0
1082     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)']
1083     : 1--0---1------------------------0
1083     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)']
1084     : -1--0---1-----------------------0
1084     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)']
1085     : 1--0----1-----------------------0
1085     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)']
1086     : --1-----01------------------0----
1086     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value2)']
1087     : -1-----0-1------------------0----
1087     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value1)']
1088     : --1-----0-1-----------------0----
1088     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value2)']
1089     : 1-----0---1-----------------0----
1089     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value0)']
1090     : -1-----0---1----------------0----
1090     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value1)']
1091     : 1-----0----1----------------0----
1091     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value0)']
1092     : --1------1----0----------0-------
1092     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value2)']
1093     : -1-------1---0-----------0-------
1093     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value1)']
1094     : --1-------1---0----------0-------
1094     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value2)']
1095     : 1---------1-0------------0-------
1095     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value0)']
1096     : -1---------1-0-----------0-------
1096     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value1)']
1097     : 1----------10------------0-------
1097     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value0)']
1098     : --1------1-------0------0--------
1098     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value2)']
1099     : -1-------1------0-------0--------
1099     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value1)']
1100     : --1-------1------0------0--------
1100     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value2)']
1101     : 1---------1----0--------0--------
1101     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value0)']
1102     : -1---------1----0-------0--------
1102     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value1)']
1103     : 1----------1---0--------0--------
1103     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value0)']
1104     : --1--0---1---------------------0-
1104     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value2)']
1105     : -1--0----1---------------------0-
1105     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value1)']
1106     : --1--0----1--------------------0-
1106     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value2)']
1107     : 1--0------1--------------------0-
1107     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value0)']
1108     : -1--0------1-------------------0-
1108     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value1)']
1109     : 1--0-------1-------------------0-
1109     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value0)']
1110     : --1-----0---1--------------0-----
1110     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value2)']
1111     : -1-----0----1--------------0-----
1111     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value1)']
1112     : --1-----0----1-------------0-----
1112     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value2)']
1113     : 1-----0------1-------------0-----
1113     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value0)']
1114     : -1-----0------1------------0-----
1114     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value1)']
1115     : 1-----0-------1------------0-----
1115     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value0)']
1116     : --1--------01------------0-------
1116     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value2)']
1117     : -1--------0-1------------0-------
1117     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value1)']
1118     : --1--------0-1-----------0-------
1118     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value2)']
1119     : 1--------0---1-----------0-------
1119     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value0)']
1120     : -1--------0---1----------0-------
1120     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value1)']
1121     : 1--------0----1----------0-------
1121     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value0)']
1122     : --1---------1----0-----0---------
1122     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value2)']
1123     : -1----------1---0------0---------
1123     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value1)']
1124     : --1----------1---0-----0---------
1124     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value2)']
1125     : 1------------1-0-------0---------
1125     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value0)']
1126     : -1------------1-0------0---------
1126     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value1)']
1127     : 1-------------10-------0---------
1127     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value0)']
1128     : --1--0------1-----------------0--
1128     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value2)']
1129     : -1--0-------1-----------------0--
1129     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value1)']
1130     : --1--0-------1----------------0--
1130     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value2)']
1131     : 1--0---------1----------------0--
1131     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value0)']
1132     : -1--0---------1---------------0--
1132     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value1)']
1133     : 1--0----------1---------------0--
1133     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value0)']
1134     : --1-----0------1----------0------
1134     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value2)']
1135     : -1-----0-------1----------0------
1135     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value1)']
1136     : --1-----0-------1---------0------
1136     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value2)']
1137     : 1-----0---------1---------0------
1137     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value0)']
1138     : -1-----0---------1--------0------
1138     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value1)']
1139     : 1-----0----------1--------0------
1139     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value0)']
1140     : --1--------0---1--------0--------
1140     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value2)']
1141     : -1--------0----1--------0--------
1141     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value1)']
1142     : --1--------0----1-------0--------
1142     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value2)']
1143     : 1--------0------1-------0--------
1143     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value0)']
1144     : -1--------0------1------0--------
1144     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value1)']
1145     : 1--------0-------1------0--------
1145     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value0)']
1146     : --1-----------01-------0---------
1146     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value2)']
1147     : -1-----------0-1-------0---------
1147     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value1)']
1148     : --1-----------0-1------0---------
1148     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value2)']
1149     : 1-----------0---1------0---------
1149     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value0)']
1150     : -1-----------0---1-----0---------
1150     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value1)']
1151     : 1-----------0----1-----0---------
1151     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value0)']
1152     : --1--0---------1-------------0---
1152     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value2)']
1153     : -1--0----------1-------------0---
1153     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value1)']
1154     : --1--0----------1------------0---
1154     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value2)']
1155     : 1--0------------1------------0---
1155     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value0)']
1156     : -1--0------------1-----------0---
1156     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value1)']
1157     : 1--0-------------1-----------0---
1157     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 180
num_suborbits: 1
1158 (*) : --11-------0--0------------------
1158     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~vote(node3,value2)']
1159     : -1-1------0--0-------------------
1159     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~vote(node3,value1)']
1160     : --1-1------0--0------------------
1160     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~vote(node3,value2)']
1161     : 1---1----0--0--------------------
1161     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~vote(node3,value0)']
1162     : -1---1----0--0-------------------
1162     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~vote(node3,value1)']
1163     : 1----1---0--0--------------------
1163     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~vote(node3,value0)']
1164     : --11-------0-----0---------------
1164     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~vote(node4,value2)']
1165     : -1-1------0-----0----------------
1165     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~vote(node4,value1)']
1166     : --1-1------0-----0---------------
1166     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~vote(node4,value2)']
1167     : 1---1----0-----0-----------------
1167     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~vote(node4,value0)']
1168     : -1---1----0-----0----------------
1168     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~vote(node4,value1)']
1169     : 1----1---0-----0-----------------
1169     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~vote(node4,value0)']
1170     : --11----------0--0---------------
1170     : ['decided(value2)', 'vote(node0,value0)', '~vote(node3,value2)', '~vote(node4,value2)']
1171     : -1-1---------0--0----------------
1171     : ['decided(value1)', 'vote(node0,value0)', '~vote(node3,value1)', '~vote(node4,value1)']
1172     : --1-1---------0--0---------------
1172     : ['decided(value2)', 'vote(node0,value1)', '~vote(node3,value2)', '~vote(node4,value2)']
1173     : 1---1-------0--0-----------------
1173     : ['decided(value0)', 'vote(node0,value1)', '~vote(node3,value0)', '~vote(node4,value0)']
1174     : -1---1-------0--0----------------
1174     : ['decided(value1)', 'vote(node0,value2)', '~vote(node3,value1)', '~vote(node4,value1)']
1175     : 1----1------0--0-----------------
1175     : ['decided(value0)', 'vote(node0,value2)', '~vote(node3,value0)', '~vote(node4,value0)']
1176     : --11----0-----0------------------
1176     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~vote(node3,value2)']
1177     : -1-1---0-----0-------------------
1177     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~vote(node3,value1)']
1178     : --1-1---0-----0------------------
1178     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~vote(node3,value2)']
1179     : 1---1-0-----0--------------------
1179     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~vote(node3,value0)']
1180     : -1---1-0-----0-------------------
1180     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~vote(node3,value1)']
1181     : 1----10-----0--------------------
1181     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~vote(node3,value0)']
1182     : --11----0--------0---------------
1182     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~vote(node4,value2)']
1183     : -1-1---0--------0----------------
1183     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~vote(node4,value1)']
1184     : --1-1---0--------0---------------
1184     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~vote(node4,value2)']
1185     : 1---1-0--------0-----------------
1185     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~vote(node4,value0)']
1186     : -1---1-0--------0----------------
1186     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~vote(node4,value1)']
1187     : 1----10--------0-----------------
1187     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~vote(node4,value0)']
1188     : --11----0--0---------------------
1188     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~vote(node2,value2)']
1189     : -1-1---0--0----------------------
1189     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~vote(node2,value1)']
1190     : --1-1---0--0---------------------
1190     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~vote(node2,value2)']
1191     : 1---1-0--0-----------------------
1191     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~vote(node2,value0)']
1192     : -1---1-0--0----------------------
1192     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~vote(node2,value1)']
1193     : 1----10--0-----------------------
1193     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~vote(node2,value0)']
1194     : --1---1----0--0------------------
1194     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~vote(node3,value2)']
1195     : -1----1---0--0-------------------
1195     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~vote(node3,value1)']
1196     : --1----1---0--0------------------
1196     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~vote(node3,value2)']
1197     : 1------1-0--0--------------------
1197     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~vote(node3,value0)']
1198     : -1------1-0--0-------------------
1198     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~vote(node3,value1)']
1199     : 1-------10--0--------------------
1199     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~vote(node3,value0)']
1200     : --1---1----0-----0---------------
1200     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~vote(node4,value2)']
1201     : -1----1---0-----0----------------
1201     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~vote(node4,value1)']
1202     : --1----1---0-----0---------------
1202     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~vote(node4,value2)']
1203     : 1------1-0-----0-----------------
1203     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~vote(node4,value0)']
1204     : -1------1-0-----0----------------
1204     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~vote(node4,value1)']
1205     : 1-------10-----0-----------------
1205     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~vote(node4,value0)']
1206     : --1---1-------0--0---------------
1206     : ['decided(value2)', 'vote(node1,value0)', '~vote(node3,value2)', '~vote(node4,value2)']
1207     : -1----1------0--0----------------
1207     : ['decided(value1)', 'vote(node1,value0)', '~vote(node3,value1)', '~vote(node4,value1)']
1208     : --1----1------0--0---------------
1208     : ['decided(value2)', 'vote(node1,value1)', '~vote(node3,value2)', '~vote(node4,value2)']
1209     : 1------1----0--0-----------------
1209     : ['decided(value0)', 'vote(node1,value1)', '~vote(node3,value0)', '~vote(node4,value0)']
1210     : -1------1----0--0----------------
1210     : ['decided(value1)', 'vote(node1,value2)', '~vote(node3,value1)', '~vote(node4,value1)']
1211     : 1-------1---0--0-----------------
1211     : ['decided(value0)', 'vote(node1,value2)', '~vote(node3,value0)', '~vote(node4,value0)']
1212     : --1--01-------0------------------
1212     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~vote(node3,value2)']
1213     : -1--0-1------0-------------------
1213     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~vote(node3,value1)']
1214     : --1--0-1------0------------------
1214     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~vote(node3,value2)']
1215     : 1--0---1----0--------------------
1215     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~vote(node3,value0)']
1216     : -1--0---1----0-------------------
1216     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~vote(node3,value1)']
1217     : 1--0----1---0--------------------
1217     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~vote(node3,value0)']
1218     : --1--01----------0---------------
1218     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~vote(node4,value2)']
1219     : -1--0-1---------0----------------
1219     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~vote(node4,value1)']
1220     : --1--0-1---------0---------------
1220     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~vote(node4,value2)']
1221     : 1--0---1-------0-----------------
1221     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~vote(node4,value0)']
1222     : -1--0---1-------0----------------
1222     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~vote(node4,value1)']
1223     : 1--0----1------0-----------------
1223     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~vote(node4,value0)']
1224     : --1--01----0---------------------
1224     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~vote(node2,value2)']
1225     : -1--0-1---0----------------------
1225     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~vote(node2,value1)']
1226     : --1--0-1---0---------------------
1226     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~vote(node2,value2)']
1227     : 1--0---1-0-----------------------
1227     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~vote(node2,value0)']
1228     : -1--0---1-0----------------------
1228     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~vote(node2,value1)']
1229     : 1--0----10-----------------------
1229     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~vote(node2,value0)']
1230     : --1-----01----0------------------
1230     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~vote(node3,value2)']
1231     : -1-----0-1---0-------------------
1231     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~vote(node3,value1)']
1232     : --1-----0-1---0------------------
1232     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~vote(node3,value2)']
1233     : 1-----0---1-0--------------------
1233     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~vote(node3,value0)']
1234     : -1-----0---1-0-------------------
1234     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~vote(node3,value1)']
1235     : 1-----0----10--------------------
1235     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~vote(node3,value0)']
1236     : --1-----01-------0---------------
1236     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~vote(node4,value2)']
1237     : -1-----0-1------0----------------
1237     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~vote(node4,value1)']
1238     : --1-----0-1------0---------------
1238     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~vote(node4,value2)']
1239     : 1-----0---1----0-----------------
1239     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~vote(node4,value0)']
1240     : -1-----0---1----0----------------
1240     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~vote(node4,value1)']
1241     : 1-----0----1---0-----------------
1241     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~vote(node4,value0)']
1242     : --1------1----0--0---------------
1242     : ['decided(value2)', 'vote(node2,value0)', '~vote(node3,value2)', '~vote(node4,value2)']
1243     : -1-------1---0--0----------------
1243     : ['decided(value1)', 'vote(node2,value0)', '~vote(node3,value1)', '~vote(node4,value1)']
1244     : --1-------1---0--0---------------
1244     : ['decided(value2)', 'vote(node2,value1)', '~vote(node3,value2)', '~vote(node4,value2)']
1245     : 1---------1-0--0-----------------
1245     : ['decided(value0)', 'vote(node2,value1)', '~vote(node3,value0)', '~vote(node4,value0)']
1246     : -1---------1-0--0----------------
1246     : ['decided(value1)', 'vote(node2,value2)', '~vote(node3,value1)', '~vote(node4,value1)']
1247     : 1----------10--0-----------------
1247     : ['decided(value0)', 'vote(node2,value2)', '~vote(node3,value0)', '~vote(node4,value0)']
1248     : --1--0---1----0------------------
1248     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~vote(node3,value2)']
1249     : -1--0----1---0-------------------
1249     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~vote(node3,value1)']
1250     : --1--0----1---0------------------
1250     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~vote(node3,value2)']
1251     : 1--0------1-0--------------------
1251     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~vote(node3,value0)']
1252     : -1--0------1-0-------------------
1252     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~vote(node3,value1)']
1253     : 1--0-------10--------------------
1253     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~vote(node3,value0)']
1254     : --1--0---1-------0---------------
1254     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~vote(node4,value2)']
1255     : -1--0----1------0----------------
1255     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~vote(node4,value1)']
1256     : --1--0----1------0---------------
1256     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~vote(node4,value2)']
1257     : 1--0------1----0-----------------
1257     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~vote(node4,value0)']
1258     : -1--0------1----0----------------
1258     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~vote(node4,value1)']
1259     : 1--0-------1---0-----------------
1259     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~vote(node4,value0)']
1260     : --1--0--01-----------------------
1260     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~vote(node1,value2)']
1261     : -1--0--0-1-----------------------
1261     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~vote(node1,value1)']
1262     : --1--0--0-1----------------------
1262     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~vote(node1,value2)']
1263     : 1--0--0---1----------------------
1263     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~vote(node1,value0)']
1264     : -1--0--0---1---------------------
1264     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~vote(node1,value1)']
1265     : 1--0--0----1---------------------
1265     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~vote(node1,value0)']
1266     : --1-----0--01--------------------
1266     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~vote(node2,value2)']
1267     : -1-----0--0-1--------------------
1267     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~vote(node2,value1)']
1268     : --1-----0--0-1-------------------
1268     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~vote(node2,value2)']
1269     : 1-----0--0---1-------------------
1269     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~vote(node2,value0)']
1270     : -1-----0--0---1------------------
1270     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~vote(node2,value1)']
1271     : 1-----0--0----1------------------
1271     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~vote(node2,value0)']
1272     : --1-----0---1----0---------------
1272     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~vote(node4,value2)']
1273     : -1-----0----1---0----------------
1273     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~vote(node4,value1)']
1274     : --1-----0----1---0---------------
1274     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~vote(node4,value2)']
1275     : 1-----0------1-0-----------------
1275     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~vote(node4,value0)']
1276     : -1-----0------1-0----------------
1276     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~vote(node4,value1)']
1277     : 1-----0-------10-----------------
1277     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~vote(node4,value0)']
1278     : --1--------01----0---------------
1278     : ['decided(value2)', 'vote(node3,value0)', '~vote(node2,value2)', '~vote(node4,value2)']
1279     : -1--------0-1---0----------------
1279     : ['decided(value1)', 'vote(node3,value0)', '~vote(node2,value1)', '~vote(node4,value1)']
1280     : --1--------0-1---0---------------
1280     : ['decided(value2)', 'vote(node3,value1)', '~vote(node2,value2)', '~vote(node4,value2)']
1281     : 1--------0---1-0-----------------
1281     : ['decided(value0)', 'vote(node3,value1)', '~vote(node2,value0)', '~vote(node4,value0)']
1282     : -1--------0---1-0----------------
1282     : ['decided(value1)', 'vote(node3,value2)', '~vote(node2,value1)', '~vote(node4,value1)']
1283     : 1--------0----10-----------------
1283     : ['decided(value0)', 'vote(node3,value2)', '~vote(node2,value0)', '~vote(node4,value0)']
1284     : --1--0-----01--------------------
1284     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~vote(node2,value2)']
1285     : -1--0-----0-1--------------------
1285     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~vote(node2,value1)']
1286     : --1--0-----0-1-------------------
1286     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~vote(node2,value2)']
1287     : 1--0-----0---1-------------------
1287     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~vote(node2,value0)']
1288     : -1--0-----0---1------------------
1288     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~vote(node2,value1)']
1289     : 1--0-----0----1------------------
1289     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~vote(node2,value0)']
1290     : --1--0------1----0---------------
1290     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~vote(node4,value2)']
1291     : -1--0-------1---0----------------
1291     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~vote(node4,value1)']
1292     : --1--0-------1---0---------------
1292     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~vote(node4,value2)']
1293     : 1--0---------1-0-----------------
1293     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~vote(node4,value0)']
1294     : -1--0---------1-0----------------
1294     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~vote(node4,value1)']
1295     : 1--0----------10-----------------
1295     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~vote(node4,value0)']
1296     : --1--0--0---1--------------------
1296     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~vote(node1,value2)']
1297     : -1--0--0----1--------------------
1297     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~vote(node1,value1)']
1298     : --1--0--0----1-------------------
1298     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~vote(node1,value2)']
1299     : 1--0--0------1-------------------
1299     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~vote(node1,value0)']
1300     : -1--0--0------1------------------
1300     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~vote(node1,value1)']
1301     : 1--0--0-------1------------------
1301     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~vote(node1,value0)']
1302     : --1-----0--0---1-----------------
1302     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~vote(node2,value2)']
1303     : -1-----0--0----1-----------------
1303     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~vote(node2,value1)']
1304     : --1-----0--0----1----------------
1304     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~vote(node2,value2)']
1305     : 1-----0--0------1----------------
1305     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~vote(node2,value0)']
1306     : -1-----0--0------1---------------
1306     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~vote(node2,value1)']
1307     : 1-----0--0-------1---------------
1307     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~vote(node2,value0)']
1308     : --1-----0-----01-----------------
1308     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~vote(node3,value2)']
1309     : -1-----0-----0-1-----------------
1309     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~vote(node3,value1)']
1310     : --1-----0-----0-1----------------
1310     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~vote(node3,value2)']
1311     : 1-----0-----0---1----------------
1311     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~vote(node3,value0)']
1312     : -1-----0-----0---1---------------
1312     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~vote(node3,value1)']
1313     : 1-----0-----0----1---------------
1313     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~vote(node3,value0)']
1314     : --1--------0--01-----------------
1314     : ['decided(value2)', 'vote(node4,value0)', '~vote(node2,value2)', '~vote(node3,value2)']
1315     : -1--------0--0-1-----------------
1315     : ['decided(value1)', 'vote(node4,value0)', '~vote(node2,value1)', '~vote(node3,value1)']
1316     : --1--------0--0-1----------------
1316     : ['decided(value2)', 'vote(node4,value1)', '~vote(node2,value2)', '~vote(node3,value2)']
1317     : 1--------0--0---1----------------
1317     : ['decided(value0)', 'vote(node4,value1)', '~vote(node2,value0)', '~vote(node3,value0)']
1318     : -1--------0--0---1---------------
1318     : ['decided(value1)', 'vote(node4,value2)', '~vote(node2,value1)', '~vote(node3,value1)']
1319     : 1--------0--0----1---------------
1319     : ['decided(value0)', 'vote(node4,value2)', '~vote(node2,value0)', '~vote(node3,value0)']
1320     : --1--0-----0---1-----------------
1320     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~vote(node2,value2)']
1321     : -1--0-----0----1-----------------
1321     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~vote(node2,value1)']
1322     : --1--0-----0----1----------------
1322     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~vote(node2,value2)']
1323     : 1--0-----0------1----------------
1323     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~vote(node2,value0)']
1324     : -1--0-----0------1---------------
1324     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~vote(node2,value1)']
1325     : 1--0-----0-------1---------------
1325     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~vote(node2,value0)']
1326     : --1--0--------01-----------------
1326     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~vote(node3,value2)']
1327     : -1--0--------0-1-----------------
1327     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~vote(node3,value1)']
1328     : --1--0--------0-1----------------
1328     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~vote(node3,value2)']
1329     : 1--0--------0---1----------------
1329     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~vote(node3,value0)']
1330     : -1--0--------0---1---------------
1330     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~vote(node3,value1)']
1331     : 1--0--------0----1---------------
1331     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~vote(node3,value0)']
1332     : --1--0--0------1-----------------
1332     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~vote(node1,value2)']
1333     : -1--0--0-------1-----------------
1333     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~vote(node1,value1)']
1334     : --1--0--0-------1----------------
1334     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~vote(node1,value2)']
1335     : 1--0--0---------1----------------
1335     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~vote(node1,value0)']
1336     : -1--0--0---------1---------------
1336     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~vote(node1,value1)']
1337     : 1--0--0----------1---------------
1337     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~vote(node1,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 360
num_suborbits: 2
1338 (*) : --11------1---0------------------
1338     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~vote(node3,value2)']
1339     : -1-1-------1-0-------------------
1339     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~vote(node3,value1)']
1340     : --1-1----1----0------------------
1340     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~vote(node3,value2)']
1341     : 1---1------10--------------------
1341     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~vote(node3,value0)']
1342     : -1---1---1---0-------------------
1342     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~vote(node3,value1)']
1343     : 1----1----1-0--------------------
1343     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~vote(node3,value0)']
1344     : --11------1------0---------------
1344     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~vote(node4,value2)']
1345     : -1-1-------1----0----------------
1345     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~vote(node4,value1)']
1346     : --1-1----1-------0---------------
1346     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~vote(node4,value2)']
1347     : 1---1------1---0-----------------
1347     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~vote(node4,value0)']
1348     : -1---1---1------0----------------
1348     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~vote(node4,value1)']
1349     : 1----1----1----0-----------------
1349     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~vote(node4,value0)']
1350     : --11-------0-1-------------------
1350     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~vote(node2,value2)']
1351     : -1-1------0---1------------------
1351     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~vote(node2,value1)']
1352     : --1-1------01--------------------
1352     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~vote(node2,value2)']
1353     : 1---1----0----1------------------
1353     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~vote(node2,value0)']
1354     : -1---1----0-1--------------------
1354     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~vote(node2,value1)']
1355     : 1----1---0---1-------------------
1355     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~vote(node2,value0)']
1356     : --11---------1---0---------------
1356     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~vote(node4,value2)']
1357     : -1-1----------1-0----------------
1357     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~vote(node4,value1)']
1358     : --1-1-------1----0---------------
1358     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~vote(node4,value2)']
1359     : 1---1---------10-----------------
1359     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~vote(node4,value0)']
1360     : -1---1------1---0----------------
1360     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~vote(node4,value1)']
1361     : 1----1-------1-0-----------------
1361     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~vote(node4,value0)']
1362     : --11-------0----1----------------
1362     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~vote(node2,value2)']
1363     : -1-1------0------1---------------
1363     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~vote(node2,value1)']
1364     : --1-1------0---1-----------------
1364     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~vote(node2,value2)']
1365     : 1---1----0-------1---------------
1365     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~vote(node2,value0)']
1366     : -1---1----0----1-----------------
1366     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~vote(node2,value1)']
1367     : 1----1---0------1----------------
1367     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~vote(node2,value0)']
1368     : --11----------0-1----------------
1368     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~vote(node3,value2)']
1369     : -1-1---------0---1---------------
1369     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~vote(node3,value1)']
1370     : --1-1---------01-----------------
1370     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~vote(node3,value2)']
1371     : 1---1-------0----1---------------
1371     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~vote(node3,value0)']
1372     : -1---1-------0-1-----------------
1372     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~vote(node3,value1)']
1373     : 1----1------0---1----------------
1373     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~vote(node3,value0)']
1374     : --11---1------0------------------
1374     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~vote(node3,value2)']
1375     : -1-1----1----0-------------------
1375     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~vote(node3,value1)']
1376     : --1-1-1-------0------------------
1376     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~vote(node3,value2)']
1377     : 1---1---1---0--------------------
1377     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~vote(node3,value0)']
1378     : -1---11------0-------------------
1378     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~vote(node3,value1)']
1379     : 1----1-1----0--------------------
1379     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~vote(node3,value0)']
1380     : --11---1---------0---------------
1380     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~vote(node4,value2)']
1381     : -1-1----1-------0----------------
1381     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~vote(node4,value1)']
1382     : --1-1-1----------0---------------
1382     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~vote(node4,value2)']
1383     : 1---1---1------0-----------------
1383     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~vote(node4,value0)']
1384     : -1---11---------0----------------
1384     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~vote(node4,value1)']
1385     : 1----1-1-------0-----------------
1385     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~vote(node4,value0)']
1386     : --11----0----1-------------------
1386     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~vote(node1,value2)']
1387     : -1-1---0------1------------------
1387     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~vote(node1,value1)']
1388     : --1-1---0---1--------------------
1388     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~vote(node1,value2)']
1389     : 1---1-0-------1------------------
1389     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~vote(node1,value0)']
1390     : -1---1-0----1--------------------
1390     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~vote(node1,value1)']
1391     : 1----10------1-------------------
1391     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~vote(node1,value0)']
1392     : --11----0-------1----------------
1392     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~vote(node1,value2)']
1393     : -1-1---0---------1---------------
1393     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~vote(node1,value1)']
1394     : --1-1---0------1-----------------
1394     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~vote(node1,value2)']
1395     : 1---1-0----------1---------------
1395     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~vote(node1,value0)']
1396     : -1---1-0-------1-----------------
1396     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~vote(node1,value1)']
1397     : 1----10---------1----------------
1397     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~vote(node1,value0)']
1398     : --11---1---0---------------------
1398     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~vote(node2,value2)']
1399     : -1-1----1-0----------------------
1399     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~vote(node2,value1)']
1400     : --1-1-1----0---------------------
1400     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~vote(node2,value2)']
1401     : 1---1---10-----------------------
1401     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~vote(node2,value0)']
1402     : -1---11---0----------------------
1402     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~vote(node2,value1)']
1403     : 1----1-1-0-----------------------
1403     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~vote(node2,value0)']
1404     : --11----0-1----------------------
1404     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~vote(node1,value2)']
1405     : -1-1---0---1---------------------
1405     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~vote(node1,value1)']
1406     : --1-1---01-----------------------
1406     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~vote(node1,value2)']
1407     : 1---1-0----1---------------------
1407     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~vote(node1,value0)']
1408     : -1---1-0-1-----------------------
1408     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~vote(node1,value1)']
1409     : 1----10---1----------------------
1409     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~vote(node1,value0)']
1410     : --1---1---1---0------------------
1410     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~vote(node3,value2)']
1411     : -1----1----1-0-------------------
1411     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~vote(node3,value1)']
1412     : --1----1-1----0------------------
1412     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~vote(node3,value2)']
1413     : 1------1---10--------------------
1413     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~vote(node3,value0)']
1414     : -1------11---0-------------------
1414     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~vote(node3,value1)']
1415     : 1-------1-1-0--------------------
1415     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~vote(node3,value0)']
1416     : --1---1---1------0---------------
1416     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~vote(node4,value2)']
1417     : -1----1----1----0----------------
1417     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~vote(node4,value1)']
1418     : --1----1-1-------0---------------
1418     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~vote(node4,value2)']
1419     : 1------1---1---0-----------------
1419     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~vote(node4,value0)']
1420     : -1------11------0----------------
1420     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~vote(node4,value1)']
1421     : 1-------1-1----0-----------------
1421     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~vote(node4,value0)']
1422     : --1---1----0-1-------------------
1422     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~vote(node2,value2)']
1423     : -1----1---0---1------------------
1423     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~vote(node2,value1)']
1424     : --1----1---01--------------------
1424     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~vote(node2,value2)']
1425     : 1------1-0----1------------------
1425     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~vote(node2,value0)']
1426     : -1------1-0-1--------------------
1426     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~vote(node2,value1)']
1427     : 1-------10---1-------------------
1427     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~vote(node2,value0)']
1428     : --1---1------1---0---------------
1428     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~vote(node4,value2)']
1429     : -1----1-------1-0----------------
1429     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~vote(node4,value1)']
1430     : --1----1----1----0---------------
1430     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~vote(node4,value2)']
1431     : 1------1------10-----------------
1431     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~vote(node4,value0)']
1432     : -1------1---1---0----------------
1432     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~vote(node4,value1)']
1433     : 1-------1----1-0-----------------
1433     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~vote(node4,value0)']
1434     : --1---1----0----1----------------
1434     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~vote(node2,value2)']
1435     : -1----1---0------1---------------
1435     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~vote(node2,value1)']
1436     : --1----1---0---1-----------------
1436     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~vote(node2,value2)']
1437     : 1------1-0-------1---------------
1437     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~vote(node2,value0)']
1438     : -1------1-0----1-----------------
1438     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~vote(node2,value1)']
1439     : 1-------10------1----------------
1439     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~vote(node2,value0)']
1440     : --1---1-------0-1----------------
1440     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~vote(node3,value2)']
1441     : -1----1------0---1---------------
1441     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~vote(node3,value1)']
1442     : --1----1------01-----------------
1442     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~vote(node3,value2)']
1443     : 1------1----0----1---------------
1443     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~vote(node3,value0)']
1444     : -1------1----0-1-----------------
1444     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~vote(node3,value1)']
1445     : 1-------1---0---1----------------
1445     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~vote(node3,value0)']
1446     : --1--01------1-------------------
1446     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~vote(node0,value2)']
1447     : -1--0-1-------1------------------
1447     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~vote(node0,value1)']
1448     : --1--0-1----1--------------------
1448     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~vote(node0,value2)']
1449     : 1--0---1------1------------------
1449     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~vote(node0,value0)']
1450     : -1--0---1---1--------------------
1450     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~vote(node0,value1)']
1451     : 1--0----1----1-------------------
1451     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~vote(node0,value0)']
1452     : --1--01---------1----------------
1452     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~vote(node0,value2)']
1453     : -1--0-1----------1---------------
1453     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~vote(node0,value1)']
1454     : --1--0-1-------1-----------------
1454     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~vote(node0,value2)']
1455     : 1--0---1---------1---------------
1455     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~vote(node0,value0)']
1456     : -1--0---1------1-----------------
1456     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~vote(node0,value1)']
1457     : 1--0----1-------1----------------
1457     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~vote(node0,value0)']
1458     : --1--01---1----------------------
1458     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~vote(node0,value2)']
1459     : -1--0-1----1---------------------
1459     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~vote(node0,value1)']
1460     : --1--0-1-1-----------------------
1460     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~vote(node0,value2)']
1461     : 1--0---1---1---------------------
1461     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~vote(node0,value0)']
1462     : -1--0---11-----------------------
1462     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~vote(node0,value1)']
1463     : 1--0----1-1----------------------
1463     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~vote(node0,value0)']
1464     : --1-----01---1-------------------
1464     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~vote(node1,value2)']
1465     : -1-----0-1----1------------------
1465     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~vote(node1,value1)']
1466     : --1-----0-1-1--------------------
1466     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~vote(node1,value2)']
1467     : 1-----0---1---1------------------
1467     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~vote(node1,value0)']
1468     : -1-----0---11--------------------
1468     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~vote(node1,value1)']
1469     : 1-----0----1-1-------------------
1469     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~vote(node1,value0)']
1470     : --1------1---1---0---------------
1470     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~vote(node4,value2)']
1471     : -1-------1----1-0----------------
1471     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~vote(node4,value1)']
1472     : --1-------1-1----0---------------
1472     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~vote(node4,value2)']
1473     : 1---------1---10-----------------
1473     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~vote(node4,value0)']
1474     : -1---------11---0----------------
1474     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~vote(node4,value1)']
1475     : 1----------1-1-0-----------------
1475     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~vote(node4,value0)']
1476     : --1-----01------1----------------
1476     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~vote(node1,value2)']
1477     : -1-----0-1-------1---------------
1477     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~vote(node1,value1)']
1478     : --1-----0-1----1-----------------
1478     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~vote(node1,value2)']
1479     : 1-----0---1------1---------------
1479     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~vote(node1,value0)']
1480     : -1-----0---1---1-----------------
1480     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~vote(node1,value1)']
1481     : 1-----0----1----1----------------
1481     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~vote(node1,value0)']
1482     : --1------1----0-1----------------
1482     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~vote(node3,value2)']
1483     : -1-------1---0---1---------------
1483     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~vote(node3,value1)']
1484     : --1-------1---01-----------------
1484     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~vote(node3,value2)']
1485     : 1---------1-0----1---------------
1485     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~vote(node3,value0)']
1486     : -1---------1-0-1-----------------
1486     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~vote(node3,value1)']
1487     : 1----------10---1----------------
1487     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~vote(node3,value0)']
1488     : --1--0---1---1-------------------
1488     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~vote(node0,value2)']
1489     : -1--0----1----1------------------
1489     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~vote(node0,value1)']
1490     : --1--0----1-1--------------------
1490     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~vote(node0,value2)']
1491     : 1--0------1---1------------------
1491     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~vote(node0,value0)']
1492     : -1--0------11--------------------
1492     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~vote(node0,value1)']
1493     : 1--0-------1-1-------------------
1493     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~vote(node0,value0)']
1494     : --1--0---1------1----------------
1494     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~vote(node0,value2)']
1495     : -1--0----1-------1---------------
1495     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~vote(node0,value1)']
1496     : --1--0----1----1-----------------
1496     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~vote(node0,value2)']
1497     : 1--0------1------1---------------
1497     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~vote(node0,value0)']
1498     : -1--0------1---1-----------------
1498     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~vote(node0,value1)']
1499     : 1--0-------1----1----------------
1499     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~vote(node0,value0)']
1500     : --1-----0---1---1----------------
1500     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~vote(node1,value2)']
1501     : -1-----0----1----1---------------
1501     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~vote(node1,value1)']
1502     : --1-----0----1-1-----------------
1502     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~vote(node1,value2)']
1503     : 1-----0------1---1---------------
1503     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~vote(node1,value0)']
1504     : -1-----0------11-----------------
1504     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~vote(node1,value1)']
1505     : 1-----0-------1-1----------------
1505     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~vote(node1,value0)']
1506     : --1--------01---1----------------
1506     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~vote(node2,value2)']
1507     : -1--------0-1----1---------------
1507     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~vote(node2,value1)']
1508     : --1--------0-1-1-----------------
1508     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~vote(node2,value2)']
1509     : 1--------0---1---1---------------
1509     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~vote(node2,value0)']
1510     : -1--------0---11-----------------
1510     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~vote(node2,value1)']
1511     : 1--------0----1-1----------------
1511     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~vote(node2,value0)']
1512     : --1--0------1---1----------------
1512     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~vote(node0,value2)']
1513     : -1--0-------1----1---------------
1513     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~vote(node0,value1)']
1514     : --1--0-------1-1-----------------
1514     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~vote(node0,value2)']
1515     : 1--0---------1---1---------------
1515     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~vote(node0,value0)']
1516     : -1--0---------11-----------------
1516     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~vote(node0,value1)']
1517     : 1--0----------1-1----------------
1517     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~vote(node0,value0)']
1578 (*) : --11-------01--------------------
1578     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node2,value2)']
1579     : -1-1------0-1--------------------
1579     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node2,value1)']
1580     : --1-1------0-1-------------------
1580     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node2,value2)']
1581     : 1---1----0---1-------------------
1581     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node2,value0)']
1582     : -1---1----0---1------------------
1582     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node2,value1)']
1583     : 1----1---0----1------------------
1583     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node2,value0)']
1584     : --11-------0---1-----------------
1584     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node2,value2)']
1585     : -1-1------0----1-----------------
1585     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node2,value1)']
1586     : --1-1------0----1----------------
1586     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node2,value2)']
1587     : 1---1----0------1----------------
1587     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node2,value0)']
1588     : -1---1----0------1---------------
1588     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node2,value1)']
1589     : 1----1---0-------1---------------
1589     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node2,value0)']
1590     : --11-----1----0------------------
1590     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node3,value2)']
1591     : -1-1-----1---0-------------------
1591     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node3,value1)']
1592     : --1-1-----1---0------------------
1592     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node3,value2)']
1593     : 1---1-----1-0--------------------
1593     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node3,value0)']
1594     : -1---1-----1-0-------------------
1594     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node3,value1)']
1595     : 1----1-----10--------------------
1595     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node3,value0)']
1596     : --11----------01-----------------
1596     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node3,value2)']
1597     : -1-1---------0-1-----------------
1597     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node3,value1)']
1598     : --1-1---------0-1----------------
1598     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node3,value2)']
1599     : 1---1-------0---1----------------
1599     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node3,value0)']
1600     : -1---1-------0---1---------------
1600     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node3,value1)']
1601     : 1----1------0----1---------------
1601     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node3,value0)']
1602     : --11-----1-------0---------------
1602     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node4,value2)']
1603     : -1-1-----1------0----------------
1603     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node4,value1)']
1604     : --1-1-----1------0---------------
1604     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node4,value2)']
1605     : 1---1-----1----0-----------------
1605     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node4,value0)']
1606     : -1---1-----1----0----------------
1606     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node4,value1)']
1607     : 1----1-----1---0-----------------
1607     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node4,value0)']
1608     : --11--------1----0---------------
1608     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node4,value2)']
1609     : -1-1--------1---0----------------
1609     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node4,value1)']
1610     : --1-1--------1---0---------------
1610     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node4,value2)']
1611     : 1---1--------1-0-----------------
1611     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node4,value0)']
1612     : -1---1--------1-0----------------
1612     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node4,value1)']
1613     : 1----1--------10-----------------
1613     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node4,value0)']
1614     : --11----0---1--------------------
1614     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node1,value2)']
1615     : -1-1---0----1--------------------
1615     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node1,value1)']
1616     : --1-1---0----1-------------------
1616     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node1,value2)']
1617     : 1---1-0------1-------------------
1617     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node1,value0)']
1618     : -1---1-0------1------------------
1618     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node1,value1)']
1619     : 1----10-------1------------------
1619     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node1,value0)']
1620     : --11----0------1-----------------
1620     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node1,value2)']
1621     : -1-1---0-------1-----------------
1621     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node1,value1)']
1622     : --1-1---0-------1----------------
1622     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node1,value2)']
1623     : 1---1-0---------1----------------
1623     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node1,value0)']
1624     : -1---1-0---------1---------------
1624     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node1,value1)']
1625     : 1----10----------1---------------
1625     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node1,value0)']
1626     : --11--1-------0------------------
1626     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node3,value2)']
1627     : -1-1--1------0-------------------
1627     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node3,value1)']
1628     : --1-1--1------0------------------
1628     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node3,value2)']
1629     : 1---1--1----0--------------------
1629     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node3,value0)']
1630     : -1---1--1----0-------------------
1630     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node3,value1)']
1631     : 1----1--1---0--------------------
1631     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node3,value0)']
1632     : --11--1----------0---------------
1632     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node4,value2)']
1633     : -1-1--1---------0----------------
1633     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node4,value1)']
1634     : --1-1--1---------0---------------
1634     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node4,value2)']
1635     : 1---1--1-------0-----------------
1635     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node4,value0)']
1636     : -1---1--1-------0----------------
1636     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node4,value1)']
1637     : 1----1--1------0-----------------
1637     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node4,value0)']
1638     : --11----01-----------------------
1638     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node1,value2)']
1639     : -1-1---0-1-----------------------
1639     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node1,value1)']
1640     : --1-1---0-1----------------------
1640     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node1,value2)']
1641     : 1---1-0---1----------------------
1641     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node1,value0)']
1642     : -1---1-0---1---------------------
1642     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node1,value1)']
1643     : 1----10----1---------------------
1643     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node1,value0)']
1644     : --11--1----0---------------------
1644     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node2,value2)']
1645     : -1-1--1---0----------------------
1645     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node2,value1)']
1646     : --1-1--1---0---------------------
1646     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node2,value2)']
1647     : 1---1--1-0-----------------------
1647     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node2,value0)']
1648     : -1---1--1-0----------------------
1648     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node2,value1)']
1649     : 1----1--10-----------------------
1649     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node2,value0)']
1650     : --1---1----01--------------------
1650     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node2,value2)']
1651     : -1----1---0-1--------------------
1651     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node2,value1)']
1652     : --1----1---0-1-------------------
1652     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node2,value2)']
1653     : 1------1-0---1-------------------
1653     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node2,value0)']
1654     : -1------1-0---1------------------
1654     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node2,value1)']
1655     : 1-------10----1------------------
1655     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node2,value0)']
1656     : --1---1----0---1-----------------
1656     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node2,value2)']
1657     : -1----1---0----1-----------------
1657     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node2,value1)']
1658     : --1----1---0----1----------------
1658     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node2,value2)']
1659     : 1------1-0------1----------------
1659     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node2,value0)']
1660     : -1------1-0------1---------------
1660     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node2,value1)']
1661     : 1-------10-------1---------------
1661     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node2,value0)']
1662     : --1---1--1----0------------------
1662     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node3,value2)']
1663     : -1----1--1---0-------------------
1663     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node3,value1)']
1664     : --1----1--1---0------------------
1664     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node3,value2)']
1665     : 1------1--1-0--------------------
1665     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node3,value0)']
1666     : -1------1--1-0-------------------
1666     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node3,value1)']
1667     : 1-------1--10--------------------
1667     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node3,value0)']
1668     : --1---1-------01-----------------
1668     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node3,value2)']
1669     : -1----1------0-1-----------------
1669     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node3,value1)']
1670     : --1----1------0-1----------------
1670     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node3,value2)']
1671     : 1------1----0---1----------------
1671     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node3,value0)']
1672     : -1------1----0---1---------------
1672     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node3,value1)']
1673     : 1-------1---0----1---------------
1673     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node3,value0)']
1674     : --1---1--1-------0---------------
1674     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node4,value2)']
1675     : -1----1--1------0----------------
1675     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node4,value1)']
1676     : --1----1--1------0---------------
1676     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node4,value2)']
1677     : 1------1--1----0-----------------
1677     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node4,value0)']
1678     : -1------1--1----0----------------
1678     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node4,value1)']
1679     : 1-------1--1---0-----------------
1679     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node4,value0)']
1680     : --1---1-----1----0---------------
1680     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node4,value2)']
1681     : -1----1-----1---0----------------
1681     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node4,value1)']
1682     : --1----1-----1---0---------------
1682     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node4,value2)']
1683     : 1------1-----1-0-----------------
1683     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node4,value0)']
1684     : -1------1-----1-0----------------
1684     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node4,value1)']
1685     : 1-------1-----10-----------------
1685     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node4,value0)']
1686     : --1--01-----1--------------------
1686     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node0,value2)']
1687     : -1--0-1-----1--------------------
1687     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node0,value1)']
1688     : --1--0-1-----1-------------------
1688     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node0,value2)']
1689     : 1--0---1-----1-------------------
1689     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node0,value0)']
1690     : -1--0---1-----1------------------
1690     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node0,value1)']
1691     : 1--0----1-----1------------------
1691     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node0,value0)']
1692     : --1--01--------1-----------------
1692     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node0,value2)']
1693     : -1--0-1--------1-----------------
1693     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node0,value1)']
1694     : --1--0-1--------1----------------
1694     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node0,value2)']
1695     : 1--0---1--------1----------------
1695     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node0,value0)']
1696     : -1--0---1--------1---------------
1696     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node0,value1)']
1697     : 1--0----1--------1---------------
1697     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node0,value0)']
1698     : --1--01--1-----------------------
1698     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node0,value2)']
1699     : -1--0-1--1-----------------------
1699     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node0,value1)']
1700     : --1--0-1--1----------------------
1700     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node0,value2)']
1701     : 1--0---1--1----------------------
1701     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node0,value0)']
1702     : -1--0---1--1---------------------
1702     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node0,value1)']
1703     : 1--0----1--1---------------------
1703     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node0,value0)']
1704     : --1-----01--1--------------------
1704     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node1,value2)']
1705     : -1-----0-1--1--------------------
1705     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node1,value1)']
1706     : --1-----0-1--1-------------------
1706     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node1,value2)']
1707     : 1-----0---1--1-------------------
1707     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node1,value0)']
1708     : -1-----0---1--1------------------
1708     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node1,value1)']
1709     : 1-----0----1--1------------------
1709     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node1,value0)']
1710     : --1-----01-----1-----------------
1710     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node1,value2)']
1711     : -1-----0-1-----1-----------------
1711     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node1,value1)']
1712     : --1-----0-1-----1----------------
1712     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node1,value2)']
1713     : 1-----0---1-----1----------------
1713     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node1,value0)']
1714     : -1-----0---1-----1---------------
1714     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node1,value1)']
1715     : 1-----0----1-----1---------------
1715     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node1,value0)']
1716     : --1------1----01-----------------
1716     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node3,value2)']
1717     : -1-------1---0-1-----------------
1717     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node3,value1)']
1718     : --1-------1---0-1----------------
1718     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node3,value2)']
1719     : 1---------1-0---1----------------
1719     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node3,value0)']
1720     : -1---------1-0---1---------------
1720     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node3,value1)']
1721     : 1----------10----1---------------
1721     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node3,value0)']
1722     : --1------1--1----0---------------
1722     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node4,value2)']
1723     : -1-------1--1---0----------------
1723     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node4,value1)']
1724     : --1-------1--1---0---------------
1724     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node4,value2)']
1725     : 1---------1--1-0-----------------
1725     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node4,value0)']
1726     : -1---------1--1-0----------------
1726     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node4,value1)']
1727     : 1----------1--10-----------------
1727     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node4,value0)']
1728     : --1--0---1--1--------------------
1728     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node0,value2)']
1729     : -1--0----1--1--------------------
1729     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node0,value1)']
1730     : --1--0----1--1-------------------
1730     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node0,value2)']
1731     : 1--0------1--1-------------------
1731     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node0,value0)']
1732     : -1--0------1--1------------------
1732     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node0,value1)']
1733     : 1--0-------1--1------------------
1733     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node0,value0)']
1734     : --1--0---1-----1-----------------
1734     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node0,value2)']
1735     : -1--0----1-----1-----------------
1735     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node0,value1)']
1736     : --1--0----1-----1----------------
1736     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node0,value2)']
1737     : 1--0------1-----1----------------
1737     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node0,value0)']
1738     : -1--0------1-----1---------------
1738     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node0,value1)']
1739     : 1--0-------1-----1---------------
1739     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node0,value0)']
1740     : --1-----0---1--1-----------------
1740     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node1,value2)']
1741     : -1-----0----1--1-----------------
1741     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node1,value1)']
1742     : --1-----0----1--1----------------
1742     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node1,value2)']
1743     : 1-----0------1--1----------------
1743     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node1,value0)']
1744     : -1-----0------1--1---------------
1744     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node1,value1)']
1745     : 1-----0-------1--1---------------
1745     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node1,value0)']
1746     : --1--------01--1-----------------
1746     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node2,value2)']
1747     : -1--------0-1--1-----------------
1747     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node2,value1)']
1748     : --1--------0-1--1----------------
1748     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node2,value2)']
1749     : 1--------0---1--1----------------
1749     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node2,value0)']
1750     : -1--------0---1--1---------------
1750     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node2,value1)']
1751     : 1--------0----1--1---------------
1751     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node2,value0)']
1752     : --1--0------1--1-----------------
1752     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node0,value2)']
1753     : -1--0-------1--1-----------------
1753     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node0,value1)']
1754     : --1--0-------1--1----------------
1754     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node0,value2)']
1755     : 1--0---------1--1----------------
1755     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node0,value0)']
1756     : -1--0---------1--1---------------
1756     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node0,value1)']
1757     : 1--0----------1--1---------------
1757     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node0,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 240
num_suborbits: 2
1938 (*) : --11------1-1--------------------
1938     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node3,value0)']
1939     : -1-1-------11--------------------
1939     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', 'vote(node3,value0)']
1940     : --1-1----1---1-------------------
1940     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', 'vote(node3,value1)']
1941     : 1---1------1-1-------------------
1941     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', 'vote(node3,value1)']
1942     : -1---1---1----1------------------
1942     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', 'vote(node3,value2)']
1943     : 1----1----1---1------------------
1943     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', 'vote(node3,value2)']
1944     : --11------1----1-----------------
1944     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node4,value0)']
1945     : -1-1-------1---1-----------------
1945     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', 'vote(node4,value0)']
1946     : --1-1----1------1----------------
1946     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', 'vote(node4,value1)']
1947     : 1---1------1----1----------------
1947     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', 'vote(node4,value1)']
1948     : -1---1---1-------1---------------
1948     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', 'vote(node4,value2)']
1949     : 1----1----1------1---------------
1949     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', 'vote(node4,value2)']
1950     : --11-----1---1-------------------
1950     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node3,value1)']
1951     : -1-1-----1----1------------------
1951     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node3,value2)']
1952     : --1-1-----1-1--------------------
1952     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node3,value0)']
1953     : 1---1-----1---1------------------
1953     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node3,value2)']
1954     : -1---1-----11--------------------
1954     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node3,value0)']
1955     : 1----1-----1-1-------------------
1955     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node3,value1)']
1956     : --11---------1-1-----------------
1956     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', 'vote(node4,value0)']
1957     : -1-1----------11-----------------
1957     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', 'vote(node4,value0)']
1958     : --1-1-------1---1----------------
1958     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', 'vote(node4,value1)']
1959     : 1---1---------1-1----------------
1959     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', 'vote(node4,value1)']
1960     : -1---1------1----1---------------
1960     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', 'vote(node4,value2)']
1961     : 1----1-------1---1---------------
1961     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', 'vote(node4,value2)']
1962     : --11-----1------1----------------
1962     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node4,value1)']
1963     : -1-1-----1-------1---------------
1963     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node4,value2)']
1964     : --1-1-----1----1-----------------
1964     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node4,value0)']
1965     : 1---1-----1------1---------------
1965     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node4,value2)']
1966     : -1---1-----1---1-----------------
1966     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node4,value0)']
1967     : 1----1-----1----1----------------
1967     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node4,value1)']
1968     : --11--------1---1----------------
1968     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', 'vote(node4,value1)']
1969     : -1-1--------1----1---------------
1969     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', 'vote(node4,value2)']
1970     : --1-1--------1-1-----------------
1970     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', 'vote(node4,value0)']
1971     : 1---1--------1---1---------------
1971     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', 'vote(node4,value2)']
1972     : -1---1--------11-----------------
1972     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', 'vote(node4,value0)']
1973     : 1----1--------1-1----------------
1973     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', 'vote(node4,value1)']
1974     : --11---1----1--------------------
1974     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node3,value0)']
1975     : -1-1----1---1--------------------
1975     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node3,value0)']
1976     : --1-1-1------1-------------------
1976     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node3,value1)']
1977     : 1---1---1----1-------------------
1977     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node3,value1)']
1978     : -1---11-------1------------------
1978     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node3,value2)']
1979     : 1----1-1------1------------------
1979     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node3,value2)']
1980     : --11---1-------1-----------------
1980     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node4,value0)']
1981     : -1-1----1------1-----------------
1981     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node4,value0)']
1982     : --1-1-1---------1----------------
1982     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node4,value1)']
1983     : 1---1---1-------1----------------
1983     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node4,value1)']
1984     : -1---11----------1---------------
1984     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node4,value2)']
1985     : 1----1-1---------1---------------
1985     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node4,value2)']
1986     : --11--1------1-------------------
1986     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node3,value1)']
1987     : -1-1--1-------1------------------
1987     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node3,value2)']
1988     : --1-1--1----1--------------------
1988     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node3,value0)']
1989     : 1---1--1------1------------------
1989     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node3,value2)']
1990     : -1---1--1---1--------------------
1990     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node3,value0)']
1991     : 1----1--1----1-------------------
1991     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node3,value1)']
1992     : --11--1---------1----------------
1992     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node4,value1)']
1993     : -1-1--1----------1---------------
1993     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node4,value2)']
1994     : --1-1--1-------1-----------------
1994     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node4,value0)']
1995     : 1---1--1---------1---------------
1995     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node4,value2)']
1996     : -1---1--1------1-----------------
1996     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node4,value0)']
1997     : 1----1--1-------1----------------
1997     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node4,value1)']
1998     : --11---1-1-----------------------
1998     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node2,value0)']
1999     : -1-1----11-----------------------
1999     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node2,value0)']
2000     : --1-1-1---1----------------------
2000     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node2,value1)']
2001     : 1---1---1-1----------------------
2001     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node2,value1)']
2002     : -1---11----1---------------------
2002     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node2,value2)']
2003     : 1----1-1---1---------------------
2003     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node2,value2)']
2004     : --11--1---1----------------------
2004     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node2,value1)']
2005     : -1-1--1----1---------------------
2005     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node2,value2)']
2006     : --1-1--1-1-----------------------
2006     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node2,value0)']
2007     : 1---1--1---1---------------------
2007     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node2,value2)']
2008     : -1---1--11-----------------------
2008     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node2,value0)']
2009     : 1----1--1-1----------------------
2009     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node2,value1)']
2010     : --1---1---1-1--------------------
2010     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', 'vote(node3,value0)']
2011     : -1----1----11--------------------
2011     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', 'vote(node3,value0)']
2012     : --1----1-1---1-------------------
2012     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', 'vote(node3,value1)']
2013     : 1------1---1-1-------------------
2013     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', 'vote(node3,value1)']
2014     : -1------11----1------------------
2014     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node3,value2)']
2015     : 1-------1-1---1------------------
2015     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', 'vote(node3,value2)']
2016     : --1---1---1----1-----------------
2016     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', 'vote(node4,value0)']
2017     : -1----1----1---1-----------------
2017     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', 'vote(node4,value0)']
2018     : --1----1-1------1----------------
2018     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', 'vote(node4,value1)']
2019     : 1------1---1----1----------------
2019     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', 'vote(node4,value1)']
2020     : -1------11-------1---------------
2020     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node4,value2)']
2021     : 1-------1-1------1---------------
2021     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', 'vote(node4,value2)']
2022     : --1---1--1---1-------------------
2022     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node3,value1)']
2023     : -1----1--1----1------------------
2023     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node3,value2)']
2024     : --1----1--1-1--------------------
2024     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node3,value0)']
2025     : 1------1--1---1------------------
2025     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node3,value2)']
2026     : -1------1--11--------------------
2026     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node3,value0)']
2027     : 1-------1--1-1-------------------
2027     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node3,value1)']
2028     : --1---1------1-1-----------------
2028     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', 'vote(node4,value0)']
2029     : -1----1-------11-----------------
2029     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', 'vote(node4,value0)']
2030     : --1----1----1---1----------------
2030     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', 'vote(node4,value1)']
2031     : 1------1------1-1----------------
2031     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', 'vote(node4,value1)']
2032     : -1------1---1----1---------------
2032     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', 'vote(node4,value2)']
2033     : 1-------1----1---1---------------
2033     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', 'vote(node4,value2)']
2034     : --1---1--1------1----------------
2034     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node4,value1)']
2035     : -1----1--1-------1---------------
2035     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node4,value2)']
2036     : --1----1--1----1-----------------
2036     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node4,value0)']
2037     : 1------1--1------1---------------
2037     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node4,value2)']
2038     : -1------1--1---1-----------------
2038     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node4,value0)']
2039     : 1-------1--1----1----------------
2039     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node4,value1)']
2040     : --1---1-----1---1----------------
2040     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', 'vote(node4,value1)']
2041     : -1----1-----1----1---------------
2041     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', 'vote(node4,value2)']
2042     : --1----1-----1-1-----------------
2042     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', 'vote(node4,value0)']
2043     : 1------1-----1---1---------------
2043     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', 'vote(node4,value2)']
2044     : -1------1-----11-----------------
2044     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', 'vote(node4,value0)']
2045     : 1-------1-----1-1----------------
2045     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', 'vote(node4,value1)']
2046     : --1-1-1-----1--------------------
2046     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node3,value0)']
2047     : -1---11-----1--------------------
2047     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node3,value0)']
2048     : --11---1-----1-------------------
2048     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node3,value1)']
2049     : 1----1-1-----1-------------------
2049     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node3,value1)']
2050     : -1-1----1-----1------------------
2050     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node3,value2)']
2051     : 1---1---1-----1------------------
2051     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node3,value2)']
2052     : --1-1-1--------1-----------------
2052     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node4,value0)']
2053     : -1---11--------1-----------------
2053     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node4,value0)']
2054     : --11---1--------1----------------
2054     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node4,value1)']
2055     : 1----1-1--------1----------------
2055     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node4,value1)']
2056     : -1-1----1--------1---------------
2056     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node4,value2)']
2057     : 1---1---1--------1---------------
2057     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node4,value2)']
2058     : --1-1-1--1-----------------------
2058     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node2,value0)']
2059     : -1---11--1-----------------------
2059     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node2,value0)']
2060     : --11---1--1----------------------
2060     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node2,value1)']
2061     : 1----1-1--1----------------------
2061     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node2,value1)']
2062     : -1-1----1--1---------------------
2062     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node2,value2)']
2063     : 1---1---1--1---------------------
2063     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node2,value2)']
2064     : --1----1-1--1--------------------
2064     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', 'vote(node3,value0)']
2065     : -1------11--1--------------------
2065     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node3,value0)']
2066     : --1---1---1--1-------------------
2066     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', 'vote(node3,value1)']
2067     : 1-------1-1--1-------------------
2067     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', 'vote(node3,value1)']
2068     : -1----1----1--1------------------
2068     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', 'vote(node3,value2)']
2069     : 1------1---1--1------------------
2069     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', 'vote(node3,value2)']
2070     : --1----1-1-----1-----------------
2070     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', 'vote(node4,value0)']
2071     : -1------11-----1-----------------
2071     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node4,value0)']
2072     : --1---1---1-----1----------------
2072     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', 'vote(node4,value1)']
2073     : 1-------1-1-----1----------------
2073     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', 'vote(node4,value1)']
2074     : -1----1----1-----1---------------
2074     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', 'vote(node4,value2)']
2075     : 1------1---1-----1---------------
2075     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', 'vote(node4,value2)']
2076     : --1------1---1-1-----------------
2076     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', 'vote(node4,value0)']
2077     : -1-------1----11-----------------
2077     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', 'vote(node4,value0)']
2078     : --1-------1-1---1----------------
2078     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', 'vote(node4,value1)']
2079     : 1---------1---1-1----------------
2079     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', 'vote(node4,value1)']
2080     : -1---------11----1---------------
2080     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', 'vote(node4,value2)']
2081     : 1----------1-1---1---------------
2081     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', 'vote(node4,value2)']
2082     : --1------1--1---1----------------
2082     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', 'vote(node4,value1)']
2083     : -1-------1--1----1---------------
2083     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', 'vote(node4,value2)']
2084     : --1-------1--1-1-----------------
2084     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', 'vote(node4,value0)']
2085     : 1---------1--1---1---------------
2085     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', 'vote(node4,value2)']
2086     : -1---------1--11-----------------
2086     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', 'vote(node4,value0)']
2087     : 1----------1--1-1----------------
2087     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', 'vote(node4,value1)']
2088     : --1-1----1--1--------------------
2088     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', 'vote(node3,value0)']
2089     : -1---1---1--1--------------------
2089     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', 'vote(node3,value0)']
2090     : --11------1--1-------------------
2090     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node3,value1)']
2091     : 1----1----1--1-------------------
2091     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', 'vote(node3,value1)']
2092     : -1-1-------1--1------------------
2092     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', 'vote(node3,value2)']
2093     : 1---1------1--1------------------
2093     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', 'vote(node3,value2)']
2094     : --1-1----1-----1-----------------
2094     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', 'vote(node4,value0)']
2095     : -1---1---1-----1-----------------
2095     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', 'vote(node4,value0)']
2096     : --11------1-----1----------------
2096     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node4,value1)']
2097     : 1----1----1-----1----------------
2097     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', 'vote(node4,value1)']
2098     : -1-1-------1-----1---------------
2098     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', 'vote(node4,value2)']
2099     : 1---1------1-----1---------------
2099     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', 'vote(node4,value2)']
2100     : --1----1----1--1-----------------
2100     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', 'vote(node4,value0)']
2101     : -1------1---1--1-----------------
2101     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', 'vote(node4,value0)']
2102     : --1---1------1--1----------------
2102     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', 'vote(node4,value1)']
2103     : 1-------1----1--1----------------
2103     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', 'vote(node4,value1)']
2104     : -1----1-------1--1---------------
2104     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', 'vote(node4,value2)']
2105     : 1------1------1--1---------------
2105     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', 'vote(node4,value2)']
2106     : --1-------1-1--1-----------------
2106     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', 'vote(node4,value0)']
2107     : -1---------11--1-----------------
2107     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', 'vote(node4,value0)']
2108     : --1------1---1--1----------------
2108     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', 'vote(node4,value1)']
2109     : 1----------1-1--1----------------
2109     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', 'vote(node4,value1)']
2110     : -1-------1----1--1---------------
2110     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', 'vote(node4,value2)']
2111     : 1---------1---1--1---------------
2111     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', 'vote(node4,value2)']
2112     : --1-1-------1--1-----------------
2112     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', 'vote(node4,value0)']
2113     : -1---1------1--1-----------------
2113     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', 'vote(node4,value0)']
2114     : --11---------1--1----------------
2114     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', 'vote(node4,value1)']
2115     : 1----1-------1--1----------------
2115     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', 'vote(node4,value1)']
2116     : -1-1----------1--1---------------
2116     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', 'vote(node4,value2)']
2117     : 1---1---------1--1---------------
2117     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', 'vote(node4,value2)']
2418 (*) : --11--------1--1-----------------
2418     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2419     : -1-1--------1--1-----------------
2419     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2420     : --1-1--------1--1----------------
2420     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2421     : 1---1--------1--1----------------
2421     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2422     : -1---1--------1--1---------------
2422     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2423     : 1----1--------1--1---------------
2423     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2424     : --11-----1-----1-----------------
2424     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node4,value0)']
2425     : -1-1-----1-----1-----------------
2425     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node4,value0)']
2426     : --1-1-----1-----1----------------
2426     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node4,value1)']
2427     : 1---1-----1-----1----------------
2427     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node4,value1)']
2428     : -1---1-----1-----1---------------
2428     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node4,value2)']
2429     : 1----1-----1-----1---------------
2429     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node4,value2)']
2430     : --11-----1--1--------------------
2430     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node3,value0)']
2431     : -1-1-----1--1--------------------
2431     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node3,value0)']
2432     : --1-1-----1--1-------------------
2432     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node3,value1)']
2433     : 1---1-----1--1-------------------
2433     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node3,value1)']
2434     : -1---1-----1--1------------------
2434     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node3,value2)']
2435     : 1----1-----1--1------------------
2435     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node3,value2)']
2436     : --11--1--------1-----------------
2436     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node4,value0)']
2437     : -1-1--1--------1-----------------
2437     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node4,value0)']
2438     : --1-1--1--------1----------------
2438     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node4,value1)']
2439     : 1---1--1--------1----------------
2439     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node4,value1)']
2440     : -1---1--1--------1---------------
2440     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node4,value2)']
2441     : 1----1--1--------1---------------
2441     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node4,value2)']
2442     : --11--1-----1--------------------
2442     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node3,value0)']
2443     : -1-1--1-----1--------------------
2443     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node3,value0)']
2444     : --1-1--1-----1-------------------
2444     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node3,value1)']
2445     : 1---1--1-----1-------------------
2445     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node3,value1)']
2446     : -1---1--1-----1------------------
2446     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node3,value2)']
2447     : 1----1--1-----1------------------
2447     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node3,value2)']
2448     : --11--1--1-----------------------
2448     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node2,value0)']
2449     : -1-1--1--1-----------------------
2449     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node2,value0)']
2450     : --1-1--1--1----------------------
2450     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node2,value1)']
2451     : 1---1--1--1----------------------
2451     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node2,value1)']
2452     : -1---1--1--1---------------------
2452     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node2,value2)']
2453     : 1----1--1--1---------------------
2453     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node2,value2)']
2454     : --1---1-----1--1-----------------
2454     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2455     : -1----1-----1--1-----------------
2455     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2456     : --1----1-----1--1----------------
2456     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2457     : 1------1-----1--1----------------
2457     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2458     : -1------1-----1--1---------------
2458     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2459     : 1-------1-----1--1---------------
2459     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2460     : --1---1--1-----1-----------------
2460     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node4,value0)']
2461     : -1----1--1-----1-----------------
2461     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node4,value0)']
2462     : --1----1--1-----1----------------
2462     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node4,value1)']
2463     : 1------1--1-----1----------------
2463     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node4,value1)']
2464     : -1------1--1-----1---------------
2464     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node4,value2)']
2465     : 1-------1--1-----1---------------
2465     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node4,value2)']
2466     : --1---1--1--1--------------------
2466     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node3,value0)']
2467     : -1----1--1--1--------------------
2467     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node3,value0)']
2468     : --1----1--1--1-------------------
2468     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node3,value1)']
2469     : 1------1--1--1-------------------
2469     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node3,value1)']
2470     : -1------1--1--1------------------
2470     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node3,value2)']
2471     : 1-------1--1--1------------------
2471     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node3,value2)']
2472     : --1------1--1--1-----------------
2472     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2473     : -1-------1--1--1-----------------
2473     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2474     : --1-------1--1--1----------------
2474     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2475     : 1---------1--1--1----------------
2475     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2476     : -1---------1--1--1---------------
2476     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2477     : 1----------1--1--1---------------
2477     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 120
num_suborbits: 1
2118 (*) : --11---------------0------------0
2118     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2119     : -1-1---------------0------------0
2119     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2120     : --1-1--------------0------------0
2120     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2121     : 1---1--------------0------------0
2121     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2122     : -1---1-------------0------------0
2122     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2123     : 1----1-------------0------------0
2123     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2124     : --11----------------0----------0-
2124     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2125     : -1-1----------------0----------0-
2125     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2126     : --1-1---------------0----------0-
2126     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2127     : 1---1---------------0----------0-
2127     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2128     : -1---1--------------0----------0-
2128     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2129     : 1----1--------------0----------0-
2129     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2130     : --11-----------------0--------0--
2130     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2131     : -1-1-----------------0--------0--
2131     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2132     : --1-1----------------0--------0--
2132     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2133     : 1---1----------------0--------0--
2133     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2134     : -1---1---------------0--------0--
2134     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2135     : 1----1---------------0--------0--
2135     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2136     : --11------------------0------0---
2136     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2137     : -1-1------------------0------0---
2137     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2138     : --1-1-----------------0------0---
2138     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2139     : 1---1-----------------0------0---
2139     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2140     : -1---1----------------0------0---
2140     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2141     : 1----1----------------0------0---
2141     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2142     : --1---1-----------0-------------0
2142     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2143     : -1----1-----------0-------------0
2143     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2144     : --1----1----------0-------------0
2144     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2145     : 1------1----------0-------------0
2145     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2146     : -1------1---------0-------------0
2146     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2147     : 1-------1---------0-------------0
2147     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2148     : --1---1-------------0-------0----
2148     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2149     : -1----1-------------0-------0----
2149     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2150     : --1----1------------0-------0----
2150     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2151     : 1------1------------0-------0----
2151     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2152     : -1------1-----------0-------0----
2152     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2153     : 1-------1-----------0-------0----
2153     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2154     : --1---1--------------0-----0-----
2154     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2155     : -1----1--------------0-----0-----
2155     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2156     : --1----1-------------0-----0-----
2156     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2157     : 1------1-------------0-----0-----
2157     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2158     : -1------1------------0-----0-----
2158     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2159     : 1-------1------------0-----0-----
2159     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2160     : --1---1---------------0---0------
2160     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2161     : -1----1---------------0---0------
2161     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2162     : --1----1--------------0---0------
2162     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2163     : 1------1--------------0---0------
2163     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2164     : -1------1-------------0---0------
2164     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2165     : 1-------1-------------0---0------
2165     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2166     : --1------1--------0------------0-
2166     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2167     : -1-------1--------0------------0-
2167     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2168     : --1-------1-------0------------0-
2168     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2169     : 1---------1-------0------------0-
2169     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2170     : -1---------1------0------------0-
2170     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2171     : 1----------1------0------------0-
2171     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2172     : --1------1---------0--------0----
2172     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2173     : -1-------1---------0--------0----
2173     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2174     : --1-------1--------0--------0----
2174     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2175     : 1---------1--------0--------0----
2175     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2176     : -1---------1-------0--------0----
2176     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2177     : 1----------1-------0--------0----
2177     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2178     : --1------1-----------0---0-------
2178     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2179     : -1-------1-----------0---0-------
2179     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2180     : --1-------1----------0---0-------
2180     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2181     : 1---------1----------0---0-------
2181     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2182     : -1---------1---------0---0-------
2182     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2183     : 1----------1---------0---0-------
2183     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2184     : --1------1------------0-0--------
2184     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2185     : -1-------1------------0-0--------
2185     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2186     : --1-------1-----------0-0--------
2186     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2187     : 1---------1-----------0-0--------
2187     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2188     : -1---------1----------0-0--------
2188     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2189     : 1----------1----------0-0--------
2189     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2190     : --1---------1-----0-----------0--
2190     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2191     : -1----------1-----0-----------0--
2191     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2192     : --1----------1----0-----------0--
2192     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2193     : 1------------1----0-----------0--
2193     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2194     : -1------------1---0-----------0--
2194     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2195     : 1-------------1---0-----------0--
2195     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2196     : --1---------1------0-------0-----
2196     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2197     : -1----------1------0-------0-----
2197     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2198     : --1----------1-----0-------0-----
2198     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2199     : 1------------1-----0-------0-----
2199     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2200     : -1------------1----0-------0-----
2200     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2201     : 1-------------1----0-------0-----
2201     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2202     : --1---------1-------0----0-------
2202     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2203     : -1----------1-------0----0-------
2203     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2204     : --1----------1------0----0-------
2204     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2205     : 1------------1------0----0-------
2205     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2206     : -1------------1-----0----0-------
2206     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2207     : 1-------------1-----0----0-------
2207     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2208     : --1---------1---------00---------
2208     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2209     : -1----------1---------00---------
2209     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2210     : --1----------1--------00---------
2210     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2211     : 1------------1--------00---------
2211     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2212     : -1------------1-------00---------
2212     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2213     : 1-------------1-------00---------
2213     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2214     : --1------------1--0----------0---
2214     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2215     : -1-------------1--0----------0---
2215     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2216     : --1-------------1-0----------0---
2216     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2217     : 1---------------1-0----------0---
2217     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2218     : -1---------------10----------0---
2218     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2219     : 1----------------10----------0---
2219     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2220     : --1------------1---0------0------
2220     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2221     : -1-------------1---0------0------
2221     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2222     : --1-------------1--0------0------
2222     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2223     : 1---------------1--0------0------
2223     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2224     : -1---------------1-0------0------
2224     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2225     : 1----------------1-0------0------
2225     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2226     : --1------------1----0---0--------
2226     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2227     : -1-------------1----0---0--------
2227     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2228     : --1-------------1---0---0--------
2228     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2229     : 1---------------1---0---0--------
2229     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2230     : -1---------------1--0---0--------
2230     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2231     : 1----------------1--0---0--------
2231     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2232     : --1------------1-----0-0---------
2232     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2233     : -1-------------1-----0-0---------
2233     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2234     : --1-------------1----0-0---------
2234     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2235     : 1---------------1----0-0---------
2235     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2236     : -1---------------1---0-0---------
2236     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2237     : 1----------------1---0-0---------
2237     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 180
num_suborbits: 1
2238 (*) : --11---------------0-0-----------
2238     : ['decided(value2)', 'vote(node0,value0)', '~voted(node1)', '~voted(node3)']
2239     : -1-1---------------0-0-----------
2239     : ['decided(value1)', 'vote(node0,value0)', '~voted(node1)', '~voted(node3)']
2240     : --1-1--------------0-0-----------
2240     : ['decided(value2)', 'vote(node0,value1)', '~voted(node1)', '~voted(node3)']
2241     : 1---1--------------0-0-----------
2241     : ['decided(value0)', 'vote(node0,value1)', '~voted(node1)', '~voted(node3)']
2242     : -1---1-------------0-0-----------
2242     : ['decided(value1)', 'vote(node0,value2)', '~voted(node1)', '~voted(node3)']
2243     : 1----1-------------0-0-----------
2243     : ['decided(value0)', 'vote(node0,value2)', '~voted(node1)', '~voted(node3)']
2244     : --11---------------0--0----------
2244     : ['decided(value2)', 'vote(node0,value0)', '~voted(node1)', '~voted(node4)']
2245     : -1-1---------------0--0----------
2245     : ['decided(value1)', 'vote(node0,value0)', '~voted(node1)', '~voted(node4)']
2246     : --1-1--------------0--0----------
2246     : ['decided(value2)', 'vote(node0,value1)', '~voted(node1)', '~voted(node4)']
2247     : 1---1--------------0--0----------
2247     : ['decided(value0)', 'vote(node0,value1)', '~voted(node1)', '~voted(node4)']
2248     : -1---1-------------0--0----------
2248     : ['decided(value1)', 'vote(node0,value2)', '~voted(node1)', '~voted(node4)']
2249     : 1----1-------------0--0----------
2249     : ['decided(value0)', 'vote(node0,value2)', '~voted(node1)', '~voted(node4)']
2250     : --11---------------00------------
2250     : ['decided(value2)', 'vote(node0,value0)', '~voted(node1)', '~voted(node2)']
2251     : -1-1---------------00------------
2251     : ['decided(value1)', 'vote(node0,value0)', '~voted(node1)', '~voted(node2)']
2252     : --1-1--------------00------------
2252     : ['decided(value2)', 'vote(node0,value1)', '~voted(node1)', '~voted(node2)']
2253     : 1---1--------------00------------
2253     : ['decided(value0)', 'vote(node0,value1)', '~voted(node1)', '~voted(node2)']
2254     : -1---1-------------00------------
2254     : ['decided(value1)', 'vote(node0,value2)', '~voted(node1)', '~voted(node2)']
2255     : 1----1-------------00------------
2255     : ['decided(value0)', 'vote(node0,value2)', '~voted(node1)', '~voted(node2)']
2256     : --11----------------00-----------
2256     : ['decided(value2)', 'vote(node0,value0)', '~voted(node2)', '~voted(node3)']
2257     : -1-1----------------00-----------
2257     : ['decided(value1)', 'vote(node0,value0)', '~voted(node2)', '~voted(node3)']
2258     : --1-1---------------00-----------
2258     : ['decided(value2)', 'vote(node0,value1)', '~voted(node2)', '~voted(node3)']
2259     : 1---1---------------00-----------
2259     : ['decided(value0)', 'vote(node0,value1)', '~voted(node2)', '~voted(node3)']
2260     : -1---1--------------00-----------
2260     : ['decided(value1)', 'vote(node0,value2)', '~voted(node2)', '~voted(node3)']
2261     : 1----1--------------00-----------
2261     : ['decided(value0)', 'vote(node0,value2)', '~voted(node2)', '~voted(node3)']
2262     : --11----------------0-0----------
2262     : ['decided(value2)', 'vote(node0,value0)', '~voted(node2)', '~voted(node4)']
2263     : -1-1----------------0-0----------
2263     : ['decided(value1)', 'vote(node0,value0)', '~voted(node2)', '~voted(node4)']
2264     : --1-1---------------0-0----------
2264     : ['decided(value2)', 'vote(node0,value1)', '~voted(node2)', '~voted(node4)']
2265     : 1---1---------------0-0----------
2265     : ['decided(value0)', 'vote(node0,value1)', '~voted(node2)', '~voted(node4)']
2266     : -1---1--------------0-0----------
2266     : ['decided(value1)', 'vote(node0,value2)', '~voted(node2)', '~voted(node4)']
2267     : 1----1--------------0-0----------
2267     : ['decided(value0)', 'vote(node0,value2)', '~voted(node2)', '~voted(node4)']
2268     : --11-----------------00----------
2268     : ['decided(value2)', 'vote(node0,value0)', '~voted(node3)', '~voted(node4)']
2269     : -1-1-----------------00----------
2269     : ['decided(value1)', 'vote(node0,value0)', '~voted(node3)', '~voted(node4)']
2270     : --1-1----------------00----------
2270     : ['decided(value2)', 'vote(node0,value1)', '~voted(node3)', '~voted(node4)']
2271     : 1---1----------------00----------
2271     : ['decided(value0)', 'vote(node0,value1)', '~voted(node3)', '~voted(node4)']
2272     : -1---1---------------00----------
2272     : ['decided(value1)', 'vote(node0,value2)', '~voted(node3)', '~voted(node4)']
2273     : 1----1---------------00----------
2273     : ['decided(value0)', 'vote(node0,value2)', '~voted(node3)', '~voted(node4)']
2274     : --1---1-----------0--0-----------
2274     : ['decided(value2)', 'vote(node1,value0)', '~voted(node0)', '~voted(node3)']
2275     : -1----1-----------0--0-----------
2275     : ['decided(value1)', 'vote(node1,value0)', '~voted(node0)', '~voted(node3)']
2276     : --1----1----------0--0-----------
2276     : ['decided(value2)', 'vote(node1,value1)', '~voted(node0)', '~voted(node3)']
2277     : 1------1----------0--0-----------
2277     : ['decided(value0)', 'vote(node1,value1)', '~voted(node0)', '~voted(node3)']
2278     : -1------1---------0--0-----------
2278     : ['decided(value1)', 'vote(node1,value2)', '~voted(node0)', '~voted(node3)']
2279     : 1-------1---------0--0-----------
2279     : ['decided(value0)', 'vote(node1,value2)', '~voted(node0)', '~voted(node3)']
2280     : --1---1-----------0---0----------
2280     : ['decided(value2)', 'vote(node1,value0)', '~voted(node0)', '~voted(node4)']
2281     : -1----1-----------0---0----------
2281     : ['decided(value1)', 'vote(node1,value0)', '~voted(node0)', '~voted(node4)']
2282     : --1----1----------0---0----------
2282     : ['decided(value2)', 'vote(node1,value1)', '~voted(node0)', '~voted(node4)']
2283     : 1------1----------0---0----------
2283     : ['decided(value0)', 'vote(node1,value1)', '~voted(node0)', '~voted(node4)']
2284     : -1------1---------0---0----------
2284     : ['decided(value1)', 'vote(node1,value2)', '~voted(node0)', '~voted(node4)']
2285     : 1-------1---------0---0----------
2285     : ['decided(value0)', 'vote(node1,value2)', '~voted(node0)', '~voted(node4)']
2286     : --1---1-----------0-0------------
2286     : ['decided(value2)', 'vote(node1,value0)', '~voted(node0)', '~voted(node2)']
2287     : -1----1-----------0-0------------
2287     : ['decided(value1)', 'vote(node1,value0)', '~voted(node0)', '~voted(node2)']
2288     : --1----1----------0-0------------
2288     : ['decided(value2)', 'vote(node1,value1)', '~voted(node0)', '~voted(node2)']
2289     : 1------1----------0-0------------
2289     : ['decided(value0)', 'vote(node1,value1)', '~voted(node0)', '~voted(node2)']
2290     : -1------1---------0-0------------
2290     : ['decided(value1)', 'vote(node1,value2)', '~voted(node0)', '~voted(node2)']
2291     : 1-------1---------0-0------------
2291     : ['decided(value0)', 'vote(node1,value2)', '~voted(node0)', '~voted(node2)']
2292     : --1---1-------------00-----------
2292     : ['decided(value2)', 'vote(node1,value0)', '~voted(node2)', '~voted(node3)']
2293     : -1----1-------------00-----------
2293     : ['decided(value1)', 'vote(node1,value0)', '~voted(node2)', '~voted(node3)']
2294     : --1----1------------00-----------
2294     : ['decided(value2)', 'vote(node1,value1)', '~voted(node2)', '~voted(node3)']
2295     : 1------1------------00-----------
2295     : ['decided(value0)', 'vote(node1,value1)', '~voted(node2)', '~voted(node3)']
2296     : -1------1-----------00-----------
2296     : ['decided(value1)', 'vote(node1,value2)', '~voted(node2)', '~voted(node3)']
2297     : 1-------1-----------00-----------
2297     : ['decided(value0)', 'vote(node1,value2)', '~voted(node2)', '~voted(node3)']
2298     : --1---1-------------0-0----------
2298     : ['decided(value2)', 'vote(node1,value0)', '~voted(node2)', '~voted(node4)']
2299     : -1----1-------------0-0----------
2299     : ['decided(value1)', 'vote(node1,value0)', '~voted(node2)', '~voted(node4)']
2300     : --1----1------------0-0----------
2300     : ['decided(value2)', 'vote(node1,value1)', '~voted(node2)', '~voted(node4)']
2301     : 1------1------------0-0----------
2301     : ['decided(value0)', 'vote(node1,value1)', '~voted(node2)', '~voted(node4)']
2302     : -1------1-----------0-0----------
2302     : ['decided(value1)', 'vote(node1,value2)', '~voted(node2)', '~voted(node4)']
2303     : 1-------1-----------0-0----------
2303     : ['decided(value0)', 'vote(node1,value2)', '~voted(node2)', '~voted(node4)']
2304     : --1---1--------------00----------
2304     : ['decided(value2)', 'vote(node1,value0)', '~voted(node3)', '~voted(node4)']
2305     : -1----1--------------00----------
2305     : ['decided(value1)', 'vote(node1,value0)', '~voted(node3)', '~voted(node4)']
2306     : --1----1-------------00----------
2306     : ['decided(value2)', 'vote(node1,value1)', '~voted(node3)', '~voted(node4)']
2307     : 1------1-------------00----------
2307     : ['decided(value0)', 'vote(node1,value1)', '~voted(node3)', '~voted(node4)']
2308     : -1------1------------00----------
2308     : ['decided(value1)', 'vote(node1,value2)', '~voted(node3)', '~voted(node4)']
2309     : 1-------1------------00----------
2309     : ['decided(value0)', 'vote(node1,value2)', '~voted(node3)', '~voted(node4)']
2310     : --1------1--------0--0-----------
2310     : ['decided(value2)', 'vote(node2,value0)', '~voted(node0)', '~voted(node3)']
2311     : -1-------1--------0--0-----------
2311     : ['decided(value1)', 'vote(node2,value0)', '~voted(node0)', '~voted(node3)']
2312     : --1-------1-------0--0-----------
2312     : ['decided(value2)', 'vote(node2,value1)', '~voted(node0)', '~voted(node3)']
2313     : 1---------1-------0--0-----------
2313     : ['decided(value0)', 'vote(node2,value1)', '~voted(node0)', '~voted(node3)']
2314     : -1---------1------0--0-----------
2314     : ['decided(value1)', 'vote(node2,value2)', '~voted(node0)', '~voted(node3)']
2315     : 1----------1------0--0-----------
2315     : ['decided(value0)', 'vote(node2,value2)', '~voted(node0)', '~voted(node3)']
2316     : --1------1--------0---0----------
2316     : ['decided(value2)', 'vote(node2,value0)', '~voted(node0)', '~voted(node4)']
2317     : -1-------1--------0---0----------
2317     : ['decided(value1)', 'vote(node2,value0)', '~voted(node0)', '~voted(node4)']
2318     : --1-------1-------0---0----------
2318     : ['decided(value2)', 'vote(node2,value1)', '~voted(node0)', '~voted(node4)']
2319     : 1---------1-------0---0----------
2319     : ['decided(value0)', 'vote(node2,value1)', '~voted(node0)', '~voted(node4)']
2320     : -1---------1------0---0----------
2320     : ['decided(value1)', 'vote(node2,value2)', '~voted(node0)', '~voted(node4)']
2321     : 1----------1------0---0----------
2321     : ['decided(value0)', 'vote(node2,value2)', '~voted(node0)', '~voted(node4)']
2322     : --1------1--------00-------------
2322     : ['decided(value2)', 'vote(node2,value0)', '~voted(node0)', '~voted(node1)']
2323     : -1-------1--------00-------------
2323     : ['decided(value1)', 'vote(node2,value0)', '~voted(node0)', '~voted(node1)']
2324     : --1-------1-------00-------------
2324     : ['decided(value2)', 'vote(node2,value1)', '~voted(node0)', '~voted(node1)']
2325     : 1---------1-------00-------------
2325     : ['decided(value0)', 'vote(node2,value1)', '~voted(node0)', '~voted(node1)']
2326     : -1---------1------00-------------
2326     : ['decided(value1)', 'vote(node2,value2)', '~voted(node0)', '~voted(node1)']
2327     : 1----------1------00-------------
2327     : ['decided(value0)', 'vote(node2,value2)', '~voted(node0)', '~voted(node1)']
2328     : --1------1---------0-0-----------
2328     : ['decided(value2)', 'vote(node2,value0)', '~voted(node1)', '~voted(node3)']
2329     : -1-------1---------0-0-----------
2329     : ['decided(value1)', 'vote(node2,value0)', '~voted(node1)', '~voted(node3)']
2330     : --1-------1--------0-0-----------
2330     : ['decided(value2)', 'vote(node2,value1)', '~voted(node1)', '~voted(node3)']
2331     : 1---------1--------0-0-----------
2331     : ['decided(value0)', 'vote(node2,value1)', '~voted(node1)', '~voted(node3)']
2332     : -1---------1-------0-0-----------
2332     : ['decided(value1)', 'vote(node2,value2)', '~voted(node1)', '~voted(node3)']
2333     : 1----------1-------0-0-----------
2333     : ['decided(value0)', 'vote(node2,value2)', '~voted(node1)', '~voted(node3)']
2334     : --1------1---------0--0----------
2334     : ['decided(value2)', 'vote(node2,value0)', '~voted(node1)', '~voted(node4)']
2335     : -1-------1---------0--0----------
2335     : ['decided(value1)', 'vote(node2,value0)', '~voted(node1)', '~voted(node4)']
2336     : --1-------1--------0--0----------
2336     : ['decided(value2)', 'vote(node2,value1)', '~voted(node1)', '~voted(node4)']
2337     : 1---------1--------0--0----------
2337     : ['decided(value0)', 'vote(node2,value1)', '~voted(node1)', '~voted(node4)']
2338     : -1---------1-------0--0----------
2338     : ['decided(value1)', 'vote(node2,value2)', '~voted(node1)', '~voted(node4)']
2339     : 1----------1-------0--0----------
2339     : ['decided(value0)', 'vote(node2,value2)', '~voted(node1)', '~voted(node4)']
2340     : --1------1-----------00----------
2340     : ['decided(value2)', 'vote(node2,value0)', '~voted(node3)', '~voted(node4)']
2341     : -1-------1-----------00----------
2341     : ['decided(value1)', 'vote(node2,value0)', '~voted(node3)', '~voted(node4)']
2342     : --1-------1----------00----------
2342     : ['decided(value2)', 'vote(node2,value1)', '~voted(node3)', '~voted(node4)']
2343     : 1---------1----------00----------
2343     : ['decided(value0)', 'vote(node2,value1)', '~voted(node3)', '~voted(node4)']
2344     : -1---------1---------00----------
2344     : ['decided(value1)', 'vote(node2,value2)', '~voted(node3)', '~voted(node4)']
2345     : 1----------1---------00----------
2345     : ['decided(value0)', 'vote(node2,value2)', '~voted(node3)', '~voted(node4)']
2346     : --1---------1-----0-0------------
2346     : ['decided(value2)', 'vote(node3,value0)', '~voted(node0)', '~voted(node2)']
2347     : -1----------1-----0-0------------
2347     : ['decided(value1)', 'vote(node3,value0)', '~voted(node0)', '~voted(node2)']
2348     : --1----------1----0-0------------
2348     : ['decided(value2)', 'vote(node3,value1)', '~voted(node0)', '~voted(node2)']
2349     : 1------------1----0-0------------
2349     : ['decided(value0)', 'vote(node3,value1)', '~voted(node0)', '~voted(node2)']
2350     : -1------------1---0-0------------
2350     : ['decided(value1)', 'vote(node3,value2)', '~voted(node0)', '~voted(node2)']
2351     : 1-------------1---0-0------------
2351     : ['decided(value0)', 'vote(node3,value2)', '~voted(node0)', '~voted(node2)']
2352     : --1---------1-----0---0----------
2352     : ['decided(value2)', 'vote(node3,value0)', '~voted(node0)', '~voted(node4)']
2353     : -1----------1-----0---0----------
2353     : ['decided(value1)', 'vote(node3,value0)', '~voted(node0)', '~voted(node4)']
2354     : --1----------1----0---0----------
2354     : ['decided(value2)', 'vote(node3,value1)', '~voted(node0)', '~voted(node4)']
2355     : 1------------1----0---0----------
2355     : ['decided(value0)', 'vote(node3,value1)', '~voted(node0)', '~voted(node4)']
2356     : -1------------1---0---0----------
2356     : ['decided(value1)', 'vote(node3,value2)', '~voted(node0)', '~voted(node4)']
2357     : 1-------------1---0---0----------
2357     : ['decided(value0)', 'vote(node3,value2)', '~voted(node0)', '~voted(node4)']
2358     : --1---------1-----00-------------
2358     : ['decided(value2)', 'vote(node3,value0)', '~voted(node0)', '~voted(node1)']
2359     : -1----------1-----00-------------
2359     : ['decided(value1)', 'vote(node3,value0)', '~voted(node0)', '~voted(node1)']
2360     : --1----------1----00-------------
2360     : ['decided(value2)', 'vote(node3,value1)', '~voted(node0)', '~voted(node1)']
2361     : 1------------1----00-------------
2361     : ['decided(value0)', 'vote(node3,value1)', '~voted(node0)', '~voted(node1)']
2362     : -1------------1---00-------------
2362     : ['decided(value1)', 'vote(node3,value2)', '~voted(node0)', '~voted(node1)']
2363     : 1-------------1---00-------------
2363     : ['decided(value0)', 'vote(node3,value2)', '~voted(node0)', '~voted(node1)']
2364     : --1---------1------00------------
2364     : ['decided(value2)', 'vote(node3,value0)', '~voted(node1)', '~voted(node2)']
2365     : -1----------1------00------------
2365     : ['decided(value1)', 'vote(node3,value0)', '~voted(node1)', '~voted(node2)']
2366     : --1----------1-----00------------
2366     : ['decided(value2)', 'vote(node3,value1)', '~voted(node1)', '~voted(node2)']
2367     : 1------------1-----00------------
2367     : ['decided(value0)', 'vote(node3,value1)', '~voted(node1)', '~voted(node2)']
2368     : -1------------1----00------------
2368     : ['decided(value1)', 'vote(node3,value2)', '~voted(node1)', '~voted(node2)']
2369     : 1-------------1----00------------
2369     : ['decided(value0)', 'vote(node3,value2)', '~voted(node1)', '~voted(node2)']
2370     : --1---------1------0--0----------
2370     : ['decided(value2)', 'vote(node3,value0)', '~voted(node1)', '~voted(node4)']
2371     : -1----------1------0--0----------
2371     : ['decided(value1)', 'vote(node3,value0)', '~voted(node1)', '~voted(node4)']
2372     : --1----------1-----0--0----------
2372     : ['decided(value2)', 'vote(node3,value1)', '~voted(node1)', '~voted(node4)']
2373     : 1------------1-----0--0----------
2373     : ['decided(value0)', 'vote(node3,value1)', '~voted(node1)', '~voted(node4)']
2374     : -1------------1----0--0----------
2374     : ['decided(value1)', 'vote(node3,value2)', '~voted(node1)', '~voted(node4)']
2375     : 1-------------1----0--0----------
2375     : ['decided(value0)', 'vote(node3,value2)', '~voted(node1)', '~voted(node4)']
2376     : --1---------1-------0-0----------
2376     : ['decided(value2)', 'vote(node3,value0)', '~voted(node2)', '~voted(node4)']
2377     : -1----------1-------0-0----------
2377     : ['decided(value1)', 'vote(node3,value0)', '~voted(node2)', '~voted(node4)']
2378     : --1----------1------0-0----------
2378     : ['decided(value2)', 'vote(node3,value1)', '~voted(node2)', '~voted(node4)']
2379     : 1------------1------0-0----------
2379     : ['decided(value0)', 'vote(node3,value1)', '~voted(node2)', '~voted(node4)']
2380     : -1------------1-----0-0----------
2380     : ['decided(value1)', 'vote(node3,value2)', '~voted(node2)', '~voted(node4)']
2381     : 1-------------1-----0-0----------
2381     : ['decided(value0)', 'vote(node3,value2)', '~voted(node2)', '~voted(node4)']
2382     : --1------------1--0-0------------
2382     : ['decided(value2)', 'vote(node4,value0)', '~voted(node0)', '~voted(node2)']
2383     : -1-------------1--0-0------------
2383     : ['decided(value1)', 'vote(node4,value0)', '~voted(node0)', '~voted(node2)']
2384     : --1-------------1-0-0------------
2384     : ['decided(value2)', 'vote(node4,value1)', '~voted(node0)', '~voted(node2)']
2385     : 1---------------1-0-0------------
2385     : ['decided(value0)', 'vote(node4,value1)', '~voted(node0)', '~voted(node2)']
2386     : -1---------------10-0------------
2386     : ['decided(value1)', 'vote(node4,value2)', '~voted(node0)', '~voted(node2)']
2387     : 1----------------10-0------------
2387     : ['decided(value0)', 'vote(node4,value2)', '~voted(node0)', '~voted(node2)']
2388     : --1------------1--0--0-----------
2388     : ['decided(value2)', 'vote(node4,value0)', '~voted(node0)', '~voted(node3)']
2389     : -1-------------1--0--0-----------
2389     : ['decided(value1)', 'vote(node4,value0)', '~voted(node0)', '~voted(node3)']
2390     : --1-------------1-0--0-----------
2390     : ['decided(value2)', 'vote(node4,value1)', '~voted(node0)', '~voted(node3)']
2391     : 1---------------1-0--0-----------
2391     : ['decided(value0)', 'vote(node4,value1)', '~voted(node0)', '~voted(node3)']
2392     : -1---------------10--0-----------
2392     : ['decided(value1)', 'vote(node4,value2)', '~voted(node0)', '~voted(node3)']
2393     : 1----------------10--0-----------
2393     : ['decided(value0)', 'vote(node4,value2)', '~voted(node0)', '~voted(node3)']
2394     : --1------------1--00-------------
2394     : ['decided(value2)', 'vote(node4,value0)', '~voted(node0)', '~voted(node1)']
2395     : -1-------------1--00-------------
2395     : ['decided(value1)', 'vote(node4,value0)', '~voted(node0)', '~voted(node1)']
2396     : --1-------------1-00-------------
2396     : ['decided(value2)', 'vote(node4,value1)', '~voted(node0)', '~voted(node1)']
2397     : 1---------------1-00-------------
2397     : ['decided(value0)', 'vote(node4,value1)', '~voted(node0)', '~voted(node1)']
2398     : -1---------------100-------------
2398     : ['decided(value1)', 'vote(node4,value2)', '~voted(node0)', '~voted(node1)']
2399     : 1----------------100-------------
2399     : ['decided(value0)', 'vote(node4,value2)', '~voted(node0)', '~voted(node1)']
2400     : --1------------1---00------------
2400     : ['decided(value2)', 'vote(node4,value0)', '~voted(node1)', '~voted(node2)']
2401     : -1-------------1---00------------
2401     : ['decided(value1)', 'vote(node4,value0)', '~voted(node1)', '~voted(node2)']
2402     : --1-------------1--00------------
2402     : ['decided(value2)', 'vote(node4,value1)', '~voted(node1)', '~voted(node2)']
2403     : 1---------------1--00------------
2403     : ['decided(value0)', 'vote(node4,value1)', '~voted(node1)', '~voted(node2)']
2404     : -1---------------1-00------------
2404     : ['decided(value1)', 'vote(node4,value2)', '~voted(node1)', '~voted(node2)']
2405     : 1----------------1-00------------
2405     : ['decided(value0)', 'vote(node4,value2)', '~voted(node1)', '~voted(node2)']
2406     : --1------------1---0-0-----------
2406     : ['decided(value2)', 'vote(node4,value0)', '~voted(node1)', '~voted(node3)']
2407     : -1-------------1---0-0-----------
2407     : ['decided(value1)', 'vote(node4,value0)', '~voted(node1)', '~voted(node3)']
2408     : --1-------------1--0-0-----------
2408     : ['decided(value2)', 'vote(node4,value1)', '~voted(node1)', '~voted(node3)']
2409     : 1---------------1--0-0-----------
2409     : ['decided(value0)', 'vote(node4,value1)', '~voted(node1)', '~voted(node3)']
2410     : -1---------------1-0-0-----------
2410     : ['decided(value1)', 'vote(node4,value2)', '~voted(node1)', '~voted(node3)']
2411     : 1----------------1-0-0-----------
2411     : ['decided(value0)', 'vote(node4,value2)', '~voted(node1)', '~voted(node3)']
2412     : --1------------1----00-----------
2412     : ['decided(value2)', 'vote(node4,value0)', '~voted(node2)', '~voted(node3)']
2413     : -1-------------1----00-----------
2413     : ['decided(value1)', 'vote(node4,value0)', '~voted(node2)', '~voted(node3)']
2414     : --1-------------1---00-----------
2414     : ['decided(value2)', 'vote(node4,value1)', '~voted(node2)', '~voted(node3)']
2415     : 1---------------1---00-----------
2415     : ['decided(value0)', 'vote(node4,value1)', '~voted(node2)', '~voted(node3)']
2416     : -1---------------1--00-----------
2416     : ['decided(value1)', 'vote(node4,value2)', '~voted(node2)', '~voted(node3)']
2417     : 1----------------1--00-----------
2417     : ['decided(value0)', 'vote(node4,value2)', '~voted(node2)', '~voted(node3)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 60
num_suborbits: 1
2478 (*) : -1-----0--------------0---0------
2478     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value1)', '~voted(node4)']
2479     : --1-----0-------------0---0------
2479     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value2)', '~voted(node4)']
2480     : 1-----0---------------0---0------
2480     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value0)', '~voted(node4)']
2481     : -1-----0-------------0-----0-----
2481     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value1)', '~voted(node3)']
2482     : --1-----0------------0-----0-----
2482     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value2)', '~voted(node3)']
2483     : 1-----0--------------0-----0-----
2483     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value0)', '~voted(node3)']
2484     : -1-----0------------0-------0----
2484     : ['decided(value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value1)', '~voted(node2)']
2485     : --1-----0-----------0-------0----
2485     : ['decided(value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value2)', '~voted(node2)']
2486     : 1-----0-------------0-------0----
2486     : ['decided(value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value0)', '~voted(node2)']
2487     : -1--------0-----------0-0--------
2487     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value1)', '~voted(node4)']
2488     : --1--------0----------0-0--------
2488     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value2)', '~voted(node4)']
2489     : 1--------0------------0-0--------
2489     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value0)', '~voted(node4)']
2490     : -1--------0----------0---0-------
2490     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value1)', '~voted(node3)']
2491     : --1--------0---------0---0-------
2491     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value2)', '~voted(node3)']
2492     : 1--------0-----------0---0-------
2492     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value0)', '~voted(node3)']
2493     : -1--------0--------0--------0----
2493     : ['decided(value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value1)', '~voted(node1)']
2494     : --1--------0-------0--------0----
2494     : ['decided(value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value2)', '~voted(node1)']
2495     : 1--------0---------0--------0----
2495     : ['decided(value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value0)', '~voted(node1)']
2496     : -1-----------0--------00---------
2496     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value1)', '~voted(node4)']
2497     : --1-----------0-------00---------
2497     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value2)', '~voted(node4)']
2498     : 1-----------0---------00---------
2498     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value0)', '~voted(node4)']
2499     : -1-----------0------0----0-------
2499     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value1)', '~voted(node2)']
2500     : --1-----------0-----0----0-------
2500     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value2)', '~voted(node2)']
2501     : 1-----------0-------0----0-------
2501     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value0)', '~voted(node2)']
2502     : -1-----------0-----0-------0-----
2502     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value1)', '~voted(node1)']
2503     : --1-----------0----0-------0-----
2503     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value2)', '~voted(node1)']
2504     : 1-----------0------0-------0-----
2504     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value0)', '~voted(node1)']
2505     : -1--------------0----0-0---------
2505     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value1)', '~voted(node3)']
2506     : --1--------------0---0-0---------
2506     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value2)', '~voted(node3)']
2507     : 1--------------0-----0-0---------
2507     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value0)', '~voted(node3)']
2508     : -1--------------0---0---0--------
2508     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value1)', '~voted(node2)']
2509     : --1--------------0--0---0--------
2509     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value2)', '~voted(node2)']
2510     : 1--------------0----0---0--------
2510     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value0)', '~voted(node2)']
2511     : -1--------------0--0------0------
2511     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value1)', '~voted(node1)']
2512     : --1--------------0-0------0------
2512     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value2)', '~voted(node1)']
2513     : 1--------------0---0------0------
2513     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value0)', '~voted(node1)']
2514     : -1--0-----------------0------0---
2514     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value1)', '~voted(node4)']
2515     : --1--0----------------0------0---
2515     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value2)', '~voted(node4)']
2516     : 1--0------------------0------0---
2516     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value0)', '~voted(node4)']
2517     : -1--0----------------0--------0--
2517     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value1)', '~voted(node3)']
2518     : --1--0---------------0--------0--
2518     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value2)', '~voted(node3)']
2519     : 1--0-----------------0--------0--
2519     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value0)', '~voted(node3)']
2520     : -1--0---------------0----------0-
2520     : ['decided(value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value1)', '~voted(node2)']
2521     : --1--0--------------0----------0-
2521     : ['decided(value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value2)', '~voted(node2)']
2522     : 1--0----------------0----------0-
2522     : ['decided(value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value0)', '~voted(node2)']
2523     : -1--------0-------0------------0-
2523     : ['decided(value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value1)', '~voted(node0)']
2524     : --1--------0------0------------0-
2524     : ['decided(value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value2)', '~voted(node0)']
2525     : 1--------0--------0------------0-
2525     : ['decided(value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value0)', '~voted(node0)']
2526     : -1-----------0----0-----------0--
2526     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value1)', '~voted(node0)']
2527     : --1-----------0---0-----------0--
2527     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value2)', '~voted(node0)']
2528     : 1-----------0-----0-----------0--
2528     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value0)', '~voted(node0)']
2529     : -1--------------0-0----------0---
2529     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value1)', '~voted(node0)']
2530     : --1--------------00----------0---
2530     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value2)', '~voted(node0)']
2531     : 1--------------0--0----------0---
2531     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value0)', '~voted(node0)']
2532     : -1--0--------------0------------0
2532     : ['decided(value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)', '~voted(node1)']
2533     : --1--0-------------0------------0
2533     : ['decided(value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)', '~voted(node1)']
2534     : 1--0---------------0------------0
2534     : ['decided(value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)', '~voted(node1)']
2535     : -1-----0----------0-------------0
2535     : ['decided(value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value1)', '~voted(node0)']
2536     : --1-----0---------0-------------0
2536     : ['decided(value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value2)', '~voted(node0)']
2537     : 1-----0-----------0-------------0
2537     : ['decided(value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value0)', '~voted(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 90
num_suborbits: 1
2538 (*) : -1-----0-----0--------0----------
2538     : ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~voted(node4)']
2539     : --1-----0-----0-------0----------
2539     : ['decided(value2)', '~vote(node1,value2)', '~vote(node3,value2)', '~voted(node4)']
2540     : 1-----0-----0---------0----------
2540     : ['decided(value0)', '~vote(node1,value0)', '~vote(node3,value0)', '~voted(node4)']
2541     : -1-----0--------0----0-----------
2541     : ['decided(value1)', '~vote(node1,value1)', '~vote(node4,value1)', '~voted(node3)']
2542     : --1-----0--------0---0-----------
2542     : ['decided(value2)', '~vote(node1,value2)', '~vote(node4,value2)', '~voted(node3)']
2543     : 1-----0--------0-----0-----------
2543     : ['decided(value0)', '~vote(node1,value0)', '~vote(node4,value0)', '~voted(node3)']
2544     : -1-----0--0-----------0----------
2544     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~voted(node4)']
2545     : --1-----0--0----------0----------
2545     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~voted(node4)']
2546     : 1-----0--0------------0----------
2546     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~voted(node4)']
2547     : -1-----0--------0---0------------
2547     : ['decided(value1)', '~vote(node1,value1)', '~vote(node4,value1)', '~voted(node2)']
2548     : --1-----0--------0--0------------
2548     : ['decided(value2)', '~vote(node1,value2)', '~vote(node4,value2)', '~voted(node2)']
2549     : 1-----0--------0----0------------
2549     : ['decided(value0)', '~vote(node1,value0)', '~vote(node4,value0)', '~voted(node2)']
2550     : -1-----0--0----------0-----------
2550     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~voted(node3)']
2551     : --1-----0--0---------0-----------
2551     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~voted(node3)']
2552     : 1-----0--0-----------0-----------
2552     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~voted(node3)']
2553     : -1-----0-----0------0------------
2553     : ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~voted(node2)']
2554     : --1-----0-----0-----0------------
2554     : ['decided(value2)', '~vote(node1,value2)', '~vote(node3,value2)', '~voted(node2)']
2555     : 1-----0-----0-------0------------
2555     : ['decided(value0)', '~vote(node1,value0)', '~vote(node3,value0)', '~voted(node2)']
2556     : -1--------0--0--------0----------
2556     : ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', '~voted(node4)']
2557     : --1--------0--0-------0----------
2557     : ['decided(value2)', '~vote(node2,value2)', '~vote(node3,value2)', '~voted(node4)']
2558     : 1--------0--0---------0----------
2558     : ['decided(value0)', '~vote(node2,value0)', '~vote(node3,value0)', '~voted(node4)']
2559     : -1--------0-----0----0-----------
2559     : ['decided(value1)', '~vote(node2,value1)', '~vote(node4,value1)', '~voted(node3)']
2560     : --1--------0-----0---0-----------
2560     : ['decided(value2)', '~vote(node2,value2)', '~vote(node4,value2)', '~voted(node3)']
2561     : 1--------0-----0-----0-----------
2561     : ['decided(value0)', '~vote(node2,value0)', '~vote(node4,value0)', '~voted(node3)']
2562     : -1--------0-----0--0-------------
2562     : ['decided(value1)', '~vote(node2,value1)', '~vote(node4,value1)', '~voted(node1)']
2563     : --1--------0-----0-0-------------
2563     : ['decided(value2)', '~vote(node2,value2)', '~vote(node4,value2)', '~voted(node1)']
2564     : 1--------0-----0---0-------------
2564     : ['decided(value0)', '~vote(node2,value0)', '~vote(node4,value0)', '~voted(node1)']
2565     : -1--------0--0-----0-------------
2565     : ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', '~voted(node1)']
2566     : --1--------0--0----0-------------
2566     : ['decided(value2)', '~vote(node2,value2)', '~vote(node3,value2)', '~voted(node1)']
2567     : 1--------0--0------0-------------
2567     : ['decided(value0)', '~vote(node2,value0)', '~vote(node3,value0)', '~voted(node1)']
2568     : -1-----------0--0---0------------
2568     : ['decided(value1)', '~vote(node3,value1)', '~vote(node4,value1)', '~voted(node2)']
2569     : --1-----------0--0--0------------
2569     : ['decided(value2)', '~vote(node3,value2)', '~vote(node4,value2)', '~voted(node2)']
2570     : 1-----------0--0----0------------
2570     : ['decided(value0)', '~vote(node3,value0)', '~vote(node4,value0)', '~voted(node2)']
2571     : -1-----------0--0--0-------------
2571     : ['decided(value1)', '~vote(node3,value1)', '~vote(node4,value1)', '~voted(node1)']
2572     : --1-----------0--0-0-------------
2572     : ['decided(value2)', '~vote(node3,value2)', '~vote(node4,value2)', '~voted(node1)']
2573     : 1-----------0--0---0-------------
2573     : ['decided(value0)', '~vote(node3,value0)', '~vote(node4,value0)', '~voted(node1)']
2574     : -1--0--------0--------0----------
2574     : ['decided(value1)', '~vote(node0,value1)', '~vote(node3,value1)', '~voted(node4)']
2575     : --1--0--------0-------0----------
2575     : ['decided(value2)', '~vote(node0,value2)', '~vote(node3,value2)', '~voted(node4)']
2576     : 1--0--------0---------0----------
2576     : ['decided(value0)', '~vote(node0,value0)', '~vote(node3,value0)', '~voted(node4)']
2577     : -1--0-----------0----0-----------
2577     : ['decided(value1)', '~vote(node0,value1)', '~vote(node4,value1)', '~voted(node3)']
2578     : --1--0-----------0---0-----------
2578     : ['decided(value2)', '~vote(node0,value2)', '~vote(node4,value2)', '~voted(node3)']
2579     : 1--0-----------0-----0-----------
2579     : ['decided(value0)', '~vote(node0,value0)', '~vote(node4,value0)', '~voted(node3)']
2580     : -1--0-----0-----------0----------
2580     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~voted(node4)']
2581     : --1--0-----0----------0----------
2581     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~voted(node4)']
2582     : 1--0-----0------------0----------
2582     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~voted(node4)']
2583     : -1--0-----------0---0------------
2583     : ['decided(value1)', '~vote(node0,value1)', '~vote(node4,value1)', '~voted(node2)']
2584     : --1--0-----------0--0------------
2584     : ['decided(value2)', '~vote(node0,value2)', '~vote(node4,value2)', '~voted(node2)']
2585     : 1--0-----------0----0------------
2585     : ['decided(value0)', '~vote(node0,value0)', '~vote(node4,value0)', '~voted(node2)']
2586     : -1--0-----0----------0-----------
2586     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~voted(node3)']
2587     : --1--0-----0---------0-----------
2587     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~voted(node3)']
2588     : 1--0-----0-----------0-----------
2588     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~voted(node3)']
2589     : -1--0--------0------0------------
2589     : ['decided(value1)', '~vote(node0,value1)', '~vote(node3,value1)', '~voted(node2)']
2590     : --1--0--------0-----0------------
2590     : ['decided(value2)', '~vote(node0,value2)', '~vote(node3,value2)', '~voted(node2)']
2591     : 1--0--------0-------0------------
2591     : ['decided(value0)', '~vote(node0,value0)', '~vote(node3,value0)', '~voted(node2)']
2592     : -1--------0-----0-0--------------
2592     : ['decided(value1)', '~vote(node2,value1)', '~vote(node4,value1)', '~voted(node0)']
2593     : --1--------0-----00--------------
2593     : ['decided(value2)', '~vote(node2,value2)', '~vote(node4,value2)', '~voted(node0)']
2594     : 1--------0-----0--0--------------
2594     : ['decided(value0)', '~vote(node2,value0)', '~vote(node4,value0)', '~voted(node0)']
2595     : -1--------0--0----0--------------
2595     : ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', '~voted(node0)']
2596     : --1--------0--0---0--------------
2596     : ['decided(value2)', '~vote(node2,value2)', '~vote(node3,value2)', '~voted(node0)']
2597     : 1--------0--0-----0--------------
2597     : ['decided(value0)', '~vote(node2,value0)', '~vote(node3,value0)', '~voted(node0)']
2598     : -1-----------0--0-0--------------
2598     : ['decided(value1)', '~vote(node3,value1)', '~vote(node4,value1)', '~voted(node0)']
2599     : --1-----------0--00--------------
2599     : ['decided(value2)', '~vote(node3,value2)', '~vote(node4,value2)', '~voted(node0)']
2600     : 1-----------0--0--0--------------
2600     : ['decided(value0)', '~vote(node3,value0)', '~vote(node4,value0)', '~voted(node0)']
2601     : -1--0--0--------------0----------
2601     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~voted(node4)']
2602     : --1--0--0-------------0----------
2602     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~voted(node4)']
2603     : 1--0--0---------------0----------
2603     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~voted(node4)']
2604     : -1--0-----------0--0-------------
2604     : ['decided(value1)', '~vote(node0,value1)', '~vote(node4,value1)', '~voted(node1)']
2605     : --1--0-----------0-0-------------
2605     : ['decided(value2)', '~vote(node0,value2)', '~vote(node4,value2)', '~voted(node1)']
2606     : 1--0-----------0---0-------------
2606     : ['decided(value0)', '~vote(node0,value0)', '~vote(node4,value0)', '~voted(node1)']
2607     : -1--0--0-------------0-----------
2607     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~voted(node3)']
2608     : --1--0--0------------0-----------
2608     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~voted(node3)']
2609     : 1--0--0--------------0-----------
2609     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~voted(node3)']
2610     : -1--0--------0-----0-------------
2610     : ['decided(value1)', '~vote(node0,value1)', '~vote(node3,value1)', '~voted(node1)']
2611     : --1--0--------0----0-------------
2611     : ['decided(value2)', '~vote(node0,value2)', '~vote(node3,value2)', '~voted(node1)']
2612     : 1--0--------0------0-------------
2612     : ['decided(value0)', '~vote(node0,value0)', '~vote(node3,value0)', '~voted(node1)']
2613     : -1-----0--------0-0--------------
2613     : ['decided(value1)', '~vote(node1,value1)', '~vote(node4,value1)', '~voted(node0)']
2614     : --1-----0--------00--------------
2614     : ['decided(value2)', '~vote(node1,value2)', '~vote(node4,value2)', '~voted(node0)']
2615     : 1-----0--------0--0--------------
2615     : ['decided(value0)', '~vote(node1,value0)', '~vote(node4,value0)', '~voted(node0)']
2616     : -1-----0-----0----0--------------
2616     : ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~voted(node0)']
2617     : --1-----0-----0---0--------------
2617     : ['decided(value2)', '~vote(node1,value2)', '~vote(node3,value2)', '~voted(node0)']
2618     : 1-----0-----0-----0--------------
2618     : ['decided(value0)', '~vote(node1,value0)', '~vote(node3,value0)', '~voted(node0)']
2619     : -1--0--0------------0------------
2619     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~voted(node2)']
2620     : --1--0--0-----------0------------
2620     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~voted(node2)']
2621     : 1--0--0-------------0------------
2621     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~voted(node2)']
2622     : -1--0-----0--------0-------------
2622     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~voted(node1)']
2623     : --1--0-----0-------0-------------
2623     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~voted(node1)']
2624     : 1--0-----0---------0-------------
2624     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~voted(node1)']
2625     : -1-----0--0-------0--------------
2625     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~voted(node0)']
2626     : --1-----0--0------0--------------
2626     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~voted(node0)']
2627     : 1-----0--0--------0--------------
2627     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~voted(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 30
num_suborbits: 1
2628 (*) : -1-------------------000---------
2628     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)', '~voted(node4)']
2629     : --1------------------000---------
2629     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)', '~voted(node4)']
2630     : 1--------------------000---------
2630     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)', '~voted(node4)']
2631     : -1------------------0-0-0--------
2631     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)', '~voted(node4)']
2632     : --1-----------------0-0-0--------
2632     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)', '~voted(node4)']
2633     : 1-------------------0-0-0--------
2633     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)', '~voted(node4)']
2634     : -1------------------00---0-------
2634     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)', '~voted(node3)']
2635     : --1-----------------00---0-------
2635     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)', '~voted(node3)']
2636     : 1-------------------00---0-------
2636     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)', '~voted(node3)']
2637     : -1-----------------0--0---0------
2637     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)', '~voted(node4)']
2638     : --1----------------0--0---0------
2638     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)', '~voted(node4)']
2639     : 1------------------0--0---0------
2639     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)', '~voted(node4)']
2640     : -1-----------------0-0-----0-----
2640     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)', '~voted(node3)']
2641     : --1----------------0-0-----0-----
2641     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)', '~voted(node3)']
2642     : 1------------------0-0-----0-----
2642     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)', '~voted(node3)']
2643     : -1-----------------00-------0----
2643     : ['decided(value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)', '~voted(node2)']
2644     : --1----------------00-------0----
2644     : ['decided(value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)', '~voted(node2)']
2645     : 1------------------00-------0----
2645     : ['decided(value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)', '~voted(node2)']
2646     : -1----------------0---0------0---
2646     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)', '~voted(node4)']
2647     : --1---------------0---0------0---
2647     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)', '~voted(node4)']
2648     : 1-----------------0---0------0---
2648     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)', '~voted(node4)']
2649     : -1----------------0--0--------0--
2649     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)', '~voted(node3)']
2650     : --1---------------0--0--------0--
2650     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)', '~voted(node3)']
2651     : 1-----------------0--0--------0--
2651     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)', '~voted(node3)']
2652     : -1----------------0-0----------0-
2652     : ['decided(value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)', '~voted(node2)']
2653     : --1---------------0-0----------0-
2653     : ['decided(value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)', '~voted(node2)']
2654     : 1-----------------0-0----------0-
2654     : ['decided(value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)', '~voted(node2)']
2655     : -1----------------00------------0
2655     : ['decided(value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)', '~voted(node1)']
2656     : --1---------------00------------0
2656     : ['decided(value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)', '~voted(node1)']
2657     : 1-----------------00------------0
2657     : ['decided(value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)', '~voted(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 90
num_suborbits: 1
2658 (*) : -1-----0-------------00----------
2658     : ['decided(value1)', '~vote(node1,value1)', '~voted(node3)', '~voted(node4)']
2659     : --1-----0------------00----------
2659     : ['decided(value2)', '~vote(node1,value2)', '~voted(node3)', '~voted(node4)']
2660     : 1-----0--------------00----------
2660     : ['decided(value0)', '~vote(node1,value0)', '~voted(node3)', '~voted(node4)']
2661     : -1-----0------------0-0----------
2661     : ['decided(value1)', '~vote(node1,value1)', '~voted(node2)', '~voted(node4)']
2662     : --1-----0-----------0-0----------
2662     : ['decided(value2)', '~vote(node1,value2)', '~voted(node2)', '~voted(node4)']
2663     : 1-----0-------------0-0----------
2663     : ['decided(value0)', '~vote(node1,value0)', '~voted(node2)', '~voted(node4)']
2664     : -1-----0------------00-----------
2664     : ['decided(value1)', '~vote(node1,value1)', '~voted(node2)', '~voted(node3)']
2665     : --1-----0-----------00-----------
2665     : ['decided(value2)', '~vote(node1,value2)', '~voted(node2)', '~voted(node3)']
2666     : 1-----0-------------00-----------
2666     : ['decided(value0)', '~vote(node1,value0)', '~voted(node2)', '~voted(node3)']
2667     : -1--------0----------00----------
2667     : ['decided(value1)', '~vote(node2,value1)', '~voted(node3)', '~voted(node4)']
2668     : --1--------0---------00----------
2668     : ['decided(value2)', '~vote(node2,value2)', '~voted(node3)', '~voted(node4)']
2669     : 1--------0-----------00----------
2669     : ['decided(value0)', '~vote(node2,value0)', '~voted(node3)', '~voted(node4)']
2670     : -1--------0--------0--0----------
2670     : ['decided(value1)', '~vote(node2,value1)', '~voted(node1)', '~voted(node4)']
2671     : --1--------0-------0--0----------
2671     : ['decided(value2)', '~vote(node2,value2)', '~voted(node1)', '~voted(node4)']
2672     : 1--------0---------0--0----------
2672     : ['decided(value0)', '~vote(node2,value0)', '~voted(node1)', '~voted(node4)']
2673     : -1--------0--------0-0-----------
2673     : ['decided(value1)', '~vote(node2,value1)', '~voted(node1)', '~voted(node3)']
2674     : --1--------0-------0-0-----------
2674     : ['decided(value2)', '~vote(node2,value2)', '~voted(node1)', '~voted(node3)']
2675     : 1--------0---------0-0-----------
2675     : ['decided(value0)', '~vote(node2,value0)', '~voted(node1)', '~voted(node3)']
2676     : -1-----------0------0-0----------
2676     : ['decided(value1)', '~vote(node3,value1)', '~voted(node2)', '~voted(node4)']
2677     : --1-----------0-----0-0----------
2677     : ['decided(value2)', '~vote(node3,value2)', '~voted(node2)', '~voted(node4)']
2678     : 1-----------0-------0-0----------
2678     : ['decided(value0)', '~vote(node3,value0)', '~voted(node2)', '~voted(node4)']
2679     : -1-----------0-----0--0----------
2679     : ['decided(value1)', '~vote(node3,value1)', '~voted(node1)', '~voted(node4)']
2680     : --1-----------0----0--0----------
2680     : ['decided(value2)', '~vote(node3,value2)', '~voted(node1)', '~voted(node4)']
2681     : 1-----------0------0--0----------
2681     : ['decided(value0)', '~vote(node3,value0)', '~voted(node1)', '~voted(node4)']
2682     : -1-----------0-----00------------
2682     : ['decided(value1)', '~vote(node3,value1)', '~voted(node1)', '~voted(node2)']
2683     : --1-----------0----00------------
2683     : ['decided(value2)', '~vote(node3,value2)', '~voted(node1)', '~voted(node2)']
2684     : 1-----------0------00------------
2684     : ['decided(value0)', '~vote(node3,value0)', '~voted(node1)', '~voted(node2)']
2685     : -1--------------0---00-----------
2685     : ['decided(value1)', '~vote(node4,value1)', '~voted(node2)', '~voted(node3)']
2686     : --1--------------0--00-----------
2686     : ['decided(value2)', '~vote(node4,value2)', '~voted(node2)', '~voted(node3)']
2687     : 1--------------0----00-----------
2687     : ['decided(value0)', '~vote(node4,value0)', '~voted(node2)', '~voted(node3)']
2688     : -1--------------0--0-0-----------
2688     : ['decided(value1)', '~vote(node4,value1)', '~voted(node1)', '~voted(node3)']
2689     : --1--------------0-0-0-----------
2689     : ['decided(value2)', '~vote(node4,value2)', '~voted(node1)', '~voted(node3)']
2690     : 1--------------0---0-0-----------
2690     : ['decided(value0)', '~vote(node4,value0)', '~voted(node1)', '~voted(node3)']
2691     : -1--------------0--00------------
2691     : ['decided(value1)', '~vote(node4,value1)', '~voted(node1)', '~voted(node2)']
2692     : --1--------------0-00------------
2692     : ['decided(value2)', '~vote(node4,value2)', '~voted(node1)', '~voted(node2)']
2693     : 1--------------0---00------------
2693     : ['decided(value0)', '~vote(node4,value0)', '~voted(node1)', '~voted(node2)']
2694     : -1--0----------------00----------
2694     : ['decided(value1)', '~vote(node0,value1)', '~voted(node3)', '~voted(node4)']
2695     : --1--0---------------00----------
2695     : ['decided(value2)', '~vote(node0,value2)', '~voted(node3)', '~voted(node4)']
2696     : 1--0-----------------00----------
2696     : ['decided(value0)', '~vote(node0,value0)', '~voted(node3)', '~voted(node4)']
2697     : -1--0---------------0-0----------
2697     : ['decided(value1)', '~vote(node0,value1)', '~voted(node2)', '~voted(node4)']
2698     : --1--0--------------0-0----------
2698     : ['decided(value2)', '~vote(node0,value2)', '~voted(node2)', '~voted(node4)']
2699     : 1--0----------------0-0----------
2699     : ['decided(value0)', '~vote(node0,value0)', '~voted(node2)', '~voted(node4)']
2700     : -1--0---------------00-----------
2700     : ['decided(value1)', '~vote(node0,value1)', '~voted(node2)', '~voted(node3)']
2701     : --1--0--------------00-----------
2701     : ['decided(value2)', '~vote(node0,value2)', '~voted(node2)', '~voted(node3)']
2702     : 1--0----------------00-----------
2702     : ['decided(value0)', '~vote(node0,value0)', '~voted(node2)', '~voted(node3)']
2703     : -1--------0-------0---0----------
2703     : ['decided(value1)', '~vote(node2,value1)', '~voted(node0)', '~voted(node4)']
2704     : --1--------0------0---0----------
2704     : ['decided(value2)', '~vote(node2,value2)', '~voted(node0)', '~voted(node4)']
2705     : 1--------0--------0---0----------
2705     : ['decided(value0)', '~vote(node2,value0)', '~voted(node0)', '~voted(node4)']
2706     : -1--------0-------0--0-----------
2706     : ['decided(value1)', '~vote(node2,value1)', '~voted(node0)', '~voted(node3)']
2707     : --1--------0------0--0-----------
2707     : ['decided(value2)', '~vote(node2,value2)', '~voted(node0)', '~voted(node3)']
2708     : 1--------0--------0--0-----------
2708     : ['decided(value0)', '~vote(node2,value0)', '~voted(node0)', '~voted(node3)']
2709     : -1-----------0----0---0----------
2709     : ['decided(value1)', '~vote(node3,value1)', '~voted(node0)', '~voted(node4)']
2710     : --1-----------0---0---0----------
2710     : ['decided(value2)', '~vote(node3,value2)', '~voted(node0)', '~voted(node4)']
2711     : 1-----------0-----0---0----------
2711     : ['decided(value0)', '~vote(node3,value0)', '~voted(node0)', '~voted(node4)']
2712     : -1-----------0----0-0------------
2712     : ['decided(value1)', '~vote(node3,value1)', '~voted(node0)', '~voted(node2)']
2713     : --1-----------0---0-0------------
2713     : ['decided(value2)', '~vote(node3,value2)', '~voted(node0)', '~voted(node2)']
2714     : 1-----------0-----0-0------------
2714     : ['decided(value0)', '~vote(node3,value0)', '~voted(node0)', '~voted(node2)']
2715     : -1--------------0-0--0-----------
2715     : ['decided(value1)', '~vote(node4,value1)', '~voted(node0)', '~voted(node3)']
2716     : --1--------------00--0-----------
2716     : ['decided(value2)', '~vote(node4,value2)', '~voted(node0)', '~voted(node3)']
2717     : 1--------------0--0--0-----------
2717     : ['decided(value0)', '~vote(node4,value0)', '~voted(node0)', '~voted(node3)']
2718     : -1--------------0-0-0------------
2718     : ['decided(value1)', '~vote(node4,value1)', '~voted(node0)', '~voted(node2)']
2719     : --1--------------00-0------------
2719     : ['decided(value2)', '~vote(node4,value2)', '~voted(node0)', '~voted(node2)']
2720     : 1--------------0--0-0------------
2720     : ['decided(value0)', '~vote(node4,value0)', '~voted(node0)', '~voted(node2)']
2721     : -1--0--------------0--0----------
2721     : ['decided(value1)', '~vote(node0,value1)', '~voted(node1)', '~voted(node4)']
2722     : --1--0-------------0--0----------
2722     : ['decided(value2)', '~vote(node0,value2)', '~voted(node1)', '~voted(node4)']
2723     : 1--0---------------0--0----------
2723     : ['decided(value0)', '~vote(node0,value0)', '~voted(node1)', '~voted(node4)']
2724     : -1--0--------------0-0-----------
2724     : ['decided(value1)', '~vote(node0,value1)', '~voted(node1)', '~voted(node3)']
2725     : --1--0-------------0-0-----------
2725     : ['decided(value2)', '~vote(node0,value2)', '~voted(node1)', '~voted(node3)']
2726     : 1--0---------------0-0-----------
2726     : ['decided(value0)', '~vote(node0,value0)', '~voted(node1)', '~voted(node3)']
2727     : -1-----0----------0---0----------
2727     : ['decided(value1)', '~vote(node1,value1)', '~voted(node0)', '~voted(node4)']
2728     : --1-----0---------0---0----------
2728     : ['decided(value2)', '~vote(node1,value2)', '~voted(node0)', '~voted(node4)']
2729     : 1-----0-----------0---0----------
2729     : ['decided(value0)', '~vote(node1,value0)', '~voted(node0)', '~voted(node4)']
2730     : -1-----0----------0--0-----------
2730     : ['decided(value1)', '~vote(node1,value1)', '~voted(node0)', '~voted(node3)']
2731     : --1-----0---------0--0-----------
2731     : ['decided(value2)', '~vote(node1,value2)', '~voted(node0)', '~voted(node3)']
2732     : 1-----0-----------0--0-----------
2732     : ['decided(value0)', '~vote(node1,value0)', '~voted(node0)', '~voted(node3)']
2733     : -1-----------0----00-------------
2733     : ['decided(value1)', '~vote(node3,value1)', '~voted(node0)', '~voted(node1)']
2734     : --1-----------0---00-------------
2734     : ['decided(value2)', '~vote(node3,value2)', '~voted(node0)', '~voted(node1)']
2735     : 1-----------0-----00-------------
2735     : ['decided(value0)', '~vote(node3,value0)', '~voted(node0)', '~voted(node1)']
2736     : -1--------------0-00-------------
2736     : ['decided(value1)', '~vote(node4,value1)', '~voted(node0)', '~voted(node1)']
2737     : --1--------------000-------------
2737     : ['decided(value2)', '~vote(node4,value2)', '~voted(node0)', '~voted(node1)']
2738     : 1--------------0--00-------------
2738     : ['decided(value0)', '~vote(node4,value0)', '~voted(node0)', '~voted(node1)']
2739     : -1--0--------------00------------
2739     : ['decided(value1)', '~vote(node0,value1)', '~voted(node1)', '~voted(node2)']
2740     : --1--0-------------00------------
2740     : ['decided(value2)', '~vote(node0,value2)', '~voted(node1)', '~voted(node2)']
2741     : 1--0---------------00------------
2741     : ['decided(value0)', '~vote(node0,value0)', '~voted(node1)', '~voted(node2)']
2742     : -1-----0----------0-0------------
2742     : ['decided(value1)', '~vote(node1,value1)', '~voted(node0)', '~voted(node2)']
2743     : --1-----0---------0-0------------
2743     : ['decided(value2)', '~vote(node1,value2)', '~voted(node0)', '~voted(node2)']
2744     : 1-----0-----------0-0------------
2744     : ['decided(value0)', '~vote(node1,value0)', '~voted(node0)', '~voted(node2)']
2745     : -1--------0-------00-------------
2745     : ['decided(value1)', '~vote(node2,value1)', '~voted(node0)', '~voted(node1)']
2746     : --1--------0------00-------------
2746     : ['decided(value2)', '~vote(node2,value2)', '~voted(node0)', '~voted(node1)']
2747     : 1--------0--------00-------------
2747     : ['decided(value0)', '~vote(node2,value0)', '~voted(node0)', '~voted(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 30
num_suborbits: 1
2748 (*) : -1----------------0--00----------
2748     : ['decided(value1)', '~voted(node0)', '~voted(node3)', '~voted(node4)']
2749     : --1---------------0--00----------
2749     : ['decided(value2)', '~voted(node0)', '~voted(node3)', '~voted(node4)']
2750     : 1-----------------0--00----------
2750     : ['decided(value0)', '~voted(node0)', '~voted(node3)', '~voted(node4)']
2751     : -1----------------0-0-0----------
2751     : ['decided(value1)', '~voted(node0)', '~voted(node2)', '~voted(node4)']
2752     : --1---------------0-0-0----------
2752     : ['decided(value2)', '~voted(node0)', '~voted(node2)', '~voted(node4)']
2753     : 1-----------------0-0-0----------
2753     : ['decided(value0)', '~voted(node0)', '~voted(node2)', '~voted(node4)']
2754     : -1----------------0-00-----------
2754     : ['decided(value1)', '~voted(node0)', '~voted(node2)', '~voted(node3)']
2755     : --1---------------0-00-----------
2755     : ['decided(value2)', '~voted(node0)', '~voted(node2)', '~voted(node3)']
2756     : 1-----------------0-00-----------
2756     : ['decided(value0)', '~voted(node0)', '~voted(node2)', '~voted(node3)']
2757     : -1----------------00--0----------
2757     : ['decided(value1)', '~voted(node0)', '~voted(node1)', '~voted(node4)']
2758     : --1---------------00--0----------
2758     : ['decided(value2)', '~voted(node0)', '~voted(node1)', '~voted(node4)']
2759     : 1-----------------00--0----------
2759     : ['decided(value0)', '~voted(node0)', '~voted(node1)', '~voted(node4)']
2760     : -1----------------00-0-----------
2760     : ['decided(value1)', '~voted(node0)', '~voted(node1)', '~voted(node3)']
2761     : --1---------------00-0-----------
2761     : ['decided(value2)', '~voted(node0)', '~voted(node1)', '~voted(node3)']
2762     : 1-----------------00-0-----------
2762     : ['decided(value0)', '~voted(node0)', '~voted(node1)', '~voted(node3)']
2763     : -1----------------000------------
2763     : ['decided(value1)', '~voted(node0)', '~voted(node1)', '~voted(node2)']
2764     : --1---------------000------------
2764     : ['decided(value2)', '~voted(node0)', '~voted(node1)', '~voted(node2)']
2765     : 1-----------------000------------
2765     : ['decided(value0)', '~voted(node0)', '~voted(node1)', '~voted(node2)']
2766     : -1-----------------0-00----------
2766     : ['decided(value1)', '~voted(node1)', '~voted(node3)', '~voted(node4)']
2767     : --1----------------0-00----------
2767     : ['decided(value2)', '~voted(node1)', '~voted(node3)', '~voted(node4)']
2768     : 1------------------0-00----------
2768     : ['decided(value0)', '~voted(node1)', '~voted(node3)', '~voted(node4)']
2769     : -1-----------------00-0----------
2769     : ['decided(value1)', '~voted(node1)', '~voted(node2)', '~voted(node4)']
2770     : --1----------------00-0----------
2770     : ['decided(value2)', '~voted(node1)', '~voted(node2)', '~voted(node4)']
2771     : 1------------------00-0----------
2771     : ['decided(value0)', '~voted(node1)', '~voted(node2)', '~voted(node4)']
2772     : -1-----------------000-----------
2772     : ['decided(value1)', '~voted(node1)', '~voted(node2)', '~voted(node3)']
2773     : --1----------------000-----------
2773     : ['decided(value2)', '~voted(node1)', '~voted(node2)', '~voted(node3)']
2774     : 1------------------000-----------
2774     : ['decided(value0)', '~voted(node1)', '~voted(node2)', '~voted(node3)']
2775     : -1------------------000----------
2775     : ['decided(value1)', '~voted(node2)', '~voted(node3)', '~voted(node4)']
2776     : --1-----------------000----------
2776     : ['decided(value2)', '~voted(node2)', '~voted(node3)', '~voted(node4)']
2777     : 1-------------------000----------
2777     : ['decided(value0)', '~voted(node2)', '~voted(node3)', '~voted(node4)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 30
num_suborbits: 1
2778 (*) : -1--------0--0-----------0-------
2778     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value1)', '~vote(node3,value1)']
2779     : --1--------0--0----------0-------
2779     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value2)', '~vote(node3,value2)']
2780     : 1--------0--0------------0-------
2780     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value0)', '~vote(node3,value0)']
2781     : -1--------0-----0-------0--------
2781     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value1)', '~vote(node4,value1)']
2782     : --1--------0-----0------0--------
2782     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value2)', '~vote(node4,value2)']
2783     : 1--------0-----0--------0--------
2783     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value0)', '~vote(node4,value0)']
2784     : -1-----------0--0------0---------
2784     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value1)', '~vote(node4,value1)']
2785     : --1-----------0--0-----0---------
2785     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value2)', '~vote(node4,value2)']
2786     : 1-----------0--0-------0---------
2786     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value0)', '~vote(node4,value0)']
2787     : -1-----0-----0-------------0-----
2787     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value1)', '~vote(node3,value1)']
2788     : --1-----0-----0------------0-----
2788     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value2)', '~vote(node3,value2)']
2789     : 1-----0-----0--------------0-----
2789     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value0)', '~vote(node3,value0)']
2790     : -1-----0--------0---------0------
2790     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value1)', '~vote(node4,value1)']
2791     : --1-----0--------0--------0------
2791     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value2)', '~vote(node4,value2)']
2792     : 1-----0--------0----------0------
2792     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value0)', '~vote(node4,value0)']
2793     : -1-----0--0-----------------0----
2793     : ['decided(value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value1)', '~vote(node2,value1)']
2794     : --1-----0--0----------------0----
2794     : ['decided(value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value2)', '~vote(node2,value2)']
2795     : 1-----0--0------------------0----
2795     : ['decided(value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value0)', '~vote(node2,value0)']
2796     : -1--0--------0----------------0--
2796     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value1)', '~vote(node3,value1)']
2797     : --1--0--------0---------------0--
2797     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value2)', '~vote(node3,value2)']
2798     : 1--0--------0-----------------0--
2798     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value0)', '~vote(node3,value0)']
2799     : -1--0-----------0------------0---
2799     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value1)', '~vote(node4,value1)']
2800     : --1--0-----------0-----------0---
2800     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value2)', '~vote(node4,value2)']
2801     : 1--0-----------0-------------0---
2801     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value0)', '~vote(node4,value0)']
2802     : -1--0-----0--------------------0-
2802     : ['decided(value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value1)', '~vote(node2,value1)']
2803     : --1--0-----0-------------------0-
2803     : ['decided(value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value2)', '~vote(node2,value2)']
2804     : 1--0-----0---------------------0-
2804     : ['decided(value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value0)', '~vote(node2,value0)']
2805     : -1--0--0------------------------0
2805     : ['decided(value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)', '~vote(node1,value1)']
2806     : --1--0--0-----------------------0
2806     : ['decided(value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)', '~vote(node1,value2)']
2807     : 1--0--0-------------------------0
2807     : ['decided(value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)', '~vote(node1,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 30
num_suborbits: 1
2808 (*) : -1--0-----0--0-------------------
2808     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~vote(node3,value1)']
2809     : --1--0-----0--0------------------
2809     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~vote(node3,value2)']
2810     : 1--0-----0--0--------------------
2810     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~vote(node3,value0)']
2811     : -1--0-----0-----0----------------
2811     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~vote(node4,value1)']
2812     : --1--0-----0-----0---------------
2812     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~vote(node4,value2)']
2813     : 1--0-----0-----0-----------------
2813     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~vote(node4,value0)']
2814     : -1--0--------0--0----------------
2814     : ['decided(value1)', '~vote(node0,value1)', '~vote(node3,value1)', '~vote(node4,value1)']
2815     : --1--0--------0--0---------------
2815     : ['decided(value2)', '~vote(node0,value2)', '~vote(node3,value2)', '~vote(node4,value2)']
2816     : 1--0--------0--0-----------------
2816     : ['decided(value0)', '~vote(node0,value0)', '~vote(node3,value0)', '~vote(node4,value0)']
2817     : -1--0--0-----0-------------------
2817     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node3,value1)']
2818     : --1--0--0-----0------------------
2818     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node3,value2)']
2819     : 1--0--0-----0--------------------
2819     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node3,value0)']
2820     : -1--0--0--------0----------------
2820     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node4,value1)']
2821     : --1--0--0--------0---------------
2821     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node4,value2)']
2822     : 1--0--0--------0-----------------
2822     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node4,value0)']
2823     : -1--0--0--0----------------------
2823     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node2,value1)']
2824     : --1--0--0--0---------------------
2824     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node2,value2)']
2825     : 1--0--0--0-----------------------
2825     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node2,value0)']
2826     : -1-----0--0--0-------------------
2826     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~vote(node3,value1)']
2827     : --1-----0--0--0------------------
2827     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~vote(node3,value2)']
2828     : 1-----0--0--0--------------------
2828     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~vote(node3,value0)']
2829     : -1-----0--0-----0----------------
2829     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~vote(node4,value1)']
2830     : --1-----0--0-----0---------------
2830     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~vote(node4,value2)']
2831     : 1-----0--0-----0-----------------
2831     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~vote(node4,value0)']
2832     : -1-----0-----0--0----------------
2832     : ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~vote(node4,value1)']
2833     : --1-----0-----0--0---------------
2833     : ['decided(value2)', '~vote(node1,value2)', '~vote(node3,value2)', '~vote(node4,value2)']
2834     : 1-----0-----0--0-----------------
2834     : ['decided(value0)', '~vote(node1,value0)', '~vote(node3,value0)', '~vote(node4,value0)']
2835     : -1--------0--0--0----------------
2835     : ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', '~vote(node4,value1)']
2836     : --1--------0--0--0---------------
2836     : ['decided(value2)', '~vote(node2,value2)', '~vote(node3,value2)', '~vote(node4,value2)']
2837     : 1--------0--0--0-----------------
2837     : ['decided(value0)', '~vote(node2,value0)', '~vote(node3,value0)', '~vote(node4,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 5
num_suborbits: 1
2838 (*) : ------000----------1-------------
2838     : ['voted(node1)', '~vote(node1,value0)', '~vote(node1,value1)', '~vote(node1,value2)']
2839     : ---------000--------1------------
2839     : ['voted(node2)', '~vote(node2,value0)', '~vote(node2,value1)', '~vote(node2,value2)']
2840     : ------------000------1-----------
2840     : ['voted(node3)', '~vote(node3,value0)', '~vote(node3,value1)', '~vote(node3,value2)']
2841     : ---------------000----1----------
2841     : ['voted(node4)', '~vote(node4,value0)', '~vote(node4,value1)', '~vote(node4,value2)']
2842     : ---000------------1--------------
2842     : ['voted(node0)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 30
num_suborbits: 1
2843 (*) : -1------------1--------0-0-0--0--
2843     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2844     : --1----------1---------0-0-0--0--
2844     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2845     : 1-------------1--------0-0-0--0--
2845     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2846     : --1---------1----------0-0-0--0--
2846     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2847     : 1------------1---------0-0-0--0--
2847     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2848     : -1----------1----------0-0-0--0--
2848     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2849     : -1---------------1-----00-0--0---
2849     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2850     : --1-------------1------00-0--0---
2850     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2851     : 1----------------1-----00-0--0---
2851     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2852     : --1------------1-------00-0--0---
2852     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2853     : 1---------------1------00-0--0---
2853     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2854     : -1-------------1-------00-0--0---
2854     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2855     : -1---------1------------00--0--0-
2855     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2856     : --1-------1-------------00--0--0-
2856     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2857     : 1----------1------------00--0--0-
2857     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2858     : --1------1--------------00--0--0-
2858     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2859     : 1---------1-------------00--0--0-
2859     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2860     : -1-------1--------------00--0--0-
2860     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2861     : -1------1-----------------000---0
2861     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2862     : --1----1------------------000---0
2862     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2863     : 1-------1-----------------000---0
2863     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2864     : --1---1-------------------000---0
2864     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2865     : 1------1------------------000---0
2865     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2866     : -1----1-------------------000---0
2866     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2867     : -1---1-----------------------0000
2867     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2868     : --1-1------------------------0000
2868     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2869     : 1----1-----------------------0000
2869     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2870     : --11-------------------------0000
2870     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2871     : 1---1------------------------0000
2871     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2872     : -1-1-------------------------0000
2872     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 15
num_suborbits: 1
2873 (*) : -1-------------------0-0-0-0--0--
2873     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2874     : --1------------------0-0-0-0--0--
2874     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2875     : 1--------------------0-0-0-0--0--
2875     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2876     : -1--------------------000-0--0---
2876     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2877     : --1-------------------000-0--0---
2877     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2878     : 1---------------------000-0--0---
2878     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2879     : -1------------------0---00--0--0-
2879     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2880     : --1-----------------0---00--0--0-
2880     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2881     : 1-------------------0---00--0--0-
2881     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2882     : -1-----------------0------000---0
2882     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2883     : --1----------------0------000---0
2883     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2884     : 1------------------0------000---0
2884     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2885     : -1----------------0----------0000
2885     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2886     : --1---------------0----------0000
2886     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2887     : 1-----------------0----------0000
2887     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 15
num_suborbits: 1
2888 (*) : -1-----0------------------000---0
2888     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value1)']
2889     : --1-----0-----------------000---0
2889     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value2)']
2890     : 1-----0-------------------000---0
2890     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value0)']
2891     : -1--------0-------------00--0--0-
2891     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value1)']
2892     : --1--------0------------00--0--0-
2892     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value2)']
2893     : 1--------0--------------00--0--0-
2893     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value0)']
2894     : -1-----------0---------0-0-0--0--
2894     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value1)']
2895     : --1-----------0--------0-0-0--0--
2895     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value2)']
2896     : 1-----------0----------0-0-0--0--
2896     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value0)']
2897     : -1--------------0------00-0--0---
2897     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value1)']
2898     : --1--------------0-----00-0--0---
2898     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value2)']
2899     : 1--------------0-------00-0--0---
2899     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value0)']
2900     : -1--0------------------------0000
2900     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)']
2901     : --1--0-----------------------0000
2901     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)']
2902     : 1--0-------------------------0000
2902     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 1
num_suborbits: 1
2903 (*) : -----------------------0000000000
2903     : ['~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 28

[PRIME NOTE]: number of orbits before merging: 33

[PRIME NOTE]: number of primes: 2904

[QRM NOTE]: Time elapsed since start: 45.188 seconds

[QRM NOTE]: Time elapsed since last: 22.421 seconds

[QRM NOTE]: Peak memory: 10636996 bytes


===========================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/toy_consensus_forall.ivy: node=5,value=3]

===========================================================================================================

definition primes: {0, 27}


New level: 0
 pending : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]
 solution : []


Before reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]
 solution : []

Essensial at level 0 : {1, 2, 23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2417851639229258349412352), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, 604462909807314587353088), (22, 604462909807314587353088), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26]
 solution : [1, 2, 23]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2417851639229258349412352), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, 604462909807314587353088), (22, 604462909807314587353088), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2417851639229258349412352), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, 604462909807314587353088), (22, 604462909807314587353088), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26]
 solution : [1, 2, 23]

[QRM NOTE]: Time elapsed since start: 45.929 seconds

[QRM NOTE]: Time elapsed since last: 0.740 seconds

[QRM NOTE]: Peak memory: 9690886 bytes


===============================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/toy_consensus_forall.ivy: node=5,value=3]

===============================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 1 =====================
size : 15
num_suborbits: 1
45 (*) : ------1-1------------------------
45     : ['vote(node1,value0)', 'vote(node1,value2)']
46     : ------11-------------------------
46     : ['vote(node1,value0)', 'vote(node1,value1)']
47     : -------11------------------------
47     : ['vote(node1,value1)', 'vote(node1,value2)']
48     : ---------1-1---------------------
48     : ['vote(node2,value0)', 'vote(node2,value2)']
49     : ---------11----------------------
49     : ['vote(node2,value0)', 'vote(node2,value1)']
50     : ----------11---------------------
50     : ['vote(node2,value1)', 'vote(node2,value2)']
51     : ------------1-1------------------
51     : ['vote(node3,value0)', 'vote(node3,value2)']
52     : ------------11-------------------
52     : ['vote(node3,value0)', 'vote(node3,value1)']
53     : -------------11------------------
53     : ['vote(node3,value1)', 'vote(node3,value2)']
54     : ---------------1-1---------------
54     : ['vote(node4,value0)', 'vote(node4,value2)']
55     : ---------------11----------------
55     : ['vote(node4,value0)', 'vote(node4,value1)']
56     : ----------------11---------------
56     : ['vote(node4,value1)', 'vote(node4,value2)']
57     : ---1-1---------------------------
57     : ['vote(node0,value0)', 'vote(node0,value2)']
58     : ---11----------------------------
58     : ['vote(node0,value0)', 'vote(node0,value1)']
59     : ----11---------------------------
59     : ['vote(node0,value1)', 'vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['vote(node1,value0)', 'vote(node1,value2)']

sign_func_name2args: {'0$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0, node$0$vote$0$1], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$1]}

sig2const: {'node$0$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$1': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0; node$0$vote$0$1], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$vote$1$0, value$0$vote$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0; node$0$vote$0$1, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$vote$1$0 | value$0$vote$1$1}

part_sig: ('node$0$vote$0$0; node$0$vote$0$1', 'value$0$vote$1$0 | value$0$vote$1$1')


---------- SigGenerator ----------

terms:  ['vote(node1,value0)', 'vote(node1,value2)']

func_name2symbol:  {'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')))}

sign_func_name2count:  {'0$vote': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0; node$0$vote$0$1], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$vote$1$0, value$0$vote$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0; node$0$vote$0$1, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$vote$1$0 | value$0$vote$1$1}

	sort: node

	identical_classes: {'node$0$vote$0; node$0$vote$0': [node$0$vote$0$0; node$0$vote$0$1]}

	identical_single_classes: {'node$0$vote$0; node$0$vote$0': node$0$vote$0$0; node$0$vote$0$1}

	identical_multi_classes: {}

	sort: value

	identical_classes: {'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall

quantifier mode: value: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['vote(NODE0,VALUE1)', 'vote(NODE0,VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall VALUE1,NODE0,VALUE0. ~vote(NODE0,VALUE1) | ~vote(NODE0,VALUE0) | VALUE0 = VALUE1


=== Prime Orbit 2 =====================
size : 15
num_suborbits: 1
60 (*) : --------1----------0-------------
60     : ['vote(node1,value2)', '~voted(node1)']
61     : -------1-----------0-------------
61     : ['vote(node1,value1)', '~voted(node1)']
62     : ------1------------0-------------
62     : ['vote(node1,value0)', '~voted(node1)']
63     : -----------1--------0------------
63     : ['vote(node2,value2)', '~voted(node2)']
64     : ----------1---------0------------
64     : ['vote(node2,value1)', '~voted(node2)']
65     : ---------1----------0------------
65     : ['vote(node2,value0)', '~voted(node2)']
66     : --------------1------0-----------
66     : ['vote(node3,value2)', '~voted(node3)']
67     : -------------1-------0-----------
67     : ['vote(node3,value1)', '~voted(node3)']
68     : ------------1--------0-----------
68     : ['vote(node3,value0)', '~voted(node3)']
69     : -----------------1----0----------
69     : ['vote(node4,value2)', '~voted(node4)']
70     : ----------------1-----0----------
70     : ['vote(node4,value1)', '~voted(node4)']
71     : ---------------1------0----------
71     : ['vote(node4,value0)', '~voted(node4)']
72     : -----1------------0--------------
72     : ['vote(node0,value2)', '~voted(node0)']
73     : ----1-------------0--------------
73     : ['vote(node0,value1)', '~voted(node0)']
74     : ---1--------------0--------------
74     : ['vote(node0,value0)', '~voted(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['vote(node1,value2)', '~voted(node1)']

sign_func_name2args: {'0$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voted': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0, node$1$voted$0$0], Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0]}

sig2const: {'node$0$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$voted$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0; node$1$voted$0$0], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$vote$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0; node$1$voted$0$0, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$vote$1$0}

part_sig: ('node$0$vote$0$0; node$1$voted$0$0', 'value$0$vote$1$0')


---------- SigGenerator ----------

terms:  ['vote(node1,value2)', '~voted(node1)']

func_name2symbol:  {'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voted': Const('voted', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), BooleanSort()))}

func_name2args_sort:  {'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voted': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')),)}

sign_func_name2count:  {'0$vote': 1, '1$voted': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0; node$1$voted$0$0], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$vote$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0; node$1$voted$0$0, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$vote$1$0}

	sort: node

	identical_classes: {'node$0$vote$0; node$1$voted$0': [node$0$vote$0$0; node$1$voted$0$0]}

	identical_single_classes: {'node$0$vote$0; node$1$voted$0': node$0$vote$0$0; node$1$voted$0$0}

	identical_multi_classes: {}

	sort: value

	identical_classes: {'value$0$vote$1': [value$0$vote$1$0]}

	identical_single_classes: {'value$0$vote$1': value$0$vote$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall

quantifier mode: value: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voted': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~voted(NODE0)', 'vote(NODE0,VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,VALUE0. voted(NODE0) | ~vote(NODE0,VALUE0)


=== Prime Orbit 23 =====================
size : 5
num_suborbits: 1
2838 (*) : ------000----------1-------------
2838     : ['voted(node1)', '~vote(node1,value0)', '~vote(node1,value1)', '~vote(node1,value2)']
2839     : ---------000--------1------------
2839     : ['voted(node2)', '~vote(node2,value0)', '~vote(node2,value1)', '~vote(node2,value2)']
2840     : ------------000------1-----------
2840     : ['voted(node3)', '~vote(node3,value0)', '~vote(node3,value1)', '~vote(node3,value2)']
2841     : ---------------000----1----------
2841     : ['voted(node4)', '~vote(node4,value0)', '~vote(node4,value1)', '~vote(node4,value2)']
2842     : ---000------------1--------------
2842     : ['voted(node0)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~vote(node1,value0)', '~vote(node1,value1)', '~vote(node1,value2)', 'voted(node1)']

sign_func_name2args: {'1$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$voted': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$0, node$1$vote$0$1, node$1$vote$0$2, node$0$voted$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$1$vote$1$0], Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$1$vote$1$1], Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$1$vote$1$2]}

sig2const: {'node$1$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$1': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$2': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$voted$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$voted$0$0; node$1$vote$0$0; node$1$vote$0$1; node$1$vote$0$2], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$1$vote$1$0, value$1$vote$1$1, value$1$vote$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$voted$0$0; node$1$vote$0$0; node$1$vote$0$1; node$1$vote$0$2, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$1$vote$1$0 | value$1$vote$1$1 | value$1$vote$1$2}

part_sig: ('node$0$voted$0$0; node$1$vote$0$0; node$1$vote$0$1; node$1$vote$0$2', 'value$1$vote$1$0 | value$1$vote$1$1 | value$1$vote$1$2')


---------- SigGenerator ----------

terms:  ['~vote(node1,value0)', '~vote(node1,value1)', '~vote(node1,value2)', 'voted(node1)']

func_name2symbol:  {'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voted': Const('voted', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), BooleanSort()))}

func_name2args_sort:  {'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voted': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')),)}

sign_func_name2count:  {'1$vote': 3, '0$voted': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$voted$0$0; node$1$vote$0$0; node$1$vote$0$1; node$1$vote$0$2], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$1$vote$1$0, value$1$vote$1$1, value$1$vote$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$voted$0$0; node$1$vote$0$0; node$1$vote$0$1; node$1$vote$0$2, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$1$vote$1$0 | value$1$vote$1$1 | value$1$vote$1$2}

	sort: node

	identical_classes: {'node$0$voted$0; node$1$vote$0; node$1$vote$0; node$1$vote$0': [node$0$voted$0$0; node$1$vote$0$0; node$1$vote$0$1; node$1$vote$0$2]}

	identical_single_classes: {'node$0$voted$0; node$1$vote$0; node$1$vote$0; node$1$vote$0': node$0$voted$0$0; node$1$vote$0$0; node$1$vote$0$1; node$1$vote$0$2}

	identical_multi_classes: {}

	sort: value

	identical_classes: {'value$1$vote$1': [value$1$vote$1$0, value$1$vote$1$1, value$1$vote$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'value$1$vote$1': [value$1$vote$1$0, value$1$vote$1$1, value$1$vote$1$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall

quantifier mode: value: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}

exists_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$voted': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~vote(NODE0,VALUE0)', 'voted(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. (exists VALUE0. vote(NODE0,VALUE0) | ~voted(NODE0))


=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
75 (*) : 1-1------------------------------
75     : ['decided(value0)', 'decided(value2)']
76     : 11-------------------------------
76     : ['decided(value0)', 'decided(value1)']
77     : -11------------------------------
77     : ['decided(value1)', 'decided(value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value0)', 'decided(value2)']

sign_func_name2args: {'0$decided': [(Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))),), (Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)]}

const2sigs: {Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$1]}

sig2const: {'value$0$decided$0$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'value$0$decided$0$1': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$decided$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$decided$0$1}

part_sig: ('value$0$decided$0$0 | value$0$decided$0$1',)


---------- SigGenerator ----------

terms:  ['decided(value0)', 'decided(value2)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),)}

sign_func_name2count:  {'0$decided': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$decided$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$decided$0$1}

	sort: value

	identical_classes: {'value$0$decided$0': [value$0$decided$0$0, value$0$decided$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'value$0$decided$0': [value$0$decided$0$0, value$0$decided$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['decided(VALUE0)', 'decided(VALUE1)']


---------- QFormula: get_qclause ----------

qclause: forall VALUE1,VALUE0. ~decided(VALUE0) | ~decided(VALUE1) | VALUE0 = VALUE1


=== Prime Orbit 4 =====================
size : 180
num_suborbits: 1
78 (*) : --1---------1------------------1-
78     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node3,value0)']
79     : -1----------1------------------1-
79     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node3,value0)']
80     : --1----------1-----------------1-
80     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node3,value1)']
81     : 1------------1-----------------1-
81     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node3,value1)']
82     : -1------------1----------------1-
82     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node3,value2)']
83     : 1-------------1----------------1-
83     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node3,value2)']
84     : --1------------1---------------1-
84     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node4,value0)']
85     : -1-------------1---------------1-
85     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node4,value0)']
86     : --1-------------1--------------1-
86     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node4,value1)']
87     : 1---------------1--------------1-
87     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node4,value1)']
88     : -1---------------1-------------1-
88     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node4,value2)']
89     : 1----------------1-------------1-
89     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node4,value2)']
90     : --1------1--------------------1--
90     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node2,value0)']
91     : -1-------1--------------------1--
91     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node2,value0)']
92     : --1-------1-------------------1--
92     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node2,value1)']
93     : 1---------1-------------------1--
93     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node2,value1)']
94     : -1---------1------------------1--
94     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node2,value2)']
95     : 1----------1------------------1--
95     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node2,value2)']
96     : --1------------1--------------1--
96     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node4,value0)']
97     : -1-------------1--------------1--
97     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node4,value0)']
98     : --1-------------1-------------1--
98     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node4,value1)']
99     : 1---------------1-------------1--
99     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node4,value1)']
100     : -1---------------1------------1--
100     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node4,value2)']
101     : 1----------------1------------1--
101     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node4,value2)']
102     : --1------1-------------------1---
102     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node2,value0)']
103     : -1-------1-------------------1---
103     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node2,value0)']
104     : --1-------1------------------1---
104     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node2,value1)']
105     : 1---------1------------------1---
105     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node2,value1)']
106     : -1---------1-----------------1---
106     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node2,value2)']
107     : 1----------1-----------------1---
107     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node2,value2)']
108     : --1---------1----------------1---
108     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node3,value0)']
109     : -1----------1----------------1---
109     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node3,value0)']
110     : --1----------1---------------1---
110     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node3,value1)']
111     : 1------------1---------------1---
111     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node3,value1)']
112     : -1------------1--------------1---
112     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node3,value2)']
113     : 1-------------1--------------1---
113     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node3,value2)']
114     : --1---------1-------------------1
114     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node3,value0)']
115     : -1----------1-------------------1
115     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node3,value0)']
116     : --1----------1------------------1
116     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node3,value1)']
117     : 1------------1------------------1
117     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node3,value1)']
118     : -1------------1-----------------1
118     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node3,value2)']
119     : 1-------------1-----------------1
119     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node3,value2)']
120     : --1------------1----------------1
120     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node4,value0)']
121     : -1-------------1----------------1
121     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node4,value0)']
122     : --1-------------1---------------1
122     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node4,value1)']
123     : 1---------------1---------------1
123     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node4,value1)']
124     : -1---------------1--------------1
124     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node4,value2)']
125     : 1----------------1--------------1
125     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node4,value2)']
126     : --1---1-----------------------1--
126     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node1,value0)']
127     : -1----1-----------------------1--
127     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node1,value0)']
128     : --1----1----------------------1--
128     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node1,value1)']
129     : 1------1----------------------1--
129     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node1,value1)']
130     : -1------1---------------------1--
130     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node1,value2)']
131     : 1-------1---------------------1--
131     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node1,value2)']
132     : --1---1----------------------1---
132     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node1,value0)']
133     : -1----1----------------------1---
133     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node1,value0)']
134     : --1----1---------------------1---
134     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node1,value1)']
135     : 1------1---------------------1---
135     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node1,value1)']
136     : -1------1--------------------1---
136     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node1,value2)']
137     : 1-------1--------------------1---
137     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node1,value2)']
138     : --1------1----------------------1
138     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node2,value0)']
139     : -1-------1----------------------1
139     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node2,value0)']
140     : --1-------1---------------------1
140     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node2,value1)']
141     : 1---------1---------------------1
141     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node2,value1)']
142     : -1---------1--------------------1
142     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node2,value2)']
143     : 1----------1--------------------1
143     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node2,value2)']
144     : --1---1------------------------1-
144     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node1,value0)']
145     : -1----1------------------------1-
145     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node1,value0)']
146     : --1----1-----------------------1-
146     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node1,value1)']
147     : 1------1-----------------------1-
147     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node1,value1)']
148     : -1------1----------------------1-
148     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node1,value2)']
149     : 1-------1----------------------1-
149     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node1,value2)']
150     : --1---------1---------------1----
150     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node3,value0)']
151     : -1----------1---------------1----
151     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node3,value0)']
152     : --1----------1--------------1----
152     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node3,value1)']
153     : 1------------1--------------1----
153     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node3,value1)']
154     : -1------------1-------------1----
154     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node3,value2)']
155     : 1-------------1-------------1----
155     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node3,value2)']
156     : --1------------1------------1----
156     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node4,value0)']
157     : -1-------------1------------1----
157     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node4,value0)']
158     : --1-------------1-----------1----
158     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node4,value1)']
159     : 1---------------1-----------1----
159     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node4,value1)']
160     : -1---------------1----------1----
160     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node4,value2)']
161     : 1----------------1----------1----
161     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node4,value2)']
162     : --1------1-----------------1-----
162     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node2,value0)']
163     : -1-------1-----------------1-----
163     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node2,value0)']
164     : --1-------1----------------1-----
164     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node2,value1)']
165     : 1---------1----------------1-----
165     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node2,value1)']
166     : -1---------1---------------1-----
166     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node2,value2)']
167     : 1----------1---------------1-----
167     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node2,value2)']
168     : --1------------1-----------1-----
168     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node4,value0)']
169     : -1-------------1-----------1-----
169     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node4,value0)']
170     : --1-------------1----------1-----
170     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node4,value1)']
171     : 1---------------1----------1-----
171     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node4,value1)']
172     : -1---------------1---------1-----
172     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node4,value2)']
173     : 1----------------1---------1-----
173     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node4,value2)']
174     : --1------1----------------1------
174     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node2,value0)']
175     : -1-------1----------------1------
175     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node2,value0)']
176     : --1-------1---------------1------
176     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node2,value1)']
177     : 1---------1---------------1------
177     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node2,value1)']
178     : -1---------1--------------1------
178     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node2,value2)']
179     : 1----------1--------------1------
179     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node2,value2)']
180     : --1---------1-------------1------
180     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node3,value0)']
181     : -1----------1-------------1------
181     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node3,value0)']
182     : --1----------1------------1------
182     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node3,value1)']
183     : 1------------1------------1------
183     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node3,value1)']
184     : -1------------1-----------1------
184     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node3,value2)']
185     : 1-------------1-----------1------
185     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node3,value2)']
186     : --11-----------------------1-----
186     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node0,value0)']
187     : -1-1-----------------------1-----
187     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node0,value0)']
188     : --1-1----------------------1-----
188     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node0,value1)']
189     : 1---1----------------------1-----
189     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node0,value1)']
190     : -1---1---------------------1-----
190     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node0,value2)']
191     : 1----1---------------------1-----
191     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node0,value2)']
192     : --11----------------------1------
192     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node0,value0)']
193     : -1-1----------------------1------
193     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node0,value0)']
194     : --1-1---------------------1------
194     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node0,value1)']
195     : 1---1---------------------1------
195     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node0,value1)']
196     : -1---1--------------------1------
196     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node0,value2)']
197     : 1----1--------------------1------
197     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node0,value2)']
198     : --11------------------------1----
198     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node0,value0)']
199     : -1-1------------------------1----
199     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node0,value0)']
200     : --1-1-----------------------1----
200     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node0,value1)']
201     : 1---1-----------------------1----
201     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node0,value1)']
202     : -1---1----------------------1----
202     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node0,value2)']
203     : 1----1----------------------1----
203     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node0,value2)']
204     : --1---1------------------1-------
204     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node1,value0)']
205     : -1----1------------------1-------
205     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node1,value0)']
206     : --1----1-----------------1-------
206     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node1,value1)']
207     : 1------1-----------------1-------
207     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node1,value1)']
208     : -1------1----------------1-------
208     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node1,value2)']
209     : 1-------1----------------1-------
209     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node1,value2)']
210     : --1------------1---------1-------
210     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node4,value0)']
211     : -1-------------1---------1-------
211     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node4,value0)']
212     : --1-------------1--------1-------
212     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node4,value1)']
213     : 1---------------1--------1-------
213     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node4,value1)']
214     : -1---------------1-------1-------
214     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node4,value2)']
215     : 1----------------1-------1-------
215     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node4,value2)']
216     : --1---1-----------------1--------
216     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node1,value0)']
217     : -1----1-----------------1--------
217     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node1,value0)']
218     : --1----1----------------1--------
218     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node1,value1)']
219     : 1------1----------------1--------
219     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node1,value1)']
220     : -1------1---------------1--------
220     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node1,value2)']
221     : 1-------1---------------1--------
221     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node1,value2)']
222     : --1---------1-----------1--------
222     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node3,value0)']
223     : -1----------1-----------1--------
223     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node3,value0)']
224     : --1----------1----------1--------
224     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node3,value1)']
225     : 1------------1----------1--------
225     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node3,value1)']
226     : -1------------1---------1--------
226     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node3,value2)']
227     : 1-------------1---------1--------
227     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node3,value2)']
228     : --11---------------------1-------
228     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node0,value0)']
229     : -1-1---------------------1-------
229     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node0,value0)']
230     : --1-1--------------------1-------
230     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node0,value1)']
231     : 1---1--------------------1-------
231     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node0,value1)']
232     : -1---1-------------------1-------
232     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node0,value2)']
233     : 1----1-------------------1-------
233     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node0,value2)']
234     : --11--------------------1--------
234     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node0,value0)']
235     : -1-1--------------------1--------
235     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node0,value0)']
236     : --1-1-------------------1--------
236     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node0,value1)']
237     : 1---1-------------------1--------
237     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node0,value1)']
238     : -1---1------------------1--------
238     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node0,value2)']
239     : 1----1------------------1--------
239     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node0,value2)']
240     : --1---1----------------1---------
240     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node1,value0)']
241     : -1----1----------------1---------
241     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node1,value0)']
242     : --1----1---------------1---------
242     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node1,value1)']
243     : 1------1---------------1---------
243     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node1,value1)']
244     : -1------1--------------1---------
244     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node1,value2)']
245     : 1-------1--------------1---------
245     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node1,value2)']
246     : --1------1-------------1---------
246     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node2,value0)']
247     : -1-------1-------------1---------
247     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node2,value0)']
248     : --1-------1------------1---------
248     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node2,value1)']
249     : 1---------1------------1---------
249     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node2,value1)']
250     : -1---------1-----------1---------
250     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node2,value2)']
251     : 1----------1-----------1---------
251     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node2,value2)']
252     : --11-------------------1---------
252     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node0,value0)']
253     : -1-1-------------------1---------
253     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node0,value0)']
254     : --1-1------------------1---------
254     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node0,value1)']
255     : 1---1------------------1---------
255     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node0,value1)']
256     : -1---1-----------------1---------
256     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node0,value2)']
257     : 1----1-----------------1---------
257     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node3,value0)', 'voting_quorum = quorum__node1_node3_node4', 'member(node3,quorum__node1_node3_node4)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$voting_quorum=': [(Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),)], '0$member': [(Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0, node$0$member$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$0$voting_quorum=$0$0, quorum$0$member$1$0]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$0$voting_quorum=$0$0': Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$0$member$0$0': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$0$member$1$0': Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$member$0$0; node$0$vote$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$0$member$1$0; quorum$0$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$member$0$0; node$0$vote$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$0$member$1$0; quorum$0$voting_quorum=$0$0}

part_sig: ('node$0$member$0$0; node$0$vote$0$0', 'quorum$0$member$1$0; quorum$0$voting_quorum=$0$0', 'value$0$decided$0$0 | value$0$vote$1$0')


---------- SigGenerator ----------

terms:  ['decided(value2)', 'vote(node3,value0)', 'voting_quorum = quorum__node1_node3_node4', 'member(node3,quorum__node1_node3_node4)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voting_quorum=': Const('voting_quorum', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voting_quorum=': (EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')),), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

sign_func_name2count:  {'0$decided': 1, '0$vote': 1, '0$voting_quorum=': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$member$0$0; node$0$vote$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$0$member$1$0; quorum$0$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$member$0$0; node$0$vote$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$0$member$1$0; quorum$0$voting_quorum=$0$0}

	sort: value

	identical_classes: {'value$0$decided$0': [value$0$decided$0$0], 'value$0$vote$1': [value$0$vote$1$0]}

	identical_single_classes: {'value$0$decided$0': value$0$decided$0$0, 'value$0$vote$1': value$0$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$member$0; node$0$vote$0': [node$0$member$0$0; node$0$vote$0$0]}

	identical_single_classes: {'node$0$member$0; node$0$vote$0': node$0$member$0$0; node$0$vote$0$0}

	identical_multi_classes: {}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$voting_quorum=$0': [quorum$0$member$1$0; quorum$0$voting_quorum=$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$voting_quorum=$0': quorum$0$member$1$0; quorum$0$voting_quorum=$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall

quantifier mode: quorum: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$voting_quorum=': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]], '0$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['vote(NODE0,VALUE1)', 'member(NODE0,QUORUM0)', 'decided(VALUE0)', 'voting_quorum = QUORUM0']


---------- QFormula: get_qclause ----------

qclause: forall VALUE1,QUORUM0,NODE0,VALUE0. ~vote(NODE0,VALUE1) | ~member(NODE0,QUORUM0) | ~decided(VALUE0) | voting_quorum ~= QUORUM0 | VALUE0 = VALUE1


=== Prime Orbit 5 =====================
size : 90
num_suborbits: 1
258 (*) : --1-----0----------------------1-
258     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~vote(node1,value2)']
259     : -1-----0-----------------------1-
259     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~vote(node1,value1)']
260     : 1-----0------------------------1-
260     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~vote(node1,value0)']
261     : --1-----0---------------------1--
261     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~vote(node1,value2)']
262     : -1-----0----------------------1--
262     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~vote(node1,value1)']
263     : 1-----0-----------------------1--
263     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~vote(node1,value0)']
264     : --1-----0--------------------1---
264     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~vote(node1,value2)']
265     : -1-----0---------------------1---
265     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~vote(node1,value1)']
266     : 1-----0----------------------1---
266     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~vote(node1,value0)']
267     : --1--------0--------------------1
267     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~vote(node2,value2)']
268     : -1--------0---------------------1
268     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~vote(node2,value1)']
269     : 1--------0----------------------1
269     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~vote(node2,value0)']
270     : --1--------0------------------1--
270     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~vote(node2,value2)']
271     : -1--------0-------------------1--
271     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~vote(node2,value1)']
272     : 1--------0--------------------1--
272     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~vote(node2,value0)']
273     : --1--------0-----------------1---
273     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~vote(node2,value2)']
274     : -1--------0------------------1---
274     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~vote(node2,value1)']
275     : 1--------0-------------------1---
275     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~vote(node2,value0)']
276     : --1-----------0-----------------1
276     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~vote(node3,value2)']
277     : -1-----------0------------------1
277     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~vote(node3,value1)']
278     : 1-----------0-------------------1
278     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~vote(node3,value0)']
279     : --1-----------0----------------1-
279     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~vote(node3,value2)']
280     : -1-----------0-----------------1-
280     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~vote(node3,value1)']
281     : 1-----------0------------------1-
281     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~vote(node3,value0)']
282     : --1-----------0--------------1---
282     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~vote(node3,value2)']
283     : -1-----------0---------------1---
283     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~vote(node3,value1)']
284     : 1-----------0----------------1---
284     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~vote(node3,value0)']
285     : --1--------------0--------------1
285     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~vote(node4,value2)']
286     : -1--------------0---------------1
286     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~vote(node4,value1)']
287     : 1--------------0----------------1
287     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~vote(node4,value0)']
288     : --1--------------0-------------1-
288     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~vote(node4,value2)']
289     : -1--------------0--------------1-
289     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~vote(node4,value1)']
290     : 1--------------0---------------1-
290     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~vote(node4,value0)']
291     : --1--------------0------------1--
291     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~vote(node4,value2)']
292     : -1--------------0-------------1--
292     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~vote(node4,value1)']
293     : 1--------------0--------------1--
293     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~vote(node4,value0)']
294     : --1--0----------------------1----
294     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~vote(node0,value2)']
295     : -1--0-----------------------1----
295     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~vote(node0,value1)']
296     : 1--0------------------------1----
296     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~vote(node0,value0)']
297     : --1--0---------------------1-----
297     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~vote(node0,value2)']
298     : -1--0----------------------1-----
298     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~vote(node0,value1)']
299     : 1--0-----------------------1-----
299     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~vote(node0,value0)']
300     : --1--0--------------------1------
300     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~vote(node0,value2)']
301     : -1--0---------------------1------
301     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~vote(node0,value1)']
302     : 1--0----------------------1------
302     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~vote(node0,value0)']
303     : --1--------0---------------1-----
303     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~vote(node2,value2)']
304     : -1--------0----------------1-----
304     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~vote(node2,value1)']
305     : 1--------0-----------------1-----
305     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~vote(node2,value0)']
306     : --1--------0--------------1------
306     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~vote(node2,value2)']
307     : -1--------0---------------1------
307     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~vote(node2,value1)']
308     : 1--------0----------------1------
308     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~vote(node2,value0)']
309     : --1-----------0-------------1----
309     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~vote(node3,value2)']
310     : -1-----------0--------------1----
310     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~vote(node3,value1)']
311     : 1-----------0---------------1----
311     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~vote(node3,value0)']
312     : --1-----------0-----------1------
312     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~vote(node3,value2)']
313     : -1-----------0------------1------
313     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~vote(node3,value1)']
314     : 1-----------0-------------1------
314     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~vote(node3,value0)']
315     : --1--------------0----------1----
315     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~vote(node4,value2)']
316     : -1--------------0-----------1----
316     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~vote(node4,value1)']
317     : 1--------------0------------1----
317     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~vote(node4,value0)']
318     : --1--------------0---------1-----
318     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~vote(node4,value2)']
319     : -1--------------0----------1-----
319     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~vote(node4,value1)']
320     : 1--------------0-----------1-----
320     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~vote(node4,value0)']
321     : --1--0-------------------1-------
321     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~vote(node0,value2)']
322     : -1--0--------------------1-------
322     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~vote(node0,value1)']
323     : 1--0---------------------1-------
323     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~vote(node0,value0)']
324     : --1--0------------------1--------
324     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~vote(node0,value2)']
325     : -1--0-------------------1--------
325     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~vote(node0,value1)']
326     : 1--0--------------------1--------
326     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~vote(node0,value0)']
327     : --1-----0----------------1-------
327     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~vote(node1,value2)']
328     : -1-----0-----------------1-------
328     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~vote(node1,value1)']
329     : 1-----0------------------1-------
329     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~vote(node1,value0)']
330     : --1-----0---------------1--------
330     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~vote(node1,value2)']
331     : -1-----0----------------1--------
331     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~vote(node1,value1)']
332     : 1-----0-----------------1--------
332     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~vote(node1,value0)']
333     : --1-----------0---------1--------
333     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~vote(node3,value2)']
334     : -1-----------0----------1--------
334     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~vote(node3,value1)']
335     : 1-----------0-----------1--------
335     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~vote(node3,value0)']
336     : --1--------------0-------1-------
336     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~vote(node4,value2)']
337     : -1--------------0--------1-------
337     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~vote(node4,value1)']
338     : 1--------------0---------1-------
338     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~vote(node4,value0)']
339     : --1--0-----------------1---------
339     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~vote(node0,value2)']
340     : -1--0------------------1---------
340     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~vote(node0,value1)']
341     : 1--0-------------------1---------
341     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~vote(node0,value0)']
342     : --1-----0--------------1---------
342     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~vote(node1,value2)']
343     : -1-----0---------------1---------
343     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~vote(node1,value1)']
344     : 1-----0----------------1---------
344     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~vote(node1,value0)']
345     : --1--------0-----------1---------
345     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~vote(node2,value2)']
346     : -1--------0------------1---------
346     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~vote(node2,value1)']
347     : 1--------0-------------1---------
347     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~vote(node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', '~vote(node1,value2)', 'voting_quorum = quorum__node1_node3_node4', 'member(node1,quorum__node1_node3_node4)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$voting_quorum=': [(Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),)], '0$member': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0, value$1$vote$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$0, node$0$member$0$0], Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$0$voting_quorum=$0$0, quorum$0$member$1$0]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$0$voting_quorum=$0$0': Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$0$member$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$0$member$1$0': Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$member$0$0; node$1$vote$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$0$member$1$0; quorum$0$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$member$0$0; node$1$vote$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$0$member$1$0; quorum$0$voting_quorum=$0$0}

part_sig: ('node$0$member$0$0; node$1$vote$0$0', 'quorum$0$member$1$0; quorum$0$voting_quorum=$0$0', 'value$0$decided$0$0; value$1$vote$1$0')


---------- SigGenerator ----------

terms:  ['decided(value2)', '~vote(node1,value2)', 'voting_quorum = quorum__node1_node3_node4', 'member(node1,quorum__node1_node3_node4)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voting_quorum=': Const('voting_quorum', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voting_quorum=': (EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')),), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

sign_func_name2count:  {'0$decided': 1, '1$vote': 1, '0$voting_quorum=': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$member$0$0; node$1$vote$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$0$member$1$0; quorum$0$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$member$0$0; node$1$vote$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$0$member$1$0; quorum$0$voting_quorum=$0$0}

	sort: value

	identical_classes: {'value$0$decided$0; value$1$vote$1': [value$0$decided$0$0; value$1$vote$1$0]}

	identical_single_classes: {'value$0$decided$0; value$1$vote$1': value$0$decided$0$0; value$1$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$member$0; node$1$vote$0': [node$0$member$0$0; node$1$vote$0$0]}

	identical_single_classes: {'node$0$member$0; node$1$vote$0': node$0$member$0$0; node$1$vote$0$0}

	identical_multi_classes: {}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$voting_quorum=$0': [quorum$0$member$1$0; quorum$0$voting_quorum=$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$voting_quorum=$0': quorum$0$member$1$0; quorum$0$voting_quorum=$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall

quantifier mode: quorum: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$voting_quorum=': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]], '0$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(NODE0,QUORUM0)', '~vote(NODE0,VALUE0)', 'decided(VALUE0)', 'voting_quorum = QUORUM0']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,NODE0,VALUE0. ~member(NODE0,QUORUM0) | vote(NODE0,VALUE0) | ~decided(VALUE0) | voting_quorum ~= QUORUM0


=== Prime Orbit 6 =====================
size : 90
num_suborbits: 1
348 (*) : --1----------------0---------1---
348     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~voted(node1)']
349     : -1-----------------0---------1---
349     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~voted(node1)']
350     : 1------------------0---------1---
350     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~voted(node1)']
351     : --1----------------0----------1--
351     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~voted(node1)']
352     : -1-----------------0----------1--
352     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~voted(node1)']
353     : 1------------------0----------1--
353     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~voted(node1)']
354     : --1----------------0-----------1-
354     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~voted(node1)']
355     : -1-----------------0-----------1-
355     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~voted(node1)']
356     : 1------------------0-----------1-
356     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~voted(node1)']
357     : --1-----------------0--------1---
357     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~voted(node2)']
358     : -1------------------0--------1---
358     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~voted(node2)']
359     : 1-------------------0--------1---
359     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~voted(node2)']
360     : --1-----------------0---------1--
360     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~voted(node2)']
361     : -1------------------0---------1--
361     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~voted(node2)']
362     : 1-------------------0---------1--
362     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~voted(node2)']
363     : --1-----------------0-----------1
363     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~voted(node2)']
364     : -1------------------0-----------1
364     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~voted(node2)']
365     : 1-------------------0-----------1
365     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~voted(node2)']
366     : --1------------------0-------1---
366     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~voted(node3)']
367     : -1-------------------0-------1---
367     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~voted(node3)']
368     : 1--------------------0-------1---
368     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~voted(node3)']
369     : --1------------------0---------1-
369     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~voted(node3)']
370     : -1-------------------0---------1-
370     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~voted(node3)']
371     : 1--------------------0---------1-
371     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~voted(node3)']
372     : --1------------------0----------1
372     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~voted(node3)']
373     : -1-------------------0----------1
373     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~voted(node3)']
374     : 1--------------------0----------1
374     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~voted(node3)']
375     : --1-------------------0-------1--
375     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~voted(node4)']
376     : -1--------------------0-------1--
376     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~voted(node4)']
377     : 1---------------------0-------1--
377     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~voted(node4)']
378     : --1-------------------0--------1-
378     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~voted(node4)']
379     : -1--------------------0--------1-
379     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~voted(node4)']
380     : 1---------------------0--------1-
380     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~voted(node4)']
381     : --1-------------------0---------1
381     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~voted(node4)']
382     : -1--------------------0---------1
382     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~voted(node4)']
383     : 1---------------------0---------1
383     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~voted(node4)']
384     : --1---------------0-------1------
384     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~voted(node0)']
385     : -1----------------0-------1------
385     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~voted(node0)']
386     : 1-----------------0-------1------
386     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~voted(node0)']
387     : --1---------------0--------1-----
387     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~voted(node0)']
388     : -1----------------0--------1-----
388     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~voted(node0)']
389     : 1-----------------0--------1-----
389     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~voted(node0)']
390     : --1---------------0---------1----
390     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~voted(node0)']
391     : -1----------------0---------1----
391     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~voted(node0)']
392     : 1-----------------0---------1----
392     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~voted(node0)']
393     : --1-----------------0-----1------
393     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~voted(node2)']
394     : -1------------------0-----1------
394     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~voted(node2)']
395     : 1-------------------0-----1------
395     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~voted(node2)']
396     : --1-----------------0------1-----
396     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~voted(node2)']
397     : -1------------------0------1-----
397     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~voted(node2)']
398     : 1-------------------0------1-----
398     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~voted(node2)']
399     : --1------------------0----1------
399     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~voted(node3)']
400     : -1-------------------0----1------
400     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~voted(node3)']
401     : 1--------------------0----1------
401     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~voted(node3)']
402     : --1------------------0------1----
402     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~voted(node3)']
403     : -1-------------------0------1----
403     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~voted(node3)']
404     : 1--------------------0------1----
404     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~voted(node3)']
405     : --1-------------------0----1-----
405     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~voted(node4)']
406     : -1--------------------0----1-----
406     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~voted(node4)']
407     : 1---------------------0----1-----
407     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~voted(node4)']
408     : --1-------------------0-----1----
408     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~voted(node4)']
409     : -1--------------------0-----1----
409     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~voted(node4)']
410     : 1---------------------0-----1----
410     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~voted(node4)']
411     : --1---------------0-----1--------
411     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~voted(node0)']
412     : -1----------------0-----1--------
412     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~voted(node0)']
413     : 1-----------------0-----1--------
413     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~voted(node0)']
414     : --1---------------0------1-------
414     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~voted(node0)']
415     : -1----------------0------1-------
415     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~voted(node0)']
416     : 1-----------------0------1-------
416     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~voted(node0)']
417     : --1----------------0----1--------
417     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~voted(node1)']
418     : -1-----------------0----1--------
418     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~voted(node1)']
419     : 1------------------0----1--------
419     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~voted(node1)']
420     : --1----------------0-----1-------
420     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~voted(node1)']
421     : -1-----------------0-----1-------
421     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~voted(node1)']
422     : 1------------------0-----1-------
422     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~voted(node1)']
423     : --1------------------0--1--------
423     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~voted(node3)']
424     : -1-------------------0--1--------
424     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~voted(node3)']
425     : 1--------------------0--1--------
425     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~voted(node3)']
426     : --1-------------------0--1-------
426     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~voted(node4)']
427     : -1--------------------0--1-------
427     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~voted(node4)']
428     : 1---------------------0--1-------
428     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~voted(node4)']
429     : --1---------------0----1---------
429     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~voted(node0)']
430     : -1----------------0----1---------
430     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~voted(node0)']
431     : 1-----------------0----1---------
431     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~voted(node0)']
432     : --1----------------0---1---------
432     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~voted(node1)']
433     : -1-----------------0---1---------
433     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~voted(node1)']
434     : 1------------------0---1---------
434     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~voted(node1)']
435     : --1-----------------0--1---------
435     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~voted(node2)']
436     : -1------------------0--1---------
436     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~voted(node2)']
437     : 1-------------------0--1---------
437     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~voted(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', '~voted(node1)', 'voting_quorum = quorum__node1_node2_node3', 'member(node1,quorum__node1_node2_node3)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$voted': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)], '0$voting_quorum=': [(Const('quorum__node1_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),)], '0$member': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node1_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$0, node$0$member$0$0], Const('quorum__node1_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$0$voting_quorum=$0$0, quorum$0$member$1$0]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$voted$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$0$voting_quorum=$0$0': Const('quorum__node1_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$0$member$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$0$member$1$0': Const('quorum__node1_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$member$0$0; node$1$voted$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$0$member$1$0; quorum$0$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$member$0$0; node$1$voted$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$0$member$1$0; quorum$0$voting_quorum=$0$0}

part_sig: ('node$0$member$0$0; node$1$voted$0$0', 'quorum$0$member$1$0; quorum$0$voting_quorum=$0$0', 'value$0$decided$0$0')


---------- SigGenerator ----------

terms:  ['decided(value2)', '~voted(node1)', 'voting_quorum = quorum__node1_node2_node3', 'member(node1,quorum__node1_node2_node3)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voted': Const('voted', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), BooleanSort())), 'voting_quorum=': Const('voting_quorum', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'voted': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')),), 'voting_quorum=': (EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')),), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

sign_func_name2count:  {'0$decided': 1, '1$voted': 1, '0$voting_quorum=': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$member$0$0; node$1$voted$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$0$member$1$0; quorum$0$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$member$0$0; node$1$voted$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$0$member$1$0; quorum$0$voting_quorum=$0$0}

	sort: value

	identical_classes: {'value$0$decided$0': [value$0$decided$0$0]}

	identical_single_classes: {'value$0$decided$0': value$0$decided$0$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$member$0; node$1$voted$0': [node$0$member$0$0; node$1$voted$0$0]}

	identical_single_classes: {'node$0$member$0; node$1$voted$0': node$0$member$0$0; node$1$voted$0$0}

	identical_multi_classes: {}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$voting_quorum=$0': [quorum$0$member$1$0; quorum$0$voting_quorum=$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$voting_quorum=$0': quorum$0$member$1$0; quorum$0$voting_quorum=$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall

quantifier mode: quorum: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voted': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))]], '0$voting_quorum=': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]], '0$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(NODE0,QUORUM0)', '~voted(NODE0)', 'decided(VALUE0)', 'voting_quorum = QUORUM0']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,NODE0,VALUE0. ~member(NODE0,QUORUM0) | voted(NODE0) | ~decided(VALUE0) | voting_quorum ~= QUORUM0


=== Prime Orbit 7 =====================
size : 360
num_suborbits: 1
438 (*) : --11-------0-------0-------------
438     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~voted(node1)']
439     : -1-1------0--------0-------------
439     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~voted(node1)']
440     : --1-1------0-------0-------------
440     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~voted(node1)']
441     : 1---1----0---------0-------------
441     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~voted(node1)']
442     : -1---1----0--------0-------------
442     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~voted(node1)']
443     : 1----1---0---------0-------------
443     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~voted(node1)']
444     : --11----------0----0-------------
444     : ['decided(value2)', 'vote(node0,value0)', '~vote(node3,value2)', '~voted(node1)']
445     : -1-1---------0-----0-------------
445     : ['decided(value1)', 'vote(node0,value0)', '~vote(node3,value1)', '~voted(node1)']
446     : --1-1---------0----0-------------
446     : ['decided(value2)', 'vote(node0,value1)', '~vote(node3,value2)', '~voted(node1)']
447     : 1---1-------0------0-------------
447     : ['decided(value0)', 'vote(node0,value1)', '~vote(node3,value0)', '~voted(node1)']
448     : -1---1-------0-----0-------------
448     : ['decided(value1)', 'vote(node0,value2)', '~vote(node3,value1)', '~voted(node1)']
449     : 1----1------0------0-------------
449     : ['decided(value0)', 'vote(node0,value2)', '~vote(node3,value0)', '~voted(node1)']
450     : --11-------------0-0-------------
450     : ['decided(value2)', 'vote(node0,value0)', '~vote(node4,value2)', '~voted(node1)']
451     : -1-1------------0--0-------------
451     : ['decided(value1)', 'vote(node0,value0)', '~vote(node4,value1)', '~voted(node1)']
452     : --1-1------------0-0-------------
452     : ['decided(value2)', 'vote(node0,value1)', '~vote(node4,value2)', '~voted(node1)']
453     : 1---1----------0---0-------------
453     : ['decided(value0)', 'vote(node0,value1)', '~vote(node4,value0)', '~voted(node1)']
454     : -1---1----------0--0-------------
454     : ['decided(value1)', 'vote(node0,value2)', '~vote(node4,value1)', '~voted(node1)']
455     : 1----1---------0---0-------------
455     : ['decided(value0)', 'vote(node0,value2)', '~vote(node4,value0)', '~voted(node1)']
456     : --11----0-----------0------------
456     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~voted(node2)']
457     : -1-1---0------------0------------
457     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~voted(node2)']
458     : --1-1---0-----------0------------
458     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~voted(node2)']
459     : 1---1-0-------------0------------
459     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~voted(node2)']
460     : -1---1-0------------0------------
460     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~voted(node2)']
461     : 1----10-------------0------------
461     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~voted(node2)']
462     : --11----------0-----0------------
462     : ['decided(value2)', 'vote(node0,value0)', '~vote(node3,value2)', '~voted(node2)']
463     : -1-1---------0------0------------
463     : ['decided(value1)', 'vote(node0,value0)', '~vote(node3,value1)', '~voted(node2)']
464     : --1-1---------0-----0------------
464     : ['decided(value2)', 'vote(node0,value1)', '~vote(node3,value2)', '~voted(node2)']
465     : 1---1-------0-------0------------
465     : ['decided(value0)', 'vote(node0,value1)', '~vote(node3,value0)', '~voted(node2)']
466     : -1---1-------0------0------------
466     : ['decided(value1)', 'vote(node0,value2)', '~vote(node3,value1)', '~voted(node2)']
467     : 1----1------0-------0------------
467     : ['decided(value0)', 'vote(node0,value2)', '~vote(node3,value0)', '~voted(node2)']
468     : --11-------------0--0------------
468     : ['decided(value2)', 'vote(node0,value0)', '~vote(node4,value2)', '~voted(node2)']
469     : -1-1------------0---0------------
469     : ['decided(value1)', 'vote(node0,value0)', '~vote(node4,value1)', '~voted(node2)']
470     : --1-1------------0--0------------
470     : ['decided(value2)', 'vote(node0,value1)', '~vote(node4,value2)', '~voted(node2)']
471     : 1---1----------0----0------------
471     : ['decided(value0)', 'vote(node0,value1)', '~vote(node4,value0)', '~voted(node2)']
472     : -1---1----------0---0------------
472     : ['decided(value1)', 'vote(node0,value2)', '~vote(node4,value1)', '~voted(node2)']
473     : 1----1---------0----0------------
473     : ['decided(value0)', 'vote(node0,value2)', '~vote(node4,value0)', '~voted(node2)']
474     : --11----0------------0-----------
474     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~voted(node3)']
475     : -1-1---0-------------0-----------
475     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~voted(node3)']
476     : --1-1---0------------0-----------
476     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~voted(node3)']
477     : 1---1-0--------------0-----------
477     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~voted(node3)']
478     : -1---1-0-------------0-----------
478     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~voted(node3)']
479     : 1----10--------------0-----------
479     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~voted(node3)']
480     : --11-------0---------0-----------
480     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~voted(node3)']
481     : -1-1------0----------0-----------
481     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~voted(node3)']
482     : --1-1------0---------0-----------
482     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~voted(node3)']
483     : 1---1----0-----------0-----------
483     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~voted(node3)']
484     : -1---1----0----------0-----------
484     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~voted(node3)']
485     : 1----1---0-----------0-----------
485     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~voted(node3)']
486     : --11-------------0---0-----------
486     : ['decided(value2)', 'vote(node0,value0)', '~vote(node4,value2)', '~voted(node3)']
487     : -1-1------------0----0-----------
487     : ['decided(value1)', 'vote(node0,value0)', '~vote(node4,value1)', '~voted(node3)']
488     : --1-1------------0---0-----------
488     : ['decided(value2)', 'vote(node0,value1)', '~vote(node4,value2)', '~voted(node3)']
489     : 1---1----------0-----0-----------
489     : ['decided(value0)', 'vote(node0,value1)', '~vote(node4,value0)', '~voted(node3)']
490     : -1---1----------0----0-----------
490     : ['decided(value1)', 'vote(node0,value2)', '~vote(node4,value1)', '~voted(node3)']
491     : 1----1---------0-----0-----------
491     : ['decided(value0)', 'vote(node0,value2)', '~vote(node4,value0)', '~voted(node3)']
492     : --11----0-------------0----------
492     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~voted(node4)']
493     : -1-1---0--------------0----------
493     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~voted(node4)']
494     : --1-1---0-------------0----------
494     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~voted(node4)']
495     : 1---1-0---------------0----------
495     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~voted(node4)']
496     : -1---1-0--------------0----------
496     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~voted(node4)']
497     : 1----10---------------0----------
497     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~voted(node4)']
498     : --11-------0----------0----------
498     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~voted(node4)']
499     : -1-1------0-----------0----------
499     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~voted(node4)']
500     : --1-1------0----------0----------
500     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~voted(node4)']
501     : 1---1----0------------0----------
501     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~voted(node4)']
502     : -1---1----0-----------0----------
502     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~voted(node4)']
503     : 1----1---0------------0----------
503     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~voted(node4)']
504     : --11----------0-------0----------
504     : ['decided(value2)', 'vote(node0,value0)', '~vote(node3,value2)', '~voted(node4)']
505     : -1-1---------0--------0----------
505     : ['decided(value1)', 'vote(node0,value0)', '~vote(node3,value1)', '~voted(node4)']
506     : --1-1---------0-------0----------
506     : ['decided(value2)', 'vote(node0,value1)', '~vote(node3,value2)', '~voted(node4)']
507     : 1---1-------0---------0----------
507     : ['decided(value0)', 'vote(node0,value1)', '~vote(node3,value0)', '~voted(node4)']
508     : -1---1-------0--------0----------
508     : ['decided(value1)', 'vote(node0,value2)', '~vote(node3,value1)', '~voted(node4)']
509     : 1----1------0---------0----------
509     : ['decided(value0)', 'vote(node0,value2)', '~vote(node3,value0)', '~voted(node4)']
510     : --1---1----0------0--------------
510     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~voted(node0)']
511     : -1----1---0-------0--------------
511     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~voted(node0)']
512     : --1----1---0------0--------------
512     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~voted(node0)']
513     : 1------1-0--------0--------------
513     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~voted(node0)']
514     : -1------1-0-------0--------------
514     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~voted(node0)']
515     : 1-------10--------0--------------
515     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~voted(node0)']
516     : --1---1-------0---0--------------
516     : ['decided(value2)', 'vote(node1,value0)', '~vote(node3,value2)', '~voted(node0)']
517     : -1----1------0----0--------------
517     : ['decided(value1)', 'vote(node1,value0)', '~vote(node3,value1)', '~voted(node0)']
518     : --1----1------0---0--------------
518     : ['decided(value2)', 'vote(node1,value1)', '~vote(node3,value2)', '~voted(node0)']
519     : 1------1----0-----0--------------
519     : ['decided(value0)', 'vote(node1,value1)', '~vote(node3,value0)', '~voted(node0)']
520     : -1------1----0----0--------------
520     : ['decided(value1)', 'vote(node1,value2)', '~vote(node3,value1)', '~voted(node0)']
521     : 1-------1---0-----0--------------
521     : ['decided(value0)', 'vote(node1,value2)', '~vote(node3,value0)', '~voted(node0)']
522     : --1---1----------00--------------
522     : ['decided(value2)', 'vote(node1,value0)', '~vote(node4,value2)', '~voted(node0)']
523     : -1----1---------0-0--------------
523     : ['decided(value1)', 'vote(node1,value0)', '~vote(node4,value1)', '~voted(node0)']
524     : --1----1---------00--------------
524     : ['decided(value2)', 'vote(node1,value1)', '~vote(node4,value2)', '~voted(node0)']
525     : 1------1-------0--0--------------
525     : ['decided(value0)', 'vote(node1,value1)', '~vote(node4,value0)', '~voted(node0)']
526     : -1------1-------0-0--------------
526     : ['decided(value1)', 'vote(node1,value2)', '~vote(node4,value1)', '~voted(node0)']
527     : 1-------1------0--0--------------
527     : ['decided(value0)', 'vote(node1,value2)', '~vote(node4,value0)', '~voted(node0)']
528     : --1--01-------------0------------
528     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~voted(node2)']
529     : -1--0-1-------------0------------
529     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~voted(node2)']
530     : --1--0-1------------0------------
530     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~voted(node2)']
531     : 1--0---1------------0------------
531     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~voted(node2)']
532     : -1--0---1-----------0------------
532     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~voted(node2)']
533     : 1--0----1-----------0------------
533     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~voted(node2)']
534     : --1---1-------0-----0------------
534     : ['decided(value2)', 'vote(node1,value0)', '~vote(node3,value2)', '~voted(node2)']
535     : -1----1------0------0------------
535     : ['decided(value1)', 'vote(node1,value0)', '~vote(node3,value1)', '~voted(node2)']
536     : --1----1------0-----0------------
536     : ['decided(value2)', 'vote(node1,value1)', '~vote(node3,value2)', '~voted(node2)']
537     : 1------1----0-------0------------
537     : ['decided(value0)', 'vote(node1,value1)', '~vote(node3,value0)', '~voted(node2)']
538     : -1------1----0------0------------
538     : ['decided(value1)', 'vote(node1,value2)', '~vote(node3,value1)', '~voted(node2)']
539     : 1-------1---0-------0------------
539     : ['decided(value0)', 'vote(node1,value2)', '~vote(node3,value0)', '~voted(node2)']
540     : --1---1----------0--0------------
540     : ['decided(value2)', 'vote(node1,value0)', '~vote(node4,value2)', '~voted(node2)']
541     : -1----1---------0---0------------
541     : ['decided(value1)', 'vote(node1,value0)', '~vote(node4,value1)', '~voted(node2)']
542     : --1----1---------0--0------------
542     : ['decided(value2)', 'vote(node1,value1)', '~vote(node4,value2)', '~voted(node2)']
543     : 1------1-------0----0------------
543     : ['decided(value0)', 'vote(node1,value1)', '~vote(node4,value0)', '~voted(node2)']
544     : -1------1-------0---0------------
544     : ['decided(value1)', 'vote(node1,value2)', '~vote(node4,value1)', '~voted(node2)']
545     : 1-------1------0----0------------
545     : ['decided(value0)', 'vote(node1,value2)', '~vote(node4,value0)', '~voted(node2)']
546     : --1--01--------------0-----------
546     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~voted(node3)']
547     : -1--0-1--------------0-----------
547     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~voted(node3)']
548     : --1--0-1-------------0-----------
548     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~voted(node3)']
549     : 1--0---1-------------0-----------
549     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~voted(node3)']
550     : -1--0---1------------0-----------
550     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~voted(node3)']
551     : 1--0----1------------0-----------
551     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~voted(node3)']
552     : --1---1----0---------0-----------
552     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~voted(node3)']
553     : -1----1---0----------0-----------
553     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~voted(node3)']
554     : --1----1---0---------0-----------
554     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~voted(node3)']
555     : 1------1-0-----------0-----------
555     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~voted(node3)']
556     : -1------1-0----------0-----------
556     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~voted(node3)']
557     : 1-------10-----------0-----------
557     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~voted(node3)']
558     : --1---1----------0---0-----------
558     : ['decided(value2)', 'vote(node1,value0)', '~vote(node4,value2)', '~voted(node3)']
559     : -1----1---------0----0-----------
559     : ['decided(value1)', 'vote(node1,value0)', '~vote(node4,value1)', '~voted(node3)']
560     : --1----1---------0---0-----------
560     : ['decided(value2)', 'vote(node1,value1)', '~vote(node4,value2)', '~voted(node3)']
561     : 1------1-------0-----0-----------
561     : ['decided(value0)', 'vote(node1,value1)', '~vote(node4,value0)', '~voted(node3)']
562     : -1------1-------0----0-----------
562     : ['decided(value1)', 'vote(node1,value2)', '~vote(node4,value1)', '~voted(node3)']
563     : 1-------1------0-----0-----------
563     : ['decided(value0)', 'vote(node1,value2)', '~vote(node4,value0)', '~voted(node3)']
564     : --1--01---------------0----------
564     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~voted(node4)']
565     : -1--0-1---------------0----------
565     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~voted(node4)']
566     : --1--0-1--------------0----------
566     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~voted(node4)']
567     : 1--0---1--------------0----------
567     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~voted(node4)']
568     : -1--0---1-------------0----------
568     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~voted(node4)']
569     : 1--0----1-------------0----------
569     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~voted(node4)']
570     : --1---1----0----------0----------
570     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~voted(node4)']
571     : -1----1---0-----------0----------
571     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~voted(node4)']
572     : --1----1---0----------0----------
572     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~voted(node4)']
573     : 1------1-0------------0----------
573     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~voted(node4)']
574     : -1------1-0-----------0----------
574     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~voted(node4)']
575     : 1-------10------------0----------
575     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~voted(node4)']
576     : --1---1-------0-------0----------
576     : ['decided(value2)', 'vote(node1,value0)', '~vote(node3,value2)', '~voted(node4)']
577     : -1----1------0--------0----------
577     : ['decided(value1)', 'vote(node1,value0)', '~vote(node3,value1)', '~voted(node4)']
578     : --1----1------0-------0----------
578     : ['decided(value2)', 'vote(node1,value1)', '~vote(node3,value2)', '~voted(node4)']
579     : 1------1----0---------0----------
579     : ['decided(value0)', 'vote(node1,value1)', '~vote(node3,value0)', '~voted(node4)']
580     : -1------1----0--------0----------
580     : ['decided(value1)', 'vote(node1,value2)', '~vote(node3,value1)', '~voted(node4)']
581     : 1-------1---0---------0----------
581     : ['decided(value0)', 'vote(node1,value2)', '~vote(node3,value0)', '~voted(node4)']
582     : --1-----01--------0--------------
582     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~voted(node0)']
583     : -1-----0-1--------0--------------
583     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~voted(node0)']
584     : --1-----0-1-------0--------------
584     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~voted(node0)']
585     : 1-----0---1-------0--------------
585     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~voted(node0)']
586     : -1-----0---1------0--------------
586     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~voted(node0)']
587     : 1-----0----1------0--------------
587     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~voted(node0)']
588     : --1------1----0---0--------------
588     : ['decided(value2)', 'vote(node2,value0)', '~vote(node3,value2)', '~voted(node0)']
589     : -1-------1---0----0--------------
589     : ['decided(value1)', 'vote(node2,value0)', '~vote(node3,value1)', '~voted(node0)']
590     : --1-------1---0---0--------------
590     : ['decided(value2)', 'vote(node2,value1)', '~vote(node3,value2)', '~voted(node0)']
591     : 1---------1-0-----0--------------
591     : ['decided(value0)', 'vote(node2,value1)', '~vote(node3,value0)', '~voted(node0)']
592     : -1---------1-0----0--------------
592     : ['decided(value1)', 'vote(node2,value2)', '~vote(node3,value1)', '~voted(node0)']
593     : 1----------10-----0--------------
593     : ['decided(value0)', 'vote(node2,value2)', '~vote(node3,value0)', '~voted(node0)']
594     : --1------1-------00--------------
594     : ['decided(value2)', 'vote(node2,value0)', '~vote(node4,value2)', '~voted(node0)']
595     : -1-------1------0-0--------------
595     : ['decided(value1)', 'vote(node2,value0)', '~vote(node4,value1)', '~voted(node0)']
596     : --1-------1------00--------------
596     : ['decided(value2)', 'vote(node2,value1)', '~vote(node4,value2)', '~voted(node0)']
597     : 1---------1----0--0--------------
597     : ['decided(value0)', 'vote(node2,value1)', '~vote(node4,value0)', '~voted(node0)']
598     : -1---------1----0-0--------------
598     : ['decided(value1)', 'vote(node2,value2)', '~vote(node4,value1)', '~voted(node0)']
599     : 1----------1---0--0--------------
599     : ['decided(value0)', 'vote(node2,value2)', '~vote(node4,value0)', '~voted(node0)']
600     : --1--0---1---------0-------------
600     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~voted(node1)']
601     : -1--0----1---------0-------------
601     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~voted(node1)']
602     : --1--0----1--------0-------------
602     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~voted(node1)']
603     : 1--0------1--------0-------------
603     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~voted(node1)']
604     : -1--0------1-------0-------------
604     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~voted(node1)']
605     : 1--0-------1-------0-------------
605     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~voted(node1)']
606     : --1------1----0----0-------------
606     : ['decided(value2)', 'vote(node2,value0)', '~vote(node3,value2)', '~voted(node1)']
607     : -1-------1---0-----0-------------
607     : ['decided(value1)', 'vote(node2,value0)', '~vote(node3,value1)', '~voted(node1)']
608     : --1-------1---0----0-------------
608     : ['decided(value2)', 'vote(node2,value1)', '~vote(node3,value2)', '~voted(node1)']
609     : 1---------1-0------0-------------
609     : ['decided(value0)', 'vote(node2,value1)', '~vote(node3,value0)', '~voted(node1)']
610     : -1---------1-0-----0-------------
610     : ['decided(value1)', 'vote(node2,value2)', '~vote(node3,value1)', '~voted(node1)']
611     : 1----------10------0-------------
611     : ['decided(value0)', 'vote(node2,value2)', '~vote(node3,value0)', '~voted(node1)']
612     : --1------1-------0-0-------------
612     : ['decided(value2)', 'vote(node2,value0)', '~vote(node4,value2)', '~voted(node1)']
613     : -1-------1------0--0-------------
613     : ['decided(value1)', 'vote(node2,value0)', '~vote(node4,value1)', '~voted(node1)']
614     : --1-------1------0-0-------------
614     : ['decided(value2)', 'vote(node2,value1)', '~vote(node4,value2)', '~voted(node1)']
615     : 1---------1----0---0-------------
615     : ['decided(value0)', 'vote(node2,value1)', '~vote(node4,value0)', '~voted(node1)']
616     : -1---------1----0--0-------------
616     : ['decided(value1)', 'vote(node2,value2)', '~vote(node4,value1)', '~voted(node1)']
617     : 1----------1---0---0-------------
617     : ['decided(value0)', 'vote(node2,value2)', '~vote(node4,value0)', '~voted(node1)']
618     : --1--0---1-----------0-----------
618     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~voted(node3)']
619     : -1--0----1-----------0-----------
619     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~voted(node3)']
620     : --1--0----1----------0-----------
620     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~voted(node3)']
621     : 1--0------1----------0-----------
621     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~voted(node3)']
622     : -1--0------1---------0-----------
622     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~voted(node3)']
623     : 1--0-------1---------0-----------
623     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~voted(node3)']
624     : --1-----01-----------0-----------
624     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~voted(node3)']
625     : -1-----0-1-----------0-----------
625     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~voted(node3)']
626     : --1-----0-1----------0-----------
626     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~voted(node3)']
627     : 1-----0---1----------0-----------
627     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~voted(node3)']
628     : -1-----0---1---------0-----------
628     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~voted(node3)']
629     : 1-----0----1---------0-----------
629     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~voted(node3)']
630     : --1------1-------0---0-----------
630     : ['decided(value2)', 'vote(node2,value0)', '~vote(node4,value2)', '~voted(node3)']
631     : -1-------1------0----0-----------
631     : ['decided(value1)', 'vote(node2,value0)', '~vote(node4,value1)', '~voted(node3)']
632     : --1-------1------0---0-----------
632     : ['decided(value2)', 'vote(node2,value1)', '~vote(node4,value2)', '~voted(node3)']
633     : 1---------1----0-----0-----------
633     : ['decided(value0)', 'vote(node2,value1)', '~vote(node4,value0)', '~voted(node3)']
634     : -1---------1----0----0-----------
634     : ['decided(value1)', 'vote(node2,value2)', '~vote(node4,value1)', '~voted(node3)']
635     : 1----------1---0-----0-----------
635     : ['decided(value0)', 'vote(node2,value2)', '~vote(node4,value0)', '~voted(node3)']
636     : --1--0---1------------0----------
636     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~voted(node4)']
637     : -1--0----1------------0----------
637     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~voted(node4)']
638     : --1--0----1-----------0----------
638     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~voted(node4)']
639     : 1--0------1-----------0----------
639     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~voted(node4)']
640     : -1--0------1----------0----------
640     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~voted(node4)']
641     : 1--0-------1----------0----------
641     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~voted(node4)']
642     : --1-----01------------0----------
642     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~voted(node4)']
643     : -1-----0-1------------0----------
643     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~voted(node4)']
644     : --1-----0-1-----------0----------
644     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~voted(node4)']
645     : 1-----0---1-----------0----------
645     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~voted(node4)']
646     : -1-----0---1----------0----------
646     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~voted(node4)']
647     : 1-----0----1----------0----------
647     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~voted(node4)']
648     : --1------1----0-------0----------
648     : ['decided(value2)', 'vote(node2,value0)', '~vote(node3,value2)', '~voted(node4)']
649     : -1-------1---0--------0----------
649     : ['decided(value1)', 'vote(node2,value0)', '~vote(node3,value1)', '~voted(node4)']
650     : --1-------1---0-------0----------
650     : ['decided(value2)', 'vote(node2,value1)', '~vote(node3,value2)', '~voted(node4)']
651     : 1---------1-0---------0----------
651     : ['decided(value0)', 'vote(node2,value1)', '~vote(node3,value0)', '~voted(node4)']
652     : -1---------1-0--------0----------
652     : ['decided(value1)', 'vote(node2,value2)', '~vote(node3,value1)', '~voted(node4)']
653     : 1----------10---------0----------
653     : ['decided(value0)', 'vote(node2,value2)', '~vote(node3,value0)', '~voted(node4)']
654     : --1-----0---1-----0--------------
654     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~voted(node0)']
655     : -1-----0----1-----0--------------
655     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~voted(node0)']
656     : --1-----0----1----0--------------
656     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~voted(node0)']
657     : 1-----0------1----0--------------
657     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~voted(node0)']
658     : -1-----0------1---0--------------
658     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~voted(node0)']
659     : 1-----0-------1---0--------------
659     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~voted(node0)']
660     : --1--------01-----0--------------
660     : ['decided(value2)', 'vote(node3,value0)', '~vote(node2,value2)', '~voted(node0)']
661     : -1--------0-1-----0--------------
661     : ['decided(value1)', 'vote(node3,value0)', '~vote(node2,value1)', '~voted(node0)']
662     : --1--------0-1----0--------------
662     : ['decided(value2)', 'vote(node3,value1)', '~vote(node2,value2)', '~voted(node0)']
663     : 1--------0---1----0--------------
663     : ['decided(value0)', 'vote(node3,value1)', '~vote(node2,value0)', '~voted(node0)']
664     : -1--------0---1---0--------------
664     : ['decided(value1)', 'vote(node3,value2)', '~vote(node2,value1)', '~voted(node0)']
665     : 1--------0----1---0--------------
665     : ['decided(value0)', 'vote(node3,value2)', '~vote(node2,value0)', '~voted(node0)']
666     : --1---------1----00--------------
666     : ['decided(value2)', 'vote(node3,value0)', '~vote(node4,value2)', '~voted(node0)']
667     : -1----------1---0-0--------------
667     : ['decided(value1)', 'vote(node3,value0)', '~vote(node4,value1)', '~voted(node0)']
668     : --1----------1---00--------------
668     : ['decided(value2)', 'vote(node3,value1)', '~vote(node4,value2)', '~voted(node0)']
669     : 1------------1-0--0--------------
669     : ['decided(value0)', 'vote(node3,value1)', '~vote(node4,value0)', '~voted(node0)']
670     : -1------------1-0-0--------------
670     : ['decided(value1)', 'vote(node3,value2)', '~vote(node4,value1)', '~voted(node0)']
671     : 1-------------10--0--------------
671     : ['decided(value0)', 'vote(node3,value2)', '~vote(node4,value0)', '~voted(node0)']
672     : --1--0------1------0-------------
672     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~voted(node1)']
673     : -1--0-------1------0-------------
673     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~voted(node1)']
674     : --1--0-------1-----0-------------
674     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~voted(node1)']
675     : 1--0---------1-----0-------------
675     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~voted(node1)']
676     : -1--0---------1----0-------------
676     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~voted(node1)']
677     : 1--0----------1----0-------------
677     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~voted(node1)']
678     : --1--------01------0-------------
678     : ['decided(value2)', 'vote(node3,value0)', '~vote(node2,value2)', '~voted(node1)']
679     : -1--------0-1------0-------------
679     : ['decided(value1)', 'vote(node3,value0)', '~vote(node2,value1)', '~voted(node1)']
680     : --1--------0-1-----0-------------
680     : ['decided(value2)', 'vote(node3,value1)', '~vote(node2,value2)', '~voted(node1)']
681     : 1--------0---1-----0-------------
681     : ['decided(value0)', 'vote(node3,value1)', '~vote(node2,value0)', '~voted(node1)']
682     : -1--------0---1----0-------------
682     : ['decided(value1)', 'vote(node3,value2)', '~vote(node2,value1)', '~voted(node1)']
683     : 1--------0----1----0-------------
683     : ['decided(value0)', 'vote(node3,value2)', '~vote(node2,value0)', '~voted(node1)']
684     : --1---------1----0-0-------------
684     : ['decided(value2)', 'vote(node3,value0)', '~vote(node4,value2)', '~voted(node1)']
685     : -1----------1---0--0-------------
685     : ['decided(value1)', 'vote(node3,value0)', '~vote(node4,value1)', '~voted(node1)']
686     : --1----------1---0-0-------------
686     : ['decided(value2)', 'vote(node3,value1)', '~vote(node4,value2)', '~voted(node1)']
687     : 1------------1-0---0-------------
687     : ['decided(value0)', 'vote(node3,value1)', '~vote(node4,value0)', '~voted(node1)']
688     : -1------------1-0--0-------------
688     : ['decided(value1)', 'vote(node3,value2)', '~vote(node4,value1)', '~voted(node1)']
689     : 1-------------10---0-------------
689     : ['decided(value0)', 'vote(node3,value2)', '~vote(node4,value0)', '~voted(node1)']
690     : --1--0------1-------0------------
690     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~voted(node2)']
691     : -1--0-------1-------0------------
691     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~voted(node2)']
692     : --1--0-------1------0------------
692     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~voted(node2)']
693     : 1--0---------1------0------------
693     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~voted(node2)']
694     : -1--0---------1-----0------------
694     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~voted(node2)']
695     : 1--0----------1-----0------------
695     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~voted(node2)']
696     : --1-----0---1-------0------------
696     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~voted(node2)']
697     : -1-----0----1-------0------------
697     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~voted(node2)']
698     : --1-----0----1------0------------
698     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~voted(node2)']
699     : 1-----0------1------0------------
699     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~voted(node2)']
700     : -1-----0------1-----0------------
700     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~voted(node2)']
701     : 1-----0-------1-----0------------
701     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~voted(node2)']
702     : --1---------1----0--0------------
702     : ['decided(value2)', 'vote(node3,value0)', '~vote(node4,value2)', '~voted(node2)']
703     : -1----------1---0---0------------
703     : ['decided(value1)', 'vote(node3,value0)', '~vote(node4,value1)', '~voted(node2)']
704     : --1----------1---0--0------------
704     : ['decided(value2)', 'vote(node3,value1)', '~vote(node4,value2)', '~voted(node2)']
705     : 1------------1-0----0------------
705     : ['decided(value0)', 'vote(node3,value1)', '~vote(node4,value0)', '~voted(node2)']
706     : -1------------1-0---0------------
706     : ['decided(value1)', 'vote(node3,value2)', '~vote(node4,value1)', '~voted(node2)']
707     : 1-------------10----0------------
707     : ['decided(value0)', 'vote(node3,value2)', '~vote(node4,value0)', '~voted(node2)']
708     : --1--0------1---------0----------
708     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~voted(node4)']
709     : -1--0-------1---------0----------
709     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~voted(node4)']
710     : --1--0-------1--------0----------
710     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~voted(node4)']
711     : 1--0---------1--------0----------
711     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~voted(node4)']
712     : -1--0---------1-------0----------
712     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~voted(node4)']
713     : 1--0----------1-------0----------
713     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~voted(node4)']
714     : --1-----0---1---------0----------
714     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~voted(node4)']
715     : -1-----0----1---------0----------
715     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~voted(node4)']
716     : --1-----0----1--------0----------
716     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~voted(node4)']
717     : 1-----0------1--------0----------
717     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~voted(node4)']
718     : -1-----0------1-------0----------
718     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~voted(node4)']
719     : 1-----0-------1-------0----------
719     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~voted(node4)']
720     : --1--------01---------0----------
720     : ['decided(value2)', 'vote(node3,value0)', '~vote(node2,value2)', '~voted(node4)']
721     : -1--------0-1---------0----------
721     : ['decided(value1)', 'vote(node3,value0)', '~vote(node2,value1)', '~voted(node4)']
722     : --1--------0-1--------0----------
722     : ['decided(value2)', 'vote(node3,value1)', '~vote(node2,value2)', '~voted(node4)']
723     : 1--------0---1--------0----------
723     : ['decided(value0)', 'vote(node3,value1)', '~vote(node2,value0)', '~voted(node4)']
724     : -1--------0---1-------0----------
724     : ['decided(value1)', 'vote(node3,value2)', '~vote(node2,value1)', '~voted(node4)']
725     : 1--------0----1-------0----------
725     : ['decided(value0)', 'vote(node3,value2)', '~vote(node2,value0)', '~voted(node4)']
726     : --1-----0------1--0--------------
726     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~voted(node0)']
727     : -1-----0-------1--0--------------
727     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~voted(node0)']
728     : --1-----0-------1-0--------------
728     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~voted(node0)']
729     : 1-----0---------1-0--------------
729     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~voted(node0)']
730     : -1-----0---------10--------------
730     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~voted(node0)']
731     : 1-----0----------10--------------
731     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~voted(node0)']
732     : --1--------0---1--0--------------
732     : ['decided(value2)', 'vote(node4,value0)', '~vote(node2,value2)', '~voted(node0)']
733     : -1--------0----1--0--------------
733     : ['decided(value1)', 'vote(node4,value0)', '~vote(node2,value1)', '~voted(node0)']
734     : --1--------0----1-0--------------
734     : ['decided(value2)', 'vote(node4,value1)', '~vote(node2,value2)', '~voted(node0)']
735     : 1--------0------1-0--------------
735     : ['decided(value0)', 'vote(node4,value1)', '~vote(node2,value0)', '~voted(node0)']
736     : -1--------0------10--------------
736     : ['decided(value1)', 'vote(node4,value2)', '~vote(node2,value1)', '~voted(node0)']
737     : 1--------0-------10--------------
737     : ['decided(value0)', 'vote(node4,value2)', '~vote(node2,value0)', '~voted(node0)']
738     : --1-----------01--0--------------
738     : ['decided(value2)', 'vote(node4,value0)', '~vote(node3,value2)', '~voted(node0)']
739     : -1-----------0-1--0--------------
739     : ['decided(value1)', 'vote(node4,value0)', '~vote(node3,value1)', '~voted(node0)']
740     : --1-----------0-1-0--------------
740     : ['decided(value2)', 'vote(node4,value1)', '~vote(node3,value2)', '~voted(node0)']
741     : 1-----------0---1-0--------------
741     : ['decided(value0)', 'vote(node4,value1)', '~vote(node3,value0)', '~voted(node0)']
742     : -1-----------0---10--------------
742     : ['decided(value1)', 'vote(node4,value2)', '~vote(node3,value1)', '~voted(node0)']
743     : 1-----------0----10--------------
743     : ['decided(value0)', 'vote(node4,value2)', '~vote(node3,value0)', '~voted(node0)']
744     : --1--0---------1---0-------------
744     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~voted(node1)']
745     : -1--0----------1---0-------------
745     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~voted(node1)']
746     : --1--0----------1--0-------------
746     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~voted(node1)']
747     : 1--0------------1--0-------------
747     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~voted(node1)']
748     : -1--0------------1-0-------------
748     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~voted(node1)']
749     : 1--0-------------1-0-------------
749     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~voted(node1)']
750     : --1--------0---1---0-------------
750     : ['decided(value2)', 'vote(node4,value0)', '~vote(node2,value2)', '~voted(node1)']
751     : -1--------0----1---0-------------
751     : ['decided(value1)', 'vote(node4,value0)', '~vote(node2,value1)', '~voted(node1)']
752     : --1--------0----1--0-------------
752     : ['decided(value2)', 'vote(node4,value1)', '~vote(node2,value2)', '~voted(node1)']
753     : 1--------0------1--0-------------
753     : ['decided(value0)', 'vote(node4,value1)', '~vote(node2,value0)', '~voted(node1)']
754     : -1--------0------1-0-------------
754     : ['decided(value1)', 'vote(node4,value2)', '~vote(node2,value1)', '~voted(node1)']
755     : 1--------0-------1-0-------------
755     : ['decided(value0)', 'vote(node4,value2)', '~vote(node2,value0)', '~voted(node1)']
756     : --1-----------01---0-------------
756     : ['decided(value2)', 'vote(node4,value0)', '~vote(node3,value2)', '~voted(node1)']
757     : -1-----------0-1---0-------------
757     : ['decided(value1)', 'vote(node4,value0)', '~vote(node3,value1)', '~voted(node1)']
758     : --1-----------0-1--0-------------
758     : ['decided(value2)', 'vote(node4,value1)', '~vote(node3,value2)', '~voted(node1)']
759     : 1-----------0---1--0-------------
759     : ['decided(value0)', 'vote(node4,value1)', '~vote(node3,value0)', '~voted(node1)']
760     : -1-----------0---1-0-------------
760     : ['decided(value1)', 'vote(node4,value2)', '~vote(node3,value1)', '~voted(node1)']
761     : 1-----------0----1-0-------------
761     : ['decided(value0)', 'vote(node4,value2)', '~vote(node3,value0)', '~voted(node1)']
762     : --1--0---------1----0------------
762     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~voted(node2)']
763     : -1--0----------1----0------------
763     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~voted(node2)']
764     : --1--0----------1---0------------
764     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~voted(node2)']
765     : 1--0------------1---0------------
765     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~voted(node2)']
766     : -1--0------------1--0------------
766     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~voted(node2)']
767     : 1--0-------------1--0------------
767     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~voted(node2)']
768     : --1-----0------1----0------------
768     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~voted(node2)']
769     : -1-----0-------1----0------------
769     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~voted(node2)']
770     : --1-----0-------1---0------------
770     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~voted(node2)']
771     : 1-----0---------1---0------------
771     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~voted(node2)']
772     : -1-----0---------1--0------------
772     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~voted(node2)']
773     : 1-----0----------1--0------------
773     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~voted(node2)']
774     : --1-----------01----0------------
774     : ['decided(value2)', 'vote(node4,value0)', '~vote(node3,value2)', '~voted(node2)']
775     : -1-----------0-1----0------------
775     : ['decided(value1)', 'vote(node4,value0)', '~vote(node3,value1)', '~voted(node2)']
776     : --1-----------0-1---0------------
776     : ['decided(value2)', 'vote(node4,value1)', '~vote(node3,value2)', '~voted(node2)']
777     : 1-----------0---1---0------------
777     : ['decided(value0)', 'vote(node4,value1)', '~vote(node3,value0)', '~voted(node2)']
778     : -1-----------0---1--0------------
778     : ['decided(value1)', 'vote(node4,value2)', '~vote(node3,value1)', '~voted(node2)']
779     : 1-----------0----1--0------------
779     : ['decided(value0)', 'vote(node4,value2)', '~vote(node3,value0)', '~voted(node2)']
780     : --1--0---------1-----0-----------
780     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~voted(node3)']
781     : -1--0----------1-----0-----------
781     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~voted(node3)']
782     : --1--0----------1----0-----------
782     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~voted(node3)']
783     : 1--0------------1----0-----------
783     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~voted(node3)']
784     : -1--0------------1---0-----------
784     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~voted(node3)']
785     : 1--0-------------1---0-----------
785     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~voted(node3)']
786     : --1-----0------1-----0-----------
786     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~voted(node3)']
787     : -1-----0-------1-----0-----------
787     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~voted(node3)']
788     : --1-----0-------1----0-----------
788     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~voted(node3)']
789     : 1-----0---------1----0-----------
789     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~voted(node3)']
790     : -1-----0---------1---0-----------
790     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~voted(node3)']
791     : 1-----0----------1---0-----------
791     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~voted(node3)']
792     : --1--------0---1-----0-----------
792     : ['decided(value2)', 'vote(node4,value0)', '~vote(node2,value2)', '~voted(node3)']
793     : -1--------0----1-----0-----------
793     : ['decided(value1)', 'vote(node4,value0)', '~vote(node2,value1)', '~voted(node3)']
794     : --1--------0----1----0-----------
794     : ['decided(value2)', 'vote(node4,value1)', '~vote(node2,value2)', '~voted(node3)']
795     : 1--------0------1----0-----------
795     : ['decided(value0)', 'vote(node4,value1)', '~vote(node2,value0)', '~voted(node3)']
796     : -1--------0------1---0-----------
796     : ['decided(value1)', 'vote(node4,value2)', '~vote(node2,value1)', '~voted(node3)']
797     : 1--------0-------1---0-----------
797     : ['decided(value0)', 'vote(node4,value2)', '~vote(node2,value0)', '~voted(node3)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~voted(node1)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$vote': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voted': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0, value$1$vote$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$0]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$voted$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$1$vote$0$0, node$1$voted$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$1$vote$0$0 | node$1$voted$0$0}

part_sig: ('node$0$vote$0$0 | node$1$vote$0$0 | node$1$voted$0$0', 'value$0$decided$0$0; value$1$vote$1$0 | value$0$vote$1$0')


---------- SigGenerator ----------

terms:  ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~voted(node1)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voted': Const('voted', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voted': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')),)}

sign_func_name2count:  {'0$decided': 1, '0$vote': 1, '1$vote': 1, '1$voted': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$1$vote$0$0, node$1$voted$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$1$vote$0$0 | node$1$voted$0$0}

	sort: value

	identical_classes: {'value$0$decided$0; value$1$vote$1': [value$0$decided$0$0; value$1$vote$1$0], 'value$0$vote$1': [value$0$vote$1$0]}

	identical_single_classes: {'value$0$decided$0; value$1$vote$1': value$0$decided$0$0; value$1$vote$1$0, 'value$0$vote$1': value$0$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$vote$0': [node$0$vote$0$0], 'node$1$vote$0': [node$1$vote$0$0], 'node$1$voted$0': [node$1$voted$0$0]}

	identical_single_classes: {'node$0$vote$0': node$0$vote$0$0, 'node$1$vote$0': node$1$vote$0$0, 'node$1$voted$0': node$1$voted$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voted': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['vote(NODE0,VALUE1)', '~voted(NODE2)', 'decided(VALUE0)', '~vote(NODE1,VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2,VALUE0,VALUE1. ~vote(NODE0,VALUE1) | voted(NODE2) | ~decided(VALUE0) | vote(NODE1,VALUE0) | (VALUE0 = VALUE1 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 8 =====================
size : 360
num_suborbits: 2
798 (*) : --11------1--------0-------------
798     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~voted(node1)']
799     : -1-1-------1-------0-------------
799     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~voted(node1)']
800     : --1-1----1---------0-------------
800     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~voted(node1)']
801     : 1---1------1-------0-------------
801     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~voted(node1)']
802     : -1---1---1---------0-------------
802     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~voted(node1)']
803     : 1----1----1--------0-------------
803     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~voted(node1)']
804     : --11---------1-----0-------------
804     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~voted(node1)']
805     : -1-1----------1----0-------------
805     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~voted(node1)']
806     : --1-1-------1------0-------------
806     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~voted(node1)']
807     : 1---1---------1----0-------------
807     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~voted(node1)']
808     : -1---1------1------0-------------
808     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~voted(node1)']
809     : 1----1-------1-----0-------------
809     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~voted(node1)']
810     : --11------------1--0-------------
810     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~voted(node1)']
811     : -1-1-------------1-0-------------
811     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~voted(node1)']
812     : --1-1----------1---0-------------
812     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~voted(node1)']
813     : 1---1------------1-0-------------
813     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~voted(node1)']
814     : -1---1---------1---0-------------
814     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~voted(node1)']
815     : 1----1----------1--0-------------
815     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~voted(node1)']
816     : --11---1------------0------------
816     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~voted(node2)']
817     : -1-1----1-----------0------------
817     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~voted(node2)']
818     : --1-1-1-------------0------------
818     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~voted(node2)']
819     : 1---1---1-----------0------------
819     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~voted(node2)']
820     : -1---11-------------0------------
820     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~voted(node2)']
821     : 1----1-1------------0------------
821     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~voted(node2)']
822     : --11---------1------0------------
822     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~voted(node2)']
823     : -1-1----------1-----0------------
823     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~voted(node2)']
824     : --1-1-------1-------0------------
824     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~voted(node2)']
825     : 1---1---------1-----0------------
825     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~voted(node2)']
826     : -1---1------1-------0------------
826     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~voted(node2)']
827     : 1----1-------1------0------------
827     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~voted(node2)']
828     : --11------------1---0------------
828     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~voted(node2)']
829     : -1-1-------------1--0------------
829     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~voted(node2)']
830     : --1-1----------1----0------------
830     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~voted(node2)']
831     : 1---1------------1--0------------
831     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~voted(node2)']
832     : -1---1---------1----0------------
832     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~voted(node2)']
833     : 1----1----------1---0------------
833     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~voted(node2)']
834     : --11---1-------------0-----------
834     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~voted(node3)']
835     : -1-1----1------------0-----------
835     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~voted(node3)']
836     : --1-1-1--------------0-----------
836     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~voted(node3)']
837     : 1---1---1------------0-----------
837     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~voted(node3)']
838     : -1---11--------------0-----------
838     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~voted(node3)']
839     : 1----1-1-------------0-----------
839     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~voted(node3)']
840     : --11------1----------0-----------
840     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~voted(node3)']
841     : -1-1-------1---------0-----------
841     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~voted(node3)']
842     : --1-1----1-----------0-----------
842     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~voted(node3)']
843     : 1---1------1---------0-----------
843     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~voted(node3)']
844     : -1---1---1-----------0-----------
844     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~voted(node3)']
845     : 1----1----1----------0-----------
845     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~voted(node3)']
846     : --11------------1----0-----------
846     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~voted(node3)']
847     : -1-1-------------1---0-----------
847     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~voted(node3)']
848     : --1-1----------1-----0-----------
848     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~voted(node3)']
849     : 1---1------------1---0-----------
849     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~voted(node3)']
850     : -1---1---------1-----0-----------
850     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~voted(node3)']
851     : 1----1----------1----0-----------
851     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~voted(node3)']
852     : --11---1--------------0----------
852     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~voted(node4)']
853     : -1-1----1-------------0----------
853     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~voted(node4)']
854     : --1-1-1---------------0----------
854     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~voted(node4)']
855     : 1---1---1-------------0----------
855     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~voted(node4)']
856     : -1---11---------------0----------
856     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~voted(node4)']
857     : 1----1-1--------------0----------
857     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~voted(node4)']
858     : --11------1-----------0----------
858     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~voted(node4)']
859     : -1-1-------1----------0----------
859     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~voted(node4)']
860     : --1-1----1------------0----------
860     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~voted(node4)']
861     : 1---1------1----------0----------
861     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~voted(node4)']
862     : -1---1---1------------0----------
862     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~voted(node4)']
863     : 1----1----1-----------0----------
863     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~voted(node4)']
864     : --11---------1--------0----------
864     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~voted(node4)']
865     : -1-1----------1-------0----------
865     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~voted(node4)']
866     : --1-1-------1---------0----------
866     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~voted(node4)']
867     : 1---1---------1-------0----------
867     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~voted(node4)']
868     : -1---1------1---------0----------
868     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~voted(node4)']
869     : 1----1-------1--------0----------
869     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~voted(node4)']
870     : --1---1---1-------0--------------
870     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~voted(node0)']
871     : -1----1----1------0--------------
871     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~voted(node0)']
872     : --1----1-1--------0--------------
872     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~voted(node0)']
873     : 1------1---1------0--------------
873     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~voted(node0)']
874     : -1------11--------0--------------
874     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~voted(node0)']
875     : 1-------1-1-------0--------------
875     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~voted(node0)']
876     : --1---1------1----0--------------
876     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~voted(node0)']
877     : -1----1-------1---0--------------
877     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~voted(node0)']
878     : --1----1----1-----0--------------
878     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~voted(node0)']
879     : 1------1------1---0--------------
879     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~voted(node0)']
880     : -1------1---1-----0--------------
880     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~voted(node0)']
881     : 1-------1----1----0--------------
881     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~voted(node0)']
882     : --1---1---------1-0--------------
882     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~voted(node0)']
883     : -1----1----------10--------------
883     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~voted(node0)']
884     : --1----1-------1--0--------------
884     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~voted(node0)']
885     : 1------1---------10--------------
885     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~voted(node0)']
886     : -1------1------1--0--------------
886     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~voted(node0)']
887     : 1-------1-------1-0--------------
887     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~voted(node0)']
888     : --1---1------1------0------------
888     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~voted(node2)']
889     : -1----1-------1-----0------------
889     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~voted(node2)']
890     : --1----1----1-------0------------
890     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~voted(node2)']
891     : 1------1------1-----0------------
891     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~voted(node2)']
892     : -1------1---1-------0------------
892     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~voted(node2)']
893     : 1-------1----1------0------------
893     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~voted(node2)']
894     : --1---1---------1---0------------
894     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~voted(node2)']
895     : -1----1----------1--0------------
895     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~voted(node2)']
896     : --1----1-------1----0------------
896     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~voted(node2)']
897     : 1------1---------1--0------------
897     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~voted(node2)']
898     : -1------1------1----0------------
898     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~voted(node2)']
899     : 1-------1-------1---0------------
899     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~voted(node2)']
900     : --1---1---1----------0-----------
900     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~voted(node3)']
901     : -1----1----1---------0-----------
901     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~voted(node3)']
902     : --1----1-1-----------0-----------
902     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~voted(node3)']
903     : 1------1---1---------0-----------
903     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~voted(node3)']
904     : -1------11-----------0-----------
904     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~voted(node3)']
905     : 1-------1-1----------0-----------
905     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~voted(node3)']
906     : --1---1---------1----0-----------
906     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~voted(node3)']
907     : -1----1----------1---0-----------
907     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~voted(node3)']
908     : --1----1-------1-----0-----------
908     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~voted(node3)']
909     : 1------1---------1---0-----------
909     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~voted(node3)']
910     : -1------1------1-----0-----------
910     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~voted(node3)']
911     : 1-------1-------1----0-----------
911     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~voted(node3)']
912     : --1---1---1-----------0----------
912     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~voted(node4)']
913     : -1----1----1----------0----------
913     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~voted(node4)']
914     : --1----1-1------------0----------
914     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~voted(node4)']
915     : 1------1---1----------0----------
915     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~voted(node4)']
916     : -1------11------------0----------
916     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~voted(node4)']
917     : 1-------1-1-----------0----------
917     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~voted(node4)']
918     : --1---1------1--------0----------
918     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~voted(node4)']
919     : -1----1-------1-------0----------
919     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~voted(node4)']
920     : --1----1----1---------0----------
920     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~voted(node4)']
921     : 1------1------1-------0----------
921     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~voted(node4)']
922     : -1------1---1---------0----------
922     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~voted(node4)']
923     : 1-------1----1--------0----------
923     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~voted(node4)']
924     : --1------1---1----0--------------
924     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~voted(node0)']
925     : -1-------1----1---0--------------
925     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~voted(node0)']
926     : --1-------1-1-----0--------------
926     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~voted(node0)']
927     : 1---------1---1---0--------------
927     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~voted(node0)']
928     : -1---------11-----0--------------
928     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~voted(node0)']
929     : 1----------1-1----0--------------
929     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~voted(node0)']
930     : --1------1------1-0--------------
930     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~voted(node0)']
931     : -1-------1-------10--------------
931     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~voted(node0)']
932     : --1-------1----1--0--------------
932     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~voted(node0)']
933     : 1---------1------10--------------
933     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~voted(node0)']
934     : -1---------1---1--0--------------
934     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~voted(node0)']
935     : 1----------1----1-0--------------
935     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~voted(node0)']
936     : --1------1---1-----0-------------
936     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~voted(node1)']
937     : -1-------1----1----0-------------
937     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~voted(node1)']
938     : --1-------1-1------0-------------
938     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~voted(node1)']
939     : 1---------1---1----0-------------
939     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~voted(node1)']
940     : -1---------11------0-------------
940     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~voted(node1)']
941     : 1----------1-1-----0-------------
941     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~voted(node1)']
942     : --1------1------1--0-------------
942     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~voted(node1)']
943     : -1-------1-------1-0-------------
943     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~voted(node1)']
944     : --1-------1----1---0-------------
944     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~voted(node1)']
945     : 1---------1------1-0-------------
945     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~voted(node1)']
946     : -1---------1---1---0-------------
946     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~voted(node1)']
947     : 1----------1----1--0-------------
947     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~voted(node1)']
948     : --1------1------1----0-----------
948     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~voted(node3)']
949     : -1-------1-------1---0-----------
949     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~voted(node3)']
950     : --1-------1----1-----0-----------
950     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~voted(node3)']
951     : 1---------1------1---0-----------
951     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~voted(node3)']
952     : -1---------1---1-----0-----------
952     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~voted(node3)']
953     : 1----------1----1----0-----------
953     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~voted(node3)']
954     : --1------1---1--------0----------
954     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~voted(node4)']
955     : -1-------1----1-------0----------
955     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~voted(node4)']
956     : --1-------1-1---------0----------
956     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~voted(node4)']
957     : 1---------1---1-------0----------
957     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~voted(node4)']
958     : -1---------11---------0----------
958     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~voted(node4)']
959     : 1----------1-1--------0----------
959     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~voted(node4)']
960     : --1---------1---1-0--------------
960     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~voted(node0)']
961     : -1----------1----10--------------
961     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~voted(node0)']
962     : --1----------1-1--0--------------
962     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~voted(node0)']
963     : 1------------1---10--------------
963     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~voted(node0)']
964     : -1------------11--0--------------
964     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~voted(node0)']
965     : 1-------------1-1-0--------------
965     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~voted(node0)']
966     : --1---------1---1--0-------------
966     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~voted(node1)']
967     : -1----------1----1-0-------------
967     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~voted(node1)']
968     : --1----------1-1---0-------------
968     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~voted(node1)']
969     : 1------------1---1-0-------------
969     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~voted(node1)']
970     : -1------------11---0-------------
970     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~voted(node1)']
971     : 1-------------1-1--0-------------
971     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~voted(node1)']
972     : --1---------1---1---0------------
972     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~voted(node2)']
973     : -1----------1----1--0------------
973     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~voted(node2)']
974     : --1----------1-1----0------------
974     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~voted(node2)']
975     : 1------------1---1--0------------
975     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~voted(node2)']
976     : -1------------11----0------------
976     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~voted(node2)']
977     : 1-------------1-1---0------------
977     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~voted(node2)']
1758 (*) : --11--------1------0-------------
1758     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node1)']
1759     : -1-1--------1------0-------------
1759     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node1)']
1760     : --1-1--------1-----0-------------
1760     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node1)']
1761     : 1---1--------1-----0-------------
1761     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node1)']
1762     : -1---1--------1----0-------------
1762     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node1)']
1763     : 1----1--------1----0-------------
1763     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node1)']
1764     : --11-----------1---0-------------
1764     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node1)']
1765     : -1-1-----------1---0-------------
1765     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node1)']
1766     : --1-1-----------1--0-------------
1766     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node1)']
1767     : 1---1-----------1--0-------------
1767     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node1)']
1768     : -1---1-----------1-0-------------
1768     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node1)']
1769     : 1----1-----------1-0-------------
1769     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node1)']
1770     : --11-----1---------0-------------
1770     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node1)']
1771     : -1-1-----1---------0-------------
1771     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node1)']
1772     : --1-1-----1--------0-------------
1772     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node1)']
1773     : 1---1-----1--------0-------------
1773     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node1)']
1774     : -1---1-----1-------0-------------
1774     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node1)']
1775     : 1----1-----1-------0-------------
1775     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node1)']
1776     : --11--------1-------0------------
1776     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node2)']
1777     : -1-1--------1-------0------------
1777     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node2)']
1778     : --1-1--------1------0------------
1778     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node2)']
1779     : 1---1--------1------0------------
1779     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node2)']
1780     : -1---1--------1-----0------------
1780     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node2)']
1781     : 1----1--------1-----0------------
1781     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node2)']
1782     : --11-----------1----0------------
1782     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node2)']
1783     : -1-1-----------1----0------------
1783     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node2)']
1784     : --1-1-----------1---0------------
1784     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node2)']
1785     : 1---1-----------1---0------------
1785     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node2)']
1786     : -1---1-----------1--0------------
1786     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node2)']
1787     : 1----1-----------1--0------------
1787     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node2)']
1788     : --11--1-------------0------------
1788     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node2)']
1789     : -1-1--1-------------0------------
1789     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node2)']
1790     : --1-1--1------------0------------
1790     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node2)']
1791     : 1---1--1------------0------------
1791     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node2)']
1792     : -1---1--1-----------0------------
1792     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node2)']
1793     : 1----1--1-----------0------------
1793     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node2)']
1794     : --11-----1-----------0-----------
1794     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node3)']
1795     : -1-1-----1-----------0-----------
1795     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node3)']
1796     : --1-1-----1----------0-----------
1796     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node3)']
1797     : 1---1-----1----------0-----------
1797     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node3)']
1798     : -1---1-----1---------0-----------
1798     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node3)']
1799     : 1----1-----1---------0-----------
1799     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node3)']
1800     : --11-----------1-----0-----------
1800     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node3)']
1801     : -1-1-----------1-----0-----------
1801     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node3)']
1802     : --1-1-----------1----0-----------
1802     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node3)']
1803     : 1---1-----------1----0-----------
1803     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node3)']
1804     : -1---1-----------1---0-----------
1804     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node3)']
1805     : 1----1-----------1---0-----------
1805     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node3)']
1806     : --11--1--------------0-----------
1806     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node3)']
1807     : -1-1--1--------------0-----------
1807     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node3)']
1808     : --1-1--1-------------0-----------
1808     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node3)']
1809     : 1---1--1-------------0-----------
1809     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node3)']
1810     : -1---1--1------------0-----------
1810     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node3)']
1811     : 1----1--1------------0-----------
1811     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node3)']
1812     : --11-----1------------0----------
1812     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node4)']
1813     : -1-1-----1------------0----------
1813     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node4)']
1814     : --1-1-----1-----------0----------
1814     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node4)']
1815     : 1---1-----1-----------0----------
1815     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node4)']
1816     : -1---1-----1----------0----------
1816     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node4)']
1817     : 1----1-----1----------0----------
1817     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node4)']
1818     : --11--------1---------0----------
1818     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node4)']
1819     : -1-1--------1---------0----------
1819     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node4)']
1820     : --1-1--------1--------0----------
1820     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node4)']
1821     : 1---1--------1--------0----------
1821     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node4)']
1822     : -1---1--------1-------0----------
1822     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node4)']
1823     : 1----1--------1-------0----------
1823     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node4)']
1824     : --11--1---------------0----------
1824     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node4)']
1825     : -1-1--1---------------0----------
1825     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node4)']
1826     : --1-1--1--------------0----------
1826     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node4)']
1827     : 1---1--1--------------0----------
1827     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node4)']
1828     : -1---1--1-------------0----------
1828     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node4)']
1829     : 1----1--1-------------0----------
1829     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node4)']
1830     : --1---1-----1-----0--------------
1830     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node0)']
1831     : -1----1-----1-----0--------------
1831     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node0)']
1832     : --1----1-----1----0--------------
1832     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node0)']
1833     : 1------1-----1----0--------------
1833     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node0)']
1834     : -1------1-----1---0--------------
1834     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node0)']
1835     : 1-------1-----1---0--------------
1835     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node0)']
1836     : --1---1--------1--0--------------
1836     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node0)']
1837     : -1----1--------1--0--------------
1837     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node0)']
1838     : --1----1--------1-0--------------
1838     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node0)']
1839     : 1------1--------1-0--------------
1839     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node0)']
1840     : -1------1--------10--------------
1840     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node0)']
1841     : 1-------1--------10--------------
1841     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node0)']
1842     : --1---1--1--------0--------------
1842     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node0)']
1843     : -1----1--1--------0--------------
1843     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node0)']
1844     : --1----1--1-------0--------------
1844     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node0)']
1845     : 1------1--1-------0--------------
1845     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node0)']
1846     : -1------1--1------0--------------
1846     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node0)']
1847     : 1-------1--1------0--------------
1847     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node0)']
1848     : --1---1-----1-------0------------
1848     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node2)']
1849     : -1----1-----1-------0------------
1849     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node2)']
1850     : --1----1-----1------0------------
1850     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node2)']
1851     : 1------1-----1------0------------
1851     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node2)']
1852     : -1------1-----1-----0------------
1852     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node2)']
1853     : 1-------1-----1-----0------------
1853     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node2)']
1854     : --1---1--------1----0------------
1854     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node2)']
1855     : -1----1--------1----0------------
1855     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node2)']
1856     : --1----1--------1---0------------
1856     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node2)']
1857     : 1------1--------1---0------------
1857     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node2)']
1858     : -1------1--------1--0------------
1858     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node2)']
1859     : 1-------1--------1--0------------
1859     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node2)']
1860     : --1---1--1-----------0-----------
1860     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node3)']
1861     : -1----1--1-----------0-----------
1861     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node3)']
1862     : --1----1--1----------0-----------
1862     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node3)']
1863     : 1------1--1----------0-----------
1863     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node3)']
1864     : -1------1--1---------0-----------
1864     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node3)']
1865     : 1-------1--1---------0-----------
1865     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node3)']
1866     : --1---1--------1-----0-----------
1866     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node3)']
1867     : -1----1--------1-----0-----------
1867     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node3)']
1868     : --1----1--------1----0-----------
1868     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node3)']
1869     : 1------1--------1----0-----------
1869     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node3)']
1870     : -1------1--------1---0-----------
1870     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node3)']
1871     : 1-------1--------1---0-----------
1871     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node3)']
1872     : --1---1--1------------0----------
1872     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node4)']
1873     : -1----1--1------------0----------
1873     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node4)']
1874     : --1----1--1-----------0----------
1874     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node4)']
1875     : 1------1--1-----------0----------
1875     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node4)']
1876     : -1------1--1----------0----------
1876     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node4)']
1877     : 1-------1--1----------0----------
1877     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node4)']
1878     : --1---1-----1---------0----------
1878     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node4)']
1879     : -1----1-----1---------0----------
1879     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node4)']
1880     : --1----1-----1--------0----------
1880     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node4)']
1881     : 1------1-----1--------0----------
1881     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node4)']
1882     : -1------1-----1-------0----------
1882     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node4)']
1883     : 1-------1-----1-------0----------
1883     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node4)']
1884     : --1------1--1-----0--------------
1884     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node0)']
1885     : -1-------1--1-----0--------------
1885     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node0)']
1886     : --1-------1--1----0--------------
1886     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node0)']
1887     : 1---------1--1----0--------------
1887     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node0)']
1888     : -1---------1--1---0--------------
1888     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node0)']
1889     : 1----------1--1---0--------------
1889     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node0)']
1890     : --1------1-----1--0--------------
1890     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node0)']
1891     : -1-------1-----1--0--------------
1891     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node0)']
1892     : --1-------1-----1-0--------------
1892     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node0)']
1893     : 1---------1-----1-0--------------
1893     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node0)']
1894     : -1---------1-----10--------------
1894     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node0)']
1895     : 1----------1-----10--------------
1895     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node0)']
1896     : --1------1--1------0-------------
1896     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node1)']
1897     : -1-------1--1------0-------------
1897     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node1)']
1898     : --1-------1--1-----0-------------
1898     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node1)']
1899     : 1---------1--1-----0-------------
1899     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node1)']
1900     : -1---------1--1----0-------------
1900     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node1)']
1901     : 1----------1--1----0-------------
1901     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node1)']
1902     : --1------1-----1---0-------------
1902     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node1)']
1903     : -1-------1-----1---0-------------
1903     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node1)']
1904     : --1-------1-----1--0-------------
1904     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node1)']
1905     : 1---------1-----1--0-------------
1905     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node1)']
1906     : -1---------1-----1-0-------------
1906     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node1)']
1907     : 1----------1-----1-0-------------
1907     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node1)']
1908     : --1------1-----1-----0-----------
1908     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node3)']
1909     : -1-------1-----1-----0-----------
1909     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node3)']
1910     : --1-------1-----1----0-----------
1910     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node3)']
1911     : 1---------1-----1----0-----------
1911     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node3)']
1912     : -1---------1-----1---0-----------
1912     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node3)']
1913     : 1----------1-----1---0-----------
1913     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node3)']
1914     : --1------1--1---------0----------
1914     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node4)']
1915     : -1-------1--1---------0----------
1915     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node4)']
1916     : --1-------1--1--------0----------
1916     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node4)']
1917     : 1---------1--1--------0----------
1917     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node4)']
1918     : -1---------1--1-------0----------
1918     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node4)']
1919     : 1----------1--1-------0----------
1919     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node4)']
1920     : --1---------1--1--0--------------
1920     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node0)']
1921     : -1----------1--1--0--------------
1921     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node0)']
1922     : --1----------1--1-0--------------
1922     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node0)']
1923     : 1------------1--1-0--------------
1923     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node0)']
1924     : -1------------1--10--------------
1924     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node0)']
1925     : 1-------------1--10--------------
1925     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node0)']
1926     : --1---------1--1---0-------------
1926     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node1)']
1927     : -1----------1--1---0-------------
1927     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node1)']
1928     : --1----------1--1--0-------------
1928     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node1)']
1929     : 1------------1--1--0-------------
1929     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node1)']
1930     : -1------------1--1-0-------------
1930     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node1)']
1931     : 1-------------1--1-0-------------
1931     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node1)']
1932     : --1---------1--1----0------------
1932     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node2)']
1933     : -1----------1--1----0------------
1933     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node2)']
1934     : --1----------1--1---0------------
1934     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node2)']
1935     : 1------------1--1---0------------
1935     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node2)']
1936     : -1------------1--1--0------------
1936     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node2)']
1937     : 1-------------1--1--0------------
1937     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~voted(node1)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voted': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$1], Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$0]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$1': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$voted$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0, value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$0$vote$0$1, node$1$voted$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0 | value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$0$vote$0$1 | node$1$voted$0$0}

part_sig: ('node$0$vote$0$0 | node$0$vote$0$1 | node$1$voted$0$0', 'value$0$decided$0$0 | value$0$vote$1$0 | value$0$vote$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node1)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voted': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0, value$0$vote$1$1], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$0]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$1': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$1': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$voted$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0; value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$0$vote$0$1, node$1$voted$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0; value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$0$vote$0$1 | node$1$voted$0$0}

part_sig: ('node$0$vote$0$0 | node$0$vote$0$1 | node$1$voted$0$0', 'value$0$decided$0$0 | value$0$vote$1$0; value$0$vote$1$1')


---------- SigGenerator ----------

terms:  ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~voted(node1)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voted': Const('voted', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voted': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')),)}

sign_func_name2count:  {'0$decided': 1, '0$vote': 2, '1$voted': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0, value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$0$vote$0$1, node$1$voted$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0 | value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$0$vote$0$1 | node$1$voted$0$0}

	sort: value

	identical_classes: {'value$0$decided$0': [value$0$decided$0$0], 'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}

	identical_single_classes: {'value$0$decided$0': value$0$decided$0$0}

	identical_multi_classes: {'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}

	sort: node

	identical_classes: {'node$0$vote$0': [node$0$vote$0$0, node$0$vote$0$1], 'node$1$voted$0': [node$1$voted$0$0]}

	identical_single_classes: {'node$1$voted$0': node$1$voted$0$0}

	identical_multi_classes: {'node$0$vote$0': [node$0$vote$0$0, node$0$vote$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE2', EnumeratedSort('value', ('value0', 'value1', 'value2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE2', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voted': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['vote(NODE0,VALUE1)', '~voted(NODE2)', 'decided(VALUE0)', 'vote(NODE1,VALUE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,VALUE2,NODE0,NODE2,VALUE0,VALUE1. ~vote(NODE0,VALUE1) | voted(NODE2) | ~decided(VALUE0) | ~vote(NODE1,VALUE2) | (VALUE0 = VALUE1 | VALUE0 = VALUE2 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)


=== Prime Orbit 9 =====================
size : 120
num_suborbits: 2
978 (*) : --11------1--------------------0-
978     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)']
979     : -1-1-------1-------------------0-
979     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)']
980     : --1-1----1---------------------0-
980     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)']
981     : 1---1------1-------------------0-
981     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)']
982     : -1---1---1---------------------0-
982     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)']
983     : 1----1----1--------------------0-
983     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)']
984     : --11---------1----------------0--
984     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)']
985     : -1-1----------1---------------0--
985     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)']
986     : --1-1-------1-----------------0--
986     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)']
987     : 1---1---------1---------------0--
987     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)']
988     : -1---1------1-----------------0--
988     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)']
989     : 1----1-------1----------------0--
989     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)']
990     : --11------------1------------0---
990     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)']
991     : -1-1-------------1-----------0---
991     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)']
992     : --1-1----------1-------------0---
992     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)']
993     : 1---1------------1-----------0---
993     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)']
994     : -1---1---------1-------------0---
994     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)']
995     : 1----1----------1------------0---
995     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)']
996     : --11---1------------------------0
996     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)']
997     : -1-1----1-----------------------0
997     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)']
998     : --1-1-1-------------------------0
998     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)']
999     : 1---1---1-----------------------0
999     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)']
1000     : -1---11-------------------------0
1000     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)']
1001     : 1----1-1------------------------0
1001     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)']
1002     : --1---1---1-----------------0----
1002     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)']
1003     : -1----1----1----------------0----
1003     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)']
1004     : --1----1-1------------------0----
1004     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)']
1005     : 1------1---1----------------0----
1005     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)']
1006     : -1------11------------------0----
1006     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)']
1007     : 1-------1-1-----------------0----
1007     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)']
1008     : --1---1------1-------------0-----
1008     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)']
1009     : -1----1-------1------------0-----
1009     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)']
1010     : --1----1----1--------------0-----
1010     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)']
1011     : 1------1------1------------0-----
1011     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)']
1012     : -1------1---1--------------0-----
1012     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)']
1013     : 1-------1----1-------------0-----
1013     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)']
1014     : --1---1---------1---------0------
1014     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)']
1015     : -1----1----------1--------0------
1015     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)']
1016     : --1----1-------1----------0------
1016     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)']
1017     : 1------1---------1--------0------
1017     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)']
1018     : -1------1------1----------0------
1018     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)']
1019     : 1-------1-------1---------0------
1019     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)']
1020     : --1------1---1-----------0-------
1020     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)']
1021     : -1-------1----1----------0-------
1021     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)']
1022     : --1-------1-1------------0-------
1022     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)']
1023     : 1---------1---1----------0-------
1023     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)']
1024     : -1---------11------------0-------
1024     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)']
1025     : 1----------1-1-----------0-------
1025     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)']
1026     : --1------1------1-------0--------
1026     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)']
1027     : -1-------1-------1------0--------
1027     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)']
1028     : --1-------1----1--------0--------
1028     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)']
1029     : 1---------1------1------0--------
1029     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)']
1030     : -1---------1---1--------0--------
1030     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)']
1031     : 1----------1----1-------0--------
1031     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)']
1032     : --1---------1---1------0---------
1032     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)']
1033     : -1----------1----1-----0---------
1033     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)']
1034     : --1----------1-1-------0---------
1034     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)']
1035     : 1------------1---1-----0---------
1035     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)']
1036     : -1------------11-------0---------
1036     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)']
1037     : 1-------------1-1------0---------
1037     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)']
1518 (*) : --11--------1-----------------0--
1518     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)']
1519     : -1-1--------1-----------------0--
1519     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)']
1520     : --1-1--------1----------------0--
1520     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)']
1521     : 1---1--------1----------------0--
1521     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)']
1522     : -1---1--------1---------------0--
1522     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)']
1523     : 1----1--------1---------------0--
1523     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)']
1524     : --11-----------1-------------0---
1524     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)']
1525     : -1-1-----------1-------------0---
1525     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)']
1526     : --1-1-----------1------------0---
1526     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)']
1527     : 1---1-----------1------------0---
1527     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)']
1528     : -1---1-----------1-----------0---
1528     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)']
1529     : 1----1-----------1-----------0---
1529     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)']
1530     : --11-----1---------------------0-
1530     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)']
1531     : -1-1-----1---------------------0-
1531     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)']
1532     : --1-1-----1--------------------0-
1532     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)']
1533     : 1---1-----1--------------------0-
1533     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)']
1534     : -1---1-----1-------------------0-
1534     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)']
1535     : 1----1-----1-------------------0-
1535     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)']
1536     : --11--1-------------------------0
1536     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)']
1537     : -1-1--1-------------------------0
1537     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)']
1538     : --1-1--1------------------------0
1538     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)']
1539     : 1---1--1------------------------0
1539     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)']
1540     : -1---1--1-----------------------0
1540     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)']
1541     : 1----1--1-----------------------0
1541     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)']
1542     : --1---1-----1--------------0-----
1542     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)']
1543     : -1----1-----1--------------0-----
1543     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)']
1544     : --1----1-----1-------------0-----
1544     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)']
1545     : 1------1-----1-------------0-----
1545     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)']
1546     : -1------1-----1------------0-----
1546     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)']
1547     : 1-------1-----1------------0-----
1547     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)']
1548     : --1---1--------1----------0------
1548     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)']
1549     : -1----1--------1----------0------
1549     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)']
1550     : --1----1--------1---------0------
1550     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)']
1551     : 1------1--------1---------0------
1551     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)']
1552     : -1------1--------1--------0------
1552     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)']
1553     : 1-------1--------1--------0------
1553     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)']
1554     : --1---1--1------------------0----
1554     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)']
1555     : -1----1--1------------------0----
1555     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)']
1556     : --1----1--1-----------------0----
1556     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)']
1557     : 1------1--1-----------------0----
1557     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)']
1558     : -1------1--1----------------0----
1558     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)']
1559     : 1-------1--1----------------0----
1559     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)']
1560     : --1------1--1------------0-------
1560     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)']
1561     : -1-------1--1------------0-------
1561     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)']
1562     : --1-------1--1-----------0-------
1562     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)']
1563     : 1---------1--1-----------0-------
1563     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)']
1564     : -1---------1--1----------0-------
1564     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)']
1565     : 1----------1--1----------0-------
1565     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)']
1566     : --1------1-----1--------0--------
1566     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)']
1567     : -1-------1-----1--------0--------
1567     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)']
1568     : --1-------1-----1-------0--------
1568     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)']
1569     : 1---------1-----1-------0--------
1569     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)']
1570     : -1---------1-----1------0--------
1570     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)']
1571     : 1----------1-----1------0--------
1571     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)']
1572     : --1---------1--1-------0---------
1572     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)']
1573     : -1----------1--1-------0---------
1573     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)']
1574     : --1----------1--1------0---------
1574     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)']
1575     : 1------------1--1------0---------
1575     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)']
1576     : -1------------1--1-----0---------
1576     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)']
1577     : 1-------------1--1-----0---------
1577     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'voting_quorum ~= quorum__node1_node3_node4']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voting_quorum=': [(Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),)]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$1], Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$1], Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$0]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$1': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$1$voting_quorum=$0$0': Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0, value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$0$vote$0$1], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0 | value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$0$vote$0$1, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$voting_quorum=$0$0}

part_sig: ('node$0$vote$0$0 | node$0$vote$0$1', 'quorum$1$voting_quorum=$0$0', 'value$0$decided$0$0 | value$0$vote$1$0 | value$0$vote$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', 'voting_quorum ~= quorum__node1_node2_node4']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voting_quorum=': [(Const('quorum__node1_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),)]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0, value$0$vote$1$1], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$1], Const('quorum__node1_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$0]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$1': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$1': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$1$voting_quorum=$0$0': Const('quorum__node1_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0; value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$0$vote$0$1], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0; value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$0$vote$0$1, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$voting_quorum=$0$0}

part_sig: ('node$0$vote$0$0 | node$0$vote$0$1', 'quorum$1$voting_quorum=$0$0', 'value$0$decided$0$0 | value$0$vote$1$0; value$0$vote$1$1')


---------- SigGenerator ----------

terms:  ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'voting_quorum ~= quorum__node1_node3_node4']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voting_quorum=': Const('voting_quorum', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voting_quorum=': (EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')),)}

sign_func_name2count:  {'0$decided': 1, '0$vote': 2, '1$voting_quorum=': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0, value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$0$vote$0$1], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0 | value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$0$vote$0$1, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$voting_quorum=$0$0}

	sort: value

	identical_classes: {'value$0$decided$0': [value$0$decided$0$0], 'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}

	identical_single_classes: {'value$0$decided$0': value$0$decided$0$0}

	identical_multi_classes: {'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}

	sort: node

	identical_classes: {'node$0$vote$0': [node$0$vote$0$0, node$0$vote$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$vote$0': [node$0$vote$0$0, node$0$vote$0$1]}

	sort: quorum

	identical_classes: {'quorum$1$voting_quorum=$0': [quorum$1$voting_quorum=$0$0]}

	identical_single_classes: {'quorum$1$voting_quorum=$0': quorum$1$voting_quorum=$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall

quantifier mode: quorum: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('VALUE2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE2', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voting_quorum=': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['vote(NODE0,VALUE1)', 'decided(VALUE0)', 'voting_quorum ~= QUORUM0', 'vote(NODE1,VALUE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,VALUE2,NODE0,VALUE1,VALUE0,QUORUM0. ~vote(NODE0,VALUE1) | ~decided(VALUE0) | voting_quorum = QUORUM0 | ~vote(NODE1,VALUE2) | (VALUE0 = VALUE1 | VALUE0 = VALUE2 | NODE0 = NODE1 | member(NODE1,QUORUM0) | member(NODE0,QUORUM0))


=== Prime Orbit 10 =====================
size : 120
num_suborbits: 1
1038 (*) : --11-------0-------------------0-
1038     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value2)']
1039     : -1-1------0--------------------0-
1039     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value1)']
1040     : --1-1------0-------------------0-
1040     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value2)']
1041     : 1---1----0---------------------0-
1041     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value0)']
1042     : -1---1----0--------------------0-
1042     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value1)']
1043     : 1----1---0---------------------0-
1043     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value0)']
1044     : --11----------0---------------0--
1044     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value2)']
1045     : -1-1---------0----------------0--
1045     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value1)']
1046     : --1-1---------0---------------0--
1046     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value2)']
1047     : 1---1-------0-----------------0--
1047     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value0)']
1048     : -1---1-------0----------------0--
1048     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value1)']
1049     : 1----1------0-----------------0--
1049     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value0)']
1050     : --11-------------0-----------0---
1050     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value2)']
1051     : -1-1------------0------------0---
1051     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value1)']
1052     : --1-1------------0-----------0---
1052     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value2)']
1053     : 1---1----------0-------------0---
1053     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value0)']
1054     : -1---1----------0------------0---
1054     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value1)']
1055     : 1----1---------0-------------0---
1055     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value0)']
1056     : --11----0-----------------------0
1056     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value2)']
1057     : -1-1---0------------------------0
1057     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value1)']
1058     : --1-1---0-----------------------0
1058     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value2)']
1059     : 1---1-0-------------------------0
1059     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value0)']
1060     : -1---1-0------------------------0
1060     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value1)']
1061     : 1----10-------------------------0
1061     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value0)']
1062     : --1---1----0----------------0----
1062     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value2)']
1063     : -1----1---0-----------------0----
1063     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value1)']
1064     : --1----1---0----------------0----
1064     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value2)']
1065     : 1------1-0------------------0----
1065     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value0)']
1066     : -1------1-0-----------------0----
1066     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value1)']
1067     : 1-------10------------------0----
1067     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value0)']
1068     : --1---1-------0------------0-----
1068     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value2)']
1069     : -1----1------0-------------0-----
1069     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value1)']
1070     : --1----1------0------------0-----
1070     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value2)']
1071     : 1------1----0--------------0-----
1071     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value0)']
1072     : -1------1----0-------------0-----
1072     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value1)']
1073     : 1-------1---0--------------0-----
1073     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value0)']
1074     : --1---1----------0--------0------
1074     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value2)']
1075     : -1----1---------0---------0------
1075     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value1)']
1076     : --1----1---------0--------0------
1076     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value2)']
1077     : 1------1-------0----------0------
1077     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value0)']
1078     : -1------1-------0---------0------
1078     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value1)']
1079     : 1-------1------0----------0------
1079     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value0)']
1080     : --1--01-------------------------0
1080     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)']
1081     : -1--0-1-------------------------0
1081     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)']
1082     : --1--0-1------------------------0
1082     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)']
1083     : 1--0---1------------------------0
1083     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)']
1084     : -1--0---1-----------------------0
1084     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)']
1085     : 1--0----1-----------------------0
1085     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)']
1086     : --1-----01------------------0----
1086     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value2)']
1087     : -1-----0-1------------------0----
1087     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value1)']
1088     : --1-----0-1-----------------0----
1088     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value2)']
1089     : 1-----0---1-----------------0----
1089     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value0)']
1090     : -1-----0---1----------------0----
1090     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value1)']
1091     : 1-----0----1----------------0----
1091     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value0)']
1092     : --1------1----0----------0-------
1092     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value2)']
1093     : -1-------1---0-----------0-------
1093     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value1)']
1094     : --1-------1---0----------0-------
1094     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value2)']
1095     : 1---------1-0------------0-------
1095     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value0)']
1096     : -1---------1-0-----------0-------
1096     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value1)']
1097     : 1----------10------------0-------
1097     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value0)']
1098     : --1------1-------0------0--------
1098     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value2)']
1099     : -1-------1------0-------0--------
1099     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value1)']
1100     : --1-------1------0------0--------
1100     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value2)']
1101     : 1---------1----0--------0--------
1101     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value0)']
1102     : -1---------1----0-------0--------
1102     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value1)']
1103     : 1----------1---0--------0--------
1103     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value0)']
1104     : --1--0---1---------------------0-
1104     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value2)']
1105     : -1--0----1---------------------0-
1105     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value1)']
1106     : --1--0----1--------------------0-
1106     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value2)']
1107     : 1--0------1--------------------0-
1107     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value0)']
1108     : -1--0------1-------------------0-
1108     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value1)']
1109     : 1--0-------1-------------------0-
1109     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value0)']
1110     : --1-----0---1--------------0-----
1110     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value2)']
1111     : -1-----0----1--------------0-----
1111     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value1)']
1112     : --1-----0----1-------------0-----
1112     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value2)']
1113     : 1-----0------1-------------0-----
1113     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value0)']
1114     : -1-----0------1------------0-----
1114     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value1)']
1115     : 1-----0-------1------------0-----
1115     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value0)']
1116     : --1--------01------------0-------
1116     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value2)']
1117     : -1--------0-1------------0-------
1117     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value1)']
1118     : --1--------0-1-----------0-------
1118     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value2)']
1119     : 1--------0---1-----------0-------
1119     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value0)']
1120     : -1--------0---1----------0-------
1120     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value1)']
1121     : 1--------0----1----------0-------
1121     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value0)']
1122     : --1---------1----0-----0---------
1122     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value2)']
1123     : -1----------1---0------0---------
1123     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value1)']
1124     : --1----------1---0-----0---------
1124     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value2)']
1125     : 1------------1-0-------0---------
1125     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value0)']
1126     : -1------------1-0------0---------
1126     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value1)']
1127     : 1-------------10-------0---------
1127     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value0)']
1128     : --1--0------1-----------------0--
1128     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value2)']
1129     : -1--0-------1-----------------0--
1129     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value1)']
1130     : --1--0-------1----------------0--
1130     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value2)']
1131     : 1--0---------1----------------0--
1131     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value0)']
1132     : -1--0---------1---------------0--
1132     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value1)']
1133     : 1--0----------1---------------0--
1133     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value0)']
1134     : --1-----0------1----------0------
1134     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value2)']
1135     : -1-----0-------1----------0------
1135     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value1)']
1136     : --1-----0-------1---------0------
1136     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value2)']
1137     : 1-----0---------1---------0------
1137     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value0)']
1138     : -1-----0---------1--------0------
1138     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value1)']
1139     : 1-----0----------1--------0------
1139     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value0)']
1140     : --1--------0---1--------0--------
1140     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value2)']
1141     : -1--------0----1--------0--------
1141     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value1)']
1142     : --1--------0----1-------0--------
1142     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value2)']
1143     : 1--------0------1-------0--------
1143     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value0)']
1144     : -1--------0------1------0--------
1144     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value1)']
1145     : 1--------0-------1------0--------
1145     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value0)']
1146     : --1-----------01-------0---------
1146     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value2)']
1147     : -1-----------0-1-------0---------
1147     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value1)']
1148     : --1-----------0-1------0---------
1148     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value2)']
1149     : 1-----------0---1------0---------
1149     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value0)']
1150     : -1-----------0---1-----0---------
1150     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value1)']
1151     : 1-----------0----1-----0---------
1151     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value0)']
1152     : --1--0---------1-------------0---
1152     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value2)']
1153     : -1--0----------1-------------0---
1153     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value1)']
1154     : --1--0----------1------------0---
1154     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value2)']
1155     : 1--0------------1------------0---
1155     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value0)']
1156     : -1--0------------1-----------0---
1156     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value1)']
1157     : 1--0-------------1-----------0---
1157     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', 'voting_quorum ~= quorum__node1_node3_node4', '~member(node0,quorum__node1_node3_node4)', '~member(node2,quorum__node1_node3_node4)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$vote': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voting_quorum=': [(Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),)], '1$member': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0, value$1$vote$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0, node$1$member$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$0, node$1$member$0$1], Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$0, quorum$1$member$1$0, quorum$1$member$1$1]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$1$voting_quorum=$0$0': Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$0': Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$1': Const('quorum__node1_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0; node$1$member$0$0, node$1$member$0$1; node$1$vote$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0; node$1$member$0$0 | node$1$member$0$1; node$1$vote$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

part_sig: ('node$0$vote$0$0; node$1$member$0$0 | node$1$member$0$1; node$1$vote$0$0', 'quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0', 'value$0$decided$0$0; value$1$vote$1$0 | value$0$vote$1$0')


---------- SigGenerator ----------

terms:  ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', 'voting_quorum ~= quorum__node1_node3_node4', '~member(node0,quorum__node1_node3_node4)', '~member(node2,quorum__node1_node3_node4)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voting_quorum=': Const('voting_quorum', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voting_quorum=': (EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')),), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

sign_func_name2count:  {'0$decided': 1, '0$vote': 1, '1$vote': 1, '1$voting_quorum=': 1, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0; node$1$member$0$0, node$1$member$0$1; node$1$vote$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0; node$1$member$0$0 | node$1$member$0$1; node$1$vote$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

	sort: value

	identical_classes: {'value$0$decided$0; value$1$vote$1': [value$0$decided$0$0; value$1$vote$1$0], 'value$0$vote$1': [value$0$vote$1$0]}

	identical_single_classes: {'value$0$decided$0; value$1$vote$1': value$0$decided$0$0; value$1$vote$1$0, 'value$0$vote$1': value$0$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$vote$0; node$1$member$0': [node$0$vote$0$0; node$1$member$0$0], 'node$1$member$0; node$1$vote$0': [node$1$member$0$1; node$1$vote$0$0]}

	identical_single_classes: {'node$0$vote$0; node$1$member$0': node$0$vote$0$0; node$1$member$0$0, 'node$1$member$0; node$1$vote$0': node$1$member$0$1; node$1$vote$0$0}

	identical_multi_classes: {}

	sort: quorum

	identical_classes: {'quorum$1$member$1; quorum$1$member$1; quorum$1$voting_quorum=$0': [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

	identical_single_classes: {'quorum$1$member$1; quorum$1$member$1; quorum$1$voting_quorum=$0': quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall

quantifier mode: quorum: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voting_quorum=': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]], '1$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~vote(NODE1,VALUE0)', 'vote(NODE0,VALUE1)', '~member(NODE0,QUORUM0)', '~member(NODE1,QUORUM0)', 'voting_quorum ~= QUORUM0', 'decided(VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,VALUE0,VALUE1,QUORUM0. vote(NODE1,VALUE0) | ~vote(NODE0,VALUE1) | member(NODE0,QUORUM0) | member(NODE1,QUORUM0) | voting_quorum = QUORUM0 | ~decided(VALUE0) | (VALUE0 = VALUE1 | NODE0 = NODE1)


=== Prime Orbit 11 =====================
size : 180
num_suborbits: 1
1158 (*) : --11-------0--0------------------
1158     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~vote(node3,value2)']
1159     : -1-1------0--0-------------------
1159     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~vote(node3,value1)']
1160     : --1-1------0--0------------------
1160     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~vote(node3,value2)']
1161     : 1---1----0--0--------------------
1161     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~vote(node3,value0)']
1162     : -1---1----0--0-------------------
1162     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~vote(node3,value1)']
1163     : 1----1---0--0--------------------
1163     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~vote(node3,value0)']
1164     : --11-------0-----0---------------
1164     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~vote(node4,value2)']
1165     : -1-1------0-----0----------------
1165     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~vote(node4,value1)']
1166     : --1-1------0-----0---------------
1166     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~vote(node4,value2)']
1167     : 1---1----0-----0-----------------
1167     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~vote(node4,value0)']
1168     : -1---1----0-----0----------------
1168     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~vote(node4,value1)']
1169     : 1----1---0-----0-----------------
1169     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~vote(node4,value0)']
1170     : --11----------0--0---------------
1170     : ['decided(value2)', 'vote(node0,value0)', '~vote(node3,value2)', '~vote(node4,value2)']
1171     : -1-1---------0--0----------------
1171     : ['decided(value1)', 'vote(node0,value0)', '~vote(node3,value1)', '~vote(node4,value1)']
1172     : --1-1---------0--0---------------
1172     : ['decided(value2)', 'vote(node0,value1)', '~vote(node3,value2)', '~vote(node4,value2)']
1173     : 1---1-------0--0-----------------
1173     : ['decided(value0)', 'vote(node0,value1)', '~vote(node3,value0)', '~vote(node4,value0)']
1174     : -1---1-------0--0----------------
1174     : ['decided(value1)', 'vote(node0,value2)', '~vote(node3,value1)', '~vote(node4,value1)']
1175     : 1----1------0--0-----------------
1175     : ['decided(value0)', 'vote(node0,value2)', '~vote(node3,value0)', '~vote(node4,value0)']
1176     : --11----0-----0------------------
1176     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~vote(node3,value2)']
1177     : -1-1---0-----0-------------------
1177     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~vote(node3,value1)']
1178     : --1-1---0-----0------------------
1178     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~vote(node3,value2)']
1179     : 1---1-0-----0--------------------
1179     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~vote(node3,value0)']
1180     : -1---1-0-----0-------------------
1180     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~vote(node3,value1)']
1181     : 1----10-----0--------------------
1181     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~vote(node3,value0)']
1182     : --11----0--------0---------------
1182     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~vote(node4,value2)']
1183     : -1-1---0--------0----------------
1183     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~vote(node4,value1)']
1184     : --1-1---0--------0---------------
1184     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~vote(node4,value2)']
1185     : 1---1-0--------0-----------------
1185     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~vote(node4,value0)']
1186     : -1---1-0--------0----------------
1186     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~vote(node4,value1)']
1187     : 1----10--------0-----------------
1187     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~vote(node4,value0)']
1188     : --11----0--0---------------------
1188     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~vote(node2,value2)']
1189     : -1-1---0--0----------------------
1189     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~vote(node2,value1)']
1190     : --1-1---0--0---------------------
1190     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~vote(node2,value2)']
1191     : 1---1-0--0-----------------------
1191     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~vote(node2,value0)']
1192     : -1---1-0--0----------------------
1192     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~vote(node2,value1)']
1193     : 1----10--0-----------------------
1193     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~vote(node2,value0)']
1194     : --1---1----0--0------------------
1194     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~vote(node3,value2)']
1195     : -1----1---0--0-------------------
1195     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~vote(node3,value1)']
1196     : --1----1---0--0------------------
1196     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~vote(node3,value2)']
1197     : 1------1-0--0--------------------
1197     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~vote(node3,value0)']
1198     : -1------1-0--0-------------------
1198     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~vote(node3,value1)']
1199     : 1-------10--0--------------------
1199     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~vote(node3,value0)']
1200     : --1---1----0-----0---------------
1200     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~vote(node4,value2)']
1201     : -1----1---0-----0----------------
1201     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~vote(node4,value1)']
1202     : --1----1---0-----0---------------
1202     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~vote(node4,value2)']
1203     : 1------1-0-----0-----------------
1203     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~vote(node4,value0)']
1204     : -1------1-0-----0----------------
1204     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~vote(node4,value1)']
1205     : 1-------10-----0-----------------
1205     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~vote(node4,value0)']
1206     : --1---1-------0--0---------------
1206     : ['decided(value2)', 'vote(node1,value0)', '~vote(node3,value2)', '~vote(node4,value2)']
1207     : -1----1------0--0----------------
1207     : ['decided(value1)', 'vote(node1,value0)', '~vote(node3,value1)', '~vote(node4,value1)']
1208     : --1----1------0--0---------------
1208     : ['decided(value2)', 'vote(node1,value1)', '~vote(node3,value2)', '~vote(node4,value2)']
1209     : 1------1----0--0-----------------
1209     : ['decided(value0)', 'vote(node1,value1)', '~vote(node3,value0)', '~vote(node4,value0)']
1210     : -1------1----0--0----------------
1210     : ['decided(value1)', 'vote(node1,value2)', '~vote(node3,value1)', '~vote(node4,value1)']
1211     : 1-------1---0--0-----------------
1211     : ['decided(value0)', 'vote(node1,value2)', '~vote(node3,value0)', '~vote(node4,value0)']
1212     : --1--01-------0------------------
1212     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~vote(node3,value2)']
1213     : -1--0-1------0-------------------
1213     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~vote(node3,value1)']
1214     : --1--0-1------0------------------
1214     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~vote(node3,value2)']
1215     : 1--0---1----0--------------------
1215     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~vote(node3,value0)']
1216     : -1--0---1----0-------------------
1216     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~vote(node3,value1)']
1217     : 1--0----1---0--------------------
1217     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~vote(node3,value0)']
1218     : --1--01----------0---------------
1218     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~vote(node4,value2)']
1219     : -1--0-1---------0----------------
1219     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~vote(node4,value1)']
1220     : --1--0-1---------0---------------
1220     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~vote(node4,value2)']
1221     : 1--0---1-------0-----------------
1221     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~vote(node4,value0)']
1222     : -1--0---1-------0----------------
1222     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~vote(node4,value1)']
1223     : 1--0----1------0-----------------
1223     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~vote(node4,value0)']
1224     : --1--01----0---------------------
1224     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~vote(node2,value2)']
1225     : -1--0-1---0----------------------
1225     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~vote(node2,value1)']
1226     : --1--0-1---0---------------------
1226     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~vote(node2,value2)']
1227     : 1--0---1-0-----------------------
1227     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~vote(node2,value0)']
1228     : -1--0---1-0----------------------
1228     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~vote(node2,value1)']
1229     : 1--0----10-----------------------
1229     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~vote(node2,value0)']
1230     : --1-----01----0------------------
1230     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~vote(node3,value2)']
1231     : -1-----0-1---0-------------------
1231     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~vote(node3,value1)']
1232     : --1-----0-1---0------------------
1232     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~vote(node3,value2)']
1233     : 1-----0---1-0--------------------
1233     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~vote(node3,value0)']
1234     : -1-----0---1-0-------------------
1234     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~vote(node3,value1)']
1235     : 1-----0----10--------------------
1235     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~vote(node3,value0)']
1236     : --1-----01-------0---------------
1236     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~vote(node4,value2)']
1237     : -1-----0-1------0----------------
1237     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~vote(node4,value1)']
1238     : --1-----0-1------0---------------
1238     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~vote(node4,value2)']
1239     : 1-----0---1----0-----------------
1239     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~vote(node4,value0)']
1240     : -1-----0---1----0----------------
1240     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~vote(node4,value1)']
1241     : 1-----0----1---0-----------------
1241     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~vote(node4,value0)']
1242     : --1------1----0--0---------------
1242     : ['decided(value2)', 'vote(node2,value0)', '~vote(node3,value2)', '~vote(node4,value2)']
1243     : -1-------1---0--0----------------
1243     : ['decided(value1)', 'vote(node2,value0)', '~vote(node3,value1)', '~vote(node4,value1)']
1244     : --1-------1---0--0---------------
1244     : ['decided(value2)', 'vote(node2,value1)', '~vote(node3,value2)', '~vote(node4,value2)']
1245     : 1---------1-0--0-----------------
1245     : ['decided(value0)', 'vote(node2,value1)', '~vote(node3,value0)', '~vote(node4,value0)']
1246     : -1---------1-0--0----------------
1246     : ['decided(value1)', 'vote(node2,value2)', '~vote(node3,value1)', '~vote(node4,value1)']
1247     : 1----------10--0-----------------
1247     : ['decided(value0)', 'vote(node2,value2)', '~vote(node3,value0)', '~vote(node4,value0)']
1248     : --1--0---1----0------------------
1248     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~vote(node3,value2)']
1249     : -1--0----1---0-------------------
1249     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~vote(node3,value1)']
1250     : --1--0----1---0------------------
1250     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~vote(node3,value2)']
1251     : 1--0------1-0--------------------
1251     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~vote(node3,value0)']
1252     : -1--0------1-0-------------------
1252     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~vote(node3,value1)']
1253     : 1--0-------10--------------------
1253     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~vote(node3,value0)']
1254     : --1--0---1-------0---------------
1254     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~vote(node4,value2)']
1255     : -1--0----1------0----------------
1255     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~vote(node4,value1)']
1256     : --1--0----1------0---------------
1256     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~vote(node4,value2)']
1257     : 1--0------1----0-----------------
1257     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~vote(node4,value0)']
1258     : -1--0------1----0----------------
1258     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~vote(node4,value1)']
1259     : 1--0-------1---0-----------------
1259     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~vote(node4,value0)']
1260     : --1--0--01-----------------------
1260     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~vote(node1,value2)']
1261     : -1--0--0-1-----------------------
1261     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~vote(node1,value1)']
1262     : --1--0--0-1----------------------
1262     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~vote(node1,value2)']
1263     : 1--0--0---1----------------------
1263     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~vote(node1,value0)']
1264     : -1--0--0---1---------------------
1264     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~vote(node1,value1)']
1265     : 1--0--0----1---------------------
1265     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~vote(node1,value0)']
1266     : --1-----0--01--------------------
1266     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~vote(node2,value2)']
1267     : -1-----0--0-1--------------------
1267     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~vote(node2,value1)']
1268     : --1-----0--0-1-------------------
1268     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~vote(node2,value2)']
1269     : 1-----0--0---1-------------------
1269     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~vote(node2,value0)']
1270     : -1-----0--0---1------------------
1270     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~vote(node2,value1)']
1271     : 1-----0--0----1------------------
1271     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~vote(node2,value0)']
1272     : --1-----0---1----0---------------
1272     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~vote(node4,value2)']
1273     : -1-----0----1---0----------------
1273     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~vote(node4,value1)']
1274     : --1-----0----1---0---------------
1274     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~vote(node4,value2)']
1275     : 1-----0------1-0-----------------
1275     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~vote(node4,value0)']
1276     : -1-----0------1-0----------------
1276     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~vote(node4,value1)']
1277     : 1-----0-------10-----------------
1277     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~vote(node4,value0)']
1278     : --1--------01----0---------------
1278     : ['decided(value2)', 'vote(node3,value0)', '~vote(node2,value2)', '~vote(node4,value2)']
1279     : -1--------0-1---0----------------
1279     : ['decided(value1)', 'vote(node3,value0)', '~vote(node2,value1)', '~vote(node4,value1)']
1280     : --1--------0-1---0---------------
1280     : ['decided(value2)', 'vote(node3,value1)', '~vote(node2,value2)', '~vote(node4,value2)']
1281     : 1--------0---1-0-----------------
1281     : ['decided(value0)', 'vote(node3,value1)', '~vote(node2,value0)', '~vote(node4,value0)']
1282     : -1--------0---1-0----------------
1282     : ['decided(value1)', 'vote(node3,value2)', '~vote(node2,value1)', '~vote(node4,value1)']
1283     : 1--------0----10-----------------
1283     : ['decided(value0)', 'vote(node3,value2)', '~vote(node2,value0)', '~vote(node4,value0)']
1284     : --1--0-----01--------------------
1284     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~vote(node2,value2)']
1285     : -1--0-----0-1--------------------
1285     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~vote(node2,value1)']
1286     : --1--0-----0-1-------------------
1286     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~vote(node2,value2)']
1287     : 1--0-----0---1-------------------
1287     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~vote(node2,value0)']
1288     : -1--0-----0---1------------------
1288     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~vote(node2,value1)']
1289     : 1--0-----0----1------------------
1289     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~vote(node2,value0)']
1290     : --1--0------1----0---------------
1290     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~vote(node4,value2)']
1291     : -1--0-------1---0----------------
1291     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~vote(node4,value1)']
1292     : --1--0-------1---0---------------
1292     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~vote(node4,value2)']
1293     : 1--0---------1-0-----------------
1293     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~vote(node4,value0)']
1294     : -1--0---------1-0----------------
1294     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~vote(node4,value1)']
1295     : 1--0----------10-----------------
1295     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~vote(node4,value0)']
1296     : --1--0--0---1--------------------
1296     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~vote(node1,value2)']
1297     : -1--0--0----1--------------------
1297     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~vote(node1,value1)']
1298     : --1--0--0----1-------------------
1298     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~vote(node1,value2)']
1299     : 1--0--0------1-------------------
1299     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~vote(node1,value0)']
1300     : -1--0--0------1------------------
1300     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~vote(node1,value1)']
1301     : 1--0--0-------1------------------
1301     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~vote(node1,value0)']
1302     : --1-----0--0---1-----------------
1302     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~vote(node2,value2)']
1303     : -1-----0--0----1-----------------
1303     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~vote(node2,value1)']
1304     : --1-----0--0----1----------------
1304     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~vote(node2,value2)']
1305     : 1-----0--0------1----------------
1305     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~vote(node2,value0)']
1306     : -1-----0--0------1---------------
1306     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~vote(node2,value1)']
1307     : 1-----0--0-------1---------------
1307     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~vote(node2,value0)']
1308     : --1-----0-----01-----------------
1308     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~vote(node3,value2)']
1309     : -1-----0-----0-1-----------------
1309     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~vote(node3,value1)']
1310     : --1-----0-----0-1----------------
1310     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~vote(node3,value2)']
1311     : 1-----0-----0---1----------------
1311     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~vote(node3,value0)']
1312     : -1-----0-----0---1---------------
1312     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~vote(node3,value1)']
1313     : 1-----0-----0----1---------------
1313     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~vote(node3,value0)']
1314     : --1--------0--01-----------------
1314     : ['decided(value2)', 'vote(node4,value0)', '~vote(node2,value2)', '~vote(node3,value2)']
1315     : -1--------0--0-1-----------------
1315     : ['decided(value1)', 'vote(node4,value0)', '~vote(node2,value1)', '~vote(node3,value1)']
1316     : --1--------0--0-1----------------
1316     : ['decided(value2)', 'vote(node4,value1)', '~vote(node2,value2)', '~vote(node3,value2)']
1317     : 1--------0--0---1----------------
1317     : ['decided(value0)', 'vote(node4,value1)', '~vote(node2,value0)', '~vote(node3,value0)']
1318     : -1--------0--0---1---------------
1318     : ['decided(value1)', 'vote(node4,value2)', '~vote(node2,value1)', '~vote(node3,value1)']
1319     : 1--------0--0----1---------------
1319     : ['decided(value0)', 'vote(node4,value2)', '~vote(node2,value0)', '~vote(node3,value0)']
1320     : --1--0-----0---1-----------------
1320     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~vote(node2,value2)']
1321     : -1--0-----0----1-----------------
1321     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~vote(node2,value1)']
1322     : --1--0-----0----1----------------
1322     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~vote(node2,value2)']
1323     : 1--0-----0------1----------------
1323     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~vote(node2,value0)']
1324     : -1--0-----0------1---------------
1324     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~vote(node2,value1)']
1325     : 1--0-----0-------1---------------
1325     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~vote(node2,value0)']
1326     : --1--0--------01-----------------
1326     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~vote(node3,value2)']
1327     : -1--0--------0-1-----------------
1327     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~vote(node3,value1)']
1328     : --1--0--------0-1----------------
1328     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~vote(node3,value2)']
1329     : 1--0--------0---1----------------
1329     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~vote(node3,value0)']
1330     : -1--0--------0---1---------------
1330     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~vote(node3,value1)']
1331     : 1--0--------0----1---------------
1331     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~vote(node3,value0)']
1332     : --1--0--0------1-----------------
1332     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~vote(node1,value2)']
1333     : -1--0--0-------1-----------------
1333     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~vote(node1,value1)']
1334     : --1--0--0-------1----------------
1334     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~vote(node1,value2)']
1335     : 1--0--0---------1----------------
1335     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~vote(node1,value0)']
1336     : -1--0--0---------1---------------
1336     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~vote(node1,value1)']
1337     : 1--0--0----------1---------------
1337     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~vote(node1,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~vote(node3,value2)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$vote': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0, value$1$vote$1$0, value$1$vote$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$0], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$1]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$1': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$1': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$1$vote$0$0, node$1$vote$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$1$vote$0$0 | node$1$vote$0$1}

part_sig: ('node$0$vote$0$0 | node$1$vote$0$0 | node$1$vote$0$1', 'value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1 | value$0$vote$1$0')


---------- SigGenerator ----------

terms:  ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~vote(node3,value2)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')))}

sign_func_name2count:  {'0$decided': 1, '0$vote': 1, '1$vote': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$1$vote$0$0, node$1$vote$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$1$vote$0$0 | node$1$vote$0$1}

	sort: value

	identical_classes: {'value$0$decided$0; value$1$vote$1; value$1$vote$1': [value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1], 'value$0$vote$1': [value$0$vote$1$0]}

	identical_single_classes: {'value$0$decided$0; value$1$vote$1; value$1$vote$1': value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1, 'value$0$vote$1': value$0$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$vote$0': [node$0$vote$0$0], 'node$1$vote$0': [node$1$vote$0$0, node$1$vote$0$1]}

	identical_single_classes: {'node$0$vote$0': node$0$vote$0$0}

	identical_multi_classes: {'node$1$vote$0': [node$1$vote$0$0, node$1$vote$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['vote(NODE0,VALUE1)', '~vote(NODE2,VALUE0)', 'decided(VALUE0)', '~vote(NODE1,VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2,VALUE0,VALUE1. ~vote(NODE0,VALUE1) | vote(NODE2,VALUE0) | ~decided(VALUE0) | vote(NODE1,VALUE0) | (VALUE0 = VALUE1 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 12 =====================
size : 360
num_suborbits: 2
1338 (*) : --11------1---0------------------
1338     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~vote(node3,value2)']
1339     : -1-1-------1-0-------------------
1339     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~vote(node3,value1)']
1340     : --1-1----1----0------------------
1340     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~vote(node3,value2)']
1341     : 1---1------10--------------------
1341     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~vote(node3,value0)']
1342     : -1---1---1---0-------------------
1342     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~vote(node3,value1)']
1343     : 1----1----1-0--------------------
1343     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~vote(node3,value0)']
1344     : --11------1------0---------------
1344     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~vote(node4,value2)']
1345     : -1-1-------1----0----------------
1345     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~vote(node4,value1)']
1346     : --1-1----1-------0---------------
1346     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~vote(node4,value2)']
1347     : 1---1------1---0-----------------
1347     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~vote(node4,value0)']
1348     : -1---1---1------0----------------
1348     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~vote(node4,value1)']
1349     : 1----1----1----0-----------------
1349     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~vote(node4,value0)']
1350     : --11-------0-1-------------------
1350     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~vote(node2,value2)']
1351     : -1-1------0---1------------------
1351     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~vote(node2,value1)']
1352     : --1-1------01--------------------
1352     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~vote(node2,value2)']
1353     : 1---1----0----1------------------
1353     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~vote(node2,value0)']
1354     : -1---1----0-1--------------------
1354     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~vote(node2,value1)']
1355     : 1----1---0---1-------------------
1355     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~vote(node2,value0)']
1356     : --11---------1---0---------------
1356     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~vote(node4,value2)']
1357     : -1-1----------1-0----------------
1357     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~vote(node4,value1)']
1358     : --1-1-------1----0---------------
1358     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~vote(node4,value2)']
1359     : 1---1---------10-----------------
1359     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~vote(node4,value0)']
1360     : -1---1------1---0----------------
1360     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~vote(node4,value1)']
1361     : 1----1-------1-0-----------------
1361     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~vote(node4,value0)']
1362     : --11-------0----1----------------
1362     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~vote(node2,value2)']
1363     : -1-1------0------1---------------
1363     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~vote(node2,value1)']
1364     : --1-1------0---1-----------------
1364     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~vote(node2,value2)']
1365     : 1---1----0-------1---------------
1365     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~vote(node2,value0)']
1366     : -1---1----0----1-----------------
1366     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~vote(node2,value1)']
1367     : 1----1---0------1----------------
1367     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~vote(node2,value0)']
1368     : --11----------0-1----------------
1368     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~vote(node3,value2)']
1369     : -1-1---------0---1---------------
1369     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~vote(node3,value1)']
1370     : --1-1---------01-----------------
1370     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~vote(node3,value2)']
1371     : 1---1-------0----1---------------
1371     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~vote(node3,value0)']
1372     : -1---1-------0-1-----------------
1372     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~vote(node3,value1)']
1373     : 1----1------0---1----------------
1373     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~vote(node3,value0)']
1374     : --11---1------0------------------
1374     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~vote(node3,value2)']
1375     : -1-1----1----0-------------------
1375     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~vote(node3,value1)']
1376     : --1-1-1-------0------------------
1376     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~vote(node3,value2)']
1377     : 1---1---1---0--------------------
1377     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~vote(node3,value0)']
1378     : -1---11------0-------------------
1378     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~vote(node3,value1)']
1379     : 1----1-1----0--------------------
1379     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~vote(node3,value0)']
1380     : --11---1---------0---------------
1380     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~vote(node4,value2)']
1381     : -1-1----1-------0----------------
1381     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~vote(node4,value1)']
1382     : --1-1-1----------0---------------
1382     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~vote(node4,value2)']
1383     : 1---1---1------0-----------------
1383     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~vote(node4,value0)']
1384     : -1---11---------0----------------
1384     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~vote(node4,value1)']
1385     : 1----1-1-------0-----------------
1385     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~vote(node4,value0)']
1386     : --11----0----1-------------------
1386     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~vote(node1,value2)']
1387     : -1-1---0------1------------------
1387     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~vote(node1,value1)']
1388     : --1-1---0---1--------------------
1388     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~vote(node1,value2)']
1389     : 1---1-0-------1------------------
1389     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~vote(node1,value0)']
1390     : -1---1-0----1--------------------
1390     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~vote(node1,value1)']
1391     : 1----10------1-------------------
1391     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~vote(node1,value0)']
1392     : --11----0-------1----------------
1392     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~vote(node1,value2)']
1393     : -1-1---0---------1---------------
1393     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~vote(node1,value1)']
1394     : --1-1---0------1-----------------
1394     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~vote(node1,value2)']
1395     : 1---1-0----------1---------------
1395     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~vote(node1,value0)']
1396     : -1---1-0-------1-----------------
1396     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~vote(node1,value1)']
1397     : 1----10---------1----------------
1397     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~vote(node1,value0)']
1398     : --11---1---0---------------------
1398     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~vote(node2,value2)']
1399     : -1-1----1-0----------------------
1399     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~vote(node2,value1)']
1400     : --1-1-1----0---------------------
1400     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~vote(node2,value2)']
1401     : 1---1---10-----------------------
1401     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~vote(node2,value0)']
1402     : -1---11---0----------------------
1402     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~vote(node2,value1)']
1403     : 1----1-1-0-----------------------
1403     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~vote(node2,value0)']
1404     : --11----0-1----------------------
1404     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~vote(node1,value2)']
1405     : -1-1---0---1---------------------
1405     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~vote(node1,value1)']
1406     : --1-1---01-----------------------
1406     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~vote(node1,value2)']
1407     : 1---1-0----1---------------------
1407     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~vote(node1,value0)']
1408     : -1---1-0-1-----------------------
1408     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~vote(node1,value1)']
1409     : 1----10---1----------------------
1409     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~vote(node1,value0)']
1410     : --1---1---1---0------------------
1410     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~vote(node3,value2)']
1411     : -1----1----1-0-------------------
1411     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~vote(node3,value1)']
1412     : --1----1-1----0------------------
1412     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~vote(node3,value2)']
1413     : 1------1---10--------------------
1413     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~vote(node3,value0)']
1414     : -1------11---0-------------------
1414     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~vote(node3,value1)']
1415     : 1-------1-1-0--------------------
1415     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~vote(node3,value0)']
1416     : --1---1---1------0---------------
1416     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~vote(node4,value2)']
1417     : -1----1----1----0----------------
1417     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~vote(node4,value1)']
1418     : --1----1-1-------0---------------
1418     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~vote(node4,value2)']
1419     : 1------1---1---0-----------------
1419     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~vote(node4,value0)']
1420     : -1------11------0----------------
1420     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~vote(node4,value1)']
1421     : 1-------1-1----0-----------------
1421     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~vote(node4,value0)']
1422     : --1---1----0-1-------------------
1422     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~vote(node2,value2)']
1423     : -1----1---0---1------------------
1423     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~vote(node2,value1)']
1424     : --1----1---01--------------------
1424     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~vote(node2,value2)']
1425     : 1------1-0----1------------------
1425     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~vote(node2,value0)']
1426     : -1------1-0-1--------------------
1426     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~vote(node2,value1)']
1427     : 1-------10---1-------------------
1427     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~vote(node2,value0)']
1428     : --1---1------1---0---------------
1428     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~vote(node4,value2)']
1429     : -1----1-------1-0----------------
1429     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~vote(node4,value1)']
1430     : --1----1----1----0---------------
1430     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~vote(node4,value2)']
1431     : 1------1------10-----------------
1431     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~vote(node4,value0)']
1432     : -1------1---1---0----------------
1432     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~vote(node4,value1)']
1433     : 1-------1----1-0-----------------
1433     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~vote(node4,value0)']
1434     : --1---1----0----1----------------
1434     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~vote(node2,value2)']
1435     : -1----1---0------1---------------
1435     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~vote(node2,value1)']
1436     : --1----1---0---1-----------------
1436     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~vote(node2,value2)']
1437     : 1------1-0-------1---------------
1437     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~vote(node2,value0)']
1438     : -1------1-0----1-----------------
1438     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~vote(node2,value1)']
1439     : 1-------10------1----------------
1439     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~vote(node2,value0)']
1440     : --1---1-------0-1----------------
1440     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~vote(node3,value2)']
1441     : -1----1------0---1---------------
1441     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~vote(node3,value1)']
1442     : --1----1------01-----------------
1442     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~vote(node3,value2)']
1443     : 1------1----0----1---------------
1443     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~vote(node3,value0)']
1444     : -1------1----0-1-----------------
1444     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~vote(node3,value1)']
1445     : 1-------1---0---1----------------
1445     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~vote(node3,value0)']
1446     : --1--01------1-------------------
1446     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~vote(node0,value2)']
1447     : -1--0-1-------1------------------
1447     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~vote(node0,value1)']
1448     : --1--0-1----1--------------------
1448     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~vote(node0,value2)']
1449     : 1--0---1------1------------------
1449     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~vote(node0,value0)']
1450     : -1--0---1---1--------------------
1450     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~vote(node0,value1)']
1451     : 1--0----1----1-------------------
1451     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~vote(node0,value0)']
1452     : --1--01---------1----------------
1452     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~vote(node0,value2)']
1453     : -1--0-1----------1---------------
1453     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~vote(node0,value1)']
1454     : --1--0-1-------1-----------------
1454     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~vote(node0,value2)']
1455     : 1--0---1---------1---------------
1455     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~vote(node0,value0)']
1456     : -1--0---1------1-----------------
1456     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~vote(node0,value1)']
1457     : 1--0----1-------1----------------
1457     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~vote(node0,value0)']
1458     : --1--01---1----------------------
1458     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~vote(node0,value2)']
1459     : -1--0-1----1---------------------
1459     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~vote(node0,value1)']
1460     : --1--0-1-1-----------------------
1460     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~vote(node0,value2)']
1461     : 1--0---1---1---------------------
1461     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~vote(node0,value0)']
1462     : -1--0---11-----------------------
1462     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~vote(node0,value1)']
1463     : 1--0----1-1----------------------
1463     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~vote(node0,value0)']
1464     : --1-----01---1-------------------
1464     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~vote(node1,value2)']
1465     : -1-----0-1----1------------------
1465     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~vote(node1,value1)']
1466     : --1-----0-1-1--------------------
1466     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~vote(node1,value2)']
1467     : 1-----0---1---1------------------
1467     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~vote(node1,value0)']
1468     : -1-----0---11--------------------
1468     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~vote(node1,value1)']
1469     : 1-----0----1-1-------------------
1469     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~vote(node1,value0)']
1470     : --1------1---1---0---------------
1470     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~vote(node4,value2)']
1471     : -1-------1----1-0----------------
1471     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~vote(node4,value1)']
1472     : --1-------1-1----0---------------
1472     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~vote(node4,value2)']
1473     : 1---------1---10-----------------
1473     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~vote(node4,value0)']
1474     : -1---------11---0----------------
1474     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~vote(node4,value1)']
1475     : 1----------1-1-0-----------------
1475     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~vote(node4,value0)']
1476     : --1-----01------1----------------
1476     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~vote(node1,value2)']
1477     : -1-----0-1-------1---------------
1477     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~vote(node1,value1)']
1478     : --1-----0-1----1-----------------
1478     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~vote(node1,value2)']
1479     : 1-----0---1------1---------------
1479     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~vote(node1,value0)']
1480     : -1-----0---1---1-----------------
1480     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~vote(node1,value1)']
1481     : 1-----0----1----1----------------
1481     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~vote(node1,value0)']
1482     : --1------1----0-1----------------
1482     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~vote(node3,value2)']
1483     : -1-------1---0---1---------------
1483     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~vote(node3,value1)']
1484     : --1-------1---01-----------------
1484     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~vote(node3,value2)']
1485     : 1---------1-0----1---------------
1485     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~vote(node3,value0)']
1486     : -1---------1-0-1-----------------
1486     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~vote(node3,value1)']
1487     : 1----------10---1----------------
1487     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~vote(node3,value0)']
1488     : --1--0---1---1-------------------
1488     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~vote(node0,value2)']
1489     : -1--0----1----1------------------
1489     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~vote(node0,value1)']
1490     : --1--0----1-1--------------------
1490     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~vote(node0,value2)']
1491     : 1--0------1---1------------------
1491     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~vote(node0,value0)']
1492     : -1--0------11--------------------
1492     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~vote(node0,value1)']
1493     : 1--0-------1-1-------------------
1493     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~vote(node0,value0)']
1494     : --1--0---1------1----------------
1494     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~vote(node0,value2)']
1495     : -1--0----1-------1---------------
1495     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~vote(node0,value1)']
1496     : --1--0----1----1-----------------
1496     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~vote(node0,value2)']
1497     : 1--0------1------1---------------
1497     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~vote(node0,value0)']
1498     : -1--0------1---1-----------------
1498     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~vote(node0,value1)']
1499     : 1--0-------1----1----------------
1499     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~vote(node0,value0)']
1500     : --1-----0---1---1----------------
1500     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~vote(node1,value2)']
1501     : -1-----0----1----1---------------
1501     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~vote(node1,value1)']
1502     : --1-----0----1-1-----------------
1502     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~vote(node1,value2)']
1503     : 1-----0------1---1---------------
1503     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~vote(node1,value0)']
1504     : -1-----0------11-----------------
1504     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~vote(node1,value1)']
1505     : 1-----0-------1-1----------------
1505     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~vote(node1,value0)']
1506     : --1--------01---1----------------
1506     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~vote(node2,value2)']
1507     : -1--------0-1----1---------------
1507     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~vote(node2,value1)']
1508     : --1--------0-1-1-----------------
1508     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~vote(node2,value2)']
1509     : 1--------0---1---1---------------
1509     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~vote(node2,value0)']
1510     : -1--------0---11-----------------
1510     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~vote(node2,value1)']
1511     : 1--------0----1-1----------------
1511     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~vote(node2,value0)']
1512     : --1--0------1---1----------------
1512     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~vote(node0,value2)']
1513     : -1--0-------1----1---------------
1513     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~vote(node0,value1)']
1514     : --1--0-------1-1-----------------
1514     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~vote(node0,value2)']
1515     : 1--0---------1---1---------------
1515     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~vote(node0,value0)']
1516     : -1--0---------11-----------------
1516     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~vote(node0,value1)']
1517     : 1--0----------1-1----------------
1517     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~vote(node0,value0)']
1578 (*) : --11-------01--------------------
1578     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node2,value2)']
1579     : -1-1------0-1--------------------
1579     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node2,value1)']
1580     : --1-1------0-1-------------------
1580     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node2,value2)']
1581     : 1---1----0---1-------------------
1581     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node2,value0)']
1582     : -1---1----0---1------------------
1582     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node2,value1)']
1583     : 1----1---0----1------------------
1583     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node2,value0)']
1584     : --11-------0---1-----------------
1584     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node2,value2)']
1585     : -1-1------0----1-----------------
1585     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node2,value1)']
1586     : --1-1------0----1----------------
1586     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node2,value2)']
1587     : 1---1----0------1----------------
1587     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node2,value0)']
1588     : -1---1----0------1---------------
1588     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node2,value1)']
1589     : 1----1---0-------1---------------
1589     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node2,value0)']
1590     : --11-----1----0------------------
1590     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node3,value2)']
1591     : -1-1-----1---0-------------------
1591     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node3,value1)']
1592     : --1-1-----1---0------------------
1592     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node3,value2)']
1593     : 1---1-----1-0--------------------
1593     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node3,value0)']
1594     : -1---1-----1-0-------------------
1594     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node3,value1)']
1595     : 1----1-----10--------------------
1595     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node3,value0)']
1596     : --11----------01-----------------
1596     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node3,value2)']
1597     : -1-1---------0-1-----------------
1597     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node3,value1)']
1598     : --1-1---------0-1----------------
1598     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node3,value2)']
1599     : 1---1-------0---1----------------
1599     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node3,value0)']
1600     : -1---1-------0---1---------------
1600     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node3,value1)']
1601     : 1----1------0----1---------------
1601     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node3,value0)']
1602     : --11-----1-------0---------------
1602     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node4,value2)']
1603     : -1-1-----1------0----------------
1603     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node4,value1)']
1604     : --1-1-----1------0---------------
1604     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node4,value2)']
1605     : 1---1-----1----0-----------------
1605     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node4,value0)']
1606     : -1---1-----1----0----------------
1606     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node4,value1)']
1607     : 1----1-----1---0-----------------
1607     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node4,value0)']
1608     : --11--------1----0---------------
1608     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node4,value2)']
1609     : -1-1--------1---0----------------
1609     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node4,value1)']
1610     : --1-1--------1---0---------------
1610     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node4,value2)']
1611     : 1---1--------1-0-----------------
1611     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node4,value0)']
1612     : -1---1--------1-0----------------
1612     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node4,value1)']
1613     : 1----1--------10-----------------
1613     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node4,value0)']
1614     : --11----0---1--------------------
1614     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node1,value2)']
1615     : -1-1---0----1--------------------
1615     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node1,value1)']
1616     : --1-1---0----1-------------------
1616     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node1,value2)']
1617     : 1---1-0------1-------------------
1617     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node1,value0)']
1618     : -1---1-0------1------------------
1618     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node1,value1)']
1619     : 1----10-------1------------------
1619     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node1,value0)']
1620     : --11----0------1-----------------
1620     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node1,value2)']
1621     : -1-1---0-------1-----------------
1621     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node1,value1)']
1622     : --1-1---0-------1----------------
1622     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node1,value2)']
1623     : 1---1-0---------1----------------
1623     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node1,value0)']
1624     : -1---1-0---------1---------------
1624     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node1,value1)']
1625     : 1----10----------1---------------
1625     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node1,value0)']
1626     : --11--1-------0------------------
1626     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node3,value2)']
1627     : -1-1--1------0-------------------
1627     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node3,value1)']
1628     : --1-1--1------0------------------
1628     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node3,value2)']
1629     : 1---1--1----0--------------------
1629     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node3,value0)']
1630     : -1---1--1----0-------------------
1630     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node3,value1)']
1631     : 1----1--1---0--------------------
1631     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node3,value0)']
1632     : --11--1----------0---------------
1632     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node4,value2)']
1633     : -1-1--1---------0----------------
1633     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node4,value1)']
1634     : --1-1--1---------0---------------
1634     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node4,value2)']
1635     : 1---1--1-------0-----------------
1635     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node4,value0)']
1636     : -1---1--1-------0----------------
1636     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node4,value1)']
1637     : 1----1--1------0-----------------
1637     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node4,value0)']
1638     : --11----01-----------------------
1638     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node1,value2)']
1639     : -1-1---0-1-----------------------
1639     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node1,value1)']
1640     : --1-1---0-1----------------------
1640     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node1,value2)']
1641     : 1---1-0---1----------------------
1641     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node1,value0)']
1642     : -1---1-0---1---------------------
1642     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node1,value1)']
1643     : 1----10----1---------------------
1643     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node1,value0)']
1644     : --11--1----0---------------------
1644     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node2,value2)']
1645     : -1-1--1---0----------------------
1645     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node2,value1)']
1646     : --1-1--1---0---------------------
1646     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node2,value2)']
1647     : 1---1--1-0-----------------------
1647     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node2,value0)']
1648     : -1---1--1-0----------------------
1648     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node2,value1)']
1649     : 1----1--10-----------------------
1649     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node2,value0)']
1650     : --1---1----01--------------------
1650     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node2,value2)']
1651     : -1----1---0-1--------------------
1651     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node2,value1)']
1652     : --1----1---0-1-------------------
1652     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node2,value2)']
1653     : 1------1-0---1-------------------
1653     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node2,value0)']
1654     : -1------1-0---1------------------
1654     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node2,value1)']
1655     : 1-------10----1------------------
1655     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node2,value0)']
1656     : --1---1----0---1-----------------
1656     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node2,value2)']
1657     : -1----1---0----1-----------------
1657     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node2,value1)']
1658     : --1----1---0----1----------------
1658     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node2,value2)']
1659     : 1------1-0------1----------------
1659     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node2,value0)']
1660     : -1------1-0------1---------------
1660     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node2,value1)']
1661     : 1-------10-------1---------------
1661     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node2,value0)']
1662     : --1---1--1----0------------------
1662     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node3,value2)']
1663     : -1----1--1---0-------------------
1663     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node3,value1)']
1664     : --1----1--1---0------------------
1664     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node3,value2)']
1665     : 1------1--1-0--------------------
1665     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node3,value0)']
1666     : -1------1--1-0-------------------
1666     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node3,value1)']
1667     : 1-------1--10--------------------
1667     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node3,value0)']
1668     : --1---1-------01-----------------
1668     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node3,value2)']
1669     : -1----1------0-1-----------------
1669     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node3,value1)']
1670     : --1----1------0-1----------------
1670     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node3,value2)']
1671     : 1------1----0---1----------------
1671     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node3,value0)']
1672     : -1------1----0---1---------------
1672     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node3,value1)']
1673     : 1-------1---0----1---------------
1673     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node3,value0)']
1674     : --1---1--1-------0---------------
1674     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node4,value2)']
1675     : -1----1--1------0----------------
1675     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node4,value1)']
1676     : --1----1--1------0---------------
1676     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node4,value2)']
1677     : 1------1--1----0-----------------
1677     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node4,value0)']
1678     : -1------1--1----0----------------
1678     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node4,value1)']
1679     : 1-------1--1---0-----------------
1679     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node4,value0)']
1680     : --1---1-----1----0---------------
1680     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node4,value2)']
1681     : -1----1-----1---0----------------
1681     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node4,value1)']
1682     : --1----1-----1---0---------------
1682     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node4,value2)']
1683     : 1------1-----1-0-----------------
1683     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node4,value0)']
1684     : -1------1-----1-0----------------
1684     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node4,value1)']
1685     : 1-------1-----10-----------------
1685     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node4,value0)']
1686     : --1--01-----1--------------------
1686     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node0,value2)']
1687     : -1--0-1-----1--------------------
1687     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node0,value1)']
1688     : --1--0-1-----1-------------------
1688     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node0,value2)']
1689     : 1--0---1-----1-------------------
1689     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node0,value0)']
1690     : -1--0---1-----1------------------
1690     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node0,value1)']
1691     : 1--0----1-----1------------------
1691     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node0,value0)']
1692     : --1--01--------1-----------------
1692     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node0,value2)']
1693     : -1--0-1--------1-----------------
1693     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node0,value1)']
1694     : --1--0-1--------1----------------
1694     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node0,value2)']
1695     : 1--0---1--------1----------------
1695     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node0,value0)']
1696     : -1--0---1--------1---------------
1696     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node0,value1)']
1697     : 1--0----1--------1---------------
1697     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node0,value0)']
1698     : --1--01--1-----------------------
1698     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node0,value2)']
1699     : -1--0-1--1-----------------------
1699     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node0,value1)']
1700     : --1--0-1--1----------------------
1700     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node0,value2)']
1701     : 1--0---1--1----------------------
1701     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node0,value0)']
1702     : -1--0---1--1---------------------
1702     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node0,value1)']
1703     : 1--0----1--1---------------------
1703     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node0,value0)']
1704     : --1-----01--1--------------------
1704     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node1,value2)']
1705     : -1-----0-1--1--------------------
1705     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node1,value1)']
1706     : --1-----0-1--1-------------------
1706     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node1,value2)']
1707     : 1-----0---1--1-------------------
1707     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node1,value0)']
1708     : -1-----0---1--1------------------
1708     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node1,value1)']
1709     : 1-----0----1--1------------------
1709     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node1,value0)']
1710     : --1-----01-----1-----------------
1710     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node1,value2)']
1711     : -1-----0-1-----1-----------------
1711     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node1,value1)']
1712     : --1-----0-1-----1----------------
1712     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node1,value2)']
1713     : 1-----0---1-----1----------------
1713     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node1,value0)']
1714     : -1-----0---1-----1---------------
1714     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node1,value1)']
1715     : 1-----0----1-----1---------------
1715     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node1,value0)']
1716     : --1------1----01-----------------
1716     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node3,value2)']
1717     : -1-------1---0-1-----------------
1717     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node3,value1)']
1718     : --1-------1---0-1----------------
1718     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node3,value2)']
1719     : 1---------1-0---1----------------
1719     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node3,value0)']
1720     : -1---------1-0---1---------------
1720     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node3,value1)']
1721     : 1----------10----1---------------
1721     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node3,value0)']
1722     : --1------1--1----0---------------
1722     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node4,value2)']
1723     : -1-------1--1---0----------------
1723     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node4,value1)']
1724     : --1-------1--1---0---------------
1724     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node4,value2)']
1725     : 1---------1--1-0-----------------
1725     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node4,value0)']
1726     : -1---------1--1-0----------------
1726     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node4,value1)']
1727     : 1----------1--10-----------------
1727     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node4,value0)']
1728     : --1--0---1--1--------------------
1728     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node0,value2)']
1729     : -1--0----1--1--------------------
1729     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node0,value1)']
1730     : --1--0----1--1-------------------
1730     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node0,value2)']
1731     : 1--0------1--1-------------------
1731     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node0,value0)']
1732     : -1--0------1--1------------------
1732     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node0,value1)']
1733     : 1--0-------1--1------------------
1733     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node0,value0)']
1734     : --1--0---1-----1-----------------
1734     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node0,value2)']
1735     : -1--0----1-----1-----------------
1735     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node0,value1)']
1736     : --1--0----1-----1----------------
1736     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node0,value2)']
1737     : 1--0------1-----1----------------
1737     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node0,value0)']
1738     : -1--0------1-----1---------------
1738     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node0,value1)']
1739     : 1--0-------1-----1---------------
1739     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node0,value0)']
1740     : --1-----0---1--1-----------------
1740     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node1,value2)']
1741     : -1-----0----1--1-----------------
1741     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node1,value1)']
1742     : --1-----0----1--1----------------
1742     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node1,value2)']
1743     : 1-----0------1--1----------------
1743     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node1,value0)']
1744     : -1-----0------1--1---------------
1744     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node1,value1)']
1745     : 1-----0-------1--1---------------
1745     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node1,value0)']
1746     : --1--------01--1-----------------
1746     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node2,value2)']
1747     : -1--------0-1--1-----------------
1747     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node2,value1)']
1748     : --1--------0-1--1----------------
1748     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node2,value2)']
1749     : 1--------0---1--1----------------
1749     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node2,value0)']
1750     : -1--------0---1--1---------------
1750     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node2,value1)']
1751     : 1--------0----1--1---------------
1751     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node2,value0)']
1752     : --1--0------1--1-----------------
1752     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node0,value2)']
1753     : -1--0-------1--1-----------------
1753     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node0,value1)']
1754     : --1--0-------1--1----------------
1754     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node0,value2)']
1755     : 1--0---------1--1----------------
1755     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node0,value0)']
1756     : -1--0---------1--1---------------
1756     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node0,value1)']
1757     : 1--0----------1--1---------------
1757     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node0,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~vote(node3,value2)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$vote': [(Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0, value$1$vote$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$1], Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$1], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$0]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$1': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0, value$0$vote$1$0, value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$0$vote$0$1, node$1$vote$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0 | value$0$vote$1$0 | value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$0$vote$0$1 | node$1$vote$0$0}

part_sig: ('node$0$vote$0$0 | node$0$vote$0$1 | node$1$vote$0$0', 'value$0$decided$0$0; value$1$vote$1$0 | value$0$vote$1$0 | value$0$vote$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', 'vote(node3,value0)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$vote': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0, value$1$vote$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0, value$0$vote$1$1], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$0]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$1': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$1': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0, value$0$vote$1$0; value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$0$vote$0$1, node$1$vote$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0 | value$0$vote$1$0; value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$0$vote$0$1 | node$1$vote$0$0}

part_sig: ('node$0$vote$0$0 | node$0$vote$0$1 | node$1$vote$0$0', 'value$0$decided$0$0; value$1$vote$1$0 | value$0$vote$1$0; value$0$vote$1$1')


---------- SigGenerator ----------

terms:  ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~vote(node3,value2)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')))}

sign_func_name2count:  {'0$decided': 1, '0$vote': 2, '1$vote': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0, value$0$vote$1$0, value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$0$vote$0$1, node$1$vote$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0 | value$0$vote$1$0 | value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$0$vote$0$1 | node$1$vote$0$0}

	sort: value

	identical_classes: {'value$0$decided$0; value$1$vote$1': [value$0$decided$0$0; value$1$vote$1$0], 'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}

	identical_single_classes: {'value$0$decided$0; value$1$vote$1': value$0$decided$0$0; value$1$vote$1$0}

	identical_multi_classes: {'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}

	sort: node

	identical_classes: {'node$0$vote$0': [node$0$vote$0$0, node$0$vote$0$1], 'node$1$vote$0': [node$1$vote$0$0]}

	identical_single_classes: {'node$1$vote$0': node$1$vote$0$0}

	identical_multi_classes: {'node$0$vote$0': [node$0$vote$0$0, node$0$vote$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE2', EnumeratedSort('value', ('value0', 'value1', 'value2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE2', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['vote(NODE0,VALUE1)', '~vote(NODE2,VALUE0)', 'decided(VALUE0)', 'vote(NODE1,VALUE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,VALUE2,NODE0,NODE2,VALUE0,VALUE1. ~vote(NODE0,VALUE1) | vote(NODE2,VALUE0) | ~decided(VALUE0) | ~vote(NODE1,VALUE2) | (VALUE0 = VALUE1 | VALUE0 = VALUE2 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)


=== Prime Orbit 13 =====================
size : 240
num_suborbits: 2
1938 (*) : --11------1-1--------------------
1938     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node3,value0)']
1939     : -1-1-------11--------------------
1939     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', 'vote(node3,value0)']
1940     : --1-1----1---1-------------------
1940     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', 'vote(node3,value1)']
1941     : 1---1------1-1-------------------
1941     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', 'vote(node3,value1)']
1942     : -1---1---1----1------------------
1942     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', 'vote(node3,value2)']
1943     : 1----1----1---1------------------
1943     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', 'vote(node3,value2)']
1944     : --11------1----1-----------------
1944     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node4,value0)']
1945     : -1-1-------1---1-----------------
1945     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', 'vote(node4,value0)']
1946     : --1-1----1------1----------------
1946     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', 'vote(node4,value1)']
1947     : 1---1------1----1----------------
1947     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', 'vote(node4,value1)']
1948     : -1---1---1-------1---------------
1948     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', 'vote(node4,value2)']
1949     : 1----1----1------1---------------
1949     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', 'vote(node4,value2)']
1950     : --11-----1---1-------------------
1950     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node3,value1)']
1951     : -1-1-----1----1------------------
1951     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node3,value2)']
1952     : --1-1-----1-1--------------------
1952     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node3,value0)']
1953     : 1---1-----1---1------------------
1953     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node3,value2)']
1954     : -1---1-----11--------------------
1954     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node3,value0)']
1955     : 1----1-----1-1-------------------
1955     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node3,value1)']
1956     : --11---------1-1-----------------
1956     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', 'vote(node4,value0)']
1957     : -1-1----------11-----------------
1957     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', 'vote(node4,value0)']
1958     : --1-1-------1---1----------------
1958     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', 'vote(node4,value1)']
1959     : 1---1---------1-1----------------
1959     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', 'vote(node4,value1)']
1960     : -1---1------1----1---------------
1960     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', 'vote(node4,value2)']
1961     : 1----1-------1---1---------------
1961     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', 'vote(node4,value2)']
1962     : --11-----1------1----------------
1962     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node4,value1)']
1963     : -1-1-----1-------1---------------
1963     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node4,value2)']
1964     : --1-1-----1----1-----------------
1964     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node4,value0)']
1965     : 1---1-----1------1---------------
1965     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node4,value2)']
1966     : -1---1-----1---1-----------------
1966     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node4,value0)']
1967     : 1----1-----1----1----------------
1967     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node4,value1)']
1968     : --11--------1---1----------------
1968     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', 'vote(node4,value1)']
1969     : -1-1--------1----1---------------
1969     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', 'vote(node4,value2)']
1970     : --1-1--------1-1-----------------
1970     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', 'vote(node4,value0)']
1971     : 1---1--------1---1---------------
1971     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', 'vote(node4,value2)']
1972     : -1---1--------11-----------------
1972     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', 'vote(node4,value0)']
1973     : 1----1--------1-1----------------
1973     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', 'vote(node4,value1)']
1974     : --11---1----1--------------------
1974     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node3,value0)']
1975     : -1-1----1---1--------------------
1975     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node3,value0)']
1976     : --1-1-1------1-------------------
1976     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node3,value1)']
1977     : 1---1---1----1-------------------
1977     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node3,value1)']
1978     : -1---11-------1------------------
1978     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node3,value2)']
1979     : 1----1-1------1------------------
1979     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node3,value2)']
1980     : --11---1-------1-----------------
1980     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node4,value0)']
1981     : -1-1----1------1-----------------
1981     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node4,value0)']
1982     : --1-1-1---------1----------------
1982     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node4,value1)']
1983     : 1---1---1-------1----------------
1983     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node4,value1)']
1984     : -1---11----------1---------------
1984     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node4,value2)']
1985     : 1----1-1---------1---------------
1985     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node4,value2)']
1986     : --11--1------1-------------------
1986     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node3,value1)']
1987     : -1-1--1-------1------------------
1987     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node3,value2)']
1988     : --1-1--1----1--------------------
1988     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node3,value0)']
1989     : 1---1--1------1------------------
1989     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node3,value2)']
1990     : -1---1--1---1--------------------
1990     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node3,value0)']
1991     : 1----1--1----1-------------------
1991     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node3,value1)']
1992     : --11--1---------1----------------
1992     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node4,value1)']
1993     : -1-1--1----------1---------------
1993     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node4,value2)']
1994     : --1-1--1-------1-----------------
1994     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node4,value0)']
1995     : 1---1--1---------1---------------
1995     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node4,value2)']
1996     : -1---1--1------1-----------------
1996     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node4,value0)']
1997     : 1----1--1-------1----------------
1997     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node4,value1)']
1998     : --11---1-1-----------------------
1998     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node2,value0)']
1999     : -1-1----11-----------------------
1999     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node2,value0)']
2000     : --1-1-1---1----------------------
2000     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node2,value1)']
2001     : 1---1---1-1----------------------
2001     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node2,value1)']
2002     : -1---11----1---------------------
2002     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node2,value2)']
2003     : 1----1-1---1---------------------
2003     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node2,value2)']
2004     : --11--1---1----------------------
2004     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node2,value1)']
2005     : -1-1--1----1---------------------
2005     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node2,value2)']
2006     : --1-1--1-1-----------------------
2006     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node2,value0)']
2007     : 1---1--1---1---------------------
2007     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node2,value2)']
2008     : -1---1--11-----------------------
2008     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node2,value0)']
2009     : 1----1--1-1----------------------
2009     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node2,value1)']
2010     : --1---1---1-1--------------------
2010     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', 'vote(node3,value0)']
2011     : -1----1----11--------------------
2011     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', 'vote(node3,value0)']
2012     : --1----1-1---1-------------------
2012     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', 'vote(node3,value1)']
2013     : 1------1---1-1-------------------
2013     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', 'vote(node3,value1)']
2014     : -1------11----1------------------
2014     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node3,value2)']
2015     : 1-------1-1---1------------------
2015     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', 'vote(node3,value2)']
2016     : --1---1---1----1-----------------
2016     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', 'vote(node4,value0)']
2017     : -1----1----1---1-----------------
2017     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', 'vote(node4,value0)']
2018     : --1----1-1------1----------------
2018     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', 'vote(node4,value1)']
2019     : 1------1---1----1----------------
2019     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', 'vote(node4,value1)']
2020     : -1------11-------1---------------
2020     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node4,value2)']
2021     : 1-------1-1------1---------------
2021     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', 'vote(node4,value2)']
2022     : --1---1--1---1-------------------
2022     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node3,value1)']
2023     : -1----1--1----1------------------
2023     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node3,value2)']
2024     : --1----1--1-1--------------------
2024     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node3,value0)']
2025     : 1------1--1---1------------------
2025     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node3,value2)']
2026     : -1------1--11--------------------
2026     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node3,value0)']
2027     : 1-------1--1-1-------------------
2027     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node3,value1)']
2028     : --1---1------1-1-----------------
2028     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', 'vote(node4,value0)']
2029     : -1----1-------11-----------------
2029     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', 'vote(node4,value0)']
2030     : --1----1----1---1----------------
2030     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', 'vote(node4,value1)']
2031     : 1------1------1-1----------------
2031     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', 'vote(node4,value1)']
2032     : -1------1---1----1---------------
2032     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', 'vote(node4,value2)']
2033     : 1-------1----1---1---------------
2033     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', 'vote(node4,value2)']
2034     : --1---1--1------1----------------
2034     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node4,value1)']
2035     : -1----1--1-------1---------------
2035     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node4,value2)']
2036     : --1----1--1----1-----------------
2036     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node4,value0)']
2037     : 1------1--1------1---------------
2037     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node4,value2)']
2038     : -1------1--1---1-----------------
2038     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node4,value0)']
2039     : 1-------1--1----1----------------
2039     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node4,value1)']
2040     : --1---1-----1---1----------------
2040     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', 'vote(node4,value1)']
2041     : -1----1-----1----1---------------
2041     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', 'vote(node4,value2)']
2042     : --1----1-----1-1-----------------
2042     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', 'vote(node4,value0)']
2043     : 1------1-----1---1---------------
2043     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', 'vote(node4,value2)']
2044     : -1------1-----11-----------------
2044     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', 'vote(node4,value0)']
2045     : 1-------1-----1-1----------------
2045     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', 'vote(node4,value1)']
2046     : --1-1-1-----1--------------------
2046     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node3,value0)']
2047     : -1---11-----1--------------------
2047     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node3,value0)']
2048     : --11---1-----1-------------------
2048     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node3,value1)']
2049     : 1----1-1-----1-------------------
2049     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node3,value1)']
2050     : -1-1----1-----1------------------
2050     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node3,value2)']
2051     : 1---1---1-----1------------------
2051     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node3,value2)']
2052     : --1-1-1--------1-----------------
2052     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node4,value0)']
2053     : -1---11--------1-----------------
2053     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node4,value0)']
2054     : --11---1--------1----------------
2054     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node4,value1)']
2055     : 1----1-1--------1----------------
2055     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node4,value1)']
2056     : -1-1----1--------1---------------
2056     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node4,value2)']
2057     : 1---1---1--------1---------------
2057     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node4,value2)']
2058     : --1-1-1--1-----------------------
2058     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node2,value0)']
2059     : -1---11--1-----------------------
2059     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node2,value0)']
2060     : --11---1--1----------------------
2060     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node2,value1)']
2061     : 1----1-1--1----------------------
2061     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node2,value1)']
2062     : -1-1----1--1---------------------
2062     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node2,value2)']
2063     : 1---1---1--1---------------------
2063     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node2,value2)']
2064     : --1----1-1--1--------------------
2064     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', 'vote(node3,value0)']
2065     : -1------11--1--------------------
2065     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node3,value0)']
2066     : --1---1---1--1-------------------
2066     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', 'vote(node3,value1)']
2067     : 1-------1-1--1-------------------
2067     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', 'vote(node3,value1)']
2068     : -1----1----1--1------------------
2068     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', 'vote(node3,value2)']
2069     : 1------1---1--1------------------
2069     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', 'vote(node3,value2)']
2070     : --1----1-1-----1-----------------
2070     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', 'vote(node4,value0)']
2071     : -1------11-----1-----------------
2071     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node4,value0)']
2072     : --1---1---1-----1----------------
2072     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', 'vote(node4,value1)']
2073     : 1-------1-1-----1----------------
2073     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', 'vote(node4,value1)']
2074     : -1----1----1-----1---------------
2074     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', 'vote(node4,value2)']
2075     : 1------1---1-----1---------------
2075     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', 'vote(node4,value2)']
2076     : --1------1---1-1-----------------
2076     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', 'vote(node4,value0)']
2077     : -1-------1----11-----------------
2077     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', 'vote(node4,value0)']
2078     : --1-------1-1---1----------------
2078     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', 'vote(node4,value1)']
2079     : 1---------1---1-1----------------
2079     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', 'vote(node4,value1)']
2080     : -1---------11----1---------------
2080     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', 'vote(node4,value2)']
2081     : 1----------1-1---1---------------
2081     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', 'vote(node4,value2)']
2082     : --1------1--1---1----------------
2082     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', 'vote(node4,value1)']
2083     : -1-------1--1----1---------------
2083     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', 'vote(node4,value2)']
2084     : --1-------1--1-1-----------------
2084     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', 'vote(node4,value0)']
2085     : 1---------1--1---1---------------
2085     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', 'vote(node4,value2)']
2086     : -1---------1--11-----------------
2086     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', 'vote(node4,value0)']
2087     : 1----------1--1-1----------------
2087     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', 'vote(node4,value1)']
2088     : --1-1----1--1--------------------
2088     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', 'vote(node3,value0)']
2089     : -1---1---1--1--------------------
2089     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', 'vote(node3,value0)']
2090     : --11------1--1-------------------
2090     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node3,value1)']
2091     : 1----1----1--1-------------------
2091     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', 'vote(node3,value1)']
2092     : -1-1-------1--1------------------
2092     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', 'vote(node3,value2)']
2093     : 1---1------1--1------------------
2093     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', 'vote(node3,value2)']
2094     : --1-1----1-----1-----------------
2094     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', 'vote(node4,value0)']
2095     : -1---1---1-----1-----------------
2095     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', 'vote(node4,value0)']
2096     : --11------1-----1----------------
2096     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node4,value1)']
2097     : 1----1----1-----1----------------
2097     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', 'vote(node4,value1)']
2098     : -1-1-------1-----1---------------
2098     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', 'vote(node4,value2)']
2099     : 1---1------1-----1---------------
2099     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', 'vote(node4,value2)']
2100     : --1----1----1--1-----------------
2100     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', 'vote(node4,value0)']
2101     : -1------1---1--1-----------------
2101     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', 'vote(node4,value0)']
2102     : --1---1------1--1----------------
2102     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', 'vote(node4,value1)']
2103     : 1-------1----1--1----------------
2103     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', 'vote(node4,value1)']
2104     : -1----1-------1--1---------------
2104     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', 'vote(node4,value2)']
2105     : 1------1------1--1---------------
2105     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', 'vote(node4,value2)']
2106     : --1-------1-1--1-----------------
2106     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', 'vote(node4,value0)']
2107     : -1---------11--1-----------------
2107     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', 'vote(node4,value0)']
2108     : --1------1---1--1----------------
2108     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', 'vote(node4,value1)']
2109     : 1----------1-1--1----------------
2109     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', 'vote(node4,value1)']
2110     : -1-------1----1--1---------------
2110     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', 'vote(node4,value2)']
2111     : 1---------1---1--1---------------
2111     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', 'vote(node4,value2)']
2112     : --1-1-------1--1-----------------
2112     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', 'vote(node4,value0)']
2113     : -1---1------1--1-----------------
2113     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', 'vote(node4,value0)']
2114     : --11---------1--1----------------
2114     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', 'vote(node4,value1)']
2115     : 1----1-------1--1----------------
2115     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', 'vote(node4,value1)']
2116     : -1-1----------1--1---------------
2116     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', 'vote(node4,value2)']
2117     : 1---1---------1--1---------------
2117     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', 'vote(node4,value2)']
2418 (*) : --11--------1--1-----------------
2418     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2419     : -1-1--------1--1-----------------
2419     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2420     : --1-1--------1--1----------------
2420     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2421     : 1---1--------1--1----------------
2421     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2422     : -1---1--------1--1---------------
2422     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2423     : 1----1--------1--1---------------
2423     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2424     : --11-----1-----1-----------------
2424     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node4,value0)']
2425     : -1-1-----1-----1-----------------
2425     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node4,value0)']
2426     : --1-1-----1-----1----------------
2426     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node4,value1)']
2427     : 1---1-----1-----1----------------
2427     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node4,value1)']
2428     : -1---1-----1-----1---------------
2428     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node4,value2)']
2429     : 1----1-----1-----1---------------
2429     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node4,value2)']
2430     : --11-----1--1--------------------
2430     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node3,value0)']
2431     : -1-1-----1--1--------------------
2431     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node3,value0)']
2432     : --1-1-----1--1-------------------
2432     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node3,value1)']
2433     : 1---1-----1--1-------------------
2433     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node3,value1)']
2434     : -1---1-----1--1------------------
2434     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node3,value2)']
2435     : 1----1-----1--1------------------
2435     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node3,value2)']
2436     : --11--1--------1-----------------
2436     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node4,value0)']
2437     : -1-1--1--------1-----------------
2437     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node4,value0)']
2438     : --1-1--1--------1----------------
2438     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node4,value1)']
2439     : 1---1--1--------1----------------
2439     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node4,value1)']
2440     : -1---1--1--------1---------------
2440     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node4,value2)']
2441     : 1----1--1--------1---------------
2441     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node4,value2)']
2442     : --11--1-----1--------------------
2442     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node3,value0)']
2443     : -1-1--1-----1--------------------
2443     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node3,value0)']
2444     : --1-1--1-----1-------------------
2444     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node3,value1)']
2445     : 1---1--1-----1-------------------
2445     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node3,value1)']
2446     : -1---1--1-----1------------------
2446     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node3,value2)']
2447     : 1----1--1-----1------------------
2447     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node3,value2)']
2448     : --11--1--1-----------------------
2448     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node2,value0)']
2449     : -1-1--1--1-----------------------
2449     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node2,value0)']
2450     : --1-1--1--1----------------------
2450     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node2,value1)']
2451     : 1---1--1--1----------------------
2451     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node2,value1)']
2452     : -1---1--1--1---------------------
2452     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node2,value2)']
2453     : 1----1--1--1---------------------
2453     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node2,value2)']
2454     : --1---1-----1--1-----------------
2454     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2455     : -1----1-----1--1-----------------
2455     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2456     : --1----1-----1--1----------------
2456     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2457     : 1------1-----1--1----------------
2457     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2458     : -1------1-----1--1---------------
2458     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2459     : 1-------1-----1--1---------------
2459     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2460     : --1---1--1-----1-----------------
2460     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node4,value0)']
2461     : -1----1--1-----1-----------------
2461     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node4,value0)']
2462     : --1----1--1-----1----------------
2462     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node4,value1)']
2463     : 1------1--1-----1----------------
2463     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node4,value1)']
2464     : -1------1--1-----1---------------
2464     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node4,value2)']
2465     : 1-------1--1-----1---------------
2465     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node4,value2)']
2466     : --1---1--1--1--------------------
2466     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node3,value0)']
2467     : -1----1--1--1--------------------
2467     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node3,value0)']
2468     : --1----1--1--1-------------------
2468     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node3,value1)']
2469     : 1------1--1--1-------------------
2469     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node3,value1)']
2470     : -1------1--1--1------------------
2470     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node3,value2)']
2471     : 1-------1--1--1------------------
2471     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node3,value2)']
2472     : --1------1--1--1-----------------
2472     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2473     : -1-------1--1--1-----------------
2473     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2474     : --1-------1--1--1----------------
2474     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2475     : 1---------1--1--1----------------
2475     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2476     : -1---------1--1--1---------------
2476     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2477     : 1----------1--1--1---------------
2477     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node3,value0)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0, value$0$vote$1$2], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$1], Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$1], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$2]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$1': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$2': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$2': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0; value$0$vote$1$2, value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$0$vote$0$1, node$0$vote$0$2]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0; value$0$vote$1$2 | value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$0$vote$0$1 | node$0$vote$0$2}

part_sig: ('node$0$vote$0$0 | node$0$vote$0$1 | node$0$vote$0$2', 'value$0$decided$0$0 | value$0$vote$1$0; value$0$vote$1$2 | value$0$vote$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', 'vote(node4,value0)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0, value$0$vote$1$1, value$0$vote$1$2], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$1], Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$2]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$1': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$1': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$2': Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$2': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0; value$0$vote$1$1; value$0$vote$1$2], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$0$vote$0$1, node$0$vote$0$2]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0; value$0$vote$1$1; value$0$vote$1$2, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$0$vote$0$1 | node$0$vote$0$2}

part_sig: ('node$0$vote$0$0 | node$0$vote$0$1 | node$0$vote$0$2', 'value$0$decided$0$0 | value$0$vote$1$0; value$0$vote$1$1; value$0$vote$1$2')


---------- SigGenerator ----------

terms:  ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node3,value0)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')))}

sign_func_name2count:  {'0$decided': 1, '0$vote': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0; value$0$vote$1$2, value$0$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$0$vote$0$1, node$0$vote$0$2]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0; value$0$vote$1$2 | value$0$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$0$vote$0$1 | node$0$vote$0$2}

	sort: value

	identical_classes: {'value$0$decided$0': [value$0$decided$0$0], 'value$0$vote$1; value$0$vote$1': [value$0$vote$1$0; value$0$vote$1$2], 'value$0$vote$1': [value$0$vote$1$1]}

	identical_single_classes: {'value$0$decided$0': value$0$decided$0$0, 'value$0$vote$1; value$0$vote$1': value$0$vote$1$0; value$0$vote$1$2, 'value$0$vote$1': value$0$vote$1$1}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$vote$0': [node$0$vote$0$0, node$0$vote$0$1, node$0$vote$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$vote$0': [node$0$vote$0$0, node$0$vote$0$1, node$0$vote$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE2', EnumeratedSort('value', ('value0', 'value1', 'value2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE2', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['vote(NODE0,VALUE1)', 'vote(NODE2,VALUE1)', 'decided(VALUE0)', 'vote(NODE1,VALUE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,VALUE2,NODE0,NODE2,VALUE0,VALUE1. ~vote(NODE0,VALUE1) | ~vote(NODE2,VALUE1) | ~decided(VALUE0) | ~vote(NODE1,VALUE2) | (VALUE0 = VALUE1 | VALUE0 = VALUE2 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)


=== Prime Orbit 14 =====================
size : 120
num_suborbits: 1
2118 (*) : --11---------------0------------0
2118     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2119     : -1-1---------------0------------0
2119     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2120     : --1-1--------------0------------0
2120     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2121     : 1---1--------------0------------0
2121     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2122     : -1---1-------------0------------0
2122     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2123     : 1----1-------------0------------0
2123     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2124     : --11----------------0----------0-
2124     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2125     : -1-1----------------0----------0-
2125     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2126     : --1-1---------------0----------0-
2126     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2127     : 1---1---------------0----------0-
2127     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2128     : -1---1--------------0----------0-
2128     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2129     : 1----1--------------0----------0-
2129     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2130     : --11-----------------0--------0--
2130     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2131     : -1-1-----------------0--------0--
2131     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2132     : --1-1----------------0--------0--
2132     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2133     : 1---1----------------0--------0--
2133     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2134     : -1---1---------------0--------0--
2134     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2135     : 1----1---------------0--------0--
2135     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2136     : --11------------------0------0---
2136     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2137     : -1-1------------------0------0---
2137     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2138     : --1-1-----------------0------0---
2138     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2139     : 1---1-----------------0------0---
2139     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2140     : -1---1----------------0------0---
2140     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2141     : 1----1----------------0------0---
2141     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2142     : --1---1-----------0-------------0
2142     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2143     : -1----1-----------0-------------0
2143     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2144     : --1----1----------0-------------0
2144     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2145     : 1------1----------0-------------0
2145     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2146     : -1------1---------0-------------0
2146     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2147     : 1-------1---------0-------------0
2147     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2148     : --1---1-------------0-------0----
2148     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2149     : -1----1-------------0-------0----
2149     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2150     : --1----1------------0-------0----
2150     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2151     : 1------1------------0-------0----
2151     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2152     : -1------1-----------0-------0----
2152     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2153     : 1-------1-----------0-------0----
2153     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2154     : --1---1--------------0-----0-----
2154     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2155     : -1----1--------------0-----0-----
2155     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2156     : --1----1-------------0-----0-----
2156     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2157     : 1------1-------------0-----0-----
2157     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2158     : -1------1------------0-----0-----
2158     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2159     : 1-------1------------0-----0-----
2159     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2160     : --1---1---------------0---0------
2160     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2161     : -1----1---------------0---0------
2161     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2162     : --1----1--------------0---0------
2162     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2163     : 1------1--------------0---0------
2163     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2164     : -1------1-------------0---0------
2164     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2165     : 1-------1-------------0---0------
2165     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2166     : --1------1--------0------------0-
2166     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2167     : -1-------1--------0------------0-
2167     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2168     : --1-------1-------0------------0-
2168     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2169     : 1---------1-------0------------0-
2169     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2170     : -1---------1------0------------0-
2170     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2171     : 1----------1------0------------0-
2171     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2172     : --1------1---------0--------0----
2172     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2173     : -1-------1---------0--------0----
2173     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2174     : --1-------1--------0--------0----
2174     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2175     : 1---------1--------0--------0----
2175     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2176     : -1---------1-------0--------0----
2176     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2177     : 1----------1-------0--------0----
2177     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2178     : --1------1-----------0---0-------
2178     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2179     : -1-------1-----------0---0-------
2179     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2180     : --1-------1----------0---0-------
2180     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2181     : 1---------1----------0---0-------
2181     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2182     : -1---------1---------0---0-------
2182     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2183     : 1----------1---------0---0-------
2183     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2184     : --1------1------------0-0--------
2184     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2185     : -1-------1------------0-0--------
2185     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2186     : --1-------1-----------0-0--------
2186     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2187     : 1---------1-----------0-0--------
2187     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2188     : -1---------1----------0-0--------
2188     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2189     : 1----------1----------0-0--------
2189     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2190     : --1---------1-----0-----------0--
2190     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2191     : -1----------1-----0-----------0--
2191     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2192     : --1----------1----0-----------0--
2192     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2193     : 1------------1----0-----------0--
2193     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2194     : -1------------1---0-----------0--
2194     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2195     : 1-------------1---0-----------0--
2195     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2196     : --1---------1------0-------0-----
2196     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2197     : -1----------1------0-------0-----
2197     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2198     : --1----------1-----0-------0-----
2198     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2199     : 1------------1-----0-------0-----
2199     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2200     : -1------------1----0-------0-----
2200     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2201     : 1-------------1----0-------0-----
2201     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2202     : --1---------1-------0----0-------
2202     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2203     : -1----------1-------0----0-------
2203     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2204     : --1----------1------0----0-------
2204     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2205     : 1------------1------0----0-------
2205     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2206     : -1------------1-----0----0-------
2206     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2207     : 1-------------1-----0----0-------
2207     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2208     : --1---------1---------00---------
2208     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2209     : -1----------1---------00---------
2209     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2210     : --1----------1--------00---------
2210     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2211     : 1------------1--------00---------
2211     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2212     : -1------------1-------00---------
2212     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2213     : 1-------------1-------00---------
2213     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2214     : --1------------1--0----------0---
2214     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2215     : -1-------------1--0----------0---
2215     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2216     : --1-------------1-0----------0---
2216     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2217     : 1---------------1-0----------0---
2217     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2218     : -1---------------10----------0---
2218     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2219     : 1----------------10----------0---
2219     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2220     : --1------------1---0------0------
2220     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2221     : -1-------------1---0------0------
2221     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2222     : --1-------------1--0------0------
2222     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2223     : 1---------------1--0------0------
2223     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2224     : -1---------------1-0------0------
2224     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2225     : 1----------------1-0------0------
2225     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2226     : --1------------1----0---0--------
2226     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2227     : -1-------------1----0---0--------
2227     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2228     : --1-------------1---0---0--------
2228     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2229     : 1---------------1---0---0--------
2229     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2230     : -1---------------1--0---0--------
2230     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2231     : 1----------------1--0---0--------
2231     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2232     : --1------------1-----0-0---------
2232     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2233     : -1-------------1-----0-0---------
2233     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2234     : --1-------------1----0-0---------
2234     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2235     : 1---------------1----0-0---------
2235     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2236     : -1---------------1---0-0---------
2236     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2237     : 1----------------1---0-0---------
2237     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node0,value0)', '~voted(node1)', 'voting_quorum ~= quorum__node2_node3_node4', '~member(node0,quorum__node2_node3_node4)', '~member(node1,quorum__node2_node3_node4)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voted': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)], '1$voting_quorum=': [(Const('quorum__node2_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),)], '1$member': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node2_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node2_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))))]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0, node$1$member$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$0, node$1$member$0$1], Const('quorum__node2_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$0, quorum$1$member$1$0, quorum$1$member$1$1]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$voted$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$voting_quorum=$0$0': Const('quorum__node2_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$0': Const('quorum__node2_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$1': Const('quorum__node2_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0; node$1$member$0$0, node$1$member$0$1; node$1$voted$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0; node$1$member$0$0 | node$1$member$0$1; node$1$voted$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

part_sig: ('node$0$vote$0$0; node$1$member$0$0 | node$1$member$0$1; node$1$voted$0$0', 'quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0', 'value$0$decided$0$0 | value$0$vote$1$0')


---------- SigGenerator ----------

terms:  ['decided(value2)', 'vote(node0,value0)', '~voted(node1)', 'voting_quorum ~= quorum__node2_node3_node4', '~member(node0,quorum__node2_node3_node4)', '~member(node1,quorum__node2_node3_node4)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voted': Const('voted', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), BooleanSort())), 'voting_quorum=': Const('voting_quorum', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voted': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')),), 'voting_quorum=': (EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')),), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

sign_func_name2count:  {'0$decided': 1, '0$vote': 1, '1$voted': 1, '1$voting_quorum=': 1, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0; node$1$member$0$0, node$1$member$0$1; node$1$voted$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0; node$1$member$0$0 | node$1$member$0$1; node$1$voted$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

	sort: value

	identical_classes: {'value$0$decided$0': [value$0$decided$0$0], 'value$0$vote$1': [value$0$vote$1$0]}

	identical_single_classes: {'value$0$decided$0': value$0$decided$0$0, 'value$0$vote$1': value$0$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$vote$0; node$1$member$0': [node$0$vote$0$0; node$1$member$0$0], 'node$1$member$0; node$1$voted$0': [node$1$member$0$1; node$1$voted$0$0]}

	identical_single_classes: {'node$0$vote$0; node$1$member$0': node$0$vote$0$0; node$1$member$0$0, 'node$1$member$0; node$1$voted$0': node$1$member$0$1; node$1$voted$0$0}

	identical_multi_classes: {}

	sort: quorum

	identical_classes: {'quorum$1$member$1; quorum$1$member$1; quorum$1$voting_quorum=$0': [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

	identical_single_classes: {'quorum$1$member$1; quorum$1$member$1; quorum$1$voting_quorum=$0': quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall

quantifier mode: quorum: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voted': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))]], '1$voting_quorum=': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]], '1$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['vote(NODE0,VALUE1)', '~member(NODE0,QUORUM0)', '~member(NODE1,QUORUM0)', 'voting_quorum ~= QUORUM0', 'decided(VALUE0)', '~voted(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,VALUE0,VALUE1,QUORUM0. ~vote(NODE0,VALUE1) | member(NODE0,QUORUM0) | member(NODE1,QUORUM0) | voting_quorum = QUORUM0 | ~decided(VALUE0) | voted(NODE1) | (VALUE0 = VALUE1 | NODE0 = NODE1)


=== Prime Orbit 15 =====================
size : 180
num_suborbits: 1
2238 (*) : --11---------------0-0-----------
2238     : ['decided(value2)', 'vote(node0,value0)', '~voted(node1)', '~voted(node3)']
2239     : -1-1---------------0-0-----------
2239     : ['decided(value1)', 'vote(node0,value0)', '~voted(node1)', '~voted(node3)']
2240     : --1-1--------------0-0-----------
2240     : ['decided(value2)', 'vote(node0,value1)', '~voted(node1)', '~voted(node3)']
2241     : 1---1--------------0-0-----------
2241     : ['decided(value0)', 'vote(node0,value1)', '~voted(node1)', '~voted(node3)']
2242     : -1---1-------------0-0-----------
2242     : ['decided(value1)', 'vote(node0,value2)', '~voted(node1)', '~voted(node3)']
2243     : 1----1-------------0-0-----------
2243     : ['decided(value0)', 'vote(node0,value2)', '~voted(node1)', '~voted(node3)']
2244     : --11---------------0--0----------
2244     : ['decided(value2)', 'vote(node0,value0)', '~voted(node1)', '~voted(node4)']
2245     : -1-1---------------0--0----------
2245     : ['decided(value1)', 'vote(node0,value0)', '~voted(node1)', '~voted(node4)']
2246     : --1-1--------------0--0----------
2246     : ['decided(value2)', 'vote(node0,value1)', '~voted(node1)', '~voted(node4)']
2247     : 1---1--------------0--0----------
2247     : ['decided(value0)', 'vote(node0,value1)', '~voted(node1)', '~voted(node4)']
2248     : -1---1-------------0--0----------
2248     : ['decided(value1)', 'vote(node0,value2)', '~voted(node1)', '~voted(node4)']
2249     : 1----1-------------0--0----------
2249     : ['decided(value0)', 'vote(node0,value2)', '~voted(node1)', '~voted(node4)']
2250     : --11---------------00------------
2250     : ['decided(value2)', 'vote(node0,value0)', '~voted(node1)', '~voted(node2)']
2251     : -1-1---------------00------------
2251     : ['decided(value1)', 'vote(node0,value0)', '~voted(node1)', '~voted(node2)']
2252     : --1-1--------------00------------
2252     : ['decided(value2)', 'vote(node0,value1)', '~voted(node1)', '~voted(node2)']
2253     : 1---1--------------00------------
2253     : ['decided(value0)', 'vote(node0,value1)', '~voted(node1)', '~voted(node2)']
2254     : -1---1-------------00------------
2254     : ['decided(value1)', 'vote(node0,value2)', '~voted(node1)', '~voted(node2)']
2255     : 1----1-------------00------------
2255     : ['decided(value0)', 'vote(node0,value2)', '~voted(node1)', '~voted(node2)']
2256     : --11----------------00-----------
2256     : ['decided(value2)', 'vote(node0,value0)', '~voted(node2)', '~voted(node3)']
2257     : -1-1----------------00-----------
2257     : ['decided(value1)', 'vote(node0,value0)', '~voted(node2)', '~voted(node3)']
2258     : --1-1---------------00-----------
2258     : ['decided(value2)', 'vote(node0,value1)', '~voted(node2)', '~voted(node3)']
2259     : 1---1---------------00-----------
2259     : ['decided(value0)', 'vote(node0,value1)', '~voted(node2)', '~voted(node3)']
2260     : -1---1--------------00-----------
2260     : ['decided(value1)', 'vote(node0,value2)', '~voted(node2)', '~voted(node3)']
2261     : 1----1--------------00-----------
2261     : ['decided(value0)', 'vote(node0,value2)', '~voted(node2)', '~voted(node3)']
2262     : --11----------------0-0----------
2262     : ['decided(value2)', 'vote(node0,value0)', '~voted(node2)', '~voted(node4)']
2263     : -1-1----------------0-0----------
2263     : ['decided(value1)', 'vote(node0,value0)', '~voted(node2)', '~voted(node4)']
2264     : --1-1---------------0-0----------
2264     : ['decided(value2)', 'vote(node0,value1)', '~voted(node2)', '~voted(node4)']
2265     : 1---1---------------0-0----------
2265     : ['decided(value0)', 'vote(node0,value1)', '~voted(node2)', '~voted(node4)']
2266     : -1---1--------------0-0----------
2266     : ['decided(value1)', 'vote(node0,value2)', '~voted(node2)', '~voted(node4)']
2267     : 1----1--------------0-0----------
2267     : ['decided(value0)', 'vote(node0,value2)', '~voted(node2)', '~voted(node4)']
2268     : --11-----------------00----------
2268     : ['decided(value2)', 'vote(node0,value0)', '~voted(node3)', '~voted(node4)']
2269     : -1-1-----------------00----------
2269     : ['decided(value1)', 'vote(node0,value0)', '~voted(node3)', '~voted(node4)']
2270     : --1-1----------------00----------
2270     : ['decided(value2)', 'vote(node0,value1)', '~voted(node3)', '~voted(node4)']
2271     : 1---1----------------00----------
2271     : ['decided(value0)', 'vote(node0,value1)', '~voted(node3)', '~voted(node4)']
2272     : -1---1---------------00----------
2272     : ['decided(value1)', 'vote(node0,value2)', '~voted(node3)', '~voted(node4)']
2273     : 1----1---------------00----------
2273     : ['decided(value0)', 'vote(node0,value2)', '~voted(node3)', '~voted(node4)']
2274     : --1---1-----------0--0-----------
2274     : ['decided(value2)', 'vote(node1,value0)', '~voted(node0)', '~voted(node3)']
2275     : -1----1-----------0--0-----------
2275     : ['decided(value1)', 'vote(node1,value0)', '~voted(node0)', '~voted(node3)']
2276     : --1----1----------0--0-----------
2276     : ['decided(value2)', 'vote(node1,value1)', '~voted(node0)', '~voted(node3)']
2277     : 1------1----------0--0-----------
2277     : ['decided(value0)', 'vote(node1,value1)', '~voted(node0)', '~voted(node3)']
2278     : -1------1---------0--0-----------
2278     : ['decided(value1)', 'vote(node1,value2)', '~voted(node0)', '~voted(node3)']
2279     : 1-------1---------0--0-----------
2279     : ['decided(value0)', 'vote(node1,value2)', '~voted(node0)', '~voted(node3)']
2280     : --1---1-----------0---0----------
2280     : ['decided(value2)', 'vote(node1,value0)', '~voted(node0)', '~voted(node4)']
2281     : -1----1-----------0---0----------
2281     : ['decided(value1)', 'vote(node1,value0)', '~voted(node0)', '~voted(node4)']
2282     : --1----1----------0---0----------
2282     : ['decided(value2)', 'vote(node1,value1)', '~voted(node0)', '~voted(node4)']
2283     : 1------1----------0---0----------
2283     : ['decided(value0)', 'vote(node1,value1)', '~voted(node0)', '~voted(node4)']
2284     : -1------1---------0---0----------
2284     : ['decided(value1)', 'vote(node1,value2)', '~voted(node0)', '~voted(node4)']
2285     : 1-------1---------0---0----------
2285     : ['decided(value0)', 'vote(node1,value2)', '~voted(node0)', '~voted(node4)']
2286     : --1---1-----------0-0------------
2286     : ['decided(value2)', 'vote(node1,value0)', '~voted(node0)', '~voted(node2)']
2287     : -1----1-----------0-0------------
2287     : ['decided(value1)', 'vote(node1,value0)', '~voted(node0)', '~voted(node2)']
2288     : --1----1----------0-0------------
2288     : ['decided(value2)', 'vote(node1,value1)', '~voted(node0)', '~voted(node2)']
2289     : 1------1----------0-0------------
2289     : ['decided(value0)', 'vote(node1,value1)', '~voted(node0)', '~voted(node2)']
2290     : -1------1---------0-0------------
2290     : ['decided(value1)', 'vote(node1,value2)', '~voted(node0)', '~voted(node2)']
2291     : 1-------1---------0-0------------
2291     : ['decided(value0)', 'vote(node1,value2)', '~voted(node0)', '~voted(node2)']
2292     : --1---1-------------00-----------
2292     : ['decided(value2)', 'vote(node1,value0)', '~voted(node2)', '~voted(node3)']
2293     : -1----1-------------00-----------
2293     : ['decided(value1)', 'vote(node1,value0)', '~voted(node2)', '~voted(node3)']
2294     : --1----1------------00-----------
2294     : ['decided(value2)', 'vote(node1,value1)', '~voted(node2)', '~voted(node3)']
2295     : 1------1------------00-----------
2295     : ['decided(value0)', 'vote(node1,value1)', '~voted(node2)', '~voted(node3)']
2296     : -1------1-----------00-----------
2296     : ['decided(value1)', 'vote(node1,value2)', '~voted(node2)', '~voted(node3)']
2297     : 1-------1-----------00-----------
2297     : ['decided(value0)', 'vote(node1,value2)', '~voted(node2)', '~voted(node3)']
2298     : --1---1-------------0-0----------
2298     : ['decided(value2)', 'vote(node1,value0)', '~voted(node2)', '~voted(node4)']
2299     : -1----1-------------0-0----------
2299     : ['decided(value1)', 'vote(node1,value0)', '~voted(node2)', '~voted(node4)']
2300     : --1----1------------0-0----------
2300     : ['decided(value2)', 'vote(node1,value1)', '~voted(node2)', '~voted(node4)']
2301     : 1------1------------0-0----------
2301     : ['decided(value0)', 'vote(node1,value1)', '~voted(node2)', '~voted(node4)']
2302     : -1------1-----------0-0----------
2302     : ['decided(value1)', 'vote(node1,value2)', '~voted(node2)', '~voted(node4)']
2303     : 1-------1-----------0-0----------
2303     : ['decided(value0)', 'vote(node1,value2)', '~voted(node2)', '~voted(node4)']
2304     : --1---1--------------00----------
2304     : ['decided(value2)', 'vote(node1,value0)', '~voted(node3)', '~voted(node4)']
2305     : -1----1--------------00----------
2305     : ['decided(value1)', 'vote(node1,value0)', '~voted(node3)', '~voted(node4)']
2306     : --1----1-------------00----------
2306     : ['decided(value2)', 'vote(node1,value1)', '~voted(node3)', '~voted(node4)']
2307     : 1------1-------------00----------
2307     : ['decided(value0)', 'vote(node1,value1)', '~voted(node3)', '~voted(node4)']
2308     : -1------1------------00----------
2308     : ['decided(value1)', 'vote(node1,value2)', '~voted(node3)', '~voted(node4)']
2309     : 1-------1------------00----------
2309     : ['decided(value0)', 'vote(node1,value2)', '~voted(node3)', '~voted(node4)']
2310     : --1------1--------0--0-----------
2310     : ['decided(value2)', 'vote(node2,value0)', '~voted(node0)', '~voted(node3)']
2311     : -1-------1--------0--0-----------
2311     : ['decided(value1)', 'vote(node2,value0)', '~voted(node0)', '~voted(node3)']
2312     : --1-------1-------0--0-----------
2312     : ['decided(value2)', 'vote(node2,value1)', '~voted(node0)', '~voted(node3)']
2313     : 1---------1-------0--0-----------
2313     : ['decided(value0)', 'vote(node2,value1)', '~voted(node0)', '~voted(node3)']
2314     : -1---------1------0--0-----------
2314     : ['decided(value1)', 'vote(node2,value2)', '~voted(node0)', '~voted(node3)']
2315     : 1----------1------0--0-----------
2315     : ['decided(value0)', 'vote(node2,value2)', '~voted(node0)', '~voted(node3)']
2316     : --1------1--------0---0----------
2316     : ['decided(value2)', 'vote(node2,value0)', '~voted(node0)', '~voted(node4)']
2317     : -1-------1--------0---0----------
2317     : ['decided(value1)', 'vote(node2,value0)', '~voted(node0)', '~voted(node4)']
2318     : --1-------1-------0---0----------
2318     : ['decided(value2)', 'vote(node2,value1)', '~voted(node0)', '~voted(node4)']
2319     : 1---------1-------0---0----------
2319     : ['decided(value0)', 'vote(node2,value1)', '~voted(node0)', '~voted(node4)']
2320     : -1---------1------0---0----------
2320     : ['decided(value1)', 'vote(node2,value2)', '~voted(node0)', '~voted(node4)']
2321     : 1----------1------0---0----------
2321     : ['decided(value0)', 'vote(node2,value2)', '~voted(node0)', '~voted(node4)']
2322     : --1------1--------00-------------
2322     : ['decided(value2)', 'vote(node2,value0)', '~voted(node0)', '~voted(node1)']
2323     : -1-------1--------00-------------
2323     : ['decided(value1)', 'vote(node2,value0)', '~voted(node0)', '~voted(node1)']
2324     : --1-------1-------00-------------
2324     : ['decided(value2)', 'vote(node2,value1)', '~voted(node0)', '~voted(node1)']
2325     : 1---------1-------00-------------
2325     : ['decided(value0)', 'vote(node2,value1)', '~voted(node0)', '~voted(node1)']
2326     : -1---------1------00-------------
2326     : ['decided(value1)', 'vote(node2,value2)', '~voted(node0)', '~voted(node1)']
2327     : 1----------1------00-------------
2327     : ['decided(value0)', 'vote(node2,value2)', '~voted(node0)', '~voted(node1)']
2328     : --1------1---------0-0-----------
2328     : ['decided(value2)', 'vote(node2,value0)', '~voted(node1)', '~voted(node3)']
2329     : -1-------1---------0-0-----------
2329     : ['decided(value1)', 'vote(node2,value0)', '~voted(node1)', '~voted(node3)']
2330     : --1-------1--------0-0-----------
2330     : ['decided(value2)', 'vote(node2,value1)', '~voted(node1)', '~voted(node3)']
2331     : 1---------1--------0-0-----------
2331     : ['decided(value0)', 'vote(node2,value1)', '~voted(node1)', '~voted(node3)']
2332     : -1---------1-------0-0-----------
2332     : ['decided(value1)', 'vote(node2,value2)', '~voted(node1)', '~voted(node3)']
2333     : 1----------1-------0-0-----------
2333     : ['decided(value0)', 'vote(node2,value2)', '~voted(node1)', '~voted(node3)']
2334     : --1------1---------0--0----------
2334     : ['decided(value2)', 'vote(node2,value0)', '~voted(node1)', '~voted(node4)']
2335     : -1-------1---------0--0----------
2335     : ['decided(value1)', 'vote(node2,value0)', '~voted(node1)', '~voted(node4)']
2336     : --1-------1--------0--0----------
2336     : ['decided(value2)', 'vote(node2,value1)', '~voted(node1)', '~voted(node4)']
2337     : 1---------1--------0--0----------
2337     : ['decided(value0)', 'vote(node2,value1)', '~voted(node1)', '~voted(node4)']
2338     : -1---------1-------0--0----------
2338     : ['decided(value1)', 'vote(node2,value2)', '~voted(node1)', '~voted(node4)']
2339     : 1----------1-------0--0----------
2339     : ['decided(value0)', 'vote(node2,value2)', '~voted(node1)', '~voted(node4)']
2340     : --1------1-----------00----------
2340     : ['decided(value2)', 'vote(node2,value0)', '~voted(node3)', '~voted(node4)']
2341     : -1-------1-----------00----------
2341     : ['decided(value1)', 'vote(node2,value0)', '~voted(node3)', '~voted(node4)']
2342     : --1-------1----------00----------
2342     : ['decided(value2)', 'vote(node2,value1)', '~voted(node3)', '~voted(node4)']
2343     : 1---------1----------00----------
2343     : ['decided(value0)', 'vote(node2,value1)', '~voted(node3)', '~voted(node4)']
2344     : -1---------1---------00----------
2344     : ['decided(value1)', 'vote(node2,value2)', '~voted(node3)', '~voted(node4)']
2345     : 1----------1---------00----------
2345     : ['decided(value0)', 'vote(node2,value2)', '~voted(node3)', '~voted(node4)']
2346     : --1---------1-----0-0------------
2346     : ['decided(value2)', 'vote(node3,value0)', '~voted(node0)', '~voted(node2)']
2347     : -1----------1-----0-0------------
2347     : ['decided(value1)', 'vote(node3,value0)', '~voted(node0)', '~voted(node2)']
2348     : --1----------1----0-0------------
2348     : ['decided(value2)', 'vote(node3,value1)', '~voted(node0)', '~voted(node2)']
2349     : 1------------1----0-0------------
2349     : ['decided(value0)', 'vote(node3,value1)', '~voted(node0)', '~voted(node2)']
2350     : -1------------1---0-0------------
2350     : ['decided(value1)', 'vote(node3,value2)', '~voted(node0)', '~voted(node2)']
2351     : 1-------------1---0-0------------
2351     : ['decided(value0)', 'vote(node3,value2)', '~voted(node0)', '~voted(node2)']
2352     : --1---------1-----0---0----------
2352     : ['decided(value2)', 'vote(node3,value0)', '~voted(node0)', '~voted(node4)']
2353     : -1----------1-----0---0----------
2353     : ['decided(value1)', 'vote(node3,value0)', '~voted(node0)', '~voted(node4)']
2354     : --1----------1----0---0----------
2354     : ['decided(value2)', 'vote(node3,value1)', '~voted(node0)', '~voted(node4)']
2355     : 1------------1----0---0----------
2355     : ['decided(value0)', 'vote(node3,value1)', '~voted(node0)', '~voted(node4)']
2356     : -1------------1---0---0----------
2356     : ['decided(value1)', 'vote(node3,value2)', '~voted(node0)', '~voted(node4)']
2357     : 1-------------1---0---0----------
2357     : ['decided(value0)', 'vote(node3,value2)', '~voted(node0)', '~voted(node4)']
2358     : --1---------1-----00-------------
2358     : ['decided(value2)', 'vote(node3,value0)', '~voted(node0)', '~voted(node1)']
2359     : -1----------1-----00-------------
2359     : ['decided(value1)', 'vote(node3,value0)', '~voted(node0)', '~voted(node1)']
2360     : --1----------1----00-------------
2360     : ['decided(value2)', 'vote(node3,value1)', '~voted(node0)', '~voted(node1)']
2361     : 1------------1----00-------------
2361     : ['decided(value0)', 'vote(node3,value1)', '~voted(node0)', '~voted(node1)']
2362     : -1------------1---00-------------
2362     : ['decided(value1)', 'vote(node3,value2)', '~voted(node0)', '~voted(node1)']
2363     : 1-------------1---00-------------
2363     : ['decided(value0)', 'vote(node3,value2)', '~voted(node0)', '~voted(node1)']
2364     : --1---------1------00------------
2364     : ['decided(value2)', 'vote(node3,value0)', '~voted(node1)', '~voted(node2)']
2365     : -1----------1------00------------
2365     : ['decided(value1)', 'vote(node3,value0)', '~voted(node1)', '~voted(node2)']
2366     : --1----------1-----00------------
2366     : ['decided(value2)', 'vote(node3,value1)', '~voted(node1)', '~voted(node2)']
2367     : 1------------1-----00------------
2367     : ['decided(value0)', 'vote(node3,value1)', '~voted(node1)', '~voted(node2)']
2368     : -1------------1----00------------
2368     : ['decided(value1)', 'vote(node3,value2)', '~voted(node1)', '~voted(node2)']
2369     : 1-------------1----00------------
2369     : ['decided(value0)', 'vote(node3,value2)', '~voted(node1)', '~voted(node2)']
2370     : --1---------1------0--0----------
2370     : ['decided(value2)', 'vote(node3,value0)', '~voted(node1)', '~voted(node4)']
2371     : -1----------1------0--0----------
2371     : ['decided(value1)', 'vote(node3,value0)', '~voted(node1)', '~voted(node4)']
2372     : --1----------1-----0--0----------
2372     : ['decided(value2)', 'vote(node3,value1)', '~voted(node1)', '~voted(node4)']
2373     : 1------------1-----0--0----------
2373     : ['decided(value0)', 'vote(node3,value1)', '~voted(node1)', '~voted(node4)']
2374     : -1------------1----0--0----------
2374     : ['decided(value1)', 'vote(node3,value2)', '~voted(node1)', '~voted(node4)']
2375     : 1-------------1----0--0----------
2375     : ['decided(value0)', 'vote(node3,value2)', '~voted(node1)', '~voted(node4)']
2376     : --1---------1-------0-0----------
2376     : ['decided(value2)', 'vote(node3,value0)', '~voted(node2)', '~voted(node4)']
2377     : -1----------1-------0-0----------
2377     : ['decided(value1)', 'vote(node3,value0)', '~voted(node2)', '~voted(node4)']
2378     : --1----------1------0-0----------
2378     : ['decided(value2)', 'vote(node3,value1)', '~voted(node2)', '~voted(node4)']
2379     : 1------------1------0-0----------
2379     : ['decided(value0)', 'vote(node3,value1)', '~voted(node2)', '~voted(node4)']
2380     : -1------------1-----0-0----------
2380     : ['decided(value1)', 'vote(node3,value2)', '~voted(node2)', '~voted(node4)']
2381     : 1-------------1-----0-0----------
2381     : ['decided(value0)', 'vote(node3,value2)', '~voted(node2)', '~voted(node4)']
2382     : --1------------1--0-0------------
2382     : ['decided(value2)', 'vote(node4,value0)', '~voted(node0)', '~voted(node2)']
2383     : -1-------------1--0-0------------
2383     : ['decided(value1)', 'vote(node4,value0)', '~voted(node0)', '~voted(node2)']
2384     : --1-------------1-0-0------------
2384     : ['decided(value2)', 'vote(node4,value1)', '~voted(node0)', '~voted(node2)']
2385     : 1---------------1-0-0------------
2385     : ['decided(value0)', 'vote(node4,value1)', '~voted(node0)', '~voted(node2)']
2386     : -1---------------10-0------------
2386     : ['decided(value1)', 'vote(node4,value2)', '~voted(node0)', '~voted(node2)']
2387     : 1----------------10-0------------
2387     : ['decided(value0)', 'vote(node4,value2)', '~voted(node0)', '~voted(node2)']
2388     : --1------------1--0--0-----------
2388     : ['decided(value2)', 'vote(node4,value0)', '~voted(node0)', '~voted(node3)']
2389     : -1-------------1--0--0-----------
2389     : ['decided(value1)', 'vote(node4,value0)', '~voted(node0)', '~voted(node3)']
2390     : --1-------------1-0--0-----------
2390     : ['decided(value2)', 'vote(node4,value1)', '~voted(node0)', '~voted(node3)']
2391     : 1---------------1-0--0-----------
2391     : ['decided(value0)', 'vote(node4,value1)', '~voted(node0)', '~voted(node3)']
2392     : -1---------------10--0-----------
2392     : ['decided(value1)', 'vote(node4,value2)', '~voted(node0)', '~voted(node3)']
2393     : 1----------------10--0-----------
2393     : ['decided(value0)', 'vote(node4,value2)', '~voted(node0)', '~voted(node3)']
2394     : --1------------1--00-------------
2394     : ['decided(value2)', 'vote(node4,value0)', '~voted(node0)', '~voted(node1)']
2395     : -1-------------1--00-------------
2395     : ['decided(value1)', 'vote(node4,value0)', '~voted(node0)', '~voted(node1)']
2396     : --1-------------1-00-------------
2396     : ['decided(value2)', 'vote(node4,value1)', '~voted(node0)', '~voted(node1)']
2397     : 1---------------1-00-------------
2397     : ['decided(value0)', 'vote(node4,value1)', '~voted(node0)', '~voted(node1)']
2398     : -1---------------100-------------
2398     : ['decided(value1)', 'vote(node4,value2)', '~voted(node0)', '~voted(node1)']
2399     : 1----------------100-------------
2399     : ['decided(value0)', 'vote(node4,value2)', '~voted(node0)', '~voted(node1)']
2400     : --1------------1---00------------
2400     : ['decided(value2)', 'vote(node4,value0)', '~voted(node1)', '~voted(node2)']
2401     : -1-------------1---00------------
2401     : ['decided(value1)', 'vote(node4,value0)', '~voted(node1)', '~voted(node2)']
2402     : --1-------------1--00------------
2402     : ['decided(value2)', 'vote(node4,value1)', '~voted(node1)', '~voted(node2)']
2403     : 1---------------1--00------------
2403     : ['decided(value0)', 'vote(node4,value1)', '~voted(node1)', '~voted(node2)']
2404     : -1---------------1-00------------
2404     : ['decided(value1)', 'vote(node4,value2)', '~voted(node1)', '~voted(node2)']
2405     : 1----------------1-00------------
2405     : ['decided(value0)', 'vote(node4,value2)', '~voted(node1)', '~voted(node2)']
2406     : --1------------1---0-0-----------
2406     : ['decided(value2)', 'vote(node4,value0)', '~voted(node1)', '~voted(node3)']
2407     : -1-------------1---0-0-----------
2407     : ['decided(value1)', 'vote(node4,value0)', '~voted(node1)', '~voted(node3)']
2408     : --1-------------1--0-0-----------
2408     : ['decided(value2)', 'vote(node4,value1)', '~voted(node1)', '~voted(node3)']
2409     : 1---------------1--0-0-----------
2409     : ['decided(value0)', 'vote(node4,value1)', '~voted(node1)', '~voted(node3)']
2410     : -1---------------1-0-0-----------
2410     : ['decided(value1)', 'vote(node4,value2)', '~voted(node1)', '~voted(node3)']
2411     : 1----------------1-0-0-----------
2411     : ['decided(value0)', 'vote(node4,value2)', '~voted(node1)', '~voted(node3)']
2412     : --1------------1----00-----------
2412     : ['decided(value2)', 'vote(node4,value0)', '~voted(node2)', '~voted(node3)']
2413     : -1-------------1----00-----------
2413     : ['decided(value1)', 'vote(node4,value0)', '~voted(node2)', '~voted(node3)']
2414     : --1-------------1---00-----------
2414     : ['decided(value2)', 'vote(node4,value1)', '~voted(node2)', '~voted(node3)']
2415     : 1---------------1---00-----------
2415     : ['decided(value0)', 'vote(node4,value1)', '~voted(node2)', '~voted(node3)']
2416     : -1---------------1--00-----------
2416     : ['decided(value1)', 'vote(node4,value2)', '~voted(node2)', '~voted(node3)']
2417     : 1----------------1--00-----------
2417     : ['decided(value0)', 'vote(node4,value2)', '~voted(node2)', '~voted(node3)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value2)', 'vote(node0,value0)', '~voted(node1)', '~voted(node3)']

sign_func_name2args: {'0$decided': [(Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voted': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)]}

const2sigs: {Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$0], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$1]}

sig2const: {'value$0$decided$0$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$voted$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'node$1$voted$0$1': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$1$voted$0$0, node$1$voted$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$1$voted$0$0 | node$1$voted$0$1}

part_sig: ('node$0$vote$0$0 | node$1$voted$0$0 | node$1$voted$0$1', 'value$0$decided$0$0 | value$0$vote$1$0')


---------- SigGenerator ----------

terms:  ['decided(value2)', 'vote(node0,value0)', '~voted(node1)', '~voted(node3)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voted': Const('voted', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voted': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')),)}

sign_func_name2count:  {'0$decided': 1, '0$vote': 1, '1$voted': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0, node$1$voted$0$0, node$1$voted$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0 | node$1$voted$0$0 | node$1$voted$0$1}

	sort: value

	identical_classes: {'value$0$decided$0': [value$0$decided$0$0], 'value$0$vote$1': [value$0$vote$1$0]}

	identical_single_classes: {'value$0$decided$0': value$0$decided$0$0, 'value$0$vote$1': value$0$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$vote$0': [node$0$vote$0$0], 'node$1$voted$0': [node$1$voted$0$0, node$1$voted$0$1]}

	identical_single_classes: {'node$0$vote$0': node$0$vote$0$0}

	identical_multi_classes: {'node$1$voted$0': [node$1$voted$0$0, node$1$voted$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voted': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['vote(NODE0,VALUE1)', '~voted(NODE2)', 'decided(VALUE0)', '~voted(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2,VALUE0,VALUE1. ~vote(NODE0,VALUE1) | voted(NODE2) | ~decided(VALUE0) | voted(NODE1) | (VALUE0 = VALUE1 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 16 =====================
size : 60
num_suborbits: 1
2478 (*) : -1-----0--------------0---0------
2478     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value1)', '~voted(node4)']
2479     : --1-----0-------------0---0------
2479     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value2)', '~voted(node4)']
2480     : 1-----0---------------0---0------
2480     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value0)', '~voted(node4)']
2481     : -1-----0-------------0-----0-----
2481     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value1)', '~voted(node3)']
2482     : --1-----0------------0-----0-----
2482     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value2)', '~voted(node3)']
2483     : 1-----0--------------0-----0-----
2483     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value0)', '~voted(node3)']
2484     : -1-----0------------0-------0----
2484     : ['decided(value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value1)', '~voted(node2)']
2485     : --1-----0-----------0-------0----
2485     : ['decided(value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value2)', '~voted(node2)']
2486     : 1-----0-------------0-------0----
2486     : ['decided(value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value0)', '~voted(node2)']
2487     : -1--------0-----------0-0--------
2487     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value1)', '~voted(node4)']
2488     : --1--------0----------0-0--------
2488     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value2)', '~voted(node4)']
2489     : 1--------0------------0-0--------
2489     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value0)', '~voted(node4)']
2490     : -1--------0----------0---0-------
2490     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value1)', '~voted(node3)']
2491     : --1--------0---------0---0-------
2491     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value2)', '~voted(node3)']
2492     : 1--------0-----------0---0-------
2492     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value0)', '~voted(node3)']
2493     : -1--------0--------0--------0----
2493     : ['decided(value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value1)', '~voted(node1)']
2494     : --1--------0-------0--------0----
2494     : ['decided(value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value2)', '~voted(node1)']
2495     : 1--------0---------0--------0----
2495     : ['decided(value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value0)', '~voted(node1)']
2496     : -1-----------0--------00---------
2496     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value1)', '~voted(node4)']
2497     : --1-----------0-------00---------
2497     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value2)', '~voted(node4)']
2498     : 1-----------0---------00---------
2498     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value0)', '~voted(node4)']
2499     : -1-----------0------0----0-------
2499     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value1)', '~voted(node2)']
2500     : --1-----------0-----0----0-------
2500     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value2)', '~voted(node2)']
2501     : 1-----------0-------0----0-------
2501     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value0)', '~voted(node2)']
2502     : -1-----------0-----0-------0-----
2502     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value1)', '~voted(node1)']
2503     : --1-----------0----0-------0-----
2503     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value2)', '~voted(node1)']
2504     : 1-----------0------0-------0-----
2504     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value0)', '~voted(node1)']
2505     : -1--------------0----0-0---------
2505     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value1)', '~voted(node3)']
2506     : --1--------------0---0-0---------
2506     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value2)', '~voted(node3)']
2507     : 1--------------0-----0-0---------
2507     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value0)', '~voted(node3)']
2508     : -1--------------0---0---0--------
2508     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value1)', '~voted(node2)']
2509     : --1--------------0--0---0--------
2509     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value2)', '~voted(node2)']
2510     : 1--------------0----0---0--------
2510     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value0)', '~voted(node2)']
2511     : -1--------------0--0------0------
2511     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value1)', '~voted(node1)']
2512     : --1--------------0-0------0------
2512     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value2)', '~voted(node1)']
2513     : 1--------------0---0------0------
2513     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value0)', '~voted(node1)']
2514     : -1--0-----------------0------0---
2514     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value1)', '~voted(node4)']
2515     : --1--0----------------0------0---
2515     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value2)', '~voted(node4)']
2516     : 1--0------------------0------0---
2516     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value0)', '~voted(node4)']
2517     : -1--0----------------0--------0--
2517     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value1)', '~voted(node3)']
2518     : --1--0---------------0--------0--
2518     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value2)', '~voted(node3)']
2519     : 1--0-----------------0--------0--
2519     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value0)', '~voted(node3)']
2520     : -1--0---------------0----------0-
2520     : ['decided(value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value1)', '~voted(node2)']
2521     : --1--0--------------0----------0-
2521     : ['decided(value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value2)', '~voted(node2)']
2522     : 1--0----------------0----------0-
2522     : ['decided(value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value0)', '~voted(node2)']
2523     : -1--------0-------0------------0-
2523     : ['decided(value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value1)', '~voted(node0)']
2524     : --1--------0------0------------0-
2524     : ['decided(value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value2)', '~voted(node0)']
2525     : 1--------0--------0------------0-
2525     : ['decided(value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value0)', '~voted(node0)']
2526     : -1-----------0----0-----------0--
2526     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value1)', '~voted(node0)']
2527     : --1-----------0---0-----------0--
2527     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value2)', '~voted(node0)']
2528     : 1-----------0-----0-----------0--
2528     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value0)', '~voted(node0)']
2529     : -1--------------0-0----------0---
2529     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value1)', '~voted(node0)']
2530     : --1--------------00----------0---
2530     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value2)', '~voted(node0)']
2531     : 1--------------0--0----------0---
2531     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value0)', '~voted(node0)']
2532     : -1--0--------------0------------0
2532     : ['decided(value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)', '~voted(node1)']
2533     : --1--0-------------0------------0
2533     : ['decided(value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)', '~voted(node1)']
2534     : 1--0---------------0------------0
2534     : ['decided(value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)', '~voted(node1)']
2535     : -1-----0----------0-------------0
2535     : ['decided(value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value1)', '~voted(node0)']
2536     : --1-----0---------0-------------0
2536     : ['decided(value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value2)', '~voted(node0)']
2537     : 1-----0-----------0-------------0
2537     : ['decided(value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value0)', '~voted(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value1)', '~vote(node1,value1)', '~voted(node4)', 'voting_quorum ~= quorum__node0_node2_node3', '~member(node1,quorum__node0_node2_node3)', '~member(node4,quorum__node0_node2_node3)']

sign_func_name2args: {'0$decided': [(Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voted': [(Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)], '1$voting_quorum=': [(Const('quorum__node0_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),)], '1$member': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))))]}

const2sigs: {Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0, value$1$vote$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$0, node$1$member$0$0], Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$0, node$1$member$0$1], Const('quorum__node0_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$0, quorum$1$member$1$0, quorum$1$member$1$1]}

sig2const: {'value$0$decided$0$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$voted$0$0': Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$voting_quorum=$0$0': Const('quorum__node0_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$0': Const('quorum__node0_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$1': Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$1': Const('quorum__node0_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$member$0$0; node$1$vote$0$0, node$1$member$0$1; node$1$voted$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$member$0$0; node$1$vote$0$0 | node$1$member$0$1; node$1$voted$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

part_sig: ('node$1$member$0$0; node$1$vote$0$0 | node$1$member$0$1; node$1$voted$0$0', 'quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0', 'value$0$decided$0$0; value$1$vote$1$0')


---------- SigGenerator ----------

terms:  ['decided(value1)', '~vote(node1,value1)', '~voted(node4)', 'voting_quorum ~= quorum__node0_node2_node3', '~member(node1,quorum__node0_node2_node3)', '~member(node4,quorum__node0_node2_node3)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voted': Const('voted', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), BooleanSort())), 'voting_quorum=': Const('voting_quorum', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voted': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')),), 'voting_quorum=': (EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')),), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

sign_func_name2count:  {'0$decided': 1, '1$vote': 1, '1$voted': 1, '1$voting_quorum=': 1, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$member$0$0; node$1$vote$0$0, node$1$member$0$1; node$1$voted$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$member$0$0; node$1$vote$0$0 | node$1$member$0$1; node$1$voted$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

	sort: value

	identical_classes: {'value$0$decided$0; value$1$vote$1': [value$0$decided$0$0; value$1$vote$1$0]}

	identical_single_classes: {'value$0$decided$0; value$1$vote$1': value$0$decided$0$0; value$1$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$1$member$0; node$1$vote$0': [node$1$member$0$0; node$1$vote$0$0], 'node$1$member$0; node$1$voted$0': [node$1$member$0$1; node$1$voted$0$0]}

	identical_single_classes: {'node$1$member$0; node$1$vote$0': node$1$member$0$0; node$1$vote$0$0, 'node$1$member$0; node$1$voted$0': node$1$member$0$1; node$1$voted$0$0}

	identical_multi_classes: {}

	sort: quorum

	identical_classes: {'quorum$1$member$1; quorum$1$member$1; quorum$1$voting_quorum=$0': [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

	identical_single_classes: {'quorum$1$member$1; quorum$1$member$1; quorum$1$voting_quorum=$0': quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall

quantifier mode: quorum: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voted': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))]], '1$voting_quorum=': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]], '1$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(NODE0,QUORUM0)', '~member(NODE1,QUORUM0)', 'voting_quorum ~= QUORUM0', '~vote(NODE0,VALUE0)', 'decided(VALUE0)', '~voted(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,QUORUM0,NODE0,VALUE0. member(NODE0,QUORUM0) | member(NODE1,QUORUM0) | voting_quorum = QUORUM0 | vote(NODE0,VALUE0) | ~decided(VALUE0) | voted(NODE1) | NODE0 = NODE1


=== Prime Orbit 17 =====================
size : 90
num_suborbits: 1
2538 (*) : -1-----0-----0--------0----------
2538     : ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~voted(node4)']
2539     : --1-----0-----0-------0----------
2539     : ['decided(value2)', '~vote(node1,value2)', '~vote(node3,value2)', '~voted(node4)']
2540     : 1-----0-----0---------0----------
2540     : ['decided(value0)', '~vote(node1,value0)', '~vote(node3,value0)', '~voted(node4)']
2541     : -1-----0--------0----0-----------
2541     : ['decided(value1)', '~vote(node1,value1)', '~vote(node4,value1)', '~voted(node3)']
2542     : --1-----0--------0---0-----------
2542     : ['decided(value2)', '~vote(node1,value2)', '~vote(node4,value2)', '~voted(node3)']
2543     : 1-----0--------0-----0-----------
2543     : ['decided(value0)', '~vote(node1,value0)', '~vote(node4,value0)', '~voted(node3)']
2544     : -1-----0--0-----------0----------
2544     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~voted(node4)']
2545     : --1-----0--0----------0----------
2545     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~voted(node4)']
2546     : 1-----0--0------------0----------
2546     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~voted(node4)']
2547     : -1-----0--------0---0------------
2547     : ['decided(value1)', '~vote(node1,value1)', '~vote(node4,value1)', '~voted(node2)']
2548     : --1-----0--------0--0------------
2548     : ['decided(value2)', '~vote(node1,value2)', '~vote(node4,value2)', '~voted(node2)']
2549     : 1-----0--------0----0------------
2549     : ['decided(value0)', '~vote(node1,value0)', '~vote(node4,value0)', '~voted(node2)']
2550     : -1-----0--0----------0-----------
2550     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~voted(node3)']
2551     : --1-----0--0---------0-----------
2551     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~voted(node3)']
2552     : 1-----0--0-----------0-----------
2552     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~voted(node3)']
2553     : -1-----0-----0------0------------
2553     : ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~voted(node2)']
2554     : --1-----0-----0-----0------------
2554     : ['decided(value2)', '~vote(node1,value2)', '~vote(node3,value2)', '~voted(node2)']
2555     : 1-----0-----0-------0------------
2555     : ['decided(value0)', '~vote(node1,value0)', '~vote(node3,value0)', '~voted(node2)']
2556     : -1--------0--0--------0----------
2556     : ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', '~voted(node4)']
2557     : --1--------0--0-------0----------
2557     : ['decided(value2)', '~vote(node2,value2)', '~vote(node3,value2)', '~voted(node4)']
2558     : 1--------0--0---------0----------
2558     : ['decided(value0)', '~vote(node2,value0)', '~vote(node3,value0)', '~voted(node4)']
2559     : -1--------0-----0----0-----------
2559     : ['decided(value1)', '~vote(node2,value1)', '~vote(node4,value1)', '~voted(node3)']
2560     : --1--------0-----0---0-----------
2560     : ['decided(value2)', '~vote(node2,value2)', '~vote(node4,value2)', '~voted(node3)']
2561     : 1--------0-----0-----0-----------
2561     : ['decided(value0)', '~vote(node2,value0)', '~vote(node4,value0)', '~voted(node3)']
2562     : -1--------0-----0--0-------------
2562     : ['decided(value1)', '~vote(node2,value1)', '~vote(node4,value1)', '~voted(node1)']
2563     : --1--------0-----0-0-------------
2563     : ['decided(value2)', '~vote(node2,value2)', '~vote(node4,value2)', '~voted(node1)']
2564     : 1--------0-----0---0-------------
2564     : ['decided(value0)', '~vote(node2,value0)', '~vote(node4,value0)', '~voted(node1)']
2565     : -1--------0--0-----0-------------
2565     : ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', '~voted(node1)']
2566     : --1--------0--0----0-------------
2566     : ['decided(value2)', '~vote(node2,value2)', '~vote(node3,value2)', '~voted(node1)']
2567     : 1--------0--0------0-------------
2567     : ['decided(value0)', '~vote(node2,value0)', '~vote(node3,value0)', '~voted(node1)']
2568     : -1-----------0--0---0------------
2568     : ['decided(value1)', '~vote(node3,value1)', '~vote(node4,value1)', '~voted(node2)']
2569     : --1-----------0--0--0------------
2569     : ['decided(value2)', '~vote(node3,value2)', '~vote(node4,value2)', '~voted(node2)']
2570     : 1-----------0--0----0------------
2570     : ['decided(value0)', '~vote(node3,value0)', '~vote(node4,value0)', '~voted(node2)']
2571     : -1-----------0--0--0-------------
2571     : ['decided(value1)', '~vote(node3,value1)', '~vote(node4,value1)', '~voted(node1)']
2572     : --1-----------0--0-0-------------
2572     : ['decided(value2)', '~vote(node3,value2)', '~vote(node4,value2)', '~voted(node1)']
2573     : 1-----------0--0---0-------------
2573     : ['decided(value0)', '~vote(node3,value0)', '~vote(node4,value0)', '~voted(node1)']
2574     : -1--0--------0--------0----------
2574     : ['decided(value1)', '~vote(node0,value1)', '~vote(node3,value1)', '~voted(node4)']
2575     : --1--0--------0-------0----------
2575     : ['decided(value2)', '~vote(node0,value2)', '~vote(node3,value2)', '~voted(node4)']
2576     : 1--0--------0---------0----------
2576     : ['decided(value0)', '~vote(node0,value0)', '~vote(node3,value0)', '~voted(node4)']
2577     : -1--0-----------0----0-----------
2577     : ['decided(value1)', '~vote(node0,value1)', '~vote(node4,value1)', '~voted(node3)']
2578     : --1--0-----------0---0-----------
2578     : ['decided(value2)', '~vote(node0,value2)', '~vote(node4,value2)', '~voted(node3)']
2579     : 1--0-----------0-----0-----------
2579     : ['decided(value0)', '~vote(node0,value0)', '~vote(node4,value0)', '~voted(node3)']
2580     : -1--0-----0-----------0----------
2580     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~voted(node4)']
2581     : --1--0-----0----------0----------
2581     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~voted(node4)']
2582     : 1--0-----0------------0----------
2582     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~voted(node4)']
2583     : -1--0-----------0---0------------
2583     : ['decided(value1)', '~vote(node0,value1)', '~vote(node4,value1)', '~voted(node2)']
2584     : --1--0-----------0--0------------
2584     : ['decided(value2)', '~vote(node0,value2)', '~vote(node4,value2)', '~voted(node2)']
2585     : 1--0-----------0----0------------
2585     : ['decided(value0)', '~vote(node0,value0)', '~vote(node4,value0)', '~voted(node2)']
2586     : -1--0-----0----------0-----------
2586     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~voted(node3)']
2587     : --1--0-----0---------0-----------
2587     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~voted(node3)']
2588     : 1--0-----0-----------0-----------
2588     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~voted(node3)']
2589     : -1--0--------0------0------------
2589     : ['decided(value1)', '~vote(node0,value1)', '~vote(node3,value1)', '~voted(node2)']
2590     : --1--0--------0-----0------------
2590     : ['decided(value2)', '~vote(node0,value2)', '~vote(node3,value2)', '~voted(node2)']
2591     : 1--0--------0-------0------------
2591     : ['decided(value0)', '~vote(node0,value0)', '~vote(node3,value0)', '~voted(node2)']
2592     : -1--------0-----0-0--------------
2592     : ['decided(value1)', '~vote(node2,value1)', '~vote(node4,value1)', '~voted(node0)']
2593     : --1--------0-----00--------------
2593     : ['decided(value2)', '~vote(node2,value2)', '~vote(node4,value2)', '~voted(node0)']
2594     : 1--------0-----0--0--------------
2594     : ['decided(value0)', '~vote(node2,value0)', '~vote(node4,value0)', '~voted(node0)']
2595     : -1--------0--0----0--------------
2595     : ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', '~voted(node0)']
2596     : --1--------0--0---0--------------
2596     : ['decided(value2)', '~vote(node2,value2)', '~vote(node3,value2)', '~voted(node0)']
2597     : 1--------0--0-----0--------------
2597     : ['decided(value0)', '~vote(node2,value0)', '~vote(node3,value0)', '~voted(node0)']
2598     : -1-----------0--0-0--------------
2598     : ['decided(value1)', '~vote(node3,value1)', '~vote(node4,value1)', '~voted(node0)']
2599     : --1-----------0--00--------------
2599     : ['decided(value2)', '~vote(node3,value2)', '~vote(node4,value2)', '~voted(node0)']
2600     : 1-----------0--0--0--------------
2600     : ['decided(value0)', '~vote(node3,value0)', '~vote(node4,value0)', '~voted(node0)']
2601     : -1--0--0--------------0----------
2601     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~voted(node4)']
2602     : --1--0--0-------------0----------
2602     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~voted(node4)']
2603     : 1--0--0---------------0----------
2603     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~voted(node4)']
2604     : -1--0-----------0--0-------------
2604     : ['decided(value1)', '~vote(node0,value1)', '~vote(node4,value1)', '~voted(node1)']
2605     : --1--0-----------0-0-------------
2605     : ['decided(value2)', '~vote(node0,value2)', '~vote(node4,value2)', '~voted(node1)']
2606     : 1--0-----------0---0-------------
2606     : ['decided(value0)', '~vote(node0,value0)', '~vote(node4,value0)', '~voted(node1)']
2607     : -1--0--0-------------0-----------
2607     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~voted(node3)']
2608     : --1--0--0------------0-----------
2608     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~voted(node3)']
2609     : 1--0--0--------------0-----------
2609     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~voted(node3)']
2610     : -1--0--------0-----0-------------
2610     : ['decided(value1)', '~vote(node0,value1)', '~vote(node3,value1)', '~voted(node1)']
2611     : --1--0--------0----0-------------
2611     : ['decided(value2)', '~vote(node0,value2)', '~vote(node3,value2)', '~voted(node1)']
2612     : 1--0--------0------0-------------
2612     : ['decided(value0)', '~vote(node0,value0)', '~vote(node3,value0)', '~voted(node1)']
2613     : -1-----0--------0-0--------------
2613     : ['decided(value1)', '~vote(node1,value1)', '~vote(node4,value1)', '~voted(node0)']
2614     : --1-----0--------00--------------
2614     : ['decided(value2)', '~vote(node1,value2)', '~vote(node4,value2)', '~voted(node0)']
2615     : 1-----0--------0--0--------------
2615     : ['decided(value0)', '~vote(node1,value0)', '~vote(node4,value0)', '~voted(node0)']
2616     : -1-----0-----0----0--------------
2616     : ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~voted(node0)']
2617     : --1-----0-----0---0--------------
2617     : ['decided(value2)', '~vote(node1,value2)', '~vote(node3,value2)', '~voted(node0)']
2618     : 1-----0-----0-----0--------------
2618     : ['decided(value0)', '~vote(node1,value0)', '~vote(node3,value0)', '~voted(node0)']
2619     : -1--0--0------------0------------
2619     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~voted(node2)']
2620     : --1--0--0-----------0------------
2620     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~voted(node2)']
2621     : 1--0--0-------------0------------
2621     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~voted(node2)']
2622     : -1--0-----0--------0-------------
2622     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~voted(node1)']
2623     : --1--0-----0-------0-------------
2623     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~voted(node1)']
2624     : 1--0-----0---------0-------------
2624     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~voted(node1)']
2625     : -1-----0--0-------0--------------
2625     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~voted(node0)']
2626     : --1-----0--0------0--------------
2626     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~voted(node0)']
2627     : 1-----0--0--------0--------------
2627     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~voted(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~voted(node4)']

sign_func_name2args: {'0$decided': [(Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voted': [(Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)]}

const2sigs: {Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0, value$1$vote$1$0, value$1$vote$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$0], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$1], Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$0]}

sig2const: {'value$0$decided$0$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$1': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$1': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$voted$0$0': Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$vote$0$0, node$1$vote$0$1, node$1$voted$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$vote$0$0 | node$1$vote$0$1 | node$1$voted$0$0}

part_sig: ('node$1$vote$0$0 | node$1$vote$0$1 | node$1$voted$0$0', 'value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1')


---------- SigGenerator ----------

terms:  ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~voted(node4)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voted': Const('voted', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voted': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')),)}

sign_func_name2count:  {'0$decided': 1, '1$vote': 2, '1$voted': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$vote$0$0, node$1$vote$0$1, node$1$voted$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$vote$0$0 | node$1$vote$0$1 | node$1$voted$0$0}

	sort: value

	identical_classes: {'value$0$decided$0; value$1$vote$1; value$1$vote$1': [value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1]}

	identical_single_classes: {'value$0$decided$0; value$1$vote$1; value$1$vote$1': value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$1$vote$0': [node$1$vote$0$0, node$1$vote$0$1], 'node$1$voted$0': [node$1$voted$0$0]}

	identical_single_classes: {'node$1$voted$0': node$1$voted$0$0}

	identical_multi_classes: {'node$1$vote$0': [node$1$vote$0$0, node$1$vote$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voted': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~voted(NODE2)', '~vote(NODE0,VALUE0)', 'decided(VALUE0)', '~vote(NODE1,VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0,VALUE0. voted(NODE2) | vote(NODE0,VALUE0) | ~decided(VALUE0) | vote(NODE1,VALUE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 18 =====================
size : 30
num_suborbits: 1
2628 (*) : -1-------------------000---------
2628     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)', '~voted(node4)']
2629     : --1------------------000---------
2629     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)', '~voted(node4)']
2630     : 1--------------------000---------
2630     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)', '~voted(node4)']
2631     : -1------------------0-0-0--------
2631     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)', '~voted(node4)']
2632     : --1-----------------0-0-0--------
2632     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)', '~voted(node4)']
2633     : 1-------------------0-0-0--------
2633     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)', '~voted(node4)']
2634     : -1------------------00---0-------
2634     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)', '~voted(node3)']
2635     : --1-----------------00---0-------
2635     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)', '~voted(node3)']
2636     : 1-------------------00---0-------
2636     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)', '~voted(node3)']
2637     : -1-----------------0--0---0------
2637     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)', '~voted(node4)']
2638     : --1----------------0--0---0------
2638     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)', '~voted(node4)']
2639     : 1------------------0--0---0------
2639     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)', '~voted(node4)']
2640     : -1-----------------0-0-----0-----
2640     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)', '~voted(node3)']
2641     : --1----------------0-0-----0-----
2641     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)', '~voted(node3)']
2642     : 1------------------0-0-----0-----
2642     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)', '~voted(node3)']
2643     : -1-----------------00-------0----
2643     : ['decided(value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)', '~voted(node2)']
2644     : --1----------------00-------0----
2644     : ['decided(value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)', '~voted(node2)']
2645     : 1------------------00-------0----
2645     : ['decided(value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)', '~voted(node2)']
2646     : -1----------------0---0------0---
2646     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)', '~voted(node4)']
2647     : --1---------------0---0------0---
2647     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)', '~voted(node4)']
2648     : 1-----------------0---0------0---
2648     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)', '~voted(node4)']
2649     : -1----------------0--0--------0--
2649     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)', '~voted(node3)']
2650     : --1---------------0--0--------0--
2650     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)', '~voted(node3)']
2651     : 1-----------------0--0--------0--
2651     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)', '~voted(node3)']
2652     : -1----------------0-0----------0-
2652     : ['decided(value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)', '~voted(node2)']
2653     : --1---------------0-0----------0-
2653     : ['decided(value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)', '~voted(node2)']
2654     : 1-----------------0-0----------0-
2654     : ['decided(value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)', '~voted(node2)']
2655     : -1----------------00------------0
2655     : ['decided(value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)', '~voted(node1)']
2656     : --1---------------00------------0
2656     : ['decided(value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)', '~voted(node1)']
2657     : 1-----------------00------------0
2657     : ['decided(value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)', '~voted(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value1)', '~voted(node3)', '~voted(node4)', 'voting_quorum ~= quorum__node0_node1_node2', '~member(node3,quorum__node0_node1_node2)', '~member(node4,quorum__node0_node1_node2)']

sign_func_name2args: {'0$decided': [(Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$voted': [(Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),), (Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)], '1$voting_quorum=': [(Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),)], '1$member': [(Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))))]}

const2sigs: {Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$0, node$1$member$0$0], Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$1, node$1$member$0$1], Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$0, quorum$1$member$1$0, quorum$1$member$1$1]}

sig2const: {'value$0$decided$0$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$voted$0$0': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'node$1$voted$0$1': Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$voting_quorum=$0$0': Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$0': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$0': Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$1': Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$1': Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$member$0$0; node$1$voted$0$0, node$1$member$0$1; node$1$voted$0$1], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$member$0$0; node$1$voted$0$0 | node$1$member$0$1; node$1$voted$0$1, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

part_sig: ('node$1$member$0$0; node$1$voted$0$0 | node$1$member$0$1; node$1$voted$0$1', 'quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0', 'value$0$decided$0$0')


---------- SigGenerator ----------

terms:  ['decided(value1)', '~voted(node3)', '~voted(node4)', 'voting_quorum ~= quorum__node0_node1_node2', '~member(node3,quorum__node0_node1_node2)', '~member(node4,quorum__node0_node1_node2)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voted': Const('voted', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), BooleanSort())), 'voting_quorum=': Const('voting_quorum', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'voted': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')),), 'voting_quorum=': (EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')),), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

sign_func_name2count:  {'0$decided': 1, '1$voted': 2, '1$voting_quorum=': 1, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$member$0$0; node$1$voted$0$0, node$1$member$0$1; node$1$voted$0$1], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$member$0$0; node$1$voted$0$0 | node$1$member$0$1; node$1$voted$0$1, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

	sort: value

	identical_classes: {'value$0$decided$0': [value$0$decided$0$0]}

	identical_single_classes: {'value$0$decided$0': value$0$decided$0$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$1$member$0; node$1$voted$0': [node$1$member$0$0; node$1$voted$0$0, node$1$member$0$1; node$1$voted$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'node$1$member$0; node$1$voted$0': [node$1$member$0$0, node$1$voted$0$0, node$1$member$0$1, node$1$voted$0$1]}

	sort: quorum

	identical_classes: {'quorum$1$member$1; quorum$1$member$1; quorum$1$voting_quorum=$0': [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

	identical_single_classes: {'quorum$1$member$1; quorum$1$member$1; quorum$1$voting_quorum=$0': quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall

quantifier mode: quorum: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voted': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))]], '1$voting_quorum=': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]], '1$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(NODE0,QUORUM0)', '~member(NODE1,QUORUM0)', 'voting_quorum ~= QUORUM0', 'decided(VALUE0)', '~voted(NODE0)', '~voted(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,QUORUM0,NODE0,VALUE0. member(NODE0,QUORUM0) | member(NODE1,QUORUM0) | voting_quorum = QUORUM0 | ~decided(VALUE0) | voted(NODE0) | voted(NODE1) | NODE0 = NODE1


=== Prime Orbit 19 =====================
size : 90
num_suborbits: 1
2658 (*) : -1-----0-------------00----------
2658     : ['decided(value1)', '~vote(node1,value1)', '~voted(node3)', '~voted(node4)']
2659     : --1-----0------------00----------
2659     : ['decided(value2)', '~vote(node1,value2)', '~voted(node3)', '~voted(node4)']
2660     : 1-----0--------------00----------
2660     : ['decided(value0)', '~vote(node1,value0)', '~voted(node3)', '~voted(node4)']
2661     : -1-----0------------0-0----------
2661     : ['decided(value1)', '~vote(node1,value1)', '~voted(node2)', '~voted(node4)']
2662     : --1-----0-----------0-0----------
2662     : ['decided(value2)', '~vote(node1,value2)', '~voted(node2)', '~voted(node4)']
2663     : 1-----0-------------0-0----------
2663     : ['decided(value0)', '~vote(node1,value0)', '~voted(node2)', '~voted(node4)']
2664     : -1-----0------------00-----------
2664     : ['decided(value1)', '~vote(node1,value1)', '~voted(node2)', '~voted(node3)']
2665     : --1-----0-----------00-----------
2665     : ['decided(value2)', '~vote(node1,value2)', '~voted(node2)', '~voted(node3)']
2666     : 1-----0-------------00-----------
2666     : ['decided(value0)', '~vote(node1,value0)', '~voted(node2)', '~voted(node3)']
2667     : -1--------0----------00----------
2667     : ['decided(value1)', '~vote(node2,value1)', '~voted(node3)', '~voted(node4)']
2668     : --1--------0---------00----------
2668     : ['decided(value2)', '~vote(node2,value2)', '~voted(node3)', '~voted(node4)']
2669     : 1--------0-----------00----------
2669     : ['decided(value0)', '~vote(node2,value0)', '~voted(node3)', '~voted(node4)']
2670     : -1--------0--------0--0----------
2670     : ['decided(value1)', '~vote(node2,value1)', '~voted(node1)', '~voted(node4)']
2671     : --1--------0-------0--0----------
2671     : ['decided(value2)', '~vote(node2,value2)', '~voted(node1)', '~voted(node4)']
2672     : 1--------0---------0--0----------
2672     : ['decided(value0)', '~vote(node2,value0)', '~voted(node1)', '~voted(node4)']
2673     : -1--------0--------0-0-----------
2673     : ['decided(value1)', '~vote(node2,value1)', '~voted(node1)', '~voted(node3)']
2674     : --1--------0-------0-0-----------
2674     : ['decided(value2)', '~vote(node2,value2)', '~voted(node1)', '~voted(node3)']
2675     : 1--------0---------0-0-----------
2675     : ['decided(value0)', '~vote(node2,value0)', '~voted(node1)', '~voted(node3)']
2676     : -1-----------0------0-0----------
2676     : ['decided(value1)', '~vote(node3,value1)', '~voted(node2)', '~voted(node4)']
2677     : --1-----------0-----0-0----------
2677     : ['decided(value2)', '~vote(node3,value2)', '~voted(node2)', '~voted(node4)']
2678     : 1-----------0-------0-0----------
2678     : ['decided(value0)', '~vote(node3,value0)', '~voted(node2)', '~voted(node4)']
2679     : -1-----------0-----0--0----------
2679     : ['decided(value1)', '~vote(node3,value1)', '~voted(node1)', '~voted(node4)']
2680     : --1-----------0----0--0----------
2680     : ['decided(value2)', '~vote(node3,value2)', '~voted(node1)', '~voted(node4)']
2681     : 1-----------0------0--0----------
2681     : ['decided(value0)', '~vote(node3,value0)', '~voted(node1)', '~voted(node4)']
2682     : -1-----------0-----00------------
2682     : ['decided(value1)', '~vote(node3,value1)', '~voted(node1)', '~voted(node2)']
2683     : --1-----------0----00------------
2683     : ['decided(value2)', '~vote(node3,value2)', '~voted(node1)', '~voted(node2)']
2684     : 1-----------0------00------------
2684     : ['decided(value0)', '~vote(node3,value0)', '~voted(node1)', '~voted(node2)']
2685     : -1--------------0---00-----------
2685     : ['decided(value1)', '~vote(node4,value1)', '~voted(node2)', '~voted(node3)']
2686     : --1--------------0--00-----------
2686     : ['decided(value2)', '~vote(node4,value2)', '~voted(node2)', '~voted(node3)']
2687     : 1--------------0----00-----------
2687     : ['decided(value0)', '~vote(node4,value0)', '~voted(node2)', '~voted(node3)']
2688     : -1--------------0--0-0-----------
2688     : ['decided(value1)', '~vote(node4,value1)', '~voted(node1)', '~voted(node3)']
2689     : --1--------------0-0-0-----------
2689     : ['decided(value2)', '~vote(node4,value2)', '~voted(node1)', '~voted(node3)']
2690     : 1--------------0---0-0-----------
2690     : ['decided(value0)', '~vote(node4,value0)', '~voted(node1)', '~voted(node3)']
2691     : -1--------------0--00------------
2691     : ['decided(value1)', '~vote(node4,value1)', '~voted(node1)', '~voted(node2)']
2692     : --1--------------0-00------------
2692     : ['decided(value2)', '~vote(node4,value2)', '~voted(node1)', '~voted(node2)']
2693     : 1--------------0---00------------
2693     : ['decided(value0)', '~vote(node4,value0)', '~voted(node1)', '~voted(node2)']
2694     : -1--0----------------00----------
2694     : ['decided(value1)', '~vote(node0,value1)', '~voted(node3)', '~voted(node4)']
2695     : --1--0---------------00----------
2695     : ['decided(value2)', '~vote(node0,value2)', '~voted(node3)', '~voted(node4)']
2696     : 1--0-----------------00----------
2696     : ['decided(value0)', '~vote(node0,value0)', '~voted(node3)', '~voted(node4)']
2697     : -1--0---------------0-0----------
2697     : ['decided(value1)', '~vote(node0,value1)', '~voted(node2)', '~voted(node4)']
2698     : --1--0--------------0-0----------
2698     : ['decided(value2)', '~vote(node0,value2)', '~voted(node2)', '~voted(node4)']
2699     : 1--0----------------0-0----------
2699     : ['decided(value0)', '~vote(node0,value0)', '~voted(node2)', '~voted(node4)']
2700     : -1--0---------------00-----------
2700     : ['decided(value1)', '~vote(node0,value1)', '~voted(node2)', '~voted(node3)']
2701     : --1--0--------------00-----------
2701     : ['decided(value2)', '~vote(node0,value2)', '~voted(node2)', '~voted(node3)']
2702     : 1--0----------------00-----------
2702     : ['decided(value0)', '~vote(node0,value0)', '~voted(node2)', '~voted(node3)']
2703     : -1--------0-------0---0----------
2703     : ['decided(value1)', '~vote(node2,value1)', '~voted(node0)', '~voted(node4)']
2704     : --1--------0------0---0----------
2704     : ['decided(value2)', '~vote(node2,value2)', '~voted(node0)', '~voted(node4)']
2705     : 1--------0--------0---0----------
2705     : ['decided(value0)', '~vote(node2,value0)', '~voted(node0)', '~voted(node4)']
2706     : -1--------0-------0--0-----------
2706     : ['decided(value1)', '~vote(node2,value1)', '~voted(node0)', '~voted(node3)']
2707     : --1--------0------0--0-----------
2707     : ['decided(value2)', '~vote(node2,value2)', '~voted(node0)', '~voted(node3)']
2708     : 1--------0--------0--0-----------
2708     : ['decided(value0)', '~vote(node2,value0)', '~voted(node0)', '~voted(node3)']
2709     : -1-----------0----0---0----------
2709     : ['decided(value1)', '~vote(node3,value1)', '~voted(node0)', '~voted(node4)']
2710     : --1-----------0---0---0----------
2710     : ['decided(value2)', '~vote(node3,value2)', '~voted(node0)', '~voted(node4)']
2711     : 1-----------0-----0---0----------
2711     : ['decided(value0)', '~vote(node3,value0)', '~voted(node0)', '~voted(node4)']
2712     : -1-----------0----0-0------------
2712     : ['decided(value1)', '~vote(node3,value1)', '~voted(node0)', '~voted(node2)']
2713     : --1-----------0---0-0------------
2713     : ['decided(value2)', '~vote(node3,value2)', '~voted(node0)', '~voted(node2)']
2714     : 1-----------0-----0-0------------
2714     : ['decided(value0)', '~vote(node3,value0)', '~voted(node0)', '~voted(node2)']
2715     : -1--------------0-0--0-----------
2715     : ['decided(value1)', '~vote(node4,value1)', '~voted(node0)', '~voted(node3)']
2716     : --1--------------00--0-----------
2716     : ['decided(value2)', '~vote(node4,value2)', '~voted(node0)', '~voted(node3)']
2717     : 1--------------0--0--0-----------
2717     : ['decided(value0)', '~vote(node4,value0)', '~voted(node0)', '~voted(node3)']
2718     : -1--------------0-0-0------------
2718     : ['decided(value1)', '~vote(node4,value1)', '~voted(node0)', '~voted(node2)']
2719     : --1--------------00-0------------
2719     : ['decided(value2)', '~vote(node4,value2)', '~voted(node0)', '~voted(node2)']
2720     : 1--------------0--0-0------------
2720     : ['decided(value0)', '~vote(node4,value0)', '~voted(node0)', '~voted(node2)']
2721     : -1--0--------------0--0----------
2721     : ['decided(value1)', '~vote(node0,value1)', '~voted(node1)', '~voted(node4)']
2722     : --1--0-------------0--0----------
2722     : ['decided(value2)', '~vote(node0,value2)', '~voted(node1)', '~voted(node4)']
2723     : 1--0---------------0--0----------
2723     : ['decided(value0)', '~vote(node0,value0)', '~voted(node1)', '~voted(node4)']
2724     : -1--0--------------0-0-----------
2724     : ['decided(value1)', '~vote(node0,value1)', '~voted(node1)', '~voted(node3)']
2725     : --1--0-------------0-0-----------
2725     : ['decided(value2)', '~vote(node0,value2)', '~voted(node1)', '~voted(node3)']
2726     : 1--0---------------0-0-----------
2726     : ['decided(value0)', '~vote(node0,value0)', '~voted(node1)', '~voted(node3)']
2727     : -1-----0----------0---0----------
2727     : ['decided(value1)', '~vote(node1,value1)', '~voted(node0)', '~voted(node4)']
2728     : --1-----0---------0---0----------
2728     : ['decided(value2)', '~vote(node1,value2)', '~voted(node0)', '~voted(node4)']
2729     : 1-----0-----------0---0----------
2729     : ['decided(value0)', '~vote(node1,value0)', '~voted(node0)', '~voted(node4)']
2730     : -1-----0----------0--0-----------
2730     : ['decided(value1)', '~vote(node1,value1)', '~voted(node0)', '~voted(node3)']
2731     : --1-----0---------0--0-----------
2731     : ['decided(value2)', '~vote(node1,value2)', '~voted(node0)', '~voted(node3)']
2732     : 1-----0-----------0--0-----------
2732     : ['decided(value0)', '~vote(node1,value0)', '~voted(node0)', '~voted(node3)']
2733     : -1-----------0----00-------------
2733     : ['decided(value1)', '~vote(node3,value1)', '~voted(node0)', '~voted(node1)']
2734     : --1-----------0---00-------------
2734     : ['decided(value2)', '~vote(node3,value2)', '~voted(node0)', '~voted(node1)']
2735     : 1-----------0-----00-------------
2735     : ['decided(value0)', '~vote(node3,value0)', '~voted(node0)', '~voted(node1)']
2736     : -1--------------0-00-------------
2736     : ['decided(value1)', '~vote(node4,value1)', '~voted(node0)', '~voted(node1)']
2737     : --1--------------000-------------
2737     : ['decided(value2)', '~vote(node4,value2)', '~voted(node0)', '~voted(node1)']
2738     : 1--------------0--00-------------
2738     : ['decided(value0)', '~vote(node4,value0)', '~voted(node0)', '~voted(node1)']
2739     : -1--0--------------00------------
2739     : ['decided(value1)', '~vote(node0,value1)', '~voted(node1)', '~voted(node2)']
2740     : --1--0-------------00------------
2740     : ['decided(value2)', '~vote(node0,value2)', '~voted(node1)', '~voted(node2)']
2741     : 1--0---------------00------------
2741     : ['decided(value0)', '~vote(node0,value0)', '~voted(node1)', '~voted(node2)']
2742     : -1-----0----------0-0------------
2742     : ['decided(value1)', '~vote(node1,value1)', '~voted(node0)', '~voted(node2)']
2743     : --1-----0---------0-0------------
2743     : ['decided(value2)', '~vote(node1,value2)', '~voted(node0)', '~voted(node2)']
2744     : 1-----0-----------0-0------------
2744     : ['decided(value0)', '~vote(node1,value0)', '~voted(node0)', '~voted(node2)']
2745     : -1--------0-------00-------------
2745     : ['decided(value1)', '~vote(node2,value1)', '~voted(node0)', '~voted(node1)']
2746     : --1--------0------00-------------
2746     : ['decided(value2)', '~vote(node2,value2)', '~voted(node0)', '~voted(node1)']
2747     : 1--------0--------00-------------
2747     : ['decided(value0)', '~vote(node2,value0)', '~voted(node0)', '~voted(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value1)', '~vote(node1,value1)', '~voted(node3)', '~voted(node4)']

sign_func_name2args: {'0$decided': [(Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voted': [(Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),), (Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)]}

const2sigs: {Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0, value$1$vote$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$0], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$0], Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$1]}

sig2const: {'value$0$decided$0$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$voted$0$0': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'node$1$voted$0$1': Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$vote$0$0, node$1$voted$0$0, node$1$voted$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$vote$0$0 | node$1$voted$0$0 | node$1$voted$0$1}

part_sig: ('node$1$vote$0$0 | node$1$voted$0$0 | node$1$voted$0$1', 'value$0$decided$0$0; value$1$vote$1$0')


---------- SigGenerator ----------

terms:  ['decided(value1)', '~vote(node1,value1)', '~voted(node3)', '~voted(node4)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voted': Const('voted', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voted': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')),)}

sign_func_name2count:  {'0$decided': 1, '1$vote': 1, '1$voted': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$vote$0$0, node$1$voted$0$0, node$1$voted$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$vote$0$0 | node$1$voted$0$0 | node$1$voted$0$1}

	sort: value

	identical_classes: {'value$0$decided$0; value$1$vote$1': [value$0$decided$0$0; value$1$vote$1$0]}

	identical_single_classes: {'value$0$decided$0; value$1$vote$1': value$0$decided$0$0; value$1$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$1$vote$0': [node$1$vote$0$0], 'node$1$voted$0': [node$1$voted$0$0, node$1$voted$0$1]}

	identical_single_classes: {'node$1$vote$0': node$1$vote$0$0}

	identical_multi_classes: {'node$1$voted$0': [node$1$voted$0$0, node$1$voted$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voted': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~voted(NODE2)', '~vote(NODE0,VALUE0)', 'decided(VALUE0)', '~voted(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0,VALUE0. voted(NODE2) | vote(NODE0,VALUE0) | ~decided(VALUE0) | voted(NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 20 =====================
size : 30
num_suborbits: 1
2748 (*) : -1----------------0--00----------
2748     : ['decided(value1)', '~voted(node0)', '~voted(node3)', '~voted(node4)']
2749     : --1---------------0--00----------
2749     : ['decided(value2)', '~voted(node0)', '~voted(node3)', '~voted(node4)']
2750     : 1-----------------0--00----------
2750     : ['decided(value0)', '~voted(node0)', '~voted(node3)', '~voted(node4)']
2751     : -1----------------0-0-0----------
2751     : ['decided(value1)', '~voted(node0)', '~voted(node2)', '~voted(node4)']
2752     : --1---------------0-0-0----------
2752     : ['decided(value2)', '~voted(node0)', '~voted(node2)', '~voted(node4)']
2753     : 1-----------------0-0-0----------
2753     : ['decided(value0)', '~voted(node0)', '~voted(node2)', '~voted(node4)']
2754     : -1----------------0-00-----------
2754     : ['decided(value1)', '~voted(node0)', '~voted(node2)', '~voted(node3)']
2755     : --1---------------0-00-----------
2755     : ['decided(value2)', '~voted(node0)', '~voted(node2)', '~voted(node3)']
2756     : 1-----------------0-00-----------
2756     : ['decided(value0)', '~voted(node0)', '~voted(node2)', '~voted(node3)']
2757     : -1----------------00--0----------
2757     : ['decided(value1)', '~voted(node0)', '~voted(node1)', '~voted(node4)']
2758     : --1---------------00--0----------
2758     : ['decided(value2)', '~voted(node0)', '~voted(node1)', '~voted(node4)']
2759     : 1-----------------00--0----------
2759     : ['decided(value0)', '~voted(node0)', '~voted(node1)', '~voted(node4)']
2760     : -1----------------00-0-----------
2760     : ['decided(value1)', '~voted(node0)', '~voted(node1)', '~voted(node3)']
2761     : --1---------------00-0-----------
2761     : ['decided(value2)', '~voted(node0)', '~voted(node1)', '~voted(node3)']
2762     : 1-----------------00-0-----------
2762     : ['decided(value0)', '~voted(node0)', '~voted(node1)', '~voted(node3)']
2763     : -1----------------000------------
2763     : ['decided(value1)', '~voted(node0)', '~voted(node1)', '~voted(node2)']
2764     : --1---------------000------------
2764     : ['decided(value2)', '~voted(node0)', '~voted(node1)', '~voted(node2)']
2765     : 1-----------------000------------
2765     : ['decided(value0)', '~voted(node0)', '~voted(node1)', '~voted(node2)']
2766     : -1-----------------0-00----------
2766     : ['decided(value1)', '~voted(node1)', '~voted(node3)', '~voted(node4)']
2767     : --1----------------0-00----------
2767     : ['decided(value2)', '~voted(node1)', '~voted(node3)', '~voted(node4)']
2768     : 1------------------0-00----------
2768     : ['decided(value0)', '~voted(node1)', '~voted(node3)', '~voted(node4)']
2769     : -1-----------------00-0----------
2769     : ['decided(value1)', '~voted(node1)', '~voted(node2)', '~voted(node4)']
2770     : --1----------------00-0----------
2770     : ['decided(value2)', '~voted(node1)', '~voted(node2)', '~voted(node4)']
2771     : 1------------------00-0----------
2771     : ['decided(value0)', '~voted(node1)', '~voted(node2)', '~voted(node4)']
2772     : -1-----------------000-----------
2772     : ['decided(value1)', '~voted(node1)', '~voted(node2)', '~voted(node3)']
2773     : --1----------------000-----------
2773     : ['decided(value2)', '~voted(node1)', '~voted(node2)', '~voted(node3)']
2774     : 1------------------000-----------
2774     : ['decided(value0)', '~voted(node1)', '~voted(node2)', '~voted(node3)']
2775     : -1------------------000----------
2775     : ['decided(value1)', '~voted(node2)', '~voted(node3)', '~voted(node4)']
2776     : --1-----------------000----------
2776     : ['decided(value2)', '~voted(node2)', '~voted(node3)', '~voted(node4)']
2777     : 1-------------------000----------
2777     : ['decided(value0)', '~voted(node2)', '~voted(node3)', '~voted(node4)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value1)', '~voted(node0)', '~voted(node3)', '~voted(node4)']

sign_func_name2args: {'0$decided': [(Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$voted': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),), (Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)]}

const2sigs: {Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$0], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$1], Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$2]}

sig2const: {'value$0$decided$0$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$voted$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'node$1$voted$0$1': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'node$1$voted$0$2': Const('node4', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$voted$0$0, node$1$voted$0$1, node$1$voted$0$2]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$voted$0$0 | node$1$voted$0$1 | node$1$voted$0$2}

part_sig: ('node$1$voted$0$0 | node$1$voted$0$1 | node$1$voted$0$2', 'value$0$decided$0$0')


---------- SigGenerator ----------

terms:  ['decided(value1)', '~voted(node0)', '~voted(node3)', '~voted(node4)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voted': Const('voted', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'voted': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')),)}

sign_func_name2count:  {'0$decided': 1, '1$voted': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$voted$0$0, node$1$voted$0$1, node$1$voted$0$2]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$voted$0$0 | node$1$voted$0$1 | node$1$voted$0$2}

	sort: value

	identical_classes: {'value$0$decided$0': [value$0$decided$0$0]}

	identical_single_classes: {'value$0$decided$0': value$0$decided$0$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$1$voted$0': [node$1$voted$0$0, node$1$voted$0$1, node$1$voted$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$1$voted$0': [node$1$voted$0$0, node$1$voted$0$1, node$1$voted$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voted': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~voted(NODE2)', '~voted(NODE0)', 'decided(VALUE0)', '~voted(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0,VALUE0. voted(NODE2) | voted(NODE0) | ~decided(VALUE0) | voted(NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 21 =====================
size : 30
num_suborbits: 1
2778 (*) : -1--------0--0-----------0-------
2778     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value1)', '~vote(node3,value1)']
2779     : --1--------0--0----------0-------
2779     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value2)', '~vote(node3,value2)']
2780     : 1--------0--0------------0-------
2780     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value0)', '~vote(node3,value0)']
2781     : -1--------0-----0-------0--------
2781     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value1)', '~vote(node4,value1)']
2782     : --1--------0-----0------0--------
2782     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value2)', '~vote(node4,value2)']
2783     : 1--------0-----0--------0--------
2783     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value0)', '~vote(node4,value0)']
2784     : -1-----------0--0------0---------
2784     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value1)', '~vote(node4,value1)']
2785     : --1-----------0--0-----0---------
2785     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value2)', '~vote(node4,value2)']
2786     : 1-----------0--0-------0---------
2786     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value0)', '~vote(node4,value0)']
2787     : -1-----0-----0-------------0-----
2787     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value1)', '~vote(node3,value1)']
2788     : --1-----0-----0------------0-----
2788     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value2)', '~vote(node3,value2)']
2789     : 1-----0-----0--------------0-----
2789     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value0)', '~vote(node3,value0)']
2790     : -1-----0--------0---------0------
2790     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value1)', '~vote(node4,value1)']
2791     : --1-----0--------0--------0------
2791     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value2)', '~vote(node4,value2)']
2792     : 1-----0--------0----------0------
2792     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value0)', '~vote(node4,value0)']
2793     : -1-----0--0-----------------0----
2793     : ['decided(value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value1)', '~vote(node2,value1)']
2794     : --1-----0--0----------------0----
2794     : ['decided(value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value2)', '~vote(node2,value2)']
2795     : 1-----0--0------------------0----
2795     : ['decided(value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value0)', '~vote(node2,value0)']
2796     : -1--0--------0----------------0--
2796     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value1)', '~vote(node3,value1)']
2797     : --1--0--------0---------------0--
2797     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value2)', '~vote(node3,value2)']
2798     : 1--0--------0-----------------0--
2798     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value0)', '~vote(node3,value0)']
2799     : -1--0-----------0------------0---
2799     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value1)', '~vote(node4,value1)']
2800     : --1--0-----------0-----------0---
2800     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value2)', '~vote(node4,value2)']
2801     : 1--0-----------0-------------0---
2801     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value0)', '~vote(node4,value0)']
2802     : -1--0-----0--------------------0-
2802     : ['decided(value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value1)', '~vote(node2,value1)']
2803     : --1--0-----0-------------------0-
2803     : ['decided(value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value2)', '~vote(node2,value2)']
2804     : 1--0-----0---------------------0-
2804     : ['decided(value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value0)', '~vote(node2,value0)']
2805     : -1--0--0------------------------0
2805     : ['decided(value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)', '~vote(node1,value1)']
2806     : --1--0--0-----------------------0
2806     : ['decided(value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)', '~vote(node1,value2)']
2807     : 1--0--0-------------------------0
2807     : ['decided(value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)', '~vote(node1,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', 'voting_quorum ~= quorum__node0_node1_node4', '~member(node2,quorum__node0_node1_node4)', '~member(node3,quorum__node0_node1_node4)']

sign_func_name2args: {'0$decided': [(Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$vote': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voting_quorum=': [(Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),)], '1$member': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))))]}

const2sigs: {Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0, value$1$vote$1$0, value$1$vote$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$0, node$1$member$0$0], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$1, node$1$member$0$1], Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$0, quorum$1$member$1$0, quorum$1$member$1$1]}

sig2const: {'value$0$decided$0$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$1': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$1': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$1$voting_quorum=$0$0': Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$0': Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$1': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$1': Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$member$0$0; node$1$vote$0$0, node$1$member$0$1; node$1$vote$0$1], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$member$0$0; node$1$vote$0$0 | node$1$member$0$1; node$1$vote$0$1, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

part_sig: ('node$1$member$0$0; node$1$vote$0$0 | node$1$member$0$1; node$1$vote$0$1', 'quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0', 'value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1')


---------- SigGenerator ----------

terms:  ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', 'voting_quorum ~= quorum__node0_node1_node4', '~member(node2,quorum__node0_node1_node4)', '~member(node3,quorum__node0_node1_node4)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voting_quorum=': Const('voting_quorum', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voting_quorum=': (EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')),), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

sign_func_name2count:  {'0$decided': 1, '1$vote': 2, '1$voting_quorum=': 1, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$member$0$0; node$1$vote$0$0, node$1$member$0$1; node$1$vote$0$1], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$member$0$0; node$1$vote$0$0 | node$1$member$0$1; node$1$vote$0$1, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

	sort: value

	identical_classes: {'value$0$decided$0; value$1$vote$1; value$1$vote$1': [value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1]}

	identical_single_classes: {'value$0$decided$0; value$1$vote$1; value$1$vote$1': value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$1$member$0; node$1$vote$0': [node$1$member$0$0; node$1$vote$0$0, node$1$member$0$1; node$1$vote$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'node$1$member$0; node$1$vote$0': [node$1$member$0$0, node$1$vote$0$0, node$1$member$0$1, node$1$vote$0$1]}

	sort: quorum

	identical_classes: {'quorum$1$member$1; quorum$1$member$1; quorum$1$voting_quorum=$0': [quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0]}

	identical_single_classes: {'quorum$1$member$1; quorum$1$member$1; quorum$1$voting_quorum=$0': quorum$1$member$1$0; quorum$1$member$1$1; quorum$1$voting_quorum=$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall

quantifier mode: quorum: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voting_quorum=': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]], '1$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~vote(NODE1,VALUE0)', '~member(NODE0,QUORUM0)', '~member(NODE1,QUORUM0)', 'voting_quorum ~= QUORUM0', '~vote(NODE0,VALUE0)', 'decided(VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,QUORUM0,NODE0,VALUE0. vote(NODE1,VALUE0) | member(NODE0,QUORUM0) | member(NODE1,QUORUM0) | voting_quorum = QUORUM0 | vote(NODE0,VALUE0) | ~decided(VALUE0) | NODE0 = NODE1


=== Prime Orbit 22 =====================
size : 30
num_suborbits: 1
2808 (*) : -1--0-----0--0-------------------
2808     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~vote(node3,value1)']
2809     : --1--0-----0--0------------------
2809     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~vote(node3,value2)']
2810     : 1--0-----0--0--------------------
2810     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~vote(node3,value0)']
2811     : -1--0-----0-----0----------------
2811     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~vote(node4,value1)']
2812     : --1--0-----0-----0---------------
2812     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~vote(node4,value2)']
2813     : 1--0-----0-----0-----------------
2813     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~vote(node4,value0)']
2814     : -1--0--------0--0----------------
2814     : ['decided(value1)', '~vote(node0,value1)', '~vote(node3,value1)', '~vote(node4,value1)']
2815     : --1--0--------0--0---------------
2815     : ['decided(value2)', '~vote(node0,value2)', '~vote(node3,value2)', '~vote(node4,value2)']
2816     : 1--0--------0--0-----------------
2816     : ['decided(value0)', '~vote(node0,value0)', '~vote(node3,value0)', '~vote(node4,value0)']
2817     : -1--0--0-----0-------------------
2817     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node3,value1)']
2818     : --1--0--0-----0------------------
2818     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node3,value2)']
2819     : 1--0--0-----0--------------------
2819     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node3,value0)']
2820     : -1--0--0--------0----------------
2820     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node4,value1)']
2821     : --1--0--0--------0---------------
2821     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node4,value2)']
2822     : 1--0--0--------0-----------------
2822     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node4,value0)']
2823     : -1--0--0--0----------------------
2823     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node2,value1)']
2824     : --1--0--0--0---------------------
2824     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node2,value2)']
2825     : 1--0--0--0-----------------------
2825     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node2,value0)']
2826     : -1-----0--0--0-------------------
2826     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~vote(node3,value1)']
2827     : --1-----0--0--0------------------
2827     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~vote(node3,value2)']
2828     : 1-----0--0--0--------------------
2828     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~vote(node3,value0)']
2829     : -1-----0--0-----0----------------
2829     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~vote(node4,value1)']
2830     : --1-----0--0-----0---------------
2830     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~vote(node4,value2)']
2831     : 1-----0--0-----0-----------------
2831     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~vote(node4,value0)']
2832     : -1-----0-----0--0----------------
2832     : ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~vote(node4,value1)']
2833     : --1-----0-----0--0---------------
2833     : ['decided(value2)', '~vote(node1,value2)', '~vote(node3,value2)', '~vote(node4,value2)']
2834     : 1-----0-----0--0-----------------
2834     : ['decided(value0)', '~vote(node1,value0)', '~vote(node3,value0)', '~vote(node4,value0)']
2835     : -1--------0--0--0----------------
2835     : ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', '~vote(node4,value1)']
2836     : --1--------0--0--0---------------
2836     : ['decided(value2)', '~vote(node2,value2)', '~vote(node3,value2)', '~vote(node4,value2)']
2837     : 1--------0--0--0-----------------
2837     : ['decided(value0)', '~vote(node2,value0)', '~vote(node3,value0)', '~vote(node4,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~vote(node3,value1)']

sign_func_name2args: {'0$decided': [(Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$vote': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0, value$1$vote$1$0, value$1$vote$1$1, value$1$vote$1$2], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$1], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$2]}

sig2const: {'value$0$decided$0$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$1': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$2': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$2': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1; value$1$vote$1$2], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$vote$0$0, node$1$vote$0$1, node$1$vote$0$2]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1; value$1$vote$1$2, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$vote$0$0 | node$1$vote$0$1 | node$1$vote$0$2}

part_sig: ('node$1$vote$0$0 | node$1$vote$0$1 | node$1$vote$0$2', 'value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1; value$1$vote$1$2')


---------- SigGenerator ----------

terms:  ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~vote(node3,value1)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')))}

sign_func_name2count:  {'0$decided': 1, '1$vote': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1; value$1$vote$1$2], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$vote$0$0, node$1$vote$0$1, node$1$vote$0$2]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1; value$1$vote$1$2, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$vote$0$0 | node$1$vote$0$1 | node$1$vote$0$2}

	sort: value

	identical_classes: {'value$0$decided$0; value$1$vote$1; value$1$vote$1; value$1$vote$1': [value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1; value$1$vote$1$2]}

	identical_single_classes: {'value$0$decided$0; value$1$vote$1; value$1$vote$1; value$1$vote$1': value$0$decided$0$0; value$1$vote$1$0; value$1$vote$1$1; value$1$vote$1$2}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$1$vote$0': [node$1$vote$0$0, node$1$vote$0$1, node$1$vote$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$1$vote$0': [node$1$vote$0$0, node$1$vote$0$1, node$1$vote$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~vote(NODE0,VALUE0)', 'decided(VALUE0)', '~vote(NODE2,VALUE0)', '~vote(NODE1,VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE2,NODE0,VALUE0. vote(NODE0,VALUE0) | ~decided(VALUE0) | vote(NODE2,VALUE0) | vote(NODE1,VALUE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 24 =====================
size : 30
num_suborbits: 1
2843 (*) : -1------------1--------0-0-0--0--
2843     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2844     : --1----------1---------0-0-0--0--
2844     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2845     : 1-------------1--------0-0-0--0--
2845     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2846     : --1---------1----------0-0-0--0--
2846     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2847     : 1------------1---------0-0-0--0--
2847     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2848     : -1----------1----------0-0-0--0--
2848     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2849     : -1---------------1-----00-0--0---
2849     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2850     : --1-------------1------00-0--0---
2850     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2851     : 1----------------1-----00-0--0---
2851     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2852     : --1------------1-------00-0--0---
2852     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2853     : 1---------------1------00-0--0---
2853     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2854     : -1-------------1-------00-0--0---
2854     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2855     : -1---------1------------00--0--0-
2855     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2856     : --1-------1-------------00--0--0-
2856     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2857     : 1----------1------------00--0--0-
2857     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2858     : --1------1--------------00--0--0-
2858     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2859     : 1---------1-------------00--0--0-
2859     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2860     : -1-------1--------------00--0--0-
2860     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2861     : -1------1-----------------000---0
2861     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2862     : --1----1------------------000---0
2862     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2863     : 1-------1-----------------000---0
2863     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2864     : --1---1-------------------000---0
2864     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2865     : 1------1------------------000---0
2865     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2866     : -1----1-------------------000---0
2866     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2867     : -1---1-----------------------0000
2867     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2868     : --1-1------------------------0000
2868     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2869     : 1----1-----------------------0000
2869     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2870     : --11-------------------------0000
2870     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2871     : 1---1------------------------0000
2871     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2872     : -1-1-------------------------0000
2872     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value1)', 'vote(node3,value2)', 'voting_quorum ~= quorum__node0_node1_node2', 'voting_quorum ~= quorum__node0_node1_node4', 'voting_quorum ~= quorum__node0_node2_node4', 'voting_quorum ~= quorum__node1_node2_node4', '~member(node3,quorum__node0_node1_node4)', '~member(node3,quorum__node0_node1_node2)', '~member(node3,quorum__node1_node2_node4)', '~member(node3,quorum__node0_node2_node4)']

sign_func_name2args: {'0$decided': [(Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '0$vote': [(Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voting_quorum=': [(Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),), (Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),), (Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),), (Const('quorum__node1_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),)], '1$member': [(Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node1_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))))]}

const2sigs: {Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$0$vote$0$0, node$1$member$0$0, node$1$member$0$1, node$1$member$0$2, node$1$member$0$3], Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$0, quorum$1$member$1$1], Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$1, quorum$1$member$1$0], Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$2, quorum$1$member$1$3], Const('quorum__node1_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$3, quorum$1$member$1$2]}

sig2const: {'value$0$decided$0$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$0': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$0$vote$1$0': Const('value2', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$1$voting_quorum=$0$0': Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'quorum$1$voting_quorum=$0$1': Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'quorum$1$voting_quorum=$0$2': Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'quorum$1$voting_quorum=$0$3': Const('quorum__node1_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$0': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$0': Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$1': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$1': Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$2': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$2': Const('quorum__node1_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$3': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$3': Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0; node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$voting_quorum=$0$1, quorum$1$member$1$1; quorum$1$voting_quorum=$0$0, quorum$1$member$1$2; quorum$1$voting_quorum=$0$3, quorum$1$member$1$3; quorum$1$voting_quorum=$0$2]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0; node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$voting_quorum=$0$1 | quorum$1$member$1$1; quorum$1$voting_quorum=$0$0 | quorum$1$member$1$2; quorum$1$voting_quorum=$0$3 | quorum$1$member$1$3; quorum$1$voting_quorum=$0$2}

part_sig: ('node$0$vote$0$0; node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3', 'quorum$1$member$1$0; quorum$1$voting_quorum=$0$1 | quorum$1$member$1$1; quorum$1$voting_quorum=$0$0 | quorum$1$member$1$2; quorum$1$voting_quorum=$0$3 | quorum$1$member$1$3; quorum$1$voting_quorum=$0$2', 'value$0$decided$0$0 | value$0$vote$1$0')


---------- SigGenerator ----------

terms:  ['decided(value1)', 'vote(node3,value2)', 'voting_quorum ~= quorum__node0_node1_node2', 'voting_quorum ~= quorum__node0_node1_node4', 'voting_quorum ~= quorum__node0_node2_node4', 'voting_quorum ~= quorum__node1_node2_node4', '~member(node3,quorum__node0_node1_node4)', '~member(node3,quorum__node0_node1_node2)', '~member(node3,quorum__node1_node2_node4)', '~member(node3,quorum__node0_node2_node4)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voting_quorum=': Const('voting_quorum', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voting_quorum=': (EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')),), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

sign_func_name2count:  {'0$decided': 1, '0$vote': 1, '1$voting_quorum=': 4, '1$member': 4}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0, value$0$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$0$vote$0$0; node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$voting_quorum=$0$1, quorum$1$member$1$1; quorum$1$voting_quorum=$0$0, quorum$1$member$1$2; quorum$1$voting_quorum=$0$3, quorum$1$member$1$3; quorum$1$voting_quorum=$0$2]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0 | value$0$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$0$vote$0$0; node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$voting_quorum=$0$1 | quorum$1$member$1$1; quorum$1$voting_quorum=$0$0 | quorum$1$member$1$2; quorum$1$voting_quorum=$0$3 | quorum$1$member$1$3; quorum$1$voting_quorum=$0$2}

	sort: value

	identical_classes: {'value$0$decided$0': [value$0$decided$0$0], 'value$0$vote$1': [value$0$vote$1$0]}

	identical_single_classes: {'value$0$decided$0': value$0$decided$0$0, 'value$0$vote$1': value$0$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$vote$0; node$1$member$0; node$1$member$0; node$1$member$0; node$1$member$0': [node$0$vote$0$0; node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3]}

	identical_single_classes: {'node$0$vote$0; node$1$member$0; node$1$member$0; node$1$member$0; node$1$member$0': node$0$vote$0$0; node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3}

	identical_multi_classes: {}

	sort: quorum

	identical_classes: {'quorum$1$member$1; quorum$1$voting_quorum=$0': [quorum$1$member$1$0; quorum$1$voting_quorum=$0$1, quorum$1$member$1$1; quorum$1$voting_quorum=$0$0, quorum$1$member$1$2; quorum$1$voting_quorum=$0$3, quorum$1$member$1$3; quorum$1$voting_quorum=$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$member$1; quorum$1$voting_quorum=$0': [quorum$1$member$1$0, quorum$1$voting_quorum=$0$1, quorum$1$member$1$1, quorum$1$voting_quorum=$0$0, quorum$1$member$1$2, quorum$1$voting_quorum=$0$3, quorum$1$member$1$3, quorum$1$voting_quorum=$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall

quantifier mode: quorum: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), Var('QUORUM3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voting_quorum=': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('QUORUM3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]], '1$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['voting_quorum ~= QUORUM1', 'vote(NODE0,VALUE1)', '~member(NODE0,QUORUM2)', '~member(NODE0,QUORUM1)', 'voting_quorum ~= QUORUM2', '~member(NODE0,QUORUM0)', 'voting_quorum ~= QUORUM0', 'voting_quorum ~= QUORUM3', 'decided(VALUE0)', '~member(NODE0,QUORUM3)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM2,QUORUM1,QUORUM3,NODE0,VALUE1,VALUE0,QUORUM0. voting_quorum = QUORUM1 | ~vote(NODE0,VALUE1) | member(NODE0,QUORUM2) | member(NODE0,QUORUM1) | voting_quorum = QUORUM2 | member(NODE0,QUORUM0) | voting_quorum = QUORUM0 | voting_quorum = QUORUM3 | ~decided(VALUE0) | member(NODE0,QUORUM3) | (QUORUM0 = QUORUM1 | QUORUM2 = QUORUM3 | QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | VALUE0 = VALUE1 | QUORUM0 = QUORUM3 | QUORUM1 = QUORUM3)


=== Prime Orbit 25 =====================
size : 15
num_suborbits: 1
2873 (*) : -1-------------------0-0-0-0--0--
2873     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2874     : --1------------------0-0-0-0--0--
2874     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2875     : 1--------------------0-0-0-0--0--
2875     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2876     : -1--------------------000-0--0---
2876     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2877     : --1-------------------000-0--0---
2877     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2878     : 1---------------------000-0--0---
2878     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2879     : -1------------------0---00--0--0-
2879     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2880     : --1-----------------0---00--0--0-
2880     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2881     : 1-------------------0---00--0--0-
2881     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2882     : -1-----------------0------000---0
2882     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2883     : --1----------------0------000---0
2883     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2884     : 1------------------0------000---0
2884     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2885     : -1----------------0----------0000
2885     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2886     : --1---------------0----------0000
2886     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2887     : 1-----------------0----------0000
2887     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value1)', '~voted(node3)', 'voting_quorum ~= quorum__node0_node1_node2', 'voting_quorum ~= quorum__node0_node1_node4', 'voting_quorum ~= quorum__node0_node2_node4', 'voting_quorum ~= quorum__node1_node2_node4', '~member(node3,quorum__node0_node1_node4)', '~member(node3,quorum__node0_node1_node2)', '~member(node3,quorum__node1_node2_node4)', '~member(node3,quorum__node0_node2_node4)']

sign_func_name2args: {'0$decided': [(Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$voted': [(Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))),)], '1$voting_quorum=': [(Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),), (Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),), (Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),), (Const('quorum__node1_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),)], '1$member': [(Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node1_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))))]}

const2sigs: {Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0], Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$voted$0$0, node$1$member$0$0, node$1$member$0$1, node$1$member$0$2, node$1$member$0$3], Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$0, quorum$1$member$1$1], Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$1, quorum$1$member$1$0], Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$2, quorum$1$member$1$3], Const('quorum__node1_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$3, quorum$1$member$1$2]}

sig2const: {'value$0$decided$0$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$voted$0$0': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$voting_quorum=$0$0': Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'quorum$1$voting_quorum=$0$1': Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'quorum$1$voting_quorum=$0$2': Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'quorum$1$voting_quorum=$0$3': Const('quorum__node1_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$0': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$0': Const('quorum__node0_node1_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$1': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$1': Const('quorum__node0_node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$2': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$2': Const('quorum__node1_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$3': Const('node3', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$3': Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$voted$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$voting_quorum=$0$1, quorum$1$member$1$1; quorum$1$voting_quorum=$0$0, quorum$1$member$1$2; quorum$1$voting_quorum=$0$3, quorum$1$member$1$3; quorum$1$voting_quorum=$0$2]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$voted$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$voting_quorum=$0$1 | quorum$1$member$1$1; quorum$1$voting_quorum=$0$0 | quorum$1$member$1$2; quorum$1$voting_quorum=$0$3 | quorum$1$member$1$3; quorum$1$voting_quorum=$0$2}

part_sig: ('node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$voted$0$0', 'quorum$1$member$1$0; quorum$1$voting_quorum=$0$1 | quorum$1$member$1$1; quorum$1$voting_quorum=$0$0 | quorum$1$member$1$2; quorum$1$voting_quorum=$0$3 | quorum$1$member$1$3; quorum$1$voting_quorum=$0$2', 'value$0$decided$0$0')


---------- SigGenerator ----------

terms:  ['decided(value1)', '~voted(node3)', 'voting_quorum ~= quorum__node0_node1_node2', 'voting_quorum ~= quorum__node0_node1_node4', 'voting_quorum ~= quorum__node0_node2_node4', 'voting_quorum ~= quorum__node1_node2_node4', '~member(node3,quorum__node0_node1_node4)', '~member(node3,quorum__node0_node1_node2)', '~member(node3,quorum__node1_node2_node4)', '~member(node3,quorum__node0_node2_node4)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voted': Const('voted', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), BooleanSort())), 'voting_quorum=': Const('voting_quorum', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'voted': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')),), 'voting_quorum=': (EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')),), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

sign_func_name2count:  {'0$decided': 1, '1$voted': 1, '1$voting_quorum=': 4, '1$member': 4}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$voted$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$voting_quorum=$0$1, quorum$1$member$1$1; quorum$1$voting_quorum=$0$0, quorum$1$member$1$2; quorum$1$voting_quorum=$0$3, quorum$1$member$1$3; quorum$1$voting_quorum=$0$2]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$voted$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$voting_quorum=$0$1 | quorum$1$member$1$1; quorum$1$voting_quorum=$0$0 | quorum$1$member$1$2; quorum$1$voting_quorum=$0$3 | quorum$1$member$1$3; quorum$1$voting_quorum=$0$2}

	sort: value

	identical_classes: {'value$0$decided$0': [value$0$decided$0$0]}

	identical_single_classes: {'value$0$decided$0': value$0$decided$0$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$1$member$0; node$1$member$0; node$1$member$0; node$1$member$0; node$1$voted$0': [node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$voted$0$0]}

	identical_single_classes: {'node$1$member$0; node$1$member$0; node$1$member$0; node$1$member$0; node$1$voted$0': node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$voted$0$0}

	identical_multi_classes: {}

	sort: quorum

	identical_classes: {'quorum$1$member$1; quorum$1$voting_quorum=$0': [quorum$1$member$1$0; quorum$1$voting_quorum=$0$1, quorum$1$member$1$1; quorum$1$voting_quorum=$0$0, quorum$1$member$1$2; quorum$1$voting_quorum=$0$3, quorum$1$member$1$3; quorum$1$voting_quorum=$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$member$1; quorum$1$voting_quorum=$0': [quorum$1$member$1$0, quorum$1$voting_quorum=$0$1, quorum$1$member$1$1, quorum$1$voting_quorum=$0$0, quorum$1$member$1$2, quorum$1$voting_quorum=$0$3, quorum$1$member$1$3, quorum$1$voting_quorum=$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall

quantifier mode: quorum: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), Var('QUORUM3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voted': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')))]], '1$voting_quorum=': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('QUORUM3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]], '1$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['voting_quorum ~= QUORUM1', '~member(NODE0,QUORUM2)', '~member(NODE0,QUORUM1)', 'voting_quorum ~= QUORUM2', '~member(NODE0,QUORUM0)', 'voting_quorum ~= QUORUM0', 'voting_quorum ~= QUORUM3', 'decided(VALUE0)', '~member(NODE0,QUORUM3)', '~voted(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM2,QUORUM1,QUORUM3,NODE0,VALUE0,QUORUM0. voting_quorum = QUORUM1 | member(NODE0,QUORUM2) | member(NODE0,QUORUM1) | voting_quorum = QUORUM2 | member(NODE0,QUORUM0) | voting_quorum = QUORUM0 | voting_quorum = QUORUM3 | ~decided(VALUE0) | member(NODE0,QUORUM3) | voted(NODE0) | (QUORUM0 = QUORUM1 | QUORUM2 = QUORUM3 | QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | QUORUM0 = QUORUM3 | QUORUM1 = QUORUM3)


=== Prime Orbit 26 =====================
size : 15
num_suborbits: 1
2888 (*) : -1-----0------------------000---0
2888     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value1)']
2889     : --1-----0-----------------000---0
2889     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value2)']
2890     : 1-----0-------------------000---0
2890     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value0)']
2891     : -1--------0-------------00--0--0-
2891     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value1)']
2892     : --1--------0------------00--0--0-
2892     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value2)']
2893     : 1--------0--------------00--0--0-
2893     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value0)']
2894     : -1-----------0---------0-0-0--0--
2894     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value1)']
2895     : --1-----------0--------0-0-0--0--
2895     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value2)']
2896     : 1-----------0----------0-0-0--0--
2896     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value0)']
2897     : -1--------------0------00-0--0---
2897     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value1)']
2898     : --1--------------0-----00-0--0---
2898     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value2)']
2899     : 1--------------0-------00-0--0---
2899     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value0)']
2900     : -1--0------------------------0000
2900     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)']
2901     : --1--0-----------------------0000
2901     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)']
2902     : 1--0-------------------------0000
2902     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decided(value1)', '~vote(node1,value1)', 'voting_quorum ~= quorum__node0_node2_node3', 'voting_quorum ~= quorum__node0_node2_node4', 'voting_quorum ~= quorum__node0_node3_node4', 'voting_quorum ~= quorum__node2_node3_node4', '~member(node1,quorum__node0_node2_node3)', '~member(node1,quorum__node2_node3_node4)', '~member(node1,quorum__node0_node3_node4)', '~member(node1,quorum__node0_node2_node4)']

sign_func_name2args: {'0$decided': [(Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)], '1$vote': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$voting_quorum=': [(Const('quorum__node0_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),), (Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),), (Const('quorum__node0_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),), (Const('quorum__node2_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))),)], '1$member': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node2_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))))]}

const2sigs: {Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decided$0$0, value$1$vote$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))): [node$1$vote$0$0, node$1$member$0$0, node$1$member$0$1, node$1$member$0$2, node$1$member$0$3], Const('quorum__node0_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$0, quorum$1$member$1$0], Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$1, quorum$1$member$1$3], Const('quorum__node0_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$2, quorum$1$member$1$2], Const('quorum__node2_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))): [quorum$1$voting_quorum=$0$3, quorum$1$member$1$1]}

sig2const: {'value$0$decided$0$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'value$1$vote$1$0': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$1$voting_quorum=$0$0': Const('quorum__node0_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'quorum$1$voting_quorum=$0$1': Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'quorum$1$voting_quorum=$0$2': Const('quorum__node0_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'quorum$1$voting_quorum=$0$3': Const('quorum__node2_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$0': Const('quorum__node0_node2_node3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$1': Const('quorum__node2_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$2': Const('quorum__node0_node3_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'node$1$member$0$3': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), 'quorum$1$member$1$3': Const('quorum__node0_node2_node4', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$vote$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$voting_quorum=$0$0, quorum$1$member$1$1; quorum$1$voting_quorum=$0$3, quorum$1$member$1$2; quorum$1$voting_quorum=$0$2, quorum$1$member$1$3; quorum$1$voting_quorum=$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$vote$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$voting_quorum=$0$0 | quorum$1$member$1$1; quorum$1$voting_quorum=$0$3 | quorum$1$member$1$2; quorum$1$voting_quorum=$0$2 | quorum$1$member$1$3; quorum$1$voting_quorum=$0$1}

part_sig: ('node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$vote$0$0', 'quorum$1$member$1$0; quorum$1$voting_quorum=$0$0 | quorum$1$member$1$1; quorum$1$voting_quorum=$0$3 | quorum$1$member$1$2; quorum$1$voting_quorum=$0$2 | quorum$1$member$1$3; quorum$1$voting_quorum=$0$1', 'value$0$decided$0$0; value$1$vote$1$0')


---------- SigGenerator ----------

terms:  ['decided(value1)', '~vote(node1,value1)', 'voting_quorum ~= quorum__node0_node2_node3', 'voting_quorum ~= quorum__node0_node2_node4', 'voting_quorum ~= quorum__node0_node3_node4', 'voting_quorum ~= quorum__node2_node3_node4', '~member(node1,quorum__node0_node2_node3)', '~member(node1,quorum__node2_node3_node4)', '~member(node1,quorum__node0_node3_node4)', '~member(node1,quorum__node0_node2_node4)']

func_name2symbol:  {'decided': Const('decided', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'voting_quorum=': Const('voting_quorum', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')), BooleanSort()))}

func_name2args_sort:  {'decided': (EnumeratedSort('value', ('value0', 'value1', 'value2')),), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'voting_quorum=': (EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')),), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')), EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

sign_func_name2count:  {'0$decided': 1, '1$vote': 1, '1$voting_quorum=': 4, '1$member': 4}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decided$0$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): [node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$vote$0$0], EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): [quorum$1$member$1$0; quorum$1$voting_quorum=$0$0, quorum$1$member$1$1; quorum$1$voting_quorum=$0$3, quorum$1$member$1$2; quorum$1$voting_quorum=$0$2, quorum$1$member$1$3; quorum$1$voting_quorum=$0$1]}

sort2part_sig: {EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decided$0$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4')): node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$vote$0$0, EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')): quorum$1$member$1$0; quorum$1$voting_quorum=$0$0 | quorum$1$member$1$1; quorum$1$voting_quorum=$0$3 | quorum$1$member$1$2; quorum$1$voting_quorum=$0$2 | quorum$1$member$1$3; quorum$1$voting_quorum=$0$1}

	sort: value

	identical_classes: {'value$0$decided$0; value$1$vote$1': [value$0$decided$0$0; value$1$vote$1$0]}

	identical_single_classes: {'value$0$decided$0; value$1$vote$1': value$0$decided$0$0; value$1$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$1$member$0; node$1$member$0; node$1$member$0; node$1$member$0; node$1$vote$0': [node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$vote$0$0]}

	identical_single_classes: {'node$1$member$0; node$1$member$0; node$1$member$0; node$1$member$0; node$1$vote$0': node$1$member$0$0; node$1$member$0$1; node$1$member$0$2; node$1$member$0$3; node$1$vote$0$0}

	identical_multi_classes: {}

	sort: quorum

	identical_classes: {'quorum$1$member$1; quorum$1$voting_quorum=$0': [quorum$1$member$1$0; quorum$1$voting_quorum=$0$0, quorum$1$member$1$1; quorum$1$voting_quorum=$0$3, quorum$1$member$1$2; quorum$1$voting_quorum=$0$2, quorum$1$member$1$3; quorum$1$voting_quorum=$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$member$1; quorum$1$voting_quorum=$0': [quorum$1$member$1$0, quorum$1$voting_quorum=$0$0, quorum$1$member$1$1, quorum$1$voting_quorum=$0$3, quorum$1$member$1$2, quorum$1$voting_quorum=$0$2, quorum$1$member$1$3, quorum$1$voting_quorum=$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall

quantifier mode: quorum: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), Var('QUORUM3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decided': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$voting_quorum=': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('QUORUM3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]], '1$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2', 'node3', 'node4'))), Var('QUORUM3', EnumeratedSort('quorum', ('quorum__node0_node1_node2', 'quorum__node0_node1_node3', 'quorum__node0_node1_node4', 'quorum__node0_node2_node3', 'quorum__node0_node2_node4', 'quorum__node0_node3_node4', 'quorum__node1_node2_node3', 'quorum__node1_node2_node4', 'quorum__node1_node3_node4', 'quorum__node2_node3_node4')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['voting_quorum ~= QUORUM1', '~member(NODE0,QUORUM2)', '~member(NODE0,QUORUM1)', 'voting_quorum ~= QUORUM2', '~member(NODE0,QUORUM0)', 'voting_quorum ~= QUORUM0', 'voting_quorum ~= QUORUM3', '~vote(NODE0,VALUE0)', 'decided(VALUE0)', '~member(NODE0,QUORUM3)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM2,QUORUM1,QUORUM3,NODE0,VALUE0,QUORUM0. voting_quorum = QUORUM1 | member(NODE0,QUORUM2) | member(NODE0,QUORUM1) | voting_quorum = QUORUM2 | member(NODE0,QUORUM0) | voting_quorum = QUORUM0 | voting_quorum = QUORUM3 | vote(NODE0,VALUE0) | ~decided(VALUE0) | member(NODE0,QUORUM3) | (QUORUM0 = QUORUM1 | QUORUM2 = QUORUM3 | QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | QUORUM0 = QUORUM3 | QUORUM1 = QUORUM3)


=========================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/toy_consensus_forall.ivy: node=5,value=3]

=========================================================================================================================


=== Prime Orbit 1 =====================
size : 15
num_suborbits: 1
45 (*) : ------1-1------------------------
45     : ['vote(node1,value0)', 'vote(node1,value2)']
46     : ------11-------------------------
46     : ['vote(node1,value0)', 'vote(node1,value1)']
47     : -------11------------------------
47     : ['vote(node1,value1)', 'vote(node1,value2)']
48     : ---------1-1---------------------
48     : ['vote(node2,value0)', 'vote(node2,value2)']
49     : ---------11----------------------
49     : ['vote(node2,value0)', 'vote(node2,value1)']
50     : ----------11---------------------
50     : ['vote(node2,value1)', 'vote(node2,value2)']
51     : ------------1-1------------------
51     : ['vote(node3,value0)', 'vote(node3,value2)']
52     : ------------11-------------------
52     : ['vote(node3,value0)', 'vote(node3,value1)']
53     : -------------11------------------
53     : ['vote(node3,value1)', 'vote(node3,value2)']
54     : ---------------1-1---------------
54     : ['vote(node4,value0)', 'vote(node4,value2)']
55     : ---------------11----------------
55     : ['vote(node4,value0)', 'vote(node4,value1)']
56     : ----------------11---------------
56     : ['vote(node4,value1)', 'vote(node4,value2)']
57     : ---1-1---------------------------
57     : ['vote(node0,value0)', 'vote(node0,value2)']
58     : ---11----------------------------
58     : ['vote(node0,value0)', 'vote(node0,value1)']
59     : ----11---------------------------
59     : ['vote(node0,value1)', 'vote(node0,value2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall VALUE1,NODE0,VALUE0. ~vote(NODE0,VALUE1) | ~vote(NODE0,VALUE0) | VALUE0 = VALUE1
qcost : 6




=== Prime Orbit 2 =====================
size : 15
num_suborbits: 1
60 (*) : --------1----------0-------------
60     : ['vote(node1,value2)', '~voted(node1)']
61     : -------1-----------0-------------
61     : ['vote(node1,value1)', '~voted(node1)']
62     : ------1------------0-------------
62     : ['vote(node1,value0)', '~voted(node1)']
63     : -----------1--------0------------
63     : ['vote(node2,value2)', '~voted(node2)']
64     : ----------1---------0------------
64     : ['vote(node2,value1)', '~voted(node2)']
65     : ---------1----------0------------
65     : ['vote(node2,value0)', '~voted(node2)']
66     : --------------1------0-----------
66     : ['vote(node3,value2)', '~voted(node3)']
67     : -------------1-------0-----------
67     : ['vote(node3,value1)', '~voted(node3)']
68     : ------------1--------0-----------
68     : ['vote(node3,value0)', '~voted(node3)']
69     : -----------------1----0----------
69     : ['vote(node4,value2)', '~voted(node4)']
70     : ----------------1-----0----------
70     : ['vote(node4,value1)', '~voted(node4)']
71     : ---------------1------0----------
71     : ['vote(node4,value0)', '~voted(node4)']
72     : -----1------------0--------------
72     : ['vote(node0,value2)', '~voted(node0)']
73     : ----1-------------0--------------
73     : ['vote(node0,value1)', '~voted(node0)']
74     : ---1--------------0--------------
74     : ['vote(node0,value0)', '~voted(node0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall NODE0,VALUE0. voted(NODE0) | ~vote(NODE0,VALUE0)
qcost : 4




=== Prime Orbit 23 =====================
size : 5
num_suborbits: 1
2838 (*) : ------000----------1-------------
2838     : ['voted(node1)', '~vote(node1,value0)', '~vote(node1,value1)', '~vote(node1,value2)']
2839     : ---------000--------1------------
2839     : ['voted(node2)', '~vote(node2,value0)', '~vote(node2,value1)', '~vote(node2,value2)']
2840     : ------------000------1-----------
2840     : ['voted(node3)', '~vote(node3,value0)', '~vote(node3,value1)', '~vote(node3,value2)']
2841     : ---------------000----1----------
2841     : ['voted(node4)', '~vote(node4,value0)', '~vote(node4,value1)', '~vote(node4,value2)']
2842     : ---000------------1--------------
2842     : ['voted(node0)', '~vote(node0,value0)', '~vote(node0,value1)', '~vote(node0,value2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall NODE0. (exists VALUE0. vote(NODE0,VALUE0) | ~voted(NODE0))
qcost : 4




=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
75 (*) : 1-1------------------------------
75     : ['decided(value0)', 'decided(value2)']
76     : 11-------------------------------
76     : ['decided(value0)', 'decided(value1)']
77     : -11------------------------------
77     : ['decided(value1)', 'decided(value2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall VALUE1,VALUE0. ~decided(VALUE0) | ~decided(VALUE1) | VALUE0 = VALUE1
qcost : 5




=== Prime Orbit 4 =====================
size : 180
num_suborbits: 1
78 (*) : --1---------1------------------1-
78     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node3,value0)']
79     : -1----------1------------------1-
79     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node3,value0)']
80     : --1----------1-----------------1-
80     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node3,value1)']
81     : 1------------1-----------------1-
81     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node3,value1)']
82     : -1------------1----------------1-
82     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node3,value2)']
83     : 1-------------1----------------1-
83     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node3,value2)']
84     : --1------------1---------------1-
84     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node4,value0)']
85     : -1-------------1---------------1-
85     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node4,value0)']
86     : --1-------------1--------------1-
86     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node4,value1)']
87     : 1---------------1--------------1-
87     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node4,value1)']
88     : -1---------------1-------------1-
88     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node4,value2)']
89     : 1----------------1-------------1-
89     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node4,value2)']
90     : --1------1--------------------1--
90     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node2,value0)']
91     : -1-------1--------------------1--
91     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node2,value0)']
92     : --1-------1-------------------1--
92     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node2,value1)']
93     : 1---------1-------------------1--
93     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node2,value1)']
94     : -1---------1------------------1--
94     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node2,value2)']
95     : 1----------1------------------1--
95     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node2,value2)']
96     : --1------------1--------------1--
96     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node4,value0)']
97     : -1-------------1--------------1--
97     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node4,value0)']
98     : --1-------------1-------------1--
98     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node4,value1)']
99     : 1---------------1-------------1--
99     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node4,value1)']
100     : -1---------------1------------1--
100     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node4,value2)']
101     : 1----------------1------------1--
101     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node4,value2)']
102     : --1------1-------------------1---
102     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node2,value0)']
103     : -1-------1-------------------1---
103     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node2,value0)']
104     : --1-------1------------------1---
104     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node2,value1)']
105     : 1---------1------------------1---
105     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node2,value1)']
106     : -1---------1-----------------1---
106     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node2,value2)']
107     : 1----------1-----------------1---
107     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node2,value2)']
108     : --1---------1----------------1---
108     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node3,value0)']
109     : -1----------1----------------1---
109     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node3,value0)']
110     : --1----------1---------------1---
110     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node3,value1)']
111     : 1------------1---------------1---
111     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node3,value1)']
112     : -1------------1--------------1---
112     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node3,value2)']
113     : 1-------------1--------------1---
113     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node3,value2)']
114     : --1---------1-------------------1
114     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node3,value0)']
115     : -1----------1-------------------1
115     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node3,value0)']
116     : --1----------1------------------1
116     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node3,value1)']
117     : 1------------1------------------1
117     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node3,value1)']
118     : -1------------1-----------------1
118     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node3,value2)']
119     : 1-------------1-----------------1
119     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node3,value2)']
120     : --1------------1----------------1
120     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node4,value0)']
121     : -1-------------1----------------1
121     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node4,value0)']
122     : --1-------------1---------------1
122     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node4,value1)']
123     : 1---------------1---------------1
123     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node4,value1)']
124     : -1---------------1--------------1
124     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node4,value2)']
125     : 1----------------1--------------1
125     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node4,value2)']
126     : --1---1-----------------------1--
126     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node1,value0)']
127     : -1----1-----------------------1--
127     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node1,value0)']
128     : --1----1----------------------1--
128     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', 'vote(node1,value1)']
129     : 1------1----------------------1--
129     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node1,value1)']
130     : -1------1---------------------1--
130     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', 'vote(node1,value2)']
131     : 1-------1---------------------1--
131     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', 'vote(node1,value2)']
132     : --1---1----------------------1---
132     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node1,value0)']
133     : -1----1----------------------1---
133     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node1,value0)']
134     : --1----1---------------------1---
134     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', 'vote(node1,value1)']
135     : 1------1---------------------1---
135     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node1,value1)']
136     : -1------1--------------------1---
136     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', 'vote(node1,value2)']
137     : 1-------1--------------------1---
137     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', 'vote(node1,value2)']
138     : --1------1----------------------1
138     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node2,value0)']
139     : -1-------1----------------------1
139     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node2,value0)']
140     : --1-------1---------------------1
140     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', 'vote(node2,value1)']
141     : 1---------1---------------------1
141     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node2,value1)']
142     : -1---------1--------------------1
142     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', 'vote(node2,value2)']
143     : 1----------1--------------------1
143     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', 'vote(node2,value2)']
144     : --1---1------------------------1-
144     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node1,value0)']
145     : -1----1------------------------1-
145     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node1,value0)']
146     : --1----1-----------------------1-
146     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', 'vote(node1,value1)']
147     : 1------1-----------------------1-
147     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node1,value1)']
148     : -1------1----------------------1-
148     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', 'vote(node1,value2)']
149     : 1-------1----------------------1-
149     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', 'vote(node1,value2)']
150     : --1---------1---------------1----
150     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node3,value0)']
151     : -1----------1---------------1----
151     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node3,value0)']
152     : --1----------1--------------1----
152     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node3,value1)']
153     : 1------------1--------------1----
153     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node3,value1)']
154     : -1------------1-------------1----
154     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node3,value2)']
155     : 1-------------1-------------1----
155     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node3,value2)']
156     : --1------------1------------1----
156     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node4,value0)']
157     : -1-------------1------------1----
157     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node4,value0)']
158     : --1-------------1-----------1----
158     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node4,value1)']
159     : 1---------------1-----------1----
159     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node4,value1)']
160     : -1---------------1----------1----
160     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node4,value2)']
161     : 1----------------1----------1----
161     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node4,value2)']
162     : --1------1-----------------1-----
162     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node2,value0)']
163     : -1-------1-----------------1-----
163     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node2,value0)']
164     : --1-------1----------------1-----
164     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node2,value1)']
165     : 1---------1----------------1-----
165     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node2,value1)']
166     : -1---------1---------------1-----
166     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node2,value2)']
167     : 1----------1---------------1-----
167     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node2,value2)']
168     : --1------------1-----------1-----
168     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node4,value0)']
169     : -1-------------1-----------1-----
169     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node4,value0)']
170     : --1-------------1----------1-----
170     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node4,value1)']
171     : 1---------------1----------1-----
171     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node4,value1)']
172     : -1---------------1---------1-----
172     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node4,value2)']
173     : 1----------------1---------1-----
173     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node4,value2)']
174     : --1------1----------------1------
174     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node2,value0)']
175     : -1-------1----------------1------
175     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node2,value0)']
176     : --1-------1---------------1------
176     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node2,value1)']
177     : 1---------1---------------1------
177     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node2,value1)']
178     : -1---------1--------------1------
178     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node2,value2)']
179     : 1----------1--------------1------
179     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node2,value2)']
180     : --1---------1-------------1------
180     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node3,value0)']
181     : -1----------1-------------1------
181     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node3,value0)']
182     : --1----------1------------1------
182     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node3,value1)']
183     : 1------------1------------1------
183     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node3,value1)']
184     : -1------------1-----------1------
184     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node3,value2)']
185     : 1-------------1-----------1------
185     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node3,value2)']
186     : --11-----------------------1-----
186     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node0,value0)']
187     : -1-1-----------------------1-----
187     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node0,value0)']
188     : --1-1----------------------1-----
188     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', 'vote(node0,value1)']
189     : 1---1----------------------1-----
189     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node0,value1)']
190     : -1---1---------------------1-----
190     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', 'vote(node0,value2)']
191     : 1----1---------------------1-----
191     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', 'vote(node0,value2)']
192     : --11----------------------1------
192     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node0,value0)']
193     : -1-1----------------------1------
193     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node0,value0)']
194     : --1-1---------------------1------
194     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', 'vote(node0,value1)']
195     : 1---1---------------------1------
195     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node0,value1)']
196     : -1---1--------------------1------
196     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', 'vote(node0,value2)']
197     : 1----1--------------------1------
197     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', 'vote(node0,value2)']
198     : --11------------------------1----
198     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node0,value0)']
199     : -1-1------------------------1----
199     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node0,value0)']
200     : --1-1-----------------------1----
200     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', 'vote(node0,value1)']
201     : 1---1-----------------------1----
201     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node0,value1)']
202     : -1---1----------------------1----
202     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', 'vote(node0,value2)']
203     : 1----1----------------------1----
203     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', 'vote(node0,value2)']
204     : --1---1------------------1-------
204     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node1,value0)']
205     : -1----1------------------1-------
205     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node1,value0)']
206     : --1----1-----------------1-------
206     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node1,value1)']
207     : 1------1-----------------1-------
207     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node1,value1)']
208     : -1------1----------------1-------
208     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node1,value2)']
209     : 1-------1----------------1-------
209     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node1,value2)']
210     : --1------------1---------1-------
210     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node4,value0)']
211     : -1-------------1---------1-------
211     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node4,value0)']
212     : --1-------------1--------1-------
212     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node4,value1)']
213     : 1---------------1--------1-------
213     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node4,value1)']
214     : -1---------------1-------1-------
214     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node4,value2)']
215     : 1----------------1-------1-------
215     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node4,value2)']
216     : --1---1-----------------1--------
216     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node1,value0)']
217     : -1----1-----------------1--------
217     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node1,value0)']
218     : --1----1----------------1--------
218     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node1,value1)']
219     : 1------1----------------1--------
219     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node1,value1)']
220     : -1------1---------------1--------
220     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node1,value2)']
221     : 1-------1---------------1--------
221     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node1,value2)']
222     : --1---------1-----------1--------
222     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node3,value0)']
223     : -1----------1-----------1--------
223     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node3,value0)']
224     : --1----------1----------1--------
224     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node3,value1)']
225     : 1------------1----------1--------
225     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node3,value1)']
226     : -1------------1---------1--------
226     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node3,value2)']
227     : 1-------------1---------1--------
227     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node3,value2)']
228     : --11---------------------1-------
228     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node0,value0)']
229     : -1-1---------------------1-------
229     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node0,value0)']
230     : --1-1--------------------1-------
230     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', 'vote(node0,value1)']
231     : 1---1--------------------1-------
231     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node0,value1)']
232     : -1---1-------------------1-------
232     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', 'vote(node0,value2)']
233     : 1----1-------------------1-------
233     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', 'vote(node0,value2)']
234     : --11--------------------1--------
234     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node0,value0)']
235     : -1-1--------------------1--------
235     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node0,value0)']
236     : --1-1-------------------1--------
236     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', 'vote(node0,value1)']
237     : 1---1-------------------1--------
237     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node0,value1)']
238     : -1---1------------------1--------
238     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', 'vote(node0,value2)']
239     : 1----1------------------1--------
239     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', 'vote(node0,value2)']
240     : --1---1----------------1---------
240     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node1,value0)']
241     : -1----1----------------1---------
241     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node1,value0)']
242     : --1----1---------------1---------
242     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node1,value1)']
243     : 1------1---------------1---------
243     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node1,value1)']
244     : -1------1--------------1---------
244     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node1,value2)']
245     : 1-------1--------------1---------
245     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node1,value2)']
246     : --1------1-------------1---------
246     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node2,value0)']
247     : -1-------1-------------1---------
247     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node2,value0)']
248     : --1-------1------------1---------
248     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node2,value1)']
249     : 1---------1------------1---------
249     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node2,value1)']
250     : -1---------1-----------1---------
250     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node2,value2)']
251     : 1----------1-----------1---------
251     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node2,value2)']
252     : --11-------------------1---------
252     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node0,value0)']
253     : -1-1-------------------1---------
253     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node0,value0)']
254     : --1-1------------------1---------
254     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', 'vote(node0,value1)']
255     : 1---1------------------1---------
255     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node0,value1)']
256     : -1---1-----------------1---------
256     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', 'vote(node0,value2)']
257     : 1----1-----------------1---------
257     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', 'vote(node0,value2)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall VALUE1,QUORUM0,NODE0,VALUE0. ~vote(NODE0,VALUE1) | ~member(NODE0,QUORUM0) | ~decided(VALUE0) | voting_quorum ~= QUORUM0 | VALUE0 = VALUE1
qcost : 9




=== Prime Orbit 5 =====================
size : 90
num_suborbits: 1
258 (*) : --1-----0----------------------1-
258     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~vote(node1,value2)']
259     : -1-----0-----------------------1-
259     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~vote(node1,value1)']
260     : 1-----0------------------------1-
260     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~vote(node1,value0)']
261     : --1-----0---------------------1--
261     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~vote(node1,value2)']
262     : -1-----0----------------------1--
262     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~vote(node1,value1)']
263     : 1-----0-----------------------1--
263     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~vote(node1,value0)']
264     : --1-----0--------------------1---
264     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~vote(node1,value2)']
265     : -1-----0---------------------1---
265     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~vote(node1,value1)']
266     : 1-----0----------------------1---
266     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~vote(node1,value0)']
267     : --1--------0--------------------1
267     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~vote(node2,value2)']
268     : -1--------0---------------------1
268     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~vote(node2,value1)']
269     : 1--------0----------------------1
269     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~vote(node2,value0)']
270     : --1--------0------------------1--
270     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~vote(node2,value2)']
271     : -1--------0-------------------1--
271     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~vote(node2,value1)']
272     : 1--------0--------------------1--
272     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~vote(node2,value0)']
273     : --1--------0-----------------1---
273     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~vote(node2,value2)']
274     : -1--------0------------------1---
274     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~vote(node2,value1)']
275     : 1--------0-------------------1---
275     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~vote(node2,value0)']
276     : --1-----------0-----------------1
276     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~vote(node3,value2)']
277     : -1-----------0------------------1
277     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~vote(node3,value1)']
278     : 1-----------0-------------------1
278     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~vote(node3,value0)']
279     : --1-----------0----------------1-
279     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~vote(node3,value2)']
280     : -1-----------0-----------------1-
280     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~vote(node3,value1)']
281     : 1-----------0------------------1-
281     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~vote(node3,value0)']
282     : --1-----------0--------------1---
282     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~vote(node3,value2)']
283     : -1-----------0---------------1---
283     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~vote(node3,value1)']
284     : 1-----------0----------------1---
284     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~vote(node3,value0)']
285     : --1--------------0--------------1
285     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~vote(node4,value2)']
286     : -1--------------0---------------1
286     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~vote(node4,value1)']
287     : 1--------------0----------------1
287     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~vote(node4,value0)']
288     : --1--------------0-------------1-
288     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~vote(node4,value2)']
289     : -1--------------0--------------1-
289     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~vote(node4,value1)']
290     : 1--------------0---------------1-
290     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~vote(node4,value0)']
291     : --1--------------0------------1--
291     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~vote(node4,value2)']
292     : -1--------------0-------------1--
292     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~vote(node4,value1)']
293     : 1--------------0--------------1--
293     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~vote(node4,value0)']
294     : --1--0----------------------1----
294     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~vote(node0,value2)']
295     : -1--0-----------------------1----
295     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~vote(node0,value1)']
296     : 1--0------------------------1----
296     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~vote(node0,value0)']
297     : --1--0---------------------1-----
297     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~vote(node0,value2)']
298     : -1--0----------------------1-----
298     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~vote(node0,value1)']
299     : 1--0-----------------------1-----
299     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~vote(node0,value0)']
300     : --1--0--------------------1------
300     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~vote(node0,value2)']
301     : -1--0---------------------1------
301     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~vote(node0,value1)']
302     : 1--0----------------------1------
302     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~vote(node0,value0)']
303     : --1--------0---------------1-----
303     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~vote(node2,value2)']
304     : -1--------0----------------1-----
304     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~vote(node2,value1)']
305     : 1--------0-----------------1-----
305     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~vote(node2,value0)']
306     : --1--------0--------------1------
306     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~vote(node2,value2)']
307     : -1--------0---------------1------
307     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~vote(node2,value1)']
308     : 1--------0----------------1------
308     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~vote(node2,value0)']
309     : --1-----------0-------------1----
309     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~vote(node3,value2)']
310     : -1-----------0--------------1----
310     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~vote(node3,value1)']
311     : 1-----------0---------------1----
311     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~vote(node3,value0)']
312     : --1-----------0-----------1------
312     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~vote(node3,value2)']
313     : -1-----------0------------1------
313     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~vote(node3,value1)']
314     : 1-----------0-------------1------
314     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~vote(node3,value0)']
315     : --1--------------0----------1----
315     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~vote(node4,value2)']
316     : -1--------------0-----------1----
316     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~vote(node4,value1)']
317     : 1--------------0------------1----
317     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~vote(node4,value0)']
318     : --1--------------0---------1-----
318     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~vote(node4,value2)']
319     : -1--------------0----------1-----
319     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~vote(node4,value1)']
320     : 1--------------0-----------1-----
320     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~vote(node4,value0)']
321     : --1--0-------------------1-------
321     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~vote(node0,value2)']
322     : -1--0--------------------1-------
322     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~vote(node0,value1)']
323     : 1--0---------------------1-------
323     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~vote(node0,value0)']
324     : --1--0------------------1--------
324     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~vote(node0,value2)']
325     : -1--0-------------------1--------
325     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~vote(node0,value1)']
326     : 1--0--------------------1--------
326     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~vote(node0,value0)']
327     : --1-----0----------------1-------
327     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~vote(node1,value2)']
328     : -1-----0-----------------1-------
328     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~vote(node1,value1)']
329     : 1-----0------------------1-------
329     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~vote(node1,value0)']
330     : --1-----0---------------1--------
330     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~vote(node1,value2)']
331     : -1-----0----------------1--------
331     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~vote(node1,value1)']
332     : 1-----0-----------------1--------
332     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~vote(node1,value0)']
333     : --1-----------0---------1--------
333     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~vote(node3,value2)']
334     : -1-----------0----------1--------
334     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~vote(node3,value1)']
335     : 1-----------0-----------1--------
335     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~vote(node3,value0)']
336     : --1--------------0-------1-------
336     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~vote(node4,value2)']
337     : -1--------------0--------1-------
337     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~vote(node4,value1)']
338     : 1--------------0---------1-------
338     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~vote(node4,value0)']
339     : --1--0-----------------1---------
339     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~vote(node0,value2)']
340     : -1--0------------------1---------
340     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~vote(node0,value1)']
341     : 1--0-------------------1---------
341     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~vote(node0,value0)']
342     : --1-----0--------------1---------
342     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~vote(node1,value2)']
343     : -1-----0---------------1---------
343     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~vote(node1,value1)']
344     : 1-----0----------------1---------
344     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~vote(node1,value0)']
345     : --1--------0-----------1---------
345     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~vote(node2,value2)']
346     : -1--------0------------1---------
346     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~vote(node2,value1)']
347     : 1--------0-------------1---------
347     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~vote(node2,value0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall QUORUM0,NODE0,VALUE0. ~member(NODE0,QUORUM0) | vote(NODE0,VALUE0) | ~decided(VALUE0) | voting_quorum ~= QUORUM0
qcost : 7




=== Prime Orbit 6 =====================
size : 90
num_suborbits: 1
348 (*) : --1----------------0---------1---
348     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~voted(node1)']
349     : -1-----------------0---------1---
349     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~voted(node1)']
350     : 1------------------0---------1---
350     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~voted(node1)']
351     : --1----------------0----------1--
351     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~voted(node1)']
352     : -1-----------------0----------1--
352     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~voted(node1)']
353     : 1------------------0----------1--
353     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~voted(node1)']
354     : --1----------------0-----------1-
354     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~voted(node1)']
355     : -1-----------------0-----------1-
355     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~voted(node1)']
356     : 1------------------0-----------1-
356     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~voted(node1)']
357     : --1-----------------0--------1---
357     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~voted(node2)']
358     : -1------------------0--------1---
358     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~voted(node2)']
359     : 1-------------------0--------1---
359     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~voted(node2)']
360     : --1-----------------0---------1--
360     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~voted(node2)']
361     : -1------------------0---------1--
361     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~voted(node2)']
362     : 1-------------------0---------1--
362     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~voted(node2)']
363     : --1-----------------0-----------1
363     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~voted(node2)']
364     : -1------------------0-----------1
364     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~voted(node2)']
365     : 1-------------------0-----------1
365     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~voted(node2)']
366     : --1------------------0-------1---
366     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value2)', '~voted(node3)']
367     : -1-------------------0-------1---
367     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value1)', '~voted(node3)']
368     : 1--------------------0-------1---
368     : ['(voting_quorum=quorum__node1_node2_node3)', 'decided(value0)', '~voted(node3)']
369     : --1------------------0---------1-
369     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~voted(node3)']
370     : -1-------------------0---------1-
370     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~voted(node3)']
371     : 1--------------------0---------1-
371     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~voted(node3)']
372     : --1------------------0----------1
372     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~voted(node3)']
373     : -1-------------------0----------1
373     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~voted(node3)']
374     : 1--------------------0----------1
374     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~voted(node3)']
375     : --1-------------------0-------1--
375     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value2)', '~voted(node4)']
376     : -1--------------------0-------1--
376     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value1)', '~voted(node4)']
377     : 1---------------------0-------1--
377     : ['(voting_quorum=quorum__node1_node2_node4)', 'decided(value0)', '~voted(node4)']
378     : --1-------------------0--------1-
378     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value2)', '~voted(node4)']
379     : -1--------------------0--------1-
379     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value1)', '~voted(node4)']
380     : 1---------------------0--------1-
380     : ['(voting_quorum=quorum__node1_node3_node4)', 'decided(value0)', '~voted(node4)']
381     : --1-------------------0---------1
381     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value2)', '~voted(node4)']
382     : -1--------------------0---------1
382     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value1)', '~voted(node4)']
383     : 1---------------------0---------1
383     : ['(voting_quorum=quorum__node2_node3_node4)', 'decided(value0)', '~voted(node4)']
384     : --1---------------0-------1------
384     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~voted(node0)']
385     : -1----------------0-------1------
385     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~voted(node0)']
386     : 1-----------------0-------1------
386     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~voted(node0)']
387     : --1---------------0--------1-----
387     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~voted(node0)']
388     : -1----------------0--------1-----
388     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~voted(node0)']
389     : 1-----------------0--------1-----
389     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~voted(node0)']
390     : --1---------------0---------1----
390     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~voted(node0)']
391     : -1----------------0---------1----
391     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~voted(node0)']
392     : 1-----------------0---------1----
392     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~voted(node0)']
393     : --1-----------------0-----1------
393     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~voted(node2)']
394     : -1------------------0-----1------
394     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~voted(node2)']
395     : 1-------------------0-----1------
395     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~voted(node2)']
396     : --1-----------------0------1-----
396     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~voted(node2)']
397     : -1------------------0------1-----
397     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~voted(node2)']
398     : 1-------------------0------1-----
398     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~voted(node2)']
399     : --1------------------0----1------
399     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value2)', '~voted(node3)']
400     : -1-------------------0----1------
400     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value1)', '~voted(node3)']
401     : 1--------------------0----1------
401     : ['(voting_quorum=quorum__node0_node2_node3)', 'decided(value0)', '~voted(node3)']
402     : --1------------------0------1----
402     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~voted(node3)']
403     : -1-------------------0------1----
403     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~voted(node3)']
404     : 1--------------------0------1----
404     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~voted(node3)']
405     : --1-------------------0----1-----
405     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value2)', '~voted(node4)']
406     : -1--------------------0----1-----
406     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value1)', '~voted(node4)']
407     : 1---------------------0----1-----
407     : ['(voting_quorum=quorum__node0_node2_node4)', 'decided(value0)', '~voted(node4)']
408     : --1-------------------0-----1----
408     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value2)', '~voted(node4)']
409     : -1--------------------0-----1----
409     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value1)', '~voted(node4)']
410     : 1---------------------0-----1----
410     : ['(voting_quorum=quorum__node0_node3_node4)', 'decided(value0)', '~voted(node4)']
411     : --1---------------0-----1--------
411     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~voted(node0)']
412     : -1----------------0-----1--------
412     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~voted(node0)']
413     : 1-----------------0-----1--------
413     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~voted(node0)']
414     : --1---------------0------1-------
414     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~voted(node0)']
415     : -1----------------0------1-------
415     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~voted(node0)']
416     : 1-----------------0------1-------
416     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~voted(node0)']
417     : --1----------------0----1--------
417     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~voted(node1)']
418     : -1-----------------0----1--------
418     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~voted(node1)']
419     : 1------------------0----1--------
419     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~voted(node1)']
420     : --1----------------0-----1-------
420     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~voted(node1)']
421     : -1-----------------0-----1-------
421     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~voted(node1)']
422     : 1------------------0-----1-------
422     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~voted(node1)']
423     : --1------------------0--1--------
423     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value2)', '~voted(node3)']
424     : -1-------------------0--1--------
424     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value1)', '~voted(node3)']
425     : 1--------------------0--1--------
425     : ['(voting_quorum=quorum__node0_node1_node3)', 'decided(value0)', '~voted(node3)']
426     : --1-------------------0--1-------
426     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value2)', '~voted(node4)']
427     : -1--------------------0--1-------
427     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value1)', '~voted(node4)']
428     : 1---------------------0--1-------
428     : ['(voting_quorum=quorum__node0_node1_node4)', 'decided(value0)', '~voted(node4)']
429     : --1---------------0----1---------
429     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~voted(node0)']
430     : -1----------------0----1---------
430     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~voted(node0)']
431     : 1-----------------0----1---------
431     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~voted(node0)']
432     : --1----------------0---1---------
432     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~voted(node1)']
433     : -1-----------------0---1---------
433     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~voted(node1)']
434     : 1------------------0---1---------
434     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~voted(node1)']
435     : --1-----------------0--1---------
435     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value2)', '~voted(node2)']
436     : -1------------------0--1---------
436     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value1)', '~voted(node2)']
437     : 1-------------------0--1---------
437     : ['(voting_quorum=quorum__node0_node1_node2)', 'decided(value0)', '~voted(node2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall QUORUM0,NODE0,VALUE0. ~member(NODE0,QUORUM0) | voted(NODE0) | ~decided(VALUE0) | voting_quorum ~= QUORUM0
qcost : 7




=== Prime Orbit 7 =====================
size : 360
num_suborbits: 1
438 (*) : --11-------0-------0-------------
438     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~voted(node1)']
439     : -1-1------0--------0-------------
439     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~voted(node1)']
440     : --1-1------0-------0-------------
440     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~voted(node1)']
441     : 1---1----0---------0-------------
441     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~voted(node1)']
442     : -1---1----0--------0-------------
442     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~voted(node1)']
443     : 1----1---0---------0-------------
443     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~voted(node1)']
444     : --11----------0----0-------------
444     : ['decided(value2)', 'vote(node0,value0)', '~vote(node3,value2)', '~voted(node1)']
445     : -1-1---------0-----0-------------
445     : ['decided(value1)', 'vote(node0,value0)', '~vote(node3,value1)', '~voted(node1)']
446     : --1-1---------0----0-------------
446     : ['decided(value2)', 'vote(node0,value1)', '~vote(node3,value2)', '~voted(node1)']
447     : 1---1-------0------0-------------
447     : ['decided(value0)', 'vote(node0,value1)', '~vote(node3,value0)', '~voted(node1)']
448     : -1---1-------0-----0-------------
448     : ['decided(value1)', 'vote(node0,value2)', '~vote(node3,value1)', '~voted(node1)']
449     : 1----1------0------0-------------
449     : ['decided(value0)', 'vote(node0,value2)', '~vote(node3,value0)', '~voted(node1)']
450     : --11-------------0-0-------------
450     : ['decided(value2)', 'vote(node0,value0)', '~vote(node4,value2)', '~voted(node1)']
451     : -1-1------------0--0-------------
451     : ['decided(value1)', 'vote(node0,value0)', '~vote(node4,value1)', '~voted(node1)']
452     : --1-1------------0-0-------------
452     : ['decided(value2)', 'vote(node0,value1)', '~vote(node4,value2)', '~voted(node1)']
453     : 1---1----------0---0-------------
453     : ['decided(value0)', 'vote(node0,value1)', '~vote(node4,value0)', '~voted(node1)']
454     : -1---1----------0--0-------------
454     : ['decided(value1)', 'vote(node0,value2)', '~vote(node4,value1)', '~voted(node1)']
455     : 1----1---------0---0-------------
455     : ['decided(value0)', 'vote(node0,value2)', '~vote(node4,value0)', '~voted(node1)']
456     : --11----0-----------0------------
456     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~voted(node2)']
457     : -1-1---0------------0------------
457     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~voted(node2)']
458     : --1-1---0-----------0------------
458     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~voted(node2)']
459     : 1---1-0-------------0------------
459     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~voted(node2)']
460     : -1---1-0------------0------------
460     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~voted(node2)']
461     : 1----10-------------0------------
461     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~voted(node2)']
462     : --11----------0-----0------------
462     : ['decided(value2)', 'vote(node0,value0)', '~vote(node3,value2)', '~voted(node2)']
463     : -1-1---------0------0------------
463     : ['decided(value1)', 'vote(node0,value0)', '~vote(node3,value1)', '~voted(node2)']
464     : --1-1---------0-----0------------
464     : ['decided(value2)', 'vote(node0,value1)', '~vote(node3,value2)', '~voted(node2)']
465     : 1---1-------0-------0------------
465     : ['decided(value0)', 'vote(node0,value1)', '~vote(node3,value0)', '~voted(node2)']
466     : -1---1-------0------0------------
466     : ['decided(value1)', 'vote(node0,value2)', '~vote(node3,value1)', '~voted(node2)']
467     : 1----1------0-------0------------
467     : ['decided(value0)', 'vote(node0,value2)', '~vote(node3,value0)', '~voted(node2)']
468     : --11-------------0--0------------
468     : ['decided(value2)', 'vote(node0,value0)', '~vote(node4,value2)', '~voted(node2)']
469     : -1-1------------0---0------------
469     : ['decided(value1)', 'vote(node0,value0)', '~vote(node4,value1)', '~voted(node2)']
470     : --1-1------------0--0------------
470     : ['decided(value2)', 'vote(node0,value1)', '~vote(node4,value2)', '~voted(node2)']
471     : 1---1----------0----0------------
471     : ['decided(value0)', 'vote(node0,value1)', '~vote(node4,value0)', '~voted(node2)']
472     : -1---1----------0---0------------
472     : ['decided(value1)', 'vote(node0,value2)', '~vote(node4,value1)', '~voted(node2)']
473     : 1----1---------0----0------------
473     : ['decided(value0)', 'vote(node0,value2)', '~vote(node4,value0)', '~voted(node2)']
474     : --11----0------------0-----------
474     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~voted(node3)']
475     : -1-1---0-------------0-----------
475     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~voted(node3)']
476     : --1-1---0------------0-----------
476     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~voted(node3)']
477     : 1---1-0--------------0-----------
477     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~voted(node3)']
478     : -1---1-0-------------0-----------
478     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~voted(node3)']
479     : 1----10--------------0-----------
479     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~voted(node3)']
480     : --11-------0---------0-----------
480     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~voted(node3)']
481     : -1-1------0----------0-----------
481     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~voted(node3)']
482     : --1-1------0---------0-----------
482     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~voted(node3)']
483     : 1---1----0-----------0-----------
483     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~voted(node3)']
484     : -1---1----0----------0-----------
484     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~voted(node3)']
485     : 1----1---0-----------0-----------
485     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~voted(node3)']
486     : --11-------------0---0-----------
486     : ['decided(value2)', 'vote(node0,value0)', '~vote(node4,value2)', '~voted(node3)']
487     : -1-1------------0----0-----------
487     : ['decided(value1)', 'vote(node0,value0)', '~vote(node4,value1)', '~voted(node3)']
488     : --1-1------------0---0-----------
488     : ['decided(value2)', 'vote(node0,value1)', '~vote(node4,value2)', '~voted(node3)']
489     : 1---1----------0-----0-----------
489     : ['decided(value0)', 'vote(node0,value1)', '~vote(node4,value0)', '~voted(node3)']
490     : -1---1----------0----0-----------
490     : ['decided(value1)', 'vote(node0,value2)', '~vote(node4,value1)', '~voted(node3)']
491     : 1----1---------0-----0-----------
491     : ['decided(value0)', 'vote(node0,value2)', '~vote(node4,value0)', '~voted(node3)']
492     : --11----0-------------0----------
492     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~voted(node4)']
493     : -1-1---0--------------0----------
493     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~voted(node4)']
494     : --1-1---0-------------0----------
494     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~voted(node4)']
495     : 1---1-0---------------0----------
495     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~voted(node4)']
496     : -1---1-0--------------0----------
496     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~voted(node4)']
497     : 1----10---------------0----------
497     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~voted(node4)']
498     : --11-------0----------0----------
498     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~voted(node4)']
499     : -1-1------0-----------0----------
499     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~voted(node4)']
500     : --1-1------0----------0----------
500     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~voted(node4)']
501     : 1---1----0------------0----------
501     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~voted(node4)']
502     : -1---1----0-----------0----------
502     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~voted(node4)']
503     : 1----1---0------------0----------
503     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~voted(node4)']
504     : --11----------0-------0----------
504     : ['decided(value2)', 'vote(node0,value0)', '~vote(node3,value2)', '~voted(node4)']
505     : -1-1---------0--------0----------
505     : ['decided(value1)', 'vote(node0,value0)', '~vote(node3,value1)', '~voted(node4)']
506     : --1-1---------0-------0----------
506     : ['decided(value2)', 'vote(node0,value1)', '~vote(node3,value2)', '~voted(node4)']
507     : 1---1-------0---------0----------
507     : ['decided(value0)', 'vote(node0,value1)', '~vote(node3,value0)', '~voted(node4)']
508     : -1---1-------0--------0----------
508     : ['decided(value1)', 'vote(node0,value2)', '~vote(node3,value1)', '~voted(node4)']
509     : 1----1------0---------0----------
509     : ['decided(value0)', 'vote(node0,value2)', '~vote(node3,value0)', '~voted(node4)']
510     : --1---1----0------0--------------
510     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~voted(node0)']
511     : -1----1---0-------0--------------
511     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~voted(node0)']
512     : --1----1---0------0--------------
512     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~voted(node0)']
513     : 1------1-0--------0--------------
513     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~voted(node0)']
514     : -1------1-0-------0--------------
514     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~voted(node0)']
515     : 1-------10--------0--------------
515     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~voted(node0)']
516     : --1---1-------0---0--------------
516     : ['decided(value2)', 'vote(node1,value0)', '~vote(node3,value2)', '~voted(node0)']
517     : -1----1------0----0--------------
517     : ['decided(value1)', 'vote(node1,value0)', '~vote(node3,value1)', '~voted(node0)']
518     : --1----1------0---0--------------
518     : ['decided(value2)', 'vote(node1,value1)', '~vote(node3,value2)', '~voted(node0)']
519     : 1------1----0-----0--------------
519     : ['decided(value0)', 'vote(node1,value1)', '~vote(node3,value0)', '~voted(node0)']
520     : -1------1----0----0--------------
520     : ['decided(value1)', 'vote(node1,value2)', '~vote(node3,value1)', '~voted(node0)']
521     : 1-------1---0-----0--------------
521     : ['decided(value0)', 'vote(node1,value2)', '~vote(node3,value0)', '~voted(node0)']
522     : --1---1----------00--------------
522     : ['decided(value2)', 'vote(node1,value0)', '~vote(node4,value2)', '~voted(node0)']
523     : -1----1---------0-0--------------
523     : ['decided(value1)', 'vote(node1,value0)', '~vote(node4,value1)', '~voted(node0)']
524     : --1----1---------00--------------
524     : ['decided(value2)', 'vote(node1,value1)', '~vote(node4,value2)', '~voted(node0)']
525     : 1------1-------0--0--------------
525     : ['decided(value0)', 'vote(node1,value1)', '~vote(node4,value0)', '~voted(node0)']
526     : -1------1-------0-0--------------
526     : ['decided(value1)', 'vote(node1,value2)', '~vote(node4,value1)', '~voted(node0)']
527     : 1-------1------0--0--------------
527     : ['decided(value0)', 'vote(node1,value2)', '~vote(node4,value0)', '~voted(node0)']
528     : --1--01-------------0------------
528     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~voted(node2)']
529     : -1--0-1-------------0------------
529     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~voted(node2)']
530     : --1--0-1------------0------------
530     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~voted(node2)']
531     : 1--0---1------------0------------
531     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~voted(node2)']
532     : -1--0---1-----------0------------
532     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~voted(node2)']
533     : 1--0----1-----------0------------
533     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~voted(node2)']
534     : --1---1-------0-----0------------
534     : ['decided(value2)', 'vote(node1,value0)', '~vote(node3,value2)', '~voted(node2)']
535     : -1----1------0------0------------
535     : ['decided(value1)', 'vote(node1,value0)', '~vote(node3,value1)', '~voted(node2)']
536     : --1----1------0-----0------------
536     : ['decided(value2)', 'vote(node1,value1)', '~vote(node3,value2)', '~voted(node2)']
537     : 1------1----0-------0------------
537     : ['decided(value0)', 'vote(node1,value1)', '~vote(node3,value0)', '~voted(node2)']
538     : -1------1----0------0------------
538     : ['decided(value1)', 'vote(node1,value2)', '~vote(node3,value1)', '~voted(node2)']
539     : 1-------1---0-------0------------
539     : ['decided(value0)', 'vote(node1,value2)', '~vote(node3,value0)', '~voted(node2)']
540     : --1---1----------0--0------------
540     : ['decided(value2)', 'vote(node1,value0)', '~vote(node4,value2)', '~voted(node2)']
541     : -1----1---------0---0------------
541     : ['decided(value1)', 'vote(node1,value0)', '~vote(node4,value1)', '~voted(node2)']
542     : --1----1---------0--0------------
542     : ['decided(value2)', 'vote(node1,value1)', '~vote(node4,value2)', '~voted(node2)']
543     : 1------1-------0----0------------
543     : ['decided(value0)', 'vote(node1,value1)', '~vote(node4,value0)', '~voted(node2)']
544     : -1------1-------0---0------------
544     : ['decided(value1)', 'vote(node1,value2)', '~vote(node4,value1)', '~voted(node2)']
545     : 1-------1------0----0------------
545     : ['decided(value0)', 'vote(node1,value2)', '~vote(node4,value0)', '~voted(node2)']
546     : --1--01--------------0-----------
546     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~voted(node3)']
547     : -1--0-1--------------0-----------
547     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~voted(node3)']
548     : --1--0-1-------------0-----------
548     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~voted(node3)']
549     : 1--0---1-------------0-----------
549     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~voted(node3)']
550     : -1--0---1------------0-----------
550     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~voted(node3)']
551     : 1--0----1------------0-----------
551     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~voted(node3)']
552     : --1---1----0---------0-----------
552     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~voted(node3)']
553     : -1----1---0----------0-----------
553     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~voted(node3)']
554     : --1----1---0---------0-----------
554     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~voted(node3)']
555     : 1------1-0-----------0-----------
555     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~voted(node3)']
556     : -1------1-0----------0-----------
556     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~voted(node3)']
557     : 1-------10-----------0-----------
557     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~voted(node3)']
558     : --1---1----------0---0-----------
558     : ['decided(value2)', 'vote(node1,value0)', '~vote(node4,value2)', '~voted(node3)']
559     : -1----1---------0----0-----------
559     : ['decided(value1)', 'vote(node1,value0)', '~vote(node4,value1)', '~voted(node3)']
560     : --1----1---------0---0-----------
560     : ['decided(value2)', 'vote(node1,value1)', '~vote(node4,value2)', '~voted(node3)']
561     : 1------1-------0-----0-----------
561     : ['decided(value0)', 'vote(node1,value1)', '~vote(node4,value0)', '~voted(node3)']
562     : -1------1-------0----0-----------
562     : ['decided(value1)', 'vote(node1,value2)', '~vote(node4,value1)', '~voted(node3)']
563     : 1-------1------0-----0-----------
563     : ['decided(value0)', 'vote(node1,value2)', '~vote(node4,value0)', '~voted(node3)']
564     : --1--01---------------0----------
564     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~voted(node4)']
565     : -1--0-1---------------0----------
565     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~voted(node4)']
566     : --1--0-1--------------0----------
566     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~voted(node4)']
567     : 1--0---1--------------0----------
567     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~voted(node4)']
568     : -1--0---1-------------0----------
568     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~voted(node4)']
569     : 1--0----1-------------0----------
569     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~voted(node4)']
570     : --1---1----0----------0----------
570     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~voted(node4)']
571     : -1----1---0-----------0----------
571     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~voted(node4)']
572     : --1----1---0----------0----------
572     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~voted(node4)']
573     : 1------1-0------------0----------
573     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~voted(node4)']
574     : -1------1-0-----------0----------
574     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~voted(node4)']
575     : 1-------10------------0----------
575     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~voted(node4)']
576     : --1---1-------0-------0----------
576     : ['decided(value2)', 'vote(node1,value0)', '~vote(node3,value2)', '~voted(node4)']
577     : -1----1------0--------0----------
577     : ['decided(value1)', 'vote(node1,value0)', '~vote(node3,value1)', '~voted(node4)']
578     : --1----1------0-------0----------
578     : ['decided(value2)', 'vote(node1,value1)', '~vote(node3,value2)', '~voted(node4)']
579     : 1------1----0---------0----------
579     : ['decided(value0)', 'vote(node1,value1)', '~vote(node3,value0)', '~voted(node4)']
580     : -1------1----0--------0----------
580     : ['decided(value1)', 'vote(node1,value2)', '~vote(node3,value1)', '~voted(node4)']
581     : 1-------1---0---------0----------
581     : ['decided(value0)', 'vote(node1,value2)', '~vote(node3,value0)', '~voted(node4)']
582     : --1-----01--------0--------------
582     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~voted(node0)']
583     : -1-----0-1--------0--------------
583     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~voted(node0)']
584     : --1-----0-1-------0--------------
584     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~voted(node0)']
585     : 1-----0---1-------0--------------
585     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~voted(node0)']
586     : -1-----0---1------0--------------
586     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~voted(node0)']
587     : 1-----0----1------0--------------
587     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~voted(node0)']
588     : --1------1----0---0--------------
588     : ['decided(value2)', 'vote(node2,value0)', '~vote(node3,value2)', '~voted(node0)']
589     : -1-------1---0----0--------------
589     : ['decided(value1)', 'vote(node2,value0)', '~vote(node3,value1)', '~voted(node0)']
590     : --1-------1---0---0--------------
590     : ['decided(value2)', 'vote(node2,value1)', '~vote(node3,value2)', '~voted(node0)']
591     : 1---------1-0-----0--------------
591     : ['decided(value0)', 'vote(node2,value1)', '~vote(node3,value0)', '~voted(node0)']
592     : -1---------1-0----0--------------
592     : ['decided(value1)', 'vote(node2,value2)', '~vote(node3,value1)', '~voted(node0)']
593     : 1----------10-----0--------------
593     : ['decided(value0)', 'vote(node2,value2)', '~vote(node3,value0)', '~voted(node0)']
594     : --1------1-------00--------------
594     : ['decided(value2)', 'vote(node2,value0)', '~vote(node4,value2)', '~voted(node0)']
595     : -1-------1------0-0--------------
595     : ['decided(value1)', 'vote(node2,value0)', '~vote(node4,value1)', '~voted(node0)']
596     : --1-------1------00--------------
596     : ['decided(value2)', 'vote(node2,value1)', '~vote(node4,value2)', '~voted(node0)']
597     : 1---------1----0--0--------------
597     : ['decided(value0)', 'vote(node2,value1)', '~vote(node4,value0)', '~voted(node0)']
598     : -1---------1----0-0--------------
598     : ['decided(value1)', 'vote(node2,value2)', '~vote(node4,value1)', '~voted(node0)']
599     : 1----------1---0--0--------------
599     : ['decided(value0)', 'vote(node2,value2)', '~vote(node4,value0)', '~voted(node0)']
600     : --1--0---1---------0-------------
600     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~voted(node1)']
601     : -1--0----1---------0-------------
601     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~voted(node1)']
602     : --1--0----1--------0-------------
602     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~voted(node1)']
603     : 1--0------1--------0-------------
603     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~voted(node1)']
604     : -1--0------1-------0-------------
604     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~voted(node1)']
605     : 1--0-------1-------0-------------
605     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~voted(node1)']
606     : --1------1----0----0-------------
606     : ['decided(value2)', 'vote(node2,value0)', '~vote(node3,value2)', '~voted(node1)']
607     : -1-------1---0-----0-------------
607     : ['decided(value1)', 'vote(node2,value0)', '~vote(node3,value1)', '~voted(node1)']
608     : --1-------1---0----0-------------
608     : ['decided(value2)', 'vote(node2,value1)', '~vote(node3,value2)', '~voted(node1)']
609     : 1---------1-0------0-------------
609     : ['decided(value0)', 'vote(node2,value1)', '~vote(node3,value0)', '~voted(node1)']
610     : -1---------1-0-----0-------------
610     : ['decided(value1)', 'vote(node2,value2)', '~vote(node3,value1)', '~voted(node1)']
611     : 1----------10------0-------------
611     : ['decided(value0)', 'vote(node2,value2)', '~vote(node3,value0)', '~voted(node1)']
612     : --1------1-------0-0-------------
612     : ['decided(value2)', 'vote(node2,value0)', '~vote(node4,value2)', '~voted(node1)']
613     : -1-------1------0--0-------------
613     : ['decided(value1)', 'vote(node2,value0)', '~vote(node4,value1)', '~voted(node1)']
614     : --1-------1------0-0-------------
614     : ['decided(value2)', 'vote(node2,value1)', '~vote(node4,value2)', '~voted(node1)']
615     : 1---------1----0---0-------------
615     : ['decided(value0)', 'vote(node2,value1)', '~vote(node4,value0)', '~voted(node1)']
616     : -1---------1----0--0-------------
616     : ['decided(value1)', 'vote(node2,value2)', '~vote(node4,value1)', '~voted(node1)']
617     : 1----------1---0---0-------------
617     : ['decided(value0)', 'vote(node2,value2)', '~vote(node4,value0)', '~voted(node1)']
618     : --1--0---1-----------0-----------
618     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~voted(node3)']
619     : -1--0----1-----------0-----------
619     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~voted(node3)']
620     : --1--0----1----------0-----------
620     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~voted(node3)']
621     : 1--0------1----------0-----------
621     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~voted(node3)']
622     : -1--0------1---------0-----------
622     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~voted(node3)']
623     : 1--0-------1---------0-----------
623     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~voted(node3)']
624     : --1-----01-----------0-----------
624     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~voted(node3)']
625     : -1-----0-1-----------0-----------
625     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~voted(node3)']
626     : --1-----0-1----------0-----------
626     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~voted(node3)']
627     : 1-----0---1----------0-----------
627     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~voted(node3)']
628     : -1-----0---1---------0-----------
628     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~voted(node3)']
629     : 1-----0----1---------0-----------
629     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~voted(node3)']
630     : --1------1-------0---0-----------
630     : ['decided(value2)', 'vote(node2,value0)', '~vote(node4,value2)', '~voted(node3)']
631     : -1-------1------0----0-----------
631     : ['decided(value1)', 'vote(node2,value0)', '~vote(node4,value1)', '~voted(node3)']
632     : --1-------1------0---0-----------
632     : ['decided(value2)', 'vote(node2,value1)', '~vote(node4,value2)', '~voted(node3)']
633     : 1---------1----0-----0-----------
633     : ['decided(value0)', 'vote(node2,value1)', '~vote(node4,value0)', '~voted(node3)']
634     : -1---------1----0----0-----------
634     : ['decided(value1)', 'vote(node2,value2)', '~vote(node4,value1)', '~voted(node3)']
635     : 1----------1---0-----0-----------
635     : ['decided(value0)', 'vote(node2,value2)', '~vote(node4,value0)', '~voted(node3)']
636     : --1--0---1------------0----------
636     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~voted(node4)']
637     : -1--0----1------------0----------
637     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~voted(node4)']
638     : --1--0----1-----------0----------
638     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~voted(node4)']
639     : 1--0------1-----------0----------
639     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~voted(node4)']
640     : -1--0------1----------0----------
640     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~voted(node4)']
641     : 1--0-------1----------0----------
641     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~voted(node4)']
642     : --1-----01------------0----------
642     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~voted(node4)']
643     : -1-----0-1------------0----------
643     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~voted(node4)']
644     : --1-----0-1-----------0----------
644     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~voted(node4)']
645     : 1-----0---1-----------0----------
645     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~voted(node4)']
646     : -1-----0---1----------0----------
646     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~voted(node4)']
647     : 1-----0----1----------0----------
647     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~voted(node4)']
648     : --1------1----0-------0----------
648     : ['decided(value2)', 'vote(node2,value0)', '~vote(node3,value2)', '~voted(node4)']
649     : -1-------1---0--------0----------
649     : ['decided(value1)', 'vote(node2,value0)', '~vote(node3,value1)', '~voted(node4)']
650     : --1-------1---0-------0----------
650     : ['decided(value2)', 'vote(node2,value1)', '~vote(node3,value2)', '~voted(node4)']
651     : 1---------1-0---------0----------
651     : ['decided(value0)', 'vote(node2,value1)', '~vote(node3,value0)', '~voted(node4)']
652     : -1---------1-0--------0----------
652     : ['decided(value1)', 'vote(node2,value2)', '~vote(node3,value1)', '~voted(node4)']
653     : 1----------10---------0----------
653     : ['decided(value0)', 'vote(node2,value2)', '~vote(node3,value0)', '~voted(node4)']
654     : --1-----0---1-----0--------------
654     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~voted(node0)']
655     : -1-----0----1-----0--------------
655     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~voted(node0)']
656     : --1-----0----1----0--------------
656     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~voted(node0)']
657     : 1-----0------1----0--------------
657     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~voted(node0)']
658     : -1-----0------1---0--------------
658     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~voted(node0)']
659     : 1-----0-------1---0--------------
659     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~voted(node0)']
660     : --1--------01-----0--------------
660     : ['decided(value2)', 'vote(node3,value0)', '~vote(node2,value2)', '~voted(node0)']
661     : -1--------0-1-----0--------------
661     : ['decided(value1)', 'vote(node3,value0)', '~vote(node2,value1)', '~voted(node0)']
662     : --1--------0-1----0--------------
662     : ['decided(value2)', 'vote(node3,value1)', '~vote(node2,value2)', '~voted(node0)']
663     : 1--------0---1----0--------------
663     : ['decided(value0)', 'vote(node3,value1)', '~vote(node2,value0)', '~voted(node0)']
664     : -1--------0---1---0--------------
664     : ['decided(value1)', 'vote(node3,value2)', '~vote(node2,value1)', '~voted(node0)']
665     : 1--------0----1---0--------------
665     : ['decided(value0)', 'vote(node3,value2)', '~vote(node2,value0)', '~voted(node0)']
666     : --1---------1----00--------------
666     : ['decided(value2)', 'vote(node3,value0)', '~vote(node4,value2)', '~voted(node0)']
667     : -1----------1---0-0--------------
667     : ['decided(value1)', 'vote(node3,value0)', '~vote(node4,value1)', '~voted(node0)']
668     : --1----------1---00--------------
668     : ['decided(value2)', 'vote(node3,value1)', '~vote(node4,value2)', '~voted(node0)']
669     : 1------------1-0--0--------------
669     : ['decided(value0)', 'vote(node3,value1)', '~vote(node4,value0)', '~voted(node0)']
670     : -1------------1-0-0--------------
670     : ['decided(value1)', 'vote(node3,value2)', '~vote(node4,value1)', '~voted(node0)']
671     : 1-------------10--0--------------
671     : ['decided(value0)', 'vote(node3,value2)', '~vote(node4,value0)', '~voted(node0)']
672     : --1--0------1------0-------------
672     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~voted(node1)']
673     : -1--0-------1------0-------------
673     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~voted(node1)']
674     : --1--0-------1-----0-------------
674     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~voted(node1)']
675     : 1--0---------1-----0-------------
675     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~voted(node1)']
676     : -1--0---------1----0-------------
676     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~voted(node1)']
677     : 1--0----------1----0-------------
677     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~voted(node1)']
678     : --1--------01------0-------------
678     : ['decided(value2)', 'vote(node3,value0)', '~vote(node2,value2)', '~voted(node1)']
679     : -1--------0-1------0-------------
679     : ['decided(value1)', 'vote(node3,value0)', '~vote(node2,value1)', '~voted(node1)']
680     : --1--------0-1-----0-------------
680     : ['decided(value2)', 'vote(node3,value1)', '~vote(node2,value2)', '~voted(node1)']
681     : 1--------0---1-----0-------------
681     : ['decided(value0)', 'vote(node3,value1)', '~vote(node2,value0)', '~voted(node1)']
682     : -1--------0---1----0-------------
682     : ['decided(value1)', 'vote(node3,value2)', '~vote(node2,value1)', '~voted(node1)']
683     : 1--------0----1----0-------------
683     : ['decided(value0)', 'vote(node3,value2)', '~vote(node2,value0)', '~voted(node1)']
684     : --1---------1----0-0-------------
684     : ['decided(value2)', 'vote(node3,value0)', '~vote(node4,value2)', '~voted(node1)']
685     : -1----------1---0--0-------------
685     : ['decided(value1)', 'vote(node3,value0)', '~vote(node4,value1)', '~voted(node1)']
686     : --1----------1---0-0-------------
686     : ['decided(value2)', 'vote(node3,value1)', '~vote(node4,value2)', '~voted(node1)']
687     : 1------------1-0---0-------------
687     : ['decided(value0)', 'vote(node3,value1)', '~vote(node4,value0)', '~voted(node1)']
688     : -1------------1-0--0-------------
688     : ['decided(value1)', 'vote(node3,value2)', '~vote(node4,value1)', '~voted(node1)']
689     : 1-------------10---0-------------
689     : ['decided(value0)', 'vote(node3,value2)', '~vote(node4,value0)', '~voted(node1)']
690     : --1--0------1-------0------------
690     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~voted(node2)']
691     : -1--0-------1-------0------------
691     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~voted(node2)']
692     : --1--0-------1------0------------
692     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~voted(node2)']
693     : 1--0---------1------0------------
693     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~voted(node2)']
694     : -1--0---------1-----0------------
694     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~voted(node2)']
695     : 1--0----------1-----0------------
695     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~voted(node2)']
696     : --1-----0---1-------0------------
696     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~voted(node2)']
697     : -1-----0----1-------0------------
697     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~voted(node2)']
698     : --1-----0----1------0------------
698     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~voted(node2)']
699     : 1-----0------1------0------------
699     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~voted(node2)']
700     : -1-----0------1-----0------------
700     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~voted(node2)']
701     : 1-----0-------1-----0------------
701     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~voted(node2)']
702     : --1---------1----0--0------------
702     : ['decided(value2)', 'vote(node3,value0)', '~vote(node4,value2)', '~voted(node2)']
703     : -1----------1---0---0------------
703     : ['decided(value1)', 'vote(node3,value0)', '~vote(node4,value1)', '~voted(node2)']
704     : --1----------1---0--0------------
704     : ['decided(value2)', 'vote(node3,value1)', '~vote(node4,value2)', '~voted(node2)']
705     : 1------------1-0----0------------
705     : ['decided(value0)', 'vote(node3,value1)', '~vote(node4,value0)', '~voted(node2)']
706     : -1------------1-0---0------------
706     : ['decided(value1)', 'vote(node3,value2)', '~vote(node4,value1)', '~voted(node2)']
707     : 1-------------10----0------------
707     : ['decided(value0)', 'vote(node3,value2)', '~vote(node4,value0)', '~voted(node2)']
708     : --1--0------1---------0----------
708     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~voted(node4)']
709     : -1--0-------1---------0----------
709     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~voted(node4)']
710     : --1--0-------1--------0----------
710     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~voted(node4)']
711     : 1--0---------1--------0----------
711     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~voted(node4)']
712     : -1--0---------1-------0----------
712     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~voted(node4)']
713     : 1--0----------1-------0----------
713     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~voted(node4)']
714     : --1-----0---1---------0----------
714     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~voted(node4)']
715     : -1-----0----1---------0----------
715     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~voted(node4)']
716     : --1-----0----1--------0----------
716     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~voted(node4)']
717     : 1-----0------1--------0----------
717     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~voted(node4)']
718     : -1-----0------1-------0----------
718     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~voted(node4)']
719     : 1-----0-------1-------0----------
719     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~voted(node4)']
720     : --1--------01---------0----------
720     : ['decided(value2)', 'vote(node3,value0)', '~vote(node2,value2)', '~voted(node4)']
721     : -1--------0-1---------0----------
721     : ['decided(value1)', 'vote(node3,value0)', '~vote(node2,value1)', '~voted(node4)']
722     : --1--------0-1--------0----------
722     : ['decided(value2)', 'vote(node3,value1)', '~vote(node2,value2)', '~voted(node4)']
723     : 1--------0---1--------0----------
723     : ['decided(value0)', 'vote(node3,value1)', '~vote(node2,value0)', '~voted(node4)']
724     : -1--------0---1-------0----------
724     : ['decided(value1)', 'vote(node3,value2)', '~vote(node2,value1)', '~voted(node4)']
725     : 1--------0----1-------0----------
725     : ['decided(value0)', 'vote(node3,value2)', '~vote(node2,value0)', '~voted(node4)']
726     : --1-----0------1--0--------------
726     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~voted(node0)']
727     : -1-----0-------1--0--------------
727     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~voted(node0)']
728     : --1-----0-------1-0--------------
728     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~voted(node0)']
729     : 1-----0---------1-0--------------
729     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~voted(node0)']
730     : -1-----0---------10--------------
730     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~voted(node0)']
731     : 1-----0----------10--------------
731     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~voted(node0)']
732     : --1--------0---1--0--------------
732     : ['decided(value2)', 'vote(node4,value0)', '~vote(node2,value2)', '~voted(node0)']
733     : -1--------0----1--0--------------
733     : ['decided(value1)', 'vote(node4,value0)', '~vote(node2,value1)', '~voted(node0)']
734     : --1--------0----1-0--------------
734     : ['decided(value2)', 'vote(node4,value1)', '~vote(node2,value2)', '~voted(node0)']
735     : 1--------0------1-0--------------
735     : ['decided(value0)', 'vote(node4,value1)', '~vote(node2,value0)', '~voted(node0)']
736     : -1--------0------10--------------
736     : ['decided(value1)', 'vote(node4,value2)', '~vote(node2,value1)', '~voted(node0)']
737     : 1--------0-------10--------------
737     : ['decided(value0)', 'vote(node4,value2)', '~vote(node2,value0)', '~voted(node0)']
738     : --1-----------01--0--------------
738     : ['decided(value2)', 'vote(node4,value0)', '~vote(node3,value2)', '~voted(node0)']
739     : -1-----------0-1--0--------------
739     : ['decided(value1)', 'vote(node4,value0)', '~vote(node3,value1)', '~voted(node0)']
740     : --1-----------0-1-0--------------
740     : ['decided(value2)', 'vote(node4,value1)', '~vote(node3,value2)', '~voted(node0)']
741     : 1-----------0---1-0--------------
741     : ['decided(value0)', 'vote(node4,value1)', '~vote(node3,value0)', '~voted(node0)']
742     : -1-----------0---10--------------
742     : ['decided(value1)', 'vote(node4,value2)', '~vote(node3,value1)', '~voted(node0)']
743     : 1-----------0----10--------------
743     : ['decided(value0)', 'vote(node4,value2)', '~vote(node3,value0)', '~voted(node0)']
744     : --1--0---------1---0-------------
744     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~voted(node1)']
745     : -1--0----------1---0-------------
745     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~voted(node1)']
746     : --1--0----------1--0-------------
746     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~voted(node1)']
747     : 1--0------------1--0-------------
747     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~voted(node1)']
748     : -1--0------------1-0-------------
748     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~voted(node1)']
749     : 1--0-------------1-0-------------
749     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~voted(node1)']
750     : --1--------0---1---0-------------
750     : ['decided(value2)', 'vote(node4,value0)', '~vote(node2,value2)', '~voted(node1)']
751     : -1--------0----1---0-------------
751     : ['decided(value1)', 'vote(node4,value0)', '~vote(node2,value1)', '~voted(node1)']
752     : --1--------0----1--0-------------
752     : ['decided(value2)', 'vote(node4,value1)', '~vote(node2,value2)', '~voted(node1)']
753     : 1--------0------1--0-------------
753     : ['decided(value0)', 'vote(node4,value1)', '~vote(node2,value0)', '~voted(node1)']
754     : -1--------0------1-0-------------
754     : ['decided(value1)', 'vote(node4,value2)', '~vote(node2,value1)', '~voted(node1)']
755     : 1--------0-------1-0-------------
755     : ['decided(value0)', 'vote(node4,value2)', '~vote(node2,value0)', '~voted(node1)']
756     : --1-----------01---0-------------
756     : ['decided(value2)', 'vote(node4,value0)', '~vote(node3,value2)', '~voted(node1)']
757     : -1-----------0-1---0-------------
757     : ['decided(value1)', 'vote(node4,value0)', '~vote(node3,value1)', '~voted(node1)']
758     : --1-----------0-1--0-------------
758     : ['decided(value2)', 'vote(node4,value1)', '~vote(node3,value2)', '~voted(node1)']
759     : 1-----------0---1--0-------------
759     : ['decided(value0)', 'vote(node4,value1)', '~vote(node3,value0)', '~voted(node1)']
760     : -1-----------0---1-0-------------
760     : ['decided(value1)', 'vote(node4,value2)', '~vote(node3,value1)', '~voted(node1)']
761     : 1-----------0----1-0-------------
761     : ['decided(value0)', 'vote(node4,value2)', '~vote(node3,value0)', '~voted(node1)']
762     : --1--0---------1----0------------
762     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~voted(node2)']
763     : -1--0----------1----0------------
763     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~voted(node2)']
764     : --1--0----------1---0------------
764     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~voted(node2)']
765     : 1--0------------1---0------------
765     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~voted(node2)']
766     : -1--0------------1--0------------
766     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~voted(node2)']
767     : 1--0-------------1--0------------
767     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~voted(node2)']
768     : --1-----0------1----0------------
768     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~voted(node2)']
769     : -1-----0-------1----0------------
769     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~voted(node2)']
770     : --1-----0-------1---0------------
770     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~voted(node2)']
771     : 1-----0---------1---0------------
771     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~voted(node2)']
772     : -1-----0---------1--0------------
772     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~voted(node2)']
773     : 1-----0----------1--0------------
773     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~voted(node2)']
774     : --1-----------01----0------------
774     : ['decided(value2)', 'vote(node4,value0)', '~vote(node3,value2)', '~voted(node2)']
775     : -1-----------0-1----0------------
775     : ['decided(value1)', 'vote(node4,value0)', '~vote(node3,value1)', '~voted(node2)']
776     : --1-----------0-1---0------------
776     : ['decided(value2)', 'vote(node4,value1)', '~vote(node3,value2)', '~voted(node2)']
777     : 1-----------0---1---0------------
777     : ['decided(value0)', 'vote(node4,value1)', '~vote(node3,value0)', '~voted(node2)']
778     : -1-----------0---1--0------------
778     : ['decided(value1)', 'vote(node4,value2)', '~vote(node3,value1)', '~voted(node2)']
779     : 1-----------0----1--0------------
779     : ['decided(value0)', 'vote(node4,value2)', '~vote(node3,value0)', '~voted(node2)']
780     : --1--0---------1-----0-----------
780     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~voted(node3)']
781     : -1--0----------1-----0-----------
781     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~voted(node3)']
782     : --1--0----------1----0-----------
782     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~voted(node3)']
783     : 1--0------------1----0-----------
783     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~voted(node3)']
784     : -1--0------------1---0-----------
784     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~voted(node3)']
785     : 1--0-------------1---0-----------
785     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~voted(node3)']
786     : --1-----0------1-----0-----------
786     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~voted(node3)']
787     : -1-----0-------1-----0-----------
787     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~voted(node3)']
788     : --1-----0-------1----0-----------
788     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~voted(node3)']
789     : 1-----0---------1----0-----------
789     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~voted(node3)']
790     : -1-----0---------1---0-----------
790     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~voted(node3)']
791     : 1-----0----------1---0-----------
791     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~voted(node3)']
792     : --1--------0---1-----0-----------
792     : ['decided(value2)', 'vote(node4,value0)', '~vote(node2,value2)', '~voted(node3)']
793     : -1--------0----1-----0-----------
793     : ['decided(value1)', 'vote(node4,value0)', '~vote(node2,value1)', '~voted(node3)']
794     : --1--------0----1----0-----------
794     : ['decided(value2)', 'vote(node4,value1)', '~vote(node2,value2)', '~voted(node3)']
795     : 1--------0------1----0-----------
795     : ['decided(value0)', 'vote(node4,value1)', '~vote(node2,value0)', '~voted(node3)']
796     : -1--------0------1---0-----------
796     : ['decided(value1)', 'vote(node4,value2)', '~vote(node2,value1)', '~voted(node3)']
797     : 1--------0-------1---0-----------
797     : ['decided(value0)', 'vote(node4,value2)', '~vote(node2,value0)', '~voted(node3)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall NODE1,NODE0,NODE2,VALUE0,VALUE1. ~vote(NODE0,VALUE1) | voted(NODE2) | ~decided(VALUE0) | vote(NODE1,VALUE0) | (VALUE0 = VALUE1 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 13




=== Prime Orbit 8 =====================
size : 360
num_suborbits: 2
798 (*) : --11------1--------0-------------
798     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~voted(node1)']
799     : -1-1-------1-------0-------------
799     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~voted(node1)']
800     : --1-1----1---------0-------------
800     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~voted(node1)']
801     : 1---1------1-------0-------------
801     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~voted(node1)']
802     : -1---1---1---------0-------------
802     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~voted(node1)']
803     : 1----1----1--------0-------------
803     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~voted(node1)']
804     : --11---------1-----0-------------
804     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~voted(node1)']
805     : -1-1----------1----0-------------
805     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~voted(node1)']
806     : --1-1-------1------0-------------
806     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~voted(node1)']
807     : 1---1---------1----0-------------
807     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~voted(node1)']
808     : -1---1------1------0-------------
808     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~voted(node1)']
809     : 1----1-------1-----0-------------
809     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~voted(node1)']
810     : --11------------1--0-------------
810     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~voted(node1)']
811     : -1-1-------------1-0-------------
811     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~voted(node1)']
812     : --1-1----------1---0-------------
812     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~voted(node1)']
813     : 1---1------------1-0-------------
813     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~voted(node1)']
814     : -1---1---------1---0-------------
814     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~voted(node1)']
815     : 1----1----------1--0-------------
815     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~voted(node1)']
816     : --11---1------------0------------
816     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~voted(node2)']
817     : -1-1----1-----------0------------
817     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~voted(node2)']
818     : --1-1-1-------------0------------
818     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~voted(node2)']
819     : 1---1---1-----------0------------
819     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~voted(node2)']
820     : -1---11-------------0------------
820     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~voted(node2)']
821     : 1----1-1------------0------------
821     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~voted(node2)']
822     : --11---------1------0------------
822     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~voted(node2)']
823     : -1-1----------1-----0------------
823     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~voted(node2)']
824     : --1-1-------1-------0------------
824     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~voted(node2)']
825     : 1---1---------1-----0------------
825     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~voted(node2)']
826     : -1---1------1-------0------------
826     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~voted(node2)']
827     : 1----1-------1------0------------
827     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~voted(node2)']
828     : --11------------1---0------------
828     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~voted(node2)']
829     : -1-1-------------1--0------------
829     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~voted(node2)']
830     : --1-1----------1----0------------
830     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~voted(node2)']
831     : 1---1------------1--0------------
831     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~voted(node2)']
832     : -1---1---------1----0------------
832     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~voted(node2)']
833     : 1----1----------1---0------------
833     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~voted(node2)']
834     : --11---1-------------0-----------
834     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~voted(node3)']
835     : -1-1----1------------0-----------
835     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~voted(node3)']
836     : --1-1-1--------------0-----------
836     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~voted(node3)']
837     : 1---1---1------------0-----------
837     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~voted(node3)']
838     : -1---11--------------0-----------
838     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~voted(node3)']
839     : 1----1-1-------------0-----------
839     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~voted(node3)']
840     : --11------1----------0-----------
840     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~voted(node3)']
841     : -1-1-------1---------0-----------
841     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~voted(node3)']
842     : --1-1----1-----------0-----------
842     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~voted(node3)']
843     : 1---1------1---------0-----------
843     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~voted(node3)']
844     : -1---1---1-----------0-----------
844     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~voted(node3)']
845     : 1----1----1----------0-----------
845     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~voted(node3)']
846     : --11------------1----0-----------
846     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~voted(node3)']
847     : -1-1-------------1---0-----------
847     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~voted(node3)']
848     : --1-1----------1-----0-----------
848     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~voted(node3)']
849     : 1---1------------1---0-----------
849     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~voted(node3)']
850     : -1---1---------1-----0-----------
850     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~voted(node3)']
851     : 1----1----------1----0-----------
851     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~voted(node3)']
852     : --11---1--------------0----------
852     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~voted(node4)']
853     : -1-1----1-------------0----------
853     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~voted(node4)']
854     : --1-1-1---------------0----------
854     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~voted(node4)']
855     : 1---1---1-------------0----------
855     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~voted(node4)']
856     : -1---11---------------0----------
856     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~voted(node4)']
857     : 1----1-1--------------0----------
857     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~voted(node4)']
858     : --11------1-----------0----------
858     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~voted(node4)']
859     : -1-1-------1----------0----------
859     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~voted(node4)']
860     : --1-1----1------------0----------
860     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~voted(node4)']
861     : 1---1------1----------0----------
861     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~voted(node4)']
862     : -1---1---1------------0----------
862     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~voted(node4)']
863     : 1----1----1-----------0----------
863     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~voted(node4)']
864     : --11---------1--------0----------
864     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~voted(node4)']
865     : -1-1----------1-------0----------
865     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~voted(node4)']
866     : --1-1-------1---------0----------
866     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~voted(node4)']
867     : 1---1---------1-------0----------
867     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~voted(node4)']
868     : -1---1------1---------0----------
868     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~voted(node4)']
869     : 1----1-------1--------0----------
869     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~voted(node4)']
870     : --1---1---1-------0--------------
870     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~voted(node0)']
871     : -1----1----1------0--------------
871     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~voted(node0)']
872     : --1----1-1--------0--------------
872     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~voted(node0)']
873     : 1------1---1------0--------------
873     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~voted(node0)']
874     : -1------11--------0--------------
874     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~voted(node0)']
875     : 1-------1-1-------0--------------
875     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~voted(node0)']
876     : --1---1------1----0--------------
876     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~voted(node0)']
877     : -1----1-------1---0--------------
877     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~voted(node0)']
878     : --1----1----1-----0--------------
878     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~voted(node0)']
879     : 1------1------1---0--------------
879     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~voted(node0)']
880     : -1------1---1-----0--------------
880     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~voted(node0)']
881     : 1-------1----1----0--------------
881     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~voted(node0)']
882     : --1---1---------1-0--------------
882     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~voted(node0)']
883     : -1----1----------10--------------
883     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~voted(node0)']
884     : --1----1-------1--0--------------
884     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~voted(node0)']
885     : 1------1---------10--------------
885     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~voted(node0)']
886     : -1------1------1--0--------------
886     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~voted(node0)']
887     : 1-------1-------1-0--------------
887     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~voted(node0)']
888     : --1---1------1------0------------
888     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~voted(node2)']
889     : -1----1-------1-----0------------
889     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~voted(node2)']
890     : --1----1----1-------0------------
890     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~voted(node2)']
891     : 1------1------1-----0------------
891     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~voted(node2)']
892     : -1------1---1-------0------------
892     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~voted(node2)']
893     : 1-------1----1------0------------
893     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~voted(node2)']
894     : --1---1---------1---0------------
894     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~voted(node2)']
895     : -1----1----------1--0------------
895     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~voted(node2)']
896     : --1----1-------1----0------------
896     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~voted(node2)']
897     : 1------1---------1--0------------
897     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~voted(node2)']
898     : -1------1------1----0------------
898     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~voted(node2)']
899     : 1-------1-------1---0------------
899     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~voted(node2)']
900     : --1---1---1----------0-----------
900     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~voted(node3)']
901     : -1----1----1---------0-----------
901     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~voted(node3)']
902     : --1----1-1-----------0-----------
902     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~voted(node3)']
903     : 1------1---1---------0-----------
903     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~voted(node3)']
904     : -1------11-----------0-----------
904     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~voted(node3)']
905     : 1-------1-1----------0-----------
905     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~voted(node3)']
906     : --1---1---------1----0-----------
906     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~voted(node3)']
907     : -1----1----------1---0-----------
907     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~voted(node3)']
908     : --1----1-------1-----0-----------
908     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~voted(node3)']
909     : 1------1---------1---0-----------
909     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~voted(node3)']
910     : -1------1------1-----0-----------
910     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~voted(node3)']
911     : 1-------1-------1----0-----------
911     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~voted(node3)']
912     : --1---1---1-----------0----------
912     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~voted(node4)']
913     : -1----1----1----------0----------
913     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~voted(node4)']
914     : --1----1-1------------0----------
914     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~voted(node4)']
915     : 1------1---1----------0----------
915     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~voted(node4)']
916     : -1------11------------0----------
916     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~voted(node4)']
917     : 1-------1-1-----------0----------
917     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~voted(node4)']
918     : --1---1------1--------0----------
918     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~voted(node4)']
919     : -1----1-------1-------0----------
919     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~voted(node4)']
920     : --1----1----1---------0----------
920     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~voted(node4)']
921     : 1------1------1-------0----------
921     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~voted(node4)']
922     : -1------1---1---------0----------
922     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~voted(node4)']
923     : 1-------1----1--------0----------
923     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~voted(node4)']
924     : --1------1---1----0--------------
924     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~voted(node0)']
925     : -1-------1----1---0--------------
925     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~voted(node0)']
926     : --1-------1-1-----0--------------
926     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~voted(node0)']
927     : 1---------1---1---0--------------
927     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~voted(node0)']
928     : -1---------11-----0--------------
928     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~voted(node0)']
929     : 1----------1-1----0--------------
929     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~voted(node0)']
930     : --1------1------1-0--------------
930     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~voted(node0)']
931     : -1-------1-------10--------------
931     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~voted(node0)']
932     : --1-------1----1--0--------------
932     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~voted(node0)']
933     : 1---------1------10--------------
933     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~voted(node0)']
934     : -1---------1---1--0--------------
934     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~voted(node0)']
935     : 1----------1----1-0--------------
935     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~voted(node0)']
936     : --1------1---1-----0-------------
936     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~voted(node1)']
937     : -1-------1----1----0-------------
937     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~voted(node1)']
938     : --1-------1-1------0-------------
938     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~voted(node1)']
939     : 1---------1---1----0-------------
939     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~voted(node1)']
940     : -1---------11------0-------------
940     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~voted(node1)']
941     : 1----------1-1-----0-------------
941     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~voted(node1)']
942     : --1------1------1--0-------------
942     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~voted(node1)']
943     : -1-------1-------1-0-------------
943     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~voted(node1)']
944     : --1-------1----1---0-------------
944     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~voted(node1)']
945     : 1---------1------1-0-------------
945     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~voted(node1)']
946     : -1---------1---1---0-------------
946     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~voted(node1)']
947     : 1----------1----1--0-------------
947     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~voted(node1)']
948     : --1------1------1----0-----------
948     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~voted(node3)']
949     : -1-------1-------1---0-----------
949     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~voted(node3)']
950     : --1-------1----1-----0-----------
950     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~voted(node3)']
951     : 1---------1------1---0-----------
951     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~voted(node3)']
952     : -1---------1---1-----0-----------
952     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~voted(node3)']
953     : 1----------1----1----0-----------
953     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~voted(node3)']
954     : --1------1---1--------0----------
954     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~voted(node4)']
955     : -1-------1----1-------0----------
955     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~voted(node4)']
956     : --1-------1-1---------0----------
956     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~voted(node4)']
957     : 1---------1---1-------0----------
957     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~voted(node4)']
958     : -1---------11---------0----------
958     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~voted(node4)']
959     : 1----------1-1--------0----------
959     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~voted(node4)']
960     : --1---------1---1-0--------------
960     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~voted(node0)']
961     : -1----------1----10--------------
961     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~voted(node0)']
962     : --1----------1-1--0--------------
962     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~voted(node0)']
963     : 1------------1---10--------------
963     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~voted(node0)']
964     : -1------------11--0--------------
964     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~voted(node0)']
965     : 1-------------1-1-0--------------
965     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~voted(node0)']
966     : --1---------1---1--0-------------
966     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~voted(node1)']
967     : -1----------1----1-0-------------
967     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~voted(node1)']
968     : --1----------1-1---0-------------
968     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~voted(node1)']
969     : 1------------1---1-0-------------
969     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~voted(node1)']
970     : -1------------11---0-------------
970     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~voted(node1)']
971     : 1-------------1-1--0-------------
971     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~voted(node1)']
972     : --1---------1---1---0------------
972     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~voted(node2)']
973     : -1----------1----1--0------------
973     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~voted(node2)']
974     : --1----------1-1----0------------
974     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~voted(node2)']
975     : 1------------1---1--0------------
975     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~voted(node2)']
976     : -1------------11----0------------
976     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~voted(node2)']
977     : 1-------------1-1---0------------
977     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~voted(node2)']
1758 (*) : --11--------1------0-------------
1758     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node1)']
1759     : -1-1--------1------0-------------
1759     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node1)']
1760     : --1-1--------1-----0-------------
1760     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node1)']
1761     : 1---1--------1-----0-------------
1761     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node1)']
1762     : -1---1--------1----0-------------
1762     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node1)']
1763     : 1----1--------1----0-------------
1763     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node1)']
1764     : --11-----------1---0-------------
1764     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node1)']
1765     : -1-1-----------1---0-------------
1765     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node1)']
1766     : --1-1-----------1--0-------------
1766     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node1)']
1767     : 1---1-----------1--0-------------
1767     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node1)']
1768     : -1---1-----------1-0-------------
1768     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node1)']
1769     : 1----1-----------1-0-------------
1769     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node1)']
1770     : --11-----1---------0-------------
1770     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node1)']
1771     : -1-1-----1---------0-------------
1771     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node1)']
1772     : --1-1-----1--------0-------------
1772     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node1)']
1773     : 1---1-----1--------0-------------
1773     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node1)']
1774     : -1---1-----1-------0-------------
1774     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node1)']
1775     : 1----1-----1-------0-------------
1775     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node1)']
1776     : --11--------1-------0------------
1776     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node2)']
1777     : -1-1--------1-------0------------
1777     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node2)']
1778     : --1-1--------1------0------------
1778     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node2)']
1779     : 1---1--------1------0------------
1779     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node2)']
1780     : -1---1--------1-----0------------
1780     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node2)']
1781     : 1----1--------1-----0------------
1781     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node2)']
1782     : --11-----------1----0------------
1782     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node2)']
1783     : -1-1-----------1----0------------
1783     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node2)']
1784     : --1-1-----------1---0------------
1784     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node2)']
1785     : 1---1-----------1---0------------
1785     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node2)']
1786     : -1---1-----------1--0------------
1786     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node2)']
1787     : 1----1-----------1--0------------
1787     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node2)']
1788     : --11--1-------------0------------
1788     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node2)']
1789     : -1-1--1-------------0------------
1789     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node2)']
1790     : --1-1--1------------0------------
1790     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node2)']
1791     : 1---1--1------------0------------
1791     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node2)']
1792     : -1---1--1-----------0------------
1792     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node2)']
1793     : 1----1--1-----------0------------
1793     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node2)']
1794     : --11-----1-----------0-----------
1794     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node3)']
1795     : -1-1-----1-----------0-----------
1795     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node3)']
1796     : --1-1-----1----------0-----------
1796     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node3)']
1797     : 1---1-----1----------0-----------
1797     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node3)']
1798     : -1---1-----1---------0-----------
1798     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node3)']
1799     : 1----1-----1---------0-----------
1799     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node3)']
1800     : --11-----------1-----0-----------
1800     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node3)']
1801     : -1-1-----------1-----0-----------
1801     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~voted(node3)']
1802     : --1-1-----------1----0-----------
1802     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node3)']
1803     : 1---1-----------1----0-----------
1803     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~voted(node3)']
1804     : -1---1-----------1---0-----------
1804     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node3)']
1805     : 1----1-----------1---0-----------
1805     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~voted(node3)']
1806     : --11--1--------------0-----------
1806     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node3)']
1807     : -1-1--1--------------0-----------
1807     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node3)']
1808     : --1-1--1-------------0-----------
1808     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node3)']
1809     : 1---1--1-------------0-----------
1809     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node3)']
1810     : -1---1--1------------0-----------
1810     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node3)']
1811     : 1----1--1------------0-----------
1811     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node3)']
1812     : --11-----1------------0----------
1812     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node4)']
1813     : -1-1-----1------------0----------
1813     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~voted(node4)']
1814     : --1-1-----1-----------0----------
1814     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node4)']
1815     : 1---1-----1-----------0----------
1815     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~voted(node4)']
1816     : -1---1-----1----------0----------
1816     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node4)']
1817     : 1----1-----1----------0----------
1817     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~voted(node4)']
1818     : --11--------1---------0----------
1818     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node4)']
1819     : -1-1--------1---------0----------
1819     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~voted(node4)']
1820     : --1-1--------1--------0----------
1820     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node4)']
1821     : 1---1--------1--------0----------
1821     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~voted(node4)']
1822     : -1---1--------1-------0----------
1822     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node4)']
1823     : 1----1--------1-------0----------
1823     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~voted(node4)']
1824     : --11--1---------------0----------
1824     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node4)']
1825     : -1-1--1---------------0----------
1825     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~voted(node4)']
1826     : --1-1--1--------------0----------
1826     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node4)']
1827     : 1---1--1--------------0----------
1827     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~voted(node4)']
1828     : -1---1--1-------------0----------
1828     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node4)']
1829     : 1----1--1-------------0----------
1829     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~voted(node4)']
1830     : --1---1-----1-----0--------------
1830     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node0)']
1831     : -1----1-----1-----0--------------
1831     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node0)']
1832     : --1----1-----1----0--------------
1832     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node0)']
1833     : 1------1-----1----0--------------
1833     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node0)']
1834     : -1------1-----1---0--------------
1834     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node0)']
1835     : 1-------1-----1---0--------------
1835     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node0)']
1836     : --1---1--------1--0--------------
1836     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node0)']
1837     : -1----1--------1--0--------------
1837     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node0)']
1838     : --1----1--------1-0--------------
1838     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node0)']
1839     : 1------1--------1-0--------------
1839     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node0)']
1840     : -1------1--------10--------------
1840     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node0)']
1841     : 1-------1--------10--------------
1841     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node0)']
1842     : --1---1--1--------0--------------
1842     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node0)']
1843     : -1----1--1--------0--------------
1843     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node0)']
1844     : --1----1--1-------0--------------
1844     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node0)']
1845     : 1------1--1-------0--------------
1845     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node0)']
1846     : -1------1--1------0--------------
1846     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node0)']
1847     : 1-------1--1------0--------------
1847     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node0)']
1848     : --1---1-----1-------0------------
1848     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node2)']
1849     : -1----1-----1-------0------------
1849     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node2)']
1850     : --1----1-----1------0------------
1850     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node2)']
1851     : 1------1-----1------0------------
1851     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node2)']
1852     : -1------1-----1-----0------------
1852     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node2)']
1853     : 1-------1-----1-----0------------
1853     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node2)']
1854     : --1---1--------1----0------------
1854     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node2)']
1855     : -1----1--------1----0------------
1855     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node2)']
1856     : --1----1--------1---0------------
1856     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node2)']
1857     : 1------1--------1---0------------
1857     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node2)']
1858     : -1------1--------1--0------------
1858     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node2)']
1859     : 1-------1--------1--0------------
1859     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node2)']
1860     : --1---1--1-----------0-----------
1860     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node3)']
1861     : -1----1--1-----------0-----------
1861     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node3)']
1862     : --1----1--1----------0-----------
1862     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node3)']
1863     : 1------1--1----------0-----------
1863     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node3)']
1864     : -1------1--1---------0-----------
1864     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node3)']
1865     : 1-------1--1---------0-----------
1865     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node3)']
1866     : --1---1--------1-----0-----------
1866     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node3)']
1867     : -1----1--------1-----0-----------
1867     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~voted(node3)']
1868     : --1----1--------1----0-----------
1868     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node3)']
1869     : 1------1--------1----0-----------
1869     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~voted(node3)']
1870     : -1------1--------1---0-----------
1870     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node3)']
1871     : 1-------1--------1---0-----------
1871     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~voted(node3)']
1872     : --1---1--1------------0----------
1872     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node4)']
1873     : -1----1--1------------0----------
1873     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~voted(node4)']
1874     : --1----1--1-----------0----------
1874     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node4)']
1875     : 1------1--1-----------0----------
1875     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~voted(node4)']
1876     : -1------1--1----------0----------
1876     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node4)']
1877     : 1-------1--1----------0----------
1877     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~voted(node4)']
1878     : --1---1-----1---------0----------
1878     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node4)']
1879     : -1----1-----1---------0----------
1879     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~voted(node4)']
1880     : --1----1-----1--------0----------
1880     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node4)']
1881     : 1------1-----1--------0----------
1881     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~voted(node4)']
1882     : -1------1-----1-------0----------
1882     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node4)']
1883     : 1-------1-----1-------0----------
1883     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~voted(node4)']
1884     : --1------1--1-----0--------------
1884     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node0)']
1885     : -1-------1--1-----0--------------
1885     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node0)']
1886     : --1-------1--1----0--------------
1886     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node0)']
1887     : 1---------1--1----0--------------
1887     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node0)']
1888     : -1---------1--1---0--------------
1888     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node0)']
1889     : 1----------1--1---0--------------
1889     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node0)']
1890     : --1------1-----1--0--------------
1890     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node0)']
1891     : -1-------1-----1--0--------------
1891     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node0)']
1892     : --1-------1-----1-0--------------
1892     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node0)']
1893     : 1---------1-----1-0--------------
1893     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node0)']
1894     : -1---------1-----10--------------
1894     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node0)']
1895     : 1----------1-----10--------------
1895     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node0)']
1896     : --1------1--1------0-------------
1896     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node1)']
1897     : -1-------1--1------0-------------
1897     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node1)']
1898     : --1-------1--1-----0-------------
1898     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node1)']
1899     : 1---------1--1-----0-------------
1899     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node1)']
1900     : -1---------1--1----0-------------
1900     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node1)']
1901     : 1----------1--1----0-------------
1901     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node1)']
1902     : --1------1-----1---0-------------
1902     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node1)']
1903     : -1-------1-----1---0-------------
1903     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node1)']
1904     : --1-------1-----1--0-------------
1904     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node1)']
1905     : 1---------1-----1--0-------------
1905     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node1)']
1906     : -1---------1-----1-0-------------
1906     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node1)']
1907     : 1----------1-----1-0-------------
1907     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node1)']
1908     : --1------1-----1-----0-----------
1908     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node3)']
1909     : -1-------1-----1-----0-----------
1909     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~voted(node3)']
1910     : --1-------1-----1----0-----------
1910     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node3)']
1911     : 1---------1-----1----0-----------
1911     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~voted(node3)']
1912     : -1---------1-----1---0-----------
1912     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node3)']
1913     : 1----------1-----1---0-----------
1913     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~voted(node3)']
1914     : --1------1--1---------0----------
1914     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node4)']
1915     : -1-------1--1---------0----------
1915     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~voted(node4)']
1916     : --1-------1--1--------0----------
1916     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node4)']
1917     : 1---------1--1--------0----------
1917     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~voted(node4)']
1918     : -1---------1--1-------0----------
1918     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node4)']
1919     : 1----------1--1-------0----------
1919     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~voted(node4)']
1920     : --1---------1--1--0--------------
1920     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node0)']
1921     : -1----------1--1--0--------------
1921     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node0)']
1922     : --1----------1--1-0--------------
1922     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node0)']
1923     : 1------------1--1-0--------------
1923     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node0)']
1924     : -1------------1--10--------------
1924     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node0)']
1925     : 1-------------1--10--------------
1925     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node0)']
1926     : --1---------1--1---0-------------
1926     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node1)']
1927     : -1----------1--1---0-------------
1927     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node1)']
1928     : --1----------1--1--0-------------
1928     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node1)']
1929     : 1------------1--1--0-------------
1929     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node1)']
1930     : -1------------1--1-0-------------
1930     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node1)']
1931     : 1-------------1--1-0-------------
1931     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node1)']
1932     : --1---------1--1----0------------
1932     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node2)']
1933     : -1----------1--1----0------------
1933     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~voted(node2)']
1934     : --1----------1--1---0------------
1934     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node2)']
1935     : 1------------1--1---0------------
1935     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~voted(node2)']
1936     : -1------------1--1--0------------
1936     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node2)']
1937     : 1-------------1--1--0------------
1937     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~voted(node2)']
num_forall :   6
num_exists :   0
num_literals : 9
quantified form : forall NODE1,VALUE2,NODE0,NODE2,VALUE0,VALUE1. ~vote(NODE0,VALUE1) | voted(NODE2) | ~decided(VALUE0) | ~vote(NODE1,VALUE2) | (VALUE0 = VALUE1 | VALUE0 = VALUE2 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 15




=== Prime Orbit 9 =====================
size : 120
num_suborbits: 2
978 (*) : --11------1--------------------0-
978     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)']
979     : -1-1-------1-------------------0-
979     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)']
980     : --1-1----1---------------------0-
980     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)']
981     : 1---1------1-------------------0-
981     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)']
982     : -1---1---1---------------------0-
982     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)']
983     : 1----1----1--------------------0-
983     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)']
984     : --11---------1----------------0--
984     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)']
985     : -1-1----------1---------------0--
985     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)']
986     : --1-1-------1-----------------0--
986     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)']
987     : 1---1---------1---------------0--
987     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)']
988     : -1---1------1-----------------0--
988     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)']
989     : 1----1-------1----------------0--
989     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)']
990     : --11------------1------------0---
990     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)']
991     : -1-1-------------1-----------0---
991     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)']
992     : --1-1----------1-------------0---
992     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)']
993     : 1---1------------1-----------0---
993     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)']
994     : -1---1---------1-------------0---
994     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)']
995     : 1----1----------1------------0---
995     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)']
996     : --11---1------------------------0
996     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)']
997     : -1-1----1-----------------------0
997     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)']
998     : --1-1-1-------------------------0
998     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)']
999     : 1---1---1-----------------------0
999     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)']
1000     : -1---11-------------------------0
1000     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)']
1001     : 1----1-1------------------------0
1001     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)']
1002     : --1---1---1-----------------0----
1002     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)']
1003     : -1----1----1----------------0----
1003     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)']
1004     : --1----1-1------------------0----
1004     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)']
1005     : 1------1---1----------------0----
1005     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)']
1006     : -1------11------------------0----
1006     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)']
1007     : 1-------1-1-----------------0----
1007     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)']
1008     : --1---1------1-------------0-----
1008     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)']
1009     : -1----1-------1------------0-----
1009     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)']
1010     : --1----1----1--------------0-----
1010     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)']
1011     : 1------1------1------------0-----
1011     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)']
1012     : -1------1---1--------------0-----
1012     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)']
1013     : 1-------1----1-------------0-----
1013     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)']
1014     : --1---1---------1---------0------
1014     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)']
1015     : -1----1----------1--------0------
1015     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)']
1016     : --1----1-------1----------0------
1016     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)']
1017     : 1------1---------1--------0------
1017     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)']
1018     : -1------1------1----------0------
1018     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)']
1019     : 1-------1-------1---------0------
1019     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)']
1020     : --1------1---1-----------0-------
1020     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)']
1021     : -1-------1----1----------0-------
1021     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)']
1022     : --1-------1-1------------0-------
1022     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)']
1023     : 1---------1---1----------0-------
1023     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)']
1024     : -1---------11------------0-------
1024     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)']
1025     : 1----------1-1-----------0-------
1025     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)']
1026     : --1------1------1-------0--------
1026     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)']
1027     : -1-------1-------1------0--------
1027     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)']
1028     : --1-------1----1--------0--------
1028     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)']
1029     : 1---------1------1------0--------
1029     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)']
1030     : -1---------1---1--------0--------
1030     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)']
1031     : 1----------1----1-------0--------
1031     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)']
1032     : --1---------1---1------0---------
1032     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)']
1033     : -1----------1----1-----0---------
1033     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)']
1034     : --1----------1-1-------0---------
1034     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)']
1035     : 1------------1---1-----0---------
1035     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)']
1036     : -1------------11-------0---------
1036     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)']
1037     : 1-------------1-1------0---------
1037     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)']
1518 (*) : --11--------1-----------------0--
1518     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)']
1519     : -1-1--------1-----------------0--
1519     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)']
1520     : --1-1--------1----------------0--
1520     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)']
1521     : 1---1--------1----------------0--
1521     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)']
1522     : -1---1--------1---------------0--
1522     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)']
1523     : 1----1--------1---------------0--
1523     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)']
1524     : --11-----------1-------------0---
1524     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)']
1525     : -1-1-----------1-------------0---
1525     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)']
1526     : --1-1-----------1------------0---
1526     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)']
1527     : 1---1-----------1------------0---
1527     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)']
1528     : -1---1-----------1-----------0---
1528     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)']
1529     : 1----1-----------1-----------0---
1529     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)']
1530     : --11-----1---------------------0-
1530     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)']
1531     : -1-1-----1---------------------0-
1531     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)']
1532     : --1-1-----1--------------------0-
1532     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)']
1533     : 1---1-----1--------------------0-
1533     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)']
1534     : -1---1-----1-------------------0-
1534     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)']
1535     : 1----1-----1-------------------0-
1535     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)']
1536     : --11--1-------------------------0
1536     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)']
1537     : -1-1--1-------------------------0
1537     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)']
1538     : --1-1--1------------------------0
1538     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)']
1539     : 1---1--1------------------------0
1539     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)']
1540     : -1---1--1-----------------------0
1540     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)']
1541     : 1----1--1-----------------------0
1541     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)']
1542     : --1---1-----1--------------0-----
1542     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)']
1543     : -1----1-----1--------------0-----
1543     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)']
1544     : --1----1-----1-------------0-----
1544     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)']
1545     : 1------1-----1-------------0-----
1545     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)']
1546     : -1------1-----1------------0-----
1546     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)']
1547     : 1-------1-----1------------0-----
1547     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)']
1548     : --1---1--------1----------0------
1548     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)']
1549     : -1----1--------1----------0------
1549     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)']
1550     : --1----1--------1---------0------
1550     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)']
1551     : 1------1--------1---------0------
1551     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)']
1552     : -1------1--------1--------0------
1552     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)']
1553     : 1-------1--------1--------0------
1553     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)']
1554     : --1---1--1------------------0----
1554     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)']
1555     : -1----1--1------------------0----
1555     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)']
1556     : --1----1--1-----------------0----
1556     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)']
1557     : 1------1--1-----------------0----
1557     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)']
1558     : -1------1--1----------------0----
1558     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)']
1559     : 1-------1--1----------------0----
1559     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)']
1560     : --1------1--1------------0-------
1560     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)']
1561     : -1-------1--1------------0-------
1561     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)']
1562     : --1-------1--1-----------0-------
1562     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)']
1563     : 1---------1--1-----------0-------
1563     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)']
1564     : -1---------1--1----------0-------
1564     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)']
1565     : 1----------1--1----------0-------
1565     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)']
1566     : --1------1-----1--------0--------
1566     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)']
1567     : -1-------1-----1--------0--------
1567     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)']
1568     : --1-------1-----1-------0--------
1568     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)']
1569     : 1---------1-----1-------0--------
1569     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)']
1570     : -1---------1-----1------0--------
1570     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)']
1571     : 1----------1-----1------0--------
1571     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)']
1572     : --1---------1--1-------0---------
1572     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)']
1573     : -1----------1--1-------0---------
1573     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)']
1574     : --1----------1--1------0---------
1574     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)']
1575     : 1------------1--1------0---------
1575     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)']
1576     : -1------------1--1-----0---------
1576     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)']
1577     : 1-------------1--1-----0---------
1577     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)']
num_forall :   6
num_exists :   0
num_literals : 9
quantified form : forall NODE1,VALUE2,NODE0,VALUE1,VALUE0,QUORUM0. ~vote(NODE0,VALUE1) | ~decided(VALUE0) | voting_quorum = QUORUM0 | ~vote(NODE1,VALUE2) | (VALUE0 = VALUE1 | VALUE0 = VALUE2 | NODE0 = NODE1 | member(NODE1,QUORUM0) | member(NODE0,QUORUM0))
qcost : 15




=== Prime Orbit 10 =====================
size : 120
num_suborbits: 1
1038 (*) : --11-------0-------------------0-
1038     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value2)']
1039     : -1-1------0--------------------0-
1039     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value1)']
1040     : --1-1------0-------------------0-
1040     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value2)']
1041     : 1---1----0---------------------0-
1041     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value0)']
1042     : -1---1----0--------------------0-
1042     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value1)']
1043     : 1----1---0---------------------0-
1043     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value0)']
1044     : --11----------0---------------0--
1044     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value2)']
1045     : -1-1---------0----------------0--
1045     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value1)']
1046     : --1-1---------0---------------0--
1046     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value2)']
1047     : 1---1-------0-----------------0--
1047     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value0)']
1048     : -1---1-------0----------------0--
1048     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value1)']
1049     : 1----1------0-----------------0--
1049     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value0)']
1050     : --11-------------0-----------0---
1050     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value2)']
1051     : -1-1------------0------------0---
1051     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value1)']
1052     : --1-1------------0-----------0---
1052     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value2)']
1053     : 1---1----------0-------------0---
1053     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value0)']
1054     : -1---1----------0------------0---
1054     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value1)']
1055     : 1----1---------0-------------0---
1055     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value0)']
1056     : --11----0-----------------------0
1056     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value2)']
1057     : -1-1---0------------------------0
1057     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value1)']
1058     : --1-1---0-----------------------0
1058     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value2)']
1059     : 1---1-0-------------------------0
1059     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value0)']
1060     : -1---1-0------------------------0
1060     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value1)']
1061     : 1----10-------------------------0
1061     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value0)']
1062     : --1---1----0----------------0----
1062     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value2)']
1063     : -1----1---0-----------------0----
1063     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value1)']
1064     : --1----1---0----------------0----
1064     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value2)']
1065     : 1------1-0------------------0----
1065     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value0)']
1066     : -1------1-0-----------------0----
1066     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value1)']
1067     : 1-------10------------------0----
1067     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value0)']
1068     : --1---1-------0------------0-----
1068     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value2)']
1069     : -1----1------0-------------0-----
1069     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value1)']
1070     : --1----1------0------------0-----
1070     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value2)']
1071     : 1------1----0--------------0-----
1071     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value0)']
1072     : -1------1----0-------------0-----
1072     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value1)']
1073     : 1-------1---0--------------0-----
1073     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value0)']
1074     : --1---1----------0--------0------
1074     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value2)']
1075     : -1----1---------0---------0------
1075     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value1)']
1076     : --1----1---------0--------0------
1076     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value2)']
1077     : 1------1-------0----------0------
1077     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value0)']
1078     : -1------1-------0---------0------
1078     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value1)']
1079     : 1-------1------0----------0------
1079     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value0)']
1080     : --1--01-------------------------0
1080     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)']
1081     : -1--0-1-------------------------0
1081     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)']
1082     : --1--0-1------------------------0
1082     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)']
1083     : 1--0---1------------------------0
1083     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)']
1084     : -1--0---1-----------------------0
1084     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)']
1085     : 1--0----1-----------------------0
1085     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)']
1086     : --1-----01------------------0----
1086     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value2)']
1087     : -1-----0-1------------------0----
1087     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value1)']
1088     : --1-----0-1-----------------0----
1088     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value2)']
1089     : 1-----0---1-----------------0----
1089     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value0)']
1090     : -1-----0---1----------------0----
1090     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value1)']
1091     : 1-----0----1----------------0----
1091     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value0)']
1092     : --1------1----0----------0-------
1092     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value2)']
1093     : -1-------1---0-----------0-------
1093     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value1)']
1094     : --1-------1---0----------0-------
1094     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value2)']
1095     : 1---------1-0------------0-------
1095     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value0)']
1096     : -1---------1-0-----------0-------
1096     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value1)']
1097     : 1----------10------------0-------
1097     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value0)']
1098     : --1------1-------0------0--------
1098     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value2)']
1099     : -1-------1------0-------0--------
1099     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value1)']
1100     : --1-------1------0------0--------
1100     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value2)']
1101     : 1---------1----0--------0--------
1101     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value0)']
1102     : -1---------1----0-------0--------
1102     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value1)']
1103     : 1----------1---0--------0--------
1103     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value0)']
1104     : --1--0---1---------------------0-
1104     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value2)']
1105     : -1--0----1---------------------0-
1105     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value1)']
1106     : --1--0----1--------------------0-
1106     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value2)']
1107     : 1--0------1--------------------0-
1107     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value0)']
1108     : -1--0------1-------------------0-
1108     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value1)']
1109     : 1--0-------1-------------------0-
1109     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value0)']
1110     : --1-----0---1--------------0-----
1110     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value2)']
1111     : -1-----0----1--------------0-----
1111     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value1)']
1112     : --1-----0----1-------------0-----
1112     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value2)']
1113     : 1-----0------1-------------0-----
1113     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value0)']
1114     : -1-----0------1------------0-----
1114     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value1)']
1115     : 1-----0-------1------------0-----
1115     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value0)']
1116     : --1--------01------------0-------
1116     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value2)']
1117     : -1--------0-1------------0-------
1117     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value1)']
1118     : --1--------0-1-----------0-------
1118     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value2)']
1119     : 1--------0---1-----------0-------
1119     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value0)']
1120     : -1--------0---1----------0-------
1120     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value1)']
1121     : 1--------0----1----------0-------
1121     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value0)']
1122     : --1---------1----0-----0---------
1122     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value2)']
1123     : -1----------1---0------0---------
1123     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value1)']
1124     : --1----------1---0-----0---------
1124     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value2)']
1125     : 1------------1-0-------0---------
1125     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value0)']
1126     : -1------------1-0------0---------
1126     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value1)']
1127     : 1-------------10-------0---------
1127     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value0)']
1128     : --1--0------1-----------------0--
1128     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value2)']
1129     : -1--0-------1-----------------0--
1129     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value1)']
1130     : --1--0-------1----------------0--
1130     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value2)']
1131     : 1--0---------1----------------0--
1131     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value0)']
1132     : -1--0---------1---------------0--
1132     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value1)']
1133     : 1--0----------1---------------0--
1133     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value0)']
1134     : --1-----0------1----------0------
1134     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value2)']
1135     : -1-----0-------1----------0------
1135     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value1)']
1136     : --1-----0-------1---------0------
1136     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value2)']
1137     : 1-----0---------1---------0------
1137     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value0)']
1138     : -1-----0---------1--------0------
1138     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value1)']
1139     : 1-----0----------1--------0------
1139     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value0)']
1140     : --1--------0---1--------0--------
1140     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value2)']
1141     : -1--------0----1--------0--------
1141     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value1)']
1142     : --1--------0----1-------0--------
1142     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value2)']
1143     : 1--------0------1-------0--------
1143     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value0)']
1144     : -1--------0------1------0--------
1144     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value1)']
1145     : 1--------0-------1------0--------
1145     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value0)']
1146     : --1-----------01-------0---------
1146     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value2)']
1147     : -1-----------0-1-------0---------
1147     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value1)']
1148     : --1-----------0-1------0---------
1148     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value2)']
1149     : 1-----------0---1------0---------
1149     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value0)']
1150     : -1-----------0---1-----0---------
1150     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value1)']
1151     : 1-----------0----1-----0---------
1151     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value0)']
1152     : --1--0---------1-------------0---
1152     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value2)']
1153     : -1--0----------1-------------0---
1153     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value1)']
1154     : --1--0----------1------------0---
1154     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value2)']
1155     : 1--0------------1------------0---
1155     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value0)']
1156     : -1--0------------1-----------0---
1156     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value1)']
1157     : 1--0-------------1-----------0---
1157     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value0)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall NODE1,NODE0,VALUE0,VALUE1,QUORUM0. vote(NODE1,VALUE0) | ~vote(NODE0,VALUE1) | member(NODE0,QUORUM0) | member(NODE1,QUORUM0) | voting_quorum = QUORUM0 | ~decided(VALUE0) | (VALUE0 = VALUE1 | NODE0 = NODE1)
qcost : 13




=== Prime Orbit 11 =====================
size : 180
num_suborbits: 1
1158 (*) : --11-------0--0------------------
1158     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~vote(node3,value2)']
1159     : -1-1------0--0-------------------
1159     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~vote(node3,value1)']
1160     : --1-1------0--0------------------
1160     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~vote(node3,value2)']
1161     : 1---1----0--0--------------------
1161     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~vote(node3,value0)']
1162     : -1---1----0--0-------------------
1162     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~vote(node3,value1)']
1163     : 1----1---0--0--------------------
1163     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~vote(node3,value0)']
1164     : --11-------0-----0---------------
1164     : ['decided(value2)', 'vote(node0,value0)', '~vote(node2,value2)', '~vote(node4,value2)']
1165     : -1-1------0-----0----------------
1165     : ['decided(value1)', 'vote(node0,value0)', '~vote(node2,value1)', '~vote(node4,value1)']
1166     : --1-1------0-----0---------------
1166     : ['decided(value2)', 'vote(node0,value1)', '~vote(node2,value2)', '~vote(node4,value2)']
1167     : 1---1----0-----0-----------------
1167     : ['decided(value0)', 'vote(node0,value1)', '~vote(node2,value0)', '~vote(node4,value0)']
1168     : -1---1----0-----0----------------
1168     : ['decided(value1)', 'vote(node0,value2)', '~vote(node2,value1)', '~vote(node4,value1)']
1169     : 1----1---0-----0-----------------
1169     : ['decided(value0)', 'vote(node0,value2)', '~vote(node2,value0)', '~vote(node4,value0)']
1170     : --11----------0--0---------------
1170     : ['decided(value2)', 'vote(node0,value0)', '~vote(node3,value2)', '~vote(node4,value2)']
1171     : -1-1---------0--0----------------
1171     : ['decided(value1)', 'vote(node0,value0)', '~vote(node3,value1)', '~vote(node4,value1)']
1172     : --1-1---------0--0---------------
1172     : ['decided(value2)', 'vote(node0,value1)', '~vote(node3,value2)', '~vote(node4,value2)']
1173     : 1---1-------0--0-----------------
1173     : ['decided(value0)', 'vote(node0,value1)', '~vote(node3,value0)', '~vote(node4,value0)']
1174     : -1---1-------0--0----------------
1174     : ['decided(value1)', 'vote(node0,value2)', '~vote(node3,value1)', '~vote(node4,value1)']
1175     : 1----1------0--0-----------------
1175     : ['decided(value0)', 'vote(node0,value2)', '~vote(node3,value0)', '~vote(node4,value0)']
1176     : --11----0-----0------------------
1176     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~vote(node3,value2)']
1177     : -1-1---0-----0-------------------
1177     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~vote(node3,value1)']
1178     : --1-1---0-----0------------------
1178     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~vote(node3,value2)']
1179     : 1---1-0-----0--------------------
1179     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~vote(node3,value0)']
1180     : -1---1-0-----0-------------------
1180     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~vote(node3,value1)']
1181     : 1----10-----0--------------------
1181     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~vote(node3,value0)']
1182     : --11----0--------0---------------
1182     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~vote(node4,value2)']
1183     : -1-1---0--------0----------------
1183     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~vote(node4,value1)']
1184     : --1-1---0--------0---------------
1184     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~vote(node4,value2)']
1185     : 1---1-0--------0-----------------
1185     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~vote(node4,value0)']
1186     : -1---1-0--------0----------------
1186     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~vote(node4,value1)']
1187     : 1----10--------0-----------------
1187     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~vote(node4,value0)']
1188     : --11----0--0---------------------
1188     : ['decided(value2)', 'vote(node0,value0)', '~vote(node1,value2)', '~vote(node2,value2)']
1189     : -1-1---0--0----------------------
1189     : ['decided(value1)', 'vote(node0,value0)', '~vote(node1,value1)', '~vote(node2,value1)']
1190     : --1-1---0--0---------------------
1190     : ['decided(value2)', 'vote(node0,value1)', '~vote(node1,value2)', '~vote(node2,value2)']
1191     : 1---1-0--0-----------------------
1191     : ['decided(value0)', 'vote(node0,value1)', '~vote(node1,value0)', '~vote(node2,value0)']
1192     : -1---1-0--0----------------------
1192     : ['decided(value1)', 'vote(node0,value2)', '~vote(node1,value1)', '~vote(node2,value1)']
1193     : 1----10--0-----------------------
1193     : ['decided(value0)', 'vote(node0,value2)', '~vote(node1,value0)', '~vote(node2,value0)']
1194     : --1---1----0--0------------------
1194     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~vote(node3,value2)']
1195     : -1----1---0--0-------------------
1195     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~vote(node3,value1)']
1196     : --1----1---0--0------------------
1196     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~vote(node3,value2)']
1197     : 1------1-0--0--------------------
1197     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~vote(node3,value0)']
1198     : -1------1-0--0-------------------
1198     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~vote(node3,value1)']
1199     : 1-------10--0--------------------
1199     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~vote(node3,value0)']
1200     : --1---1----0-----0---------------
1200     : ['decided(value2)', 'vote(node1,value0)', '~vote(node2,value2)', '~vote(node4,value2)']
1201     : -1----1---0-----0----------------
1201     : ['decided(value1)', 'vote(node1,value0)', '~vote(node2,value1)', '~vote(node4,value1)']
1202     : --1----1---0-----0---------------
1202     : ['decided(value2)', 'vote(node1,value1)', '~vote(node2,value2)', '~vote(node4,value2)']
1203     : 1------1-0-----0-----------------
1203     : ['decided(value0)', 'vote(node1,value1)', '~vote(node2,value0)', '~vote(node4,value0)']
1204     : -1------1-0-----0----------------
1204     : ['decided(value1)', 'vote(node1,value2)', '~vote(node2,value1)', '~vote(node4,value1)']
1205     : 1-------10-----0-----------------
1205     : ['decided(value0)', 'vote(node1,value2)', '~vote(node2,value0)', '~vote(node4,value0)']
1206     : --1---1-------0--0---------------
1206     : ['decided(value2)', 'vote(node1,value0)', '~vote(node3,value2)', '~vote(node4,value2)']
1207     : -1----1------0--0----------------
1207     : ['decided(value1)', 'vote(node1,value0)', '~vote(node3,value1)', '~vote(node4,value1)']
1208     : --1----1------0--0---------------
1208     : ['decided(value2)', 'vote(node1,value1)', '~vote(node3,value2)', '~vote(node4,value2)']
1209     : 1------1----0--0-----------------
1209     : ['decided(value0)', 'vote(node1,value1)', '~vote(node3,value0)', '~vote(node4,value0)']
1210     : -1------1----0--0----------------
1210     : ['decided(value1)', 'vote(node1,value2)', '~vote(node3,value1)', '~vote(node4,value1)']
1211     : 1-------1---0--0-----------------
1211     : ['decided(value0)', 'vote(node1,value2)', '~vote(node3,value0)', '~vote(node4,value0)']
1212     : --1--01-------0------------------
1212     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~vote(node3,value2)']
1213     : -1--0-1------0-------------------
1213     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~vote(node3,value1)']
1214     : --1--0-1------0------------------
1214     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~vote(node3,value2)']
1215     : 1--0---1----0--------------------
1215     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~vote(node3,value0)']
1216     : -1--0---1----0-------------------
1216     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~vote(node3,value1)']
1217     : 1--0----1---0--------------------
1217     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~vote(node3,value0)']
1218     : --1--01----------0---------------
1218     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~vote(node4,value2)']
1219     : -1--0-1---------0----------------
1219     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~vote(node4,value1)']
1220     : --1--0-1---------0---------------
1220     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~vote(node4,value2)']
1221     : 1--0---1-------0-----------------
1221     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~vote(node4,value0)']
1222     : -1--0---1-------0----------------
1222     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~vote(node4,value1)']
1223     : 1--0----1------0-----------------
1223     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~vote(node4,value0)']
1224     : --1--01----0---------------------
1224     : ['decided(value2)', 'vote(node1,value0)', '~vote(node0,value2)', '~vote(node2,value2)']
1225     : -1--0-1---0----------------------
1225     : ['decided(value1)', 'vote(node1,value0)', '~vote(node0,value1)', '~vote(node2,value1)']
1226     : --1--0-1---0---------------------
1226     : ['decided(value2)', 'vote(node1,value1)', '~vote(node0,value2)', '~vote(node2,value2)']
1227     : 1--0---1-0-----------------------
1227     : ['decided(value0)', 'vote(node1,value1)', '~vote(node0,value0)', '~vote(node2,value0)']
1228     : -1--0---1-0----------------------
1228     : ['decided(value1)', 'vote(node1,value2)', '~vote(node0,value1)', '~vote(node2,value1)']
1229     : 1--0----10-----------------------
1229     : ['decided(value0)', 'vote(node1,value2)', '~vote(node0,value0)', '~vote(node2,value0)']
1230     : --1-----01----0------------------
1230     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~vote(node3,value2)']
1231     : -1-----0-1---0-------------------
1231     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~vote(node3,value1)']
1232     : --1-----0-1---0------------------
1232     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~vote(node3,value2)']
1233     : 1-----0---1-0--------------------
1233     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~vote(node3,value0)']
1234     : -1-----0---1-0-------------------
1234     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~vote(node3,value1)']
1235     : 1-----0----10--------------------
1235     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~vote(node3,value0)']
1236     : --1-----01-------0---------------
1236     : ['decided(value2)', 'vote(node2,value0)', '~vote(node1,value2)', '~vote(node4,value2)']
1237     : -1-----0-1------0----------------
1237     : ['decided(value1)', 'vote(node2,value0)', '~vote(node1,value1)', '~vote(node4,value1)']
1238     : --1-----0-1------0---------------
1238     : ['decided(value2)', 'vote(node2,value1)', '~vote(node1,value2)', '~vote(node4,value2)']
1239     : 1-----0---1----0-----------------
1239     : ['decided(value0)', 'vote(node2,value1)', '~vote(node1,value0)', '~vote(node4,value0)']
1240     : -1-----0---1----0----------------
1240     : ['decided(value1)', 'vote(node2,value2)', '~vote(node1,value1)', '~vote(node4,value1)']
1241     : 1-----0----1---0-----------------
1241     : ['decided(value0)', 'vote(node2,value2)', '~vote(node1,value0)', '~vote(node4,value0)']
1242     : --1------1----0--0---------------
1242     : ['decided(value2)', 'vote(node2,value0)', '~vote(node3,value2)', '~vote(node4,value2)']
1243     : -1-------1---0--0----------------
1243     : ['decided(value1)', 'vote(node2,value0)', '~vote(node3,value1)', '~vote(node4,value1)']
1244     : --1-------1---0--0---------------
1244     : ['decided(value2)', 'vote(node2,value1)', '~vote(node3,value2)', '~vote(node4,value2)']
1245     : 1---------1-0--0-----------------
1245     : ['decided(value0)', 'vote(node2,value1)', '~vote(node3,value0)', '~vote(node4,value0)']
1246     : -1---------1-0--0----------------
1246     : ['decided(value1)', 'vote(node2,value2)', '~vote(node3,value1)', '~vote(node4,value1)']
1247     : 1----------10--0-----------------
1247     : ['decided(value0)', 'vote(node2,value2)', '~vote(node3,value0)', '~vote(node4,value0)']
1248     : --1--0---1----0------------------
1248     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~vote(node3,value2)']
1249     : -1--0----1---0-------------------
1249     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~vote(node3,value1)']
1250     : --1--0----1---0------------------
1250     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~vote(node3,value2)']
1251     : 1--0------1-0--------------------
1251     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~vote(node3,value0)']
1252     : -1--0------1-0-------------------
1252     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~vote(node3,value1)']
1253     : 1--0-------10--------------------
1253     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~vote(node3,value0)']
1254     : --1--0---1-------0---------------
1254     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~vote(node4,value2)']
1255     : -1--0----1------0----------------
1255     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~vote(node4,value1)']
1256     : --1--0----1------0---------------
1256     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~vote(node4,value2)']
1257     : 1--0------1----0-----------------
1257     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~vote(node4,value0)']
1258     : -1--0------1----0----------------
1258     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~vote(node4,value1)']
1259     : 1--0-------1---0-----------------
1259     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~vote(node4,value0)']
1260     : --1--0--01-----------------------
1260     : ['decided(value2)', 'vote(node2,value0)', '~vote(node0,value2)', '~vote(node1,value2)']
1261     : -1--0--0-1-----------------------
1261     : ['decided(value1)', 'vote(node2,value0)', '~vote(node0,value1)', '~vote(node1,value1)']
1262     : --1--0--0-1----------------------
1262     : ['decided(value2)', 'vote(node2,value1)', '~vote(node0,value2)', '~vote(node1,value2)']
1263     : 1--0--0---1----------------------
1263     : ['decided(value0)', 'vote(node2,value1)', '~vote(node0,value0)', '~vote(node1,value0)']
1264     : -1--0--0---1---------------------
1264     : ['decided(value1)', 'vote(node2,value2)', '~vote(node0,value1)', '~vote(node1,value1)']
1265     : 1--0--0----1---------------------
1265     : ['decided(value0)', 'vote(node2,value2)', '~vote(node0,value0)', '~vote(node1,value0)']
1266     : --1-----0--01--------------------
1266     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~vote(node2,value2)']
1267     : -1-----0--0-1--------------------
1267     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~vote(node2,value1)']
1268     : --1-----0--0-1-------------------
1268     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~vote(node2,value2)']
1269     : 1-----0--0---1-------------------
1269     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~vote(node2,value0)']
1270     : -1-----0--0---1------------------
1270     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~vote(node2,value1)']
1271     : 1-----0--0----1------------------
1271     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~vote(node2,value0)']
1272     : --1-----0---1----0---------------
1272     : ['decided(value2)', 'vote(node3,value0)', '~vote(node1,value2)', '~vote(node4,value2)']
1273     : -1-----0----1---0----------------
1273     : ['decided(value1)', 'vote(node3,value0)', '~vote(node1,value1)', '~vote(node4,value1)']
1274     : --1-----0----1---0---------------
1274     : ['decided(value2)', 'vote(node3,value1)', '~vote(node1,value2)', '~vote(node4,value2)']
1275     : 1-----0------1-0-----------------
1275     : ['decided(value0)', 'vote(node3,value1)', '~vote(node1,value0)', '~vote(node4,value0)']
1276     : -1-----0------1-0----------------
1276     : ['decided(value1)', 'vote(node3,value2)', '~vote(node1,value1)', '~vote(node4,value1)']
1277     : 1-----0-------10-----------------
1277     : ['decided(value0)', 'vote(node3,value2)', '~vote(node1,value0)', '~vote(node4,value0)']
1278     : --1--------01----0---------------
1278     : ['decided(value2)', 'vote(node3,value0)', '~vote(node2,value2)', '~vote(node4,value2)']
1279     : -1--------0-1---0----------------
1279     : ['decided(value1)', 'vote(node3,value0)', '~vote(node2,value1)', '~vote(node4,value1)']
1280     : --1--------0-1---0---------------
1280     : ['decided(value2)', 'vote(node3,value1)', '~vote(node2,value2)', '~vote(node4,value2)']
1281     : 1--------0---1-0-----------------
1281     : ['decided(value0)', 'vote(node3,value1)', '~vote(node2,value0)', '~vote(node4,value0)']
1282     : -1--------0---1-0----------------
1282     : ['decided(value1)', 'vote(node3,value2)', '~vote(node2,value1)', '~vote(node4,value1)']
1283     : 1--------0----10-----------------
1283     : ['decided(value0)', 'vote(node3,value2)', '~vote(node2,value0)', '~vote(node4,value0)']
1284     : --1--0-----01--------------------
1284     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~vote(node2,value2)']
1285     : -1--0-----0-1--------------------
1285     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~vote(node2,value1)']
1286     : --1--0-----0-1-------------------
1286     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~vote(node2,value2)']
1287     : 1--0-----0---1-------------------
1287     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~vote(node2,value0)']
1288     : -1--0-----0---1------------------
1288     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~vote(node2,value1)']
1289     : 1--0-----0----1------------------
1289     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~vote(node2,value0)']
1290     : --1--0------1----0---------------
1290     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~vote(node4,value2)']
1291     : -1--0-------1---0----------------
1291     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~vote(node4,value1)']
1292     : --1--0-------1---0---------------
1292     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~vote(node4,value2)']
1293     : 1--0---------1-0-----------------
1293     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~vote(node4,value0)']
1294     : -1--0---------1-0----------------
1294     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~vote(node4,value1)']
1295     : 1--0----------10-----------------
1295     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~vote(node4,value0)']
1296     : --1--0--0---1--------------------
1296     : ['decided(value2)', 'vote(node3,value0)', '~vote(node0,value2)', '~vote(node1,value2)']
1297     : -1--0--0----1--------------------
1297     : ['decided(value1)', 'vote(node3,value0)', '~vote(node0,value1)', '~vote(node1,value1)']
1298     : --1--0--0----1-------------------
1298     : ['decided(value2)', 'vote(node3,value1)', '~vote(node0,value2)', '~vote(node1,value2)']
1299     : 1--0--0------1-------------------
1299     : ['decided(value0)', 'vote(node3,value1)', '~vote(node0,value0)', '~vote(node1,value0)']
1300     : -1--0--0------1------------------
1300     : ['decided(value1)', 'vote(node3,value2)', '~vote(node0,value1)', '~vote(node1,value1)']
1301     : 1--0--0-------1------------------
1301     : ['decided(value0)', 'vote(node3,value2)', '~vote(node0,value0)', '~vote(node1,value0)']
1302     : --1-----0--0---1-----------------
1302     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~vote(node2,value2)']
1303     : -1-----0--0----1-----------------
1303     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~vote(node2,value1)']
1304     : --1-----0--0----1----------------
1304     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~vote(node2,value2)']
1305     : 1-----0--0------1----------------
1305     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~vote(node2,value0)']
1306     : -1-----0--0------1---------------
1306     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~vote(node2,value1)']
1307     : 1-----0--0-------1---------------
1307     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~vote(node2,value0)']
1308     : --1-----0-----01-----------------
1308     : ['decided(value2)', 'vote(node4,value0)', '~vote(node1,value2)', '~vote(node3,value2)']
1309     : -1-----0-----0-1-----------------
1309     : ['decided(value1)', 'vote(node4,value0)', '~vote(node1,value1)', '~vote(node3,value1)']
1310     : --1-----0-----0-1----------------
1310     : ['decided(value2)', 'vote(node4,value1)', '~vote(node1,value2)', '~vote(node3,value2)']
1311     : 1-----0-----0---1----------------
1311     : ['decided(value0)', 'vote(node4,value1)', '~vote(node1,value0)', '~vote(node3,value0)']
1312     : -1-----0-----0---1---------------
1312     : ['decided(value1)', 'vote(node4,value2)', '~vote(node1,value1)', '~vote(node3,value1)']
1313     : 1-----0-----0----1---------------
1313     : ['decided(value0)', 'vote(node4,value2)', '~vote(node1,value0)', '~vote(node3,value0)']
1314     : --1--------0--01-----------------
1314     : ['decided(value2)', 'vote(node4,value0)', '~vote(node2,value2)', '~vote(node3,value2)']
1315     : -1--------0--0-1-----------------
1315     : ['decided(value1)', 'vote(node4,value0)', '~vote(node2,value1)', '~vote(node3,value1)']
1316     : --1--------0--0-1----------------
1316     : ['decided(value2)', 'vote(node4,value1)', '~vote(node2,value2)', '~vote(node3,value2)']
1317     : 1--------0--0---1----------------
1317     : ['decided(value0)', 'vote(node4,value1)', '~vote(node2,value0)', '~vote(node3,value0)']
1318     : -1--------0--0---1---------------
1318     : ['decided(value1)', 'vote(node4,value2)', '~vote(node2,value1)', '~vote(node3,value1)']
1319     : 1--------0--0----1---------------
1319     : ['decided(value0)', 'vote(node4,value2)', '~vote(node2,value0)', '~vote(node3,value0)']
1320     : --1--0-----0---1-----------------
1320     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~vote(node2,value2)']
1321     : -1--0-----0----1-----------------
1321     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~vote(node2,value1)']
1322     : --1--0-----0----1----------------
1322     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~vote(node2,value2)']
1323     : 1--0-----0------1----------------
1323     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~vote(node2,value0)']
1324     : -1--0-----0------1---------------
1324     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~vote(node2,value1)']
1325     : 1--0-----0-------1---------------
1325     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~vote(node2,value0)']
1326     : --1--0--------01-----------------
1326     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~vote(node3,value2)']
1327     : -1--0--------0-1-----------------
1327     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~vote(node3,value1)']
1328     : --1--0--------0-1----------------
1328     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~vote(node3,value2)']
1329     : 1--0--------0---1----------------
1329     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~vote(node3,value0)']
1330     : -1--0--------0---1---------------
1330     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~vote(node3,value1)']
1331     : 1--0--------0----1---------------
1331     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~vote(node3,value0)']
1332     : --1--0--0------1-----------------
1332     : ['decided(value2)', 'vote(node4,value0)', '~vote(node0,value2)', '~vote(node1,value2)']
1333     : -1--0--0-------1-----------------
1333     : ['decided(value1)', 'vote(node4,value0)', '~vote(node0,value1)', '~vote(node1,value1)']
1334     : --1--0--0-------1----------------
1334     : ['decided(value2)', 'vote(node4,value1)', '~vote(node0,value2)', '~vote(node1,value2)']
1335     : 1--0--0---------1----------------
1335     : ['decided(value0)', 'vote(node4,value1)', '~vote(node0,value0)', '~vote(node1,value0)']
1336     : -1--0--0---------1---------------
1336     : ['decided(value1)', 'vote(node4,value2)', '~vote(node0,value1)', '~vote(node1,value1)']
1337     : 1--0--0----------1---------------
1337     : ['decided(value0)', 'vote(node4,value2)', '~vote(node0,value0)', '~vote(node1,value0)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall NODE1,NODE0,NODE2,VALUE0,VALUE1. ~vote(NODE0,VALUE1) | vote(NODE2,VALUE0) | ~decided(VALUE0) | vote(NODE1,VALUE0) | (VALUE0 = VALUE1 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 13




=== Prime Orbit 12 =====================
size : 360
num_suborbits: 2
1338 (*) : --11------1---0------------------
1338     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~vote(node3,value2)']
1339     : -1-1-------1-0-------------------
1339     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~vote(node3,value1)']
1340     : --1-1----1----0------------------
1340     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~vote(node3,value2)']
1341     : 1---1------10--------------------
1341     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~vote(node3,value0)']
1342     : -1---1---1---0-------------------
1342     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~vote(node3,value1)']
1343     : 1----1----1-0--------------------
1343     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~vote(node3,value0)']
1344     : --11------1------0---------------
1344     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~vote(node4,value2)']
1345     : -1-1-------1----0----------------
1345     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~vote(node4,value1)']
1346     : --1-1----1-------0---------------
1346     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~vote(node4,value2)']
1347     : 1---1------1---0-----------------
1347     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~vote(node4,value0)']
1348     : -1---1---1------0----------------
1348     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~vote(node4,value1)']
1349     : 1----1----1----0-----------------
1349     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~vote(node4,value0)']
1350     : --11-------0-1-------------------
1350     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~vote(node2,value2)']
1351     : -1-1------0---1------------------
1351     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~vote(node2,value1)']
1352     : --1-1------01--------------------
1352     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~vote(node2,value2)']
1353     : 1---1----0----1------------------
1353     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~vote(node2,value0)']
1354     : -1---1----0-1--------------------
1354     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~vote(node2,value1)']
1355     : 1----1---0---1-------------------
1355     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~vote(node2,value0)']
1356     : --11---------1---0---------------
1356     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~vote(node4,value2)']
1357     : -1-1----------1-0----------------
1357     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~vote(node4,value1)']
1358     : --1-1-------1----0---------------
1358     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~vote(node4,value2)']
1359     : 1---1---------10-----------------
1359     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~vote(node4,value0)']
1360     : -1---1------1---0----------------
1360     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~vote(node4,value1)']
1361     : 1----1-------1-0-----------------
1361     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~vote(node4,value0)']
1362     : --11-------0----1----------------
1362     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~vote(node2,value2)']
1363     : -1-1------0------1---------------
1363     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~vote(node2,value1)']
1364     : --1-1------0---1-----------------
1364     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~vote(node2,value2)']
1365     : 1---1----0-------1---------------
1365     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~vote(node2,value0)']
1366     : -1---1----0----1-----------------
1366     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~vote(node2,value1)']
1367     : 1----1---0------1----------------
1367     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~vote(node2,value0)']
1368     : --11----------0-1----------------
1368     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~vote(node3,value2)']
1369     : -1-1---------0---1---------------
1369     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~vote(node3,value1)']
1370     : --1-1---------01-----------------
1370     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~vote(node3,value2)']
1371     : 1---1-------0----1---------------
1371     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~vote(node3,value0)']
1372     : -1---1-------0-1-----------------
1372     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~vote(node3,value1)']
1373     : 1----1------0---1----------------
1373     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~vote(node3,value0)']
1374     : --11---1------0------------------
1374     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~vote(node3,value2)']
1375     : -1-1----1----0-------------------
1375     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~vote(node3,value1)']
1376     : --1-1-1-------0------------------
1376     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~vote(node3,value2)']
1377     : 1---1---1---0--------------------
1377     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~vote(node3,value0)']
1378     : -1---11------0-------------------
1378     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~vote(node3,value1)']
1379     : 1----1-1----0--------------------
1379     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~vote(node3,value0)']
1380     : --11---1---------0---------------
1380     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~vote(node4,value2)']
1381     : -1-1----1-------0----------------
1381     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~vote(node4,value1)']
1382     : --1-1-1----------0---------------
1382     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~vote(node4,value2)']
1383     : 1---1---1------0-----------------
1383     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~vote(node4,value0)']
1384     : -1---11---------0----------------
1384     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~vote(node4,value1)']
1385     : 1----1-1-------0-----------------
1385     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~vote(node4,value0)']
1386     : --11----0----1-------------------
1386     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', '~vote(node1,value2)']
1387     : -1-1---0------1------------------
1387     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', '~vote(node1,value1)']
1388     : --1-1---0---1--------------------
1388     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', '~vote(node1,value2)']
1389     : 1---1-0-------1------------------
1389     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', '~vote(node1,value0)']
1390     : -1---1-0----1--------------------
1390     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', '~vote(node1,value1)']
1391     : 1----10------1-------------------
1391     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', '~vote(node1,value0)']
1392     : --11----0-------1----------------
1392     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value1)', '~vote(node1,value2)']
1393     : -1-1---0---------1---------------
1393     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value2)', '~vote(node1,value1)']
1394     : --1-1---0------1-----------------
1394     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value0)', '~vote(node1,value2)']
1395     : 1---1-0----------1---------------
1395     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value2)', '~vote(node1,value0)']
1396     : -1---1-0-------1-----------------
1396     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value0)', '~vote(node1,value1)']
1397     : 1----10---------1----------------
1397     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value1)', '~vote(node1,value0)']
1398     : --11---1---0---------------------
1398     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', '~vote(node2,value2)']
1399     : -1-1----1-0----------------------
1399     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', '~vote(node2,value1)']
1400     : --1-1-1----0---------------------
1400     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', '~vote(node2,value2)']
1401     : 1---1---10-----------------------
1401     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', '~vote(node2,value0)']
1402     : -1---11---0----------------------
1402     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', '~vote(node2,value1)']
1403     : 1----1-1-0-----------------------
1403     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', '~vote(node2,value0)']
1404     : --11----0-1----------------------
1404     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', '~vote(node1,value2)']
1405     : -1-1---0---1---------------------
1405     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', '~vote(node1,value1)']
1406     : --1-1---01-----------------------
1406     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', '~vote(node1,value2)']
1407     : 1---1-0----1---------------------
1407     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', '~vote(node1,value0)']
1408     : -1---1-0-1-----------------------
1408     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', '~vote(node1,value1)']
1409     : 1----10---1----------------------
1409     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', '~vote(node1,value0)']
1410     : --1---1---1---0------------------
1410     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~vote(node3,value2)']
1411     : -1----1----1-0-------------------
1411     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~vote(node3,value1)']
1412     : --1----1-1----0------------------
1412     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~vote(node3,value2)']
1413     : 1------1---10--------------------
1413     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~vote(node3,value0)']
1414     : -1------11---0-------------------
1414     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~vote(node3,value1)']
1415     : 1-------1-1-0--------------------
1415     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~vote(node3,value0)']
1416     : --1---1---1------0---------------
1416     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~vote(node4,value2)']
1417     : -1----1----1----0----------------
1417     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~vote(node4,value1)']
1418     : --1----1-1-------0---------------
1418     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~vote(node4,value2)']
1419     : 1------1---1---0-----------------
1419     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~vote(node4,value0)']
1420     : -1------11------0----------------
1420     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~vote(node4,value1)']
1421     : 1-------1-1----0-----------------
1421     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~vote(node4,value0)']
1422     : --1---1----0-1-------------------
1422     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~vote(node2,value2)']
1423     : -1----1---0---1------------------
1423     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~vote(node2,value1)']
1424     : --1----1---01--------------------
1424     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~vote(node2,value2)']
1425     : 1------1-0----1------------------
1425     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~vote(node2,value0)']
1426     : -1------1-0-1--------------------
1426     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~vote(node2,value1)']
1427     : 1-------10---1-------------------
1427     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~vote(node2,value0)']
1428     : --1---1------1---0---------------
1428     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~vote(node4,value2)']
1429     : -1----1-------1-0----------------
1429     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~vote(node4,value1)']
1430     : --1----1----1----0---------------
1430     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~vote(node4,value2)']
1431     : 1------1------10-----------------
1431     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~vote(node4,value0)']
1432     : -1------1---1---0----------------
1432     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~vote(node4,value1)']
1433     : 1-------1----1-0-----------------
1433     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~vote(node4,value0)']
1434     : --1---1----0----1----------------
1434     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~vote(node2,value2)']
1435     : -1----1---0------1---------------
1435     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~vote(node2,value1)']
1436     : --1----1---0---1-----------------
1436     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~vote(node2,value2)']
1437     : 1------1-0-------1---------------
1437     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~vote(node2,value0)']
1438     : -1------1-0----1-----------------
1438     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~vote(node2,value1)']
1439     : 1-------10------1----------------
1439     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~vote(node2,value0)']
1440     : --1---1-------0-1----------------
1440     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~vote(node3,value2)']
1441     : -1----1------0---1---------------
1441     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~vote(node3,value1)']
1442     : --1----1------01-----------------
1442     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~vote(node3,value2)']
1443     : 1------1----0----1---------------
1443     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~vote(node3,value0)']
1444     : -1------1----0-1-----------------
1444     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~vote(node3,value1)']
1445     : 1-------1---0---1----------------
1445     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~vote(node3,value0)']
1446     : --1--01------1-------------------
1446     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', '~vote(node0,value2)']
1447     : -1--0-1-------1------------------
1447     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', '~vote(node0,value1)']
1448     : --1--0-1----1--------------------
1448     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', '~vote(node0,value2)']
1449     : 1--0---1------1------------------
1449     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', '~vote(node0,value0)']
1450     : -1--0---1---1--------------------
1450     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', '~vote(node0,value1)']
1451     : 1--0----1----1-------------------
1451     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', '~vote(node0,value0)']
1452     : --1--01---------1----------------
1452     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value1)', '~vote(node0,value2)']
1453     : -1--0-1----------1---------------
1453     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value2)', '~vote(node0,value1)']
1454     : --1--0-1-------1-----------------
1454     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value0)', '~vote(node0,value2)']
1455     : 1--0---1---------1---------------
1455     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value2)', '~vote(node0,value0)']
1456     : -1--0---1------1-----------------
1456     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value0)', '~vote(node0,value1)']
1457     : 1--0----1-------1----------------
1457     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value1)', '~vote(node0,value0)']
1458     : --1--01---1----------------------
1458     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', '~vote(node0,value2)']
1459     : -1--0-1----1---------------------
1459     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', '~vote(node0,value1)']
1460     : --1--0-1-1-----------------------
1460     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', '~vote(node0,value2)']
1461     : 1--0---1---1---------------------
1461     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', '~vote(node0,value0)']
1462     : -1--0---11-----------------------
1462     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', '~vote(node0,value1)']
1463     : 1--0----1-1----------------------
1463     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', '~vote(node0,value0)']
1464     : --1-----01---1-------------------
1464     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~vote(node1,value2)']
1465     : -1-----0-1----1------------------
1465     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~vote(node1,value1)']
1466     : --1-----0-1-1--------------------
1466     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~vote(node1,value2)']
1467     : 1-----0---1---1------------------
1467     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~vote(node1,value0)']
1468     : -1-----0---11--------------------
1468     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~vote(node1,value1)']
1469     : 1-----0----1-1-------------------
1469     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~vote(node1,value0)']
1470     : --1------1---1---0---------------
1470     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~vote(node4,value2)']
1471     : -1-------1----1-0----------------
1471     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~vote(node4,value1)']
1472     : --1-------1-1----0---------------
1472     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~vote(node4,value2)']
1473     : 1---------1---10-----------------
1473     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~vote(node4,value0)']
1474     : -1---------11---0----------------
1474     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~vote(node4,value1)']
1475     : 1----------1-1-0-----------------
1475     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~vote(node4,value0)']
1476     : --1-----01------1----------------
1476     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~vote(node1,value2)']
1477     : -1-----0-1-------1---------------
1477     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~vote(node1,value1)']
1478     : --1-----0-1----1-----------------
1478     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~vote(node1,value2)']
1479     : 1-----0---1------1---------------
1479     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~vote(node1,value0)']
1480     : -1-----0---1---1-----------------
1480     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~vote(node1,value1)']
1481     : 1-----0----1----1----------------
1481     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~vote(node1,value0)']
1482     : --1------1----0-1----------------
1482     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~vote(node3,value2)']
1483     : -1-------1---0---1---------------
1483     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~vote(node3,value1)']
1484     : --1-------1---01-----------------
1484     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~vote(node3,value2)']
1485     : 1---------1-0----1---------------
1485     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~vote(node3,value0)']
1486     : -1---------1-0-1-----------------
1486     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~vote(node3,value1)']
1487     : 1----------10---1----------------
1487     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~vote(node3,value0)']
1488     : --1--0---1---1-------------------
1488     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', '~vote(node0,value2)']
1489     : -1--0----1----1------------------
1489     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', '~vote(node0,value1)']
1490     : --1--0----1-1--------------------
1490     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', '~vote(node0,value2)']
1491     : 1--0------1---1------------------
1491     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', '~vote(node0,value0)']
1492     : -1--0------11--------------------
1492     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', '~vote(node0,value1)']
1493     : 1--0-------1-1-------------------
1493     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', '~vote(node0,value0)']
1494     : --1--0---1------1----------------
1494     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value1)', '~vote(node0,value2)']
1495     : -1--0----1-------1---------------
1495     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value2)', '~vote(node0,value1)']
1496     : --1--0----1----1-----------------
1496     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value0)', '~vote(node0,value2)']
1497     : 1--0------1------1---------------
1497     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value2)', '~vote(node0,value0)']
1498     : -1--0------1---1-----------------
1498     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value0)', '~vote(node0,value1)']
1499     : 1--0-------1----1----------------
1499     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value1)', '~vote(node0,value0)']
1500     : --1-----0---1---1----------------
1500     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~vote(node1,value2)']
1501     : -1-----0----1----1---------------
1501     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~vote(node1,value1)']
1502     : --1-----0----1-1-----------------
1502     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~vote(node1,value2)']
1503     : 1-----0------1---1---------------
1503     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~vote(node1,value0)']
1504     : -1-----0------11-----------------
1504     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~vote(node1,value1)']
1505     : 1-----0-------1-1----------------
1505     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~vote(node1,value0)']
1506     : --1--------01---1----------------
1506     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~vote(node2,value2)']
1507     : -1--------0-1----1---------------
1507     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~vote(node2,value1)']
1508     : --1--------0-1-1-----------------
1508     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~vote(node2,value2)']
1509     : 1--------0---1---1---------------
1509     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~vote(node2,value0)']
1510     : -1--------0---11-----------------
1510     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~vote(node2,value1)']
1511     : 1--------0----1-1----------------
1511     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~vote(node2,value0)']
1512     : --1--0------1---1----------------
1512     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value1)', '~vote(node0,value2)']
1513     : -1--0-------1----1---------------
1513     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value2)', '~vote(node0,value1)']
1514     : --1--0-------1-1-----------------
1514     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value0)', '~vote(node0,value2)']
1515     : 1--0---------1---1---------------
1515     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value2)', '~vote(node0,value0)']
1516     : -1--0---------11-----------------
1516     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value0)', '~vote(node0,value1)']
1517     : 1--0----------1-1----------------
1517     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value1)', '~vote(node0,value0)']
1578 (*) : --11-------01--------------------
1578     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node2,value2)']
1579     : -1-1------0-1--------------------
1579     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node2,value1)']
1580     : --1-1------0-1-------------------
1580     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node2,value2)']
1581     : 1---1----0---1-------------------
1581     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node2,value0)']
1582     : -1---1----0---1------------------
1582     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node2,value1)']
1583     : 1----1---0----1------------------
1583     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node2,value0)']
1584     : --11-------0---1-----------------
1584     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node2,value2)']
1585     : -1-1------0----1-----------------
1585     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node2,value1)']
1586     : --1-1------0----1----------------
1586     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node2,value2)']
1587     : 1---1----0------1----------------
1587     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node2,value0)']
1588     : -1---1----0------1---------------
1588     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node2,value1)']
1589     : 1----1---0-------1---------------
1589     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node2,value0)']
1590     : --11-----1----0------------------
1590     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node3,value2)']
1591     : -1-1-----1---0-------------------
1591     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node3,value1)']
1592     : --1-1-----1---0------------------
1592     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node3,value2)']
1593     : 1---1-----1-0--------------------
1593     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node3,value0)']
1594     : -1---1-----1-0-------------------
1594     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node3,value1)']
1595     : 1----1-----10--------------------
1595     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node3,value0)']
1596     : --11----------01-----------------
1596     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node3,value2)']
1597     : -1-1---------0-1-----------------
1597     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node3,value1)']
1598     : --1-1---------0-1----------------
1598     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node3,value2)']
1599     : 1---1-------0---1----------------
1599     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node3,value0)']
1600     : -1---1-------0---1---------------
1600     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node3,value1)']
1601     : 1----1------0----1---------------
1601     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node3,value0)']
1602     : --11-----1-------0---------------
1602     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node4,value2)']
1603     : -1-1-----1------0----------------
1603     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node4,value1)']
1604     : --1-1-----1------0---------------
1604     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node4,value2)']
1605     : 1---1-----1----0-----------------
1605     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node4,value0)']
1606     : -1---1-----1----0----------------
1606     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node4,value1)']
1607     : 1----1-----1---0-----------------
1607     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node4,value0)']
1608     : --11--------1----0---------------
1608     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node4,value2)']
1609     : -1-1--------1---0----------------
1609     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node4,value1)']
1610     : --1-1--------1---0---------------
1610     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node4,value2)']
1611     : 1---1--------1-0-----------------
1611     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node4,value0)']
1612     : -1---1--------1-0----------------
1612     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node4,value1)']
1613     : 1----1--------10-----------------
1613     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node4,value0)']
1614     : --11----0---1--------------------
1614     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node1,value2)']
1615     : -1-1---0----1--------------------
1615     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', '~vote(node1,value1)']
1616     : --1-1---0----1-------------------
1616     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node1,value2)']
1617     : 1---1-0------1-------------------
1617     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', '~vote(node1,value0)']
1618     : -1---1-0------1------------------
1618     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node1,value1)']
1619     : 1----10-------1------------------
1619     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', '~vote(node1,value0)']
1620     : --11----0------1-----------------
1620     : ['decided(value2)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node1,value2)']
1621     : -1-1---0-------1-----------------
1621     : ['decided(value1)', 'vote(node0,value0)', 'vote(node4,value0)', '~vote(node1,value1)']
1622     : --1-1---0-------1----------------
1622     : ['decided(value2)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node1,value2)']
1623     : 1---1-0---------1----------------
1623     : ['decided(value0)', 'vote(node0,value1)', 'vote(node4,value1)', '~vote(node1,value0)']
1624     : -1---1-0---------1---------------
1624     : ['decided(value1)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node1,value1)']
1625     : 1----10----------1---------------
1625     : ['decided(value0)', 'vote(node0,value2)', 'vote(node4,value2)', '~vote(node1,value0)']
1626     : --11--1-------0------------------
1626     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node3,value2)']
1627     : -1-1--1------0-------------------
1627     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node3,value1)']
1628     : --1-1--1------0------------------
1628     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node3,value2)']
1629     : 1---1--1----0--------------------
1629     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node3,value0)']
1630     : -1---1--1----0-------------------
1630     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node3,value1)']
1631     : 1----1--1---0--------------------
1631     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node3,value0)']
1632     : --11--1----------0---------------
1632     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node4,value2)']
1633     : -1-1--1---------0----------------
1633     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node4,value1)']
1634     : --1-1--1---------0---------------
1634     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node4,value2)']
1635     : 1---1--1-------0-----------------
1635     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node4,value0)']
1636     : -1---1--1-------0----------------
1636     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node4,value1)']
1637     : 1----1--1------0-----------------
1637     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node4,value0)']
1638     : --11----01-----------------------
1638     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node1,value2)']
1639     : -1-1---0-1-----------------------
1639     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', '~vote(node1,value1)']
1640     : --1-1---0-1----------------------
1640     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node1,value2)']
1641     : 1---1-0---1----------------------
1641     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', '~vote(node1,value0)']
1642     : -1---1-0---1---------------------
1642     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node1,value1)']
1643     : 1----10----1---------------------
1643     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', '~vote(node1,value0)']
1644     : --11--1----0---------------------
1644     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node2,value2)']
1645     : -1-1--1---0----------------------
1645     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', '~vote(node2,value1)']
1646     : --1-1--1---0---------------------
1646     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node2,value2)']
1647     : 1---1--1-0-----------------------
1647     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', '~vote(node2,value0)']
1648     : -1---1--1-0----------------------
1648     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node2,value1)']
1649     : 1----1--10-----------------------
1649     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', '~vote(node2,value0)']
1650     : --1---1----01--------------------
1650     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node2,value2)']
1651     : -1----1---0-1--------------------
1651     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node2,value1)']
1652     : --1----1---0-1-------------------
1652     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node2,value2)']
1653     : 1------1-0---1-------------------
1653     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node2,value0)']
1654     : -1------1-0---1------------------
1654     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node2,value1)']
1655     : 1-------10----1------------------
1655     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node2,value0)']
1656     : --1---1----0---1-----------------
1656     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node2,value2)']
1657     : -1----1---0----1-----------------
1657     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node2,value1)']
1658     : --1----1---0----1----------------
1658     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node2,value2)']
1659     : 1------1-0------1----------------
1659     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node2,value0)']
1660     : -1------1-0------1---------------
1660     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node2,value1)']
1661     : 1-------10-------1---------------
1661     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node2,value0)']
1662     : --1---1--1----0------------------
1662     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node3,value2)']
1663     : -1----1--1---0-------------------
1663     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node3,value1)']
1664     : --1----1--1---0------------------
1664     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node3,value2)']
1665     : 1------1--1-0--------------------
1665     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node3,value0)']
1666     : -1------1--1-0-------------------
1666     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node3,value1)']
1667     : 1-------1--10--------------------
1667     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node3,value0)']
1668     : --1---1-------01-----------------
1668     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node3,value2)']
1669     : -1----1------0-1-----------------
1669     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node3,value1)']
1670     : --1----1------0-1----------------
1670     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node3,value2)']
1671     : 1------1----0---1----------------
1671     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node3,value0)']
1672     : -1------1----0---1---------------
1672     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node3,value1)']
1673     : 1-------1---0----1---------------
1673     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node3,value0)']
1674     : --1---1--1-------0---------------
1674     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node4,value2)']
1675     : -1----1--1------0----------------
1675     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node4,value1)']
1676     : --1----1--1------0---------------
1676     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node4,value2)']
1677     : 1------1--1----0-----------------
1677     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node4,value0)']
1678     : -1------1--1----0----------------
1678     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node4,value1)']
1679     : 1-------1--1---0-----------------
1679     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node4,value0)']
1680     : --1---1-----1----0---------------
1680     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node4,value2)']
1681     : -1----1-----1---0----------------
1681     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node4,value1)']
1682     : --1----1-----1---0---------------
1682     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node4,value2)']
1683     : 1------1-----1-0-----------------
1683     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node4,value0)']
1684     : -1------1-----1-0----------------
1684     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node4,value1)']
1685     : 1-------1-----10-----------------
1685     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node4,value0)']
1686     : --1--01-----1--------------------
1686     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node0,value2)']
1687     : -1--0-1-----1--------------------
1687     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', '~vote(node0,value1)']
1688     : --1--0-1-----1-------------------
1688     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node0,value2)']
1689     : 1--0---1-----1-------------------
1689     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', '~vote(node0,value0)']
1690     : -1--0---1-----1------------------
1690     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node0,value1)']
1691     : 1--0----1-----1------------------
1691     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', '~vote(node0,value0)']
1692     : --1--01--------1-----------------
1692     : ['decided(value2)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node0,value2)']
1693     : -1--0-1--------1-----------------
1693     : ['decided(value1)', 'vote(node1,value0)', 'vote(node4,value0)', '~vote(node0,value1)']
1694     : --1--0-1--------1----------------
1694     : ['decided(value2)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node0,value2)']
1695     : 1--0---1--------1----------------
1695     : ['decided(value0)', 'vote(node1,value1)', 'vote(node4,value1)', '~vote(node0,value0)']
1696     : -1--0---1--------1---------------
1696     : ['decided(value1)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node0,value1)']
1697     : 1--0----1--------1---------------
1697     : ['decided(value0)', 'vote(node1,value2)', 'vote(node4,value2)', '~vote(node0,value0)']
1698     : --1--01--1-----------------------
1698     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node0,value2)']
1699     : -1--0-1--1-----------------------
1699     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', '~vote(node0,value1)']
1700     : --1--0-1--1----------------------
1700     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node0,value2)']
1701     : 1--0---1--1----------------------
1701     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', '~vote(node0,value0)']
1702     : -1--0---1--1---------------------
1702     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node0,value1)']
1703     : 1--0----1--1---------------------
1703     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', '~vote(node0,value0)']
1704     : --1-----01--1--------------------
1704     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node1,value2)']
1705     : -1-----0-1--1--------------------
1705     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node1,value1)']
1706     : --1-----0-1--1-------------------
1706     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node1,value2)']
1707     : 1-----0---1--1-------------------
1707     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node1,value0)']
1708     : -1-----0---1--1------------------
1708     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node1,value1)']
1709     : 1-----0----1--1------------------
1709     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node1,value0)']
1710     : --1-----01-----1-----------------
1710     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node1,value2)']
1711     : -1-----0-1-----1-----------------
1711     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node1,value1)']
1712     : --1-----0-1-----1----------------
1712     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node1,value2)']
1713     : 1-----0---1-----1----------------
1713     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node1,value0)']
1714     : -1-----0---1-----1---------------
1714     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node1,value1)']
1715     : 1-----0----1-----1---------------
1715     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node1,value0)']
1716     : --1------1----01-----------------
1716     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node3,value2)']
1717     : -1-------1---0-1-----------------
1717     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node3,value1)']
1718     : --1-------1---0-1----------------
1718     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node3,value2)']
1719     : 1---------1-0---1----------------
1719     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node3,value0)']
1720     : -1---------1-0---1---------------
1720     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node3,value1)']
1721     : 1----------10----1---------------
1721     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node3,value0)']
1722     : --1------1--1----0---------------
1722     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node4,value2)']
1723     : -1-------1--1---0----------------
1723     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node4,value1)']
1724     : --1-------1--1---0---------------
1724     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node4,value2)']
1725     : 1---------1--1-0-----------------
1725     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node4,value0)']
1726     : -1---------1--1-0----------------
1726     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node4,value1)']
1727     : 1----------1--10-----------------
1727     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node4,value0)']
1728     : --1--0---1--1--------------------
1728     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node0,value2)']
1729     : -1--0----1--1--------------------
1729     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', '~vote(node0,value1)']
1730     : --1--0----1--1-------------------
1730     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node0,value2)']
1731     : 1--0------1--1-------------------
1731     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', '~vote(node0,value0)']
1732     : -1--0------1--1------------------
1732     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node0,value1)']
1733     : 1--0-------1--1------------------
1733     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', '~vote(node0,value0)']
1734     : --1--0---1-----1-----------------
1734     : ['decided(value2)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node0,value2)']
1735     : -1--0----1-----1-----------------
1735     : ['decided(value1)', 'vote(node2,value0)', 'vote(node4,value0)', '~vote(node0,value1)']
1736     : --1--0----1-----1----------------
1736     : ['decided(value2)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node0,value2)']
1737     : 1--0------1-----1----------------
1737     : ['decided(value0)', 'vote(node2,value1)', 'vote(node4,value1)', '~vote(node0,value0)']
1738     : -1--0------1-----1---------------
1738     : ['decided(value1)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node0,value1)']
1739     : 1--0-------1-----1---------------
1739     : ['decided(value0)', 'vote(node2,value2)', 'vote(node4,value2)', '~vote(node0,value0)']
1740     : --1-----0---1--1-----------------
1740     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node1,value2)']
1741     : -1-----0----1--1-----------------
1741     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node1,value1)']
1742     : --1-----0----1--1----------------
1742     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node1,value2)']
1743     : 1-----0------1--1----------------
1743     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node1,value0)']
1744     : -1-----0------1--1---------------
1744     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node1,value1)']
1745     : 1-----0-------1--1---------------
1745     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node1,value0)']
1746     : --1--------01--1-----------------
1746     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node2,value2)']
1747     : -1--------0-1--1-----------------
1747     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node2,value1)']
1748     : --1--------0-1--1----------------
1748     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node2,value2)']
1749     : 1--------0---1--1----------------
1749     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node2,value0)']
1750     : -1--------0---1--1---------------
1750     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node2,value1)']
1751     : 1--------0----1--1---------------
1751     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node2,value0)']
1752     : --1--0------1--1-----------------
1752     : ['decided(value2)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node0,value2)']
1753     : -1--0-------1--1-----------------
1753     : ['decided(value1)', 'vote(node3,value0)', 'vote(node4,value0)', '~vote(node0,value1)']
1754     : --1--0-------1--1----------------
1754     : ['decided(value2)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node0,value2)']
1755     : 1--0---------1--1----------------
1755     : ['decided(value0)', 'vote(node3,value1)', 'vote(node4,value1)', '~vote(node0,value0)']
1756     : -1--0---------1--1---------------
1756     : ['decided(value1)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node0,value1)']
1757     : 1--0----------1--1---------------
1757     : ['decided(value0)', 'vote(node3,value2)', 'vote(node4,value2)', '~vote(node0,value0)']
num_forall :   6
num_exists :   0
num_literals : 9
quantified form : forall NODE1,VALUE2,NODE0,NODE2,VALUE0,VALUE1. ~vote(NODE0,VALUE1) | vote(NODE2,VALUE0) | ~decided(VALUE0) | ~vote(NODE1,VALUE2) | (VALUE0 = VALUE1 | VALUE0 = VALUE2 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 15




=== Prime Orbit 13 =====================
size : 240
num_suborbits: 2
1938 (*) : --11------1-1--------------------
1938     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node3,value0)']
1939     : -1-1-------11--------------------
1939     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', 'vote(node3,value0)']
1940     : --1-1----1---1-------------------
1940     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', 'vote(node3,value1)']
1941     : 1---1------1-1-------------------
1941     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', 'vote(node3,value1)']
1942     : -1---1---1----1------------------
1942     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', 'vote(node3,value2)']
1943     : 1----1----1---1------------------
1943     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', 'vote(node3,value2)']
1944     : --11------1----1-----------------
1944     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node4,value0)']
1945     : -1-1-------1---1-----------------
1945     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', 'vote(node4,value0)']
1946     : --1-1----1------1----------------
1946     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', 'vote(node4,value1)']
1947     : 1---1------1----1----------------
1947     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', 'vote(node4,value1)']
1948     : -1---1---1-------1---------------
1948     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', 'vote(node4,value2)']
1949     : 1----1----1------1---------------
1949     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', 'vote(node4,value2)']
1950     : --11-----1---1-------------------
1950     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node3,value1)']
1951     : -1-1-----1----1------------------
1951     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node3,value2)']
1952     : --1-1-----1-1--------------------
1952     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node3,value0)']
1953     : 1---1-----1---1------------------
1953     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node3,value2)']
1954     : -1---1-----11--------------------
1954     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node3,value0)']
1955     : 1----1-----1-1-------------------
1955     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node3,value1)']
1956     : --11---------1-1-----------------
1956     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', 'vote(node4,value0)']
1957     : -1-1----------11-----------------
1957     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', 'vote(node4,value0)']
1958     : --1-1-------1---1----------------
1958     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', 'vote(node4,value1)']
1959     : 1---1---------1-1----------------
1959     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', 'vote(node4,value1)']
1960     : -1---1------1----1---------------
1960     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', 'vote(node4,value2)']
1961     : 1----1-------1---1---------------
1961     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', 'vote(node4,value2)']
1962     : --11-----1------1----------------
1962     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node4,value1)']
1963     : -1-1-----1-------1---------------
1963     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node4,value2)']
1964     : --1-1-----1----1-----------------
1964     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node4,value0)']
1965     : 1---1-----1------1---------------
1965     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node4,value2)']
1966     : -1---1-----1---1-----------------
1966     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node4,value0)']
1967     : 1----1-----1----1----------------
1967     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node4,value1)']
1968     : --11--------1---1----------------
1968     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', 'vote(node4,value1)']
1969     : -1-1--------1----1---------------
1969     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', 'vote(node4,value2)']
1970     : --1-1--------1-1-----------------
1970     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', 'vote(node4,value0)']
1971     : 1---1--------1---1---------------
1971     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', 'vote(node4,value2)']
1972     : -1---1--------11-----------------
1972     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', 'vote(node4,value0)']
1973     : 1----1--------1-1----------------
1973     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', 'vote(node4,value1)']
1974     : --11---1----1--------------------
1974     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node3,value0)']
1975     : -1-1----1---1--------------------
1975     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node3,value0)']
1976     : --1-1-1------1-------------------
1976     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node3,value1)']
1977     : 1---1---1----1-------------------
1977     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node3,value1)']
1978     : -1---11-------1------------------
1978     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node3,value2)']
1979     : 1----1-1------1------------------
1979     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node3,value2)']
1980     : --11---1-------1-----------------
1980     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node4,value0)']
1981     : -1-1----1------1-----------------
1981     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node4,value0)']
1982     : --1-1-1---------1----------------
1982     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node4,value1)']
1983     : 1---1---1-------1----------------
1983     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node4,value1)']
1984     : -1---11----------1---------------
1984     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node4,value2)']
1985     : 1----1-1---------1---------------
1985     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node4,value2)']
1986     : --11--1------1-------------------
1986     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node3,value1)']
1987     : -1-1--1-------1------------------
1987     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node3,value2)']
1988     : --1-1--1----1--------------------
1988     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node3,value0)']
1989     : 1---1--1------1------------------
1989     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node3,value2)']
1990     : -1---1--1---1--------------------
1990     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node3,value0)']
1991     : 1----1--1----1-------------------
1991     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node3,value1)']
1992     : --11--1---------1----------------
1992     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node4,value1)']
1993     : -1-1--1----------1---------------
1993     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node4,value2)']
1994     : --1-1--1-------1-----------------
1994     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node4,value0)']
1995     : 1---1--1---------1---------------
1995     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node4,value2)']
1996     : -1---1--1------1-----------------
1996     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node4,value0)']
1997     : 1----1--1-------1----------------
1997     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node4,value1)']
1998     : --11---1-1-----------------------
1998     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node2,value0)']
1999     : -1-1----11-----------------------
1999     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node2,value0)']
2000     : --1-1-1---1----------------------
2000     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node2,value1)']
2001     : 1---1---1-1----------------------
2001     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node2,value1)']
2002     : -1---11----1---------------------
2002     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node2,value2)']
2003     : 1----1-1---1---------------------
2003     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node2,value2)']
2004     : --11--1---1----------------------
2004     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node2,value1)']
2005     : -1-1--1----1---------------------
2005     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node2,value2)']
2006     : --1-1--1-1-----------------------
2006     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node2,value0)']
2007     : 1---1--1---1---------------------
2007     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node2,value2)']
2008     : -1---1--11-----------------------
2008     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node2,value0)']
2009     : 1----1--1-1----------------------
2009     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node2,value1)']
2010     : --1---1---1-1--------------------
2010     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', 'vote(node3,value0)']
2011     : -1----1----11--------------------
2011     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', 'vote(node3,value0)']
2012     : --1----1-1---1-------------------
2012     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', 'vote(node3,value1)']
2013     : 1------1---1-1-------------------
2013     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', 'vote(node3,value1)']
2014     : -1------11----1------------------
2014     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node3,value2)']
2015     : 1-------1-1---1------------------
2015     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', 'vote(node3,value2)']
2016     : --1---1---1----1-----------------
2016     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', 'vote(node4,value0)']
2017     : -1----1----1---1-----------------
2017     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', 'vote(node4,value0)']
2018     : --1----1-1------1----------------
2018     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', 'vote(node4,value1)']
2019     : 1------1---1----1----------------
2019     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', 'vote(node4,value1)']
2020     : -1------11-------1---------------
2020     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node4,value2)']
2021     : 1-------1-1------1---------------
2021     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', 'vote(node4,value2)']
2022     : --1---1--1---1-------------------
2022     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node3,value1)']
2023     : -1----1--1----1------------------
2023     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node3,value2)']
2024     : --1----1--1-1--------------------
2024     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node3,value0)']
2025     : 1------1--1---1------------------
2025     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node3,value2)']
2026     : -1------1--11--------------------
2026     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node3,value0)']
2027     : 1-------1--1-1-------------------
2027     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node3,value1)']
2028     : --1---1------1-1-----------------
2028     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', 'vote(node4,value0)']
2029     : -1----1-------11-----------------
2029     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', 'vote(node4,value0)']
2030     : --1----1----1---1----------------
2030     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', 'vote(node4,value1)']
2031     : 1------1------1-1----------------
2031     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', 'vote(node4,value1)']
2032     : -1------1---1----1---------------
2032     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', 'vote(node4,value2)']
2033     : 1-------1----1---1---------------
2033     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', 'vote(node4,value2)']
2034     : --1---1--1------1----------------
2034     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node4,value1)']
2035     : -1----1--1-------1---------------
2035     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node4,value2)']
2036     : --1----1--1----1-----------------
2036     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node4,value0)']
2037     : 1------1--1------1---------------
2037     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node4,value2)']
2038     : -1------1--1---1-----------------
2038     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node4,value0)']
2039     : 1-------1--1----1----------------
2039     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node4,value1)']
2040     : --1---1-----1---1----------------
2040     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', 'vote(node4,value1)']
2041     : -1----1-----1----1---------------
2041     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', 'vote(node4,value2)']
2042     : --1----1-----1-1-----------------
2042     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', 'vote(node4,value0)']
2043     : 1------1-----1---1---------------
2043     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', 'vote(node4,value2)']
2044     : -1------1-----11-----------------
2044     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', 'vote(node4,value0)']
2045     : 1-------1-----1-1----------------
2045     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', 'vote(node4,value1)']
2046     : --1-1-1-----1--------------------
2046     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node3,value0)']
2047     : -1---11-----1--------------------
2047     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node3,value0)']
2048     : --11---1-----1-------------------
2048     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node3,value1)']
2049     : 1----1-1-----1-------------------
2049     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node3,value1)']
2050     : -1-1----1-----1------------------
2050     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node3,value2)']
2051     : 1---1---1-----1------------------
2051     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node3,value2)']
2052     : --1-1-1--------1-----------------
2052     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node4,value0)']
2053     : -1---11--------1-----------------
2053     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node4,value0)']
2054     : --11---1--------1----------------
2054     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node4,value1)']
2055     : 1----1-1--------1----------------
2055     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node4,value1)']
2056     : -1-1----1--------1---------------
2056     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node4,value2)']
2057     : 1---1---1--------1---------------
2057     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node4,value2)']
2058     : --1-1-1--1-----------------------
2058     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value0)', 'vote(node2,value0)']
2059     : -1---11--1-----------------------
2059     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node2,value0)']
2060     : --11---1--1----------------------
2060     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value1)', 'vote(node2,value1)']
2061     : 1----1-1--1----------------------
2061     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value1)', 'vote(node2,value1)']
2062     : -1-1----1--1---------------------
2062     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value2)', 'vote(node2,value2)']
2063     : 1---1---1--1---------------------
2063     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value2)', 'vote(node2,value2)']
2064     : --1----1-1--1--------------------
2064     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', 'vote(node3,value0)']
2065     : -1------11--1--------------------
2065     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node3,value0)']
2066     : --1---1---1--1-------------------
2066     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', 'vote(node3,value1)']
2067     : 1-------1-1--1-------------------
2067     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', 'vote(node3,value1)']
2068     : -1----1----1--1------------------
2068     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', 'vote(node3,value2)']
2069     : 1------1---1--1------------------
2069     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', 'vote(node3,value2)']
2070     : --1----1-1-----1-----------------
2070     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value0)', 'vote(node4,value0)']
2071     : -1------11-----1-----------------
2071     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node4,value0)']
2072     : --1---1---1-----1----------------
2072     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value1)', 'vote(node4,value1)']
2073     : 1-------1-1-----1----------------
2073     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value1)', 'vote(node4,value1)']
2074     : -1----1----1-----1---------------
2074     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value2)', 'vote(node4,value2)']
2075     : 1------1---1-----1---------------
2075     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value2)', 'vote(node4,value2)']
2076     : --1------1---1-1-----------------
2076     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', 'vote(node4,value0)']
2077     : -1-------1----11-----------------
2077     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', 'vote(node4,value0)']
2078     : --1-------1-1---1----------------
2078     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', 'vote(node4,value1)']
2079     : 1---------1---1-1----------------
2079     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', 'vote(node4,value1)']
2080     : -1---------11----1---------------
2080     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', 'vote(node4,value2)']
2081     : 1----------1-1---1---------------
2081     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', 'vote(node4,value2)']
2082     : --1------1--1---1----------------
2082     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', 'vote(node4,value1)']
2083     : -1-------1--1----1---------------
2083     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', 'vote(node4,value2)']
2084     : --1-------1--1-1-----------------
2084     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', 'vote(node4,value0)']
2085     : 1---------1--1---1---------------
2085     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', 'vote(node4,value2)']
2086     : -1---------1--11-----------------
2086     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', 'vote(node4,value0)']
2087     : 1----------1--1-1----------------
2087     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', 'vote(node4,value1)']
2088     : --1-1----1--1--------------------
2088     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', 'vote(node3,value0)']
2089     : -1---1---1--1--------------------
2089     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', 'vote(node3,value0)']
2090     : --11------1--1-------------------
2090     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node3,value1)']
2091     : 1----1----1--1-------------------
2091     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', 'vote(node3,value1)']
2092     : -1-1-------1--1------------------
2092     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', 'vote(node3,value2)']
2093     : 1---1------1--1------------------
2093     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', 'vote(node3,value2)']
2094     : --1-1----1-----1-----------------
2094     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value0)', 'vote(node4,value0)']
2095     : -1---1---1-----1-----------------
2095     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value0)', 'vote(node4,value0)']
2096     : --11------1-----1----------------
2096     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value1)', 'vote(node4,value1)']
2097     : 1----1----1-----1----------------
2097     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value1)', 'vote(node4,value1)']
2098     : -1-1-------1-----1---------------
2098     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value2)', 'vote(node4,value2)']
2099     : 1---1------1-----1---------------
2099     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value2)', 'vote(node4,value2)']
2100     : --1----1----1--1-----------------
2100     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value0)', 'vote(node4,value0)']
2101     : -1------1---1--1-----------------
2101     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value0)', 'vote(node4,value0)']
2102     : --1---1------1--1----------------
2102     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value1)', 'vote(node4,value1)']
2103     : 1-------1----1--1----------------
2103     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value1)', 'vote(node4,value1)']
2104     : -1----1-------1--1---------------
2104     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value2)', 'vote(node4,value2)']
2105     : 1------1------1--1---------------
2105     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value2)', 'vote(node4,value2)']
2106     : --1-------1-1--1-----------------
2106     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value0)', 'vote(node4,value0)']
2107     : -1---------11--1-----------------
2107     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value0)', 'vote(node4,value0)']
2108     : --1------1---1--1----------------
2108     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value1)', 'vote(node4,value1)']
2109     : 1----------1-1--1----------------
2109     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value1)', 'vote(node4,value1)']
2110     : -1-------1----1--1---------------
2110     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value2)', 'vote(node4,value2)']
2111     : 1---------1---1--1---------------
2111     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value2)', 'vote(node4,value2)']
2112     : --1-1-------1--1-----------------
2112     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value0)', 'vote(node4,value0)']
2113     : -1---1------1--1-----------------
2113     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value0)', 'vote(node4,value0)']
2114     : --11---------1--1----------------
2114     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value1)', 'vote(node4,value1)']
2115     : 1----1-------1--1----------------
2115     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value1)', 'vote(node4,value1)']
2116     : -1-1----------1--1---------------
2116     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value2)', 'vote(node4,value2)']
2117     : 1---1---------1--1---------------
2117     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value2)', 'vote(node4,value2)']
2418 (*) : --11--------1--1-----------------
2418     : ['decided(value2)', 'vote(node0,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2419     : -1-1--------1--1-----------------
2419     : ['decided(value1)', 'vote(node0,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2420     : --1-1--------1--1----------------
2420     : ['decided(value2)', 'vote(node0,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2421     : 1---1--------1--1----------------
2421     : ['decided(value0)', 'vote(node0,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2422     : -1---1--------1--1---------------
2422     : ['decided(value1)', 'vote(node0,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2423     : 1----1--------1--1---------------
2423     : ['decided(value0)', 'vote(node0,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2424     : --11-----1-----1-----------------
2424     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node4,value0)']
2425     : -1-1-----1-----1-----------------
2425     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node4,value0)']
2426     : --1-1-----1-----1----------------
2426     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node4,value1)']
2427     : 1---1-----1-----1----------------
2427     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node4,value1)']
2428     : -1---1-----1-----1---------------
2428     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node4,value2)']
2429     : 1----1-----1-----1---------------
2429     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node4,value2)']
2430     : --11-----1--1--------------------
2430     : ['decided(value2)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node3,value0)']
2431     : -1-1-----1--1--------------------
2431     : ['decided(value1)', 'vote(node0,value0)', 'vote(node2,value0)', 'vote(node3,value0)']
2432     : --1-1-----1--1-------------------
2432     : ['decided(value2)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node3,value1)']
2433     : 1---1-----1--1-------------------
2433     : ['decided(value0)', 'vote(node0,value1)', 'vote(node2,value1)', 'vote(node3,value1)']
2434     : -1---1-----1--1------------------
2434     : ['decided(value1)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node3,value2)']
2435     : 1----1-----1--1------------------
2435     : ['decided(value0)', 'vote(node0,value2)', 'vote(node2,value2)', 'vote(node3,value2)']
2436     : --11--1--------1-----------------
2436     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node4,value0)']
2437     : -1-1--1--------1-----------------
2437     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node4,value0)']
2438     : --1-1--1--------1----------------
2438     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node4,value1)']
2439     : 1---1--1--------1----------------
2439     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node4,value1)']
2440     : -1---1--1--------1---------------
2440     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node4,value2)']
2441     : 1----1--1--------1---------------
2441     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node4,value2)']
2442     : --11--1-----1--------------------
2442     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node3,value0)']
2443     : -1-1--1-----1--------------------
2443     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node3,value0)']
2444     : --1-1--1-----1-------------------
2444     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node3,value1)']
2445     : 1---1--1-----1-------------------
2445     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node3,value1)']
2446     : -1---1--1-----1------------------
2446     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node3,value2)']
2447     : 1----1--1-----1------------------
2447     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node3,value2)']
2448     : --11--1--1-----------------------
2448     : ['decided(value2)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node2,value0)']
2449     : -1-1--1--1-----------------------
2449     : ['decided(value1)', 'vote(node0,value0)', 'vote(node1,value0)', 'vote(node2,value0)']
2450     : --1-1--1--1----------------------
2450     : ['decided(value2)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node2,value1)']
2451     : 1---1--1--1----------------------
2451     : ['decided(value0)', 'vote(node0,value1)', 'vote(node1,value1)', 'vote(node2,value1)']
2452     : -1---1--1--1---------------------
2452     : ['decided(value1)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node2,value2)']
2453     : 1----1--1--1---------------------
2453     : ['decided(value0)', 'vote(node0,value2)', 'vote(node1,value2)', 'vote(node2,value2)']
2454     : --1---1-----1--1-----------------
2454     : ['decided(value2)', 'vote(node1,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2455     : -1----1-----1--1-----------------
2455     : ['decided(value1)', 'vote(node1,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2456     : --1----1-----1--1----------------
2456     : ['decided(value2)', 'vote(node1,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2457     : 1------1-----1--1----------------
2457     : ['decided(value0)', 'vote(node1,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2458     : -1------1-----1--1---------------
2458     : ['decided(value1)', 'vote(node1,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2459     : 1-------1-----1--1---------------
2459     : ['decided(value0)', 'vote(node1,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2460     : --1---1--1-----1-----------------
2460     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node4,value0)']
2461     : -1----1--1-----1-----------------
2461     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node4,value0)']
2462     : --1----1--1-----1----------------
2462     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node4,value1)']
2463     : 1------1--1-----1----------------
2463     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node4,value1)']
2464     : -1------1--1-----1---------------
2464     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node4,value2)']
2465     : 1-------1--1-----1---------------
2465     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node4,value2)']
2466     : --1---1--1--1--------------------
2466     : ['decided(value2)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node3,value0)']
2467     : -1----1--1--1--------------------
2467     : ['decided(value1)', 'vote(node1,value0)', 'vote(node2,value0)', 'vote(node3,value0)']
2468     : --1----1--1--1-------------------
2468     : ['decided(value2)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node3,value1)']
2469     : 1------1--1--1-------------------
2469     : ['decided(value0)', 'vote(node1,value1)', 'vote(node2,value1)', 'vote(node3,value1)']
2470     : -1------1--1--1------------------
2470     : ['decided(value1)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node3,value2)']
2471     : 1-------1--1--1------------------
2471     : ['decided(value0)', 'vote(node1,value2)', 'vote(node2,value2)', 'vote(node3,value2)']
2472     : --1------1--1--1-----------------
2472     : ['decided(value2)', 'vote(node2,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2473     : -1-------1--1--1-----------------
2473     : ['decided(value1)', 'vote(node2,value0)', 'vote(node3,value0)', 'vote(node4,value0)']
2474     : --1-------1--1--1----------------
2474     : ['decided(value2)', 'vote(node2,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2475     : 1---------1--1--1----------------
2475     : ['decided(value0)', 'vote(node2,value1)', 'vote(node3,value1)', 'vote(node4,value1)']
2476     : -1---------1--1--1---------------
2476     : ['decided(value1)', 'vote(node2,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
2477     : 1----------1--1--1---------------
2477     : ['decided(value0)', 'vote(node2,value2)', 'vote(node3,value2)', 'vote(node4,value2)']
num_forall :   6
num_exists :   0
num_literals : 9
quantified form : forall NODE1,VALUE2,NODE0,NODE2,VALUE0,VALUE1. ~vote(NODE0,VALUE1) | ~vote(NODE2,VALUE1) | ~decided(VALUE0) | ~vote(NODE1,VALUE2) | (VALUE0 = VALUE1 | VALUE0 = VALUE2 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 15




=== Prime Orbit 14 =====================
size : 120
num_suborbits: 1
2118 (*) : --11---------------0------------0
2118     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2119     : -1-1---------------0------------0
2119     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2120     : --1-1--------------0------------0
2120     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2121     : 1---1--------------0------------0
2121     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2122     : -1---1-------------0------------0
2122     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2123     : 1----1-------------0------------0
2123     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2124     : --11----------------0----------0-
2124     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2125     : -1-1----------------0----------0-
2125     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2126     : --1-1---------------0----------0-
2126     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2127     : 1---1---------------0----------0-
2127     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2128     : -1---1--------------0----------0-
2128     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2129     : 1----1--------------0----------0-
2129     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2130     : --11-----------------0--------0--
2130     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2131     : -1-1-----------------0--------0--
2131     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2132     : --1-1----------------0--------0--
2132     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2133     : 1---1----------------0--------0--
2133     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2134     : -1---1---------------0--------0--
2134     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2135     : 1----1---------------0--------0--
2135     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2136     : --11------------------0------0---
2136     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2137     : -1-1------------------0------0---
2137     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2138     : --1-1-----------------0------0---
2138     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2139     : 1---1-----------------0------0---
2139     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2140     : -1---1----------------0------0---
2140     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2141     : 1----1----------------0------0---
2141     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2142     : --1---1-----------0-------------0
2142     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2143     : -1----1-----------0-------------0
2143     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2144     : --1----1----------0-------------0
2144     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2145     : 1------1----------0-------------0
2145     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2146     : -1------1---------0-------------0
2146     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2147     : 1-------1---------0-------------0
2147     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2148     : --1---1-------------0-------0----
2148     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2149     : -1----1-------------0-------0----
2149     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2150     : --1----1------------0-------0----
2150     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2151     : 1------1------------0-------0----
2151     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2152     : -1------1-----------0-------0----
2152     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2153     : 1-------1-----------0-------0----
2153     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node2)']
2154     : --1---1--------------0-----0-----
2154     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2155     : -1----1--------------0-----0-----
2155     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2156     : --1----1-------------0-----0-----
2156     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2157     : 1------1-------------0-----0-----
2157     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2158     : -1------1------------0-----0-----
2158     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2159     : 1-------1------------0-----0-----
2159     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node3)']
2160     : --1---1---------------0---0------
2160     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2161     : -1----1---------------0---0------
2161     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2162     : --1----1--------------0---0------
2162     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2163     : 1------1--------------0---0------
2163     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2164     : -1------1-------------0---0------
2164     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2165     : 1-------1-------------0---0------
2165     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node4)']
2166     : --1------1--------0------------0-
2166     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2167     : -1-------1--------0------------0-
2167     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2168     : --1-------1-------0------------0-
2168     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2169     : 1---------1-------0------------0-
2169     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2170     : -1---------1------0------------0-
2170     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2171     : 1----------1------0------------0-
2171     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)']
2172     : --1------1---------0--------0----
2172     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2173     : -1-------1---------0--------0----
2173     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2174     : --1-------1--------0--------0----
2174     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2175     : 1---------1--------0--------0----
2175     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2176     : -1---------1-------0--------0----
2176     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2177     : 1----------1-------0--------0----
2177     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)']
2178     : --1------1-----------0---0-------
2178     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2179     : -1-------1-----------0---0-------
2179     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2180     : --1-------1----------0---0-------
2180     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2181     : 1---------1----------0---0-------
2181     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2182     : -1---------1---------0---0-------
2182     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2183     : 1----------1---------0---0-------
2183     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node3)']
2184     : --1------1------------0-0--------
2184     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2185     : -1-------1------------0-0--------
2185     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2186     : --1-------1-----------0-0--------
2186     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2187     : 1---------1-----------0-0--------
2187     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2188     : -1---------1----------0-0--------
2188     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2189     : 1----------1----------0-0--------
2189     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node4)']
2190     : --1---------1-----0-----------0--
2190     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2191     : -1----------1-----0-----------0--
2191     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2192     : --1----------1----0-----------0--
2192     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2193     : 1------------1----0-----------0--
2193     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2194     : -1------------1---0-----------0--
2194     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2195     : 1-------------1---0-----------0--
2195     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)']
2196     : --1---------1------0-------0-----
2196     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2197     : -1----------1------0-------0-----
2197     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2198     : --1----------1-----0-------0-----
2198     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2199     : 1------------1-----0-------0-----
2199     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2200     : -1------------1----0-------0-----
2200     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2201     : 1-------------1----0-------0-----
2201     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)']
2202     : --1---------1-------0----0-------
2202     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2203     : -1----------1-------0----0-------
2203     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2204     : --1----------1------0----0-------
2204     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2205     : 1------------1------0----0-------
2205     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2206     : -1------------1-----0----0-------
2206     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2207     : 1-------------1-----0----0-------
2207     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)']
2208     : --1---------1---------00---------
2208     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2209     : -1----------1---------00---------
2209     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2210     : --1----------1--------00---------
2210     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2211     : 1------------1--------00---------
2211     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2212     : -1------------1-------00---------
2212     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2213     : 1-------------1-------00---------
2213     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node4)']
2214     : --1------------1--0----------0---
2214     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2215     : -1-------------1--0----------0---
2215     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2216     : --1-------------1-0----------0---
2216     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2217     : 1---------------1-0----------0---
2217     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2218     : -1---------------10----------0---
2218     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2219     : 1----------------10----------0---
2219     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)']
2220     : --1------------1---0------0------
2220     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2221     : -1-------------1---0------0------
2221     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2222     : --1-------------1--0------0------
2222     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2223     : 1---------------1--0------0------
2223     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2224     : -1---------------1-0------0------
2224     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2225     : 1----------------1-0------0------
2225     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)']
2226     : --1------------1----0---0--------
2226     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2227     : -1-------------1----0---0--------
2227     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2228     : --1-------------1---0---0--------
2228     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2229     : 1---------------1---0---0--------
2229     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2230     : -1---------------1--0---0--------
2230     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2231     : 1----------------1--0---0--------
2231     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)']
2232     : --1------------1-----0-0---------
2232     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2233     : -1-------------1-----0-0---------
2233     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2234     : --1-------------1----0-0---------
2234     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2235     : 1---------------1----0-0---------
2235     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2236     : -1---------------1---0-0---------
2236     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
2237     : 1----------------1---0-0---------
2237     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall NODE1,NODE0,VALUE0,VALUE1,QUORUM0. ~vote(NODE0,VALUE1) | member(NODE0,QUORUM0) | member(NODE1,QUORUM0) | voting_quorum = QUORUM0 | ~decided(VALUE0) | voted(NODE1) | (VALUE0 = VALUE1 | NODE0 = NODE1)
qcost : 13




=== Prime Orbit 15 =====================
size : 180
num_suborbits: 1
2238 (*) : --11---------------0-0-----------
2238     : ['decided(value2)', 'vote(node0,value0)', '~voted(node1)', '~voted(node3)']
2239     : -1-1---------------0-0-----------
2239     : ['decided(value1)', 'vote(node0,value0)', '~voted(node1)', '~voted(node3)']
2240     : --1-1--------------0-0-----------
2240     : ['decided(value2)', 'vote(node0,value1)', '~voted(node1)', '~voted(node3)']
2241     : 1---1--------------0-0-----------
2241     : ['decided(value0)', 'vote(node0,value1)', '~voted(node1)', '~voted(node3)']
2242     : -1---1-------------0-0-----------
2242     : ['decided(value1)', 'vote(node0,value2)', '~voted(node1)', '~voted(node3)']
2243     : 1----1-------------0-0-----------
2243     : ['decided(value0)', 'vote(node0,value2)', '~voted(node1)', '~voted(node3)']
2244     : --11---------------0--0----------
2244     : ['decided(value2)', 'vote(node0,value0)', '~voted(node1)', '~voted(node4)']
2245     : -1-1---------------0--0----------
2245     : ['decided(value1)', 'vote(node0,value0)', '~voted(node1)', '~voted(node4)']
2246     : --1-1--------------0--0----------
2246     : ['decided(value2)', 'vote(node0,value1)', '~voted(node1)', '~voted(node4)']
2247     : 1---1--------------0--0----------
2247     : ['decided(value0)', 'vote(node0,value1)', '~voted(node1)', '~voted(node4)']
2248     : -1---1-------------0--0----------
2248     : ['decided(value1)', 'vote(node0,value2)', '~voted(node1)', '~voted(node4)']
2249     : 1----1-------------0--0----------
2249     : ['decided(value0)', 'vote(node0,value2)', '~voted(node1)', '~voted(node4)']
2250     : --11---------------00------------
2250     : ['decided(value2)', 'vote(node0,value0)', '~voted(node1)', '~voted(node2)']
2251     : -1-1---------------00------------
2251     : ['decided(value1)', 'vote(node0,value0)', '~voted(node1)', '~voted(node2)']
2252     : --1-1--------------00------------
2252     : ['decided(value2)', 'vote(node0,value1)', '~voted(node1)', '~voted(node2)']
2253     : 1---1--------------00------------
2253     : ['decided(value0)', 'vote(node0,value1)', '~voted(node1)', '~voted(node2)']
2254     : -1---1-------------00------------
2254     : ['decided(value1)', 'vote(node0,value2)', '~voted(node1)', '~voted(node2)']
2255     : 1----1-------------00------------
2255     : ['decided(value0)', 'vote(node0,value2)', '~voted(node1)', '~voted(node2)']
2256     : --11----------------00-----------
2256     : ['decided(value2)', 'vote(node0,value0)', '~voted(node2)', '~voted(node3)']
2257     : -1-1----------------00-----------
2257     : ['decided(value1)', 'vote(node0,value0)', '~voted(node2)', '~voted(node3)']
2258     : --1-1---------------00-----------
2258     : ['decided(value2)', 'vote(node0,value1)', '~voted(node2)', '~voted(node3)']
2259     : 1---1---------------00-----------
2259     : ['decided(value0)', 'vote(node0,value1)', '~voted(node2)', '~voted(node3)']
2260     : -1---1--------------00-----------
2260     : ['decided(value1)', 'vote(node0,value2)', '~voted(node2)', '~voted(node3)']
2261     : 1----1--------------00-----------
2261     : ['decided(value0)', 'vote(node0,value2)', '~voted(node2)', '~voted(node3)']
2262     : --11----------------0-0----------
2262     : ['decided(value2)', 'vote(node0,value0)', '~voted(node2)', '~voted(node4)']
2263     : -1-1----------------0-0----------
2263     : ['decided(value1)', 'vote(node0,value0)', '~voted(node2)', '~voted(node4)']
2264     : --1-1---------------0-0----------
2264     : ['decided(value2)', 'vote(node0,value1)', '~voted(node2)', '~voted(node4)']
2265     : 1---1---------------0-0----------
2265     : ['decided(value0)', 'vote(node0,value1)', '~voted(node2)', '~voted(node4)']
2266     : -1---1--------------0-0----------
2266     : ['decided(value1)', 'vote(node0,value2)', '~voted(node2)', '~voted(node4)']
2267     : 1----1--------------0-0----------
2267     : ['decided(value0)', 'vote(node0,value2)', '~voted(node2)', '~voted(node4)']
2268     : --11-----------------00----------
2268     : ['decided(value2)', 'vote(node0,value0)', '~voted(node3)', '~voted(node4)']
2269     : -1-1-----------------00----------
2269     : ['decided(value1)', 'vote(node0,value0)', '~voted(node3)', '~voted(node4)']
2270     : --1-1----------------00----------
2270     : ['decided(value2)', 'vote(node0,value1)', '~voted(node3)', '~voted(node4)']
2271     : 1---1----------------00----------
2271     : ['decided(value0)', 'vote(node0,value1)', '~voted(node3)', '~voted(node4)']
2272     : -1---1---------------00----------
2272     : ['decided(value1)', 'vote(node0,value2)', '~voted(node3)', '~voted(node4)']
2273     : 1----1---------------00----------
2273     : ['decided(value0)', 'vote(node0,value2)', '~voted(node3)', '~voted(node4)']
2274     : --1---1-----------0--0-----------
2274     : ['decided(value2)', 'vote(node1,value0)', '~voted(node0)', '~voted(node3)']
2275     : -1----1-----------0--0-----------
2275     : ['decided(value1)', 'vote(node1,value0)', '~voted(node0)', '~voted(node3)']
2276     : --1----1----------0--0-----------
2276     : ['decided(value2)', 'vote(node1,value1)', '~voted(node0)', '~voted(node3)']
2277     : 1------1----------0--0-----------
2277     : ['decided(value0)', 'vote(node1,value1)', '~voted(node0)', '~voted(node3)']
2278     : -1------1---------0--0-----------
2278     : ['decided(value1)', 'vote(node1,value2)', '~voted(node0)', '~voted(node3)']
2279     : 1-------1---------0--0-----------
2279     : ['decided(value0)', 'vote(node1,value2)', '~voted(node0)', '~voted(node3)']
2280     : --1---1-----------0---0----------
2280     : ['decided(value2)', 'vote(node1,value0)', '~voted(node0)', '~voted(node4)']
2281     : -1----1-----------0---0----------
2281     : ['decided(value1)', 'vote(node1,value0)', '~voted(node0)', '~voted(node4)']
2282     : --1----1----------0---0----------
2282     : ['decided(value2)', 'vote(node1,value1)', '~voted(node0)', '~voted(node4)']
2283     : 1------1----------0---0----------
2283     : ['decided(value0)', 'vote(node1,value1)', '~voted(node0)', '~voted(node4)']
2284     : -1------1---------0---0----------
2284     : ['decided(value1)', 'vote(node1,value2)', '~voted(node0)', '~voted(node4)']
2285     : 1-------1---------0---0----------
2285     : ['decided(value0)', 'vote(node1,value2)', '~voted(node0)', '~voted(node4)']
2286     : --1---1-----------0-0------------
2286     : ['decided(value2)', 'vote(node1,value0)', '~voted(node0)', '~voted(node2)']
2287     : -1----1-----------0-0------------
2287     : ['decided(value1)', 'vote(node1,value0)', '~voted(node0)', '~voted(node2)']
2288     : --1----1----------0-0------------
2288     : ['decided(value2)', 'vote(node1,value1)', '~voted(node0)', '~voted(node2)']
2289     : 1------1----------0-0------------
2289     : ['decided(value0)', 'vote(node1,value1)', '~voted(node0)', '~voted(node2)']
2290     : -1------1---------0-0------------
2290     : ['decided(value1)', 'vote(node1,value2)', '~voted(node0)', '~voted(node2)']
2291     : 1-------1---------0-0------------
2291     : ['decided(value0)', 'vote(node1,value2)', '~voted(node0)', '~voted(node2)']
2292     : --1---1-------------00-----------
2292     : ['decided(value2)', 'vote(node1,value0)', '~voted(node2)', '~voted(node3)']
2293     : -1----1-------------00-----------
2293     : ['decided(value1)', 'vote(node1,value0)', '~voted(node2)', '~voted(node3)']
2294     : --1----1------------00-----------
2294     : ['decided(value2)', 'vote(node1,value1)', '~voted(node2)', '~voted(node3)']
2295     : 1------1------------00-----------
2295     : ['decided(value0)', 'vote(node1,value1)', '~voted(node2)', '~voted(node3)']
2296     : -1------1-----------00-----------
2296     : ['decided(value1)', 'vote(node1,value2)', '~voted(node2)', '~voted(node3)']
2297     : 1-------1-----------00-----------
2297     : ['decided(value0)', 'vote(node1,value2)', '~voted(node2)', '~voted(node3)']
2298     : --1---1-------------0-0----------
2298     : ['decided(value2)', 'vote(node1,value0)', '~voted(node2)', '~voted(node4)']
2299     : -1----1-------------0-0----------
2299     : ['decided(value1)', 'vote(node1,value0)', '~voted(node2)', '~voted(node4)']
2300     : --1----1------------0-0----------
2300     : ['decided(value2)', 'vote(node1,value1)', '~voted(node2)', '~voted(node4)']
2301     : 1------1------------0-0----------
2301     : ['decided(value0)', 'vote(node1,value1)', '~voted(node2)', '~voted(node4)']
2302     : -1------1-----------0-0----------
2302     : ['decided(value1)', 'vote(node1,value2)', '~voted(node2)', '~voted(node4)']
2303     : 1-------1-----------0-0----------
2303     : ['decided(value0)', 'vote(node1,value2)', '~voted(node2)', '~voted(node4)']
2304     : --1---1--------------00----------
2304     : ['decided(value2)', 'vote(node1,value0)', '~voted(node3)', '~voted(node4)']
2305     : -1----1--------------00----------
2305     : ['decided(value1)', 'vote(node1,value0)', '~voted(node3)', '~voted(node4)']
2306     : --1----1-------------00----------
2306     : ['decided(value2)', 'vote(node1,value1)', '~voted(node3)', '~voted(node4)']
2307     : 1------1-------------00----------
2307     : ['decided(value0)', 'vote(node1,value1)', '~voted(node3)', '~voted(node4)']
2308     : -1------1------------00----------
2308     : ['decided(value1)', 'vote(node1,value2)', '~voted(node3)', '~voted(node4)']
2309     : 1-------1------------00----------
2309     : ['decided(value0)', 'vote(node1,value2)', '~voted(node3)', '~voted(node4)']
2310     : --1------1--------0--0-----------
2310     : ['decided(value2)', 'vote(node2,value0)', '~voted(node0)', '~voted(node3)']
2311     : -1-------1--------0--0-----------
2311     : ['decided(value1)', 'vote(node2,value0)', '~voted(node0)', '~voted(node3)']
2312     : --1-------1-------0--0-----------
2312     : ['decided(value2)', 'vote(node2,value1)', '~voted(node0)', '~voted(node3)']
2313     : 1---------1-------0--0-----------
2313     : ['decided(value0)', 'vote(node2,value1)', '~voted(node0)', '~voted(node3)']
2314     : -1---------1------0--0-----------
2314     : ['decided(value1)', 'vote(node2,value2)', '~voted(node0)', '~voted(node3)']
2315     : 1----------1------0--0-----------
2315     : ['decided(value0)', 'vote(node2,value2)', '~voted(node0)', '~voted(node3)']
2316     : --1------1--------0---0----------
2316     : ['decided(value2)', 'vote(node2,value0)', '~voted(node0)', '~voted(node4)']
2317     : -1-------1--------0---0----------
2317     : ['decided(value1)', 'vote(node2,value0)', '~voted(node0)', '~voted(node4)']
2318     : --1-------1-------0---0----------
2318     : ['decided(value2)', 'vote(node2,value1)', '~voted(node0)', '~voted(node4)']
2319     : 1---------1-------0---0----------
2319     : ['decided(value0)', 'vote(node2,value1)', '~voted(node0)', '~voted(node4)']
2320     : -1---------1------0---0----------
2320     : ['decided(value1)', 'vote(node2,value2)', '~voted(node0)', '~voted(node4)']
2321     : 1----------1------0---0----------
2321     : ['decided(value0)', 'vote(node2,value2)', '~voted(node0)', '~voted(node4)']
2322     : --1------1--------00-------------
2322     : ['decided(value2)', 'vote(node2,value0)', '~voted(node0)', '~voted(node1)']
2323     : -1-------1--------00-------------
2323     : ['decided(value1)', 'vote(node2,value0)', '~voted(node0)', '~voted(node1)']
2324     : --1-------1-------00-------------
2324     : ['decided(value2)', 'vote(node2,value1)', '~voted(node0)', '~voted(node1)']
2325     : 1---------1-------00-------------
2325     : ['decided(value0)', 'vote(node2,value1)', '~voted(node0)', '~voted(node1)']
2326     : -1---------1------00-------------
2326     : ['decided(value1)', 'vote(node2,value2)', '~voted(node0)', '~voted(node1)']
2327     : 1----------1------00-------------
2327     : ['decided(value0)', 'vote(node2,value2)', '~voted(node0)', '~voted(node1)']
2328     : --1------1---------0-0-----------
2328     : ['decided(value2)', 'vote(node2,value0)', '~voted(node1)', '~voted(node3)']
2329     : -1-------1---------0-0-----------
2329     : ['decided(value1)', 'vote(node2,value0)', '~voted(node1)', '~voted(node3)']
2330     : --1-------1--------0-0-----------
2330     : ['decided(value2)', 'vote(node2,value1)', '~voted(node1)', '~voted(node3)']
2331     : 1---------1--------0-0-----------
2331     : ['decided(value0)', 'vote(node2,value1)', '~voted(node1)', '~voted(node3)']
2332     : -1---------1-------0-0-----------
2332     : ['decided(value1)', 'vote(node2,value2)', '~voted(node1)', '~voted(node3)']
2333     : 1----------1-------0-0-----------
2333     : ['decided(value0)', 'vote(node2,value2)', '~voted(node1)', '~voted(node3)']
2334     : --1------1---------0--0----------
2334     : ['decided(value2)', 'vote(node2,value0)', '~voted(node1)', '~voted(node4)']
2335     : -1-------1---------0--0----------
2335     : ['decided(value1)', 'vote(node2,value0)', '~voted(node1)', '~voted(node4)']
2336     : --1-------1--------0--0----------
2336     : ['decided(value2)', 'vote(node2,value1)', '~voted(node1)', '~voted(node4)']
2337     : 1---------1--------0--0----------
2337     : ['decided(value0)', 'vote(node2,value1)', '~voted(node1)', '~voted(node4)']
2338     : -1---------1-------0--0----------
2338     : ['decided(value1)', 'vote(node2,value2)', '~voted(node1)', '~voted(node4)']
2339     : 1----------1-------0--0----------
2339     : ['decided(value0)', 'vote(node2,value2)', '~voted(node1)', '~voted(node4)']
2340     : --1------1-----------00----------
2340     : ['decided(value2)', 'vote(node2,value0)', '~voted(node3)', '~voted(node4)']
2341     : -1-------1-----------00----------
2341     : ['decided(value1)', 'vote(node2,value0)', '~voted(node3)', '~voted(node4)']
2342     : --1-------1----------00----------
2342     : ['decided(value2)', 'vote(node2,value1)', '~voted(node3)', '~voted(node4)']
2343     : 1---------1----------00----------
2343     : ['decided(value0)', 'vote(node2,value1)', '~voted(node3)', '~voted(node4)']
2344     : -1---------1---------00----------
2344     : ['decided(value1)', 'vote(node2,value2)', '~voted(node3)', '~voted(node4)']
2345     : 1----------1---------00----------
2345     : ['decided(value0)', 'vote(node2,value2)', '~voted(node3)', '~voted(node4)']
2346     : --1---------1-----0-0------------
2346     : ['decided(value2)', 'vote(node3,value0)', '~voted(node0)', '~voted(node2)']
2347     : -1----------1-----0-0------------
2347     : ['decided(value1)', 'vote(node3,value0)', '~voted(node0)', '~voted(node2)']
2348     : --1----------1----0-0------------
2348     : ['decided(value2)', 'vote(node3,value1)', '~voted(node0)', '~voted(node2)']
2349     : 1------------1----0-0------------
2349     : ['decided(value0)', 'vote(node3,value1)', '~voted(node0)', '~voted(node2)']
2350     : -1------------1---0-0------------
2350     : ['decided(value1)', 'vote(node3,value2)', '~voted(node0)', '~voted(node2)']
2351     : 1-------------1---0-0------------
2351     : ['decided(value0)', 'vote(node3,value2)', '~voted(node0)', '~voted(node2)']
2352     : --1---------1-----0---0----------
2352     : ['decided(value2)', 'vote(node3,value0)', '~voted(node0)', '~voted(node4)']
2353     : -1----------1-----0---0----------
2353     : ['decided(value1)', 'vote(node3,value0)', '~voted(node0)', '~voted(node4)']
2354     : --1----------1----0---0----------
2354     : ['decided(value2)', 'vote(node3,value1)', '~voted(node0)', '~voted(node4)']
2355     : 1------------1----0---0----------
2355     : ['decided(value0)', 'vote(node3,value1)', '~voted(node0)', '~voted(node4)']
2356     : -1------------1---0---0----------
2356     : ['decided(value1)', 'vote(node3,value2)', '~voted(node0)', '~voted(node4)']
2357     : 1-------------1---0---0----------
2357     : ['decided(value0)', 'vote(node3,value2)', '~voted(node0)', '~voted(node4)']
2358     : --1---------1-----00-------------
2358     : ['decided(value2)', 'vote(node3,value0)', '~voted(node0)', '~voted(node1)']
2359     : -1----------1-----00-------------
2359     : ['decided(value1)', 'vote(node3,value0)', '~voted(node0)', '~voted(node1)']
2360     : --1----------1----00-------------
2360     : ['decided(value2)', 'vote(node3,value1)', '~voted(node0)', '~voted(node1)']
2361     : 1------------1----00-------------
2361     : ['decided(value0)', 'vote(node3,value1)', '~voted(node0)', '~voted(node1)']
2362     : -1------------1---00-------------
2362     : ['decided(value1)', 'vote(node3,value2)', '~voted(node0)', '~voted(node1)']
2363     : 1-------------1---00-------------
2363     : ['decided(value0)', 'vote(node3,value2)', '~voted(node0)', '~voted(node1)']
2364     : --1---------1------00------------
2364     : ['decided(value2)', 'vote(node3,value0)', '~voted(node1)', '~voted(node2)']
2365     : -1----------1------00------------
2365     : ['decided(value1)', 'vote(node3,value0)', '~voted(node1)', '~voted(node2)']
2366     : --1----------1-----00------------
2366     : ['decided(value2)', 'vote(node3,value1)', '~voted(node1)', '~voted(node2)']
2367     : 1------------1-----00------------
2367     : ['decided(value0)', 'vote(node3,value1)', '~voted(node1)', '~voted(node2)']
2368     : -1------------1----00------------
2368     : ['decided(value1)', 'vote(node3,value2)', '~voted(node1)', '~voted(node2)']
2369     : 1-------------1----00------------
2369     : ['decided(value0)', 'vote(node3,value2)', '~voted(node1)', '~voted(node2)']
2370     : --1---------1------0--0----------
2370     : ['decided(value2)', 'vote(node3,value0)', '~voted(node1)', '~voted(node4)']
2371     : -1----------1------0--0----------
2371     : ['decided(value1)', 'vote(node3,value0)', '~voted(node1)', '~voted(node4)']
2372     : --1----------1-----0--0----------
2372     : ['decided(value2)', 'vote(node3,value1)', '~voted(node1)', '~voted(node4)']
2373     : 1------------1-----0--0----------
2373     : ['decided(value0)', 'vote(node3,value1)', '~voted(node1)', '~voted(node4)']
2374     : -1------------1----0--0----------
2374     : ['decided(value1)', 'vote(node3,value2)', '~voted(node1)', '~voted(node4)']
2375     : 1-------------1----0--0----------
2375     : ['decided(value0)', 'vote(node3,value2)', '~voted(node1)', '~voted(node4)']
2376     : --1---------1-------0-0----------
2376     : ['decided(value2)', 'vote(node3,value0)', '~voted(node2)', '~voted(node4)']
2377     : -1----------1-------0-0----------
2377     : ['decided(value1)', 'vote(node3,value0)', '~voted(node2)', '~voted(node4)']
2378     : --1----------1------0-0----------
2378     : ['decided(value2)', 'vote(node3,value1)', '~voted(node2)', '~voted(node4)']
2379     : 1------------1------0-0----------
2379     : ['decided(value0)', 'vote(node3,value1)', '~voted(node2)', '~voted(node4)']
2380     : -1------------1-----0-0----------
2380     : ['decided(value1)', 'vote(node3,value2)', '~voted(node2)', '~voted(node4)']
2381     : 1-------------1-----0-0----------
2381     : ['decided(value0)', 'vote(node3,value2)', '~voted(node2)', '~voted(node4)']
2382     : --1------------1--0-0------------
2382     : ['decided(value2)', 'vote(node4,value0)', '~voted(node0)', '~voted(node2)']
2383     : -1-------------1--0-0------------
2383     : ['decided(value1)', 'vote(node4,value0)', '~voted(node0)', '~voted(node2)']
2384     : --1-------------1-0-0------------
2384     : ['decided(value2)', 'vote(node4,value1)', '~voted(node0)', '~voted(node2)']
2385     : 1---------------1-0-0------------
2385     : ['decided(value0)', 'vote(node4,value1)', '~voted(node0)', '~voted(node2)']
2386     : -1---------------10-0------------
2386     : ['decided(value1)', 'vote(node4,value2)', '~voted(node0)', '~voted(node2)']
2387     : 1----------------10-0------------
2387     : ['decided(value0)', 'vote(node4,value2)', '~voted(node0)', '~voted(node2)']
2388     : --1------------1--0--0-----------
2388     : ['decided(value2)', 'vote(node4,value0)', '~voted(node0)', '~voted(node3)']
2389     : -1-------------1--0--0-----------
2389     : ['decided(value1)', 'vote(node4,value0)', '~voted(node0)', '~voted(node3)']
2390     : --1-------------1-0--0-----------
2390     : ['decided(value2)', 'vote(node4,value1)', '~voted(node0)', '~voted(node3)']
2391     : 1---------------1-0--0-----------
2391     : ['decided(value0)', 'vote(node4,value1)', '~voted(node0)', '~voted(node3)']
2392     : -1---------------10--0-----------
2392     : ['decided(value1)', 'vote(node4,value2)', '~voted(node0)', '~voted(node3)']
2393     : 1----------------10--0-----------
2393     : ['decided(value0)', 'vote(node4,value2)', '~voted(node0)', '~voted(node3)']
2394     : --1------------1--00-------------
2394     : ['decided(value2)', 'vote(node4,value0)', '~voted(node0)', '~voted(node1)']
2395     : -1-------------1--00-------------
2395     : ['decided(value1)', 'vote(node4,value0)', '~voted(node0)', '~voted(node1)']
2396     : --1-------------1-00-------------
2396     : ['decided(value2)', 'vote(node4,value1)', '~voted(node0)', '~voted(node1)']
2397     : 1---------------1-00-------------
2397     : ['decided(value0)', 'vote(node4,value1)', '~voted(node0)', '~voted(node1)']
2398     : -1---------------100-------------
2398     : ['decided(value1)', 'vote(node4,value2)', '~voted(node0)', '~voted(node1)']
2399     : 1----------------100-------------
2399     : ['decided(value0)', 'vote(node4,value2)', '~voted(node0)', '~voted(node1)']
2400     : --1------------1---00------------
2400     : ['decided(value2)', 'vote(node4,value0)', '~voted(node1)', '~voted(node2)']
2401     : -1-------------1---00------------
2401     : ['decided(value1)', 'vote(node4,value0)', '~voted(node1)', '~voted(node2)']
2402     : --1-------------1--00------------
2402     : ['decided(value2)', 'vote(node4,value1)', '~voted(node1)', '~voted(node2)']
2403     : 1---------------1--00------------
2403     : ['decided(value0)', 'vote(node4,value1)', '~voted(node1)', '~voted(node2)']
2404     : -1---------------1-00------------
2404     : ['decided(value1)', 'vote(node4,value2)', '~voted(node1)', '~voted(node2)']
2405     : 1----------------1-00------------
2405     : ['decided(value0)', 'vote(node4,value2)', '~voted(node1)', '~voted(node2)']
2406     : --1------------1---0-0-----------
2406     : ['decided(value2)', 'vote(node4,value0)', '~voted(node1)', '~voted(node3)']
2407     : -1-------------1---0-0-----------
2407     : ['decided(value1)', 'vote(node4,value0)', '~voted(node1)', '~voted(node3)']
2408     : --1-------------1--0-0-----------
2408     : ['decided(value2)', 'vote(node4,value1)', '~voted(node1)', '~voted(node3)']
2409     : 1---------------1--0-0-----------
2409     : ['decided(value0)', 'vote(node4,value1)', '~voted(node1)', '~voted(node3)']
2410     : -1---------------1-0-0-----------
2410     : ['decided(value1)', 'vote(node4,value2)', '~voted(node1)', '~voted(node3)']
2411     : 1----------------1-0-0-----------
2411     : ['decided(value0)', 'vote(node4,value2)', '~voted(node1)', '~voted(node3)']
2412     : --1------------1----00-----------
2412     : ['decided(value2)', 'vote(node4,value0)', '~voted(node2)', '~voted(node3)']
2413     : -1-------------1----00-----------
2413     : ['decided(value1)', 'vote(node4,value0)', '~voted(node2)', '~voted(node3)']
2414     : --1-------------1---00-----------
2414     : ['decided(value2)', 'vote(node4,value1)', '~voted(node2)', '~voted(node3)']
2415     : 1---------------1---00-----------
2415     : ['decided(value0)', 'vote(node4,value1)', '~voted(node2)', '~voted(node3)']
2416     : -1---------------1--00-----------
2416     : ['decided(value1)', 'vote(node4,value2)', '~voted(node2)', '~voted(node3)']
2417     : 1----------------1--00-----------
2417     : ['decided(value0)', 'vote(node4,value2)', '~voted(node2)', '~voted(node3)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall NODE1,NODE0,NODE2,VALUE0,VALUE1. ~vote(NODE0,VALUE1) | voted(NODE2) | ~decided(VALUE0) | voted(NODE1) | (VALUE0 = VALUE1 | NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 13




=== Prime Orbit 16 =====================
size : 60
num_suborbits: 1
2478 (*) : -1-----0--------------0---0------
2478     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value1)', '~voted(node4)']
2479     : --1-----0-------------0---0------
2479     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value2)', '~voted(node4)']
2480     : 1-----0---------------0---0------
2480     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value0)', '~voted(node4)']
2481     : -1-----0-------------0-----0-----
2481     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value1)', '~voted(node3)']
2482     : --1-----0------------0-----0-----
2482     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value2)', '~voted(node3)']
2483     : 1-----0--------------0-----0-----
2483     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value0)', '~voted(node3)']
2484     : -1-----0------------0-------0----
2484     : ['decided(value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value1)', '~voted(node2)']
2485     : --1-----0-----------0-------0----
2485     : ['decided(value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value2)', '~voted(node2)']
2486     : 1-----0-------------0-------0----
2486     : ['decided(value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value0)', '~voted(node2)']
2487     : -1--------0-----------0-0--------
2487     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value1)', '~voted(node4)']
2488     : --1--------0----------0-0--------
2488     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value2)', '~voted(node4)']
2489     : 1--------0------------0-0--------
2489     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value0)', '~voted(node4)']
2490     : -1--------0----------0---0-------
2490     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value1)', '~voted(node3)']
2491     : --1--------0---------0---0-------
2491     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value2)', '~voted(node3)']
2492     : 1--------0-----------0---0-------
2492     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value0)', '~voted(node3)']
2493     : -1--------0--------0--------0----
2493     : ['decided(value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value1)', '~voted(node1)']
2494     : --1--------0-------0--------0----
2494     : ['decided(value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value2)', '~voted(node1)']
2495     : 1--------0---------0--------0----
2495     : ['decided(value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node2,value0)', '~voted(node1)']
2496     : -1-----------0--------00---------
2496     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value1)', '~voted(node4)']
2497     : --1-----------0-------00---------
2497     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value2)', '~voted(node4)']
2498     : 1-----------0---------00---------
2498     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value0)', '~voted(node4)']
2499     : -1-----------0------0----0-------
2499     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value1)', '~voted(node2)']
2500     : --1-----------0-----0----0-------
2500     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value2)', '~voted(node2)']
2501     : 1-----------0-------0----0-------
2501     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node3,value0)', '~voted(node2)']
2502     : -1-----------0-----0-------0-----
2502     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value1)', '~voted(node1)']
2503     : --1-----------0----0-------0-----
2503     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value2)', '~voted(node1)']
2504     : 1-----------0------0-------0-----
2504     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node3,value0)', '~voted(node1)']
2505     : -1--------------0----0-0---------
2505     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value1)', '~voted(node3)']
2506     : --1--------------0---0-0---------
2506     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value2)', '~voted(node3)']
2507     : 1--------------0-----0-0---------
2507     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node4,value0)', '~voted(node3)']
2508     : -1--------------0---0---0--------
2508     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value1)', '~voted(node2)']
2509     : --1--------------0--0---0--------
2509     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value2)', '~voted(node2)']
2510     : 1--------------0----0---0--------
2510     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node4,value0)', '~voted(node2)']
2511     : -1--------------0--0------0------
2511     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value1)', '~voted(node1)']
2512     : --1--------------0-0------0------
2512     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value2)', '~voted(node1)']
2513     : 1--------------0---0------0------
2513     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node4,value0)', '~voted(node1)']
2514     : -1--0-----------------0------0---
2514     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value1)', '~voted(node4)']
2515     : --1--0----------------0------0---
2515     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value2)', '~voted(node4)']
2516     : 1--0------------------0------0---
2516     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value0)', '~voted(node4)']
2517     : -1--0----------------0--------0--
2517     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value1)', '~voted(node3)']
2518     : --1--0---------------0--------0--
2518     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value2)', '~voted(node3)']
2519     : 1--0-----------------0--------0--
2519     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value0)', '~voted(node3)']
2520     : -1--0---------------0----------0-
2520     : ['decided(value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value1)', '~voted(node2)']
2521     : --1--0--------------0----------0-
2521     : ['decided(value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value2)', '~voted(node2)']
2522     : 1--0----------------0----------0-
2522     : ['decided(value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value0)', '~voted(node2)']
2523     : -1--------0-------0------------0-
2523     : ['decided(value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value1)', '~voted(node0)']
2524     : --1--------0------0------------0-
2524     : ['decided(value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value2)', '~voted(node0)']
2525     : 1--------0--------0------------0-
2525     : ['decided(value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value0)', '~voted(node0)']
2526     : -1-----------0----0-----------0--
2526     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value1)', '~voted(node0)']
2527     : --1-----------0---0-----------0--
2527     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value2)', '~voted(node0)']
2528     : 1-----------0-----0-----------0--
2528     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value0)', '~voted(node0)']
2529     : -1--------------0-0----------0---
2529     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value1)', '~voted(node0)']
2530     : --1--------------00----------0---
2530     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value2)', '~voted(node0)']
2531     : 1--------------0--0----------0---
2531     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value0)', '~voted(node0)']
2532     : -1--0--------------0------------0
2532     : ['decided(value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)', '~voted(node1)']
2533     : --1--0-------------0------------0
2533     : ['decided(value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)', '~voted(node1)']
2534     : 1--0---------------0------------0
2534     : ['decided(value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)', '~voted(node1)']
2535     : -1-----0----------0-------------0
2535     : ['decided(value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value1)', '~voted(node0)']
2536     : --1-----0---------0-------------0
2536     : ['decided(value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value2)', '~voted(node0)']
2537     : 1-----0-----------0-------------0
2537     : ['decided(value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value0)', '~voted(node0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall NODE1,QUORUM0,NODE0,VALUE0. member(NODE0,QUORUM0) | member(NODE1,QUORUM0) | voting_quorum = QUORUM0 | vote(NODE0,VALUE0) | ~decided(VALUE0) | voted(NODE1) | NODE0 = NODE1
qcost : 11




=== Prime Orbit 17 =====================
size : 90
num_suborbits: 1
2538 (*) : -1-----0-----0--------0----------
2538     : ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~voted(node4)']
2539     : --1-----0-----0-------0----------
2539     : ['decided(value2)', '~vote(node1,value2)', '~vote(node3,value2)', '~voted(node4)']
2540     : 1-----0-----0---------0----------
2540     : ['decided(value0)', '~vote(node1,value0)', '~vote(node3,value0)', '~voted(node4)']
2541     : -1-----0--------0----0-----------
2541     : ['decided(value1)', '~vote(node1,value1)', '~vote(node4,value1)', '~voted(node3)']
2542     : --1-----0--------0---0-----------
2542     : ['decided(value2)', '~vote(node1,value2)', '~vote(node4,value2)', '~voted(node3)']
2543     : 1-----0--------0-----0-----------
2543     : ['decided(value0)', '~vote(node1,value0)', '~vote(node4,value0)', '~voted(node3)']
2544     : -1-----0--0-----------0----------
2544     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~voted(node4)']
2545     : --1-----0--0----------0----------
2545     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~voted(node4)']
2546     : 1-----0--0------------0----------
2546     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~voted(node4)']
2547     : -1-----0--------0---0------------
2547     : ['decided(value1)', '~vote(node1,value1)', '~vote(node4,value1)', '~voted(node2)']
2548     : --1-----0--------0--0------------
2548     : ['decided(value2)', '~vote(node1,value2)', '~vote(node4,value2)', '~voted(node2)']
2549     : 1-----0--------0----0------------
2549     : ['decided(value0)', '~vote(node1,value0)', '~vote(node4,value0)', '~voted(node2)']
2550     : -1-----0--0----------0-----------
2550     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~voted(node3)']
2551     : --1-----0--0---------0-----------
2551     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~voted(node3)']
2552     : 1-----0--0-----------0-----------
2552     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~voted(node3)']
2553     : -1-----0-----0------0------------
2553     : ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~voted(node2)']
2554     : --1-----0-----0-----0------------
2554     : ['decided(value2)', '~vote(node1,value2)', '~vote(node3,value2)', '~voted(node2)']
2555     : 1-----0-----0-------0------------
2555     : ['decided(value0)', '~vote(node1,value0)', '~vote(node3,value0)', '~voted(node2)']
2556     : -1--------0--0--------0----------
2556     : ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', '~voted(node4)']
2557     : --1--------0--0-------0----------
2557     : ['decided(value2)', '~vote(node2,value2)', '~vote(node3,value2)', '~voted(node4)']
2558     : 1--------0--0---------0----------
2558     : ['decided(value0)', '~vote(node2,value0)', '~vote(node3,value0)', '~voted(node4)']
2559     : -1--------0-----0----0-----------
2559     : ['decided(value1)', '~vote(node2,value1)', '~vote(node4,value1)', '~voted(node3)']
2560     : --1--------0-----0---0-----------
2560     : ['decided(value2)', '~vote(node2,value2)', '~vote(node4,value2)', '~voted(node3)']
2561     : 1--------0-----0-----0-----------
2561     : ['decided(value0)', '~vote(node2,value0)', '~vote(node4,value0)', '~voted(node3)']
2562     : -1--------0-----0--0-------------
2562     : ['decided(value1)', '~vote(node2,value1)', '~vote(node4,value1)', '~voted(node1)']
2563     : --1--------0-----0-0-------------
2563     : ['decided(value2)', '~vote(node2,value2)', '~vote(node4,value2)', '~voted(node1)']
2564     : 1--------0-----0---0-------------
2564     : ['decided(value0)', '~vote(node2,value0)', '~vote(node4,value0)', '~voted(node1)']
2565     : -1--------0--0-----0-------------
2565     : ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', '~voted(node1)']
2566     : --1--------0--0----0-------------
2566     : ['decided(value2)', '~vote(node2,value2)', '~vote(node3,value2)', '~voted(node1)']
2567     : 1--------0--0------0-------------
2567     : ['decided(value0)', '~vote(node2,value0)', '~vote(node3,value0)', '~voted(node1)']
2568     : -1-----------0--0---0------------
2568     : ['decided(value1)', '~vote(node3,value1)', '~vote(node4,value1)', '~voted(node2)']
2569     : --1-----------0--0--0------------
2569     : ['decided(value2)', '~vote(node3,value2)', '~vote(node4,value2)', '~voted(node2)']
2570     : 1-----------0--0----0------------
2570     : ['decided(value0)', '~vote(node3,value0)', '~vote(node4,value0)', '~voted(node2)']
2571     : -1-----------0--0--0-------------
2571     : ['decided(value1)', '~vote(node3,value1)', '~vote(node4,value1)', '~voted(node1)']
2572     : --1-----------0--0-0-------------
2572     : ['decided(value2)', '~vote(node3,value2)', '~vote(node4,value2)', '~voted(node1)']
2573     : 1-----------0--0---0-------------
2573     : ['decided(value0)', '~vote(node3,value0)', '~vote(node4,value0)', '~voted(node1)']
2574     : -1--0--------0--------0----------
2574     : ['decided(value1)', '~vote(node0,value1)', '~vote(node3,value1)', '~voted(node4)']
2575     : --1--0--------0-------0----------
2575     : ['decided(value2)', '~vote(node0,value2)', '~vote(node3,value2)', '~voted(node4)']
2576     : 1--0--------0---------0----------
2576     : ['decided(value0)', '~vote(node0,value0)', '~vote(node3,value0)', '~voted(node4)']
2577     : -1--0-----------0----0-----------
2577     : ['decided(value1)', '~vote(node0,value1)', '~vote(node4,value1)', '~voted(node3)']
2578     : --1--0-----------0---0-----------
2578     : ['decided(value2)', '~vote(node0,value2)', '~vote(node4,value2)', '~voted(node3)']
2579     : 1--0-----------0-----0-----------
2579     : ['decided(value0)', '~vote(node0,value0)', '~vote(node4,value0)', '~voted(node3)']
2580     : -1--0-----0-----------0----------
2580     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~voted(node4)']
2581     : --1--0-----0----------0----------
2581     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~voted(node4)']
2582     : 1--0-----0------------0----------
2582     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~voted(node4)']
2583     : -1--0-----------0---0------------
2583     : ['decided(value1)', '~vote(node0,value1)', '~vote(node4,value1)', '~voted(node2)']
2584     : --1--0-----------0--0------------
2584     : ['decided(value2)', '~vote(node0,value2)', '~vote(node4,value2)', '~voted(node2)']
2585     : 1--0-----------0----0------------
2585     : ['decided(value0)', '~vote(node0,value0)', '~vote(node4,value0)', '~voted(node2)']
2586     : -1--0-----0----------0-----------
2586     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~voted(node3)']
2587     : --1--0-----0---------0-----------
2587     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~voted(node3)']
2588     : 1--0-----0-----------0-----------
2588     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~voted(node3)']
2589     : -1--0--------0------0------------
2589     : ['decided(value1)', '~vote(node0,value1)', '~vote(node3,value1)', '~voted(node2)']
2590     : --1--0--------0-----0------------
2590     : ['decided(value2)', '~vote(node0,value2)', '~vote(node3,value2)', '~voted(node2)']
2591     : 1--0--------0-------0------------
2591     : ['decided(value0)', '~vote(node0,value0)', '~vote(node3,value0)', '~voted(node2)']
2592     : -1--------0-----0-0--------------
2592     : ['decided(value1)', '~vote(node2,value1)', '~vote(node4,value1)', '~voted(node0)']
2593     : --1--------0-----00--------------
2593     : ['decided(value2)', '~vote(node2,value2)', '~vote(node4,value2)', '~voted(node0)']
2594     : 1--------0-----0--0--------------
2594     : ['decided(value0)', '~vote(node2,value0)', '~vote(node4,value0)', '~voted(node0)']
2595     : -1--------0--0----0--------------
2595     : ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', '~voted(node0)']
2596     : --1--------0--0---0--------------
2596     : ['decided(value2)', '~vote(node2,value2)', '~vote(node3,value2)', '~voted(node0)']
2597     : 1--------0--0-----0--------------
2597     : ['decided(value0)', '~vote(node2,value0)', '~vote(node3,value0)', '~voted(node0)']
2598     : -1-----------0--0-0--------------
2598     : ['decided(value1)', '~vote(node3,value1)', '~vote(node4,value1)', '~voted(node0)']
2599     : --1-----------0--00--------------
2599     : ['decided(value2)', '~vote(node3,value2)', '~vote(node4,value2)', '~voted(node0)']
2600     : 1-----------0--0--0--------------
2600     : ['decided(value0)', '~vote(node3,value0)', '~vote(node4,value0)', '~voted(node0)']
2601     : -1--0--0--------------0----------
2601     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~voted(node4)']
2602     : --1--0--0-------------0----------
2602     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~voted(node4)']
2603     : 1--0--0---------------0----------
2603     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~voted(node4)']
2604     : -1--0-----------0--0-------------
2604     : ['decided(value1)', '~vote(node0,value1)', '~vote(node4,value1)', '~voted(node1)']
2605     : --1--0-----------0-0-------------
2605     : ['decided(value2)', '~vote(node0,value2)', '~vote(node4,value2)', '~voted(node1)']
2606     : 1--0-----------0---0-------------
2606     : ['decided(value0)', '~vote(node0,value0)', '~vote(node4,value0)', '~voted(node1)']
2607     : -1--0--0-------------0-----------
2607     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~voted(node3)']
2608     : --1--0--0------------0-----------
2608     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~voted(node3)']
2609     : 1--0--0--------------0-----------
2609     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~voted(node3)']
2610     : -1--0--------0-----0-------------
2610     : ['decided(value1)', '~vote(node0,value1)', '~vote(node3,value1)', '~voted(node1)']
2611     : --1--0--------0----0-------------
2611     : ['decided(value2)', '~vote(node0,value2)', '~vote(node3,value2)', '~voted(node1)']
2612     : 1--0--------0------0-------------
2612     : ['decided(value0)', '~vote(node0,value0)', '~vote(node3,value0)', '~voted(node1)']
2613     : -1-----0--------0-0--------------
2613     : ['decided(value1)', '~vote(node1,value1)', '~vote(node4,value1)', '~voted(node0)']
2614     : --1-----0--------00--------------
2614     : ['decided(value2)', '~vote(node1,value2)', '~vote(node4,value2)', '~voted(node0)']
2615     : 1-----0--------0--0--------------
2615     : ['decided(value0)', '~vote(node1,value0)', '~vote(node4,value0)', '~voted(node0)']
2616     : -1-----0-----0----0--------------
2616     : ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~voted(node0)']
2617     : --1-----0-----0---0--------------
2617     : ['decided(value2)', '~vote(node1,value2)', '~vote(node3,value2)', '~voted(node0)']
2618     : 1-----0-----0-----0--------------
2618     : ['decided(value0)', '~vote(node1,value0)', '~vote(node3,value0)', '~voted(node0)']
2619     : -1--0--0------------0------------
2619     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~voted(node2)']
2620     : --1--0--0-----------0------------
2620     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~voted(node2)']
2621     : 1--0--0-------------0------------
2621     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~voted(node2)']
2622     : -1--0-----0--------0-------------
2622     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~voted(node1)']
2623     : --1--0-----0-------0-------------
2623     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~voted(node1)']
2624     : 1--0-----0---------0-------------
2624     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~voted(node1)']
2625     : -1-----0--0-------0--------------
2625     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~voted(node0)']
2626     : --1-----0--0------0--------------
2626     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~voted(node0)']
2627     : 1-----0--0--------0--------------
2627     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~voted(node0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0,VALUE0. voted(NODE2) | vote(NODE0,VALUE0) | ~decided(VALUE0) | vote(NODE1,VALUE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 11




=== Prime Orbit 18 =====================
size : 30
num_suborbits: 1
2628 (*) : -1-------------------000---------
2628     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)', '~voted(node4)']
2629     : --1------------------000---------
2629     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)', '~voted(node4)']
2630     : 1--------------------000---------
2630     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~voted(node3)', '~voted(node4)']
2631     : -1------------------0-0-0--------
2631     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)', '~voted(node4)']
2632     : --1-----------------0-0-0--------
2632     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)', '~voted(node4)']
2633     : 1-------------------0-0-0--------
2633     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~voted(node2)', '~voted(node4)']
2634     : -1------------------00---0-------
2634     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)', '~voted(node3)']
2635     : --1-----------------00---0-------
2635     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)', '~voted(node3)']
2636     : 1-------------------00---0-------
2636     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~voted(node2)', '~voted(node3)']
2637     : -1-----------------0--0---0------
2637     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)', '~voted(node4)']
2638     : --1----------------0--0---0------
2638     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)', '~voted(node4)']
2639     : 1------------------0--0---0------
2639     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~voted(node1)', '~voted(node4)']
2640     : -1-----------------0-0-----0-----
2640     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)', '~voted(node3)']
2641     : --1----------------0-0-----0-----
2641     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)', '~voted(node3)']
2642     : 1------------------0-0-----0-----
2642     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~voted(node1)', '~voted(node3)']
2643     : -1-----------------00-------0----
2643     : ['decided(value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)', '~voted(node2)']
2644     : --1----------------00-------0----
2644     : ['decided(value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)', '~voted(node2)']
2645     : 1------------------00-------0----
2645     : ['decided(value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~voted(node1)', '~voted(node2)']
2646     : -1----------------0---0------0---
2646     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)', '~voted(node4)']
2647     : --1---------------0---0------0---
2647     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)', '~voted(node4)']
2648     : 1-----------------0---0------0---
2648     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node0)', '~voted(node4)']
2649     : -1----------------0--0--------0--
2649     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)', '~voted(node3)']
2650     : --1---------------0--0--------0--
2650     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)', '~voted(node3)']
2651     : 1-----------------0--0--------0--
2651     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node0)', '~voted(node3)']
2652     : -1----------------0-0----------0-
2652     : ['decided(value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)', '~voted(node2)']
2653     : --1---------------0-0----------0-
2653     : ['decided(value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)', '~voted(node2)']
2654     : 1-----------------0-0----------0-
2654     : ['decided(value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node0)', '~voted(node2)']
2655     : -1----------------00------------0
2655     : ['decided(value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)', '~voted(node1)']
2656     : --1---------------00------------0
2656     : ['decided(value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)', '~voted(node1)']
2657     : 1-----------------00------------0
2657     : ['decided(value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)', '~voted(node1)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall NODE1,QUORUM0,NODE0,VALUE0. member(NODE0,QUORUM0) | member(NODE1,QUORUM0) | voting_quorum = QUORUM0 | ~decided(VALUE0) | voted(NODE0) | voted(NODE1) | NODE0 = NODE1
qcost : 11




=== Prime Orbit 19 =====================
size : 90
num_suborbits: 1
2658 (*) : -1-----0-------------00----------
2658     : ['decided(value1)', '~vote(node1,value1)', '~voted(node3)', '~voted(node4)']
2659     : --1-----0------------00----------
2659     : ['decided(value2)', '~vote(node1,value2)', '~voted(node3)', '~voted(node4)']
2660     : 1-----0--------------00----------
2660     : ['decided(value0)', '~vote(node1,value0)', '~voted(node3)', '~voted(node4)']
2661     : -1-----0------------0-0----------
2661     : ['decided(value1)', '~vote(node1,value1)', '~voted(node2)', '~voted(node4)']
2662     : --1-----0-----------0-0----------
2662     : ['decided(value2)', '~vote(node1,value2)', '~voted(node2)', '~voted(node4)']
2663     : 1-----0-------------0-0----------
2663     : ['decided(value0)', '~vote(node1,value0)', '~voted(node2)', '~voted(node4)']
2664     : -1-----0------------00-----------
2664     : ['decided(value1)', '~vote(node1,value1)', '~voted(node2)', '~voted(node3)']
2665     : --1-----0-----------00-----------
2665     : ['decided(value2)', '~vote(node1,value2)', '~voted(node2)', '~voted(node3)']
2666     : 1-----0-------------00-----------
2666     : ['decided(value0)', '~vote(node1,value0)', '~voted(node2)', '~voted(node3)']
2667     : -1--------0----------00----------
2667     : ['decided(value1)', '~vote(node2,value1)', '~voted(node3)', '~voted(node4)']
2668     : --1--------0---------00----------
2668     : ['decided(value2)', '~vote(node2,value2)', '~voted(node3)', '~voted(node4)']
2669     : 1--------0-----------00----------
2669     : ['decided(value0)', '~vote(node2,value0)', '~voted(node3)', '~voted(node4)']
2670     : -1--------0--------0--0----------
2670     : ['decided(value1)', '~vote(node2,value1)', '~voted(node1)', '~voted(node4)']
2671     : --1--------0-------0--0----------
2671     : ['decided(value2)', '~vote(node2,value2)', '~voted(node1)', '~voted(node4)']
2672     : 1--------0---------0--0----------
2672     : ['decided(value0)', '~vote(node2,value0)', '~voted(node1)', '~voted(node4)']
2673     : -1--------0--------0-0-----------
2673     : ['decided(value1)', '~vote(node2,value1)', '~voted(node1)', '~voted(node3)']
2674     : --1--------0-------0-0-----------
2674     : ['decided(value2)', '~vote(node2,value2)', '~voted(node1)', '~voted(node3)']
2675     : 1--------0---------0-0-----------
2675     : ['decided(value0)', '~vote(node2,value0)', '~voted(node1)', '~voted(node3)']
2676     : -1-----------0------0-0----------
2676     : ['decided(value1)', '~vote(node3,value1)', '~voted(node2)', '~voted(node4)']
2677     : --1-----------0-----0-0----------
2677     : ['decided(value2)', '~vote(node3,value2)', '~voted(node2)', '~voted(node4)']
2678     : 1-----------0-------0-0----------
2678     : ['decided(value0)', '~vote(node3,value0)', '~voted(node2)', '~voted(node4)']
2679     : -1-----------0-----0--0----------
2679     : ['decided(value1)', '~vote(node3,value1)', '~voted(node1)', '~voted(node4)']
2680     : --1-----------0----0--0----------
2680     : ['decided(value2)', '~vote(node3,value2)', '~voted(node1)', '~voted(node4)']
2681     : 1-----------0------0--0----------
2681     : ['decided(value0)', '~vote(node3,value0)', '~voted(node1)', '~voted(node4)']
2682     : -1-----------0-----00------------
2682     : ['decided(value1)', '~vote(node3,value1)', '~voted(node1)', '~voted(node2)']
2683     : --1-----------0----00------------
2683     : ['decided(value2)', '~vote(node3,value2)', '~voted(node1)', '~voted(node2)']
2684     : 1-----------0------00------------
2684     : ['decided(value0)', '~vote(node3,value0)', '~voted(node1)', '~voted(node2)']
2685     : -1--------------0---00-----------
2685     : ['decided(value1)', '~vote(node4,value1)', '~voted(node2)', '~voted(node3)']
2686     : --1--------------0--00-----------
2686     : ['decided(value2)', '~vote(node4,value2)', '~voted(node2)', '~voted(node3)']
2687     : 1--------------0----00-----------
2687     : ['decided(value0)', '~vote(node4,value0)', '~voted(node2)', '~voted(node3)']
2688     : -1--------------0--0-0-----------
2688     : ['decided(value1)', '~vote(node4,value1)', '~voted(node1)', '~voted(node3)']
2689     : --1--------------0-0-0-----------
2689     : ['decided(value2)', '~vote(node4,value2)', '~voted(node1)', '~voted(node3)']
2690     : 1--------------0---0-0-----------
2690     : ['decided(value0)', '~vote(node4,value0)', '~voted(node1)', '~voted(node3)']
2691     : -1--------------0--00------------
2691     : ['decided(value1)', '~vote(node4,value1)', '~voted(node1)', '~voted(node2)']
2692     : --1--------------0-00------------
2692     : ['decided(value2)', '~vote(node4,value2)', '~voted(node1)', '~voted(node2)']
2693     : 1--------------0---00------------
2693     : ['decided(value0)', '~vote(node4,value0)', '~voted(node1)', '~voted(node2)']
2694     : -1--0----------------00----------
2694     : ['decided(value1)', '~vote(node0,value1)', '~voted(node3)', '~voted(node4)']
2695     : --1--0---------------00----------
2695     : ['decided(value2)', '~vote(node0,value2)', '~voted(node3)', '~voted(node4)']
2696     : 1--0-----------------00----------
2696     : ['decided(value0)', '~vote(node0,value0)', '~voted(node3)', '~voted(node4)']
2697     : -1--0---------------0-0----------
2697     : ['decided(value1)', '~vote(node0,value1)', '~voted(node2)', '~voted(node4)']
2698     : --1--0--------------0-0----------
2698     : ['decided(value2)', '~vote(node0,value2)', '~voted(node2)', '~voted(node4)']
2699     : 1--0----------------0-0----------
2699     : ['decided(value0)', '~vote(node0,value0)', '~voted(node2)', '~voted(node4)']
2700     : -1--0---------------00-----------
2700     : ['decided(value1)', '~vote(node0,value1)', '~voted(node2)', '~voted(node3)']
2701     : --1--0--------------00-----------
2701     : ['decided(value2)', '~vote(node0,value2)', '~voted(node2)', '~voted(node3)']
2702     : 1--0----------------00-----------
2702     : ['decided(value0)', '~vote(node0,value0)', '~voted(node2)', '~voted(node3)']
2703     : -1--------0-------0---0----------
2703     : ['decided(value1)', '~vote(node2,value1)', '~voted(node0)', '~voted(node4)']
2704     : --1--------0------0---0----------
2704     : ['decided(value2)', '~vote(node2,value2)', '~voted(node0)', '~voted(node4)']
2705     : 1--------0--------0---0----------
2705     : ['decided(value0)', '~vote(node2,value0)', '~voted(node0)', '~voted(node4)']
2706     : -1--------0-------0--0-----------
2706     : ['decided(value1)', '~vote(node2,value1)', '~voted(node0)', '~voted(node3)']
2707     : --1--------0------0--0-----------
2707     : ['decided(value2)', '~vote(node2,value2)', '~voted(node0)', '~voted(node3)']
2708     : 1--------0--------0--0-----------
2708     : ['decided(value0)', '~vote(node2,value0)', '~voted(node0)', '~voted(node3)']
2709     : -1-----------0----0---0----------
2709     : ['decided(value1)', '~vote(node3,value1)', '~voted(node0)', '~voted(node4)']
2710     : --1-----------0---0---0----------
2710     : ['decided(value2)', '~vote(node3,value2)', '~voted(node0)', '~voted(node4)']
2711     : 1-----------0-----0---0----------
2711     : ['decided(value0)', '~vote(node3,value0)', '~voted(node0)', '~voted(node4)']
2712     : -1-----------0----0-0------------
2712     : ['decided(value1)', '~vote(node3,value1)', '~voted(node0)', '~voted(node2)']
2713     : --1-----------0---0-0------------
2713     : ['decided(value2)', '~vote(node3,value2)', '~voted(node0)', '~voted(node2)']
2714     : 1-----------0-----0-0------------
2714     : ['decided(value0)', '~vote(node3,value0)', '~voted(node0)', '~voted(node2)']
2715     : -1--------------0-0--0-----------
2715     : ['decided(value1)', '~vote(node4,value1)', '~voted(node0)', '~voted(node3)']
2716     : --1--------------00--0-----------
2716     : ['decided(value2)', '~vote(node4,value2)', '~voted(node0)', '~voted(node3)']
2717     : 1--------------0--0--0-----------
2717     : ['decided(value0)', '~vote(node4,value0)', '~voted(node0)', '~voted(node3)']
2718     : -1--------------0-0-0------------
2718     : ['decided(value1)', '~vote(node4,value1)', '~voted(node0)', '~voted(node2)']
2719     : --1--------------00-0------------
2719     : ['decided(value2)', '~vote(node4,value2)', '~voted(node0)', '~voted(node2)']
2720     : 1--------------0--0-0------------
2720     : ['decided(value0)', '~vote(node4,value0)', '~voted(node0)', '~voted(node2)']
2721     : -1--0--------------0--0----------
2721     : ['decided(value1)', '~vote(node0,value1)', '~voted(node1)', '~voted(node4)']
2722     : --1--0-------------0--0----------
2722     : ['decided(value2)', '~vote(node0,value2)', '~voted(node1)', '~voted(node4)']
2723     : 1--0---------------0--0----------
2723     : ['decided(value0)', '~vote(node0,value0)', '~voted(node1)', '~voted(node4)']
2724     : -1--0--------------0-0-----------
2724     : ['decided(value1)', '~vote(node0,value1)', '~voted(node1)', '~voted(node3)']
2725     : --1--0-------------0-0-----------
2725     : ['decided(value2)', '~vote(node0,value2)', '~voted(node1)', '~voted(node3)']
2726     : 1--0---------------0-0-----------
2726     : ['decided(value0)', '~vote(node0,value0)', '~voted(node1)', '~voted(node3)']
2727     : -1-----0----------0---0----------
2727     : ['decided(value1)', '~vote(node1,value1)', '~voted(node0)', '~voted(node4)']
2728     : --1-----0---------0---0----------
2728     : ['decided(value2)', '~vote(node1,value2)', '~voted(node0)', '~voted(node4)']
2729     : 1-----0-----------0---0----------
2729     : ['decided(value0)', '~vote(node1,value0)', '~voted(node0)', '~voted(node4)']
2730     : -1-----0----------0--0-----------
2730     : ['decided(value1)', '~vote(node1,value1)', '~voted(node0)', '~voted(node3)']
2731     : --1-----0---------0--0-----------
2731     : ['decided(value2)', '~vote(node1,value2)', '~voted(node0)', '~voted(node3)']
2732     : 1-----0-----------0--0-----------
2732     : ['decided(value0)', '~vote(node1,value0)', '~voted(node0)', '~voted(node3)']
2733     : -1-----------0----00-------------
2733     : ['decided(value1)', '~vote(node3,value1)', '~voted(node0)', '~voted(node1)']
2734     : --1-----------0---00-------------
2734     : ['decided(value2)', '~vote(node3,value2)', '~voted(node0)', '~voted(node1)']
2735     : 1-----------0-----00-------------
2735     : ['decided(value0)', '~vote(node3,value0)', '~voted(node0)', '~voted(node1)']
2736     : -1--------------0-00-------------
2736     : ['decided(value1)', '~vote(node4,value1)', '~voted(node0)', '~voted(node1)']
2737     : --1--------------000-------------
2737     : ['decided(value2)', '~vote(node4,value2)', '~voted(node0)', '~voted(node1)']
2738     : 1--------------0--00-------------
2738     : ['decided(value0)', '~vote(node4,value0)', '~voted(node0)', '~voted(node1)']
2739     : -1--0--------------00------------
2739     : ['decided(value1)', '~vote(node0,value1)', '~voted(node1)', '~voted(node2)']
2740     : --1--0-------------00------------
2740     : ['decided(value2)', '~vote(node0,value2)', '~voted(node1)', '~voted(node2)']
2741     : 1--0---------------00------------
2741     : ['decided(value0)', '~vote(node0,value0)', '~voted(node1)', '~voted(node2)']
2742     : -1-----0----------0-0------------
2742     : ['decided(value1)', '~vote(node1,value1)', '~voted(node0)', '~voted(node2)']
2743     : --1-----0---------0-0------------
2743     : ['decided(value2)', '~vote(node1,value2)', '~voted(node0)', '~voted(node2)']
2744     : 1-----0-----------0-0------------
2744     : ['decided(value0)', '~vote(node1,value0)', '~voted(node0)', '~voted(node2)']
2745     : -1--------0-------00-------------
2745     : ['decided(value1)', '~vote(node2,value1)', '~voted(node0)', '~voted(node1)']
2746     : --1--------0------00-------------
2746     : ['decided(value2)', '~vote(node2,value2)', '~voted(node0)', '~voted(node1)']
2747     : 1--------0--------00-------------
2747     : ['decided(value0)', '~vote(node2,value0)', '~voted(node0)', '~voted(node1)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0,VALUE0. voted(NODE2) | vote(NODE0,VALUE0) | ~decided(VALUE0) | voted(NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 11




=== Prime Orbit 20 =====================
size : 30
num_suborbits: 1
2748 (*) : -1----------------0--00----------
2748     : ['decided(value1)', '~voted(node0)', '~voted(node3)', '~voted(node4)']
2749     : --1---------------0--00----------
2749     : ['decided(value2)', '~voted(node0)', '~voted(node3)', '~voted(node4)']
2750     : 1-----------------0--00----------
2750     : ['decided(value0)', '~voted(node0)', '~voted(node3)', '~voted(node4)']
2751     : -1----------------0-0-0----------
2751     : ['decided(value1)', '~voted(node0)', '~voted(node2)', '~voted(node4)']
2752     : --1---------------0-0-0----------
2752     : ['decided(value2)', '~voted(node0)', '~voted(node2)', '~voted(node4)']
2753     : 1-----------------0-0-0----------
2753     : ['decided(value0)', '~voted(node0)', '~voted(node2)', '~voted(node4)']
2754     : -1----------------0-00-----------
2754     : ['decided(value1)', '~voted(node0)', '~voted(node2)', '~voted(node3)']
2755     : --1---------------0-00-----------
2755     : ['decided(value2)', '~voted(node0)', '~voted(node2)', '~voted(node3)']
2756     : 1-----------------0-00-----------
2756     : ['decided(value0)', '~voted(node0)', '~voted(node2)', '~voted(node3)']
2757     : -1----------------00--0----------
2757     : ['decided(value1)', '~voted(node0)', '~voted(node1)', '~voted(node4)']
2758     : --1---------------00--0----------
2758     : ['decided(value2)', '~voted(node0)', '~voted(node1)', '~voted(node4)']
2759     : 1-----------------00--0----------
2759     : ['decided(value0)', '~voted(node0)', '~voted(node1)', '~voted(node4)']
2760     : -1----------------00-0-----------
2760     : ['decided(value1)', '~voted(node0)', '~voted(node1)', '~voted(node3)']
2761     : --1---------------00-0-----------
2761     : ['decided(value2)', '~voted(node0)', '~voted(node1)', '~voted(node3)']
2762     : 1-----------------00-0-----------
2762     : ['decided(value0)', '~voted(node0)', '~voted(node1)', '~voted(node3)']
2763     : -1----------------000------------
2763     : ['decided(value1)', '~voted(node0)', '~voted(node1)', '~voted(node2)']
2764     : --1---------------000------------
2764     : ['decided(value2)', '~voted(node0)', '~voted(node1)', '~voted(node2)']
2765     : 1-----------------000------------
2765     : ['decided(value0)', '~voted(node0)', '~voted(node1)', '~voted(node2)']
2766     : -1-----------------0-00----------
2766     : ['decided(value1)', '~voted(node1)', '~voted(node3)', '~voted(node4)']
2767     : --1----------------0-00----------
2767     : ['decided(value2)', '~voted(node1)', '~voted(node3)', '~voted(node4)']
2768     : 1------------------0-00----------
2768     : ['decided(value0)', '~voted(node1)', '~voted(node3)', '~voted(node4)']
2769     : -1-----------------00-0----------
2769     : ['decided(value1)', '~voted(node1)', '~voted(node2)', '~voted(node4)']
2770     : --1----------------00-0----------
2770     : ['decided(value2)', '~voted(node1)', '~voted(node2)', '~voted(node4)']
2771     : 1------------------00-0----------
2771     : ['decided(value0)', '~voted(node1)', '~voted(node2)', '~voted(node4)']
2772     : -1-----------------000-----------
2772     : ['decided(value1)', '~voted(node1)', '~voted(node2)', '~voted(node3)']
2773     : --1----------------000-----------
2773     : ['decided(value2)', '~voted(node1)', '~voted(node2)', '~voted(node3)']
2774     : 1------------------000-----------
2774     : ['decided(value0)', '~voted(node1)', '~voted(node2)', '~voted(node3)']
2775     : -1------------------000----------
2775     : ['decided(value1)', '~voted(node2)', '~voted(node3)', '~voted(node4)']
2776     : --1-----------------000----------
2776     : ['decided(value2)', '~voted(node2)', '~voted(node3)', '~voted(node4)']
2777     : 1-------------------000----------
2777     : ['decided(value0)', '~voted(node2)', '~voted(node3)', '~voted(node4)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0,VALUE0. voted(NODE2) | voted(NODE0) | ~decided(VALUE0) | voted(NODE1) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 11




=== Prime Orbit 21 =====================
size : 30
num_suborbits: 1
2778 (*) : -1--------0--0-----------0-------
2778     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value1)', '~vote(node3,value1)']
2779     : --1--------0--0----------0-------
2779     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value2)', '~vote(node3,value2)']
2780     : 1--------0--0------------0-------
2780     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node4)', '~vote(node2,value0)', '~vote(node3,value0)']
2781     : -1--------0-----0-------0--------
2781     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value1)', '~vote(node4,value1)']
2782     : --1--------0-----0------0--------
2782     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value2)', '~vote(node4,value2)']
2783     : 1--------0-----0--------0--------
2783     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~vote(node2,value0)', '~vote(node4,value0)']
2784     : -1-----------0--0------0---------
2784     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value1)', '~vote(node4,value1)']
2785     : --1-----------0--0-----0---------
2785     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value2)', '~vote(node4,value2)']
2786     : 1-----------0--0-------0---------
2786     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~vote(node3,value0)', '~vote(node4,value0)']
2787     : -1-----0-----0-------------0-----
2787     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value1)', '~vote(node3,value1)']
2788     : --1-----0-----0------------0-----
2788     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value2)', '~vote(node3,value2)']
2789     : 1-----0-----0--------------0-----
2789     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node4)', '~vote(node1,value0)', '~vote(node3,value0)']
2790     : -1-----0--------0---------0------
2790     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value1)', '~vote(node4,value1)']
2791     : --1-----0--------0--------0------
2791     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value2)', '~vote(node4,value2)']
2792     : 1-----0--------0----------0------
2792     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~vote(node1,value0)', '~vote(node4,value0)']
2793     : -1-----0--0-----------------0----
2793     : ['decided(value1)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value1)', '~vote(node2,value1)']
2794     : --1-----0--0----------------0----
2794     : ['decided(value2)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value2)', '~vote(node2,value2)']
2795     : 1-----0--0------------------0----
2795     : ['decided(value0)', '~(voting_quorum=quorum__node0_node3_node4)', '~vote(node1,value0)', '~vote(node2,value0)']
2796     : -1--0--------0----------------0--
2796     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value1)', '~vote(node3,value1)']
2797     : --1--0--------0---------------0--
2797     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value2)', '~vote(node3,value2)']
2798     : 1--0--------0-----------------0--
2798     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node0,value0)', '~vote(node3,value0)']
2799     : -1--0-----------0------------0---
2799     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value1)', '~vote(node4,value1)']
2800     : --1--0-----------0-----------0---
2800     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value2)', '~vote(node4,value2)']
2801     : 1--0-----------0-------------0---
2801     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node0,value0)', '~vote(node4,value0)']
2802     : -1--0-----0--------------------0-
2802     : ['decided(value1)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value1)', '~vote(node2,value1)']
2803     : --1--0-----0-------------------0-
2803     : ['decided(value2)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value2)', '~vote(node2,value2)']
2804     : 1--0-----0---------------------0-
2804     : ['decided(value0)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node0,value0)', '~vote(node2,value0)']
2805     : -1--0--0------------------------0
2805     : ['decided(value1)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)', '~vote(node1,value1)']
2806     : --1--0--0-----------------------0
2806     : ['decided(value2)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)', '~vote(node1,value2)']
2807     : 1--0--0-------------------------0
2807     : ['decided(value0)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)', '~vote(node1,value0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall NODE1,QUORUM0,NODE0,VALUE0. vote(NODE1,VALUE0) | member(NODE0,QUORUM0) | member(NODE1,QUORUM0) | voting_quorum = QUORUM0 | vote(NODE0,VALUE0) | ~decided(VALUE0) | NODE0 = NODE1
qcost : 11




=== Prime Orbit 22 =====================
size : 30
num_suborbits: 1
2808 (*) : -1--0-----0--0-------------------
2808     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~vote(node3,value1)']
2809     : --1--0-----0--0------------------
2809     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~vote(node3,value2)']
2810     : 1--0-----0--0--------------------
2810     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~vote(node3,value0)']
2811     : -1--0-----0-----0----------------
2811     : ['decided(value1)', '~vote(node0,value1)', '~vote(node2,value1)', '~vote(node4,value1)']
2812     : --1--0-----0-----0---------------
2812     : ['decided(value2)', '~vote(node0,value2)', '~vote(node2,value2)', '~vote(node4,value2)']
2813     : 1--0-----0-----0-----------------
2813     : ['decided(value0)', '~vote(node0,value0)', '~vote(node2,value0)', '~vote(node4,value0)']
2814     : -1--0--------0--0----------------
2814     : ['decided(value1)', '~vote(node0,value1)', '~vote(node3,value1)', '~vote(node4,value1)']
2815     : --1--0--------0--0---------------
2815     : ['decided(value2)', '~vote(node0,value2)', '~vote(node3,value2)', '~vote(node4,value2)']
2816     : 1--0--------0--0-----------------
2816     : ['decided(value0)', '~vote(node0,value0)', '~vote(node3,value0)', '~vote(node4,value0)']
2817     : -1--0--0-----0-------------------
2817     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node3,value1)']
2818     : --1--0--0-----0------------------
2818     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node3,value2)']
2819     : 1--0--0-----0--------------------
2819     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node3,value0)']
2820     : -1--0--0--------0----------------
2820     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node4,value1)']
2821     : --1--0--0--------0---------------
2821     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node4,value2)']
2822     : 1--0--0--------0-----------------
2822     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node4,value0)']
2823     : -1--0--0--0----------------------
2823     : ['decided(value1)', '~vote(node0,value1)', '~vote(node1,value1)', '~vote(node2,value1)']
2824     : --1--0--0--0---------------------
2824     : ['decided(value2)', '~vote(node0,value2)', '~vote(node1,value2)', '~vote(node2,value2)']
2825     : 1--0--0--0-----------------------
2825     : ['decided(value0)', '~vote(node0,value0)', '~vote(node1,value0)', '~vote(node2,value0)']
2826     : -1-----0--0--0-------------------
2826     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~vote(node3,value1)']
2827     : --1-----0--0--0------------------
2827     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~vote(node3,value2)']
2828     : 1-----0--0--0--------------------
2828     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~vote(node3,value0)']
2829     : -1-----0--0-----0----------------
2829     : ['decided(value1)', '~vote(node1,value1)', '~vote(node2,value1)', '~vote(node4,value1)']
2830     : --1-----0--0-----0---------------
2830     : ['decided(value2)', '~vote(node1,value2)', '~vote(node2,value2)', '~vote(node4,value2)']
2831     : 1-----0--0-----0-----------------
2831     : ['decided(value0)', '~vote(node1,value0)', '~vote(node2,value0)', '~vote(node4,value0)']
2832     : -1-----0-----0--0----------------
2832     : ['decided(value1)', '~vote(node1,value1)', '~vote(node3,value1)', '~vote(node4,value1)']
2833     : --1-----0-----0--0---------------
2833     : ['decided(value2)', '~vote(node1,value2)', '~vote(node3,value2)', '~vote(node4,value2)']
2834     : 1-----0-----0--0-----------------
2834     : ['decided(value0)', '~vote(node1,value0)', '~vote(node3,value0)', '~vote(node4,value0)']
2835     : -1--------0--0--0----------------
2835     : ['decided(value1)', '~vote(node2,value1)', '~vote(node3,value1)', '~vote(node4,value1)']
2836     : --1--------0--0--0---------------
2836     : ['decided(value2)', '~vote(node2,value2)', '~vote(node3,value2)', '~vote(node4,value2)']
2837     : 1--------0--0--0-----------------
2837     : ['decided(value0)', '~vote(node2,value0)', '~vote(node3,value0)', '~vote(node4,value0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE2,NODE0,VALUE0. vote(NODE0,VALUE0) | ~decided(VALUE0) | vote(NODE2,VALUE0) | vote(NODE1,VALUE0) | (NODE0 = NODE2 | NODE1 = NODE2 | NODE0 = NODE1)
qcost : 11




=== Prime Orbit 24 =====================
size : 30
num_suborbits: 1
2843 (*) : -1------------1--------0-0-0--0--
2843     : ['decided(value1)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2844     : --1----------1---------0-0-0--0--
2844     : ['decided(value2)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2845     : 1-------------1--------0-0-0--0--
2845     : ['decided(value0)', 'vote(node3,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2846     : --1---------1----------0-0-0--0--
2846     : ['decided(value2)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2847     : 1------------1---------0-0-0--0--
2847     : ['decided(value0)', 'vote(node3,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2848     : -1----------1----------0-0-0--0--
2848     : ['decided(value1)', 'vote(node3,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)']
2849     : -1---------------1-----00-0--0---
2849     : ['decided(value1)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2850     : --1-------------1------00-0--0---
2850     : ['decided(value2)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2851     : 1----------------1-----00-0--0---
2851     : ['decided(value0)', 'vote(node4,value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2852     : --1------------1-------00-0--0---
2852     : ['decided(value2)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2853     : 1---------------1------00-0--0---
2853     : ['decided(value0)', 'vote(node4,value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2854     : -1-------------1-------00-0--0---
2854     : ['decided(value1)', 'vote(node4,value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)']
2855     : -1---------1------------00--0--0-
2855     : ['decided(value1)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2856     : --1-------1-------------00--0--0-
2856     : ['decided(value2)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2857     : 1----------1------------00--0--0-
2857     : ['decided(value0)', 'vote(node2,value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2858     : --1------1--------------00--0--0-
2858     : ['decided(value2)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2859     : 1---------1-------------00--0--0-
2859     : ['decided(value0)', 'vote(node2,value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2860     : -1-------1--------------00--0--0-
2860     : ['decided(value1)', 'vote(node2,value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)']
2861     : -1------1-----------------000---0
2861     : ['decided(value1)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2862     : --1----1------------------000---0
2862     : ['decided(value2)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2863     : 1-------1-----------------000---0
2863     : ['decided(value0)', 'vote(node1,value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2864     : --1---1-------------------000---0
2864     : ['decided(value2)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2865     : 1------1------------------000---0
2865     : ['decided(value0)', 'vote(node1,value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2866     : -1----1-------------------000---0
2866     : ['decided(value1)', 'vote(node1,value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2867     : -1---1-----------------------0000
2867     : ['decided(value1)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2868     : --1-1------------------------0000
2868     : ['decided(value2)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2869     : 1----1-----------------------0000
2869     : ['decided(value0)', 'vote(node0,value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2870     : --11-------------------------0000
2870     : ['decided(value2)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2871     : 1---1------------------------0000
2871     : ['decided(value0)', 'vote(node0,value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
2872     : -1-1-------------------------0000
2872     : ['decided(value1)', 'vote(node0,value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)']
num_forall :   7
num_exists :   0
num_literals : 17
quantified form : forall QUORUM2,QUORUM1,QUORUM3,NODE0,VALUE1,VALUE0,QUORUM0. voting_quorum = QUORUM1 | ~vote(NODE0,VALUE1) | member(NODE0,QUORUM2) | member(NODE0,QUORUM1) | voting_quorum = QUORUM2 | member(NODE0,QUORUM0) | voting_quorum = QUORUM0 | voting_quorum = QUORUM3 | ~decided(VALUE0) | member(NODE0,QUORUM3) | (QUORUM0 = QUORUM1 | QUORUM2 = QUORUM3 | QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | VALUE0 = VALUE1 | QUORUM0 = QUORUM3 | QUORUM1 = QUORUM3)
qcost : 24




=== Prime Orbit 25 =====================
size : 15
num_suborbits: 1
2873 (*) : -1-------------------0-0-0-0--0--
2873     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2874     : --1------------------0-0-0-0--0--
2874     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2875     : 1--------------------0-0-0-0--0--
2875     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~voted(node3)']
2876     : -1--------------------000-0--0---
2876     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2877     : --1-------------------000-0--0---
2877     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2878     : 1---------------------000-0--0---
2878     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~voted(node4)']
2879     : -1------------------0---00--0--0-
2879     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2880     : --1-----------------0---00--0--0-
2880     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2881     : 1-------------------0---00--0--0-
2881     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~voted(node2)']
2882     : -1-----------------0------000---0
2882     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2883     : --1----------------0------000---0
2883     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2884     : 1------------------0------000---0
2884     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node1)']
2885     : -1----------------0----------0000
2885     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2886     : --1---------------0----------0000
2886     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
2887     : 1-----------------0----------0000
2887     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~voted(node0)']
num_forall :   6
num_exists :   0
num_literals : 16
quantified form : forall QUORUM2,QUORUM1,QUORUM3,NODE0,VALUE0,QUORUM0. voting_quorum = QUORUM1 | member(NODE0,QUORUM2) | member(NODE0,QUORUM1) | voting_quorum = QUORUM2 | member(NODE0,QUORUM0) | voting_quorum = QUORUM0 | voting_quorum = QUORUM3 | ~decided(VALUE0) | member(NODE0,QUORUM3) | voted(NODE0) | (QUORUM0 = QUORUM1 | QUORUM2 = QUORUM3 | QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | QUORUM0 = QUORUM3 | QUORUM1 = QUORUM3)
qcost : 22




=== Prime Orbit 26 =====================
size : 15
num_suborbits: 1
2888 (*) : -1-----0------------------000---0
2888     : ['decided(value1)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value1)']
2889     : --1-----0-----------------000---0
2889     : ['decided(value2)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value2)']
2890     : 1-----0-------------------000---0
2890     : ['decided(value0)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node1,value0)']
2891     : -1--------0-------------00--0--0-
2891     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value1)']
2892     : --1--------0------------00--0--0-
2892     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value2)']
2893     : 1--------0--------------00--0--0-
2893     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node3_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~vote(node2,value0)']
2894     : -1-----------0---------0-0-0--0--
2894     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value1)']
2895     : --1-----------0--------0-0-0--0--
2895     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value2)']
2896     : 1-----------0----------0-0-0--0--
2896     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node4)', '~(voting_quorum=quorum__node0_node2_node4)', '~(voting_quorum=quorum__node1_node2_node4)', '~vote(node3,value0)']
2897     : -1--------------0------00-0--0---
2897     : ['decided(value1)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value1)']
2898     : --1--------------0-----00-0--0---
2898     : ['decided(value2)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value2)']
2899     : 1--------------0-------00-0--0---
2899     : ['decided(value0)', '~(voting_quorum=quorum__node0_node1_node2)', '~(voting_quorum=quorum__node0_node1_node3)', '~(voting_quorum=quorum__node0_node2_node3)', '~(voting_quorum=quorum__node1_node2_node3)', '~vote(node4,value0)']
2900     : -1--0------------------------0000
2900     : ['decided(value1)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value1)']
2901     : --1--0-----------------------0000
2901     : ['decided(value2)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value2)']
2902     : 1--0-------------------------0000
2902     : ['decided(value0)', '~(voting_quorum=quorum__node1_node2_node3)', '~(voting_quorum=quorum__node1_node2_node4)', '~(voting_quorum=quorum__node1_node3_node4)', '~(voting_quorum=quorum__node2_node3_node4)', '~vote(node0,value0)']
num_forall :   6
num_exists :   0
num_literals : 16
quantified form : forall QUORUM2,QUORUM1,QUORUM3,NODE0,VALUE0,QUORUM0. voting_quorum = QUORUM1 | member(NODE0,QUORUM2) | member(NODE0,QUORUM1) | voting_quorum = QUORUM2 | member(NODE0,QUORUM0) | voting_quorum = QUORUM0 | voting_quorum = QUORUM3 | vote(NODE0,VALUE0) | ~decided(VALUE0) | member(NODE0,QUORUM3) | (QUORUM0 = QUORUM1 | QUORUM2 = QUORUM3 | QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | QUORUM0 = QUORUM3 | QUORUM1 = QUORUM3)
qcost : 22



[QRM NOTE]: Time elapsed since start: 54.292 seconds

[QRM NOTE]: Time elapsed since last: 8.364 seconds

[QRM NOTE]: Peak memory: 11633131 bytes


========================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/toy_consensus_forall.ivy: node=5,value=3]

========================================================================================================


New level: 1
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26]
 solution : [1, 2, 23]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2417851639229258349412352), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, 604462909807314587353088), (22, 604462909807314587353088), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2417851639229258349412352), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, 604462909807314587353088), (22, 604462909807314587353088), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 1 among pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 2417851639229258349412352), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, 604462909807314587353088), (22, 604462909807314587353088), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

Decide 3 with phase True at level 1

After decision at level 1
 pending : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26]
 solution : [1, 2, 23, 3]


New level: 2
 pending : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26]
 solution : [1, 2, 23, 3]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2417851639229258349412352), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, 604462909807314587353088), (22, 604462909807314587353088), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, 18889465931478580854784), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, 151115727451828646838272), (22, 151115727451828646838272), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 2 among pending : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, 18889465931478580854784), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, 151115727451828646838272), (22, 151115727451828646838272), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

Decide 21 with phase True at level 2

After decision at level 2
 pending : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26]
 solution : [1, 2, 23, 3, 21]


New level: 3
 pending : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26]
 solution : [1, 2, 23, 3, 21]


Before reduction : 
 pending  : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26]
 solution : [1, 2, 23, 3, 21]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, 18889465931478580854784), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, 151115727451828646838272), (22, 151115727451828646838272), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, 576460752303423488), (27, -1)]

Covered at level 3 : {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22}

After reduction : 
 pending  : [4, 5, 6, 24, 25, 26]
 solution : [1, 2, 23, 3, 21]


Before reduction : 
 pending  : [4, 5, 6, 24, 25, 26]
 solution : [1, 2, 23, 3, 21]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, 576460752303423488), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, 576460752303423488), (27, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [4, 5, 6, 24, 25, 26]
 solution : [1, 2, 23, 3, 21]


Solution : [1, 2, 23, 3, 21] has cost 30.


Decide in level 3 among pending : [4, 5, 6, 24, 25, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, 576460752303423488), (27, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [4, 5, 6, 24, 25]
 solution : [1, 2, 23, 3, 21, 26]


New level: 4
 pending : [4, 5, 6, 24, 25]
 solution : [1, 2, 23, 3, 21, 26]


Before reduction : 
 pending  : [4, 5, 6, 24, 25]
 solution : [1, 2, 23, 3, 21, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, 576460752303423488), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1)]

Covered at level 4 : {4, 5, 6, 24, 25}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 26]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 26]


Solution : [1, 2, 23, 3, 21, 26] has cost 52.


Before backtrack at level 4
 pending : []
 solution : [1, 2, 23, 3, 21, 26]

After backtrack at level 4
 pending : [4, 5, 6, 24, 25]
 solution : [1, 2, 23, 3, 21, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [4, 5, 6, 24, 25]
 solution : [1, 2, 23, 3, 21]


Before reduction : 
 pending  : [4, 5, 6, 24, 25]
 solution : [1, 2, 23, 3, 21]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [4, 5, 6, 24, 25]
 solution : [1, 2, 23, 3, 21]


Solution : [1, 2, 23, 3, 21] has cost 30.


Decide in level 4 among pending : [4, 5, 6, 24, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 24 with phase True at level 4

After decision at level 4
 pending : [4, 5, 6, 25]
 solution : [1, 2, 23, 3, 21, 24]


New level: 5
 pending : [4, 5, 6, 25]
 solution : [1, 2, 23, 3, 21, 24]


Before reduction : 
 pending  : [4, 5, 6, 25]
 solution : [1, 2, 23, 3, 21, 24]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 5 : {4}

After reduction : 
 pending  : [5, 6, 25]
 solution : [1, 2, 23, 3, 21, 24]


Before reduction : 
 pending  : [5, 6, 25]
 solution : [1, 2, 23, 3, 21, 24]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 6, 25]
 solution : [1, 2, 23, 3, 21, 24]


Solution : [1, 2, 23, 3, 21, 24] has cost 54.


Before backtrack at level 5
 pending : [5, 6, 25]
 solution : [1, 2, 23, 3, 21, 24]

After backtrack at level 5
 pending : [5, 6, 25, 4]
 solution : [1, 2, 23, 3, 21, 24]


Invert decision for 24 at level 4


New level: 5
 pending : [5, 6, 25, 4]
 solution : [1, 2, 23, 3, 21]


Before reduction : 
 pending  : [5, 6, 25, 4]
 solution : [1, 2, 23, 3, 21]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 6, 25, 4]
 solution : [1, 2, 23, 3, 21]


Solution : [1, 2, 23, 3, 21] has cost 30.


Decide in level 5 among pending : [5, 6, 25, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 25 with phase True at level 5

After decision at level 5
 pending : [5, 6, 4]
 solution : [1, 2, 23, 3, 21, 25]


New level: 6
 pending : [5, 6, 4]
 solution : [1, 2, 23, 3, 21, 25]


Before reduction : 
 pending  : [5, 6, 4]
 solution : [1, 2, 23, 3, 21, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 4503599627370496), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 6 : {6}

After reduction : 
 pending  : [5, 4]
 solution : [1, 2, 23, 3, 21, 25]


Before reduction : 
 pending  : [5, 4]
 solution : [1, 2, 23, 3, 21, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 4503599627370496), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 4503599627370496), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 4]
 solution : [1, 2, 23, 3, 21, 25]


Solution : [1, 2, 23, 3, 21, 25] has cost 52.


Decide in level 6 among pending : [5, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 4503599627370496), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [4]
 solution : [1, 2, 23, 3, 21, 25, 5]


New level: 7
 pending : [4]
 solution : [1, 2, 23, 3, 21, 25, 5]


Before reduction : 
 pending  : [4]
 solution : [1, 2, 23, 3, 21, 25, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 4503599627370496), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : {4}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 25, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 25, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 25, 5]


Solution : [1, 2, 23, 3, 21, 25, 5] has cost 59.


Before backtrack at level 7
 pending : []
 solution : [1, 2, 23, 3, 21, 25, 5]

After backtrack at level 7
 pending : [4]
 solution : [1, 2, 23, 3, 21, 25, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [4]
 solution : [1, 2, 23, 3, 21, 25]


Before reduction : 
 pending  : [4]
 solution : [1, 2, 23, 3, 21, 25]

Essensial at level 7 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 25, 4]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 25, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 25, 4]


Solution : [1, 2, 23, 3, 21, 25, 4] has cost 61.


Before backtrack at level 7
 pending : []
 solution : [1, 2, 23, 3, 21, 25, 4]

After backtrack at level 7
 pending : [4]
 solution : [1, 2, 23, 3, 21, 25]


Before backtrack at level 6
 pending : [4]
 solution : [1, 2, 23, 3, 21, 25]

After backtrack at level 6
 pending : [4, 6, 5]
 solution : [1, 2, 23, 3, 21, 25]


Invert decision for 25 at level 5


New level: 6
 pending : [4, 6, 5]
 solution : [1, 2, 23, 3, 21]


Before reduction : 
 pending  : [4, 6, 5]
 solution : [1, 2, 23, 3, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [4, 6, 5]
 solution : [1, 2, 23, 3, 21]


Solution : [1, 2, 23, 3, 21] has cost 30.


Decide in level 6 among pending : [4, 6, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [4, 6]
 solution : [1, 2, 23, 3, 21, 5]


New level: 7
 pending : [4, 6]
 solution : [1, 2, 23, 3, 21, 5]


Before reduction : 
 pending  : [4, 6]
 solution : [1, 2, 23, 3, 21, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : {4, 6}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 5]


Solution : [1, 2, 23, 3, 21, 5] has cost 37.


Before backtrack at level 7
 pending : []
 solution : [1, 2, 23, 3, 21, 5]

After backtrack at level 7
 pending : [4, 6]
 solution : [1, 2, 23, 3, 21, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [4, 6]
 solution : [1, 2, 23, 3, 21]


Before reduction : 
 pending  : [4, 6]
 solution : [1, 2, 23, 3, 21]

Essensial at level 7 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 4, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 21, 4, 6]


Solution : [1, 2, 23, 3, 21, 4, 6] has cost 46.


Before backtrack at level 7
 pending : []
 solution : [1, 2, 23, 3, 21, 4, 6]

After backtrack at level 7
 pending : [4, 6]
 solution : [1, 2, 23, 3, 21]


Before backtrack at level 6
 pending : [4, 6]
 solution : [1, 2, 23, 3, 21]

After backtrack at level 6
 pending : [4, 6, 5]
 solution : [1, 2, 23, 3, 21]


Before backtrack at level 5
 pending : [4, 6, 5]
 solution : [1, 2, 23, 3, 21]

After backtrack at level 5
 pending : [4, 6, 5, 25]
 solution : [1, 2, 23, 3, 21]


Before backtrack at level 4
 pending : [4, 6, 5, 25]
 solution : [1, 2, 23, 3, 21]

After backtrack at level 4
 pending : [4, 6, 5, 25, 24]
 solution : [1, 2, 23, 3, 21]


Before backtrack at level 3
 pending : [4, 6, 5, 25, 24]
 solution : [1, 2, 23, 3, 21]

After backtrack at level 3
 pending : [4, 6, 5, 25, 24, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26]
 solution : [1, 2, 23, 3, 21]


Invert decision for 21 at level 2


New level: 3
 pending : [4, 6, 5, 25, 24, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [4, 6, 5, 25, 24, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26]
 solution : [1, 2, 23, 3]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, 18889465931478580854784), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, 151115727451828646838272), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [4, 6, 5, 25, 24, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 3 among pending : [4, 6, 5, 25, 24, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, 18889465931478580854784), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, 151115727451828646838272), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

Decide 22 with phase True at level 3

After decision at level 3
 pending : [4, 6, 5, 25, 24, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26]
 solution : [1, 2, 23, 3, 22]


New level: 4
 pending : [4, 6, 5, 25, 24, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26]
 solution : [1, 2, 23, 3, 22]


Before reduction : 
 pending  : [4, 6, 5, 25, 24, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26]
 solution : [1, 2, 23, 3, 22]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, 18889465931478580854784), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, 151115727451828646838272), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 0), (8, 0), (9, 1152921504606846976), (10, 4611686018427387904), (11, 0), (12, 0), (13, 0), (14, 576460752303423488), (15, 0), (16, 4611686018427387904), (17, 0), (18, 576460752303423488), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

Covered at level 4 : {7, 8, 11, 12, 13, 15, 17, 19, 20}

After reduction : 
 pending  : [4, 6, 5, 25, 24, 9, 10, 14, 16, 18, 26]
 solution : [1, 2, 23, 3, 22]


Before reduction : 
 pending  : [4, 6, 5, 25, 24, 9, 10, 14, 16, 18, 26]
 solution : [1, 2, 23, 3, 22]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 0), (8, 0), (9, 1152921504606846976), (10, 4611686018427387904), (11, 0), (12, 0), (13, 0), (14, 576460752303423488), (15, 0), (16, 4611686018427387904), (17, 0), (18, 576460752303423488), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [4, 6, 5, 25, 24, 9, 10, 14, 16, 18, 26]
 solution : [1, 2, 23, 3, 22]


Solution : [1, 2, 23, 3, 22] has cost 30.


Decide in level 4 among pending : [4, 6, 5, 25, 24, 9, 10, 14, 16, 18, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

Decide 26 with phase True at level 4

After decision at level 4
 pending : [4, 6, 5, 25, 24, 9, 10, 14, 16, 18]
 solution : [1, 2, 23, 3, 22, 26]


New level: 5
 pending : [4, 6, 5, 25, 24, 9, 10, 14, 16, 18]
 solution : [1, 2, 23, 3, 22, 26]


Before reduction : 
 pending  : [4, 6, 5, 25, 24, 9, 10, 14, 16, 18]
 solution : [1, 2, 23, 3, 22, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1)]

Covered at level 5 : {4, 5, 6, 9, 10, 14, 16, 18, 24, 25}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 22, 26]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 22, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 22, 26]


Solution : [1, 2, 23, 3, 22, 26] has cost 52.


Before backtrack at level 5
 pending : []
 solution : [1, 2, 23, 3, 22, 26]

After backtrack at level 5
 pending : [4, 6, 5, 25, 24, 9, 10, 14, 16, 18]
 solution : [1, 2, 23, 3, 22, 26]


Invert decision for 26 at level 4


New level: 5
 pending : [4, 6, 5, 25, 24, 9, 10, 14, 16, 18]
 solution : [1, 2, 23, 3, 22]


Before reduction : 
 pending  : [4, 6, 5, 25, 24, 9, 10, 14, 16, 18]
 solution : [1, 2, 23, 3, 22]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [4, 6, 5, 25, 24, 9, 10, 14, 16, 18]
 solution : [1, 2, 23, 3, 22]


Solution : [1, 2, 23, 3, 22] has cost 30.


Decide in level 5 among pending : [4, 6, 5, 25, 24, 9, 10, 14, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Decide 25 with phase True at level 5

After decision at level 5
 pending : [4, 6, 5, 24, 9, 10, 14, 16, 18]
 solution : [1, 2, 23, 3, 22, 25]


New level: 6
 pending : [4, 6, 5, 24, 9, 10, 14, 16, 18]
 solution : [1, 2, 23, 3, 22, 25]


Before reduction : 
 pending  : [4, 6, 5, 24, 9, 10, 14, 16, 18]
 solution : [1, 2, 23, 3, 22, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, 0), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

Covered at level 6 : {18, 6}

After reduction : 
 pending  : [4, 5, 24, 9, 10, 14, 16]
 solution : [1, 2, 23, 3, 22, 25]


Before reduction : 
 pending  : [4, 5, 24, 9, 10, 14, 16]
 solution : [1, 2, 23, 3, 22, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, 0), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, -1), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 2305843009213693952), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [4, 5, 24, 9, 10, 14, 16]
 solution : [1, 2, 23, 3, 22, 25]


Solution : [1, 2, 23, 3, 22, 25] has cost 52.


Before backtrack at level 6
 pending : [4, 5, 24, 9, 10, 14, 16]
 solution : [1, 2, 23, 3, 22, 25]

After backtrack at level 6
 pending : [4, 5, 24, 9, 10, 14, 16, 6, 18]
 solution : [1, 2, 23, 3, 22, 25]


Invert decision for 25 at level 5


New level: 6
 pending : [4, 5, 24, 9, 10, 14, 16, 6, 18]
 solution : [1, 2, 23, 3, 22]


Before reduction : 
 pending  : [4, 5, 24, 9, 10, 14, 16, 6, 18]
 solution : [1, 2, 23, 3, 22]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, -1), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 2305843009213693952), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [4, 5, 24, 9, 10, 14, 16, 6, 18]
 solution : [1, 2, 23, 3, 22]


Solution : [1, 2, 23, 3, 22] has cost 30.


Decide in level 6 among pending : [4, 5, 24, 9, 10, 14, 16, 6, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [4, 5, 9, 10, 14, 16, 6, 18]
 solution : [1, 2, 23, 3, 22, 24]


New level: 7
 pending : [4, 5, 9, 10, 14, 16, 6, 18]
 solution : [1, 2, 23, 3, 22, 24]


Before reduction : 
 pending  : [4, 5, 9, 10, 14, 16, 6, 18]
 solution : [1, 2, 23, 3, 22, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, 0), (10, 72057594037927936), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : {9, 4}

After reduction : 
 pending  : [5, 10, 14, 16, 6, 18]
 solution : [1, 2, 23, 3, 22, 24]


Before reduction : 
 pending  : [5, 10, 14, 16, 6, 18]
 solution : [1, 2, 23, 3, 22, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, 0), (10, 72057594037927936), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, -1), (10, 72057594037927936), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 10, 14, 16, 6, 18]
 solution : [1, 2, 23, 3, 22, 24]


Solution : [1, 2, 23, 3, 22, 24] has cost 54.


Before backtrack at level 7
 pending : [5, 10, 14, 16, 6, 18]
 solution : [1, 2, 23, 3, 22, 24]

After backtrack at level 7
 pending : [5, 10, 14, 16, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 22, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [5, 10, 14, 16, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 22]


Before reduction : 
 pending  : [5, 10, 14, 16, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, -1), (10, 72057594037927936), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 10, 14, 16, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 22]


Solution : [1, 2, 23, 3, 22] has cost 30.


Decide in level 7 among pending : [5, 10, 14, 16, 6, 18, 4, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [10, 14, 16, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 22, 5]


New level: 8
 pending : [10, 14, 16, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 22, 5]


Before reduction : 
 pending  : [10, 14, 16, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 22, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 8 : {4, 6, 9, 10, 14, 16, 18}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 22, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 22, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 22, 5]


Solution : [1, 2, 23, 3, 22, 5] has cost 37.


Before backtrack at level 8
 pending : []
 solution : [1, 2, 23, 3, 22, 5]

After backtrack at level 8
 pending : [10, 14, 16, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 22, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [10, 14, 16, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 22]


Before reduction : 
 pending  : [10, 14, 16, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 22]

Essensial at level 8 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 8 : {9, 10, 14, 16, 18}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 22, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 22, 4, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 22, 4, 6]


Solution : [1, 2, 23, 3, 22, 4, 6] has cost 46.


Before backtrack at level 8
 pending : []
 solution : [1, 2, 23, 3, 22, 4, 6]

After backtrack at level 8
 pending : [6, 4, 10, 14, 16, 18, 9]
 solution : [1, 2, 23, 3, 22]


Before backtrack at level 7
 pending : [6, 4, 10, 14, 16, 18, 9]
 solution : [1, 2, 23, 3, 22]

After backtrack at level 7
 pending : [6, 4, 10, 14, 16, 18, 9, 5]
 solution : [1, 2, 23, 3, 22]


Before backtrack at level 6
 pending : [6, 4, 10, 14, 16, 18, 9, 5]
 solution : [1, 2, 23, 3, 22]

After backtrack at level 6
 pending : [6, 4, 10, 14, 16, 18, 9, 5, 24]
 solution : [1, 2, 23, 3, 22]


Before backtrack at level 5
 pending : [6, 4, 10, 14, 16, 18, 9, 5, 24]
 solution : [1, 2, 23, 3, 22]

After backtrack at level 5
 pending : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25]
 solution : [1, 2, 23, 3, 22]


Before backtrack at level 4
 pending : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25]
 solution : [1, 2, 23, 3, 22]

After backtrack at level 4
 pending : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20, 26]
 solution : [1, 2, 23, 3, 22]


Invert decision for 22 at level 3


New level: 4
 pending : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20, 26]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20, 26]
 solution : [1, 2, 23, 3]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, 18889465931478580854784), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20, 26]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 4 among pending : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, 18889465931478580854784), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

Decide 26 with phase True at level 4

After decision at level 4
 pending : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20]
 solution : [1, 2, 23, 3, 26]


New level: 5
 pending : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20]
 solution : [1, 2, 23, 3, 26]


Before reduction : 
 pending  : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20]
 solution : [1, 2, 23, 3, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, 18889465931478580854784), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, 37778931862957161709568), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1)]

Covered at level 5 : {4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 26]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 26]


Solution : [1, 2, 23, 3, 26] has cost 41.


Before backtrack at level 5
 pending : []
 solution : [1, 2, 23, 3, 26]

After backtrack at level 5
 pending : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20]
 solution : [1, 2, 23, 3, 26]


Invert decision for 26 at level 4


New level: 5
 pending : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20]
 solution : [1, 2, 23, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, 18889465931478580854784), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 5 among pending : [6, 4, 10, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, 18889465931478580854784), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Decide 10 with phase True at level 5

After decision at level 5
 pending : [6, 4, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20]
 solution : [1, 2, 23, 3, 10]


New level: 6
 pending : [6, 4, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20]
 solution : [1, 2, 23, 3, 10]


Before reduction : 
 pending  : [6, 4, 14, 16, 18, 9, 5, 24, 25, 7, 8, 11, 12, 13, 15, 17, 19, 20]
 solution : [1, 2, 23, 3, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, 18889465931478580854784), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, 0), (8, 0), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 2361183241434822606848), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Covered at level 6 : {7, 8, 9, 11, 12, 13, 14, 15}

After reduction : 
 pending  : [6, 4, 16, 18, 5, 24, 25, 17, 19, 20]
 solution : [1, 2, 23, 3, 10]


Before reduction : 
 pending  : [6, 4, 16, 18, 5, 24, 25, 17, 19, 20]
 solution : [1, 2, 23, 3, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, 0), (8, 0), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 2361183241434822606848), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2361183241434822606848), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 4, 16, 18, 5, 24, 25, 17, 19, 20]
 solution : [1, 2, 23, 3, 10]


Solution : [1, 2, 23, 3, 10] has cost 32.


Decide in level 6 among pending : [6, 4, 16, 18, 5, 24, 25, 17, 19, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2361183241434822606848), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Decide 17 with phase True at level 6

After decision at level 6
 pending : [6, 4, 16, 18, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10, 17]


New level: 7
 pending : [6, 4, 16, 18, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10, 17]


Before reduction : 
 pending  : [6, 4, 16, 18, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2361183241434822606848), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 576460752303423488), (17, -1), (18, 576460752303423488), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Covered at level 7 : {19, 20}

After reduction : 
 pending  : [6, 4, 16, 18, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 17]


Before reduction : 
 pending  : [6, 4, 16, 18, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 576460752303423488), (17, -1), (18, 576460752303423488), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 576460752303423488), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 4, 16, 18, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 17]


Solution : [1, 2, 23, 3, 10, 17] has cost 43.


Before backtrack at level 7
 pending : [6, 4, 16, 18, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 17]

After backtrack at level 7
 pending : [6, 4, 16, 18, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10, 17]


Invert decision for 17 at level 6


New level: 7
 pending : [6, 4, 16, 18, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10]


Before reduction : 
 pending  : [6, 4, 16, 18, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 576460752303423488), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2361183241434822606848), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 4, 16, 18, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10]


Solution : [1, 2, 23, 3, 10] has cost 32.


Decide in level 7 among pending : [6, 4, 16, 18, 5, 24, 25, 19, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2361183241434822606848), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Decide 16 with phase True at level 7

After decision at level 7
 pending : [6, 4, 18, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10, 16]


New level: 8
 pending : [6, 4, 18, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10, 16]


Before reduction : 
 pending  : [6, 4, 18, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2361183241434822606848), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 8 : {18, 19, 20}

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 16]


Before reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 16]


Solution : [1, 2, 23, 3, 10, 16] has cost 43.


Before backtrack at level 8
 pending : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 16]

After backtrack at level 8
 pending : [6, 4, 5, 24, 25, 18, 19, 20]
 solution : [1, 2, 23, 3, 10, 16]


Invert decision for 16 at level 7


New level: 8
 pending : [6, 4, 5, 24, 25, 18, 19, 20]
 solution : [1, 2, 23, 3, 10]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 18, 19, 20]
 solution : [1, 2, 23, 3, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25, 18, 19, 20]
 solution : [1, 2, 23, 3, 10]


Solution : [1, 2, 23, 3, 10] has cost 32.


Decide in level 8 among pending : [6, 4, 5, 24, 25, 18, 19, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [6, 4, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10, 18]


New level: 9
 pending : [6, 4, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10, 18]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 576460752303423488), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 9 : {19, 20}

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 18]


Before reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 576460752303423488), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 576460752303423488), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 18]


Solution : [1, 2, 23, 3, 10, 18] has cost 43.


Before backtrack at level 9
 pending : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 18]

After backtrack at level 9
 pending : [6, 4, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [6, 4, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 576460752303423488), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1180591620717411303424), (20, 147573952589676412928), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25, 19, 20]
 solution : [1, 2, 23, 3, 10]


Solution : [1, 2, 23, 3, 10] has cost 32.


Decide in level 9 among pending : [6, 4, 5, 24, 25, 19, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1180591620717411303424), (20, 147573952589676412928), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [6, 4, 5, 24, 25, 20]
 solution : [1, 2, 23, 3, 10, 19]


New level: 10
 pending : [6, 4, 5, 24, 25, 20]
 solution : [1, 2, 23, 3, 10, 19]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 20]
 solution : [1, 2, 23, 3, 10, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1180591620717411303424), (20, 147573952589676412928), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Covered at level 10 : {20}

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 19]


Before reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 19]


Solution : [1, 2, 23, 3, 10, 19] has cost 43.


Before backtrack at level 10
 pending : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 19]

After backtrack at level 10
 pending : [6, 4, 5, 24, 25, 20]
 solution : [1, 2, 23, 3, 10, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [6, 4, 5, 24, 25, 20]
 solution : [1, 2, 23, 3, 10]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 20]
 solution : [1, 2, 23, 3, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 147573952589676412928), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25, 20]
 solution : [1, 2, 23, 3, 10]


Solution : [1, 2, 23, 3, 10] has cost 32.


Decide in level 10 among pending : [6, 4, 5, 24, 25, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 147573952589676412928), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Decide 20 with phase True at level 10

After decision at level 10
 pending : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 20]


New level: 11
 pending : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 20]


Before reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 20]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 147573952589676412928), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 20]


Solution : [1, 2, 23, 3, 10, 20] has cost 43.


Before backtrack at level 11
 pending : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 20]

After backtrack at level 11
 pending : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10, 20]


Invert decision for 20 at level 10


New level: 11
 pending : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10]


Before reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 3, 10]


Solution : [1, 2, 23, 3, 10] has cost 32.


Decide in level 11 among pending : [6, 4, 5, 24, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

Decide 25 with phase True at level 11

After decision at level 11
 pending : [6, 4, 5, 24]
 solution : [1, 2, 23, 3, 10, 25]


New level: 12
 pending : [6, 4, 5, 24]
 solution : [1, 2, 23, 3, 10, 25]


Before reduction : 
 pending  : [6, 4, 5, 24]
 solution : [1, 2, 23, 3, 10, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 18446744073709551616), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 72057594037927936), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : {6}

After reduction : 
 pending  : [4, 5, 24]
 solution : [1, 2, 23, 3, 10, 25]


Before reduction : 
 pending  : [4, 5, 24]
 solution : [1, 2, 23, 3, 10, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 72057594037927936), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 72057594037927936), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [4, 5, 24]
 solution : [1, 2, 23, 3, 10, 25]


Solution : [1, 2, 23, 3, 10, 25] has cost 54.


Before backtrack at level 12
 pending : [4, 5, 24]
 solution : [1, 2, 23, 3, 10, 25]

After backtrack at level 12
 pending : [4, 5, 24, 6]
 solution : [1, 2, 23, 3, 10, 25]


Invert decision for 25 at level 11


New level: 12
 pending : [4, 5, 24, 6]
 solution : [1, 2, 23, 3, 10]


Before reduction : 
 pending  : [4, 5, 24, 6]
 solution : [1, 2, 23, 3, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 72057594037927936), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [4, 5, 24, 6]
 solution : [1, 2, 23, 3, 10]


Solution : [1, 2, 23, 3, 10] has cost 32.


Decide in level 12 among pending : [4, 5, 24, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 12

After decision at level 12
 pending : [4, 24, 6]
 solution : [1, 2, 23, 3, 10, 5]


New level: 13
 pending : [4, 24, 6]
 solution : [1, 2, 23, 3, 10, 5]


Before reduction : 
 pending  : [4, 24, 6]
 solution : [1, 2, 23, 3, 10, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 2305843009213693952), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : {24, 4, 6}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 10, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 10, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 10, 5]


Solution : [1, 2, 23, 3, 10, 5] has cost 39.


Before backtrack at level 13
 pending : []
 solution : [1, 2, 23, 3, 10, 5]

After backtrack at level 13
 pending : [4, 24, 6]
 solution : [1, 2, 23, 3, 10, 5]


Invert decision for 5 at level 12


New level: 13
 pending : [4, 24, 6]
 solution : [1, 2, 23, 3, 10]


Before reduction : 
 pending  : [4, 24, 6]
 solution : [1, 2, 23, 3, 10]

Essensial at level 13 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [4, 24]
 solution : [1, 2, 23, 3, 10, 6]


Before reduction : 
 pending  : [4, 24]
 solution : [1, 2, 23, 3, 10, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [4, 24]
 solution : [1, 2, 23, 3, 10, 6]


Solution : [1, 2, 23, 3, 10, 6] has cost 39.


Before backtrack at level 13
 pending : [4, 24]
 solution : [1, 2, 23, 3, 10, 6]

After backtrack at level 13
 pending : [4, 24, 6]
 solution : [1, 2, 23, 3, 10]


Before backtrack at level 12
 pending : [4, 24, 6]
 solution : [1, 2, 23, 3, 10]

After backtrack at level 12
 pending : [4, 24, 6, 5]
 solution : [1, 2, 23, 3, 10]


Before backtrack at level 11
 pending : [4, 24, 6, 5]
 solution : [1, 2, 23, 3, 10]

After backtrack at level 11
 pending : [4, 24, 6, 5, 25]
 solution : [1, 2, 23, 3, 10]


Before backtrack at level 10
 pending : [4, 24, 6, 5, 25]
 solution : [1, 2, 23, 3, 10]

After backtrack at level 10
 pending : [4, 24, 6, 5, 25, 20]
 solution : [1, 2, 23, 3, 10]


Before backtrack at level 9
 pending : [4, 24, 6, 5, 25, 20]
 solution : [1, 2, 23, 3, 10]

After backtrack at level 9
 pending : [4, 24, 6, 5, 25, 20, 19]
 solution : [1, 2, 23, 3, 10]


Before backtrack at level 8
 pending : [4, 24, 6, 5, 25, 20, 19]
 solution : [1, 2, 23, 3, 10]

After backtrack at level 8
 pending : [4, 24, 6, 5, 25, 20, 19, 18]
 solution : [1, 2, 23, 3, 10]


Before backtrack at level 7
 pending : [4, 24, 6, 5, 25, 20, 19, 18]
 solution : [1, 2, 23, 3, 10]

After backtrack at level 7
 pending : [4, 24, 6, 5, 25, 20, 19, 18, 16]
 solution : [1, 2, 23, 3, 10]


Before backtrack at level 6
 pending : [4, 24, 6, 5, 25, 20, 19, 18, 16]
 solution : [1, 2, 23, 3, 10]

After backtrack at level 6
 pending : [4, 24, 6, 5, 25, 20, 19, 18, 16, 14, 9, 7, 8, 11, 12, 13, 15, 17]
 solution : [1, 2, 23, 3, 10]


Invert decision for 10 at level 5


New level: 6
 pending : [4, 24, 6, 5, 25, 20, 19, 18, 16, 14, 9, 7, 8, 11, 12, 13, 15, 17]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [4, 24, 6, 5, 25, 20, 19, 18, 16, 14, 9, 7, 8, 11, 12, 13, 15, 17]
 solution : [1, 2, 23, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [4, 24, 6, 5, 25, 20, 19, 18, 16, 14, 9, 7, 8, 11, 12, 13, 15, 17]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 6 among pending : [4, 24, 6, 5, 25, 20, 19, 18, 16, 14, 9, 7, 8, 11, 12, 13, 15, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Decide 16 with phase True at level 6

After decision at level 6
 pending : [4, 24, 6, 5, 25, 20, 19, 18, 14, 9, 7, 8, 11, 12, 13, 15, 17]
 solution : [1, 2, 23, 3, 16]


New level: 7
 pending : [4, 24, 6, 5, 25, 20, 19, 18, 14, 9, 7, 8, 11, 12, 13, 15, 17]
 solution : [1, 2, 23, 3, 16]


Before reduction : 
 pending  : [4, 24, 6, 5, 25, 20, 19, 18, 14, 9, 7, 8, 11, 12, 13, 15, 17]
 solution : [1, 2, 23, 3, 16]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, 18889465931478580854784), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, 0), (8, 0), (9, 2361183241434822606848), (10, -1), (11, 4722366482869645213696), (12, 737869762948382064640), (13, 184467440737095516160), (14, 0), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 7 : {7, 8, 14, 15, 17, 18, 19, 20}

After reduction : 
 pending  : [4, 24, 6, 5, 25, 9, 11, 12, 13]
 solution : [1, 2, 23, 3, 16]


Before reduction : 
 pending  : [4, 24, 6, 5, 25, 9, 11, 12, 13]
 solution : [1, 2, 23, 3, 16]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, 0), (8, 0), (9, 2361183241434822606848), (10, -1), (11, 4722366482869645213696), (12, 737869762948382064640), (13, 184467440737095516160), (14, 0), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, 1180591620717411303424), (10, -1), (11, 4722366482869645213696), (12, 737869762948382064640), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [4, 24, 6, 5, 25, 9, 11, 12, 13]
 solution : [1, 2, 23, 3, 16]


Solution : [1, 2, 23, 3, 16] has cost 30.


Decide in level 7 among pending : [4, 24, 6, 5, 25, 9, 11, 12, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, 1180591620717411303424), (10, -1), (11, 4722366482869645213696), (12, 737869762948382064640), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 11 with phase True at level 7

After decision at level 7
 pending : [4, 24, 6, 5, 25, 9, 12, 13]
 solution : [1, 2, 23, 3, 16, 11]


New level: 8
 pending : [4, 24, 6, 5, 25, 9, 12, 13]
 solution : [1, 2, 23, 3, 16, 11]


Before reduction : 
 pending  : [4, 24, 6, 5, 25, 9, 12, 13]
 solution : [1, 2, 23, 3, 16, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, 1180591620717411303424), (10, -1), (11, 4722366482869645213696), (12, 737869762948382064640), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 8 : {12, 13}

After reduction : 
 pending  : [4, 24, 6, 5, 25, 9]
 solution : [1, 2, 23, 3, 16, 11]


Before reduction : 
 pending  : [4, 24, 6, 5, 25, 9]
 solution : [1, 2, 23, 3, 16, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [4, 24, 6, 5, 25, 9]
 solution : [1, 2, 23, 3, 16, 11]


Solution : [1, 2, 23, 3, 16, 11] has cost 43.


Before backtrack at level 8
 pending : [4, 24, 6, 5, 25, 9]
 solution : [1, 2, 23, 3, 16, 11]

After backtrack at level 8
 pending : [4, 24, 6, 5, 25, 9, 12, 13]
 solution : [1, 2, 23, 3, 16, 11]


Invert decision for 11 at level 7


New level: 8
 pending : [4, 24, 6, 5, 25, 9, 12, 13]
 solution : [1, 2, 23, 3, 16]


Before reduction : 
 pending  : [4, 24, 6, 5, 25, 9, 12, 13]
 solution : [1, 2, 23, 3, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, 1180591620717411303424), (10, -1), (11, -1), (12, 737869762948382064640), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [4, 24, 6, 5, 25, 9, 12, 13]
 solution : [1, 2, 23, 3, 16]


Solution : [1, 2, 23, 3, 16] has cost 30.


Decide in level 8 among pending : [4, 24, 6, 5, 25, 9, 12, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, 1180591620717411303424), (10, -1), (11, -1), (12, 737869762948382064640), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [4, 24, 6, 5, 25, 12, 13]
 solution : [1, 2, 23, 3, 16, 9]


New level: 9
 pending : [4, 24, 6, 5, 25, 12, 13]
 solution : [1, 2, 23, 3, 16, 9]


Before reduction : 
 pending  : [4, 24, 6, 5, 25, 12, 13]
 solution : [1, 2, 23, 3, 16, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, 1180591620717411303424), (10, -1), (11, -1), (12, 737869762948382064640), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 9 : {12, 13}

After reduction : 
 pending  : [4, 24, 6, 5, 25]
 solution : [1, 2, 23, 3, 16, 9]


Before reduction : 
 pending  : [4, 24, 6, 5, 25]
 solution : [1, 2, 23, 3, 16, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [4, 24, 6, 5, 25]
 solution : [1, 2, 23, 3, 16, 9]


Solution : [1, 2, 23, 3, 16, 9] has cost 45.


Before backtrack at level 9
 pending : [4, 24, 6, 5, 25]
 solution : [1, 2, 23, 3, 16, 9]

After backtrack at level 9
 pending : [4, 24, 6, 5, 25, 12, 13]
 solution : [1, 2, 23, 3, 16, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [4, 24, 6, 5, 25, 12, 13]
 solution : [1, 2, 23, 3, 16]


Before reduction : 
 pending  : [4, 24, 6, 5, 25, 12, 13]
 solution : [1, 2, 23, 3, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 737869762948382064640), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [4, 24, 6, 5, 25, 12, 13]
 solution : [1, 2, 23, 3, 16]


Solution : [1, 2, 23, 3, 16] has cost 30.


Decide in level 9 among pending : [4, 24, 6, 5, 25, 12, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 737869762948382064640), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 12 with phase True at level 9

After decision at level 9
 pending : [4, 24, 6, 5, 25, 13]
 solution : [1, 2, 23, 3, 16, 12]


New level: 10
 pending : [4, 24, 6, 5, 25, 13]
 solution : [1, 2, 23, 3, 16, 12]


Before reduction : 
 pending  : [4, 24, 6, 5, 25, 13]
 solution : [1, 2, 23, 3, 16, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 737869762948382064640), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 10 : {13}

After reduction : 
 pending  : [4, 24, 6, 5, 25]
 solution : [1, 2, 23, 3, 16, 12]


Before reduction : 
 pending  : [4, 24, 6, 5, 25]
 solution : [1, 2, 23, 3, 16, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [4, 24, 6, 5, 25]
 solution : [1, 2, 23, 3, 16, 12]


Solution : [1, 2, 23, 3, 16, 12] has cost 45.


Before backtrack at level 10
 pending : [4, 24, 6, 5, 25]
 solution : [1, 2, 23, 3, 16, 12]

After backtrack at level 10
 pending : [4, 24, 6, 5, 25, 13]
 solution : [1, 2, 23, 3, 16, 12]


Invert decision for 12 at level 9


New level: 10
 pending : [4, 24, 6, 5, 25, 13]
 solution : [1, 2, 23, 3, 16]


Before reduction : 
 pending  : [4, 24, 6, 5, 25, 13]
 solution : [1, 2, 23, 3, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [4, 24, 6, 5, 25, 13]
 solution : [1, 2, 23, 3, 16]


Solution : [1, 2, 23, 3, 16] has cost 30.


Decide in level 10 among pending : [4, 24, 6, 5, 25, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 24 with phase True at level 10

After decision at level 10
 pending : [4, 6, 5, 25, 13]
 solution : [1, 2, 23, 3, 16, 24]


New level: 11
 pending : [4, 6, 5, 25, 13]
 solution : [1, 2, 23, 3, 16, 24]


Before reduction : 
 pending  : [4, 6, 5, 25, 13]
 solution : [1, 2, 23, 3, 16, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 295147905179352825856), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 11 : {4, 13}

After reduction : 
 pending  : [6, 5, 25]
 solution : [1, 2, 23, 3, 16, 24]


Before reduction : 
 pending  : [6, 5, 25]
 solution : [1, 2, 23, 3, 16, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 5, 25]
 solution : [1, 2, 23, 3, 16, 24]


Solution : [1, 2, 23, 3, 16, 24] has cost 54.


Before backtrack at level 11
 pending : [6, 5, 25]
 solution : [1, 2, 23, 3, 16, 24]

After backtrack at level 11
 pending : [6, 5, 25, 4, 13]
 solution : [1, 2, 23, 3, 16, 24]


Invert decision for 24 at level 10


New level: 11
 pending : [6, 5, 25, 4, 13]
 solution : [1, 2, 23, 3, 16]


Before reduction : 
 pending  : [6, 5, 25, 4, 13]
 solution : [1, 2, 23, 3, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 5, 25, 4, 13]
 solution : [1, 2, 23, 3, 16]


Solution : [1, 2, 23, 3, 16] has cost 30.


Decide in level 11 among pending : [6, 5, 25, 4, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [6, 5, 25, 4]
 solution : [1, 2, 23, 3, 16, 13]


New level: 12
 pending : [6, 5, 25, 4]
 solution : [1, 2, 23, 3, 16, 13]


Before reduction : 
 pending  : [6, 5, 25, 4]
 solution : [1, 2, 23, 3, 16, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 5, 25, 4]
 solution : [1, 2, 23, 3, 16, 13]


Solution : [1, 2, 23, 3, 16, 13] has cost 45.


Before backtrack at level 12
 pending : [6, 5, 25, 4]
 solution : [1, 2, 23, 3, 16, 13]

After backtrack at level 12
 pending : [6, 5, 25, 4]
 solution : [1, 2, 23, 3, 16, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [6, 5, 25, 4]
 solution : [1, 2, 23, 3, 16]


Before reduction : 
 pending  : [6, 5, 25, 4]
 solution : [1, 2, 23, 3, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 5, 25, 4]
 solution : [1, 2, 23, 3, 16]


Solution : [1, 2, 23, 3, 16] has cost 30.


Decide in level 12 among pending : [6, 5, 25, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 5 with phase True at level 12

After decision at level 12
 pending : [6, 25, 4]
 solution : [1, 2, 23, 3, 16, 5]


New level: 13
 pending : [6, 25, 4]
 solution : [1, 2, 23, 3, 16, 5]


Before reduction : 
 pending  : [6, 25, 4]
 solution : [1, 2, 23, 3, 16, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 36893488147419103232), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1)]

Covered at level 13 : {25, 4, 6}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 16, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 16, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 16, 5]


Solution : [1, 2, 23, 3, 16, 5] has cost 37.


Before backtrack at level 13
 pending : []
 solution : [1, 2, 23, 3, 16, 5]

After backtrack at level 13
 pending : [6, 25, 4]
 solution : [1, 2, 23, 3, 16, 5]


Invert decision for 5 at level 12


New level: 13
 pending : [6, 25, 4]
 solution : [1, 2, 23, 3, 16]


Before reduction : 
 pending  : [6, 25, 4]
 solution : [1, 2, 23, 3, 16]

Essensial at level 13 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 25]
 solution : [1, 2, 23, 3, 16, 4]


Before reduction : 
 pending  : [6, 25]
 solution : [1, 2, 23, 3, 16, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 25]
 solution : [1, 2, 23, 3, 16, 4]


Solution : [1, 2, 23, 3, 16, 4] has cost 39.


Before backtrack at level 13
 pending : [6, 25]
 solution : [1, 2, 23, 3, 16, 4]

After backtrack at level 13
 pending : [6, 25, 4]
 solution : [1, 2, 23, 3, 16]


Before backtrack at level 12
 pending : [6, 25, 4]
 solution : [1, 2, 23, 3, 16]

After backtrack at level 12
 pending : [6, 25, 4, 5]
 solution : [1, 2, 23, 3, 16]


Before backtrack at level 11
 pending : [6, 25, 4, 5]
 solution : [1, 2, 23, 3, 16]

After backtrack at level 11
 pending : [6, 25, 4, 5, 13]
 solution : [1, 2, 23, 3, 16]


Before backtrack at level 10
 pending : [6, 25, 4, 5, 13]
 solution : [1, 2, 23, 3, 16]

After backtrack at level 10
 pending : [6, 25, 4, 5, 13, 24]
 solution : [1, 2, 23, 3, 16]


Before backtrack at level 9
 pending : [6, 25, 4, 5, 13, 24]
 solution : [1, 2, 23, 3, 16]

After backtrack at level 9
 pending : [6, 25, 4, 5, 13, 24, 12]
 solution : [1, 2, 23, 3, 16]


Before backtrack at level 8
 pending : [6, 25, 4, 5, 13, 24, 12]
 solution : [1, 2, 23, 3, 16]

After backtrack at level 8
 pending : [6, 25, 4, 5, 13, 24, 12, 9]
 solution : [1, 2, 23, 3, 16]


Before backtrack at level 7
 pending : [6, 25, 4, 5, 13, 24, 12, 9]
 solution : [1, 2, 23, 3, 16]

After backtrack at level 7
 pending : [6, 25, 4, 5, 13, 24, 12, 9, 20, 19, 18, 14, 7, 8, 15, 17, 11]
 solution : [1, 2, 23, 3, 16]


Invert decision for 16 at level 6


New level: 7
 pending : [6, 25, 4, 5, 13, 24, 12, 9, 20, 19, 18, 14, 7, 8, 15, 17, 11]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [6, 25, 4, 5, 13, 24, 12, 9, 20, 19, 18, 14, 7, 8, 15, 17, 11]
 solution : [1, 2, 23, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 25, 4, 5, 13, 24, 12, 9, 20, 19, 18, 14, 7, 8, 15, 17, 11]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 7 among pending : [6, 25, 4, 5, 13, 24, 12, 9, 20, 19, 18, 14, 7, 8, 15, 17, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [6, 25, 4, 5, 13, 24, 12, 9, 20, 19, 18, 14, 7, 8, 15, 11]
 solution : [1, 2, 23, 3, 17]


New level: 8
 pending : [6, 25, 4, 5, 13, 24, 12, 9, 20, 19, 18, 14, 7, 8, 15, 11]
 solution : [1, 2, 23, 3, 17]


Before reduction : 
 pending  : [6, 25, 4, 5, 13, 24, 12, 9, 20, 19, 18, 14, 7, 8, 15, 11]
 solution : [1, 2, 23, 3, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, 18889465931478580854784), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 0), (8, 0), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, 0), (16, -1), (17, -1), (18, 576460752303423488), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Covered at level 8 : {7, 8, 15, 19, 20}

After reduction : 
 pending  : [6, 25, 4, 5, 13, 24, 12, 9, 18, 14, 11]
 solution : [1, 2, 23, 3, 17]


Before reduction : 
 pending  : [6, 25, 4, 5, 13, 24, 12, 9, 18, 14, 11]
 solution : [1, 2, 23, 3, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 0), (8, 0), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, 0), (16, -1), (17, -1), (18, 576460752303423488), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 25, 4, 5, 13, 24, 12, 9, 18, 14, 11]
 solution : [1, 2, 23, 3, 17]


Solution : [1, 2, 23, 3, 17] has cost 30.


Decide in level 8 among pending : [6, 25, 4, 5, 13, 24, 12, 9, 18, 14, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Decide 25 with phase True at level 8

After decision at level 8
 pending : [6, 4, 5, 13, 24, 12, 9, 18, 14, 11]
 solution : [1, 2, 23, 3, 17, 25]


New level: 9
 pending : [6, 4, 5, 13, 24, 12, 9, 18, 14, 11]
 solution : [1, 2, 23, 3, 17, 25]


Before reduction : 
 pending  : [6, 4, 5, 13, 24, 12, 9, 18, 14, 11]
 solution : [1, 2, 23, 3, 17, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, 0), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

Covered at level 9 : {18, 6}

After reduction : 
 pending  : [4, 5, 13, 24, 12, 9, 14, 11]
 solution : [1, 2, 23, 3, 17, 25]


Before reduction : 
 pending  : [4, 5, 13, 24, 12, 9, 14, 11]
 solution : [1, 2, 23, 3, 17, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, 0), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, -1), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [4, 5, 13, 24, 12, 9, 14, 11]
 solution : [1, 2, 23, 3, 17, 25]


Solution : [1, 2, 23, 3, 17, 25] has cost 52.


Before backtrack at level 9
 pending : [4, 5, 13, 24, 12, 9, 14, 11]
 solution : [1, 2, 23, 3, 17, 25]

After backtrack at level 9
 pending : [4, 5, 13, 24, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 3, 17, 25]


Invert decision for 25 at level 8


New level: 9
 pending : [4, 5, 13, 24, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 3, 17]


Before reduction : 
 pending  : [4, 5, 13, 24, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 3, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, -1), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [4, 5, 13, 24, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 3, 17]


Solution : [1, 2, 23, 3, 17] has cost 30.


Decide in level 9 among pending : [4, 5, 13, 24, 12, 9, 14, 11, 6, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [4, 5, 13, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 3, 17, 24]


New level: 10
 pending : [4, 5, 13, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 3, 17, 24]


Before reduction : 
 pending  : [4, 5, 13, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 3, 17, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 72057594037927936), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 10 : {4, 9, 11, 12, 13}

After reduction : 
 pending  : [5, 14, 6, 18]
 solution : [1, 2, 23, 3, 17, 24]


Before reduction : 
 pending  : [5, 14, 6, 18]
 solution : [1, 2, 23, 3, 17, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 72057594037927936), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 14, 6, 18]
 solution : [1, 2, 23, 3, 17, 24]


Solution : [1, 2, 23, 3, 17, 24] has cost 54.


Before backtrack at level 10
 pending : [5, 14, 6, 18]
 solution : [1, 2, 23, 3, 17, 24]

After backtrack at level 10
 pending : [5, 14, 6, 18, 4, 13, 12, 9, 11]
 solution : [1, 2, 23, 3, 17, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [5, 14, 6, 18, 4, 13, 12, 9, 11]
 solution : [1, 2, 23, 3, 17]


Before reduction : 
 pending  : [5, 14, 6, 18, 4, 13, 12, 9, 11]
 solution : [1, 2, 23, 3, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 14, 6, 18, 4, 13, 12, 9, 11]
 solution : [1, 2, 23, 3, 17]


Solution : [1, 2, 23, 3, 17] has cost 30.


Decide in level 10 among pending : [5, 14, 6, 18, 4, 13, 12, 9, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 11 with phase True at level 10

After decision at level 10
 pending : [5, 14, 6, 18, 4, 13, 12, 9]
 solution : [1, 2, 23, 3, 17, 11]


New level: 11
 pending : [5, 14, 6, 18, 4, 13, 12, 9]
 solution : [1, 2, 23, 3, 17, 11]


Before reduction : 
 pending  : [5, 14, 6, 18, 4, 13, 12, 9]
 solution : [1, 2, 23, 3, 17, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, 1180591620717411303424), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, 0), (13, 0), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : {12, 13}

After reduction : 
 pending  : [5, 14, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 17, 11]


Before reduction : 
 pending  : [5, 14, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 17, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, 0), (13, 0), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 14, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 17, 11]


Solution : [1, 2, 23, 3, 17, 11] has cost 43.


Before backtrack at level 11
 pending : [5, 14, 6, 18, 4, 9]
 solution : [1, 2, 23, 3, 17, 11]

After backtrack at level 11
 pending : [5, 14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 3, 17, 11]


Invert decision for 11 at level 10


New level: 11
 pending : [5, 14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 3, 17]


Before reduction : 
 pending  : [5, 14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 3, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, -1), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 3, 17]


Solution : [1, 2, 23, 3, 17] has cost 30.


Decide in level 11 among pending : [5, 14, 6, 18, 4, 9, 13, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, -1), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 3, 17, 5]


New level: 12
 pending : [14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 3, 17, 5]


Before reduction : 
 pending  : [14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 3, 17, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 442721857769029238784), (10, -1), (11, -1), (12, 313594649253062377472), (13, 92233720368547758080), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : {4, 6, 9, 12, 13, 14, 18}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 17, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 17, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 17, 5]


Solution : [1, 2, 23, 3, 17, 5] has cost 37.


Before backtrack at level 12
 pending : []
 solution : [1, 2, 23, 3, 17, 5]

After backtrack at level 12
 pending : [14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 3, 17, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 3, 17]


Before reduction : 
 pending  : [14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 3, 17]

Essensial at level 12 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : {9, 12, 13, 14, 18}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 17, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 17, 4, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 17, 4, 6]


Solution : [1, 2, 23, 3, 17, 4, 6] has cost 46.


Before backtrack at level 12
 pending : []
 solution : [1, 2, 23, 3, 17, 4, 6]

After backtrack at level 12
 pending : [6, 4, 14, 18, 9, 13, 12]
 solution : [1, 2, 23, 3, 17]


Before backtrack at level 11
 pending : [6, 4, 14, 18, 9, 13, 12]
 solution : [1, 2, 23, 3, 17]

After backtrack at level 11
 pending : [6, 4, 14, 18, 9, 13, 12, 5]
 solution : [1, 2, 23, 3, 17]


Before backtrack at level 10
 pending : [6, 4, 14, 18, 9, 13, 12, 5]
 solution : [1, 2, 23, 3, 17]

After backtrack at level 10
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 11]
 solution : [1, 2, 23, 3, 17]


Before backtrack at level 9
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 11]
 solution : [1, 2, 23, 3, 17]

After backtrack at level 9
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24]
 solution : [1, 2, 23, 3, 17]


Before backtrack at level 8
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24]
 solution : [1, 2, 23, 3, 17]

After backtrack at level 8
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24, 20, 19, 7, 8, 15, 25]
 solution : [1, 2, 23, 3, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24, 20, 19, 7, 8, 15, 25]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24, 20, 19, 7, 8, 15, 25]
 solution : [1, 2, 23, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24, 20, 19, 7, 8, 15, 25]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 8 among pending : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24, 20, 19, 7, 8, 15, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Decide 11 with phase True at level 8

After decision at level 8
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 24, 20, 19, 7, 8, 15, 25]
 solution : [1, 2, 23, 3, 11]


New level: 9
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 24, 20, 19, 7, 8, 15, 25]
 solution : [1, 2, 23, 3, 11]


Before reduction : 
 pending  : [6, 4, 14, 18, 9, 13, 12, 5, 24, 20, 19, 7, 8, 15, 25]
 solution : [1, 2, 23, 3, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, 18889465931478580854784), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 0), (8, 0), (9, 1152921504606846976), (10, -1), (11, -1), (12, 0), (13, 0), (14, 576460752303423488), (15, 0), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Covered at level 9 : {7, 8, 12, 13, 15}

After reduction : 
 pending  : [6, 4, 14, 18, 9, 5, 24, 20, 19, 25]
 solution : [1, 2, 23, 3, 11]


Before reduction : 
 pending  : [6, 4, 14, 18, 9, 5, 24, 20, 19, 25]
 solution : [1, 2, 23, 3, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 0), (8, 0), (9, 1152921504606846976), (10, -1), (11, -1), (12, 0), (13, 0), (14, 576460752303423488), (15, 0), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 4, 14, 18, 9, 5, 24, 20, 19, 25]
 solution : [1, 2, 23, 3, 11]


Solution : [1, 2, 23, 3, 11] has cost 32.


Decide in level 9 among pending : [6, 4, 14, 18, 9, 5, 24, 20, 19, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [6, 4, 14, 18, 9, 5, 20, 19, 25]
 solution : [1, 2, 23, 3, 11, 24]


New level: 10
 pending : [6, 4, 14, 18, 9, 5, 20, 19, 25]
 solution : [1, 2, 23, 3, 11, 24]


Before reduction : 
 pending  : [6, 4, 14, 18, 9, 5, 20, 19, 25]
 solution : [1, 2, 23, 3, 11, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, 4722366482869645213696), (26, -1), (27, -1)]

Covered at level 10 : {9, 4}

After reduction : 
 pending  : [6, 14, 18, 5, 20, 19, 25]
 solution : [1, 2, 23, 3, 11, 24]


Before reduction : 
 pending  : [6, 14, 18, 5, 20, 19, 25]
 solution : [1, 2, 23, 3, 11, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, 4722366482869645213696), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, 4722366482869645213696), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 14, 18, 5, 20, 19, 25]
 solution : [1, 2, 23, 3, 11, 24]


Solution : [1, 2, 23, 3, 11, 24] has cost 56.


Before backtrack at level 10
 pending : [6, 14, 18, 5, 20, 19, 25]
 solution : [1, 2, 23, 3, 11, 24]

After backtrack at level 10
 pending : [6, 14, 18, 5, 20, 19, 25, 4, 9]
 solution : [1, 2, 23, 3, 11, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [6, 14, 18, 5, 20, 19, 25, 4, 9]
 solution : [1, 2, 23, 3, 11]


Before reduction : 
 pending  : [6, 14, 18, 5, 20, 19, 25, 4, 9]
 solution : [1, 2, 23, 3, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, 4722366482869645213696), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, 4722366482869645213696), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 14, 18, 5, 20, 19, 25, 4, 9]
 solution : [1, 2, 23, 3, 11]


Solution : [1, 2, 23, 3, 11] has cost 32.


Decide in level 10 among pending : [6, 14, 18, 5, 20, 19, 25, 4, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, 4722366482869645213696), (26, -1), (27, -1)]

Decide 25 with phase True at level 10

After decision at level 10
 pending : [6, 14, 18, 5, 20, 19, 4, 9]
 solution : [1, 2, 23, 3, 11, 25]


New level: 11
 pending : [6, 14, 18, 5, 20, 19, 4, 9]
 solution : [1, 2, 23, 3, 11, 25]


Before reduction : 
 pending  : [6, 14, 18, 5, 20, 19, 4, 9]
 solution : [1, 2, 23, 3, 11, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, 4722366482869645213696), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, 0), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : {18, 19, 20, 6}

After reduction : 
 pending  : [14, 5, 4, 9]
 solution : [1, 2, 23, 3, 11, 25]


Before reduction : 
 pending  : [14, 5, 4, 9]
 solution : [1, 2, 23, 3, 11, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, 0), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, -1), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [14, 5, 4, 9]
 solution : [1, 2, 23, 3, 11, 25]


Solution : [1, 2, 23, 3, 11, 25] has cost 54.


Before backtrack at level 11
 pending : [14, 5, 4, 9]
 solution : [1, 2, 23, 3, 11, 25]

After backtrack at level 11
 pending : [14, 5, 4, 9, 6, 18, 20, 19]
 solution : [1, 2, 23, 3, 11, 25]


Invert decision for 25 at level 10


New level: 11
 pending : [14, 5, 4, 9, 6, 18, 20, 19]
 solution : [1, 2, 23, 3, 11]


Before reduction : 
 pending  : [14, 5, 4, 9, 6, 18, 20, 19]
 solution : [1, 2, 23, 3, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, -1), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [14, 5, 4, 9, 6, 18, 20, 19]
 solution : [1, 2, 23, 3, 11]


Solution : [1, 2, 23, 3, 11] has cost 32.


Decide in level 11 among pending : [14, 5, 4, 9, 6, 18, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [14, 4, 9, 6, 18, 20, 19]
 solution : [1, 2, 23, 3, 11, 5]


New level: 12
 pending : [14, 4, 9, 6, 18, 20, 19]
 solution : [1, 2, 23, 3, 11, 5]


Before reduction : 
 pending  : [14, 4, 9, 6, 18, 20, 19]
 solution : [1, 2, 23, 3, 11, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, 18446744073709551616), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : {4, 6, 9, 14, 18, 19, 20}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 11, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 11, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 11, 5]


Solution : [1, 2, 23, 3, 11, 5] has cost 39.


Before backtrack at level 12
 pending : []
 solution : [1, 2, 23, 3, 11, 5]

After backtrack at level 12
 pending : [14, 4, 9, 6, 18, 20, 19]
 solution : [1, 2, 23, 3, 11, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [14, 4, 9, 6, 18, 20, 19]
 solution : [1, 2, 23, 3, 11]


Before reduction : 
 pending  : [14, 4, 9, 6, 18, 20, 19]
 solution : [1, 2, 23, 3, 11]

Essensial at level 12 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : {9, 14, 18, 19, 20}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 11, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 11, 4, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 11, 4, 6]


Solution : [1, 2, 23, 3, 11, 4, 6] has cost 48.


Before backtrack at level 12
 pending : []
 solution : [1, 2, 23, 3, 11, 4, 6]

After backtrack at level 12
 pending : [4, 6, 14, 9, 18, 20, 19]
 solution : [1, 2, 23, 3, 11]


Before backtrack at level 11
 pending : [4, 6, 14, 9, 18, 20, 19]
 solution : [1, 2, 23, 3, 11]

After backtrack at level 11
 pending : [4, 6, 14, 9, 18, 20, 19, 5]
 solution : [1, 2, 23, 3, 11]


Before backtrack at level 10
 pending : [4, 6, 14, 9, 18, 20, 19, 5]
 solution : [1, 2, 23, 3, 11]

After backtrack at level 10
 pending : [4, 6, 14, 9, 18, 20, 19, 5, 25]
 solution : [1, 2, 23, 3, 11]


Before backtrack at level 9
 pending : [4, 6, 14, 9, 18, 20, 19, 5, 25]
 solution : [1, 2, 23, 3, 11]

After backtrack at level 9
 pending : [4, 6, 14, 9, 18, 20, 19, 5, 25, 13, 12, 7, 8, 15, 24]
 solution : [1, 2, 23, 3, 11]


Invert decision for 11 at level 8


New level: 9
 pending : [4, 6, 14, 9, 18, 20, 19, 5, 25, 13, 12, 7, 8, 15, 24]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [4, 6, 14, 9, 18, 20, 19, 5, 25, 13, 12, 7, 8, 15, 24]
 solution : [1, 2, 23, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [4, 6, 14, 9, 18, 20, 19, 5, 25, 13, 12, 7, 8, 15, 24]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 9 among pending : [4, 6, 14, 9, 18, 20, 19, 5, 25, 13, 12, 7, 8, 15, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [4, 6, 14, 9, 18, 20, 19, 5, 13, 12, 7, 8, 15, 24]
 solution : [1, 2, 23, 3, 25]


New level: 10
 pending : [4, 6, 14, 9, 18, 20, 19, 5, 13, 12, 7, 8, 15, 24]
 solution : [1, 2, 23, 3, 25]


Before reduction : 
 pending  : [4, 6, 14, 9, 18, 20, 19, 5, 13, 12, 7, 8, 15, 24]
 solution : [1, 2, 23, 3, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, 4722366482869645213696), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, 0), (7, 1180591620717411303424), (8, 184467440737095516160), (9, 3541774862152233910272), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 1180591620717411303424), (15, 147573952589676412928), (16, -1), (17, -1), (18, 0), (19, 288230376151711744), (20, 0), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

Covered at level 10 : {18, 20, 6}

After reduction : 
 pending  : [4, 14, 9, 19, 5, 13, 12, 7, 8, 15, 24]
 solution : [1, 2, 23, 3, 25]


Before reduction : 
 pending  : [4, 14, 9, 19, 5, 13, 12, 7, 8, 15, 24]
 solution : [1, 2, 23, 3, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, 0), (7, 1180591620717411303424), (8, 184467440737095516160), (9, 3541774862152233910272), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 1180591620717411303424), (15, 147573952589676412928), (16, -1), (17, -1), (18, 0), (19, 288230376151711744), (20, 0), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, -1), (7, 1180591620717411303424), (8, 184467440737095516160), (9, 3541774862152233910272), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 1180591620717411303424), (15, 147573952589676412928), (16, -1), (17, -1), (18, -1), (19, 288230376151711744), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [4, 14, 9, 19, 5, 13, 12, 7, 8, 15, 24]
 solution : [1, 2, 23, 3, 25]


Solution : [1, 2, 23, 3, 25] has cost 41.


Before backtrack at level 10
 pending : [4, 14, 9, 19, 5, 13, 12, 7, 8, 15, 24]
 solution : [1, 2, 23, 3, 25]

After backtrack at level 10
 pending : [4, 14, 9, 19, 5, 13, 12, 7, 8, 15, 24, 6, 18, 20]
 solution : [1, 2, 23, 3, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [4, 14, 9, 19, 5, 13, 12, 7, 8, 15, 24, 6, 18, 20]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [4, 14, 9, 19, 5, 13, 12, 7, 8, 15, 24, 6, 18, 20]
 solution : [1, 2, 23, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 73786976294838206464), (6, -1), (7, 1180591620717411303424), (8, 184467440737095516160), (9, 3541774862152233910272), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 1180591620717411303424), (15, 147573952589676412928), (16, -1), (17, -1), (18, -1), (19, 288230376151711744), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [4, 14, 9, 19, 5, 13, 12, 7, 8, 15, 24, 6, 18, 20]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 10 among pending : [4, 14, 9, 19, 5, 13, 12, 7, 8, 15, 24, 6, 18, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

Decide 24 with phase True at level 10

After decision at level 10
 pending : [4, 14, 9, 19, 5, 13, 12, 7, 8, 15, 6, 18, 20]
 solution : [1, 2, 23, 3, 24]


New level: 11
 pending : [4, 14, 9, 19, 5, 13, 12, 7, 8, 15, 6, 18, 20]
 solution : [1, 2, 23, 3, 24]


Before reduction : 
 pending  : [4, 14, 9, 19, 5, 13, 12, 7, 8, 15, 6, 18, 20]
 solution : [1, 2, 23, 3, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 4722366482869645213696), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 4611686018427387904), (6, 4611686018427387904), (7, 295147905179352825856), (8, 36028797018963968), (9, 0), (10, -1), (11, -1), (12, 36028797018963968), (13, 0), (14, 295147905179352825856), (15, 36893488147419103232), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : {9, 4, 13}

After reduction : 
 pending  : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20]
 solution : [1, 2, 23, 3, 24]


Before reduction : 
 pending  : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20]
 solution : [1, 2, 23, 3, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 4611686018427387904), (6, 4611686018427387904), (7, 295147905179352825856), (8, 36028797018963968), (9, 0), (10, -1), (11, -1), (12, 36028797018963968), (13, 0), (14, 295147905179352825856), (15, 36893488147419103232), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4611686018427387904), (6, 4611686018427387904), (7, 295147905179352825856), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, 295147905179352825856), (15, 36893488147419103232), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20]
 solution : [1, 2, 23, 3, 24]


Solution : [1, 2, 23, 3, 24] has cost 43.


Before backtrack at level 11
 pending : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20]
 solution : [1, 2, 23, 3, 24]

After backtrack at level 11
 pending : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20, 4, 9, 13]
 solution : [1, 2, 23, 3, 24]


Invert decision for 24 at level 10


New level: 11
 pending : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20, 4, 9, 13]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20, 4, 9, 13]
 solution : [1, 2, 23, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4611686018427387904), (6, 4611686018427387904), (7, 295147905179352825856), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, 295147905179352825856), (15, 36893488147419103232), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20, 4, 9, 13]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 11 among pending : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20, 4, 9, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20, 4, 13]
 solution : [1, 2, 23, 3, 9]


New level: 12
 pending : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20, 4, 13]
 solution : [1, 2, 23, 3, 9]


Before reduction : 
 pending  : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20, 4, 13]
 solution : [1, 2, 23, 3, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, 3541774862152233910272), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, 0), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : {13}

After reduction : 
 pending  : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20, 4]
 solution : [1, 2, 23, 3, 9]


Before reduction : 
 pending  : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20, 4]
 solution : [1, 2, 23, 3, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, 0), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20, 4]
 solution : [1, 2, 23, 3, 9]


Solution : [1, 2, 23, 3, 9] has cost 34.


Decide in level 12 among pending : [14, 19, 5, 12, 7, 8, 15, 6, 18, 20, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [19, 5, 12, 7, 8, 15, 6, 18, 20, 4]
 solution : [1, 2, 23, 3, 9, 14]


New level: 13
 pending : [19, 5, 12, 7, 8, 15, 6, 18, 20, 4]
 solution : [1, 2, 23, 3, 9, 14]


Before reduction : 
 pending  : [19, 5, 12, 7, 8, 15, 6, 18, 20, 4]
 solution : [1, 2, 23, 3, 9, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 590295810358705651712), (6, 288230376151711744), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : {8, 12, 15, 7}

After reduction : 
 pending  : [19, 5, 6, 18, 20, 4]
 solution : [1, 2, 23, 3, 9, 14]


Before reduction : 
 pending  : [19, 5, 6, 18, 20, 4]
 solution : [1, 2, 23, 3, 9, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 590295810358705651712), (6, 288230376151711744), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 590295810358705651712), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 295147905179352825856), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [19, 5, 6, 18, 20, 4]
 solution : [1, 2, 23, 3, 9, 14]


Solution : [1, 2, 23, 3, 9, 14] has cost 47.


Before backtrack at level 13
 pending : [19, 5, 6, 18, 20, 4]
 solution : [1, 2, 23, 3, 9, 14]

After backtrack at level 13
 pending : [19, 5, 6, 18, 20, 4, 12, 7, 8, 15]
 solution : [1, 2, 23, 3, 9, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [19, 5, 6, 18, 20, 4, 12, 7, 8, 15]
 solution : [1, 2, 23, 3, 9]


Before reduction : 
 pending  : [19, 5, 6, 18, 20, 4, 12, 7, 8, 15]
 solution : [1, 2, 23, 3, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 590295810358705651712), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 295147905179352825856), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [19, 5, 6, 18, 20, 4, 12, 7, 8, 15]
 solution : [1, 2, 23, 3, 9]


Solution : [1, 2, 23, 3, 9] has cost 34.


Decide in level 13 among pending : [19, 5, 6, 18, 20, 4, 12, 7, 8, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [5, 6, 18, 20, 4, 12, 7, 8, 15]
 solution : [1, 2, 23, 3, 9, 19]


New level: 14
 pending : [5, 6, 18, 20, 4, 12, 7, 8, 15]
 solution : [1, 2, 23, 3, 9, 19]


Before reduction : 
 pending  : [5, 6, 18, 20, 4, 12, 7, 8, 15]
 solution : [1, 2, 23, 3, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 4503599627370496), (8, 2251799813685248), (9, -1), (10, -1), (11, -1), (12, 2251799813685248), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 14 : {20, 15}

After reduction : 
 pending  : [5, 6, 18, 4, 12, 7, 8]
 solution : [1, 2, 23, 3, 9, 19]


Before reduction : 
 pending  : [5, 6, 18, 4, 12, 7, 8]
 solution : [1, 2, 23, 3, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 4503599627370496), (8, 2251799813685248), (9, -1), (10, -1), (11, -1), (12, 2251799813685248), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 4503599627370496), (8, 2251799813685248), (9, -1), (10, -1), (11, -1), (12, 2251799813685248), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [5, 6, 18, 4, 12, 7, 8]
 solution : [1, 2, 23, 3, 9, 19]


Solution : [1, 2, 23, 3, 9, 19] has cost 45.


Before backtrack at level 14
 pending : [5, 6, 18, 4, 12, 7, 8]
 solution : [1, 2, 23, 3, 9, 19]

After backtrack at level 14
 pending : [5, 6, 18, 4, 12, 7, 8, 20, 15]
 solution : [1, 2, 23, 3, 9, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [5, 6, 18, 4, 12, 7, 8, 20, 15]
 solution : [1, 2, 23, 3, 9]


Before reduction : 
 pending  : [5, 6, 18, 4, 12, 7, 8, 20, 15]
 solution : [1, 2, 23, 3, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 4503599627370496), (8, 2251799813685248), (9, -1), (10, -1), (11, -1), (12, 2251799813685248), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [5, 6, 18, 4, 12, 7, 8, 20, 15]
 solution : [1, 2, 23, 3, 9]


Solution : [1, 2, 23, 3, 9] has cost 34.


Decide in level 14 among pending : [5, 6, 18, 4, 12, 7, 8, 20, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 18 with phase True at level 14

After decision at level 14
 pending : [5, 6, 4, 12, 7, 8, 20, 15]
 solution : [1, 2, 23, 3, 9, 18]


New level: 15
 pending : [5, 6, 4, 12, 7, 8, 20, 15]
 solution : [1, 2, 23, 3, 9, 18]


Before reduction : 
 pending  : [5, 6, 4, 12, 7, 8, 20, 15]
 solution : [1, 2, 23, 3, 9, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 4611686018427387904), (7, 2361183241434822606848), (8, 2251799813685248), (9, -1), (10, -1), (11, -1), (12, 2251799813685248), (13, -1), (14, -1), (15, 1125899906842624), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : {20}

After reduction : 
 pending  : [5, 6, 4, 12, 7, 8, 15]
 solution : [1, 2, 23, 3, 9, 18]


Before reduction : 
 pending  : [5, 6, 4, 12, 7, 8, 15]
 solution : [1, 2, 23, 3, 9, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 4611686018427387904), (7, 2361183241434822606848), (8, 2251799813685248), (9, -1), (10, -1), (11, -1), (12, 2251799813685248), (13, -1), (14, -1), (15, 1125899906842624), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 4611686018427387904), (7, 2361183241434822606848), (8, 2251799813685248), (9, -1), (10, -1), (11, -1), (12, 2251799813685248), (13, -1), (14, -1), (15, 1125899906842624), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [5, 6, 4, 12, 7, 8, 15]
 solution : [1, 2, 23, 3, 9, 18]


Solution : [1, 2, 23, 3, 9, 18] has cost 45.


Before backtrack at level 15
 pending : [5, 6, 4, 12, 7, 8, 15]
 solution : [1, 2, 23, 3, 9, 18]

After backtrack at level 15
 pending : [5, 6, 4, 12, 7, 8, 15, 20]
 solution : [1, 2, 23, 3, 9, 18]


Invert decision for 18 at level 14


New level: 15
 pending : [5, 6, 4, 12, 7, 8, 15, 20]
 solution : [1, 2, 23, 3, 9]


Before reduction : 
 pending  : [5, 6, 4, 12, 7, 8, 15, 20]
 solution : [1, 2, 23, 3, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 4611686018427387904), (7, 2361183241434822606848), (8, 2251799813685248), (9, -1), (10, -1), (11, -1), (12, 2251799813685248), (13, -1), (14, -1), (15, 1125899906842624), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, -1), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [5, 6, 4, 12, 7, 8, 15, 20]
 solution : [1, 2, 23, 3, 9]


Solution : [1, 2, 23, 3, 9] has cost 34.


Decide in level 15 among pending : [5, 6, 4, 12, 7, 8, 15, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, -1), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 7 with phase True at level 15

After decision at level 15
 pending : [5, 6, 4, 12, 8, 15, 20]
 solution : [1, 2, 23, 3, 9, 7]


New level: 16
 pending : [5, 6, 4, 12, 8, 15, 20]
 solution : [1, 2, 23, 3, 9, 7]


Before reduction : 
 pending  : [5, 6, 4, 12, 8, 15, 20]
 solution : [1, 2, 23, 3, 9, 7]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, -1), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : {8, 12, 15}

After reduction : 
 pending  : [5, 6, 4, 20]
 solution : [1, 2, 23, 3, 9, 7]


Before reduction : 
 pending  : [5, 6, 4, 20]
 solution : [1, 2, 23, 3, 9, 7]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [5, 6, 4, 20]
 solution : [1, 2, 23, 3, 9, 7]


Solution : [1, 2, 23, 3, 9, 7] has cost 47.


Before backtrack at level 16
 pending : [5, 6, 4, 20]
 solution : [1, 2, 23, 3, 9, 7]

After backtrack at level 16
 pending : [5, 6, 4, 20, 12, 8, 15]
 solution : [1, 2, 23, 3, 9, 7]


Invert decision for 7 at level 15


New level: 16
 pending : [5, 6, 4, 20, 12, 8, 15]
 solution : [1, 2, 23, 3, 9]


Before reduction : 
 pending  : [5, 6, 4, 20, 12, 8, 15]
 solution : [1, 2, 23, 3, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, -1), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [5, 6, 4, 20, 12, 8, 15]
 solution : [1, 2, 23, 3, 9]


Solution : [1, 2, 23, 3, 9] has cost 34.


Decide in level 16 among pending : [5, 6, 4, 20, 12, 8, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, -1), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 16

After decision at level 16
 pending : [6, 4, 20, 12, 8, 15]
 solution : [1, 2, 23, 3, 9, 5]


New level: 17
 pending : [6, 4, 20, 12, 8, 15]
 solution : [1, 2, 23, 3, 9, 5]


Before reduction : 
 pending  : [6, 4, 20, 12, 8, 15]
 solution : [1, 2, 23, 3, 9, 5]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 288230376151711744), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, 36028797018963968), (9, -1), (10, -1), (11, -1), (12, 36028797018963968), (13, -1), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, -1), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : {4, 6, 8, 12, 15, 20}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 9, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 9, 5]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 9, 5]


Solution : [1, 2, 23, 3, 9, 5] has cost 41.


Before backtrack at level 17
 pending : []
 solution : [1, 2, 23, 3, 9, 5]

After backtrack at level 17
 pending : [6, 4, 20, 12, 8, 15]
 solution : [1, 2, 23, 3, 9, 5]


Invert decision for 5 at level 16


New level: 17
 pending : [6, 4, 20, 12, 8, 15]
 solution : [1, 2, 23, 3, 9]


Before reduction : 
 pending  : [6, 4, 20, 12, 8, 15]
 solution : [1, 2, 23, 3, 9]

Essensial at level 17 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : {8, 20, 12, 15}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 9, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 9, 4, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 9, 4, 6]


Solution : [1, 2, 23, 3, 9, 4, 6] has cost 50.


Before backtrack at level 17
 pending : []
 solution : [1, 2, 23, 3, 9, 4, 6]

After backtrack at level 17
 pending : [6, 4, 20, 12, 8, 15]
 solution : [1, 2, 23, 3, 9]


Before backtrack at level 16
 pending : [6, 4, 20, 12, 8, 15]
 solution : [1, 2, 23, 3, 9]

After backtrack at level 16
 pending : [6, 4, 20, 12, 8, 15, 5]
 solution : [1, 2, 23, 3, 9]


Before backtrack at level 15
 pending : [6, 4, 20, 12, 8, 15, 5]
 solution : [1, 2, 23, 3, 9]

After backtrack at level 15
 pending : [6, 4, 20, 12, 8, 15, 5, 7]
 solution : [1, 2, 23, 3, 9]


Before backtrack at level 14
 pending : [6, 4, 20, 12, 8, 15, 5, 7]
 solution : [1, 2, 23, 3, 9]

After backtrack at level 14
 pending : [6, 4, 20, 12, 8, 15, 5, 7, 18]
 solution : [1, 2, 23, 3, 9]


Before backtrack at level 13
 pending : [6, 4, 20, 12, 8, 15, 5, 7, 18]
 solution : [1, 2, 23, 3, 9]

After backtrack at level 13
 pending : [6, 4, 20, 12, 8, 15, 5, 7, 18, 19]
 solution : [1, 2, 23, 3, 9]


Before backtrack at level 12
 pending : [6, 4, 20, 12, 8, 15, 5, 7, 18, 19]
 solution : [1, 2, 23, 3, 9]

After backtrack at level 12
 pending : [6, 4, 20, 12, 8, 15, 5, 7, 18, 19, 13, 14]
 solution : [1, 2, 23, 3, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [6, 4, 20, 12, 8, 15, 5, 7, 18, 19, 13, 14]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [6, 4, 20, 12, 8, 15, 5, 7, 18, 19, 13, 14]
 solution : [1, 2, 23, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 4, 20, 12, 8, 15, 5, 7, 18, 19, 13, 14]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 12 among pending : [6, 4, 20, 12, 8, 15, 5, 7, 18, 19, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [6, 4, 20, 8, 15, 5, 7, 18, 19, 13, 14]
 solution : [1, 2, 23, 3, 12]


New level: 13
 pending : [6, 4, 20, 8, 15, 5, 7, 18, 19, 13, 14]
 solution : [1, 2, 23, 3, 12]


Before reduction : 
 pending  : [6, 4, 20, 8, 15, 5, 7, 18, 19, 13, 14]
 solution : [1, 2, 23, 3, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, 2656331146614175432704), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 18446744073709551616), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 36893488147419103232), (15, 18446744073709551616), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : {8, 13}

After reduction : 
 pending  : [6, 4, 20, 15, 5, 7, 18, 19, 14]
 solution : [1, 2, 23, 3, 12]


Before reduction : 
 pending  : [6, 4, 20, 15, 5, 7, 18, 19, 14]
 solution : [1, 2, 23, 3, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 18446744073709551616), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 36893488147419103232), (15, 18446744073709551616), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 18446744073709551616), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 36893488147419103232), (15, 18446744073709551616), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 4, 20, 15, 5, 7, 18, 19, 14]
 solution : [1, 2, 23, 3, 12]


Solution : [1, 2, 23, 3, 12] has cost 34.


Decide in level 13 among pending : [6, 4, 20, 15, 5, 7, 18, 19, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 18446744073709551616), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 36893488147419103232), (15, 18446744073709551616), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [6, 4, 20, 15, 5, 7, 19, 14]
 solution : [1, 2, 23, 3, 12, 18]


New level: 14
 pending : [6, 4, 20, 15, 5, 7, 19, 14]
 solution : [1, 2, 23, 3, 12, 18]


Before reduction : 
 pending  : [6, 4, 20, 15, 5, 7, 19, 14]
 solution : [1, 2, 23, 3, 12, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 18446744073709551616), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 36893488147419103232), (15, 18446744073709551616), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 4611686018427387904), (7, 1125899906842624), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 36893488147419103232), (15, 1125899906842624), (16, -1), (17, -1), (18, -1), (19, 288230376151711744), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 14 : {20}

After reduction : 
 pending  : [6, 4, 15, 5, 7, 19, 14]
 solution : [1, 2, 23, 3, 12, 18]


Before reduction : 
 pending  : [6, 4, 15, 5, 7, 19, 14]
 solution : [1, 2, 23, 3, 12, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 4611686018427387904), (7, 1125899906842624), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 36893488147419103232), (15, 1125899906842624), (16, -1), (17, -1), (18, -1), (19, 288230376151711744), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 4611686018427387904), (7, 1125899906842624), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 36893488147419103232), (15, 1125899906842624), (16, -1), (17, -1), (18, -1), (19, 288230376151711744), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 4, 15, 5, 7, 19, 14]
 solution : [1, 2, 23, 3, 12, 18]


Solution : [1, 2, 23, 3, 12, 18] has cost 45.


Before backtrack at level 14
 pending : [6, 4, 15, 5, 7, 19, 14]
 solution : [1, 2, 23, 3, 12, 18]

After backtrack at level 14
 pending : [6, 4, 15, 5, 7, 19, 14, 20]
 solution : [1, 2, 23, 3, 12, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [6, 4, 15, 5, 7, 19, 14, 20]
 solution : [1, 2, 23, 3, 12]


Before reduction : 
 pending  : [6, 4, 15, 5, 7, 19, 14, 20]
 solution : [1, 2, 23, 3, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 4611686018427387904), (7, 1125899906842624), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 36893488147419103232), (15, 1125899906842624), (16, -1), (17, -1), (18, -1), (19, 288230376151711744), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 18446744073709551616), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 36893488147419103232), (15, 18446744073709551616), (16, -1), (17, -1), (18, -1), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 4, 15, 5, 7, 19, 14, 20]
 solution : [1, 2, 23, 3, 12]


Solution : [1, 2, 23, 3, 12] has cost 34.


Decide in level 14 among pending : [6, 4, 15, 5, 7, 19, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 18446744073709551616), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 36893488147419103232), (15, 18446744073709551616), (16, -1), (17, -1), (18, -1), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [6, 4, 15, 5, 7, 14, 20]
 solution : [1, 2, 23, 3, 12, 19]


New level: 15
 pending : [6, 4, 15, 5, 7, 14, 20]
 solution : [1, 2, 23, 3, 12, 19]


Before reduction : 
 pending  : [6, 4, 15, 5, 7, 14, 20]
 solution : [1, 2, 23, 3, 12, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 18446744073709551616), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 36893488147419103232), (15, 18446744073709551616), (16, -1), (17, -1), (18, -1), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : {7, 20, 15}

After reduction : 
 pending  : [6, 4, 5, 14]
 solution : [1, 2, 23, 3, 12, 19]


Before reduction : 
 pending  : [6, 4, 5, 14]
 solution : [1, 2, 23, 3, 12, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 4, 5, 14]
 solution : [1, 2, 23, 3, 12, 19]


Solution : [1, 2, 23, 3, 12, 19] has cost 45.


Before backtrack at level 15
 pending : [6, 4, 5, 14]
 solution : [1, 2, 23, 3, 12, 19]

After backtrack at level 15
 pending : [6, 4, 5, 14, 15, 7, 20]
 solution : [1, 2, 23, 3, 12, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [6, 4, 5, 14, 15, 7, 20]
 solution : [1, 2, 23, 3, 12]


Before reduction : 
 pending  : [6, 4, 5, 14, 15, 7, 20]
 solution : [1, 2, 23, 3, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 18446744073709551616), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 36893488147419103232), (15, 18446744073709551616), (16, -1), (17, -1), (18, -1), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 4, 5, 14, 15, 7, 20]
 solution : [1, 2, 23, 3, 12]


Solution : [1, 2, 23, 3, 12] has cost 34.


Decide in level 15 among pending : [6, 4, 5, 14, 15, 7, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 18446744073709551616), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 36893488147419103232), (15, 18446744073709551616), (16, -1), (17, -1), (18, -1), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 15

After decision at level 15
 pending : [6, 4, 14, 15, 7, 20]
 solution : [1, 2, 23, 3, 12, 5]


New level: 16
 pending : [6, 4, 14, 15, 7, 20]
 solution : [1, 2, 23, 3, 12, 5]


Before reduction : 
 pending  : [6, 4, 14, 15, 7, 20]
 solution : [1, 2, 23, 3, 12, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 18446744073709551616), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 36893488147419103232), (15, 18446744073709551616), (16, -1), (17, -1), (18, -1), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : {4, 6, 7, 14, 15, 20}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 12, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 12, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 12, 5]


Solution : [1, 2, 23, 3, 12, 5] has cost 41.


Before backtrack at level 16
 pending : []
 solution : [1, 2, 23, 3, 12, 5]

After backtrack at level 16
 pending : [6, 4, 14, 15, 7, 20]
 solution : [1, 2, 23, 3, 12, 5]


Invert decision for 5 at level 15


New level: 16
 pending : [6, 4, 14, 15, 7, 20]
 solution : [1, 2, 23, 3, 12]


Before reduction : 
 pending  : [6, 4, 14, 15, 7, 20]
 solution : [1, 2, 23, 3, 12]

Essensial at level 16 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : {7, 20, 14, 15}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 12, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 12, 4, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 12, 4, 6]


Solution : [1, 2, 23, 3, 12, 4, 6] has cost 50.


Before backtrack at level 16
 pending : []
 solution : [1, 2, 23, 3, 12, 4, 6]

After backtrack at level 16
 pending : [6, 4, 14, 15, 7, 20]
 solution : [1, 2, 23, 3, 12]


Before backtrack at level 15
 pending : [6, 4, 14, 15, 7, 20]
 solution : [1, 2, 23, 3, 12]

After backtrack at level 15
 pending : [6, 4, 14, 15, 7, 20, 5]
 solution : [1, 2, 23, 3, 12]


Before backtrack at level 14
 pending : [6, 4, 14, 15, 7, 20, 5]
 solution : [1, 2, 23, 3, 12]

After backtrack at level 14
 pending : [6, 4, 14, 15, 7, 20, 5, 19]
 solution : [1, 2, 23, 3, 12]


Before backtrack at level 13
 pending : [6, 4, 14, 15, 7, 20, 5, 19]
 solution : [1, 2, 23, 3, 12]

After backtrack at level 13
 pending : [6, 4, 14, 15, 7, 20, 5, 19, 8, 13, 18]
 solution : [1, 2, 23, 3, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [6, 4, 14, 15, 7, 20, 5, 19, 8, 13, 18]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [6, 4, 14, 15, 7, 20, 5, 19, 8, 13, 18]
 solution : [1, 2, 23, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 4, 14, 15, 7, 20, 5, 19, 8, 13, 18]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 13 among pending : [6, 4, 14, 15, 7, 20, 5, 19, 8, 13, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [6, 4, 15, 7, 20, 5, 19, 8, 13, 18]
 solution : [1, 2, 23, 3, 14]


New level: 14
 pending : [6, 4, 15, 7, 20, 5, 19, 8, 13, 18]
 solution : [1, 2, 23, 3, 14]


Before reduction : 
 pending  : [6, 4, 15, 7, 20, 5, 19, 8, 13, 18]
 solution : [1, 2, 23, 3, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, 2361183241434822606848), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 590295810358705651712), (6, 288230376151711744), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 184467440737095516160), (14, -1), (15, 0), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 295147905179352825856), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 14 : {8, 7, 15}

After reduction : 
 pending  : [6, 4, 20, 5, 19, 13, 18]
 solution : [1, 2, 23, 3, 14]


Before reduction : 
 pending  : [6, 4, 20, 5, 19, 13, 18]
 solution : [1, 2, 23, 3, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 590295810358705651712), (6, 288230376151711744), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 184467440737095516160), (14, -1), (15, 0), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 295147905179352825856), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 590295810358705651712), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1180591620717411303424), (19, 295147905179352825856), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 4, 20, 5, 19, 13, 18]
 solution : [1, 2, 23, 3, 14]


Solution : [1, 2, 23, 3, 14] has cost 32.


Decide in level 14 among pending : [6, 4, 20, 5, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 590295810358705651712), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1180591620717411303424), (19, 295147905179352825856), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 18 with phase True at level 14

After decision at level 14
 pending : [6, 4, 20, 5, 19, 13]
 solution : [1, 2, 23, 3, 14, 18]


New level: 15
 pending : [6, 4, 20, 5, 19, 13]
 solution : [1, 2, 23, 3, 14, 18]


Before reduction : 
 pending  : [6, 4, 20, 5, 19, 13]
 solution : [1, 2, 23, 3, 14, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 590295810358705651712), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 184467440737095516160), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1180591620717411303424), (19, 295147905179352825856), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 590295810358705651712), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 110680464442257309696), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : {19, 20}

After reduction : 
 pending  : [6, 4, 5, 13]
 solution : [1, 2, 23, 3, 14, 18]


Before reduction : 
 pending  : [6, 4, 5, 13]
 solution : [1, 2, 23, 3, 14, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 590295810358705651712), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 110680464442257309696), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 590295810358705651712), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 110680464442257309696), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 4, 5, 13]
 solution : [1, 2, 23, 3, 14, 18]


Solution : [1, 2, 23, 3, 14, 18] has cost 43.


Before backtrack at level 15
 pending : [6, 4, 5, 13]
 solution : [1, 2, 23, 3, 14, 18]

After backtrack at level 15
 pending : [6, 4, 5, 13, 20, 19]
 solution : [1, 2, 23, 3, 14, 18]


Invert decision for 18 at level 14


New level: 15
 pending : [6, 4, 5, 13, 20, 19]
 solution : [1, 2, 23, 3, 14]


Before reduction : 
 pending  : [6, 4, 5, 13, 20, 19]
 solution : [1, 2, 23, 3, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 590295810358705651712), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 110680464442257309696), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 590295810358705651712), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 110680464442257309696), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 147573952589676412928), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 4, 5, 13, 20, 19]
 solution : [1, 2, 23, 3, 14]


Solution : [1, 2, 23, 3, 14] has cost 32.


Decide in level 15 among pending : [6, 4, 5, 13, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 590295810358705651712), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 110680464442257309696), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 147573952589676412928), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 15

After decision at level 15
 pending : [6, 4, 13, 20, 19]
 solution : [1, 2, 23, 3, 14, 5]


New level: 16
 pending : [6, 4, 13, 20, 19]
 solution : [1, 2, 23, 3, 14, 5]


Before reduction : 
 pending  : [6, 4, 13, 20, 19]
 solution : [1, 2, 23, 3, 14, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4611686018427387904), (5, 590295810358705651712), (6, 288230376151711744), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 110680464442257309696), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 147573952589676412928), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : {4, 6, 13, 19, 20}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 14, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 14, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 14, 5]


Solution : [1, 2, 23, 3, 14, 5] has cost 39.


Before backtrack at level 16
 pending : []
 solution : [1, 2, 23, 3, 14, 5]

After backtrack at level 16
 pending : [6, 4, 13, 20, 19]
 solution : [1, 2, 23, 3, 14, 5]


Invert decision for 5 at level 15


New level: 16
 pending : [6, 4, 13, 20, 19]
 solution : [1, 2, 23, 3, 14]


Before reduction : 
 pending  : [6, 4, 13, 20, 19]
 solution : [1, 2, 23, 3, 14]

Essensial at level 16 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : {19, 20, 13}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 14, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 14, 4, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 14, 4, 6]


Solution : [1, 2, 23, 3, 14, 4, 6] has cost 48.


Before backtrack at level 16
 pending : []
 solution : [1, 2, 23, 3, 14, 4, 6]

After backtrack at level 16
 pending : [6, 4, 13, 20, 19]
 solution : [1, 2, 23, 3, 14]


Before backtrack at level 15
 pending : [6, 4, 13, 20, 19]
 solution : [1, 2, 23, 3, 14]

After backtrack at level 15
 pending : [6, 4, 13, 20, 19, 5]
 solution : [1, 2, 23, 3, 14]


Before backtrack at level 14
 pending : [6, 4, 13, 20, 19, 5]
 solution : [1, 2, 23, 3, 14]

After backtrack at level 14
 pending : [6, 4, 13, 20, 19, 5, 15, 7, 8, 18]
 solution : [1, 2, 23, 3, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [6, 4, 13, 20, 19, 5, 15, 7, 8, 18]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [6, 4, 13, 20, 19, 5, 15, 7, 8, 18]
 solution : [1, 2, 23, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 4, 13, 20, 19, 5, 15, 7, 8, 18]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 14 among pending : [6, 4, 13, 20, 19, 5, 15, 7, 8, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [6, 4, 13, 20, 5, 15, 7, 8, 18]
 solution : [1, 2, 23, 3, 19]


New level: 15
 pending : [6, 4, 13, 20, 5, 15, 7, 8, 18]
 solution : [1, 2, 23, 3, 19]


Before reduction : 
 pending  : [6, 4, 13, 20, 5, 15, 7, 8, 18]
 solution : [1, 2, 23, 3, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, 2361183241434822606848), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 295147905179352825856), (8, 92233720368547758080), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 0), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : {20, 15}

After reduction : 
 pending  : [6, 4, 13, 5, 7, 8, 18]
 solution : [1, 2, 23, 3, 19]


Before reduction : 
 pending  : [6, 4, 13, 5, 7, 8, 18]
 solution : [1, 2, 23, 3, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 295147905179352825856), (8, 92233720368547758080), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 0), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 295147905179352825856), (8, 92233720368547758080), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 4, 13, 5, 7, 8, 18]
 solution : [1, 2, 23, 3, 19]


Solution : [1, 2, 23, 3, 19] has cost 30.


Decide in level 15 among pending : [6, 4, 13, 5, 7, 8, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 295147905179352825856), (8, 92233720368547758080), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 15

After decision at level 15
 pending : [6, 4, 13, 7, 8, 18]
 solution : [1, 2, 23, 3, 19, 5]


New level: 16
 pending : [6, 4, 13, 7, 8, 18]
 solution : [1, 2, 23, 3, 19, 5]


Before reduction : 
 pending  : [6, 4, 13, 7, 8, 18]
 solution : [1, 2, 23, 3, 19, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 295147905179352825856), (8, 92233720368547758080), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : {4, 6, 7, 8, 13, 18}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 19, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 19, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 19, 5]


Solution : [1, 2, 23, 3, 19, 5] has cost 37.


Before backtrack at level 16
 pending : []
 solution : [1, 2, 23, 3, 19, 5]

After backtrack at level 16
 pending : [6, 4, 13, 7, 8, 18]
 solution : [1, 2, 23, 3, 19, 5]


Invert decision for 5 at level 15


New level: 16
 pending : [6, 4, 13, 7, 8, 18]
 solution : [1, 2, 23, 3, 19]


Before reduction : 
 pending  : [6, 4, 13, 7, 8, 18]
 solution : [1, 2, 23, 3, 19]

Essensial at level 16 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : {8, 18, 13, 7}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 19, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 19, 4, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 19, 4, 6]


Solution : [1, 2, 23, 3, 19, 4, 6] has cost 46.


Before backtrack at level 16
 pending : []
 solution : [1, 2, 23, 3, 19, 4, 6]

After backtrack at level 16
 pending : [6, 4, 13, 7, 8, 18]
 solution : [1, 2, 23, 3, 19]


Before backtrack at level 15
 pending : [6, 4, 13, 7, 8, 18]
 solution : [1, 2, 23, 3, 19]

After backtrack at level 15
 pending : [6, 4, 13, 7, 8, 18, 20, 15, 5]
 solution : [1, 2, 23, 3, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [6, 4, 13, 7, 8, 18, 20, 15, 5]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [6, 4, 13, 7, 8, 18, 20, 15, 5]
 solution : [1, 2, 23, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 4, 13, 7, 8, 18, 20, 15, 5]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 15 among pending : [6, 4, 13, 7, 8, 18, 20, 15, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 7 with phase True at level 15

After decision at level 15
 pending : [6, 4, 13, 8, 18, 20, 15, 5]
 solution : [1, 2, 23, 3, 7]


New level: 16
 pending : [6, 4, 13, 8, 18, 20, 15, 5]
 solution : [1, 2, 23, 3, 7]


Before reduction : 
 pending  : [6, 4, 13, 8, 18, 20, 15, 5]
 solution : [1, 2, 23, 3, 7]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, 2361183241434822606848), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 92233720368547758080), (14, -1), (15, 0), (16, -1), (17, -1), (18, 36893488147419103232), (19, -1), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : {8, 15}

After reduction : 
 pending  : [6, 4, 13, 18, 20, 5]
 solution : [1, 2, 23, 3, 7]


Before reduction : 
 pending  : [6, 4, 13, 18, 20, 5]
 solution : [1, 2, 23, 3, 7]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 92233720368547758080), (14, -1), (15, 0), (16, -1), (17, -1), (18, 36893488147419103232), (19, -1), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 92233720368547758080), (14, -1), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, -1), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 4, 13, 18, 20, 5]
 solution : [1, 2, 23, 3, 7]


Solution : [1, 2, 23, 3, 7] has cost 32.


Decide in level 16 among pending : [6, 4, 13, 18, 20, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 92233720368547758080), (14, -1), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, -1), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 16

After decision at level 16
 pending : [6, 4, 13, 18, 20]
 solution : [1, 2, 23, 3, 7, 5]


New level: 17
 pending : [6, 4, 13, 18, 20]
 solution : [1, 2, 23, 3, 7, 5]


Before reduction : 
 pending  : [6, 4, 13, 18, 20]
 solution : [1, 2, 23, 3, 7, 5]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 92233720368547758080), (14, -1), (15, -1), (16, -1), (17, -1), (18, 36893488147419103232), (19, -1), (20, 18446744073709551616), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : {4, 6, 13, 18, 20}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 7, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 7, 5]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 7, 5]


Solution : [1, 2, 23, 3, 7, 5] has cost 39.


Before backtrack at level 17
 pending : []
 solution : [1, 2, 23, 3, 7, 5]

After backtrack at level 17
 pending : [6, 4, 13, 18, 20]
 solution : [1, 2, 23, 3, 7, 5]


Invert decision for 5 at level 16


New level: 17
 pending : [6, 4, 13, 18, 20]
 solution : [1, 2, 23, 3, 7]


Before reduction : 
 pending  : [6, 4, 13, 18, 20]
 solution : [1, 2, 23, 3, 7]

Essensial at level 17 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : {18, 20, 13}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 7, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 7, 4, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 7, 4, 6]


Solution : [1, 2, 23, 3, 7, 4, 6] has cost 48.


Before backtrack at level 17
 pending : []
 solution : [1, 2, 23, 3, 7, 4, 6]

After backtrack at level 17
 pending : [6, 4, 13, 18, 20]
 solution : [1, 2, 23, 3, 7]


Before backtrack at level 16
 pending : [6, 4, 13, 18, 20]
 solution : [1, 2, 23, 3, 7]

After backtrack at level 16
 pending : [6, 4, 13, 18, 20, 8, 15, 5]
 solution : [1, 2, 23, 3, 7]


Invert decision for 7 at level 15


New level: 16
 pending : [6, 4, 13, 18, 20, 8, 15, 5]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [6, 4, 13, 18, 20, 8, 15, 5]
 solution : [1, 2, 23, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 4, 13, 18, 20, 8, 15, 5]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 16 among pending : [6, 4, 13, 18, 20, 8, 15, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 18 with phase True at level 16

After decision at level 16
 pending : [6, 4, 13, 20, 8, 15, 5]
 solution : [1, 2, 23, 3, 18]


New level: 17
 pending : [6, 4, 13, 20, 8, 15, 5]
 solution : [1, 2, 23, 3, 18]


Before reduction : 
 pending  : [6, 4, 13, 20, 8, 15, 5]
 solution : [1, 2, 23, 3, 18]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, 2361183241434822606848), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 4611686018427387904), (7, -1), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 72057594037927936), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : {20}

After reduction : 
 pending  : [6, 4, 13, 8, 15, 5]
 solution : [1, 2, 23, 3, 18]


Before reduction : 
 pending  : [6, 4, 13, 8, 15, 5]
 solution : [1, 2, 23, 3, 18]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 4611686018427387904), (7, -1), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 72057594037927936), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 4611686018427387904), (7, -1), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 72057594037927936), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 4, 13, 8, 15, 5]
 solution : [1, 2, 23, 3, 18]


Solution : [1, 2, 23, 3, 18] has cost 30.


Decide in level 17 among pending : [6, 4, 13, 8, 15, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 4611686018427387904), (7, -1), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 72057594037927936), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 17

After decision at level 17
 pending : [6, 4, 13, 8, 15]
 solution : [1, 2, 23, 3, 18, 5]


New level: 18
 pending : [6, 4, 13, 8, 15]
 solution : [1, 2, 23, 3, 18, 5]


Before reduction : 
 pending  : [6, 4, 13, 8, 15]
 solution : [1, 2, 23, 3, 18, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 4611686018427387904), (7, -1), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 72057594037927936), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : {4, 6, 8, 13, 15}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 18, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 18, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 18, 5]


Solution : [1, 2, 23, 3, 18, 5] has cost 37.


Before backtrack at level 18
 pending : []
 solution : [1, 2, 23, 3, 18, 5]

After backtrack at level 18
 pending : [6, 4, 13, 8, 15]
 solution : [1, 2, 23, 3, 18, 5]


Invert decision for 5 at level 17


New level: 18
 pending : [6, 4, 13, 8, 15]
 solution : [1, 2, 23, 3, 18]


Before reduction : 
 pending  : [6, 4, 13, 8, 15]
 solution : [1, 2, 23, 3, 18]

Essensial at level 18 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : {8, 13, 15}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 18, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 18, 4, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 18, 4, 6]


Solution : [1, 2, 23, 3, 18, 4, 6] has cost 46.


Before backtrack at level 18
 pending : []
 solution : [1, 2, 23, 3, 18, 4, 6]

After backtrack at level 18
 pending : [6, 4, 13, 8, 15]
 solution : [1, 2, 23, 3, 18]


Before backtrack at level 17
 pending : [6, 4, 13, 8, 15]
 solution : [1, 2, 23, 3, 18]

After backtrack at level 17
 pending : [6, 4, 13, 8, 15, 20, 5]
 solution : [1, 2, 23, 3, 18]


Invert decision for 18 at level 16


New level: 17
 pending : [6, 4, 13, 8, 15, 20, 5]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [6, 4, 13, 8, 15, 20, 5]
 solution : [1, 2, 23, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, -1), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 4, 13, 8, 15, 20, 5]
 solution : [1, 2, 23, 3]


Solution : [1, 2, 23, 3] has cost 19.


Decide in level 17 among pending : [6, 4, 13, 8, 15, 20, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, -1), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 17

After decision at level 17
 pending : [6, 4, 13, 8, 15, 20]
 solution : [1, 2, 23, 3, 5]


New level: 18
 pending : [6, 4, 13, 8, 15, 20]
 solution : [1, 2, 23, 3, 5]


Before reduction : 
 pending  : [6, 4, 13, 8, 15, 20]
 solution : [1, 2, 23, 3, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 590295810358705651712), (6, 73786976294838206464), (7, -1), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 295147905179352825856), (16, -1), (17, -1), (18, -1), (19, -1), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : {4, 6, 8, 13, 15, 20}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 5]


Solution : [1, 2, 23, 3, 5] has cost 26.


Before backtrack at level 18
 pending : []
 solution : [1, 2, 23, 3, 5]

After backtrack at level 18
 pending : [6, 4, 13, 8, 15, 20]
 solution : [1, 2, 23, 3, 5]


Invert decision for 5 at level 17


New level: 18
 pending : [6, 4, 13, 8, 15, 20]
 solution : [1, 2, 23, 3]


Before reduction : 
 pending  : [6, 4, 13, 8, 15, 20]
 solution : [1, 2, 23, 3]

Essensial at level 18 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : {8, 20, 13, 15}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 4, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 3, 4, 6]


Solution : [1, 2, 23, 3, 4, 6] has cost 35.


Before backtrack at level 18
 pending : []
 solution : [1, 2, 23, 3, 4, 6]

After backtrack at level 18
 pending : [6, 4, 13, 8, 15, 20]
 solution : [1, 2, 23, 3]


Before backtrack at level 17
 pending : [6, 4, 13, 8, 15, 20]
 solution : [1, 2, 23, 3]

After backtrack at level 17
 pending : [6, 4, 13, 8, 15, 20, 5]
 solution : [1, 2, 23, 3]


Before backtrack at level 16
 pending : [6, 4, 13, 8, 15, 20, 5]
 solution : [1, 2, 23, 3]

After backtrack at level 16
 pending : [6, 4, 13, 8, 15, 20, 5, 18]
 solution : [1, 2, 23, 3]


Before backtrack at level 15
 pending : [6, 4, 13, 8, 15, 20, 5, 18]
 solution : [1, 2, 23, 3]

After backtrack at level 15
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7]
 solution : [1, 2, 23, 3]


Before backtrack at level 14
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7]
 solution : [1, 2, 23, 3]

After backtrack at level 14
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19]
 solution : [1, 2, 23, 3]


Before backtrack at level 13
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19]
 solution : [1, 2, 23, 3]

After backtrack at level 13
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14]
 solution : [1, 2, 23, 3]


Before backtrack at level 12
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14]
 solution : [1, 2, 23, 3]

After backtrack at level 12
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12]
 solution : [1, 2, 23, 3]


Before backtrack at level 11
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12]
 solution : [1, 2, 23, 3]

After backtrack at level 11
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9]
 solution : [1, 2, 23, 3]


Before backtrack at level 10
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9]
 solution : [1, 2, 23, 3]

After backtrack at level 10
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24]
 solution : [1, 2, 23, 3]


Before backtrack at level 9
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24]
 solution : [1, 2, 23, 3]

After backtrack at level 9
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25]
 solution : [1, 2, 23, 3]


Before backtrack at level 8
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25]
 solution : [1, 2, 23, 3]

After backtrack at level 8
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11]
 solution : [1, 2, 23, 3]


Before backtrack at level 7
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11]
 solution : [1, 2, 23, 3]

After backtrack at level 7
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17]
 solution : [1, 2, 23, 3]


Before backtrack at level 6
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17]
 solution : [1, 2, 23, 3]

After backtrack at level 6
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16]
 solution : [1, 2, 23, 3]


Before backtrack at level 5
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16]
 solution : [1, 2, 23, 3]

After backtrack at level 5
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10]
 solution : [1, 2, 23, 3]


Before backtrack at level 4
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10]
 solution : [1, 2, 23, 3]

After backtrack at level 4
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10, 26]
 solution : [1, 2, 23, 3]


Before backtrack at level 3
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10, 26]
 solution : [1, 2, 23, 3]

After backtrack at level 3
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10, 26, 22]
 solution : [1, 2, 23, 3]


Before backtrack at level 2
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10, 26, 22]
 solution : [1, 2, 23, 3]

After backtrack at level 2
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10, 26, 22, 21]
 solution : [1, 2, 23, 3]


Invert decision for 3 at level 1


New level: 2
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10, 26, 22, 21]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10, 26, 22, 21]
 solution : [1, 2, 23]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, 604462909807314587353088), (22, 604462909807314587353088), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10, 26, 22, 21]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 2 among pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10, 26, 22, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, 604462909807314587353088), (22, 604462909807314587353088), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

Decide 22 with phase True at level 2

After decision at level 2
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10, 26, 21]
 solution : [1, 2, 23, 22]


New level: 3
 pending : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10, 26, 21]
 solution : [1, 2, 23, 22]


Before reduction : 
 pending  : [6, 4, 13, 8, 15, 20, 5, 18, 7, 19, 14, 12, 9, 24, 25, 11, 17, 16, 10, 26, 21]
 solution : [1, 2, 23, 22]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, 604462909807314587353088), (22, 604462909807314587353088), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 0), (8, 0), (9, 1152921504606846976), (10, 4611686018427387904), (11, 0), (12, 0), (13, 0), (14, 576460752303423488), (15, 0), (16, 4611686018427387904), (17, 0), (18, 576460752303423488), (19, 0), (20, 0), (21, 36893488147419103232), (22, -1), (23, -1), (24, 9444732965739290427392), (25, 9444732965739290427392), (26, 75557863725914323419136), (27, -1)]

Covered at level 3 : {7, 8, 11, 12, 13, 15, 17, 19, 20}

After reduction : 
 pending  : [6, 4, 5, 18, 14, 9, 24, 25, 16, 10, 26, 21]
 solution : [1, 2, 23, 22]


Before reduction : 
 pending  : [6, 4, 5, 18, 14, 9, 24, 25, 16, 10, 26, 21]
 solution : [1, 2, 23, 22]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 0), (8, 0), (9, 1152921504606846976), (10, 4611686018427387904), (11, 0), (12, 0), (13, 0), (14, 576460752303423488), (15, 0), (16, 4611686018427387904), (17, 0), (18, 576460752303423488), (19, 0), (20, 0), (21, 36893488147419103232), (22, -1), (23, -1), (24, 9444732965739290427392), (25, 9444732965739290427392), (26, 75557863725914323419136), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, 9444732965739290427392), (25, 9444732965739290427392), (26, 75557863725914323419136), (27, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [6, 4, 5, 18, 14, 9, 24, 25, 16, 10, 26, 21]
 solution : [1, 2, 23, 22]


Solution : [1, 2, 23, 22] has cost 25.


Decide in level 3 among pending : [6, 4, 5, 18, 14, 9, 24, 25, 16, 10, 26, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, 9444732965739290427392), (25, 9444732965739290427392), (26, 75557863725914323419136), (27, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [6, 4, 5, 18, 14, 9, 24, 25, 16, 10, 21]
 solution : [1, 2, 23, 22, 26]


New level: 4
 pending : [6, 4, 5, 18, 14, 9, 24, 25, 16, 10, 21]
 solution : [1, 2, 23, 22, 26]


Before reduction : 
 pending  : [6, 4, 5, 18, 14, 9, 24, 25, 16, 10, 21]
 solution : [1, 2, 23, 22, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, 9444732965739290427392), (25, 9444732965739290427392), (26, 75557863725914323419136), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1)]

Covered at level 4 : {4, 5, 6, 9, 10, 14, 16, 18, 21, 24, 25}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 22, 26]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 22, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 22, 26]


Solution : [1, 2, 23, 22, 26] has cost 47.


Before backtrack at level 4
 pending : []
 solution : [1, 2, 23, 22, 26]

After backtrack at level 4
 pending : [6, 4, 5, 18, 14, 9, 24, 25, 16, 10, 21]
 solution : [1, 2, 23, 22, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [6, 4, 5, 18, 14, 9, 24, 25, 16, 10, 21]
 solution : [1, 2, 23, 22]


Before reduction : 
 pending  : [6, 4, 5, 18, 14, 9, 24, 25, 16, 10, 21]
 solution : [1, 2, 23, 22]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, 9444732965739290427392), (25, 9444732965739290427392), (26, -1), (27, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [6, 4, 5, 18, 14, 9, 24, 25, 16, 10, 21]
 solution : [1, 2, 23, 22]


Solution : [1, 2, 23, 22] has cost 25.


Decide in level 4 among pending : [6, 4, 5, 18, 14, 9, 24, 25, 16, 10, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, 9444732965739290427392), (25, 9444732965739290427392), (26, -1), (27, -1)]

Decide 24 with phase True at level 4

After decision at level 4
 pending : [6, 4, 5, 18, 14, 9, 25, 16, 10, 21]
 solution : [1, 2, 23, 22, 24]


New level: 5
 pending : [6, 4, 5, 18, 14, 9, 25, 16, 10, 21]
 solution : [1, 2, 23, 22, 24]


Before reduction : 
 pending  : [6, 4, 5, 18, 14, 9, 25, 16, 10, 21]
 solution : [1, 2, 23, 22, 24]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, 9444732965739290427392), (25, 9444732965739290427392), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, 0), (10, 72057594037927936), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, 9444732965739290427392), (26, -1), (27, -1)]

Covered at level 5 : {9, 4}

After reduction : 
 pending  : [6, 5, 18, 14, 25, 16, 10, 21]
 solution : [1, 2, 23, 22, 24]


Before reduction : 
 pending  : [6, 5, 18, 14, 25, 16, 10, 21]
 solution : [1, 2, 23, 22, 24]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, 0), (10, 72057594037927936), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, 9444732965739290427392), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, -1), (10, 72057594037927936), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, 9444732965739290427392), (26, -1), (27, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [6, 5, 18, 14, 25, 16, 10, 21]
 solution : [1, 2, 23, 22, 24]


Solution : [1, 2, 23, 22, 24] has cost 49.


Before backtrack at level 5
 pending : [6, 5, 18, 14, 25, 16, 10, 21]
 solution : [1, 2, 23, 22, 24]

After backtrack at level 5
 pending : [6, 5, 18, 14, 25, 16, 10, 21, 4, 9]
 solution : [1, 2, 23, 22, 24]


Invert decision for 24 at level 4


New level: 5
 pending : [6, 5, 18, 14, 25, 16, 10, 21, 4, 9]
 solution : [1, 2, 23, 22]


Before reduction : 
 pending  : [6, 5, 18, 14, 25, 16, 10, 21, 4, 9]
 solution : [1, 2, 23, 22]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, -1), (10, 72057594037927936), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, 9444732965739290427392), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, 9444732965739290427392), (26, -1), (27, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [6, 5, 18, 14, 25, 16, 10, 21, 4, 9]
 solution : [1, 2, 23, 22]


Solution : [1, 2, 23, 22] has cost 25.


Decide in level 5 among pending : [6, 5, 18, 14, 25, 16, 10, 21, 4, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, 9444732965739290427392), (26, -1), (27, -1)]

Decide 25 with phase True at level 5

After decision at level 5
 pending : [6, 5, 18, 14, 16, 10, 21, 4, 9]
 solution : [1, 2, 23, 22, 25]


New level: 6
 pending : [6, 5, 18, 14, 16, 10, 21, 4, 9]
 solution : [1, 2, 23, 22, 25]


Before reduction : 
 pending  : [6, 5, 18, 14, 16, 10, 21, 4, 9]
 solution : [1, 2, 23, 22, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, 9444732965739290427392), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 36893488147419103232), (5, 295147905179352825856), (6, 0), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 144115188075855872), (15, -1), (16, 2305843009213693952), (17, -1), (18, 0), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 6 : {18, 6}

After reduction : 
 pending  : [5, 14, 16, 10, 21, 4, 9]
 solution : [1, 2, 23, 22, 25]


Before reduction : 
 pending  : [5, 14, 16, 10, 21, 4, 9]
 solution : [1, 2, 23, 22, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 36893488147419103232), (5, 295147905179352825856), (6, 0), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 144115188075855872), (15, -1), (16, 2305843009213693952), (17, -1), (18, 0), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 36893488147419103232), (5, 295147905179352825856), (6, -1), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 144115188075855872), (15, -1), (16, 2305843009213693952), (17, -1), (18, -1), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 14, 16, 10, 21, 4, 9]
 solution : [1, 2, 23, 22, 25]


Solution : [1, 2, 23, 22, 25] has cost 47.


Before backtrack at level 6
 pending : [5, 14, 16, 10, 21, 4, 9]
 solution : [1, 2, 23, 22, 25]

After backtrack at level 6
 pending : [5, 14, 16, 10, 21, 4, 9, 6, 18]
 solution : [1, 2, 23, 22, 25]


Invert decision for 25 at level 5


New level: 6
 pending : [5, 14, 16, 10, 21, 4, 9, 6, 18]
 solution : [1, 2, 23, 22]


Before reduction : 
 pending  : [5, 14, 16, 10, 21, 4, 9, 6, 18]
 solution : [1, 2, 23, 22]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 36893488147419103232), (5, 295147905179352825856), (6, -1), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 144115188075855872), (15, -1), (16, 2305843009213693952), (17, -1), (18, -1), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 14, 16, 10, 21, 4, 9, 6, 18]
 solution : [1, 2, 23, 22]


Solution : [1, 2, 23, 22] has cost 25.


Decide in level 6 among pending : [5, 14, 16, 10, 21, 4, 9, 6, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [14, 16, 10, 21, 4, 9, 6, 18]
 solution : [1, 2, 23, 22, 5]


New level: 7
 pending : [14, 16, 10, 21, 4, 9, 6, 18]
 solution : [1, 2, 23, 22, 5]


Before reduction : 
 pending  : [14, 16, 10, 21, 4, 9, 6, 18]
 solution : [1, 2, 23, 22, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, 4611686018427387904), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, 4611686018427387904), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, 36893488147419103232), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : {4, 6, 9, 10, 14, 16, 18, 21}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 22, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 22, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 22, 5]


Solution : [1, 2, 23, 22, 5] has cost 32.


Before backtrack at level 7
 pending : []
 solution : [1, 2, 23, 22, 5]

After backtrack at level 7
 pending : [14, 16, 10, 21, 4, 9, 6, 18]
 solution : [1, 2, 23, 22, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [14, 16, 10, 21, 4, 9, 6, 18]
 solution : [1, 2, 23, 22]


Before reduction : 
 pending  : [14, 16, 10, 21, 4, 9, 6, 18]
 solution : [1, 2, 23, 22]

Essensial at level 7 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : {9, 10, 14, 16, 18, 21}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 22, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 22, 4, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 22, 4, 6]


Solution : [1, 2, 23, 22, 4, 6] has cost 41.


Before backtrack at level 7
 pending : []
 solution : [1, 2, 23, 22, 4, 6]

After backtrack at level 7
 pending : [4, 6, 14, 16, 10, 21, 9, 18]
 solution : [1, 2, 23, 22]


Before backtrack at level 6
 pending : [4, 6, 14, 16, 10, 21, 9, 18]
 solution : [1, 2, 23, 22]

After backtrack at level 6
 pending : [4, 6, 14, 16, 10, 21, 9, 18, 5]
 solution : [1, 2, 23, 22]


Before backtrack at level 5
 pending : [4, 6, 14, 16, 10, 21, 9, 18, 5]
 solution : [1, 2, 23, 22]

After backtrack at level 5
 pending : [4, 6, 14, 16, 10, 21, 9, 18, 5, 25]
 solution : [1, 2, 23, 22]


Before backtrack at level 4
 pending : [4, 6, 14, 16, 10, 21, 9, 18, 5, 25]
 solution : [1, 2, 23, 22]

After backtrack at level 4
 pending : [4, 6, 14, 16, 10, 21, 9, 18, 5, 25, 24]
 solution : [1, 2, 23, 22]


Before backtrack at level 3
 pending : [4, 6, 14, 16, 10, 21, 9, 18, 5, 25, 24]
 solution : [1, 2, 23, 22]

After backtrack at level 3
 pending : [4, 6, 14, 16, 10, 21, 9, 18, 5, 25, 24, 13, 8, 15, 20, 7, 19, 12, 11, 17, 26]
 solution : [1, 2, 23, 22]


Invert decision for 22 at level 2


New level: 3
 pending : [4, 6, 14, 16, 10, 21, 9, 18, 5, 25, 24, 13, 8, 15, 20, 7, 19, 12, 11, 17, 26]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [4, 6, 14, 16, 10, 21, 9, 18, 5, 25, 24, 13, 8, 15, 20, 7, 19, 12, 11, 17, 26]
 solution : [1, 2, 23]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, 604462909807314587353088), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [4, 6, 14, 16, 10, 21, 9, 18, 5, 25, 24, 13, 8, 15, 20, 7, 19, 12, 11, 17, 26]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 3 among pending : [4, 6, 14, 16, 10, 21, 9, 18, 5, 25, 24, 13, 8, 15, 20, 7, 19, 12, 11, 17, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, 604462909807314587353088), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

Decide 21 with phase True at level 3

After decision at level 3
 pending : [4, 6, 14, 16, 10, 9, 18, 5, 25, 24, 13, 8, 15, 20, 7, 19, 12, 11, 17, 26]
 solution : [1, 2, 23, 21]


New level: 4
 pending : [4, 6, 14, 16, 10, 9, 18, 5, 25, 24, 13, 8, 15, 20, 7, 19, 12, 11, 17, 26]
 solution : [1, 2, 23, 21]


Before reduction : 
 pending  : [4, 6, 14, 16, 10, 9, 18, 5, 25, 24, 13, 8, 15, 20, 7, 19, 12, 11, 17, 26]
 solution : [1, 2, 23, 21]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, 604462909807314587353088), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, 1152921504606846976), (27, -1)]

Covered at level 4 : {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}

After reduction : 
 pending  : [4, 6, 5, 25, 24, 26]
 solution : [1, 2, 23, 21]


Before reduction : 
 pending  : [4, 6, 5, 25, 24, 26]
 solution : [1, 2, 23, 21]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, 1152921504606846976), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, 1152921504606846976), (27, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [4, 6, 5, 25, 24, 26]
 solution : [1, 2, 23, 21]


Solution : [1, 2, 23, 21] has cost 25.


Decide in level 4 among pending : [4, 6, 5, 25, 24, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, 1152921504606846976), (27, -1)]

Decide 26 with phase True at level 4

After decision at level 4
 pending : [4, 6, 5, 25, 24]
 solution : [1, 2, 23, 21, 26]


New level: 5
 pending : [4, 6, 5, 25, 24]
 solution : [1, 2, 23, 21, 26]


Before reduction : 
 pending  : [4, 6, 5, 25, 24]
 solution : [1, 2, 23, 21, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, 1152921504606846976), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1)]

Covered at level 5 : {4, 5, 6, 24, 25}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 21, 26]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 21, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 21, 26]


Solution : [1, 2, 23, 21, 26] has cost 47.


Before backtrack at level 5
 pending : []
 solution : [1, 2, 23, 21, 26]

After backtrack at level 5
 pending : [4, 6, 5, 25, 24]
 solution : [1, 2, 23, 21, 26]


Invert decision for 26 at level 4


New level: 5
 pending : [4, 6, 5, 25, 24]
 solution : [1, 2, 23, 21]


Before reduction : 
 pending  : [4, 6, 5, 25, 24]
 solution : [1, 2, 23, 21]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [4, 6, 5, 25, 24]
 solution : [1, 2, 23, 21]


Solution : [1, 2, 23, 21] has cost 25.


Decide in level 5 among pending : [4, 6, 5, 25, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 25 with phase True at level 5

After decision at level 5
 pending : [4, 6, 5, 24]
 solution : [1, 2, 23, 21, 25]


New level: 6
 pending : [4, 6, 5, 24]
 solution : [1, 2, 23, 21, 25]


Before reduction : 
 pending  : [4, 6, 5, 24]
 solution : [1, 2, 23, 21, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 4503599627370496), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

Covered at level 6 : {6}

After reduction : 
 pending  : [4, 5, 24]
 solution : [1, 2, 23, 21, 25]


Before reduction : 
 pending  : [4, 5, 24]
 solution : [1, 2, 23, 21, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 4503599627370496), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 4503599627370496), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [4, 5, 24]
 solution : [1, 2, 23, 21, 25]


Solution : [1, 2, 23, 21, 25] has cost 47.


Before backtrack at level 6
 pending : [4, 5, 24]
 solution : [1, 2, 23, 21, 25]

After backtrack at level 6
 pending : [4, 5, 24, 6]
 solution : [1, 2, 23, 21, 25]


Invert decision for 25 at level 5


New level: 6
 pending : [4, 5, 24, 6]
 solution : [1, 2, 23, 21]


Before reduction : 
 pending  : [4, 5, 24, 6]
 solution : [1, 2, 23, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 4503599627370496), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [4, 5, 24, 6]
 solution : [1, 2, 23, 21]


Solution : [1, 2, 23, 21] has cost 25.


Decide in level 6 among pending : [4, 5, 24, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [4, 5, 6]
 solution : [1, 2, 23, 21, 24]


New level: 7
 pending : [4, 5, 6]
 solution : [1, 2, 23, 21, 24]


Before reduction : 
 pending  : [4, 5, 6]
 solution : [1, 2, 23, 21, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : {4}

After reduction : 
 pending  : [5, 6]
 solution : [1, 2, 23, 21, 24]


Before reduction : 
 pending  : [5, 6]
 solution : [1, 2, 23, 21, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 6]
 solution : [1, 2, 23, 21, 24]


Solution : [1, 2, 23, 21, 24] has cost 49.


Before backtrack at level 7
 pending : [5, 6]
 solution : [1, 2, 23, 21, 24]

After backtrack at level 7
 pending : [5, 6, 4]
 solution : [1, 2, 23, 21, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [5, 6, 4]
 solution : [1, 2, 23, 21]


Before reduction : 
 pending  : [5, 6, 4]
 solution : [1, 2, 23, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 6, 4]
 solution : [1, 2, 23, 21]


Solution : [1, 2, 23, 21] has cost 25.


Decide in level 7 among pending : [5, 6, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [6, 4]
 solution : [1, 2, 23, 21, 5]


New level: 8
 pending : [6, 4]
 solution : [1, 2, 23, 21, 5]


Before reduction : 
 pending  : [6, 4]
 solution : [1, 2, 23, 21, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 8 : {4, 6}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 21, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 21, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 21, 5]


Solution : [1, 2, 23, 21, 5] has cost 32.


Before backtrack at level 8
 pending : []
 solution : [1, 2, 23, 21, 5]

After backtrack at level 8
 pending : [6, 4]
 solution : [1, 2, 23, 21, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [6, 4]
 solution : [1, 2, 23, 21]


Before reduction : 
 pending  : [6, 4]
 solution : [1, 2, 23, 21]

Essensial at level 8 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 21, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 21, 4, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 21, 4, 6]


Solution : [1, 2, 23, 21, 4, 6] has cost 41.


Before backtrack at level 8
 pending : []
 solution : [1, 2, 23, 21, 4, 6]

After backtrack at level 8
 pending : [6, 4]
 solution : [1, 2, 23, 21]


Before backtrack at level 7
 pending : [6, 4]
 solution : [1, 2, 23, 21]

After backtrack at level 7
 pending : [6, 4, 5]
 solution : [1, 2, 23, 21]


Before backtrack at level 6
 pending : [6, 4, 5]
 solution : [1, 2, 23, 21]

After backtrack at level 6
 pending : [6, 4, 5, 24]
 solution : [1, 2, 23, 21]


Before backtrack at level 5
 pending : [6, 4, 5, 24]
 solution : [1, 2, 23, 21]

After backtrack at level 5
 pending : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 21]


Before backtrack at level 4
 pending : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 21]

After backtrack at level 4
 pending : [6, 4, 5, 24, 25, 14, 16, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17, 26]
 solution : [1, 2, 23, 21]


Invert decision for 21 at level 3


New level: 4
 pending : [6, 4, 5, 24, 25, 14, 16, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17, 26]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 14, 16, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17, 26]
 solution : [1, 2, 23]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25, 14, 16, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17, 26]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 4 among pending : [6, 4, 5, 24, 25, 14, 16, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

Decide 26 with phase True at level 4

After decision at level 4
 pending : [6, 4, 5, 24, 25, 14, 16, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17]
 solution : [1, 2, 23, 26]


New level: 5
 pending : [6, 4, 5, 24, 25, 14, 16, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17]
 solution : [1, 2, 23, 26]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 14, 16, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17]
 solution : [1, 2, 23, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, 151115727451828646838272), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1)]

Covered at level 5 : {4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 26]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 26]


Solution : [1, 2, 23, 26] has cost 36.


Before backtrack at level 5
 pending : []
 solution : [1, 2, 23, 26]

After backtrack at level 5
 pending : [6, 4, 5, 24, 25, 14, 16, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17]
 solution : [1, 2, 23, 26]


Invert decision for 26 at level 4


New level: 5
 pending : [6, 4, 5, 24, 25, 14, 16, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 14, 16, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17]
 solution : [1, 2, 23]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25, 14, 16, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 5 among pending : [6, 4, 5, 24, 25, 14, 16, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

Decide 16 with phase True at level 5

After decision at level 5
 pending : [6, 4, 5, 24, 25, 14, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17]
 solution : [1, 2, 23, 16]


New level: 6
 pending : [6, 4, 5, 24, 25, 14, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17]
 solution : [1, 2, 23, 16]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 14, 10, 9, 18, 13, 8, 15, 20, 7, 19, 12, 11, 17]
 solution : [1, 2, 23, 16]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, 75557863725914323419136), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, 0), (8, 0), (9, 4722366482869645213696), (10, 9444732965739290427392), (11, 18889465931478580854784), (12, 2951479051793528258560), (13, 737869762948382064640), (14, 0), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 6 : {7, 8, 14, 15, 17, 18, 19, 20}

After reduction : 
 pending  : [6, 4, 5, 24, 25, 10, 9, 13, 12, 11]
 solution : [1, 2, 23, 16]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 10, 9, 13, 12, 11]
 solution : [1, 2, 23, 16]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, 0), (8, 0), (9, 4722366482869645213696), (10, 9444732965739290427392), (11, 18889465931478580854784), (12, 2951479051793528258560), (13, 737869762948382064640), (14, 0), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, 4722366482869645213696), (10, 9444732965739290427392), (11, 18889465931478580854784), (12, 2951479051793528258560), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25, 10, 9, 13, 12, 11]
 solution : [1, 2, 23, 16]


Solution : [1, 2, 23, 16] has cost 25.


Decide in level 6 among pending : [6, 4, 5, 24, 25, 10, 9, 13, 12, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, 4722366482869645213696), (10, 9444732965739290427392), (11, 18889465931478580854784), (12, 2951479051793528258560), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 11 with phase True at level 6

After decision at level 6
 pending : [6, 4, 5, 24, 25, 10, 9, 13, 12]
 solution : [1, 2, 23, 16, 11]


New level: 7
 pending : [6, 4, 5, 24, 25, 10, 9, 13, 12]
 solution : [1, 2, 23, 16, 11]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 10, 9, 13, 12]
 solution : [1, 2, 23, 16, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, 4722366482869645213696), (10, 9444732965739290427392), (11, 18889465931478580854784), (12, 2951479051793528258560), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, 1152921504606846976), (10, 2305843009213693952), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 7 : {12, 13}

After reduction : 
 pending  : [6, 4, 5, 24, 25, 10, 9]
 solution : [1, 2, 23, 16, 11]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 10, 9]
 solution : [1, 2, 23, 16, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, 1152921504606846976), (10, 2305843009213693952), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, 1152921504606846976), (10, 2305843009213693952), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25, 10, 9]
 solution : [1, 2, 23, 16, 11]


Solution : [1, 2, 23, 16, 11] has cost 38.


Before backtrack at level 7
 pending : [6, 4, 5, 24, 25, 10, 9]
 solution : [1, 2, 23, 16, 11]

After backtrack at level 7
 pending : [6, 4, 5, 24, 25, 10, 9, 13, 12]
 solution : [1, 2, 23, 16, 11]


Invert decision for 11 at level 6


New level: 7
 pending : [6, 4, 5, 24, 25, 10, 9, 13, 12]
 solution : [1, 2, 23, 16]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 10, 9, 13, 12]
 solution : [1, 2, 23, 16]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, 1152921504606846976), (10, 2305843009213693952), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, 4722366482869645213696), (10, 9444732965739290427392), (11, -1), (12, 2951479051793528258560), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25, 10, 9, 13, 12]
 solution : [1, 2, 23, 16]


Solution : [1, 2, 23, 16] has cost 25.


Decide in level 7 among pending : [6, 4, 5, 24, 25, 10, 9, 13, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, 4722366482869645213696), (10, 9444732965739290427392), (11, -1), (12, 2951479051793528258560), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [6, 4, 5, 24, 25, 9, 13, 12]
 solution : [1, 2, 23, 16, 10]


New level: 8
 pending : [6, 4, 5, 24, 25, 9, 13, 12]
 solution : [1, 2, 23, 16, 10]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 9, 13, 12]
 solution : [1, 2, 23, 16, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, 4722366482869645213696), (10, 9444732965739290427392), (11, -1), (12, 2951479051793528258560), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 144115188075855872), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 8 : {9, 12, 13}

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 16, 10]


Before reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 16, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 144115188075855872), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 144115188075855872), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 16, 10]


Solution : [1, 2, 23, 16, 10] has cost 38.


Before backtrack at level 8
 pending : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 16, 10]

After backtrack at level 8
 pending : [6, 4, 5, 24, 25, 9, 13, 12]
 solution : [1, 2, 23, 16, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [6, 4, 5, 24, 25, 9, 13, 12]
 solution : [1, 2, 23, 16]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 9, 13, 12]
 solution : [1, 2, 23, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9007199254740992), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 144115188075855872), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, 4722366482869645213696), (10, -1), (11, -1), (12, 2951479051793528258560), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25, 9, 13, 12]
 solution : [1, 2, 23, 16]


Solution : [1, 2, 23, 16] has cost 25.


Decide in level 8 among pending : [6, 4, 5, 24, 25, 9, 13, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, 4722366482869645213696), (10, -1), (11, -1), (12, 2951479051793528258560), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [6, 4, 5, 24, 25, 13, 12]
 solution : [1, 2, 23, 16, 9]


New level: 9
 pending : [6, 4, 5, 24, 25, 13, 12]
 solution : [1, 2, 23, 16, 9]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 13, 12]
 solution : [1, 2, 23, 16, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, 4722366482869645213696), (10, -1), (11, -1), (12, 2951479051793528258560), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 18446744073709551616), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 144115188075855872), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 9 : {12, 13}

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 16, 9]


Before reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 16, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 18446744073709551616), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 144115188075855872), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 18446744073709551616), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 144115188075855872), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 16, 9]


Solution : [1, 2, 23, 16, 9] has cost 40.


Before backtrack at level 9
 pending : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 16, 9]

After backtrack at level 9
 pending : [6, 4, 5, 24, 25, 13, 12]
 solution : [1, 2, 23, 16, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [6, 4, 5, 24, 25, 13, 12]
 solution : [1, 2, 23, 16]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 13, 12]
 solution : [1, 2, 23, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 18446744073709551616), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 144115188075855872), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2951479051793528258560), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25, 13, 12]
 solution : [1, 2, 23, 16]


Solution : [1, 2, 23, 16] has cost 25.


Decide in level 9 among pending : [6, 4, 5, 24, 25, 13, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2951479051793528258560), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 12 with phase True at level 9

After decision at level 9
 pending : [6, 4, 5, 24, 25, 13]
 solution : [1, 2, 23, 16, 12]


New level: 10
 pending : [6, 4, 5, 24, 25, 13]
 solution : [1, 2, 23, 16, 12]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 13]
 solution : [1, 2, 23, 16, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2951479051793528258560), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 590295810358705651712), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 10 : {13}

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 16, 12]


Before reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 16, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 590295810358705651712), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 590295810358705651712), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 16, 12]


Solution : [1, 2, 23, 16, 12] has cost 40.


Before backtrack at level 10
 pending : [6, 4, 5, 24, 25]
 solution : [1, 2, 23, 16, 12]

After backtrack at level 10
 pending : [6, 4, 5, 24, 25, 13]
 solution : [1, 2, 23, 16, 12]


Invert decision for 12 at level 9


New level: 10
 pending : [6, 4, 5, 24, 25, 13]
 solution : [1, 2, 23, 16]


Before reduction : 
 pending  : [6, 4, 5, 24, 25, 13]
 solution : [1, 2, 23, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 590295810358705651712), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 4, 5, 24, 25, 13]
 solution : [1, 2, 23, 16]


Solution : [1, 2, 23, 16] has cost 25.


Decide in level 10 among pending : [6, 4, 5, 24, 25, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 24 with phase True at level 10

After decision at level 10
 pending : [6, 4, 5, 25, 13]
 solution : [1, 2, 23, 16, 24]


New level: 11
 pending : [6, 4, 5, 25, 13]
 solution : [1, 2, 23, 16, 24]


Before reduction : 
 pending  : [6, 4, 5, 25, 13]
 solution : [1, 2, 23, 16, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1180591620717411303424), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 11 : {4, 13}

After reduction : 
 pending  : [6, 5, 25]
 solution : [1, 2, 23, 16, 24]


Before reduction : 
 pending  : [6, 5, 25]
 solution : [1, 2, 23, 16, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 5, 25]
 solution : [1, 2, 23, 16, 24]


Solution : [1, 2, 23, 16, 24] has cost 49.


Before backtrack at level 11
 pending : [6, 5, 25]
 solution : [1, 2, 23, 16, 24]

After backtrack at level 11
 pending : [6, 5, 25, 4, 13]
 solution : [1, 2, 23, 16, 24]


Invert decision for 24 at level 10


New level: 11
 pending : [6, 5, 25, 4, 13]
 solution : [1, 2, 23, 16]


Before reduction : 
 pending  : [6, 5, 25, 4, 13]
 solution : [1, 2, 23, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1125899906842624), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 5, 25, 4, 13]
 solution : [1, 2, 23, 16]


Solution : [1, 2, 23, 16] has cost 25.


Decide in level 11 among pending : [6, 5, 25, 4, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [6, 5, 25, 4]
 solution : [1, 2, 23, 16, 13]


New level: 12
 pending : [6, 5, 25, 4]
 solution : [1, 2, 23, 16, 13]


Before reduction : 
 pending  : [6, 5, 25, 4]
 solution : [1, 2, 23, 16, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 737869762948382064640), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 5, 25, 4]
 solution : [1, 2, 23, 16, 13]


Solution : [1, 2, 23, 16, 13] has cost 40.


Before backtrack at level 12
 pending : [6, 5, 25, 4]
 solution : [1, 2, 23, 16, 13]

After backtrack at level 12
 pending : [6, 5, 25, 4]
 solution : [1, 2, 23, 16, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [6, 5, 25, 4]
 solution : [1, 2, 23, 16]


Before reduction : 
 pending  : [6, 5, 25, 4]
 solution : [1, 2, 23, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 5, 25, 4]
 solution : [1, 2, 23, 16]


Solution : [1, 2, 23, 16] has cost 25.


Decide in level 12 among pending : [6, 5, 25, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Decide 5 with phase True at level 12

After decision at level 12
 pending : [6, 25, 4]
 solution : [1, 2, 23, 16, 5]


New level: 13
 pending : [6, 25, 4]
 solution : [1, 2, 23, 16, 5]


Before reduction : 
 pending  : [6, 25, 4]
 solution : [1, 2, 23, 16, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 147573952589676412928), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1)]

Covered at level 13 : {25, 4, 6}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 16, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 16, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 16, 5]


Solution : [1, 2, 23, 16, 5] has cost 32.


Before backtrack at level 13
 pending : []
 solution : [1, 2, 23, 16, 5]

After backtrack at level 13
 pending : [6, 25, 4]
 solution : [1, 2, 23, 16, 5]


Invert decision for 5 at level 12


New level: 13
 pending : [6, 25, 4]
 solution : [1, 2, 23, 16]


Before reduction : 
 pending  : [6, 25, 4]
 solution : [1, 2, 23, 16]

Essensial at level 13 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 25]
 solution : [1, 2, 23, 16, 4]


Before reduction : 
 pending  : [6, 25]
 solution : [1, 2, 23, 16, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 25]
 solution : [1, 2, 23, 16, 4]


Solution : [1, 2, 23, 16, 4] has cost 34.


Before backtrack at level 13
 pending : [6, 25]
 solution : [1, 2, 23, 16, 4]

After backtrack at level 13
 pending : [6, 25, 4]
 solution : [1, 2, 23, 16]


Before backtrack at level 12
 pending : [6, 25, 4]
 solution : [1, 2, 23, 16]

After backtrack at level 12
 pending : [6, 25, 4, 5]
 solution : [1, 2, 23, 16]


Before backtrack at level 11
 pending : [6, 25, 4, 5]
 solution : [1, 2, 23, 16]

After backtrack at level 11
 pending : [6, 25, 4, 5, 13]
 solution : [1, 2, 23, 16]


Before backtrack at level 10
 pending : [6, 25, 4, 5, 13]
 solution : [1, 2, 23, 16]

After backtrack at level 10
 pending : [6, 25, 4, 5, 13, 24]
 solution : [1, 2, 23, 16]


Before backtrack at level 9
 pending : [6, 25, 4, 5, 13, 24]
 solution : [1, 2, 23, 16]

After backtrack at level 9
 pending : [6, 25, 4, 5, 13, 24, 12]
 solution : [1, 2, 23, 16]


Before backtrack at level 8
 pending : [6, 25, 4, 5, 13, 24, 12]
 solution : [1, 2, 23, 16]

After backtrack at level 8
 pending : [6, 25, 4, 5, 13, 24, 12, 9]
 solution : [1, 2, 23, 16]


Before backtrack at level 7
 pending : [6, 25, 4, 5, 13, 24, 12, 9]
 solution : [1, 2, 23, 16]

After backtrack at level 7
 pending : [6, 25, 4, 5, 13, 24, 12, 9, 10]
 solution : [1, 2, 23, 16]


Before backtrack at level 6
 pending : [6, 25, 4, 5, 13, 24, 12, 9, 10]
 solution : [1, 2, 23, 16]

After backtrack at level 6
 pending : [6, 25, 4, 5, 13, 24, 12, 9, 10, 14, 18, 8, 15, 20, 7, 19, 17, 11]
 solution : [1, 2, 23, 16]


Invert decision for 16 at level 5


New level: 6
 pending : [6, 25, 4, 5, 13, 24, 12, 9, 10, 14, 18, 8, 15, 20, 7, 19, 17, 11]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [6, 25, 4, 5, 13, 24, 12, 9, 10, 14, 18, 8, 15, 20, 7, 19, 17, 11]
 solution : [1, 2, 23]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1125899906842624), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 72057594037927936), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 25, 4, 5, 13, 24, 12, 9, 10, 14, 18, 8, 15, 20, 7, 19, 17, 11]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 6 among pending : [6, 25, 4, 5, 13, 24, 12, 9, 10, 14, 18, 8, 15, 20, 7, 19, 17, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

Decide 10 with phase True at level 6

After decision at level 6
 pending : [6, 25, 4, 5, 13, 24, 12, 9, 14, 18, 8, 15, 20, 7, 19, 17, 11]
 solution : [1, 2, 23, 10]


New level: 7
 pending : [6, 25, 4, 5, 13, 24, 12, 9, 14, 18, 8, 15, 20, 7, 19, 17, 11]
 solution : [1, 2, 23, 10]


Before reduction : 
 pending  : [6, 25, 4, 5, 13, 24, 12, 9, 14, 18, 8, 15, 20, 7, 19, 17, 11]
 solution : [1, 2, 23, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, 75557863725914323419136), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9223372036854775808), (6, 1152921504606846976), (7, 0), (8, 0), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, 9444732965739290427392), (18, 2361183241434822606848), (19, 1180591620717411303424), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 73786976294838206464), (26, -1), (27, -1)]

Covered at level 7 : {7, 8, 9, 11, 12, 13, 14, 15}

After reduction : 
 pending  : [6, 25, 4, 5, 24, 18, 20, 19, 17]
 solution : [1, 2, 23, 10]


Before reduction : 
 pending  : [6, 25, 4, 5, 24, 18, 20, 19, 17]
 solution : [1, 2, 23, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9223372036854775808), (6, 1152921504606846976), (7, 0), (8, 0), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, -1), (17, 9444732965739290427392), (18, 2361183241434822606848), (19, 1180591620717411303424), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 73786976294838206464), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9223372036854775808), (6, 1152921504606846976), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 9444732965739290427392), (18, 2361183241434822606848), (19, 1180591620717411303424), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 73786976294838206464), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 25, 4, 5, 24, 18, 20, 19, 17]
 solution : [1, 2, 23, 10]


Solution : [1, 2, 23, 10] has cost 27.


Before backtrack at level 7
 pending : [6, 25, 4, 5, 24, 18, 20, 19, 17]
 solution : [1, 2, 23, 10]

After backtrack at level 7
 pending : [6, 25, 4, 5, 24, 18, 20, 19, 17, 13, 12, 9, 14, 8, 15, 7, 11]
 solution : [1, 2, 23, 10]


Invert decision for 10 at level 6


New level: 7
 pending : [6, 25, 4, 5, 24, 18, 20, 19, 17, 13, 12, 9, 14, 8, 15, 7, 11]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [6, 25, 4, 5, 24, 18, 20, 19, 17, 13, 12, 9, 14, 8, 15, 7, 11]
 solution : [1, 2, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1125899906842624), (5, 9223372036854775808), (6, 1152921504606846976), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 9444732965739290427392), (18, 2361183241434822606848), (19, 1180591620717411303424), (20, 295147905179352825856), (21, -1), (22, -1), (23, -1), (24, 72057594037927936), (25, 73786976294838206464), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 25, 4, 5, 24, 18, 20, 19, 17, 13, 12, 9, 14, 8, 15, 7, 11]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 7 among pending : [6, 25, 4, 5, 24, 18, 20, 19, 17, 13, 12, 9, 14, 8, 15, 7, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [6, 25, 4, 5, 24, 18, 20, 19, 13, 12, 9, 14, 8, 15, 7, 11]
 solution : [1, 2, 23, 17]


New level: 8
 pending : [6, 25, 4, 5, 24, 18, 20, 19, 13, 12, 9, 14, 8, 15, 7, 11]
 solution : [1, 2, 23, 17]


Before reduction : 
 pending  : [6, 25, 4, 5, 24, 18, 20, 19, 13, 12, 9, 14, 8, 15, 7, 11]
 solution : [1, 2, 23, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, 75557863725914323419136), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 0), (8, 0), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, 0), (16, -1), (17, -1), (18, 576460752303423488), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

Covered at level 8 : {7, 8, 15, 19, 20}

After reduction : 
 pending  : [6, 25, 4, 5, 24, 18, 13, 12, 9, 14, 11]
 solution : [1, 2, 23, 17]


Before reduction : 
 pending  : [6, 25, 4, 5, 24, 18, 13, 12, 9, 14, 11]
 solution : [1, 2, 23, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 0), (8, 0), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, 0), (16, -1), (17, -1), (18, 576460752303423488), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 25, 4, 5, 24, 18, 13, 12, 9, 14, 11]
 solution : [1, 2, 23, 17]


Solution : [1, 2, 23, 17] has cost 25.


Decide in level 8 among pending : [6, 25, 4, 5, 24, 18, 13, 12, 9, 14, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

Decide 25 with phase True at level 8

After decision at level 8
 pending : [6, 4, 5, 24, 18, 13, 12, 9, 14, 11]
 solution : [1, 2, 23, 17, 25]


New level: 9
 pending : [6, 4, 5, 24, 18, 13, 12, 9, 14, 11]
 solution : [1, 2, 23, 17, 25]


Before reduction : 
 pending  : [6, 4, 5, 24, 18, 13, 12, 9, 14, 11]
 solution : [1, 2, 23, 17, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 295147905179352825856), (6, 0), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 144115188075855872), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, -1), (26, -1), (27, -1)]

Covered at level 9 : {18, 6}

After reduction : 
 pending  : [4, 5, 24, 13, 12, 9, 14, 11]
 solution : [1, 2, 23, 17, 25]


Before reduction : 
 pending  : [4, 5, 24, 13, 12, 9, 14, 11]
 solution : [1, 2, 23, 17, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 295147905179352825856), (6, 0), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 144115188075855872), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 295147905179352825856), (6, -1), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 144115188075855872), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, -1), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [4, 5, 24, 13, 12, 9, 14, 11]
 solution : [1, 2, 23, 17, 25]


Solution : [1, 2, 23, 17, 25] has cost 47.


Before backtrack at level 9
 pending : [4, 5, 24, 13, 12, 9, 14, 11]
 solution : [1, 2, 23, 17, 25]

After backtrack at level 9
 pending : [4, 5, 24, 13, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 17, 25]


Invert decision for 25 at level 8


New level: 9
 pending : [4, 5, 24, 13, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 17]


Before reduction : 
 pending  : [4, 5, 24, 13, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 295147905179352825856), (6, -1), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 144115188075855872), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, -1), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [4, 5, 24, 13, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 17]


Solution : [1, 2, 23, 17] has cost 25.


Decide in level 9 among pending : [4, 5, 24, 13, 12, 9, 14, 11, 6, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, -1), (26, -1), (27, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [4, 5, 13, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 17, 24]


New level: 10
 pending : [4, 5, 13, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 17, 24]


Before reduction : 
 pending  : [4, 5, 13, 12, 9, 14, 11, 6, 18]
 solution : [1, 2, 23, 17, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 72057594037927936), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 10 : {4, 9, 11, 12, 13}

After reduction : 
 pending  : [5, 14, 6, 18]
 solution : [1, 2, 23, 17, 24]


Before reduction : 
 pending  : [5, 14, 6, 18]
 solution : [1, 2, 23, 17, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, 0), (10, -1), (11, 0), (12, 0), (13, 0), (14, 72057594037927936), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 14, 6, 18]
 solution : [1, 2, 23, 17, 24]


Solution : [1, 2, 23, 17, 24] has cost 49.


Before backtrack at level 10
 pending : [5, 14, 6, 18]
 solution : [1, 2, 23, 17, 24]

After backtrack at level 10
 pending : [5, 14, 6, 18, 4, 13, 12, 9, 11]
 solution : [1, 2, 23, 17, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [5, 14, 6, 18, 4, 13, 12, 9, 11]
 solution : [1, 2, 23, 17]


Before reduction : 
 pending  : [5, 14, 6, 18, 4, 13, 12, 9, 11]
 solution : [1, 2, 23, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4611686018427387904), (6, 4611686018427387904), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 72057594037927936), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 14, 6, 18, 4, 13, 12, 9, 11]
 solution : [1, 2, 23, 17]


Solution : [1, 2, 23, 17] has cost 25.


Decide in level 10 among pending : [5, 14, 6, 18, 4, 13, 12, 9, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 11 with phase True at level 10

After decision at level 10
 pending : [5, 14, 6, 18, 4, 13, 12, 9]
 solution : [1, 2, 23, 17, 11]


New level: 11
 pending : [5, 14, 6, 18, 4, 13, 12, 9]
 solution : [1, 2, 23, 17, 11]


Before reduction : 
 pending  : [5, 14, 6, 18, 4, 13, 12, 9]
 solution : [1, 2, 23, 17, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, 4722366482869645213696), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 1180591620717411303424), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, 0), (13, 0), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : {12, 13}

After reduction : 
 pending  : [5, 14, 6, 18, 4, 9]
 solution : [1, 2, 23, 17, 11]


Before reduction : 
 pending  : [5, 14, 6, 18, 4, 9]
 solution : [1, 2, 23, 17, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 1180591620717411303424), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, 0), (13, 0), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 1180591620717411303424), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 14, 6, 18, 4, 9]
 solution : [1, 2, 23, 17, 11]


Solution : [1, 2, 23, 17, 11] has cost 38.


Before backtrack at level 11
 pending : [5, 14, 6, 18, 4, 9]
 solution : [1, 2, 23, 17, 11]

After backtrack at level 11
 pending : [5, 14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 17, 11]


Invert decision for 11 at level 10


New level: 11
 pending : [5, 14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 17]


Before reduction : 
 pending  : [5, 14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 1180591620717411303424), (6, 147573952589676412928), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, -1), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 17]


Solution : [1, 2, 23, 17] has cost 25.


Decide in level 11 among pending : [5, 14, 6, 18, 4, 9, 13, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, -1), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 17, 5]


New level: 12
 pending : [14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 17, 5]


Before reduction : 
 pending  : [14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 17, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1770887431076116955136), (10, -1), (11, -1), (12, 1254378597012249509888), (13, 368934881474191032320), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : {4, 6, 9, 12, 13, 14, 18}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 17, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 17, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 17, 5]


Solution : [1, 2, 23, 17, 5] has cost 32.


Before backtrack at level 12
 pending : []
 solution : [1, 2, 23, 17, 5]

After backtrack at level 12
 pending : [14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 17, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 17]


Before reduction : 
 pending  : [14, 6, 18, 4, 9, 13, 12]
 solution : [1, 2, 23, 17]

Essensial at level 12 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : {9, 12, 13, 14, 18}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 17, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 17, 4, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 17, 4, 6]


Solution : [1, 2, 23, 17, 4, 6] has cost 41.


Before backtrack at level 12
 pending : []
 solution : [1, 2, 23, 17, 4, 6]

After backtrack at level 12
 pending : [6, 4, 14, 18, 9, 13, 12]
 solution : [1, 2, 23, 17]


Before backtrack at level 11
 pending : [6, 4, 14, 18, 9, 13, 12]
 solution : [1, 2, 23, 17]

After backtrack at level 11
 pending : [6, 4, 14, 18, 9, 13, 12, 5]
 solution : [1, 2, 23, 17]


Before backtrack at level 10
 pending : [6, 4, 14, 18, 9, 13, 12, 5]
 solution : [1, 2, 23, 17]

After backtrack at level 10
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 11]
 solution : [1, 2, 23, 17]


Before backtrack at level 9
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 11]
 solution : [1, 2, 23, 17]

After backtrack at level 9
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24]
 solution : [1, 2, 23, 17]


Before backtrack at level 8
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24]
 solution : [1, 2, 23, 17]

After backtrack at level 8
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24, 20, 19, 8, 15, 7, 25]
 solution : [1, 2, 23, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24, 20, 19, 8, 15, 7, 25]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24, 20, 19, 8, 15, 7, 25]
 solution : [1, 2, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24, 20, 19, 8, 15, 7, 25]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 8 among pending : [6, 4, 14, 18, 9, 13, 12, 5, 11, 24, 20, 19, 8, 15, 7, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

Decide 11 with phase True at level 8

After decision at level 8
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 24, 20, 19, 8, 15, 7, 25]
 solution : [1, 2, 23, 11]


New level: 9
 pending : [6, 4, 14, 18, 9, 13, 12, 5, 24, 20, 19, 8, 15, 7, 25]
 solution : [1, 2, 23, 11]


Before reduction : 
 pending  : [6, 4, 14, 18, 9, 13, 12, 5, 24, 20, 19, 8, 15, 7, 25]
 solution : [1, 2, 23, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, 75557863725914323419136), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 0), (8, 0), (9, 1152921504606846976), (10, -1), (11, -1), (12, 0), (13, 0), (14, 576460752303423488), (15, 0), (16, -1), (17, -1), (18, 147573952589676412928), (19, 73786976294838206464), (20, 73786976294838206464), (21, -1), (22, -1), (23, -1), (24, 9444732965739290427392), (25, 18889465931478580854784), (26, -1), (27, -1)]

Covered at level 9 : {7, 8, 12, 13, 15}

After reduction : 
 pending  : [6, 4, 14, 18, 9, 5, 24, 20, 19, 25]
 solution : [1, 2, 23, 11]


Before reduction : 
 pending  : [6, 4, 14, 18, 9, 5, 24, 20, 19, 25]
 solution : [1, 2, 23, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 0), (8, 0), (9, 1152921504606846976), (10, -1), (11, -1), (12, 0), (13, 0), (14, 576460752303423488), (15, 0), (16, -1), (17, -1), (18, 147573952589676412928), (19, 73786976294838206464), (20, 73786976294838206464), (21, -1), (22, -1), (23, -1), (24, 9444732965739290427392), (25, 18889465931478580854784), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 147573952589676412928), (19, 73786976294838206464), (20, 73786976294838206464), (21, -1), (22, -1), (23, -1), (24, 9444732965739290427392), (25, 18889465931478580854784), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 4, 14, 18, 9, 5, 24, 20, 19, 25]
 solution : [1, 2, 23, 11]


Solution : [1, 2, 23, 11] has cost 27.


Before backtrack at level 9
 pending : [6, 4, 14, 18, 9, 5, 24, 20, 19, 25]
 solution : [1, 2, 23, 11]

After backtrack at level 9
 pending : [6, 4, 14, 18, 9, 5, 24, 20, 19, 25, 13, 12, 8, 15, 7]
 solution : [1, 2, 23, 11]


Invert decision for 11 at level 8


New level: 9
 pending : [6, 4, 14, 18, 9, 5, 24, 20, 19, 25, 13, 12, 8, 15, 7]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [6, 4, 14, 18, 9, 5, 24, 20, 19, 25, 13, 12, 8, 15, 7]
 solution : [1, 2, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 147573952589676412928), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, 1152921504606846976), (10, -1), (11, -1), (12, -1), (13, -1), (14, 576460752303423488), (15, -1), (16, -1), (17, -1), (18, 147573952589676412928), (19, 73786976294838206464), (20, 73786976294838206464), (21, -1), (22, -1), (23, -1), (24, 9444732965739290427392), (25, 18889465931478580854784), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 4, 14, 18, 9, 5, 24, 20, 19, 25, 13, 12, 8, 15, 7]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 9 among pending : [6, 4, 14, 18, 9, 5, 24, 20, 19, 25, 13, 12, 8, 15, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [6, 4, 14, 18, 9, 5, 20, 19, 25, 13, 12, 8, 15, 7]
 solution : [1, 2, 23, 24]


New level: 10
 pending : [6, 4, 14, 18, 9, 5, 20, 19, 25, 13, 12, 8, 15, 7]
 solution : [1, 2, 23, 24]


Before reduction : 
 pending  : [6, 4, 14, 18, 9, 5, 20, 19, 25, 13, 12, 8, 15, 7]
 solution : [1, 2, 23, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, 18889465931478580854784), (25, 18889465931478580854784), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 18446744073709551616), (6, 18446744073709551616), (7, 1180591620717411303424), (8, 144115188075855872), (9, 0), (10, -1), (11, -1), (12, 144115188075855872), (13, 0), (14, 1180591620717411303424), (15, 147573952589676412928), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, 18889465931478580854784), (26, -1), (27, -1)]

Covered at level 10 : {9, 4, 13}

After reduction : 
 pending  : [6, 14, 18, 5, 20, 19, 25, 12, 8, 15, 7]
 solution : [1, 2, 23, 24]


Before reduction : 
 pending  : [6, 14, 18, 5, 20, 19, 25, 12, 8, 15, 7]
 solution : [1, 2, 23, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 18446744073709551616), (6, 18446744073709551616), (7, 1180591620717411303424), (8, 144115188075855872), (9, 0), (10, -1), (11, -1), (12, 144115188075855872), (13, 0), (14, 1180591620717411303424), (15, 147573952589676412928), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, 18889465931478580854784), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 18446744073709551616), (6, 18446744073709551616), (7, 1180591620717411303424), (8, 144115188075855872), (9, -1), (10, -1), (11, -1), (12, 144115188075855872), (13, -1), (14, 1180591620717411303424), (15, 147573952589676412928), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, 18889465931478580854784), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 14, 18, 5, 20, 19, 25, 12, 8, 15, 7]
 solution : [1, 2, 23, 24]


Solution : [1, 2, 23, 24] has cost 38.


Before backtrack at level 10
 pending : [6, 14, 18, 5, 20, 19, 25, 12, 8, 15, 7]
 solution : [1, 2, 23, 24]

After backtrack at level 10
 pending : [6, 14, 18, 5, 20, 19, 25, 12, 8, 15, 7, 4, 9, 13]
 solution : [1, 2, 23, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [6, 14, 18, 5, 20, 19, 25, 12, 8, 15, 7, 4, 9, 13]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [6, 14, 18, 5, 20, 19, 25, 12, 8, 15, 7, 4, 9, 13]
 solution : [1, 2, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 18446744073709551616), (6, 18446744073709551616), (7, 1180591620717411303424), (8, 144115188075855872), (9, -1), (10, -1), (11, -1), (12, 144115188075855872), (13, -1), (14, 1180591620717411303424), (15, 147573952589676412928), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, 18889465931478580854784), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, 18889465931478580854784), (26, -1), (27, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 14, 18, 5, 20, 19, 25, 12, 8, 15, 7, 4, 9, 13]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 10 among pending : [6, 14, 18, 5, 20, 19, 25, 12, 8, 15, 7, 4, 9, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, 18889465931478580854784), (26, -1), (27, -1)]

Decide 25 with phase True at level 10

After decision at level 10
 pending : [6, 14, 18, 5, 20, 19, 12, 8, 15, 7, 4, 9, 13]
 solution : [1, 2, 23, 25]


New level: 11
 pending : [6, 14, 18, 5, 20, 19, 12, 8, 15, 7, 4, 9, 13]
 solution : [1, 2, 23, 25]


Before reduction : 
 pending  : [6, 14, 18, 5, 20, 19, 12, 8, 15, 7, 4, 9, 13]
 solution : [1, 2, 23, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, 18889465931478580854784), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 295147905179352825856), (6, 0), (7, 590295810358705651712), (8, 184467440737095516160), (9, 14167099448608935641088), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 2361183241434822606848), (15, 288230376151711744), (16, -1), (17, -1), (18, 0), (19, 1152921504606846976), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : {18, 20, 6}

After reduction : 
 pending  : [14, 5, 19, 12, 8, 15, 7, 4, 9, 13]
 solution : [1, 2, 23, 25]


Before reduction : 
 pending  : [14, 5, 19, 12, 8, 15, 7, 4, 9, 13]
 solution : [1, 2, 23, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 295147905179352825856), (6, 0), (7, 590295810358705651712), (8, 184467440737095516160), (9, 14167099448608935641088), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 2361183241434822606848), (15, 288230376151711744), (16, -1), (17, -1), (18, 0), (19, 1152921504606846976), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 295147905179352825856), (6, -1), (7, 590295810358705651712), (8, 92233720368547758080), (9, 14167099448608935641088), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 590295810358705651712), (15, 288230376151711744), (16, -1), (17, -1), (18, -1), (19, 1152921504606846976), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [14, 5, 19, 12, 8, 15, 7, 4, 9, 13]
 solution : [1, 2, 23, 25]


Solution : [1, 2, 23, 25] has cost 36.


Before backtrack at level 11
 pending : [14, 5, 19, 12, 8, 15, 7, 4, 9, 13]
 solution : [1, 2, 23, 25]

After backtrack at level 11
 pending : [14, 5, 19, 12, 8, 15, 7, 4, 9, 13, 6, 18, 20]
 solution : [1, 2, 23, 25]


Invert decision for 25 at level 10


New level: 11
 pending : [14, 5, 19, 12, 8, 15, 7, 4, 9, 13, 6, 18, 20]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [14, 5, 19, 12, 8, 15, 7, 4, 9, 13, 6, 18, 20]
 solution : [1, 2, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 73786976294838206464), (5, 295147905179352825856), (6, -1), (7, 590295810358705651712), (8, 92233720368547758080), (9, 14167099448608935641088), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 590295810358705651712), (15, 288230376151711744), (16, -1), (17, -1), (18, -1), (19, 1152921504606846976), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [14, 5, 19, 12, 8, 15, 7, 4, 9, 13, 6, 18, 20]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 11 among pending : [14, 5, 19, 12, 8, 15, 7, 4, 9, 13, 6, 18, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [14, 5, 19, 12, 8, 15, 7, 4, 13, 6, 18, 20]
 solution : [1, 2, 23, 9]


New level: 12
 pending : [14, 5, 19, 12, 8, 15, 7, 4, 13, 6, 18, 20]
 solution : [1, 2, 23, 9]


Before reduction : 
 pending  : [14, 5, 19, 12, 8, 15, 7, 4, 13, 6, 18, 20]
 solution : [1, 2, 23, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, 14167099448608935641088), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1152921504606846976), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 144115188075855872), (9, -1), (10, -1), (11, -1), (12, 144115188075855872), (13, 0), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : {13}

After reduction : 
 pending  : [14, 5, 19, 12, 8, 15, 7, 4, 6, 18, 20]
 solution : [1, 2, 23, 9]


Before reduction : 
 pending  : [14, 5, 19, 12, 8, 15, 7, 4, 6, 18, 20]
 solution : [1, 2, 23, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1152921504606846976), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 144115188075855872), (9, -1), (10, -1), (11, -1), (12, 144115188075855872), (13, 0), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1152921504606846976), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 144115188075855872), (9, -1), (10, -1), (11, -1), (12, 144115188075855872), (13, -1), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [14, 5, 19, 12, 8, 15, 7, 4, 6, 18, 20]
 solution : [1, 2, 23, 9]


Solution : [1, 2, 23, 9] has cost 29.


Before backtrack at level 12
 pending : [14, 5, 19, 12, 8, 15, 7, 4, 6, 18, 20]
 solution : [1, 2, 23, 9]

After backtrack at level 12
 pending : [14, 5, 19, 12, 8, 15, 7, 4, 6, 18, 20, 13]
 solution : [1, 2, 23, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [14, 5, 19, 12, 8, 15, 7, 4, 6, 18, 20, 13]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [14, 5, 19, 12, 8, 15, 7, 4, 6, 18, 20, 13]
 solution : [1, 2, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1152921504606846976), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 144115188075855872), (9, -1), (10, -1), (11, -1), (12, 144115188075855872), (13, -1), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [14, 5, 19, 12, 8, 15, 7, 4, 6, 18, 20, 13]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 12 among pending : [14, 5, 19, 12, 8, 15, 7, 4, 6, 18, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [14, 5, 19, 8, 15, 7, 4, 6, 18, 20, 13]
 solution : [1, 2, 23, 12]


New level: 13
 pending : [14, 5, 19, 8, 15, 7, 4, 6, 18, 20, 13]
 solution : [1, 2, 23, 12]


Before reduction : 
 pending  : [14, 5, 19, 8, 15, 7, 4, 6, 18, 20, 13]
 solution : [1, 2, 23, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, 10625324586456701730816), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 73786976294838206464), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 147573952589676412928), (15, 73786976294838206464), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : {8, 13}

After reduction : 
 pending  : [14, 5, 19, 15, 7, 4, 6, 18, 20]
 solution : [1, 2, 23, 12]


Before reduction : 
 pending  : [14, 5, 19, 15, 7, 4, 6, 18, 20]
 solution : [1, 2, 23, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 73786976294838206464), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 147573952589676412928), (15, 73786976294838206464), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 73786976294838206464), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 147573952589676412928), (15, 73786976294838206464), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [14, 5, 19, 15, 7, 4, 6, 18, 20]
 solution : [1, 2, 23, 12]


Solution : [1, 2, 23, 12] has cost 29.


Before backtrack at level 13
 pending : [14, 5, 19, 15, 7, 4, 6, 18, 20]
 solution : [1, 2, 23, 12]

After backtrack at level 13
 pending : [14, 5, 19, 15, 7, 4, 6, 18, 20, 8, 13]
 solution : [1, 2, 23, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [14, 5, 19, 15, 7, 4, 6, 18, 20, 8, 13]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [14, 5, 19, 15, 7, 4, 6, 18, 20, 8, 13]
 solution : [1, 2, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 73786976294838206464), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 147573952589676412928), (15, 73786976294838206464), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [14, 5, 19, 15, 7, 4, 6, 18, 20, 8, 13]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 13 among pending : [14, 5, 19, 15, 7, 4, 6, 18, 20, 8, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [5, 19, 15, 7, 4, 6, 18, 20, 8, 13]
 solution : [1, 2, 23, 14]


New level: 14
 pending : [5, 19, 15, 7, 4, 6, 18, 20, 8, 13]
 solution : [1, 2, 23, 14]


Before reduction : 
 pending  : [5, 19, 15, 7, 4, 6, 18, 20, 8, 13]
 solution : [1, 2, 23, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, 9444732965739290427392), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 2361183241434822606848), (6, 1152921504606846976), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 442721857769029238784), (14, -1), (15, 0), (16, -1), (17, -1), (18, 4722366482869645213696), (19, 590295810358705651712), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 14 : {8, 7, 15}

After reduction : 
 pending  : [5, 19, 4, 6, 18, 20, 13]
 solution : [1, 2, 23, 14]


Before reduction : 
 pending  : [5, 19, 4, 6, 18, 20, 13]
 solution : [1, 2, 23, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 2361183241434822606848), (6, 1152921504606846976), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 442721857769029238784), (14, -1), (15, 0), (16, -1), (17, -1), (18, 4722366482869645213696), (19, 590295810358705651712), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 2361183241434822606848), (6, 1152921504606846976), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 442721857769029238784), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4722366482869645213696), (19, 590295810358705651712), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [5, 19, 4, 6, 18, 20, 13]
 solution : [1, 2, 23, 14]


Solution : [1, 2, 23, 14] has cost 27.


Before backtrack at level 14
 pending : [5, 19, 4, 6, 18, 20, 13]
 solution : [1, 2, 23, 14]

After backtrack at level 14
 pending : [5, 19, 4, 6, 18, 20, 13, 15, 7, 8]
 solution : [1, 2, 23, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [5, 19, 4, 6, 18, 20, 13, 15, 7, 8]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [5, 19, 4, 6, 18, 20, 13, 15, 7, 8]
 solution : [1, 2, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 18446744073709551616), (5, 2361183241434822606848), (6, 1152921504606846976), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 442721857769029238784), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4722366482869645213696), (19, 590295810358705651712), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [5, 19, 4, 6, 18, 20, 13, 15, 7, 8]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 14 among pending : [5, 19, 4, 6, 18, 20, 13, 15, 7, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [5, 4, 6, 18, 20, 13, 15, 7, 8]
 solution : [1, 2, 23, 19]


New level: 15
 pending : [5, 4, 6, 18, 20, 13, 15, 7, 8]
 solution : [1, 2, 23, 19]


Before reduction : 
 pending  : [5, 4, 6, 18, 20, 13, 15, 7, 8]
 solution : [1, 2, 23, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, 9444732965739290427392), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 1180591620717411303424), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 0), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : {20, 15}

After reduction : 
 pending  : [5, 4, 6, 18, 13, 7, 8]
 solution : [1, 2, 23, 19]


Before reduction : 
 pending  : [5, 4, 6, 18, 13, 7, 8]
 solution : [1, 2, 23, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 1180591620717411303424), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 0), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 1180591620717411303424), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [5, 4, 6, 18, 13, 7, 8]
 solution : [1, 2, 23, 19]


Solution : [1, 2, 23, 19] has cost 25.


Decide in level 15 among pending : [5, 4, 6, 18, 13, 7, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 1180591620717411303424), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 15

After decision at level 15
 pending : [4, 6, 18, 13, 7, 8]
 solution : [1, 2, 23, 19, 5]


New level: 16
 pending : [4, 6, 18, 13, 7, 8]
 solution : [1, 2, 23, 19, 5]


Before reduction : 
 pending  : [4, 6, 18, 13, 7, 8]
 solution : [1, 2, 23, 19, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 1180591620717411303424), (8, 368934881474191032320), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, -1), (16, -1), (17, -1), (18, 576460752303423488), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : {4, 6, 7, 8, 13, 18}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 19, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 19, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 19, 5]


Solution : [1, 2, 23, 19, 5] has cost 32.


Before backtrack at level 16
 pending : []
 solution : [1, 2, 23, 19, 5]

After backtrack at level 16
 pending : [4, 6, 18, 13, 7, 8]
 solution : [1, 2, 23, 19, 5]


Invert decision for 5 at level 15


New level: 16
 pending : [4, 6, 18, 13, 7, 8]
 solution : [1, 2, 23, 19]


Before reduction : 
 pending  : [4, 6, 18, 13, 7, 8]
 solution : [1, 2, 23, 19]

Essensial at level 16 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : {8, 18, 13, 7}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 19, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 19, 4, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 19, 4, 6]


Solution : [1, 2, 23, 19, 4, 6] has cost 41.


Before backtrack at level 16
 pending : []
 solution : [1, 2, 23, 19, 4, 6]

After backtrack at level 16
 pending : [4, 6, 18, 13, 7, 8]
 solution : [1, 2, 23, 19]


Before backtrack at level 15
 pending : [4, 6, 18, 13, 7, 8]
 solution : [1, 2, 23, 19]

After backtrack at level 15
 pending : [4, 6, 18, 13, 7, 8, 20, 15, 5]
 solution : [1, 2, 23, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [4, 6, 18, 13, 7, 8, 20, 15, 5]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [4, 6, 18, 13, 7, 8, 20, 15, 5]
 solution : [1, 2, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, -1), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [4, 6, 18, 13, 7, 8, 20, 15, 5]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 15 among pending : [4, 6, 18, 13, 7, 8, 20, 15, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, -1), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 18 with phase True at level 15

After decision at level 15
 pending : [4, 6, 13, 7, 8, 20, 15, 5]
 solution : [1, 2, 23, 18]


New level: 16
 pending : [4, 6, 13, 7, 8, 20, 15, 5]
 solution : [1, 2, 23, 18]


Before reduction : 
 pending  : [4, 6, 13, 7, 8, 20, 15, 5]
 solution : [1, 2, 23, 18]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 1180591620717411303424), (16, -1), (17, -1), (18, 9444732965739290427392), (19, -1), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 18446744073709551616), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 288230376151711744), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : {20}

After reduction : 
 pending  : [4, 6, 13, 7, 8, 15, 5]
 solution : [1, 2, 23, 18]


Before reduction : 
 pending  : [4, 6, 13, 7, 8, 15, 5]
 solution : [1, 2, 23, 18]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 18446744073709551616), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 288230376151711744), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 18446744073709551616), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 288230376151711744), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [4, 6, 13, 7, 8, 15, 5]
 solution : [1, 2, 23, 18]


Solution : [1, 2, 23, 18] has cost 25.


Decide in level 16 among pending : [4, 6, 13, 7, 8, 15, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 18446744073709551616), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 288230376151711744), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 7 with phase True at level 16

After decision at level 16
 pending : [4, 6, 13, 8, 15, 5]
 solution : [1, 2, 23, 18, 7]


New level: 17
 pending : [4, 6, 13, 8, 15, 5]
 solution : [1, 2, 23, 18, 7]


Before reduction : 
 pending  : [4, 6, 13, 8, 15, 5]
 solution : [1, 2, 23, 18, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 18446744073709551616), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 288230376151711744), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 18446744073709551616), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : {8, 15}

After reduction : 
 pending  : [4, 6, 13, 5]
 solution : [1, 2, 23, 18, 7]


Before reduction : 
 pending  : [4, 6, 13, 5]
 solution : [1, 2, 23, 18, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 18446744073709551616), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 18446744073709551616), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [4, 6, 13, 5]
 solution : [1, 2, 23, 18, 7]


Solution : [1, 2, 23, 18, 7] has cost 38.


Before backtrack at level 17
 pending : [4, 6, 13, 5]
 solution : [1, 2, 23, 18, 7]

After backtrack at level 17
 pending : [4, 6, 13, 5, 8, 15]
 solution : [1, 2, 23, 18, 7]


Invert decision for 7 at level 16


New level: 17
 pending : [4, 6, 13, 5, 8, 15]
 solution : [1, 2, 23, 18]


Before reduction : 
 pending  : [4, 6, 13, 5, 8, 15]
 solution : [1, 2, 23, 18]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 18446744073709551616), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 18446744073709551616), (7, -1), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 288230376151711744), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [4, 6, 13, 5, 8, 15]
 solution : [1, 2, 23, 18]


Solution : [1, 2, 23, 18] has cost 25.


Decide in level 17 among pending : [4, 6, 13, 5, 8, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 18446744073709551616), (7, -1), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 288230376151711744), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 17

After decision at level 17
 pending : [4, 6, 13, 8, 15]
 solution : [1, 2, 23, 18, 5]


New level: 18
 pending : [4, 6, 13, 8, 15]
 solution : [1, 2, 23, 18, 5]


Before reduction : 
 pending  : [4, 6, 13, 8, 15]
 solution : [1, 2, 23, 18, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 18446744073709551616), (7, -1), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 288230376151711744), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : {4, 6, 8, 13, 15}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 18, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 18, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 18, 5]


Solution : [1, 2, 23, 18, 5] has cost 32.


Before backtrack at level 18
 pending : []
 solution : [1, 2, 23, 18, 5]

After backtrack at level 18
 pending : [4, 6, 13, 8, 15]
 solution : [1, 2, 23, 18, 5]


Invert decision for 5 at level 17


New level: 18
 pending : [4, 6, 13, 8, 15]
 solution : [1, 2, 23, 18]


Before reduction : 
 pending  : [4, 6, 13, 8, 15]
 solution : [1, 2, 23, 18]

Essensial at level 18 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : {8, 13, 15}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 18, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 18, 4, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 18, 4, 6]


Solution : [1, 2, 23, 18, 4, 6] has cost 41.


Before backtrack at level 18
 pending : []
 solution : [1, 2, 23, 18, 4, 6]

After backtrack at level 18
 pending : [4, 6, 13, 8, 15]
 solution : [1, 2, 23, 18]


Before backtrack at level 17
 pending : [4, 6, 13, 8, 15]
 solution : [1, 2, 23, 18]

After backtrack at level 17
 pending : [4, 6, 13, 8, 15, 5]
 solution : [1, 2, 23, 18]


Before backtrack at level 16
 pending : [4, 6, 13, 8, 15, 5]
 solution : [1, 2, 23, 18]

After backtrack at level 16
 pending : [4, 6, 13, 8, 15, 5, 20, 7]
 solution : [1, 2, 23, 18]


Invert decision for 18 at level 15


New level: 16
 pending : [4, 6, 13, 8, 15, 5, 20, 7]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [4, 6, 13, 8, 15, 5, 20, 7]
 solution : [1, 2, 23]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 1180591620717411303424), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [4, 6, 13, 8, 15, 5, 20, 7]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 16 among pending : [4, 6, 13, 8, 15, 5, 20, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 1180591620717411303424), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 7 with phase True at level 16

After decision at level 16
 pending : [4, 6, 13, 8, 15, 5, 20]
 solution : [1, 2, 23, 7]


New level: 17
 pending : [4, 6, 13, 8, 15, 5, 20]
 solution : [1, 2, 23, 7]


Before reduction : 
 pending  : [4, 6, 13, 8, 15, 5, 20]
 solution : [1, 2, 23, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, 9444732965739290427392), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 1180591620717411303424), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 73786976294838206464), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : {8, 15}

After reduction : 
 pending  : [4, 6, 13, 5, 20]
 solution : [1, 2, 23, 7]


Before reduction : 
 pending  : [4, 6, 13, 5, 20]
 solution : [1, 2, 23, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 73786976294838206464), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 73786976294838206464), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [4, 6, 13, 5, 20]
 solution : [1, 2, 23, 7]


Solution : [1, 2, 23, 7] has cost 27.


Before backtrack at level 17
 pending : [4, 6, 13, 5, 20]
 solution : [1, 2, 23, 7]

After backtrack at level 17
 pending : [4, 6, 13, 5, 20, 8, 15]
 solution : [1, 2, 23, 7]


Invert decision for 7 at level 16


New level: 17
 pending : [4, 6, 13, 5, 20, 8, 15]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [4, 6, 13, 5, 20, 8, 15]
 solution : [1, 2, 23]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 368934881474191032320), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 73786976294838206464), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 1180591620717411303424), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [4, 6, 13, 5, 20, 8, 15]
 solution : [1, 2, 23]


Solution : [1, 2, 23] has cost 14.


Decide in level 17 among pending : [4, 6, 13, 5, 20, 8, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 1180591620717411303424), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Decide 5 with phase True at level 17

After decision at level 17
 pending : [4, 6, 13, 20, 8, 15]
 solution : [1, 2, 23, 5]


New level: 18
 pending : [4, 6, 13, 20, 8, 15]
 solution : [1, 2, 23, 5]


Before reduction : 
 pending  : [4, 6, 13, 20, 8, 15]
 solution : [1, 2, 23, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 295147905179352825856), (5, 2361183241434822606848), (6, 295147905179352825856), (7, -1), (8, 1475739525896764129280), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1475739525896764129280), (14, -1), (15, 1180591620717411303424), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1180591620717411303424), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : {4, 6, 8, 13, 15, 20}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 5]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 5]


Solution : [1, 2, 23, 5] has cost 21.


Before backtrack at level 18
 pending : []
 solution : [1, 2, 23, 5]

After backtrack at level 18
 pending : [4, 6, 13, 20, 8, 15]
 solution : [1, 2, 23, 5]


Invert decision for 5 at level 17


New level: 18
 pending : [4, 6, 13, 20, 8, 15]
 solution : [1, 2, 23]


Before reduction : 
 pending  : [4, 6, 13, 20, 8, 15]
 solution : [1, 2, 23]

Essensial at level 18 : {4, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : {8, 20, 13, 15}

After reduction : 
 pending  : []
 solution : [1, 2, 23, 4, 6]


Before reduction : 
 pending  : []
 solution : [1, 2, 23, 4, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [1, 2, 23, 4, 6]


Solution : [1, 2, 23, 4, 6] has cost 30.


Before backtrack at level 18
 pending : []
 solution : [1, 2, 23, 4, 6]

After backtrack at level 18
 pending : [4, 6, 13, 20, 8, 15]
 solution : [1, 2, 23]


Before backtrack at level 17
 pending : [4, 6, 13, 20, 8, 15]
 solution : [1, 2, 23]

After backtrack at level 17
 pending : [4, 6, 13, 20, 8, 15, 5]
 solution : [1, 2, 23]


Before backtrack at level 16
 pending : [4, 6, 13, 20, 8, 15, 5]
 solution : [1, 2, 23]

After backtrack at level 16
 pending : [4, 6, 13, 20, 8, 15, 5, 7]
 solution : [1, 2, 23]


Before backtrack at level 15
 pending : [4, 6, 13, 20, 8, 15, 5, 7]
 solution : [1, 2, 23]

After backtrack at level 15
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18]
 solution : [1, 2, 23]


Before backtrack at level 14
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18]
 solution : [1, 2, 23]

After backtrack at level 14
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19]
 solution : [1, 2, 23]


Before backtrack at level 13
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19]
 solution : [1, 2, 23]

After backtrack at level 13
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14]
 solution : [1, 2, 23]


Before backtrack at level 12
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14]
 solution : [1, 2, 23]

After backtrack at level 12
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12]
 solution : [1, 2, 23]


Before backtrack at level 11
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12]
 solution : [1, 2, 23]

After backtrack at level 11
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9]
 solution : [1, 2, 23]


Before backtrack at level 10
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9]
 solution : [1, 2, 23]

After backtrack at level 10
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25]
 solution : [1, 2, 23]


Before backtrack at level 9
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25]
 solution : [1, 2, 23]

After backtrack at level 9
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24]
 solution : [1, 2, 23]


Before backtrack at level 8
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24]
 solution : [1, 2, 23]

After backtrack at level 8
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11]
 solution : [1, 2, 23]


Before backtrack at level 7
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11]
 solution : [1, 2, 23]

After backtrack at level 7
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11, 17]
 solution : [1, 2, 23]


Before backtrack at level 6
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11, 17]
 solution : [1, 2, 23]

After backtrack at level 6
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11, 17, 10]
 solution : [1, 2, 23]


Before backtrack at level 5
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11, 17, 10]
 solution : [1, 2, 23]

After backtrack at level 5
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11, 17, 10, 16]
 solution : [1, 2, 23]


Before backtrack at level 4
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11, 17, 10, 16]
 solution : [1, 2, 23]

After backtrack at level 4
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11, 17, 10, 16, 26]
 solution : [1, 2, 23]


Before backtrack at level 3
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11, 17, 10, 16, 26]
 solution : [1, 2, 23]

After backtrack at level 3
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11, 17, 10, 16, 26, 21]
 solution : [1, 2, 23]


Before backtrack at level 2
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11, 17, 10, 16, 26, 21]
 solution : [1, 2, 23]

After backtrack at level 2
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11, 17, 10, 16, 26, 21, 22]
 solution : [1, 2, 23]


Before backtrack at level 1
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11, 17, 10, 16, 26, 21, 22]
 solution : [1, 2, 23]

After backtrack at level 1
 pending : [4, 6, 13, 20, 8, 15, 5, 7, 18, 19, 14, 12, 9, 25, 24, 11, 17, 10, 16, 26, 21, 22, 3]
 solution : [1, 2, 23]


=======================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/toy_consensus_forall.ivy: node=5,value=3]

=======================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 21

[MIN NOTE]: maximum branch and bound depth: 18

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [1, 2, 23, 5]

[MIN NOTE]: solution length: 4

invariant [invar_1] forall VALUE1,NODE0,VALUE0. ~vote(NODE0,VALUE1) | ~vote(NODE0,VALUE0) | VALUE0 = VALUE1 # qcost: 6

invariant [invar_2] forall NODE0,VALUE0. voted(NODE0) | ~vote(NODE0,VALUE0) # qcost: 4

invariant [invar_23] forall NODE0. (exists VALUE0. vote(NODE0,VALUE0) | ~voted(NODE0)) # qcost: 4

invariant [invar_5] forall QUORUM0,NODE0,VALUE0. ~member(NODE0,QUORUM0) | vote(NODE0,VALUE0) | ~decided(VALUE0) | voting_quorum ~= QUORUM0 # qcost: 7

[MIN NOTE]: number of total invariants: 4

[MIN NOTE]: total qCost: 21




[QRM NOTE]: Time elapsed since start: 55.069 seconds

[QRM NOTE]: Time elapsed since last: 0.777 seconds

[QRM NOTE]: Peak memory: 11502798 bytes


=============================================

	[IVY_CHECK] Ivy Check for Rmin

=============================================


============================================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy]

============================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 8: axiom1

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 44: invar_1
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 45: invar_2
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 46: invar_23
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 47: invar_5

    The following action implementations are present:
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 21: implementation of cast_vote
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 28: implementation of decide

    The following initializers are present:
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 15: init[after2]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 44: invar_1 ... PASS
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 45: invar_2 ... PASS
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 46: invar_23 ... PASS
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 47: invar_5 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:cast_vote
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 44: invar_1 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 45: invar_2 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 46: invar_23 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 47: invar_5 ... PASS
        (internal) ext:decide
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 44: invar_1 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 45: invar_2 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 46: invar_23 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 47: invar_5 ... PASS

    The following program assertions are treated as assumptions:
        in action cast_vote when called from the environment:
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 22: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy: line 29: assumption

OK
[IVY_CHECK RESULT]: PASS


=============================================================================================================================

	[MUS]: Extract strengthening assertion for [ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.ivy]

=============================================================================================================================

[MUS NOTE]: number of strengthening assertions: 3

[MUS NOTE]: min mus: {0, 1, 3}

invariant [invar_1] forall VALUE1,NODE0,VALUE0. ~vote(NODE0,VALUE1) | ~vote(NODE0,VALUE0) | VALUE0 = VALUE1 # qcost: 6

invariant [invar_2] forall NODE0,VALUE0. voted(NODE0) | ~vote(NODE0,VALUE0) # qcost: 4

invariant [invar_5] forall QUORUM0,NODE0,VALUE0. ~member(NODE0,QUORUM0) | vote(NODE0,VALUE0) | ~decided(VALUE0) | voting_quorum ~= QUORUM0 # qcost: 7


===================================================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy]

===================================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 8: axiom1

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 38: safety
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 44: invar_1
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 45: invar_2
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 46: invar_5

    The following action implementations are present:
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 21: implementation of cast_vote
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 28: implementation of decide

    The following initializers are present:
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 15: init[after2]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 38: safety ... PASS
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 44: invar_1 ... PASS
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 45: invar_2 ... PASS
        ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 46: invar_5 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:cast_vote
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 38: safety ... PASS
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 44: invar_1 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 45: invar_2 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 46: invar_5 ... PASS
        (internal) ext:decide
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 38: safety ... PASS
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 44: invar_1 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 45: invar_2 ... PASS
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 46: invar_5 ... PASS

    The following program assertions are treated as assumptions:
        in action cast_vote when called from the environment:
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 22: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/toy_consensus_forall.node_5_value_3.0.assert.ivy: line 29: assumption

OK
[IVY_CHECK RESULT]: PASS

[ASSERT_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 58.659 seconds

[QRM NOTE]: Time elapsed since last: 3.589 seconds

[QRM NOTE]: Peak memory: 11522809 bytes


***************************************************************************

	[QRM]: ivybench/sym_quorum/ivy/toy_consensus_forall.ivy

***************************************************************************

[QRM RESULT]: PASS

