
=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : -1-------1---
0     : ['grant_msg(node1)', 'server_holds_lock()']
1     : --1------1---
1     : ['grant_msg(node2)', 'server_holds_lock()']
2     : 1--------1---
2     : ['grant_msg(node0)', 'server_holds_lock()']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~server_holds_lock | ~grant_msg(NODE0)
qcost : 3


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : ---------1-1-
3     : ['server_holds_lock()', 'unlock_msg(node1)']
4     : ---------1--1
4     : ['server_holds_lock()', 'unlock_msg(node2)']
5     : ---------11--
5     : ['server_holds_lock()', 'unlock_msg(node0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~unlock_msg(NODE0) | ~server_holds_lock
qcost : 3


=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
6 (*) : ---1-----1---
6     : ['holds_lock(node0)', 'server_holds_lock()']
7     : ----1----1---
7     : ['holds_lock(node1)', 'server_holds_lock()']
8     : -----1---1---
8     : ['holds_lock(node2)', 'server_holds_lock()']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~holds_lock(NODE0) | ~server_holds_lock
qcost : 3


=== Prime Orbit 3 =====================
size : 9
num_suborbits: 2
9 (*) : -1---------1-
9     : ['grant_msg(node1)', 'unlock_msg(node1)']
10     : --1---------1
10     : ['grant_msg(node2)', 'unlock_msg(node2)']
11     : 1---------1--
11     : ['grant_msg(node0)', 'unlock_msg(node0)']
15 (*) : 1----------1-
15     : ['grant_msg(node0)', 'unlock_msg(node1)']
16     : 1-----------1
16     : ['grant_msg(node0)', 'unlock_msg(node2)']
17     : -1--------1--
17     : ['grant_msg(node1)', 'unlock_msg(node0)']
18     : -1----------1
18     : ['grant_msg(node1)', 'unlock_msg(node2)']
19     : --1-------1--
19     : ['grant_msg(node2)', 'unlock_msg(node0)']
20     : --1--------1-
20     : ['grant_msg(node2)', 'unlock_msg(node1)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall NODE1,NODE0. ~grant_msg(NODE0) | ~unlock_msg(NODE1)
qcost : 4


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
12 (*) : 11-----------
12     : ['grant_msg(node0)', 'grant_msg(node1)']
13     : 1-1----------
13     : ['grant_msg(node0)', 'grant_msg(node2)']
14     : -11----------
14     : ['grant_msg(node1)', 'grant_msg(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. ~grant_msg(NODE1) | ~grant_msg(NODE0) | NODE0 = NODE1
qcost : 6


=== Prime Orbit 5 =====================
size : 9
num_suborbits: 2
21 (*) : --11---------
21     : ['grant_msg(node2)', 'holds_lock(node0)']
22     : -1-1---------
22     : ['grant_msg(node1)', 'holds_lock(node0)']
23     : --1-1--------
23     : ['grant_msg(node2)', 'holds_lock(node1)']
24     : 1---1--------
24     : ['grant_msg(node0)', 'holds_lock(node1)']
25     : -1---1-------
25     : ['grant_msg(node1)', 'holds_lock(node2)']
26     : 1----1-------
26     : ['grant_msg(node0)', 'holds_lock(node2)']
33 (*) : 1--1---------
33     : ['grant_msg(node0)', 'holds_lock(node0)']
34     : -1--1--------
34     : ['grant_msg(node1)', 'holds_lock(node1)']
35     : --1--1-------
35     : ['grant_msg(node2)', 'holds_lock(node2)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall NODE1,NODE0. ~grant_msg(NODE0) | ~holds_lock(NODE1)
qcost : 4


=== Prime Orbit 6 =====================
size : 9
num_suborbits: 2
27 (*) : ---1-------1-
27     : ['holds_lock(node0)', 'unlock_msg(node1)']
28     : ---1--------1
28     : ['holds_lock(node0)', 'unlock_msg(node2)']
29     : ----1-----1--
29     : ['holds_lock(node1)', 'unlock_msg(node0)']
30     : ----1-------1
30     : ['holds_lock(node1)', 'unlock_msg(node2)']
31     : -----1----1--
31     : ['holds_lock(node2)', 'unlock_msg(node0)']
32     : -----1-----1-
32     : ['holds_lock(node2)', 'unlock_msg(node1)']
39 (*) : ----1------1-
39     : ['holds_lock(node1)', 'unlock_msg(node1)']
40     : -----1------1
40     : ['holds_lock(node2)', 'unlock_msg(node2)']
41     : ---1------1--
41     : ['holds_lock(node0)', 'unlock_msg(node0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall NODE1,NODE0. ~holds_lock(NODE0) | ~unlock_msg(NODE1)
qcost : 4


=== Prime Orbit 7 =====================
size : 3
num_suborbits: 1
36 (*) : ---11--------
36     : ['holds_lock(node0)', 'holds_lock(node1)']
37     : ---1-1-------
37     : ['holds_lock(node0)', 'holds_lock(node2)']
38     : ----11-------
38     : ['holds_lock(node1)', 'holds_lock(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. ~holds_lock(NODE0) | ~holds_lock(NODE1) | NODE0 = NODE1
qcost : 6


=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
42 (*) : ----------11-
42     : ['unlock_msg(node0)', 'unlock_msg(node1)']
43     : ----------1-1
43     : ['unlock_msg(node0)', 'unlock_msg(node2)']
44     : -----------11
44     : ['unlock_msg(node1)', 'unlock_msg(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. ~unlock_msg(NODE0) | ~unlock_msg(NODE1) | NODE0 = NODE1
qcost : 6


=== Prime Orbit 9 =====================
size : 1
num_suborbits: 1
45 (*) : 000000---0000
45     : ['~grant_msg(node0)', '~grant_msg(node1)', '~grant_msg(node2)', '~holds_lock(node0)', '~holds_lock(node1)', '~holds_lock(node2)', '~server_holds_lock()', '~unlock_msg(node0)', '~unlock_msg(node1)', '~unlock_msg(node2)']
num_forall :   0
num_exists :   1
num_literals : 4
quantified form : exists NODE0. holds_lock(NODE0) | unlock_msg(NODE0) | grant_msg(NODE0) | server_holds_lock
qcost : 5

