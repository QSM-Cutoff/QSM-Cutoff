
=== Prime Orbit 0 =====================
size : 36
num_suborbits: 8
0 (*) : ---1-------1---
0     : ['message(node0,node0)', 'message(node2,node2)']
1     : ---1---1-------
1     : ['message(node0,node0)', 'message(node1,node1)']
2     : -------1---1---
2     : ['message(node1,node1)', 'message(node2,node2)']
12 (*) : ----1------1---
12     : ['message(node0,node1)', 'message(node2,node2)']
13     : -----1-1-------
13     : ['message(node0,node2)', 'message(node1,node1)']
14     : ------1----1---
14     : ['message(node1,node0)', 'message(node2,node2)']
15     : ---1----1------
15     : ['message(node0,node0)', 'message(node1,node2)']
16     : -------1-1-----
16     : ['message(node1,node1)', 'message(node2,node0)']
17     : ---1------1----
17     : ['message(node0,node0)', 'message(node2,node1)']
18 (*) : -----1-----1---
18     : ['message(node0,node2)', 'message(node2,node2)']
19     : ----1--1-------
19     : ['message(node0,node1)', 'message(node1,node1)']
20     : --------1--1---
20     : ['message(node1,node2)', 'message(node2,node2)']
21     : ---1--1--------
21     : ['message(node0,node0)', 'message(node1,node0)']
22     : -------1--1----
22     : ['message(node1,node1)', 'message(node2,node1)']
23     : ---1-----1-----
23     : ['message(node0,node0)', 'message(node2,node0)']
24 (*) : ---------1-1---
24     : ['message(node2,node0)', 'message(node2,node2)']
25     : ------11-------
25     : ['message(node1,node0)', 'message(node1,node1)']
26     : ----------11---
26     : ['message(node2,node1)', 'message(node2,node2)']
27     : ---11----------
27     : ['message(node0,node0)', 'message(node0,node1)']
28     : -------11------
28     : ['message(node1,node1)', 'message(node1,node2)']
29     : ---1-1---------
29     : ['message(node0,node0)', 'message(node0,node2)']
54 (*) : ----11---------
54     : ['message(node0,node1)', 'message(node0,node2)']
55     : ------1-1------
55     : ['message(node1,node0)', 'message(node1,node2)']
56     : ---------11----
56     : ['message(node2,node0)', 'message(node2,node1)']
57 (*) : -----11--------
57     : ['message(node0,node2)', 'message(node1,node0)']
58     : ----1----1-----
58     : ['message(node0,node1)', 'message(node2,node0)']
59     : ----1---1------
59     : ['message(node0,node1)', 'message(node1,node2)']
60     : ------1---1----
60     : ['message(node1,node0)', 'message(node2,node1)']
61     : -----1----1----
61     : ['message(node0,node2)', 'message(node2,node1)']
62     : --------11-----
62     : ['message(node1,node2)', 'message(node2,node0)']
63 (*) : ----1-1--------
63     : ['message(node0,node1)', 'message(node1,node0)']
64     : -----1---1-----
64     : ['message(node0,node2)', 'message(node2,node0)']
65     : --------1-1----
65     : ['message(node1,node2)', 'message(node2,node1)']
66 (*) : -----1--1------
66     : ['message(node0,node2)', 'message(node1,node2)']
67     : ----1-----1----
67     : ['message(node0,node1)', 'message(node2,node1)']
68     : ------1--1-----
68     : ['message(node1,node0)', 'message(node2,node0)']
num_forall :   4
num_exists :   0
num_literals : 6
quantified form : forall NODE2,NODE0,NODE3,NODE1. ~message(NODE1,NODE3) | ~message(NODE0,NODE2) | (NODE2 = NODE3 & NODE0 = NODE1)
qcost : 10


=== Prime Orbit 1 =====================
size : 27
num_suborbits: 5
3 (*) : 1----------1---
3     : ['has_lock(node0)', 'message(node2,node2)']
4     : 1------1-------
4     : ['has_lock(node0)', 'message(node1,node1)']
5     : -1---------1---
5     : ['has_lock(node1)', 'message(node2,node2)']
6     : -1-1-----------
6     : ['has_lock(node1)', 'message(node0,node0)']
7     : --1----1-------
7     : ['has_lock(node2)', 'message(node1,node1)']
8     : --11-----------
8     : ['has_lock(node2)', 'message(node0,node0)']
9 (*) : --1--------1---
9     : ['has_lock(node2)', 'message(node2,node2)']
10     : -1-----1-------
10     : ['has_lock(node1)', 'message(node1,node1)']
11     : 1--1-----------
11     : ['has_lock(node0)', 'message(node0,node0)']
36 (*) : --1-1----------
36     : ['has_lock(node2)', 'message(node0,node1)']
37     : -1---1---------
37     : ['has_lock(node1)', 'message(node0,node2)']
38     : --1---1--------
38     : ['has_lock(node2)', 'message(node1,node0)']
39     : 1-------1------
39     : ['has_lock(node0)', 'message(node1,node2)']
40     : -1-------1-----
40     : ['has_lock(node1)', 'message(node2,node0)']
41     : 1---------1----
41     : ['has_lock(node0)', 'message(node2,node1)']
42 (*) : 1---1----------
42     : ['has_lock(node0)', 'message(node0,node1)']
43     : 1----1---------
43     : ['has_lock(node0)', 'message(node0,node2)']
44     : -1----1--------
44     : ['has_lock(node1)', 'message(node1,node0)']
45     : -1------1------
45     : ['has_lock(node1)', 'message(node1,node2)']
46     : --1------1-----
46     : ['has_lock(node2)', 'message(node2,node0)']
47     : --1-------1----
47     : ['has_lock(node2)', 'message(node2,node1)']
48 (*) : -1--1----------
48     : ['has_lock(node1)', 'message(node0,node1)']
49     : --1--1---------
49     : ['has_lock(node2)', 'message(node0,node2)']
50     : 1-----1--------
50     : ['has_lock(node0)', 'message(node1,node0)']
51     : --1-----1------
51     : ['has_lock(node2)', 'message(node1,node2)']
52     : 1--------1-----
52     : ['has_lock(node0)', 'message(node2,node0)']
53     : -1--------1----
53     : ['has_lock(node1)', 'message(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 2
quantified form : forall NODE2,NODE0,NODE1. ~message(NODE1,NODE2) | ~has_lock(NODE0)
qcost : 5


=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
33 (*) : 11-------------
33     : ['has_lock(node0)', 'has_lock(node1)']
34     : 1-1------------
34     : ['has_lock(node0)', 'has_lock(node2)']
35     : -11------------
35     : ['has_lock(node1)', 'has_lock(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~has_lock(NODE0) | ~has_lock(NODE1) | NODE0 = NODE1
qcost : 6


=== Prime Orbit 5 =====================
size : 1
num_suborbits: 1
70 (*) : 000000000000---
70     : ['~has_lock(node0)', '~has_lock(node1)', '~has_lock(node2)', '~message(node0,node0)', '~message(node0,node1)', '~message(node0,node2)', '~message(node1,node0)', '~message(node1,node1)', '~message(node1,node2)', '~message(node2,node0)', '~message(node2,node1)', '~message(node2,node2)']
num_forall :   0
num_exists :   2
num_literals : 2
quantified form : exists NODE0,NODE1. message(NODE0,NODE1) | has_lock(NODE0)
qcost : 4

