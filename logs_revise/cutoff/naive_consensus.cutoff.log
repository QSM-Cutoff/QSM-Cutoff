
**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/naive_consensus.ivy

**********************************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


==========================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/naive_consensus.ivy: node=3,value=3]

==========================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 21

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 36

[FW NOTE]: number of branching actions: 27

ivy_to_cpp target=qrm naive_consensus.node_3_value_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o naive_consensus.node_3_value_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 naive_consensus.node_3_value_3.finite.cpp naive_consensus.node_3_value_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared naive_consensus.node_3_value_3.finite.o naive_consensus.node_3_value_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 8.083 seconds

[QRM NOTE]: Time elapsed since last: 8.083 seconds

[QRM NOTE]: Peak memory: 1191536 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 7

[FW NOTE]: number of total reachable states:        160

[FW NOTE]: number of dfs representative states:     17

[FW NOTE]: number of dfs non-representative states: 143


=================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/naive_consensus.ivy: node=3,value=3]

=================================================================================================================

sort: node=['node0', 'node1', 'node2']
sort: value=['value0', 'value1', 'value2']
sort: quorum=['quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2']
predicate: decision('value',)
predicate: vote('node', 'value')
predicate: decide('quorum', 'value')
predicate: member('node', 'quorum')
interpreted atoms: {'member(node0,quorum__node0_node1)': '1', 'member(node0,quorum__node0_node2)': '1', 'member(node0,quorum__node1_node2)': '0', 'member(node1,quorum__node0_node1)': '1', 'member(node1,quorum__node0_node2)': '0', 'member(node1,quorum__node1_node2)': '1', 'member(node2,quorum__node0_node1)': '0', 'member(node2,quorum__node0_node2)': '1', 'member(node2,quorum__node1_node2)': '1'}
state atoms: ['decide(quorum__node0_node1,value0)', 'decide(quorum__node0_node1,value1)', 'decide(quorum__node0_node1,value2)', 'decide(quorum__node0_node2,value0)', 'decide(quorum__node0_node2,value1)', 'decide(quorum__node0_node2,value2)', 'decide(quorum__node1_node2,value0)', 'decide(quorum__node1_node2,value1)', 'decide(quorum__node1_node2,value2)', 'decision(value0)', 'decision(value1)', 'decision(value2)', 'vote(node0,value0)', 'vote(node0,value1)', 'vote(node0,value2)', 'vote(node1,value0)', 'vote(node1,value1)', 'vote(node1,value2)', 'vote(node2,value0)', 'vote(node2,value1)', 'vote(node2,value2)']
representative states : 427, 939, 5035, 37803, 2134955, 18912171, 153129899, 153392043, 19174315, 2397099, 38315, 2167723, 2429867, 2102187, 2364331, 5547, 43435


=== State Orbit 0 =====================
size : 1
repr state: 000000000000000000000
lex min decimal: 427
states:
000000000000000000000




=== State Orbit 1 =====================
size : 9
repr state: 000000000000100000000
lex min decimal: 939
states:
000000000000100000000
000000000000000000010
000000000000001000000
000000000000010000000
000000000000000000001
000000000000000100000
000000000000000000100
000000000000000001000
000000000000000010000




=== State Orbit 2 =====================
size : 9
repr state: 000000000000100100000
lex min decimal: 5035
states:
000000000000001000001
000000000000010010000
000000000000001001000
000000000000000001001
000000000000010000010
000000000000100100000
000000000000000010010
000000000000100000100
000000000000000100100




=== State Orbit 3 =====================
size : 3
repr state: 000000000000100100100
lex min decimal: 37803
states:
000000000000100100100
000000000000010010010
000000000000001001001




=== State Orbit 4 =====================
size : 9
repr state: 100000000000100100100
lex min decimal: 2134955
states:
010000000000010010010
001000000000001001001
100000000000100100100
000001000000001001001
000100000000100100100
000000010000010010010
000010000000010010010
000000001000001001001
000000100000100100100




=== State Orbit 5 =====================
size : 9
repr state: 100100000000100100100
lex min decimal: 18912171
states:
000001001000001001001
010010000000010010010
100100000000100100100
001001000000001001001
000100100000100100100
001000001000001001001
100000100000100100100
000010010000010010010
010000010000010010010




=== State Orbit 6 =====================
size : 3
repr state: 100100100000100100100
lex min decimal: 153129899
states:
001001001000001001001
010010010000010010010
100100100000100100100




=== State Orbit 7 =====================
size : 3
repr state: 100100100100100100100
lex min decimal: 153392043
states:
001001001001001001001
010010010010010010010
100100100100100100100




=== State Orbit 8 =====================
size : 9
repr state: 100100000100100100100
lex min decimal: 19174315
states:
100000100100100100100
000100100100100100100
000010010010010010010
100100000100100100100
000001001001001001001
010000010010010010010
001000001001001001001
001001000001001001001
010010000010010010010




=== State Orbit 9 =====================
size : 9
repr state: 100000000100100100100
lex min decimal: 2397099
states:
000000010010010010010
000010000010010010010
001000000001001001001
010000000010010010010
000000100100100100100
100000000100100100100
000100000100100100100
000000001001001001001
000001000001001001001




=== State Orbit 10 =====================
size : 18
repr state: 000000000000100100010
lex min decimal: 38315
states:
000000000000010010001
000000000000001100001
000000000000001100100
000000000000100100010
000000000000100001001
000000000000100010100
000000000000010100010
000000000000010001001
000000000000100100001
000000000000001010001
000000000000100001100
000000000000001001100
000000000000001001010
000000000000001010010
000000000000010010100
000000000000010001010
000000000000100010010
000000000000010100100




=== State Orbit 11 =====================
size : 18
repr state: 100000000000100100010
lex min decimal: 2167723
states:
010000000000010010100
010000000000010010001
100000000000100100001
000010000000010001010
000000001000100001001
000100000000100001100
000000100000010100100
000000001000010001001
000001000000001010001
001000000000001001010
100000000000100100010
000010000000010100010
001000000000001001100
000001000000001100001
000000010000100010010
000000010000001010010
000000100000001100100
000100000000100010100




=== State Orbit 12 =====================
size : 18
repr state: 100000000100100100010
lex min decimal: 2429867
states:
000000001001010001001
000001000001001100001
000000001001100001001
010000000010010010100
000000010010001010010
000001000001001010001
100000000100100100001
000000100100001100100
000000010010100010010
010000000010010010001
100000000100100100010
000010000010010001010
000010000010010100010
000000100100010100100
001000000001001001010
000100000100100001100
001000000001001001100
000100000100100010100




=== State Orbit 13 =====================
size : 9
repr state: 100000000000100100000
lex min decimal: 2102187
states:
001000000000001001000
010000000000010010000
100000000000100100000
000100000000100000100
000010000000010000010
000000100000000100100
000001000000001000001
000000010000000010010
000000001000000001001




=== State Orbit 14 =====================
size : 9
repr state: 100000000100100100000
lex min decimal: 2364331
states:
000100000100100000100
000001000001001000001
000000010010000010010
000000100100000100100
001000000001001001000
000010000010010000010
100000000100100100000
010000000010010010000
000000001001000001001




=== State Orbit 15 =====================
size : 18
repr state: 000000000000100010000
lex min decimal: 5547
states:
000000000000000100010
000000000000010000100
000000000000001010000
000000000000010000001
000000000000001000010
000000000000000100001
000000000000001100000
000000000000000010100
000000000000000001010
000000000000000010001
000000000000100001000
000000000000100000001
000000000000001000100
000000000000100000010
000000000000000001100
000000000000100010000
000000000000010001000
000000000000010100000




=== State Orbit 16 =====================
size : 6
repr state: 000000000000100010001
lex min decimal: 43435
states:
000000000000001010100
000000000000010100001
000000000000100010001
000000000000001100010
000000000000010001100
000000000000100001010



[QRM NOTE]: Time elapsed since start: 8.360 seconds

[QRM NOTE]: Time elapsed since last: 0.276 seconds

[QRM NOTE]: Peak memory: 1271290 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 8.365 seconds

[QRM NOTE]: Time elapsed since last: 0.005 seconds

[QRM NOTE]: Peak memory: 260739 bytes


=================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/naive_consensus.ivy: node=3,value=3]

=================================================================================================================


============================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/naive_consensus.ivy: node=3,value=3]

============================================================================================================


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ------------------11-
0     : ['vote(node2,value0)', 'vote(node2,value1)']
1     : ------------------1-1
1     : ['vote(node2,value0)', 'vote(node2,value2)']
2     : -------------------11
2     : ['vote(node2,value1)', 'vote(node2,value2)']
3     : ---------------11----
3     : ['vote(node1,value0)', 'vote(node1,value1)']
4     : ---------------1-1---
4     : ['vote(node1,value0)', 'vote(node1,value2)']
5     : ----------------11---
5     : ['vote(node1,value1)', 'vote(node1,value2)']
6     : ------------11-------
6     : ['vote(node0,value0)', 'vote(node0,value1)']
7     : ------------1-1------
7     : ['vote(node0,value0)', 'vote(node0,value2)']
8     : -------------11------
8     : ['vote(node0,value1)', 'vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 36
num_suborbits: 1
9 (*) : -----1------------1--
9     : ['decide(quorum__node0_node2,value2)', 'vote(node2,value0)']
10     : ----1-------------1--
10     : ['decide(quorum__node0_node2,value1)', 'vote(node2,value0)']
11     : -----1-------------1-
11     : ['decide(quorum__node0_node2,value2)', 'vote(node2,value1)']
12     : ---1---------------1-
12     : ['decide(quorum__node0_node2,value0)', 'vote(node2,value1)']
13     : ----1---------------1
13     : ['decide(quorum__node0_node2,value1)', 'vote(node2,value2)']
14     : ---1----------------1
14     : ['decide(quorum__node0_node2,value0)', 'vote(node2,value2)']
15     : --1------------1-----
15     : ['decide(quorum__node0_node1,value2)', 'vote(node1,value0)']
16     : -1-------------1-----
16     : ['decide(quorum__node0_node1,value1)', 'vote(node1,value0)']
17     : --1-------------1----
17     : ['decide(quorum__node0_node1,value2)', 'vote(node1,value1)']
18     : 1---------------1----
18     : ['decide(quorum__node0_node1,value0)', 'vote(node1,value1)']
19     : -1---------------1---
19     : ['decide(quorum__node0_node1,value1)', 'vote(node1,value2)']
20     : 1----------------1---
20     : ['decide(quorum__node0_node1,value0)', 'vote(node1,value2)']
21     : --------1---------1--
21     : ['decide(quorum__node1_node2,value2)', 'vote(node2,value0)']
22     : -------1----------1--
22     : ['decide(quorum__node1_node2,value1)', 'vote(node2,value0)']
23     : --------1----------1-
23     : ['decide(quorum__node1_node2,value2)', 'vote(node2,value1)']
24     : ------1------------1-
24     : ['decide(quorum__node1_node2,value0)', 'vote(node2,value1)']
25     : -------1------------1
25     : ['decide(quorum__node1_node2,value1)', 'vote(node2,value2)']
26     : ------1-------------1
26     : ['decide(quorum__node1_node2,value0)', 'vote(node2,value2)']
27     : --1---------1--------
27     : ['decide(quorum__node0_node1,value2)', 'vote(node0,value0)']
28     : -1----------1--------
28     : ['decide(quorum__node0_node1,value1)', 'vote(node0,value0)']
29     : --1----------1-------
29     : ['decide(quorum__node0_node1,value2)', 'vote(node0,value1)']
30     : 1------------1-------
30     : ['decide(quorum__node0_node1,value0)', 'vote(node0,value1)']
31     : -1------------1------
31     : ['decide(quorum__node0_node1,value1)', 'vote(node0,value2)']
32     : 1-------------1------
32     : ['decide(quorum__node0_node1,value0)', 'vote(node0,value2)']
33     : --------1------1-----
33     : ['decide(quorum__node1_node2,value2)', 'vote(node1,value0)']
34     : -------1-------1-----
34     : ['decide(quorum__node1_node2,value1)', 'vote(node1,value0)']
35     : --------1-------1----
35     : ['decide(quorum__node1_node2,value2)', 'vote(node1,value1)']
36     : ------1---------1----
36     : ['decide(quorum__node1_node2,value0)', 'vote(node1,value1)']
37     : -------1---------1---
37     : ['decide(quorum__node1_node2,value1)', 'vote(node1,value2)']
38     : ------1----------1---
38     : ['decide(quorum__node1_node2,value0)', 'vote(node1,value2)']
39     : -----1------1--------
39     : ['decide(quorum__node0_node2,value2)', 'vote(node0,value0)']
40     : ----1-------1--------
40     : ['decide(quorum__node0_node2,value1)', 'vote(node0,value0)']
41     : -----1-------1-------
41     : ['decide(quorum__node0_node2,value2)', 'vote(node0,value1)']
42     : ---1---------1-------
42     : ['decide(quorum__node0_node2,value0)', 'vote(node0,value1)']
43     : ----1---------1------
43     : ['decide(quorum__node0_node2,value1)', 'vote(node0,value2)']
44     : ---1----------1------
44     : ['decide(quorum__node0_node2,value0)', 'vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
45 (*) : ---------1-1---------
45     : ['decision(value0)', 'decision(value2)']
46     : ---------11----------
46     : ['decision(value0)', 'decision(value1)']
47     : ----------11---------
47     : ['decision(value1)', 'decision(value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 18
num_suborbits: 1
48 (*) : -----1---1-----------
48     : ['decide(quorum__node0_node2,value2)', 'decision(value0)']
49     : ----1----1-----------
49     : ['decide(quorum__node0_node2,value1)', 'decision(value0)']
50     : -----1----1----------
50     : ['decide(quorum__node0_node2,value2)', 'decision(value1)']
51     : ---1------1----------
51     : ['decide(quorum__node0_node2,value0)', 'decision(value1)']
52     : ----1------1---------
52     : ['decide(quorum__node0_node2,value1)', 'decision(value2)']
53     : ---1-------1---------
53     : ['decide(quorum__node0_node2,value0)', 'decision(value2)']
54     : --1------1-----------
54     : ['decide(quorum__node0_node1,value2)', 'decision(value0)']
55     : -1-------1-----------
55     : ['decide(quorum__node0_node1,value1)', 'decision(value0)']
56     : --1-------1----------
56     : ['decide(quorum__node0_node1,value2)', 'decision(value1)']
57     : 1---------1----------
57     : ['decide(quorum__node0_node1,value0)', 'decision(value1)']
58     : -1---------1---------
58     : ['decide(quorum__node0_node1,value1)', 'decision(value2)']
59     : 1----------1---------
59     : ['decide(quorum__node0_node1,value0)', 'decision(value2)']
60     : --------11-----------
60     : ['decide(quorum__node1_node2,value2)', 'decision(value0)']
61     : -------1-1-----------
61     : ['decide(quorum__node1_node2,value1)', 'decision(value0)']
62     : --------1-1----------
62     : ['decide(quorum__node1_node2,value2)', 'decision(value1)']
63     : ------1---1----------
63     : ['decide(quorum__node1_node2,value0)', 'decision(value1)']
64     : -------1---1---------
64     : ['decide(quorum__node1_node2,value1)', 'decision(value2)']
65     : ------1----1---------
65     : ['decide(quorum__node1_node2,value0)', 'decision(value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 18
num_suborbits: 1
66 (*) : ------1-----------0--
66     : ['decide(quorum__node1_node2,value0)', '~vote(node2,value0)']
67     : -------1-----------0-
67     : ['decide(quorum__node1_node2,value1)', '~vote(node2,value1)']
68     : --------1-----------0
68     : ['decide(quorum__node1_node2,value2)', '~vote(node2,value2)']
69     : ------1--------0-----
69     : ['decide(quorum__node1_node2,value0)', '~vote(node1,value0)']
70     : -------1--------0----
70     : ['decide(quorum__node1_node2,value1)', '~vote(node1,value1)']
71     : --------1--------0---
71     : ['decide(quorum__node1_node2,value2)', '~vote(node1,value2)']
72     : ---1--------------0--
72     : ['decide(quorum__node0_node2,value0)', '~vote(node2,value0)']
73     : ----1--------------0-
73     : ['decide(quorum__node0_node2,value1)', '~vote(node2,value1)']
74     : -----1--------------0
74     : ['decide(quorum__node0_node2,value2)', '~vote(node2,value2)']
75     : ---1--------0--------
75     : ['decide(quorum__node0_node2,value0)', '~vote(node0,value0)']
76     : ----1--------0-------
76     : ['decide(quorum__node0_node2,value1)', '~vote(node0,value1)']
77     : -----1--------0------
77     : ['decide(quorum__node0_node2,value2)', '~vote(node0,value2)']
78     : 1--------------0-----
78     : ['decide(quorum__node0_node1,value0)', '~vote(node1,value0)']
79     : -1--------------0----
79     : ['decide(quorum__node0_node1,value1)', '~vote(node1,value1)']
80     : --1--------------0---
80     : ['decide(quorum__node0_node1,value2)', '~vote(node1,value2)']
81     : 1-----------0--------
81     : ['decide(quorum__node0_node1,value0)', '~vote(node0,value0)']
82     : -1-----------0-------
82     : ['decide(quorum__node0_node1,value1)', '~vote(node0,value1)']
83     : --1-----------0------
83     : ['decide(quorum__node0_node1,value2)', '~vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 27
num_suborbits: 2
84 (*) : -----11--------------
84     : ['decide(quorum__node0_node2,value2)', 'decide(quorum__node1_node2,value0)']
85     : ----1-1--------------
85     : ['decide(quorum__node0_node2,value1)', 'decide(quorum__node1_node2,value0)']
86     : -----1-1-------------
86     : ['decide(quorum__node0_node2,value2)', 'decide(quorum__node1_node2,value1)']
87     : ---1---1-------------
87     : ['decide(quorum__node0_node2,value0)', 'decide(quorum__node1_node2,value1)']
88     : ----1---1------------
88     : ['decide(quorum__node0_node2,value1)', 'decide(quorum__node1_node2,value2)']
89     : ---1----1------------
89     : ['decide(quorum__node0_node2,value0)', 'decide(quorum__node1_node2,value2)']
90     : --1---1--------------
90     : ['decide(quorum__node0_node1,value2)', 'decide(quorum__node1_node2,value0)']
91     : -1----1--------------
91     : ['decide(quorum__node0_node1,value1)', 'decide(quorum__node1_node2,value0)']
92     : --1----1-------------
92     : ['decide(quorum__node0_node1,value2)', 'decide(quorum__node1_node2,value1)']
93     : 1------1-------------
93     : ['decide(quorum__node0_node1,value0)', 'decide(quorum__node1_node2,value1)']
94     : -1------1------------
94     : ['decide(quorum__node0_node1,value1)', 'decide(quorum__node1_node2,value2)']
95     : 1-------1------------
95     : ['decide(quorum__node0_node1,value0)', 'decide(quorum__node1_node2,value2)']
96     : --11-----------------
96     : ['decide(quorum__node0_node1,value2)', 'decide(quorum__node0_node2,value0)']
97     : -1-1-----------------
97     : ['decide(quorum__node0_node1,value1)', 'decide(quorum__node0_node2,value0)']
98     : --1-1----------------
98     : ['decide(quorum__node0_node1,value2)', 'decide(quorum__node0_node2,value1)']
99     : 1---1----------------
99     : ['decide(quorum__node0_node1,value0)', 'decide(quorum__node0_node2,value1)']
100     : -1---1---------------
100     : ['decide(quorum__node0_node1,value1)', 'decide(quorum__node0_node2,value2)']
101     : 1----1---------------
101     : ['decide(quorum__node0_node1,value0)', 'decide(quorum__node0_node2,value2)']
102 (*) : ------11-------------
102     : ['decide(quorum__node1_node2,value0)', 'decide(quorum__node1_node2,value1)']
103     : ------1-1------------
103     : ['decide(quorum__node1_node2,value0)', 'decide(quorum__node1_node2,value2)']
104     : -------11------------
104     : ['decide(quorum__node1_node2,value1)', 'decide(quorum__node1_node2,value2)']
105     : ---11----------------
105     : ['decide(quorum__node0_node2,value0)', 'decide(quorum__node0_node2,value1)']
106     : ---1-1---------------
106     : ['decide(quorum__node0_node2,value0)', 'decide(quorum__node0_node2,value2)']
107     : ----11---------------
107     : ['decide(quorum__node0_node2,value1)', 'decide(quorum__node0_node2,value2)']
108     : 11-------------------
108     : ['decide(quorum__node0_node1,value0)', 'decide(quorum__node0_node1,value1)']
109     : 1-1------------------
109     : ['decide(quorum__node0_node1,value0)', 'decide(quorum__node0_node1,value2)']
110     : -11------------------
110     : ['decide(quorum__node0_node1,value1)', 'decide(quorum__node0_node1,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 18
num_suborbits: 1
111 (*) : -------0--1-1--------
111     : ['decision(value1)', 'vote(node0,value0)', '~decide(quorum__node1_node2,value1)']
112     : --------0--11--------
112     : ['decision(value2)', 'vote(node0,value0)', '~decide(quorum__node1_node2,value2)']
113     : ------0--1---1-------
113     : ['decision(value0)', 'vote(node0,value1)', '~decide(quorum__node1_node2,value0)']
114     : --------0--1-1-------
114     : ['decision(value2)', 'vote(node0,value1)', '~decide(quorum__node1_node2,value2)']
115     : ------0--1----1------
115     : ['decision(value0)', 'vote(node0,value2)', '~decide(quorum__node1_node2,value0)']
116     : -------0--1---1------
116     : ['decision(value1)', 'vote(node0,value2)', '~decide(quorum__node1_node2,value1)']
117     : ----0-----1----1-----
117     : ['decision(value1)', 'vote(node1,value0)', '~decide(quorum__node0_node2,value1)']
118     : -----0-----1---1-----
118     : ['decision(value2)', 'vote(node1,value0)', '~decide(quorum__node0_node2,value2)']
119     : ---0-----1------1----
119     : ['decision(value0)', 'vote(node1,value1)', '~decide(quorum__node0_node2,value0)']
120     : -----0-----1----1----
120     : ['decision(value2)', 'vote(node1,value1)', '~decide(quorum__node0_node2,value2)']
121     : ---0-----1-------1---
121     : ['decision(value0)', 'vote(node1,value2)', '~decide(quorum__node0_node2,value0)']
122     : ----0-----1------1---
122     : ['decision(value1)', 'vote(node1,value2)', '~decide(quorum__node0_node2,value1)']
123     : -0--------1-------1--
123     : ['decision(value1)', 'vote(node2,value0)', '~decide(quorum__node0_node1,value1)']
124     : --0--------1------1--
124     : ['decision(value2)', 'vote(node2,value0)', '~decide(quorum__node0_node1,value2)']
125     : 0--------1---------1-
125     : ['decision(value0)', 'vote(node2,value1)', '~decide(quorum__node0_node1,value0)']
126     : --0--------1-------1-
126     : ['decision(value2)', 'vote(node2,value1)', '~decide(quorum__node0_node1,value2)']
127     : 0--------1----------1
127     : ['decision(value0)', 'vote(node2,value2)', '~decide(quorum__node0_node1,value0)']
128     : -0--------1---------1
128     : ['decision(value1)', 'vote(node2,value2)', '~decide(quorum__node0_node1,value1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 36
num_suborbits: 1
129 (*) : ----------1-1---0----
129     : ['decision(value1)', 'vote(node0,value0)', '~vote(node1,value1)']
130     : -----------11----0---
130     : ['decision(value2)', 'vote(node0,value0)', '~vote(node1,value2)']
131     : ---------1---1-0-----
131     : ['decision(value0)', 'vote(node0,value1)', '~vote(node1,value0)']
132     : -----------1-1---0---
132     : ['decision(value2)', 'vote(node0,value1)', '~vote(node1,value2)']
133     : ---------1----10-----
133     : ['decision(value0)', 'vote(node0,value2)', '~vote(node1,value0)']
134     : ----------1---1-0----
134     : ['decision(value1)', 'vote(node0,value2)', '~vote(node1,value1)']
135     : ----------1-1------0-
135     : ['decision(value1)', 'vote(node0,value0)', '~vote(node2,value1)']
136     : -----------11-------0
136     : ['decision(value2)', 'vote(node0,value0)', '~vote(node2,value2)']
137     : ---------1---1----0--
137     : ['decision(value0)', 'vote(node0,value1)', '~vote(node2,value0)']
138     : -----------1-1------0
138     : ['decision(value2)', 'vote(node0,value1)', '~vote(node2,value2)']
139     : ---------1----1---0--
139     : ['decision(value0)', 'vote(node0,value2)', '~vote(node2,value0)']
140     : ----------1---1----0-
140     : ['decision(value1)', 'vote(node0,value2)', '~vote(node2,value1)']
141     : ----------1--0-1-----
141     : ['decision(value1)', 'vote(node1,value0)', '~vote(node0,value1)']
142     : -----------1--01-----
142     : ['decision(value2)', 'vote(node1,value0)', '~vote(node0,value2)']
143     : ---------1--0---1----
143     : ['decision(value0)', 'vote(node1,value1)', '~vote(node0,value0)']
144     : -----------1--0-1----
144     : ['decision(value2)', 'vote(node1,value1)', '~vote(node0,value2)']
145     : ---------1--0----1---
145     : ['decision(value0)', 'vote(node1,value2)', '~vote(node0,value0)']
146     : ----------1--0---1---
146     : ['decision(value1)', 'vote(node1,value2)', '~vote(node0,value1)']
147     : ----------1----1---0-
147     : ['decision(value1)', 'vote(node1,value0)', '~vote(node2,value1)']
148     : -----------1---1----0
148     : ['decision(value2)', 'vote(node1,value0)', '~vote(node2,value2)']
149     : ---------1------1-0--
149     : ['decision(value0)', 'vote(node1,value1)', '~vote(node2,value0)']
150     : -----------1----1---0
150     : ['decision(value2)', 'vote(node1,value1)', '~vote(node2,value2)']
151     : ---------1-------10--
151     : ['decision(value0)', 'vote(node1,value2)', '~vote(node2,value0)']
152     : ----------1------1-0-
152     : ['decision(value1)', 'vote(node1,value2)', '~vote(node2,value1)']
153     : ----------1--0----1--
153     : ['decision(value1)', 'vote(node2,value0)', '~vote(node0,value1)']
154     : -----------1--0---1--
154     : ['decision(value2)', 'vote(node2,value0)', '~vote(node0,value2)']
155     : ---------1--0------1-
155     : ['decision(value0)', 'vote(node2,value1)', '~vote(node0,value0)']
156     : -----------1--0----1-
156     : ['decision(value2)', 'vote(node2,value1)', '~vote(node0,value2)']
157     : ---------1--0-------1
157     : ['decision(value0)', 'vote(node2,value2)', '~vote(node0,value0)']
158     : ----------1--0------1
158     : ['decision(value1)', 'vote(node2,value2)', '~vote(node0,value1)']
159     : ----------1-----0-1--
159     : ['decision(value1)', 'vote(node2,value0)', '~vote(node1,value1)']
160     : -----------1-----01--
160     : ['decision(value2)', 'vote(node2,value0)', '~vote(node1,value2)']
161     : ---------1-----0---1-
161     : ['decision(value0)', 'vote(node2,value1)', '~vote(node1,value0)']
162     : -----------1-----0-1-
162     : ['decision(value2)', 'vote(node2,value1)', '~vote(node1,value2)']
163     : ---------1-----0----1
163     : ['decision(value0)', 'vote(node2,value2)', '~vote(node1,value0)']
164     : ----------1-----0---1
164     : ['decision(value1)', 'vote(node2,value2)', '~vote(node1,value1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 36
num_suborbits: 2
165 (*) : ----------1-1----1---
165     : ['decision(value1)', 'vote(node0,value0)', 'vote(node1,value2)']
166     : -----------11---1----
166     : ['decision(value2)', 'vote(node0,value0)', 'vote(node1,value1)']
167     : ---------1---1---1---
167     : ['decision(value0)', 'vote(node0,value1)', 'vote(node1,value2)']
168     : -----------1-1-1-----
168     : ['decision(value2)', 'vote(node0,value1)', 'vote(node1,value0)']
169     : ---------1----1-1----
169     : ['decision(value0)', 'vote(node0,value2)', 'vote(node1,value1)']
170     : ----------1---11-----
170     : ['decision(value1)', 'vote(node0,value2)', 'vote(node1,value0)']
171     : ----------1-1-------1
171     : ['decision(value1)', 'vote(node0,value0)', 'vote(node2,value2)']
172     : -----------11------1-
172     : ['decision(value2)', 'vote(node0,value0)', 'vote(node2,value1)']
173     : ---------1---1------1
173     : ['decision(value0)', 'vote(node0,value1)', 'vote(node2,value2)']
174     : -----------1-1----1--
174     : ['decision(value2)', 'vote(node0,value1)', 'vote(node2,value0)']
175     : ---------1----1----1-
175     : ['decision(value0)', 'vote(node0,value2)', 'vote(node2,value1)']
176     : ----------1---1---1--
176     : ['decision(value1)', 'vote(node0,value2)', 'vote(node2,value0)']
177     : ----------1----1----1
177     : ['decision(value1)', 'vote(node1,value0)', 'vote(node2,value2)']
178     : -----------1---1---1-
178     : ['decision(value2)', 'vote(node1,value0)', 'vote(node2,value1)']
179     : ---------1------1---1
179     : ['decision(value0)', 'vote(node1,value1)', 'vote(node2,value2)']
180     : -----------1----1-1--
180     : ['decision(value2)', 'vote(node1,value1)', 'vote(node2,value0)']
181     : ---------1-------1-1-
181     : ['decision(value0)', 'vote(node1,value2)', 'vote(node2,value1)']
182     : ----------1------11--
182     : ['decision(value1)', 'vote(node1,value2)', 'vote(node2,value0)']
201 (*) : ----------1------1--1
201     : ['decision(value1)', 'vote(node1,value2)', 'vote(node2,value2)']
202     : -----------1----1--1-
202     : ['decision(value2)', 'vote(node1,value1)', 'vote(node2,value1)']
203     : ---------1-------1--1
203     : ['decision(value0)', 'vote(node1,value2)', 'vote(node2,value2)']
204     : -----------1---1--1--
204     : ['decision(value2)', 'vote(node1,value0)', 'vote(node2,value0)']
205     : ---------1------1--1-
205     : ['decision(value0)', 'vote(node1,value1)', 'vote(node2,value1)']
206     : ----------1----1--1--
206     : ['decision(value1)', 'vote(node1,value0)', 'vote(node2,value0)']
207     : ----------1---1-----1
207     : ['decision(value1)', 'vote(node0,value2)', 'vote(node2,value2)']
208     : -----------1-1-----1-
208     : ['decision(value2)', 'vote(node0,value1)', 'vote(node2,value1)']
209     : ---------1----1-----1
209     : ['decision(value0)', 'vote(node0,value2)', 'vote(node2,value2)']
210     : -----------11-----1--
210     : ['decision(value2)', 'vote(node0,value0)', 'vote(node2,value0)']
211     : ---------1---1-----1-
211     : ['decision(value0)', 'vote(node0,value1)', 'vote(node2,value1)']
212     : ----------1-1-----1--
212     : ['decision(value1)', 'vote(node0,value0)', 'vote(node2,value0)']
213     : ----------1---1--1---
213     : ['decision(value1)', 'vote(node0,value2)', 'vote(node1,value2)']
214     : -----------1-1--1----
214     : ['decision(value2)', 'vote(node0,value1)', 'vote(node1,value1)']
215     : ---------1----1--1---
215     : ['decision(value0)', 'vote(node0,value2)', 'vote(node1,value2)']
216     : -----------11--1-----
216     : ['decision(value2)', 'vote(node0,value0)', 'vote(node1,value0)']
217     : ---------1---1--1----
217     : ['decision(value0)', 'vote(node0,value1)', 'vote(node1,value1)']
218     : ----------1-1--1-----
218     : ['decision(value1)', 'vote(node0,value0)', 'vote(node1,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
183 (*) : -------0--1--0-------
183     : ['decision(value1)', '~decide(quorum__node1_node2,value1)', '~vote(node0,value1)']
184     : --------0--1--0------
184     : ['decision(value2)', '~decide(quorum__node1_node2,value2)', '~vote(node0,value2)']
185     : ------0--1--0--------
185     : ['decision(value0)', '~decide(quorum__node1_node2,value0)', '~vote(node0,value0)']
186     : ----0-----1-----0----
186     : ['decision(value1)', '~decide(quorum__node0_node2,value1)', '~vote(node1,value1)']
187     : -----0-----1-----0---
187     : ['decision(value2)', '~decide(quorum__node0_node2,value2)', '~vote(node1,value2)']
188     : ---0-----1-----0-----
188     : ['decision(value0)', '~decide(quorum__node0_node2,value0)', '~vote(node1,value0)']
189     : -0--------1--------0-
189     : ['decision(value1)', '~decide(quorum__node0_node1,value1)', '~vote(node2,value1)']
190     : --0--------1--------0
190     : ['decision(value2)', '~decide(quorum__node0_node1,value2)', '~vote(node2,value2)']
191     : 0--------1--------0--
191     : ['decision(value0)', '~decide(quorum__node0_node1,value0)', '~vote(node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 9
num_suborbits: 1
192 (*) : ----------1--0--0----
192     : ['decision(value1)', '~vote(node0,value1)', '~vote(node1,value1)']
193     : -----------1--0--0---
193     : ['decision(value2)', '~vote(node0,value2)', '~vote(node1,value2)']
194     : ---------1--0--0-----
194     : ['decision(value0)', '~vote(node0,value0)', '~vote(node1,value0)']
195     : ----------1--0-----0-
195     : ['decision(value1)', '~vote(node0,value1)', '~vote(node2,value1)']
196     : -----------1--0-----0
196     : ['decision(value2)', '~vote(node0,value2)', '~vote(node2,value2)']
197     : ---------1--0-----0--
197     : ['decision(value0)', '~vote(node0,value0)', '~vote(node2,value0)']
198     : ----------1-----0--0-
198     : ['decision(value1)', '~vote(node1,value1)', '~vote(node2,value1)']
199     : -----------1-----0--0
199     : ['decision(value2)', '~vote(node1,value2)', '~vote(node2,value2)']
200     : ---------1-----0--0--
200     : ['decision(value0)', '~vote(node1,value0)', '~vote(node2,value0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 3
num_suborbits: 1
219 (*) : 0--0--0--1-----------
219     : ['decision(value0)', '~decide(quorum__node0_node1,value0)', '~decide(quorum__node0_node2,value0)', '~decide(quorum__node1_node2,value0)']
220     : -0--0--0--1----------
220     : ['decision(value1)', '~decide(quorum__node0_node1,value1)', '~decide(quorum__node0_node2,value1)', '~decide(quorum__node1_node2,value1)']
221     : --0--0--0--1---------
221     : ['decision(value2)', '~decide(quorum__node0_node1,value2)', '~decide(quorum__node0_node2,value2)', '~decide(quorum__node1_node2,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 12

[PRIME NOTE]: number of orbits before merging: 14

[PRIME NOTE]: number of primes: 222

[QRM NOTE]: Time elapsed since start: 8.439 seconds

[QRM NOTE]: Time elapsed since last: 0.075 seconds

[QRM NOTE]: Peak memory: 1586138 bytes


======================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/naive_consensus.ivy: node=3,value=3]

======================================================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 solution : []

Essensial at level 0 : {0, 11, 4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, 0), (3, 0), (4, -1), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, -1)]

Covered at level 0 : {1, 2, 3, 5, 6, 7, 8, 9, 10}

After reduction : 
 pending  : []
 solution : [0, 11, 4]


Before reduction : 
 pending  : []
 solution : [0, 11, 4]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, 0), (3, 0), (4, -1), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : []
 solution : [0, 11, 4]

[QRM NOTE]: Time elapsed since start: 8.517 seconds

[QRM NOTE]: Time elapsed since last: 0.078 seconds

[QRM NOTE]: Peak memory: 540132 bytes


==========================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/naive_consensus.ivy: node=3,value=3]

==========================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ------------------11-
0     : ['vote(node2,value0)', 'vote(node2,value1)']
1     : ------------------1-1
1     : ['vote(node2,value0)', 'vote(node2,value2)']
2     : -------------------11
2     : ['vote(node2,value1)', 'vote(node2,value2)']
3     : ---------------11----
3     : ['vote(node1,value0)', 'vote(node1,value1)']
4     : ---------------1-1---
4     : ['vote(node1,value0)', 'vote(node1,value2)']
5     : ----------------11---
5     : ['vote(node1,value1)', 'vote(node1,value2)']
6     : ------------11-------
6     : ['vote(node0,value0)', 'vote(node0,value1)']
7     : ------------1-1------
7     : ['vote(node0,value0)', 'vote(node0,value2)']
8     : -------------11------
8     : ['vote(node0,value1)', 'vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['vote(node2,value0)', 'vote(node2,value1)']

sign_func_name2args: {'0$vote': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$vote$0$0, node$0$vote$0$1], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$0], Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$vote$1$1]}

sig2const: {'node$0$vote$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$0$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$vote$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$0$vote$1$1': Const('value1', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$vote$0$0; node$0$vote$0$1], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$vote$1$0, value$0$vote$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$vote$0$0; node$0$vote$0$1, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$vote$1$0 | value$0$vote$1$1}

part_sig: ('node$0$vote$0$0; node$0$vote$0$1', 'value$0$vote$1$0 | value$0$vote$1$1')


---------- SigGenerator ----------

terms:  ['vote(node2,value0)', 'vote(node2,value1)']

func_name2symbol:  {'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')))}

sign_func_name2count:  {'0$vote': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$vote$0$0; node$0$vote$0$1], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$vote$1$0, value$0$vote$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$vote$0$0; node$0$vote$0$1, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$vote$1$0 | value$0$vote$1$1}

	sort: node

	identical_classes: {'node$0$vote$0; node$0$vote$0': [node$0$vote$0$0; node$0$vote$0$1]}

	identical_single_classes: {'node$0$vote$0; node$0$vote$0': node$0$vote$0$0; node$0$vote$0$1}

	identical_multi_classes: {}

	sort: value

	identical_classes: {'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'value$0$vote$1': [value$0$vote$1$0, value$0$vote$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall

quantifier mode: value: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE1', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['vote(NODE0,VALUE0)', 'vote(NODE0,VALUE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,VALUE0,VALUE1. ~vote(NODE0,VALUE0) | ~vote(NODE0,VALUE1) | VALUE0 = VALUE1


=== Prime Orbit 11 =====================
size : 3
num_suborbits: 1
219 (*) : 0--0--0--1-----------
219     : ['decision(value0)', '~decide(quorum__node0_node1,value0)', '~decide(quorum__node0_node2,value0)', '~decide(quorum__node1_node2,value0)']
220     : -0--0--0--1----------
220     : ['decision(value1)', '~decide(quorum__node0_node1,value1)', '~decide(quorum__node0_node2,value1)', '~decide(quorum__node1_node2,value1)']
221     : --0--0--0--1---------
221     : ['decision(value2)', '~decide(quorum__node0_node1,value2)', '~decide(quorum__node0_node2,value2)', '~decide(quorum__node1_node2,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~decide(quorum__node0_node1,value0)', '~decide(quorum__node0_node2,value0)', '~decide(quorum__node1_node2,value0)', 'decision(value0)']

sign_func_name2args: {'1$decide': [(Const('quorum__node0_node1', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))), (Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$decision': [(Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))),)]}

const2sigs: {Const('quorum__node0_node1', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$1$decide$0$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$1$decide$1$0, value$1$decide$1$1, value$1$decide$1$2, value$0$decision$0$0], Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$1$decide$0$1], Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$1$decide$0$2]}

sig2const: {'quorum$1$decide$0$0': Const('quorum__node0_node1', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$1$decide$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$1$decide$0$1': Const('quorum__node0_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$1$decide$1$1': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'quorum$1$decide$0$2': Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$1$decide$1$2': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'value$0$decision$0$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$1$decide$0$0, quorum$1$decide$0$1, quorum$1$decide$0$2], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$decide$1$0; value$1$decide$1$1; value$1$decide$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$1$decide$0$0 | quorum$1$decide$0$1 | quorum$1$decide$0$2, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$decide$1$0; value$1$decide$1$1; value$1$decide$1$2}

part_sig: ('quorum$1$decide$0$0 | quorum$1$decide$0$1 | quorum$1$decide$0$2', 'value$0$decision$0$0; value$1$decide$1$0; value$1$decide$1$1; value$1$decide$1$2')


---------- SigGenerator ----------

terms:  ['~decide(quorum__node0_node1,value0)', '~decide(quorum__node0_node2,value0)', '~decide(quorum__node1_node2,value0)', 'decision(value0)']

func_name2symbol:  {'decide': Const('decide', FunctionSort(EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'decision': Const('decision', FunctionSort(EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort()))}

func_name2args_sort:  {'decide': (EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'decision': (EnumeratedSort('value', ('value0', 'value1', 'value2')),)}

sign_func_name2count:  {'1$decide': 3, '0$decision': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$1$decide$0$0, quorum$1$decide$0$1, quorum$1$decide$0$2], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decision$0$0; value$1$decide$1$0; value$1$decide$1$1; value$1$decide$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$1$decide$0$0 | quorum$1$decide$0$1 | quorum$1$decide$0$2, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decision$0$0; value$1$decide$1$0; value$1$decide$1$1; value$1$decide$1$2}

	sort: quorum

	identical_classes: {'quorum$1$decide$0': [quorum$1$decide$0$0, quorum$1$decide$0$1, quorum$1$decide$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$decide$0': [quorum$1$decide$0$0, quorum$1$decide$0$1, quorum$1$decide$0$2]}

	sort: value

	identical_classes: {'value$0$decision$0; value$1$decide$1; value$1$decide$1; value$1$decide$1': [value$0$decision$0$0; value$1$decide$1$0; value$1$decide$1$1; value$1$decide$1$2]}

	identical_single_classes: {'value$0$decision$0; value$1$decide$1; value$1$decide$1; value$1$decide$1': value$0$decision$0$0; value$1$decide$1$0; value$1$decide$1$1; value$1$decide$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: value: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$decide': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$decision': [[Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['decision(VALUE0)', '~decide(QUORUM0,VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall VALUE0. (exists QUORUM0. ~decision(VALUE0) | decide(QUORUM0,VALUE0))


=== Prime Orbit 4 =====================
size : 18
num_suborbits: 1
66 (*) : ------1-----------0--
66     : ['decide(quorum__node1_node2,value0)', '~vote(node2,value0)']
67     : -------1-----------0-
67     : ['decide(quorum__node1_node2,value1)', '~vote(node2,value1)']
68     : --------1-----------0
68     : ['decide(quorum__node1_node2,value2)', '~vote(node2,value2)']
69     : ------1--------0-----
69     : ['decide(quorum__node1_node2,value0)', '~vote(node1,value0)']
70     : -------1--------0----
70     : ['decide(quorum__node1_node2,value1)', '~vote(node1,value1)']
71     : --------1--------0---
71     : ['decide(quorum__node1_node2,value2)', '~vote(node1,value2)']
72     : ---1--------------0--
72     : ['decide(quorum__node0_node2,value0)', '~vote(node2,value0)']
73     : ----1--------------0-
73     : ['decide(quorum__node0_node2,value1)', '~vote(node2,value1)']
74     : -----1--------------0
74     : ['decide(quorum__node0_node2,value2)', '~vote(node2,value2)']
75     : ---1--------0--------
75     : ['decide(quorum__node0_node2,value0)', '~vote(node0,value0)']
76     : ----1--------0-------
76     : ['decide(quorum__node0_node2,value1)', '~vote(node0,value1)']
77     : -----1--------0------
77     : ['decide(quorum__node0_node2,value2)', '~vote(node0,value2)']
78     : 1--------------0-----
78     : ['decide(quorum__node0_node1,value0)', '~vote(node1,value0)']
79     : -1--------------0----
79     : ['decide(quorum__node0_node1,value1)', '~vote(node1,value1)']
80     : --1--------------0---
80     : ['decide(quorum__node0_node1,value2)', '~vote(node1,value2)']
81     : 1-----------0--------
81     : ['decide(quorum__node0_node1,value0)', '~vote(node0,value0)']
82     : -1-----------0-------
82     : ['decide(quorum__node0_node1,value1)', '~vote(node0,value1)']
83     : --1-----------0------
83     : ['decide(quorum__node0_node1,value2)', '~vote(node0,value2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['decide(quorum__node1_node2,value0)', '~vote(node2,value0)', 'member(node2,quorum__node1_node2)']

sign_func_name2args: {'0$decide': [(Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '1$vote': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))))], '0$member': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))))]}

const2sigs: {Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))): [quorum$0$decide$0$0, quorum$0$member$1$0], Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))): [value$0$decide$1$0, value$1$vote$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$vote$0$0, node$0$member$0$0]}

sig2const: {'quorum$0$decide$0$0': Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), 'value$0$decide$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$1$vote$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'value$1$vote$1$0': Const('value0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'node$0$member$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'quorum$0$member$1$0': Const('quorum__node1_node2', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$0$decide$0$0; quorum$0$member$1$0], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decide$1$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$member$0$0; node$1$vote$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$0$decide$0$0; quorum$0$member$1$0, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decide$1$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$member$0$0; node$1$vote$0$0}

part_sig: ('node$0$member$0$0; node$1$vote$0$0', 'quorum$0$decide$0$0; quorum$0$member$1$0', 'value$0$decide$1$0; value$1$vote$1$0')


---------- SigGenerator ----------

terms:  ['decide(quorum__node1_node2,value0)', '~vote(node2,value0)', 'member(node2,quorum__node1_node2)']

func_name2symbol:  {'decide': Const('decide', FunctionSort(EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'vote': Const('vote', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), BooleanSort()))}

func_name2args_sort:  {'decide': (EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'vote': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('value', ('value0', 'value1', 'value2'))), 'member': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))}

sign_func_name2count:  {'0$decide': 1, '1$vote': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): [quorum$0$decide$0$0; quorum$0$member$1$0], EnumeratedSort('value', ('value0', 'value1', 'value2')): [value$0$decide$1$0; value$1$vote$1$0], EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$member$0$0; node$1$vote$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')): quorum$0$decide$0$0; quorum$0$member$1$0, EnumeratedSort('value', ('value0', 'value1', 'value2')): value$0$decide$1$0; value$1$vote$1$0, EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$member$0$0; node$1$vote$0$0}

	sort: quorum

	identical_classes: {'quorum$0$decide$0; quorum$0$member$1': [quorum$0$decide$0$0; quorum$0$member$1$0]}

	identical_single_classes: {'quorum$0$decide$0; quorum$0$member$1': quorum$0$decide$0$0; quorum$0$member$1$0}

	identical_multi_classes: {}

	sort: value

	identical_classes: {'value$0$decide$1; value$1$vote$1': [value$0$decide$1$0; value$1$vote$1$0]}

	identical_single_classes: {'value$0$decide$1; value$1$vote$1': value$0$decide$1$0; value$1$vote$1$0}

	identical_multi_classes: {}

	sort: node

	identical_classes: {'node$0$member$0; node$1$vote$0': [node$0$member$0$0; node$1$vote$0$0]}

	identical_single_classes: {'node$0$member$0; node$1$vote$0': node$0$member$0$0; node$1$vote$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: value: QuantifierMode.forall

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$decide': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '1$vote': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('VALUE0', EnumeratedSort('value', ('value0', 'value1', 'value2')))]], '0$member': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__node0_node1', 'quorum__node0_node2', 'quorum__node1_node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(NODE0,QUORUM0)', '~vote(NODE0,VALUE0)', 'decide(QUORUM0,VALUE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,QUORUM0,VALUE0. ~member(NODE0,QUORUM0) | vote(NODE0,VALUE0) | ~decide(QUORUM0,VALUE0)


====================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/naive_consensus.ivy: node=3,value=3]

====================================================================================================================


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ------------------11-
0     : ['vote(node2,value0)', 'vote(node2,value1)']
1     : ------------------1-1
1     : ['vote(node2,value0)', 'vote(node2,value2)']
2     : -------------------11
2     : ['vote(node2,value1)', 'vote(node2,value2)']
3     : ---------------11----
3     : ['vote(node1,value0)', 'vote(node1,value1)']
4     : ---------------1-1---
4     : ['vote(node1,value0)', 'vote(node1,value2)']
5     : ----------------11---
5     : ['vote(node1,value1)', 'vote(node1,value2)']
6     : ------------11-------
6     : ['vote(node0,value0)', 'vote(node0,value1)']
7     : ------------1-1------
7     : ['vote(node0,value0)', 'vote(node0,value2)']
8     : -------------11------
8     : ['vote(node0,value1)', 'vote(node0,value2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall NODE0,VALUE0,VALUE1. ~vote(NODE0,VALUE0) | ~vote(NODE0,VALUE1) | VALUE0 = VALUE1
qcost : 6




=== Prime Orbit 11 =====================
size : 3
num_suborbits: 1
219 (*) : 0--0--0--1-----------
219     : ['decision(value0)', '~decide(quorum__node0_node1,value0)', '~decide(quorum__node0_node2,value0)', '~decide(quorum__node1_node2,value0)']
220     : -0--0--0--1----------
220     : ['decision(value1)', '~decide(quorum__node0_node1,value1)', '~decide(quorum__node0_node2,value1)', '~decide(quorum__node1_node2,value1)']
221     : --0--0--0--1---------
221     : ['decision(value2)', '~decide(quorum__node0_node1,value2)', '~decide(quorum__node0_node2,value2)', '~decide(quorum__node1_node2,value2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall VALUE0. (exists QUORUM0. ~decision(VALUE0) | decide(QUORUM0,VALUE0))
qcost : 4




=== Prime Orbit 4 =====================
size : 18
num_suborbits: 1
66 (*) : ------1-----------0--
66     : ['decide(quorum__node1_node2,value0)', '~vote(node2,value0)']
67     : -------1-----------0-
67     : ['decide(quorum__node1_node2,value1)', '~vote(node2,value1)']
68     : --------1-----------0
68     : ['decide(quorum__node1_node2,value2)', '~vote(node2,value2)']
69     : ------1--------0-----
69     : ['decide(quorum__node1_node2,value0)', '~vote(node1,value0)']
70     : -------1--------0----
70     : ['decide(quorum__node1_node2,value1)', '~vote(node1,value1)']
71     : --------1--------0---
71     : ['decide(quorum__node1_node2,value2)', '~vote(node1,value2)']
72     : ---1--------------0--
72     : ['decide(quorum__node0_node2,value0)', '~vote(node2,value0)']
73     : ----1--------------0-
73     : ['decide(quorum__node0_node2,value1)', '~vote(node2,value1)']
74     : -----1--------------0
74     : ['decide(quorum__node0_node2,value2)', '~vote(node2,value2)']
75     : ---1--------0--------
75     : ['decide(quorum__node0_node2,value0)', '~vote(node0,value0)']
76     : ----1--------0-------
76     : ['decide(quorum__node0_node2,value1)', '~vote(node0,value1)']
77     : -----1--------0------
77     : ['decide(quorum__node0_node2,value2)', '~vote(node0,value2)']
78     : 1--------------0-----
78     : ['decide(quorum__node0_node1,value0)', '~vote(node1,value0)']
79     : -1--------------0----
79     : ['decide(quorum__node0_node1,value1)', '~vote(node1,value1)']
80     : --1--------------0---
80     : ['decide(quorum__node0_node1,value2)', '~vote(node1,value2)']
81     : 1-----------0--------
81     : ['decide(quorum__node0_node1,value0)', '~vote(node0,value0)']
82     : -1-----------0-------
82     : ['decide(quorum__node0_node1,value1)', '~vote(node0,value1)']
83     : --1-----------0------
83     : ['decide(quorum__node0_node1,value2)', '~vote(node0,value2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall NODE0,QUORUM0,VALUE0. ~member(NODE0,QUORUM0) | vote(NODE0,VALUE0) | ~decide(QUORUM0,VALUE0)
qcost : 6



[QRM NOTE]: Time elapsed since start: 8.606 seconds

[QRM NOTE]: Time elapsed since last: 0.089 seconds

[QRM NOTE]: Peak memory: 2297978 bytes


===================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/naive_consensus.ivy: node=3,value=3]

===================================================================================================


New level: 1
 pending : []
 solution : [0, 11, 4]


Before reduction : 
 pending  : []
 solution : [0, 11, 4]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : []
 solution : [0, 11, 4]


Solution : [0, 11, 4] has cost 16.


Before backtrack at level 1
 pending : []
 solution : [0, 11, 4]

After backtrack at level 1
 pending : []
 solution : [0, 11, 4]


==================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/naive_consensus.ivy: node=3,value=3]

==================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 16

[MIN NOTE]: maximum branch and bound depth: 1

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 11, 4]

[MIN NOTE]: solution length: 3

invariant [invar_0] forall NODE0,VALUE0,VALUE1. ~vote(NODE0,VALUE0) | ~vote(NODE0,VALUE1) | VALUE0 = VALUE1 # qcost: 6

invariant [invar_11] forall VALUE0. (exists QUORUM0. ~decision(VALUE0) | decide(QUORUM0,VALUE0)) # qcost: 4

invariant [invar_4] forall NODE0,QUORUM0,VALUE0. ~member(NODE0,QUORUM0) | vote(NODE0,VALUE0) | ~decide(QUORUM0,VALUE0) # qcost: 6

[MIN NOTE]: number of total invariants: 3

[MIN NOTE]: total qCost: 16




[QRM NOTE]: Time elapsed since start: 8.656 seconds

[QRM NOTE]: Time elapsed since last: 0.049 seconds

[QRM NOTE]: Peak memory: 2277819 bytes


=============================================

	[IVY_CHECK] Ivy Check for Rmin

=============================================


=======================================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy]

=======================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 12: axiom1

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 46: invar_0
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 47: invar_11
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 48: invar_4

    The following action implementations are present:
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 20: implementation of cast_vote
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 25: implementation of collect_votes
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 30: implementation of learn_value

    The following initializers are present:
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 14: init[after2]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 46: invar_0 ... PASS
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 47: invar_11 ... PASS
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 48: invar_4 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:cast_vote
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 46: invar_0 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 47: invar_11 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 48: invar_4 ... PASS
        (internal) ext:collect_votes
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 46: invar_0 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 47: invar_11 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 48: invar_4 ... PASS
        (internal) ext:learn_value
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 46: invar_0 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 47: invar_11 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 48: invar_4 ... PASS

    The following program assertions are treated as assumptions:
        in action cast_vote when called from the environment:
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 21: assumption
        in action collect_votes when called from the environment:
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 26: assumption
        in action learn_value when called from the environment:
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy: line 31: assumption

OK
[IVY_CHECK RESULT]: PASS


========================================================================================================================

	[MUS]: Extract strengthening assertion for [ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.ivy]

========================================================================================================================

[MUS NOTE]: number of strengthening assertions: 3

[MUS NOTE]: min mus: {0, 1, 2}

invariant [invar_0] forall NODE0,VALUE0,VALUE1. ~vote(NODE0,VALUE0) | ~vote(NODE0,VALUE1) | VALUE0 = VALUE1 # qcost: 6

invariant [invar_11] forall VALUE0. (exists QUORUM0. ~decision(VALUE0) | decide(QUORUM0,VALUE0)) # qcost: 4

invariant [invar_4] forall NODE0,QUORUM0,VALUE0. ~member(NODE0,QUORUM0) | vote(NODE0,VALUE0) | ~decide(QUORUM0,VALUE0) # qcost: 6


==============================================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy]

==============================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 12: axiom1

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 40: invar6
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 46: invar_0
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 47: invar_11
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 48: invar_4

    The following action implementations are present:
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 20: implementation of cast_vote
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 25: implementation of collect_votes
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 30: implementation of learn_value

    The following initializers are present:
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 14: init[after2]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 40: invar6 ... PASS
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 46: invar_0 ... PASS
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 47: invar_11 ... PASS
        ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 48: invar_4 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:cast_vote
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 40: invar6 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 46: invar_0 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 47: invar_11 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 48: invar_4 ... PASS
        (internal) ext:collect_votes
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 40: invar6 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 46: invar_0 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 47: invar_11 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 48: invar_4 ... PASS
        (internal) ext:learn_value
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 40: invar6 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 46: invar_0 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 47: invar_11 ... PASS
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 48: invar_4 ... PASS

    The following program assertions are treated as assumptions:
        in action cast_vote when called from the environment:
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 21: assumption
        in action collect_votes when called from the environment:
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 26: assumption
        in action learn_value when called from the environment:
            ivybench/sym_quorum/ivy/naive_consensus.node_3_value_3.0.assert.ivy: line 31: assumption

OK
[IVY_CHECK RESULT]: PASS

[ASSERT_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 12.762 seconds

[QRM NOTE]: Time elapsed since last: 4.106 seconds

[QRM NOTE]: Peak memory: 2349363 bytes


**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/naive_consensus.ivy

**********************************************************************

[QRM RESULT]: PASS

